[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.0    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.34       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.0     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.8          #>  [19] tools_4.3.3         igraph_2.0.2        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.0 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.2.7          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.1     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.1         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.34     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.8        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.2.7        bslib_0.6.1       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] labeling_0.4.3                filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     highr_0.10                    #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] data.table_1.15.2             hms_1.1.3                     #>  [73] tidygraph_1.3.1               utf8_1.2.4                    #>  [75] XVector_0.42.0                ggrepel_0.9.5                 #>  [77] BiocVersion_3.18.1            foreach_1.5.2                 #>  [79] pillar_1.9.0                  RcppHNSW_0.6.0                #>  [81] later_1.3.2                   splines_4.3.3                 #>  [83] tweenr_2.0.3                  lattice_0.22-5                #>  [85] survival_3.5-8                bit_4.0.5                     #>  [87] RProtoBufLib_2.14.0           tidyselect_1.2.0              #>  [89] Biostrings_2.70.2             knitr_1.45                    #>  [91] gridExtra_2.3                 xfun_0.42                     #>  [93] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [95] timeDate_4032.109             stringi_1.8.3                 #>  [97] yaml_2.3.8                    evaluate_0.23                 #>  [99] codetools_0.2-19              ggraph_2.2.1                  #> [101] tibble_3.2.1                  BiocManager_1.30.22           #> [103] cli_3.6.2                     rpart_4.1.23                  #> [105] xtable_1.8-4                  systemfonts_1.0.6             #> [107] munsell_0.5.0                 jquerylib_0.1.4               #> [109] Rcpp_1.0.12                   globals_0.16.3                #> [111] png_0.1-8                     parallel_4.3.3                #> [113] ellipsis_0.3.2                pkgdown_2.0.7                 #> [115] gower_1.0.1                   readr_2.1.5                   #> [117] blob_1.2.4                    listenv_0.9.1                 #> [119] glmnet_4.1-8                  viridisLite_0.4.2             #> [121] ipred_0.9-14                  scales_1.3.0                  #> [123] prodlim_2023.08.28            purrr_1.0.2                   #> [125] crayon_1.5.2                  rlang_1.1.3                   #> [127] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1   5.30   6.71 #> 2   8.98   7.55 #> 3  35.3    4.97 #> 4  13.0   15.5  #> 5   7.03  10.4  #> 6  22.2    8.18 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>     .tsne1 .tsne2 #>      <dbl>  <dbl> #>  1   9.10   10.6  #>  2  -0.610  12.8  #>  3   4.70   35.3  #>  4   0.467  22.0  #>  5   8.97   17.7  #>  6  -5.29   23.7  #>  7  -3.58   13.8  #>  8 -11.6    23.4  #>  9  -4.22   21.2  #> 10   1.12    7.05 #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1  .umap2 #>     <dbl>   <dbl> #>  1  9.68   4.59   #>  2  8.90   3.55   #>  3  3.06  -0.0897 #>  4  2.76  -1.80   #>  5  9.87   4.21   #>  6  0.317 -2.52   #>  7  9.92   3.76   #>  8  2.23  -0.769  #>  9  5.43  -0.381  #> 10  8.30   5.75   #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] png_0.1-8           systemfonts_1.0.6   vctrs_0.6.5         #>  [10] stringr_1.5.1       pkgconfig_2.0.3     shape_1.4.6.1       #>  [13] fastmap_1.1.1       ellipsis_0.3.2      labeling_0.4.3      #>  [16] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [19] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          keras_2.13.0        tweenr_2.0.3        #>  [31] irlba_2.3.5.1       tensorflow_2.15.0   parallel_4.3.3      #>  [34] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [37] reticulate_1.35.0   parallelly_1.37.1   rpart_4.1.23        #>  [40] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [43] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [46] base64enc_0.1-3     readr_2.1.5         flowCore_2.14.1     #>  [49] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [52] igraph_2.0.2        timechange_0.3.0    tidyselect_1.2.0    #>  [55] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [58] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [61] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [64] withr_3.0.0         evaluate_0.23       Rtsne_0.17          #>  [67] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [70] polyclip_1.10-6     embed_1.1.3         pillar_1.9.0        #>  [73] whisker_0.4.1       foreach_1.5.2       stats4_4.3.3        #>  [76] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [79] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [82] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [85] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [88] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [91] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [94] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [97] ggforce_0.4.2       cli_3.6.2           tfruns_1.5.2        #> [100] textshaping_0.3.7   fansi_1.0.6         cytolib_2.14.1      #> [103] viridisLite_0.4.2   lava_1.8.0          uwot_0.1.16         #> [106] gtable_0.3.4        zeallot_0.1.0       sass_0.4.8          #> [109] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [112] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [115] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [118] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.2.7          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.1         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.1     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.2        timechange_0.3.0    tidyselect_1.2.0    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.8          #>  [94] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] philentropy_0.8.0             filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     ggforce_0.4.2                 #>  [53] MASS_7.3-60.0.1               lava_1.8.0                    #>  [55] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [57] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [59] httpuv_1.6.14                 future.apply_1.11.1           #>  [61] nnet_7.3-19                   glue_1.7.0                    #>  [63] promises_1.2.1                grid_4.3.3                    #>  [65] generics_0.1.3                recipes_1.0.10                #>  [67] gtable_0.3.4                  tzdb_0.4.0                    #>  [69] class_7.3-22                  tidyr_1.3.1                   #>  [71] data.table_1.15.2             hms_1.1.3                     #>  [73] tidygraph_1.3.1               utf8_1.2.4                    #>  [75] XVector_0.42.0                ggrepel_0.9.5                 #>  [77] BiocVersion_3.18.1            foreach_1.5.2                 #>  [79] pillar_1.9.0                  RcppHNSW_0.6.0                #>  [81] later_1.3.2                   splines_4.3.3                 #>  [83] tweenr_2.0.3                  lattice_0.22-5                #>  [85] survival_3.5-8                bit_4.0.5                     #>  [87] emdist_0.3-3                  RProtoBufLib_2.14.0           #>  [89] tidyselect_1.2.0              Biostrings_2.70.2             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] ggplot2_3.5.0                 readr_2.1.5                   #> [119] blob_1.2.4                    listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.2.7          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.0       bslib_0.6.1         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.1     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.2        #>  [49] timechange_0.3.0    tidyselect_1.2.0    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.0     tidyr_1.3.1         RProtoBufLib_2.14.0 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.8          #> [103] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34   cd38 #>   <dbl>   <dbl>  <dbl> #> 1  130.  3.18    0.862 #> 2  229. -0.949  10.6   #> 3  293.  4.93    1.35  #> 4  431.  0.0843 13.0   #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.0    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.34       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.0     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.8          #>  [19] tools_4.3.3         igraph_2.0.2        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.0 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.2.7          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.1     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.1         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] labeling_0.4.3                filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     highr_0.10                    #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] stringr_1.5.1                 RcppHNSW_0.6.0                #>  [83] later_1.3.2                   splines_4.3.3                 #>  [85] tweenr_2.0.3                  lattice_0.22-5                #>  [87] survival_3.5-8                bit_4.0.5                     #>  [89] RProtoBufLib_2.14.0           tidyselect_1.2.0              #>  [91] Biostrings_2.70.2             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   readr_2.1.5                   #> [119] blob_1.2.4                    listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  ggridges_0.5.6                #> [125] scales_1.3.0                  prodlim_2023.08.28            #> [127] purrr_1.0.2                   crayon_1.5.2                  #> [129] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.1     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.2        timechange_0.3.0    #>  [46] tidyselect_1.2.0    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.8          #>  [97] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.1     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.2        timechange_0.3.0    #>  [46] tidyselect_1.2.0    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.8          digest_0.6.34       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T (2024). tidytof: Analyze High-dimensional Cytometry Data Using Tidy Data Principles. R package version 0.99.0,  https://keyes-timothy.github.io/tidytof/, https://keyes-timothy.github.io/tidytof.","code":"@Manual{,   title = {tidytof: Analyze High-dimensional Cytometry Data Using Tidy Data Principles},   author = {Timothy Keyes},   year = {2024},   note = {R package version 0.99.0,  https://keyes-timothy.github.io/tidytof/},   url = {https://keyes-timothy.github.io/tidytof}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `cluster_col_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_cluster_name\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"time_col\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"time_col\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.distance_function_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.distance_function_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 16              #>  2 13              #>  3 9               #>  4 19              #>  5 19              #>  6 9               #>  7 9               #>  8 9               #>  9 20              #> 10 7               #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 9               #>  2 6               #>  3 18              #>  4 12              #>  5 5               #>  6 6               #>  7 6               #>  8 2               #>  9 14              #> 10 19              #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 1                   #>  2 7                   #>  3 3                   #>  4 2                   #>  5 1                   #>  6 8                   #>  7 4                   #>  8 1                   #>  9 2                   #> 10 6                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 5                   #>  2 6                   #>  3 2                   #>  4 2                   #>  5 3                   #>  6 10                  #>  7 10                  #>  8 9                   #>  9 1                   #> 10 12                  #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>       cd45    cd38   cd34   cd19 cluster_id #>      <dbl>   <dbl>  <dbl>  <dbl> <chr>      #>  1 -0.0692  0.285   1.75  -0.343 a          #>  2  0.302   2.12    0.830  0.868 s          #>  3  0.564  -0.337  -0.804  1.05  i          #>  4 -0.732   0.0620 -0.747  0.463 z          #>  5 -0.280   1.33    0.405 -2.20  v          #>  6  0.891   1.15   -0.613  0.358 r          #>  7 -0.285   0.192  -0.505 -0.123 t          #>  8 -1.28    0.837   0.399  0.329 t          #>  9  0.532   1.61   -0.373  0.693 b          #> 10 -0.391  -1.59    1.16  -0.363 y          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>        cd45     cd38     cd34     cd19 cluster_id #>       <dbl>    <dbl>    <dbl>    <dbl> <chr>      #>  1  0.416   -0.0549  -0.695    0.226   t          #>  2 -0.811    0.802    0.674   -0.247   d          #>  3  1.13    -0.218   -1.17    -0.354   l          #>  4  0.514   -0.853    1.11    -0.959   j          #>  5 -0.127   -0.115    0.840    0.696   p          #>  6  0.00882  1.18     0.463    0.0690  l          #>  7 -0.483    0.728   -0.210   -0.456   n          #>  8  1.59    -1.13     0.00641  0.909   y          #>  9  0.315    0.0125  -0.150    0.00140 s          #> 10  0.147    0.00315 -1.83     0.743   j          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 95 × 5 #>       cd45   cd38     cd34    cd19 cluster_id #>      <dbl>  <dbl>    <dbl>   <dbl> <chr>      #>  1 -1.18   -0.355 -2.25    -0.514  g          #>  2 -1.39   -0.266  0.671   -0.916  r          #>  3 -0.0662 -0.249  0.407   -0.0341 s          #>  4  0.324   0.379  0.697   -0.186  a          #>  5 -2.17   -2.24  -0.895    0.114  a          #>  6 -0.532   1.68   0.507    0.445  c          #>  7 -0.848  -0.836  0.340   -0.572  h          #>  8 -0.805  -1.24   0.00874  0.480  r          #>  9 -0.298  -1.97   1.40    -0.383  z          #> 10 -0.921   0.747  1.42    -1.29   w          #> # ℹ 85 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>      cd45   cd38     cd34   cd19 cluster_id #>     <dbl>  <dbl>    <dbl>  <dbl> <chr>      #>  1 -0.299 -1.19   0.223    1.02  m          #>  2  0.726  1.12   0.860    0.970 a          #>  3 -0.361  1.01   0.00652 -0.159 b          #>  4 -0.947  0.396 -0.836   -0.952 k          #>  5  1.51   2.26   0.961    0.164 j          #>  6 -0.209  0.126 -1.25    -1.08  e          #>  7  1.22   1.00  -1.42    -0.400 u          #>  8  0.534  2.94  -0.222    0.675 j          #>  9  0.143  0.236 -1.29    -1.27  r          #> 10  0.238  0.709 -0.00808  1.59  a          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1  0.392   1.62  -1.94   1.01  c          #>  2  0.726   1.12   0.860  0.970 a          #>  3 -0.920  -1.39  -0.800 -0.920 j          #>  4  0.0644 -0.297 -1.60   0.520 z          #>  5 -0.587   0.152 -1.27   3.11  o          #>  6 -1.23    0.513 -1.32   0.973 d          #>  7  0.615   1.89  -1.57  -0.552 t          #>  8 -0.707   1.13   0.536  1.08  l          #>  9  1.22    1.00  -1.42  -0.400 u          #> 10  0.534   2.94  -0.222  0.675 j          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 509 × 4 #>       cd45      cd38    cd34    cd19 #>      <dbl>     <dbl>   <dbl>   <dbl> #>  1 -1.00    0.353     0.283  -1.57   #>  2 -0.886   0.199     1.64   -0.417  #>  3  0.386   1.87      0.0963 -0.325  #>  4 -1.28   -1.74      1.02   -1.64   #>  5 -0.428   1.97     -0.960  -0.886  #>  6 -0.696  -0.0458    0.825   0.594  #>  7 -0.0576  1.67      0.984  -0.0994 #>  8  1.39    0.920     1.87    0.798  #>  9  2.40    0.000711  1.10   -0.262  #> 10 -2.04   -1.19     -0.184  -1.20   #> # ℹ 499 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 200 × 4 #>      cd45     cd38   cd34    cd19 #>     <dbl>    <dbl>  <dbl>   <dbl> #>  1 -1.00   0.353    0.283 -1.57   #>  2 -0.428  1.97    -0.960 -0.886  #>  3 -2.04  -1.19    -0.184 -1.20   #>  4 -1.52  -0.327   -0.195  0.177  #>  5 -0.398 -0.112   -1.63   0.182  #>  6 -0.643  0.493   -0.672  0.266  #>  7 -1.02   1.37    -1.63  -0.311  #>  8  2.26  -0.788   -1.67  -0.281  #>  9  0.180 -0.00392 -1.88   0.582  #> 10 -0.529  0.870    2.02  -0.0415 #> # ℹ 190 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 190 × 4 #>       cd45   cd38   cd34   cd19 #>      <dbl>  <dbl>  <dbl>  <dbl> #>  1 -0.315   0.160  1.03   0.820 #>  2 -1.34    0.138  1.64  -0.306 #>  3 -1.28   -1.74   1.02  -1.64  #>  4  0.487  -1.20  -0.728 -2.00  #>  5  1.39    0.920  1.87   0.798 #>  6 -0.0217  0.359  0.876 -0.866 #>  7  1.11    0.197 -0.411  0.936 #>  8  0.145   1.44  -0.984  1.05  #>  9  0.310  -1.39   0.195  1.41  #> 10 -0.281   0.265  1.11  -0.438 #> # ℹ 180 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>       cd45    cd38    cd34    cd19 cluster_id #>      <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1  0.644  -1.20   -0.232  -1.17   v          #>  2  2.04    1.48   -0.209  -1.32   j          #>  3  0.452  -0.0795  0.0191  1.38   x          #>  4 -0.886  -0.0508  0.359  -0.399  i          #>  5  0.0550 -0.366   0.696   0.765  p          #>  6 -0.747  -1.26    0.764   0.225  k          #>  7  1.18    0.667   0.981  -0.288  j          #>  8  0.870  -0.572   0.431  -0.0517 y          #>  9  1.35    0.408   0.328   0.775  x          #> 10  0.144   1.40    0.0902 -0.249  o          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 90 × 5 #>      cd45   cd38    cd34    cd19 cluster_id #>     <dbl>  <dbl>   <dbl>   <dbl> <chr>      #>  1 -0.350 -1.94  -0.824   1.21   a          #>  2 -0.302  0.423 -0.871   0.0792 a          #>  3 -1.29  -0.273 -1.44    0.806  a          #>  4 -0.376 -0.750 -0.0136 -1.13   a          #>  5  0.187 -1.31   0.439  -1.15   b          #>  6  0.422 -0.801  0.251  -1.35   b          #>  7 -0.397 -0.394 -2.26   -0.0954 b          #>  8  0.839  0.631 -0.724   2.08   b          #>  9 -0.260 -1.09   1.92   -1.23   c          #> 10 -0.534 -0.521  1.15    1.12   c          #> # ℹ 80 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34    cd19 .spade_density #>      <dbl>  <dbl>  <dbl>   <dbl>          <dbl> #>  1 -1.36    0.411  0.548  1.12                1 #>  2 -0.0788 -1.01   2.17   1.62                1 #>  3 -0.0631 -0.366  0.203  1.89                1 #>  4  0.225   0.467 -1.29   0.559               1 #>  5  1.20    1.28   1.03   0.828               1 #>  6 -0.786  -0.349 -0.575  0.980               1 #>  7 -0.562   1.67   0.808 -0.668               1 #>  8  0.0671 -1.00   1.24  -0.923               1 #>  9  1.45   -1.51  -1.56  -1.52                1 #> 10  1.48    0.414  1.22  -0.0824              1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34    cd19 .spade_density #>      <dbl>  <dbl>  <dbl>   <dbl>          <dbl> #>  1 -1.36    0.411  0.548  1.12              0.6 #>  2 -0.0788 -1.01   2.17   1.62              0.2 #>  3 -0.0631 -0.366  0.203  1.89              0.9 #>  4  0.225   0.467 -1.29   0.559             1   #>  5  1.20    1.28   1.03   0.828             0.4 #>  6 -0.786  -0.349 -0.575  0.980             1   #>  7 -0.562   1.67   0.808 -0.668             0.6 #>  8  0.0671 -1.00   1.24  -0.923             1   #>  9  1.45   -1.51  -1.56  -1.52              0   #> 10  1.48    0.414  1.22  -0.0824            0.4 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby         0.324      0.0821      -0.108      0.0729    0.0187   #> 2 mario         0.174      0.0791      -0.352      0.162     0.000622 #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45     0.324  #>  2 kirby   a          cd38     0.0821 #>  3 kirby   a          cd34    -0.108  #>  4 kirby   a          cd19     0.0729 #>  5 kirby   b          cd45     0.0187 #>  6 kirby   b          cd38    -0.102  #>  7 kirby   b          cd34     0.0402 #>  8 kirby   b          cd19    -0.408  #>  9 kirby   c          cd45    -0.389  #> 10 kirby   c          cd38     0.410  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@q_emd` `stim_cd38@q_emd` `stim_cd34@q_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                  NA                NA                NA #> 2 kirby                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@q_emd` <dbl>, `stim_cd45@z_emd` <dbl>, #> #   `stim_cd38@z_emd` <dbl>, `stim_cd34@z_emd` <dbl>, `stim_cd19@z_emd` <dbl>, #> #   `stim_cd45@n_emd` <dbl>, `stim_cd38@n_emd` <dbl>, `stim_cd34@n_emd` <dbl>, #> #   `stim_cd19@n_emd` <dbl>, `stim_cd45@i_emd` <dbl>, `stim_cd38@i_emd` <dbl>, #> #   `stim_cd34@i_emd` <dbl>, `stim_cd19@i_emd` <dbl>, `stim_cd45@h_emd` <dbl>, #> #   `stim_cd38@h_emd` <dbl>, `stim_cd34@h_emd` <dbl>, `stim_cd19@h_emd` <dbl>, #> #   `stim_cd45@d_emd` <dbl>, `stim_cd38@d_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 q          cd45   stim         8.56 #>  2 q          cd38   stim        14.1  #>  3 q          cd34   stim         7.86 #>  4 q          cd19   stim        17.9  #>  5 z          cd45   stim         5.38 #>  6 z          cd38   stim         8.33 #>  7 z          cd34   stim         9.05 #>  8 z          cd19   stim         4.89 #>  9 n          cd45   stim         8.50 #> 10 n          cd38   stim         4.99 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0365   0.0385   0.0325   0.0385   0.0588   0.0487   0.0264 #> 2 mario     0.0138   0.0493   0.0335   0.0237   0.0256   0.0434   0.0296 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0365   0.0385   0.0325   0.0385   0.0588   0.0487   0.0264 #> 2 mario     0.0138   0.0493   0.0335   0.0237   0.0256   0.0434   0.0296 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@e_jsd` `stim_cd38@e_jsd` `stim_cd34@e_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby                  NA                NA                NA #> 2 mario                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@e_jsd` <dbl>, `stim_cd45@j_jsd` <dbl>, #> #   `stim_cd38@j_jsd` <dbl>, `stim_cd34@j_jsd` <dbl>, `stim_cd19@j_jsd` <dbl>, #> #   `stim_cd45@q_jsd` <dbl>, `stim_cd38@q_jsd` <dbl>, `stim_cd34@q_jsd` <dbl>, #> #   `stim_cd19@q_jsd` <dbl>, `stim_cd45@h_jsd` <dbl>, `stim_cd38@h_jsd` <dbl>, #> #   `stim_cd34@h_jsd` <dbl>, `stim_cd19@h_jsd` <dbl>, `stim_cd45@c_jsd` <dbl>, #> #   `stim_cd38@c_jsd` <dbl>, `stim_cd34@c_jsd` <dbl>, `stim_cd19@c_jsd` <dbl>, #> #   `stim_cd45@i_jsd` <dbl>, `stim_cd38@i_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 e          cd45   stim        0.763 #>  2 e          cd38   stim        0.764 #>  3 e          cd34   stim        0.730 #>  4 e          cd19   stim        0.764 #>  5 j          cd45   stim        0.680 #>  6 j          cd38   stim        0.893 #>  7 j          cd34   stim        0.840 #>  8 j          cd19   stim        0.924 #>  9 q          cd45   stim        0.862 #> 10 q          cd38   stim        0.862 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby      0.05     0.042    0.03     0.032    0.028    0.036    0.04  #> 2 mario      0.054    0.04     0.038    0.034    0.04     0.036    0.042 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id  prop #>    <chr>   <chr>      <dbl> #>  1 kirby   a          0.05  #>  2 kirby   b          0.042 #>  3 kirby   c          0.03  #>  4 kirby   d          0.032 #>  5 kirby   e          0.028 #>  6 kirby   f          0.036 #>  7 kirby   g          0.04  #>  8 kirby   h          0.032 #>  9 kirby   i          0.052 #> 10 kirby   j          0.038 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby               0                  0.0769             0.0769 #> 2 mario               0.0714             0                  0.143  #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0      #>  2 kirby   a          cd38    0.0769 #>  3 kirby   a          cd34    0.0769 #>  4 kirby   a          cd19    0      #>  5 kirby   b          cd45    0.111  #>  6 kirby   b          cd38    0.148  #>  7 kirby   b          cd34    0.259  #>  8 kirby   b          cd19    0.0741 #>  9 kirby   c          cd45    0      #> 10 kirby   c          cd38    0.0588 #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  442  230  784  689   53  137  330  836  996    69 #>    [2,]  874  179  540  168  223  720  504  824  885   383 #>    [3,]  213   97  262  688  569  583  921  711  455   436 #>    [4,]  691  167  268  281  235  746  958  524  275   449 #>    [5,]  681   33  966  976  295  698  239  740   59   993 #>    [6,]  641  921  467  213  884  514  552  410  711     3 #>    [7,]  735  797   69  294   53  226  238  330  907   129 #>    [8,]  525  884  433  469  305  678  332  833  591     6 #>    [9,]  975  358  333  394  526  199  692  888  828    48 #>   [10,]  159  743   81  440  297  368  985  480   54   456 #>   [11,]  278  476  906  232  995  600  272  172  349    73 #>   [12,]  821  641  554  514  293  467  725  478  780   702 #>   [13,]   88  906  989  349  703  142   11  216  596   147 #>   [14,]  724  993  523   59  376  422  496  123  647   976 #>   [15,]  375  585  893  249  178  301  967  179  978   250 #>   [16,]  636  231  204  175  121  181  377  370  998   960 #>   [17,]  590  928  631  901  620  317  388  770  466   529 #>   [18,]  853   71  936  822  309  959  989   29  227   597 #>   [19,]  807  271  545  727  434  960  679  977  453   302 #>   [20,]   77  468  610  520  144  109  156  167  942   235 #>   [21,]  958  536  443  158  673  240  347  556  355   285 #>   [22,]  648   63  781  176  671  499  725  569  852   436 #>   [23,]  363  282  207  985  413  115  882  454  788   381 #>   [24,]  457   86  802  267  877  681  943  124  548   740 #>   [25,]  623  234  220  279   32  352  662  166  530   185 #>   [26,]  141  346  785  221  404  830  868  786   60   833 #>   [27,]  487  317  780   89  621  918  554   61   58   171 #>   [28,]  353  484  809  587  493  699   49  919   83   156 #>   [29,]  172  272  227  936  216   11  675  476  788   989 #>   [30,]   72   62  459  576  793  600  344  274  995   127 #>   [31,]  712   66  491  494  326  322   51  636  488   472 #>   [32,]   64  621  662  508  946  234    4  443   61   487 #>   [33,]    5  976   59  845  186  698  539  263  873   772 #>   [34,]   42  561  231  181   35  609   16  719  545   977 #>   [35,]   42  571   34  889  561  977  379  945  577   545 #>   [36,]  655  343  427  357  567  521  882  909  741   309 #>   [37,]  907  531  982  762  562  143  318  850  497   135 #>   [38,]  866  320  114  529  857  559  149  348  546   254 #>   [39,]  284  164  969  259  165  230  400  974  112   595 #>   [40,]  666  687  857  611  854  348  559  866  593   669 #>   [41,]  871  849  470  361  890  250  717  485  649   847 #>   [42,]  561  392  545   19  960   34   35  231  577   977 #>   [43,]  524  128  954  846  778  459  148  344  296   127 #>   [44,]  522  899  892  419  705  437  653  576  146   513 #>   [45,]   93  913  299  598  110  409  294  626  408   334 #>   [46,]  402  465   86  976  978  124  350  681  261   848 #>   [47,]  290  722  707  206  753  533  328  512  750   198 #>   [48,]   59  594  394  374  647  248  724  518  526     5 #>   [49,]  156  109  601  116   77  383  587  484  942   504 #>   [50,]  794  158  443  240  558  744  155  748  879   536 #>   [51,]  494  377  693  365  644  745  712   55  972   121 #>   [52,]  318  965  201  137  182  143  907  602  568    37 #>   [53,]  512   69  330  154    7  784  143  707  441   797 #>   [54,]  138  440  203  783  612   67  368  115   10    78 #>   [55,]  181  204  721  365  609  104  377   51  448   121 #>   [56,]  984  842  827  897  564  713  312  415   96   190 #>   [57,]  310  437  419  930  742  705  895  932   44   899 #>   [58,]  694  668  551  918   75   89  751  409  778   652 #>   [59,]  724  976   48   33  523   14  993    5  394   647 #>   [60,]   26  830  989  983  868  141  633  404  386   902 #>   [61,]  275   64  758  825  840  554  471  487  800    27 #>   [62,]  459  778   30  110  102   72  335  817  203   385 #>   [63,]  499  648  852  731  436   22  947  569  129   584 #>   [64,]   61   32  532  534  275  487  846  148  233   443 #>   [65,]  686  334  451  464  735  629   41  373  663   690 #>   [66,]  712   31  491  693   51  494  854  130  326   488 #>   [67,]  203  122  296  247  440  704  335  138  459   102 #>   [68,]  106  861  815  557  816  851  640  398  910   937 #>   [69,]  970   53    7  133  441  784  330  329  710   735 #>   [70,]  628  243  198  458  990  176  388  669  916   570 #>   [71,]  822  959  309  100   18  407  917  788  936   227 #>   [72,]  459   30  706  296  210  335   62   67  502   128 #>   [73,]  643  600  663  516  513  522  576  808  451   717 #>   [74,]  362  315  338  202  679  271  952  482  434   224 #>   [75,]  668  652   58  694  299  110  252  913   93   409 #>   [76,]  961  804  291  635  340  423  420  875  812   930 #>   [77,]   20  610  468  942  520  109  144  156  167   761 #>   [78,]  420  612  517  895  297  961  115  340  860    54 #>   [79,]  676  188  500  579  911  215  878  247  879   706 #>   [80,]  209  630  429  567  521  860  829 1000  654   357 #>   [81,]  385  258  440  578  817   10  207  138  335   159 #>   [82,]  454  391   23  381  282  152  363  763  207   592 #>   [83,]  608  481  587  933   28  103  229  484  424   714 #>   [84,]  166  384  279  968  787  662  825  194  293   554 #>   [85,]  304  345  531  497  738  873  632   37  964   808 #>   [86,]  350  681  465  496  976  873   46  457  887   366 #>   [87,]  417  690  617  723  485  686  161  624  795   978 #>   [88,]  245   13  147  541  703  278  596   11  272   172 #>   [89,]  780   27  918  409  524   58  778  680  268    43 #>   [90,]  492  615  839  801  935  219  782  313  517   480 #>   [91,]  283  319  531  497  483  696  132  304  738   412 #>   [92,]  403  922  775  461  378  169  316  560  657   209 #>   [93,]  299   45  110  598  913  252  460  626  102   409 #>   [94,]  854  130  444  351  559   66  491  462   40   857 #>   [95,]  120  189  965  426  206  599  359  289  842   435 #>   [96,]  118  113  564  709  836  837  354  132  602   189 #>   [97,]  921    3  410  468  266  455  520  144  552   954 #>   [98,]  314  146  832  895  128  180  150  460  274   810 #>   [99,]  622  489  820  411  131  764  756  604  746   164 #>  [100,]  917  407  822  851   71  788  815  839  959   661 #>  [101,]  770  739  466   17  380  928  857  590  631   620 #>  [102,]  368  122  704  110  778  203  299  810  440    62 #>  [103,]  771  933   83  229  872  905  608  714  481   818 #>  [104,]  121  755  365  745  579  676  783  769   55   500 #>  [105,]  366  632  966  873  912  932  423  887  582   219 #>  [106,]   68  815  851  557  839  100  861  788  971    90 #>  [107,]  768  937  475  244  861  398   68  550  971   212 #>  [108,]  428  439  241  645  596  988   13  332  142   305 #>  [109,]  235  401   20  156   77  779  292   49  610   167 #>  [110,]  299   93  102  778   62  598   45  460   75   368 #>  [111,]  667  174  323  886  651  519  777  205  341   843 #>  [112,]  238  893  617  969  178  375  970  259  339   284 #>  [113,]  118  709  354  191  837   96  602  836  132   544 #>  [114,]  660  659  478  149  962  495  126  546   38   702 #>  [115,]  170   78  882   54  592  940  420  138  517   297 #>  [116,]  383  374  625  601   49  518  248  504  760   156 #>  [117,]  986  799  188  236   79  766  490  678  346   981 #>  [118,]   96  113  354  837  836  189  709  132  120   640 #>  [119,]  224  568  263  482  992  135  835  539  182   696 #>  [120,]  189  589  599  177  837  354  640  543  836   325 #>  [121,]  745  104  755  231  783  377  644  170  365   592 #>  [122,]  704  102  203  368   67  296  778  440  810   459 #>  [123,]  376  657  844  378  993   14  637  406  724   461 #>  [124,]  607   46   24  457   86  465  214  978  350   402 #>  [125,]  492  812  615  364   90  917  438  407  839   831 #>  [126,]  478  702  962  551  114  950  944  684  918   660 #>  [127,]  516  626  574  460  600  793  663  373  524   455 #>  [128,]  296   43   98  954  148   72  146  314  122    67 #>  [129,]  947  767  499  731  780  735  226   45  626    63 #>  [130,]  854  351  559  444  693  320   94  578  752   644 #>  [131,]  397  764  356  342  756  446  618   99  411   708 #>  [132,]  319  696   91  412  283  709  965  182  531   354 #>  [133,]  441   69  970   53  916    7  750  176  710   458 #>  [134,]  898    8  986  507  525  833  773  184  811   396 #>  [135,]  201  568  850  224  182  627  119   37  390   205 #>  [136,]  754  541  369  245  624   88  439  670  596   464 #>  [137,]  330  836  474  143  837   52  784  318  797   907 #>  [138,]   54  440  335  203  783   67  183   81   72   612 #>  [139,]  616  399  583  614  432  596  256  904  515   711 #>  [140,]  990  770  737  533  287  190  611  570  193   371 #>  [141,]   26  785  346  221  404  786  270  833  830   183 #>  [142,]  305  173  195  349  232  515  278  433  616   596 #>  [143,]  907  562  797  318   37  137  154  512  474   330 #>  [144,]  468  520  634   20  688   77   97  987  606     3 #>  [145,]  652  605  197  751  553   75  435  222  252   792 #>  [146,]  180   98  899  964  460  449  761  314   44   128 #>  [147,]  776   88  432  989  256  324   13  597  596   139 #>  [148,]  846  443   43  128  954  247  558  883  158   296 #>  [149,]  546  384  114  487  478  233  534  293  659   702 #>  [150,]  423  832  314  961  219  306   98  895  810   297 #>  [151,]  883  677  382  930  273  260  991  865  956   863 #>  [152,]  752  462  444  870  391  258  573   82  763   130 #>  [153,]  632  912  664  304  738  582  992  900  219   105 #>  [154,]  512  562  143   53  907  318  446    7  762   570 #>  [155,]  558  247  500  389  443  846  792  355   50   158 #>  [156,]  218  109   49   20   77  942  249  144  634   760 #>  [157,]  729  214   68  670  936  106  955  557  543    29 #>  [158,]  443  794  536   50  240   21  556  744  958   148 #>  [159,]   10  456  743  321  368  102   81  110  416   440 #>  [160,]  831  802  815  615  438  125  675   90  997   492 #>  [161,]  417  261  474  690   87  191  327  784  617   602 #>  [162,]  651  982  255  667  264  762  341  174  497   642 #>  [163,]  957  880  329  200  710  754  996  298  686   629 #>  [164,]  284  259   99  622   39  165  411  595  967   489 #>  [165,]  164  967  397  848  284  360  845  131   39   969 #>  [166,]  662  758   61  800  825  508  787  728  279    84 #>  [167,]  235    4  520  275   20  401  281  449  691   746 #>  [168,]  874    2   24  383  116  540  457  720  625   124 #>  [169,]  639  775  877  267   92  403  461  831  560   742 #>  [170,]  940  115  592  998  730  882  370  121  231   567 #>  [171,]  746  268  841  680  756  674  826  852  226   524 #>  [172,]  272   29  227   11  476   88  216  989  324   703 #>  [173,]  232  195  349  515  142  995  305  906  591   278 #>  [174,]  651  667  762  982  111  264  162  205  680   409 #>  [175,]  204  747  654  755  181  121  231  104   16    55 #>  [176,]   22  671  458  916  781  725  648   63  441   628 #>  [177,]  599  589  120  927  640  325  910  543  189   856 #>  [178,]  375  250  890   41  301  871  978  470  617   760 #>  [179,]  540  223  874    2  885   15  375  951  249   432 #>  [180,]  146  964  449  761   98  899  869  610  345   295 #>  [181,]  204   55  609  175  721  104  231  121  365   654 #>  [182,]  568  135  257  602  201  627  850  119  318   224 #>  [183,]  138   78  270  592  346  763  188   54  115   335 #>  [184,]  833  542  785   26  141  898  537    8  525    60 #>  [185,]  229  789  672  234  790  430  991  794  924   158 #>  [186,]  772  539  642  217  342  341  869   33  828   952 #>  [187,]  486  926  894  202  843  362  791  953  777   473 #>  [188,]   79  733  346  676  183  981   72  221  296   706 #>  [189,]  120  837  836  589  354  599  177  118  996   543 #>  [190,]  312  435  713  328  533  287   47  842  737   206 #>  [191,]  602  113  709  182  161  261  732  132  257   402 #>  [192,]  465  848  402  350  523  845  976  867   46   165 #>  [193,]  737  777  685  371  446  843  938  287  111   400 #>  [194,]  787  825  236  840  471  384  806  758    6   641 #>  [195,]  232  173  515  142  278  455  516  349  600   793 #>  [196,]  298  399  584  431  464  339  614  541  803   814 #>  [197,]  553  222  145  605  488  751  931  923  208   792 #>  [198,]  458  570  707  750  533  753  916  990  551   388 #>  [199,]  510  333  549  819  526  791  736  953  828   952 #>  [200,]  957  880  589  163  177  416  120  408  856   599 #>  [201,]  135  568  182  224  205  390  627   52  318   119 #>  [202,]  679  843  390  362  473  271   74  338  315   222 #>  [203,]   67  440  122  704  368  138   54  102  335   296 #>  [204,]  181   55  175  121  755  104   16   51  365   494 #>  [205,]  651  341  390  762  174  982  843  642  201   111 #>  [206,]  753  290  652   47   75  145  668  435  252   598 #>  [207,]  985   81  592   23  258   10  381  311  282   115 #>  [208,]  255  619  331  704  463  497  122  306  718   368 #>  [209,]  630  429  829  251  560   80  316  860  211   868 #>  [210,]  706  979  335  502  495   72   67  684  660   247 #>  [211,]  251  429  424  560  714  630  260  868  246   310 #>  [212,]  992  244  900  727  768  453  398  300  807   664 #>  [213,]    3  262  711  225  569    6  583  436  921    97 #>  [214,]  729  607  723  157  795   24  887  457  124   191 #>  [215,]  879  534  532  233  748  500  558  247  495   979 #>  [216,]  476  859  906  413  989  227   11   29  703   788 #>  [217,]  372  956  869  844  347  772  647  186  285   510 #>  [218,]  249  301  606  760  156  987  634  250  280   826 #>  [219,]  423  801  150  615  935  912  480   90  961   738 #>  [220,]  234  352  765   25  530  736  508  790  631   915 #>  [221,]  346   26  141  868  785  404  830  357  427   983 #>  [222,]  553  197  923  777  145  931  323  605  751   111 #>  [223,]  179  432  951    2  885  720  614  874  147   540 #>  [224,]  119  568  263  135  539  201  482  850  835   182 #>  [225,]  213  904  583  591  773  973  262    3  616   711 #>  [226,]  756  680  841    7  129  171  238  735  264   764 #>  [227,]   29  172  272  788  675  936  557  476  216   479 #>  [228,]  560  169  364  757  902  963  868  246  742   775 #>  [229,]  185  789  933  991  672  771  401  575  382   818 #>  [230,]    1  318  627  257  974  154  602  784   52    53 #>  [231,]  940  121  170  392  561  104  586   16  998   745 #>  [232,]  173  515  349  195  278  142  600  793  995   455 #>  [233,]  534  215  532  495  979  706  660  210  702   879 #>  [234,]  220  508   32  185  790  946  240  691  530     4 #>  [235,]  167  281  746  618  109  401    4  449  826   356 #>  [236,]  659  891  194  532  495  715  410  384  986   787 #>  [237,]  646  643  858  782  743  479  480  935  600    73 #>  [238,]  112    7  708  226  735  327  178  764   69   969 #>  [239,]  966  740  267  681  366    5  518  105  295   639 #>  [240,]  946  682  158  536  744  794  443   21   50   958 #>  [241,]  108  855  439  645  650  428  988  603  431   596 #>  [242,]  448  721   50  744  794  748  367  939  813   879 #>  [243,]  669  293  388  725  628   12  554  458  176   198 #>  [244,]  212  300  768  732  992  412  696  338  709   861 #>  [245,]   88  541  464  629  369  624  596  278  451    65 #>  [246,]  963  653  419  942  310  919   57  742  387   902 #>  [247,]  558  500   67  155  846  676  296  210  148   203 #>  [248,]  518  601  774  374  779  698  239  295  818     5 #>  [249,]  218  301  156  760   15  375  178  885  250   824 #>  [250,]  871  301  847  760  470   41  178  824  849   890 #>  [251,]  211  429  714  630  424  560  209  260  677   868 #>  [252,]  598  299   93  913   75  110   45  762  208   409 #>  [253,]  575  549  430  571  790  819  307  771  510   872 #>  [254,]  348  529  866  792  605  389  320  590  857   693 #>  [255,]  208  331  619  497  162  718  651  463  982   306 #>  [256,]  904  506  658  139  225  147  633  776  583   973 #>  [257,]  627  602  182  135  318  568  201   52  261   974 #>  [258,]   81  870  207  385  985  578  817  159  656    10 #>  [259,]  284  164  112  489  969   99  238  622  967    39 #>  [260,]  382  273  980  714  151  481  211  733  991   933 #>  [261,]  161  327  402  850  257  602  474  191  627   182 #>  [262,]  213    3  688  569  225  929    6  711  641   773 #>  [263,]  224  835  119  482  539  350  850  568  135    33 #>  [264,]  982  680  174  762  268  756  162  667  409   651 #>  [265,]  914  576  793  981  274  404  733  522  419   892 #>  [266,]  455  921   97  344  436  520  852  127  793   524 #>  [267,]  639  239  966  461  831  169  775  366  740   105 #>  [268,]  746    4  171  264  691  674  281  680  524   756 #>  [269,]  339   87  369  617  754  624  417  814  689   951 #>  [270,]  502  678  706  817  833  183  210  335   72   141 #>  [271,]  807  434  679   19  453  727  315  718  202   931 #>  [272,]  172   29  227   11  476  646  324  675  665   216 #>  [273,]  382  733  260  954  151  481  999  610  883    77 #>  [274,]  576  895  705  932  404  600   98  522  479   437 #>  [275,]   61  840  520  758  167   64  954    4  524   806 #>  [276,]  638  968  701  388  243   84  901  293   70   716 #>  [277,]  647  772  844  952  217  376  724  510  186   315 #>  [278,]  232  349  515  195   11  451  142  600  173   616 #>  [279,]  662  928  620  631   32  317  384  166  623   487 #>  [280,]  826  292  841  535  987  994  606  218  708   764 #>  [281,]  691  235  618  356    4  268  746  167  401   828 #>  [282,]  363   23  381  370  311  985  207  730  798   418 #>  [283,]   91  696  483  412  965  132  319  453  300   497 #>  [284,]  259  164  969   39  238  764   99  411  112   708 #>  [285,]  865  536  217  347  556  673   21  956  772   953 #>  [286,]  545  367  977  636   16  322  712   19  721   377 #>  [287,]  737  713  193  312  190  400  140  564  473   435 #>  [288,]  501  405  726  613  949  585  604  941  249   893 #>  [289,]  326   95  351  311  435  881  359  985   31   998 #>  [290,]   47  753  707  206  722  750  512  533  143   329 #>  [291,]  875  804   76  302  961  801  340  862  150   900 #>  [292,]  280  994  826  618  109  535  218  356  235   987 #>  [293,]   12  554  243  149  317  546  641  478  669   384 #>  [294,]  797  408  334  735  925   45    7  598  143   330 #>  [295,]  698  964  761  180  966    5  740  869  779   899 #>  [296,]  128   67   72  122  203  612  459  247   98    43 #>  [297,]  480  517  810  935  479  961  612   78  782   423 #>  [298,]  710  339  464  196  584  970   65  686  700   629 #>  [299,]   93  110   45  598  102  252  460  913  778    75 #>  [300,]  338  696  244  119  412  283  568  212  453   483 #>  [301,]  760  250  824  847  218  871  249  178  470   513 #>  [302,]  804  291  392  832  340  463  900  865  863   961 #>  [303,]  799  117  766  986  490  505  452  891  236   905 #>  [304,]   85  497  153  632  531  738  539  619  319   119 #>  [305,]  433  142  884  467  173  711  514  469  525   195 #>  [306,]  463  619  810  832  150  718  208  497  368   331 #>  [307,]  991  956  863  577  865  980  151  382  883   556 #>  [308,]  332  416  385  469  944  817  433  995  142   906 #>  [309,]   71  822  407  917  959  655  100  125   18    36 #>  [310,]   57  419  437  742  930  246  899  705  653    44 #>  [311,]  798  418  985  325  282  207   10  159  910   743 #>  [312,]  713  190  435  842  984  287  564  553  328   737 #>  [313,]  839  801  730   90  398  971  418  492  961   998 #>  [314,]  832   98  150  895  423  146  930  612  128   810 #>  [315,]  434  482  539   74  772  952  271  679  362   807 #>  [316,]  635  421  209  438  586  860  630   76   92   922 #>  [317,]   27  487  621  662  388  393  554  620  716   780 #>  [318,]   52  907  143   37  562  137  201  182  474   627 #>  [319,]   91  531  738  132  304  283  925   85  119   497 #>  [320,]  866  693  559  529   38  348  130  972  254   684 #>  [321,]  456  598  159  743  416  408  110   93  325   299 #>  [322,]  326  488  472  923  712  679  545  271  881   553 #>  [323,]  926  519  111  777  673  667  946  886  953   958 #>  [324,]  665  720  432  528  776  548  386  649  147   451 #>  [325,]  743  418  798  599  782  646  456  311  177   321 #>  [326,]  488  881  322  197  377  553  712  960  289   453 #>  [327,]  708  261  361   41  925  474  238  907  345    37 #>  [328,]  190  722   47  533  206  435  312  290  842    95 #>  [329,]  880  710  750  163   69  330  294   53  707   767 #>  [330,]  784  474  137  797   53  143    7  907  294    69 #>  [331,]  255  619  718  208  931  463  497  306  434   355 #>  [332,]  525  308  469  433  305  906  884  142  173     8 #>  [333,]  526  828  199  342  131  618  281  356  908   510 #>  [334,]  735  294  373  408   65  629  516  663  731   574 #>  [335,]  210  502  138  440  706  979  203  684   67   783 #>  [336,]  593  950  126  396  695  114  687   40  444   669 #>  [337,]  509  911  565  980  920  452  579  683  769   878 #>  [338,]  300  696   74  453  119  244  202  224  568   679 #>  [339,]  298  464  814  196  970  710  112  754  617   369 #>  [340,]  420  961  612  635  804   78   76  392  291   302 #>  [341,]  642  205  651  390  162  843  667  186  174   111 #>  [342,]  828  356  618  526  397  994  186  131  698   845 #>  [343,]  655  357   36  829  427  542  521  221  741   209 #>  [344,]  921  266  459  455  514  702   43   30  552    62 #>  [345,]   85  535  373  361  180  674  808  574  849   663 #>  [346,]  141  221   26  785  404  183  188  868  270   678 #>  [347,]  869  217  956  372  285  883   21  958  865   536 #>  [348,]  254  529  866  857  320  559  792  693  605   854 #>  [349,]  515  232  173  278  142  591  195  386  583   616 #>  [350,]  465   86  835  263  976  402   33   46  732   482 #>  [351,]  130  854  652  578  972  206   94  145  644    75 #>  [352,]  220  765  728  234  915   25  823  185  692   508 #>  [353,]  809   28  493  484  885  919  156  504  699    49 #>  [354,]  640  837  543  120  189  113  118  132  177   836 #>  [355,]  931  673  923  744   21  331  155  488  389   536 #>  [356,]  618  342  281  994  828  131  764  235  397   756 #>  [357,]  427  343  655  521  221   36  829  567  860   785 #>  [358,]  975    9  394   48  625  374  594  848  526   692 #>  [359,]  414  426  816  910   95  927  937  415  640   599 #>  [360,]  791  974  390  845  627  135  850  263  224   201 #>  [361,]  849  871  470   41  847  717  250  808  345   555 #>  [362,]   74  952  315  202  679  791  390  271  772   953 #>  [363,]  282   23  730  370  100  311  381  418  839   798 #>  [364,]  983  812  125  830  227  548  705  742  404    29 #>  [365,]  104   55  500  755   51  745  783  377  121   579 #>  [366,]  105  966  873  740  681  887  943  632  239   964 #>  [367,]  977  721  377  355   55  545   19  448  286   488 #>  [368,]  102  704  122  203  440  810  110   67   54    10 #>  [369,]  624  245  795  951  136  686  464  541  723    87 #>  [370,]  381  998  282  730  940  170  363  207  985   311 #>  [371,]  685  938  588  886  193  446  908  411  901   111 #>  [372,]  956  217  869  779  844  347  818  761  888   526 #>  [373,]  663  574  626  808  516  334  470  345  127   849 #>  [374,]  116  383  518  248  779  698  601   48  625     5 #>  [375,]  178  890   15  978  250  301  249  617   41   871 #>  [376,]  406  123  844  582   14  277  657  647  724   993 #>  [377,]   51  745  488  121  494  365   55  326  644   367 #>  [378,]  657  922  406  862  461  863  775   92  577   677 #>  [379,]  864  862  577  657  863  378  945  922  683   307 #>  [380,]  466  486  588  770  590  926  777  938  472    17 #>  [381,]  370  282  207  985  170  998   23  363  592   311 #>  [382,]  260  151  273  883  991  980  933  714  733   481 #>  [383,]  116  374  760  824  301  504  601   49  156   625 #>  [384,]  546  149  787   64  487  532  194  293  279   534 #>  [385,]  817   81   62  502  258  416  335  459  962   469 #>  [386,]  776  902  349  387  892  515  232  522  591   793 #>  [387,]  919  902  892  776  386  942  653  504  973   633 #>  [388,]  317  901  393  716  243  293   17   27  198   570 #>  [389,]  792  155  751  605  254  355  529  590  323   558 #>  [390,]  843  205  341  642  201  202  135  224  651   568 #>  [391,]  454  258  870   82  308  152  859  656   23   934 #>  [392,]  960  302  561  340  804  745  231  463  420   121 #>  [393,]  716  901  388  317  820  621  916   27  680   411 #>  [394,]  845  848  526  828   48   59  975  358  342    33 #>  [395,]  594  358  975    9   48  625  896  566  888   394 #>  [396,]  425  811  659  336  126  833  469  114  525   962 #>  [397,]  131  764  708  342  356  994  828  974  618   850 #>  [398,]  861  313  768  798  801  212  992  418  839   550 #>  [399,]  614  139  616  196  583  596  464  584  988   711 #>  [400,]  193  230  685  446  287  974   39  371  737   154 #>  [401,]  109  235  167  779  281   20  618   77    4   372 #>  [402,]  261  465   46  350  192  191  848  161  850   263 #>  [403,]   92  922  775  461  169  378  560  316  209   657 #>  [404,]  830  786  983  274  576  221  265  346   26   141 #>  [405,]  501  288  585  726  893   15  249  949  259   967 #>  [406,]  862  378  657  863  577  376  582  804  677   291 #>  [407,]  917  100  309  822  661   71  851  125  959   815 #>  [408,]  294  334  321  598  456   45  416   93  797   629 #>  [409,]  913   45   89  680  264  562  762   93  174    75 #>  [410,]  552  981  921   97  999  678  344  733  914     6 #>  [411,]  820   99  446  685  756  131  886  908  489   680 #>  [412,]  696  283  132  300  244   91  768  861  483   212 #>  [413,]  476  859  786  216  906  785   23  454  995   788 #>  [414,]  359  937  816  910  426  827  640  415  768   897 #>  [415,]  426  842  359  984   95   56  414  827  289   328 #>  [416,]  456  743  321  159  408  385  995  308   10   110 #>  [417,]   87  161  617  690  485  261  723  978  327   686 #>  [418,]  798  311  325  935  782  480   10  313  730   985 #>  [419,]  310   57  437  899   44  653  522  742  610   705 #>  [420,]  340  612   78  961  635  860  895   76  517   804 #>  [421,]  316  864   80  209  403  438   92  586  630   719 #>  [422,]  527   14  376  724  277  511  945  123  647   523 #>  [423,]  150  219  961  801  314  932  517  895  832   297 #>  [424,]  211  251  429  714  260  481  560 1000  868   963 #>  [425,]  396  573  270  833  962  660  502  659  469   495 #>  [426,]  927  359  589   95  599  189  415  910  120   177 #>  [427,]  882  357  521  655  567  785   36  221  860   343 #>  [428,]  108  439   13  749  934  703  596  597  898   241 #>  [429,]  630  209  251  211  829  560  868  424   80   860 #>  [430,]  790  682  575  549  530  536  794  240  185   158 #>  [431,]  803  584  700  988  645  196  855  596  781   541 #>  [432,]  951  324  147  139  665  614  776  528  451   720 #>  [433,]  305  884  469  525  467    8  514  332  142   173 #>  [434,]  271  718  453  315  807  679  539  331  727   900 #>  [435,]  312  145  553  190  713  206  652  197  483   965 #>  [436,]  711  569   63  821  266  499  641  803  852     3 #>  [437,]   57  419  932  705  310  742   44  899  522   895 #>  [438,]  997  125  316  160  831  407  815  661  917   971 #>  [439,]  108  428  136  541  241  596  431  988  645   754 #>  [440,]  203  138   54  335  368   67  783  704  102   122 #>  [441,]  133   69  916   53  970  458  750    7  512   176 #>  [442,]    1   53  512   47  441  707  133  230   69   784 #>  [443,]  158   21  846   50  148  536  794  240  558   155 #>  [444,]  130  462  854  870  559   94  152  752  578   351 #>  [445,]  955  113  729  118  157  544  354  709   96   214 #>  [446,]  685  411  131  886  154  974  174  562  667   111 #>  [447,]  585  759  405  484  501  288  625   15    2   941 #>  [448,]  242  721   55  367  365   51  693  377  977   181 #>  [449,]  674  524  180  146  610  761  535  520  987   268 #>  [450,]  563  903  282  370  363  381   82  730  359    23 #>  [451,]   65   73  663  649  278  513  470  464   41   665 #>  [452,]  490  337 1000  117  683  920  905  565   80   509 #>  [453,]  718  434  271  807  881  679  283  727  619   331 #>  [454,]  859  391  413   23   82  216  934  258  476   363 #>  [455,]  793  921  266  515  195   97  232  344  173   127 #>  [456,]  321  743  159  598  416  408  110   10  325   299 #>  [457,]   24  802   86  267  877  496  831  124  876   681 #>  [458,]  916  750  198  570  707  725  176  129  947   767 #>  [459,]   62  778   72   30  344   67  102  335  203    43 #>  [460,]  299  810  127   93  146  110   98  102  626   122 #>  [461,]  775  922  378   92  403  267  239  639  169   657 #>  [462,]  444  152   94  870  130  752  854  559  336   593 #>  [463,]  306  619  718  331  208  832  255  368  704   122 #>  [464,]  298   65  451  245  541  339  629  686  951   614 #>  [465,]  350  402  976   86   46  192  523  848  835   263 #>  [466,]  380  588  770  590  486   17  938  777  928   926 #>  [467,]  514  821  433  884  305    6   12  711  641   436 #>  [468,]  520  144   20   77  634   97  954  892  610   942 #>  [469,]  525  884  433  332    8  305  817  514  173   678 #>  [470,]  849  513   41  361  871  847  250  663  717   373 #>  [471,]  825  569  852  688  641  554  758   61  800   275 #>  [472,]  322  923  486  712  488   66   31  222  326   197 #>  [473,]  202  390  843  338  201  498  713  679  205   193 #>  [474,]  330  797  907  137  925  784  143  318  327   294 #>  [475,]  876  802  496  550  107  160  637  831  875   992 #>  [476,]  906  216  995   11  413  786  479  646  830   859 #>  [477,]  878  509  579  769  581  813  980  911  676   556 #>  [478,]  702  126  918  962  551  495  114  149  660   233 #>  [479,]  517  480  782  786  297  935  274  643  237   476 #>  [480,]  935  297  782  517  479  810  219  423  801   961 #>  [481,]  273  933  260  714  963  246  382  211  774    83 #>  [482,]  539  315  263  224  119  772  153  434  664   186 #>  [483,]  283  965  696   91  497  201  553  568  453   252 #>  [484,]  587   28  941   49  353  809  156  692  109   493 #>  [485,]  890  649   41  795  723  717  978  871  555   951 #>  [486,]  380  472  466  187  926  923  777  939  588   323 #>  [487,]   27  317  621  534   64  620  149  233   61   546 #>  [488,]  326  931  197  377  923  355  322  553  881   222 #>  [489,]   99  604  820  622  800  411  746  756  171   226 #>  [490,]  452  117  337  799  741  909  838  303 1000   654 #>  [491,]   31   66  712   94  854  289  351  472  984   326 #>  [492,]   90  615  801  839  517  125  935  219  782   961 #>  [493,]  580  809  353   28  699  904  256  658  506   885 #>  [494,]   51  377  693  712  644  204  745  121  130    31 #>  [495,]  660  706  979  210  659  233  702  962  502   534 #>  [496,]  993   86   14  376  637  457  802  267  582   976 #>  [497,]  304  619  255   85  718  531  208  162  982    91 #>  [498,]  473  835  360   74  338  627  257  263  224   568 #>  [499,]   63  731  584  947  129  436  803  767  648    22 #>  [500,]  247  558  676  155  215  879  748  579  365    79 #>  [501,]  405  288  726  949  604  613  585  622  941   489 #>  [502,]  335  270  706  210  817  962  979   72  495   684 #>  [503,]   18  959  542   71  537  309  822  749  343   859 #>  [504,]  919  653  942  387  383  824  156  760  892   963 #>  [505,]  948  766  905  715  608   83  806  672  999   787 #>  [506,]  658  256  633  973  776  904  902  580  147   699 #>  [507,]  773  225    8    6  591  213  552  262  699   973 #>  [508,]  820  621   32  662  234  800    4  746  691   166 #>  [509,]  579  769  337  477  911  609  878  721  676   980 #>  [510,]  549  199  819  217  526  647  952  277  372   333 #>  [511,]  945  123  422  657  637  376  527  379  577   378 #>  [512,]  154   53  562  707  143  570  916    7  907   318 #>  [513,]  470  849  871  847  649  717  250   73  555    41 #>  [514,]  467  821  884  344   12  702  433  305  921     6 #>  [515,]  232  349  173  195  455  583  278  616  591   142 #>  [516,]  127  600  574  663  373  626   73  793  195   334 #>  [517,]  297  479  480   78  935  895  961  423  782   492 #>  [518,]  248  601  774  374  239  698  779  295    5   818 #>  [519,]  946  323  886  111  938  908  667  926  240   777 #>  [520,]  468  144   20  954  524  275   77   97  449   167 #>  [521,]  860  567  427  882  635  357  655  115   78   630 #>  [522,]   44  892  899  705  576   73  419  437  793   513 #>  [523,]  724   59   14  976  993  848  465   33  350   845 #>  [524,]  674   43  449  520  626  127   89  268  954   460 #>  [525,]    8  469  884  433  332  305  833  173  678   467 #>  [526,]  828  342  333  394  845  186  217  618  510   779 #>  [527,]  422   14  724  523  511  896  277  376  123   945 #>  [528,]  665  720  649  555  324  951  795  890  485   943 #>  [529,]  866  254  348  792  320  389  605   38  694   620 #>  [530,]  790  682  430  234  240  575  736  794  185   220 #>  [531,]   37  319   85  497  925  304   91  907  850   982 #>  [532,]  534  215  233   64  879  846  495  148  748   706 #>  [533,]   47  198  753  190  290  206  611  707  328   652 #>  [534,]  233  532  215   64  846  487  558  495  879   247 #>  [535,]  987  841  826  606  280  674  994  345  574   449 #>  [536,]   21  158  556  240  958  443  744  285  794   673 #>  [537,]  542   60  184  898  757  989  503   26  343   506 #>  [538,]  939  734  242  813  920  448  581  477  530   721 #>  [539,]  482  186  772  224  304  315  263  119  434   497 #>  [540,]  874  179  978   15    2  375  223  951  585   890 #>  [541,]  245  596   88  464  629  431  136  196  298   399 #>  [542,]  184  343  537  357   36  785   60  655   26   427 #>  [543,]  354  723  858  837  120  690  177  925  646   670 #>  [544,]  709  113  732  191   96  118  244  132  602   354 #>  [545,]   19  286  977   42  367  807  960  322  727   271 #>  [546,]  149  384  233  487  534  114  478  293  659   532 #>  [547,]  671  613  595  133  259  441  176  701  726   284 #>  [548,]  720  665  324  528  675  943  639  877  705   364 #>  [549,]  510  819  575  430  790  199  217  888  372   253 #>  [550,]  875  900  291  398  727  313  212  801  912   971 #>  [551,]  668   58  694  918  478  126   75  753  780   944 #>  [552,]  410  981  921  678  344   97  591    6  455   914 #>  [553,]  197  222  145  435  605  923  483  488  751   931 #>  [554,]  825   12  471  641  293  852  780   27   61   569 #>  [555,]  943  871  649  717  849  824  890  513  847   740 #>  [556,]  883  865  536  158  285   21  794  443  991   347 #>  [557,]  782  788  106  646  935  325  839  227  675    90 #>  [558,]  155  247  500  846  215  443  534  148   67    50 #>  [559,]  130  320  854  693  857  444  348  866   94    38 #>  [560,]  429  211  251  630  209  775  868  246  742   963 #>  [561,]   42  392  769  231  977  863  804  302  340   911 #>  [562,]  143  154  907  762   37  982  512  318  913   409 #>  [563,]  450  903  370  282  381  363   82  730  940   661 #>  [564,]  842   52   96  965  137  312   56  713  118   602 #>  [565,]  889  683  920  337  980  509  477  911  769   878 #>  [566,]  192  395  848  523  759  358  625  976  465   394 #>  [567,]  521  882  427  860  357  654  170  635  115    36 #>  [568,]  201  135  182  224  119  850  696  627  531   263 #>  [569,]  436  641  471  852    3  688  213  711   63   262 #>  [570,]  916  458  198  707  512  154  750  680  393   990 #>  [571,]  253   35  872  307  889  945  577  511  379   575 #>  [572,]   83  608  587  484  103  818   49  594  933    28 #>  [573,]  962  660  684  979  752  425  502  210  763   578 #>  [574,]  373  663  626  516  127  731  535  470  674   334 #>  [575,]  549  430  790  771  253  819  530  229  888   991 #>  [576,]  274  793  600  522   30   73  705  265   44   404 #>  [577,]  862  863  406  657  378  804  302  865  307   677 #>  [578,]  684   81  644  972  962  258  870  783  440   335 #>  [579,]  769  509  676  911  477  500  104   79  878   721 #>  [580,]  493  904  809  506  256  658  353  699  633   973 #>  [581,]  878  813  924  477  920  748  980  509  879    79 #>  [582,]  912  153  632  406  105  900  376  875  664   366 #>  [583,]  616  139  515  711  349    3  225  213  278   591 #>  [584,]  803  499  700  431  767  298  196  629   63   731 #>  [585,]   15  405  893  249  967  179  375  501  540   178 #>  [586,]  635  719  940  340  316  291  231  860  313   804 #>  [587,]  484  941   49   28  728   83  692  109  156   401 #>  [588,]  938  466  371  519  590  631  380  777  908   685 #>  [589,]  177  599  120  927  189  200  856  640  354   910 #>  [590,]   17  389  792  519  928  605  620  254  323   111 #>  [591,]  515  349  173  552  921  914  973  455  232   225 #>  [592,]  763  755  207  170  783  115  138  183   54    81 #>  [593,]  336  950  126  687   40  669  695  944  444   396 #>  [594,]   48  625  818  374  888  518  248  358  116    59 #>  [595,]  411  164  901  284  716  259  371  685  393   489 #>  [596,]  541  616  142  988   88  245  139  399  431   583 #>  [597,]  703  989  853  147  749   88   13  172   29    18 #>  [598,]   93  252  299  321   45  456  110  408  913   294 #>  [599,]  177  927  589  120  910  325  640  189  354   856 #>  [600,]  516  576   73  793  127  232  195  274  643    30 #>  [601,]  774  248  518  374  818  779  116  383   49   761 #>  [602,]  257  182  191  627   52  318  474  137  261   132 #>  [603,]  988  855  929  645  711  803  436  569  821   431 #>  [604,]  489  823  800  622  820   99  726  613  728   746 #>  [605,]  751  792  145  197  652  389  694  553   58   254 #>  [606,]  987  826  535  634  841  218  280  144  574   674 #>  [607,]  214  124  729   24  457  978   46  795  417    87 #>  [608,]   83  587   28  505  484  948  481  572  103   766 #>  [609,]  181  509   55  579  721  769  204  337  654   104 #>  [610,]  761   20   77  449  899  468  180  419  520   167 #>  [611,]   40  533  666  687  198  857  328  990   47   140 #>  [612,]  420   78  895  340  961  296   54  297  314   517 #>  [613,]  701  726  823  604  489  671  968  501  622   547 #>  [614,]  399  139  885  432  464  196  616  583  596   541 #>  [615,]   90  492  801  219  675  935  839  782  517   423 #>  [616,]  583  139  711  515  349  399  278  142  596   436 #>  [617,]   87  417  978  178  112  375  485  890  161   969 #>  [618,]  356  342  281  828  235  994  779  292  698   691 #>  [619,]  463  306  718  331  255  208  497  304  832   810 #>  [620,]  928  487  279   32  317  662  621  389  590   529 #>  [621,]   27  317   32  487  946  508  662    4  268   393 #>  [622,]   99  489  604  820  164  949  411  823  259   764 #>  [623,]   25  787  279   32   64  672  662  166  185   384 #>  [624,]  369  795  686  723  245  951   87  670  690   464 #>  [625,]  116  374  383  594  358   48   49  518  601   248 #>  [626,]  574  127  373  674  516  663  731  524   93   460 #>  [627,]  257  974  135  182  201  850  318  568  602   261 #>  [628,]  781  243  176  725  855   70   22  458  803   671 #>  [629,]  700  334   65  278  245  584  767  464  451   541 #>  [630,]  429  209  860  829  251  211  812  560  868   221 #>  [631,]  928  662   17  279  621  620  901  590  588   508 #>  [632,]  153  912  664  738  304  105  873  582  366    85 #>  [633,]  973  658  902  506  699  776  386  387  591   225 #>  [634,]  606  987  892  144  468  218  520   20  513   574 #>  [635,]  860  340  420  586   76  521  961   78  804   316 #>  [636,]   16  545   31  326  286  712  494  322  377   960 #>  [637,]  378  657  123  922  876  496  461  267  376    92 #>  [638,]  276   84  701  968  243  388  293  669  628    70 #>  [639,]  267  742  239  169  831  437  966  775  932   105 #>  [640,]  910  354  816  599  177  325  120  861  798   589 #>  [641,]  569   12    6  821  471  554  825  436  467   514 #>  [642,]  341  953  390  651  162  186  205  843  667   952 #>  [643,]   73  237  858  932  600  646  808  479  274   576 #>  [644,]  783  972  745  578  440   81  755  684   54   335 #>  [645,]  988  855  431  305  603  433  803  467  711   142 #>  [646,]  237  858  782  643  743  935  325  479  557   480 #>  [647,]  277  844  217  772  724  510   48   59  376   526 #>  [648,]   63   22  852  499  671  569  436  800  731   176 #>  [649,]  717  485  555  513   41  665  890  849  528   943 #>  [650,]  241  695  134  773  855  811  950  645  603   108 #>  [651,]  174  205  982  162  762  667  341  111  642   264 #>  [652,]  145   75  668  206  694  605  351   58  751   753 #>  [653,]  942  504  419   44  919  899  892  246  522   387 #>  [654,]  567  175  104  231  609  755   80  121  181   719 #>  [655,]  343   36  427  357  521  309  882  860  567   829 #>  [656,]  258  927  856  870  599  985  311  200  589   416 #>  [657,]  378  406  862  922  577  123  863  376  461   637 #>  [658,]  506  633  776  256  973  902  387  147  386   904 #>  [659,]  495  660  114  236  702  478  233  962  811   546 #>  [660,]  495  979  962  659  114  706  210  684  573   233 #>  [661,]  407  917  100  971  851  719  438  815  309   839 #>  [662,]  279   32  166  317  508  621  631  928  487   620 #>  [663,]  373  574  470  516  808   73  626  849  127   513 #>  [664,]  153  992  632  912  738  900  304  119  482   319 #>  [665,]  324  528  649  720  513  548  555  451   73   943 #>  [666,]   40  857  687  611  348  866  669  529  559    38 #>  [667,]  174  111  886  651  162  264  958  519  268   341 #>  [668,]  694   58  551   75  652  753  918  409  751   605 #>  [669,]  243  293  950  687  388   40  593  198  551   126 #>  [670,]  624  543  177  723  369  272  245  172  200   589 #>  [671,]   22  176  648  781  726   63  613  499  489   133 #>  [672,]  789  806  185  924  229  840  787  715   64   273 #>  [673,]  953  926  744  355   21  536  931  323  285   923 #>  [674,]  449  524  626  841  535  268  987  574  826   171 #>  [675,]  615  227  887  858   90  557  219  548  492   643 #>  [676,]  500  579   79  769  247  911  188  104  558    67 #>  [677,]  930  151  804  863   76  340  314  406   57   883 #>  [678,]  552  981  270  410   72  921  884  344  469   706 #>  [679,]  202  271  434  453  315  718  923  931  331   807 #>  [680,]  264  756  226  171  409  268  174   89  913   746 #>  [681,]  740  966  366    5  873  943  239  555  295   105 #>  [682,]  240  790  744  430  530  794  536  946  158   673 #>  [683,]  565  980  337  714  251  911  889  260 1000   509 #>  [684,]  962  979  335  578  210  502  972  660  783   706 #>  [685,]  446  371  886  908  938  411  193  111  131   667 #>  [686,]   65  690  723  624   87  464  334  485  735   294 #>  [687,]   40  666  593  669  611  336  950  198  857   243 #>  [688,]  471    3  144  569  262  852   97  825  758   213 #>  [689,]  784  970   69  330  161    1   53   87  417   690 #>  [690,]  686  723   87  417  485  474   65  543  925   161 #>  [691,]  281    4  268  958  167  235  946  667  746   356 #>  [692,]  941  401  109   49  587  358  949  728    9   622 #>  [693,]   51  320  559  130  494  348  866   66  972   365 #>  [694,]   58  668  551   75  918  652  751  605  792   972 #>  [695,]  950  811  336  593  891  669  293  126   12   396 #>  [696,]  283  300  412  483  132  965   91  568  119   338 #>  [697,]  909  654  741  719   80  567  838  175   36   357 #>  [698,]  295  779  964  761    5  994  342  374  869   248 #>  [699,]  973  633  902  387  658  919  914  225  591   506 #>  [700,]  803  767  629  584  431  499  710  947  334   731 #>  [701,]  613  968  823  726  276  604  915  671  716   489 #>  [702,]  478  495  344  514  962  126  659  660  918   233 #>  [703,]  597  989   88   13  216  749  172  147   29   272 #>  [704,]  368  122  102  203   67  440  208  778  972   110 #>  [705,]  437  932  742  522   44  274  576  983   57   419 #>  [706,]  210  979  495  502  335   72  660  233  459   270 #>  [707,]  750  290  512  753  570  458   47   53  198   916 #>  [708,]  764  994  327  397  280  756  535  238  292   841 #>  [709,]  113  544  132  732  191  354  118   96  602   244 #>  [710,]  298  329  700  584   69  767  970  629  431   163 #>  [711,]  436  616  583  213  305  988  467  515  569   821 #>  [712,]   31   66   51  494  488  326  377  322  693   472 #>  [713,]  312  190  287  435  737  564  984  842  473    56 #>  [714,]  251  211  260  481  933  382  424  151  980   677 #>  [715,]  787  924  806  236  672  194  532  840  581   623 #>  [716,]  393  901  820  968  388  317  621  508  411   662 #>  [717,]  849  649  808  361  470   41  943  555  513   871 #>  [718,]  619  331  453  434  463  497  255  306  208   304 #>  [719,]  586  940  231  567  661  170  635  521  654   730 #>  [720,]  528  665  324  548  555  432  649  824  943   951 #>  [721,]   55  367  977  448  579  365  509  609  181   769 #>  [722,]   47  290  328  996  206  880  753  957  707   533 #>  [723,]  690  795  485  686  543   87  624  649  858   717 #>  [724,]   14   59  523  647  993   48  277  376   33   976 #>  [725,]  947  821   12  803  458  767   22  129  780   781 #>  [726,]  613  501  671  604  288  489  648  405  259   701 #>  [727,]  807  900  271   19  434  212  453  960  302   550 #>  [728,]  758  166  401  789  800  941  587  604  352   692 #>  [729,]  214  157  607   68  936  723  445  106  795   670 #>  [730,]  313  998  940  370  170  839  363  418  282   115 #>  [731,]  499  574  626   63  334  129  373  735  841   663 #>  [732,]  835  992  244  709  119  132  300  191  182   696 #>  [733,]  999  981  273  954  914  265  410  188  552   128 #>  [734,]  739  538  939  242  101  623   25  928  448   813 #>  [735,]    7  334  294  797   65  731  373  129  226   238 #>  [736,]  530  199  682  220  790  549  938  430  234   510 #>  [737,]  287  193  713  777  312  190  473  140  843   371 #>  [738,]  632  319  887  153  858  304   85  219  873   912 #>  [739,]  928  620  279  631   17  101  590  466  623   734 #>  [740,]  681  966  366  943  239  555  295  873  847   105 #>  [741,]  909  838  357   36  343  567   80  697  427   829 #>  [742,]  437  705   57  310  639  419  932  653   44   246 #>  [743,]  456  159  321   10  416  325  646  237  782   480 #>  [744,]  794  240  536  158  673  682  355   50   21   443 #>  [745,]  121  783  644  377  104   54  755  365  440   392 #>  [746,]  171  268  235  826  281  820  841    4  756   674 #>  [747,]  175  204  752  755  654  181   55  121  104   763 #>  [748,]  879  215  500  532   50  534  558  878  924   233 #>  [749,]  703  597  934  989  428  853   18   13  216    88 #>  [750,]  707  458  767  329  129  753  198  916  947   290 #>  [751,]  605  792  145  389  197  694   58   75  652   208 #>  [752,]  573  152  130  755  444  747  644  494  693   559 #>  [753,]  290  206  707  668   75  913  409   47  652    58 #>  [754,]  136  369  339  298  163  541  710  624  245   196 #>  [755,]  121  104  592  783  644  745  365  763  175   573 #>  [756,]  226  680  764  264  841  171  746  268  826   708 #>  [757,]  228  537   60  868  829  343  506  542  633   560 #>  [758,]  840  275   61  825  471  688  728  806  166   800 #>  [759,]  168  447  566  625  874  585  540    2  116    15 #>  [760,]  301  824  847  250  218  871  513  383  470   555 #>  [761,]  610  180  964  295  869  899  449  698  146   779 #>  [762,]  982  651   37  174  562  264  162  205  913   409 #>  [763,]  592  183  270  755   81  502  138  573  882   207 #>  [764,]  708  397  131  756  994  356  280   99  292   618 #>  [765,]  823  220  915  352  622  604  508  820  949   234 #>  [766,]  505  507  999  117  699  715  424  236  410   981 #>  [767,]  947  700  129  803  499  584  750  334  725   629 #>  [768,]  398  861  244  212  937  412  816  992  107   798 #>  [769,]  579  911  509  676  477  104  500  561  980    79 #>  [770,]  466   17  380  140  101  590  588  990  371   901 #>  [771,]  575  888  229  819  818  933  549  991  253   430 #>  [772,]  186  539  952  217  277  482  315  647  434   642 #>  [773,]  225  507  213  262  929    6  603    8  904   988 #>  [774,]  601  248  518  310  818  761  419  610  653   779 #>  [775,]  461   92  922  403  169  639  378  560  267   310 #>  [776,]  386  902  658  633  387  324  147  973  349   432 #>  [777,]  111  323  843  926  222  938  519  193  205   886 #>  [778,]  459   62  102  110  122  299  918  704   43    67 #>  [779,]  698  618  761  372  109  828  295  374  869   248 #>  [780,]   27   89  947  918  129  554  171  852  725    12 #>  [781,]   22  803  584  628  725  431  176  499  671   855 #>  [782,]  935  480  479  646  557  517  297  237   90   418 #>  [783,]  644  440  335  138   54  745  203  972   67   755 #>  [784,]  330  474   53  137  689   69  797    7  836   161 #>  [785,]  141   26  346  221  786  427  830  833  413   404 #>  [786,]  404  830  479  995  476  413  906  785  517   141 #>  [787,]  194  715  384  806   64  623  166  840  758   672 #>  [788,]  557  227  782  100  476  216  413  917  839   479 #>  [789,]  672  185  806  840  229  273  924  167  758   275 #>  [790,]  430  530  682  575  549  240  536  234  794   185 #>  [791,]  360  843  199  390  952  341  642  953  333   362 #>  [792,]  389  605  751  254  529  155  694  145  197    58 #>  [793,]  455  576  600  127  516  232  515   30  522   265 #>  [794,]  158   50  744  240  443  536  556  682  430    21 #>  [795,]  723  485  951  649  624  528  369  890  665    87 #>  [796,]  936  853  877   18  548  364  720   29  227   831 #>  [797,]  294  143  907  474  925  330    7  735  562   137 #>  [798,]  418  311  325  861  910  398  313  640  782   730 #>  [799,]  986  117  833  838  303  134  490  184  425   898 #>  [800,]  852  746  171  604  820   61  508  471  758   489 #>  [801,]  219   90  615  961  492  313  935  423  480   839 #>  [802,]  831  160  457  876  267  675   24  877  496   615 #>  [803,]  584  700  431  767  499  436  781  725  821   988 #>  [804,]  291  677  863   76  340  302  862  875  930   961 #>  [805,]  894  791  187  360  199  362  736  843  473   498 #>  [806,]  840  672  789  999  275  758  787   64  924   532 #>  [807,]  727  271   19  434  453  900  315  212  960   679 #>  [808,]  717  373  663  849  925  470  361   73  858   574 #>  [809,]  353  493   28  919  580  699  885  658  484   387 #>  [810,]  297  368  102  460  306  122  480   98  150   299 #>  [811,]  891  659  695  396  236  986  114  425  134   660 #>  [812,]  983  125   76  860  364  492  895  517  830   705 #>  [813,]  581  878  477  924  920   50  748  794  879   509 #>  [814,]  339  196  298  112  970  893  671  464  710   614 #>  [815,]  851  106  839  971   90  160  100  615  917   492 #>  [816,]  910  640  937  861  414  359   68  412  354   798 #>  [817,]  385  502   81   62  335  469  270  962  459   684 #>  [818,]  888  601  248  774  518  933  372  779  594   956 #>  [819,]  888  549  510  575  199  771  647  372  526   217 #>  [820,]  508  746  411   99  489  171  716  800  268   393 #>  [821,]  467   12  514  641  436  725  711  803  305   569 #>  [822,]   71  959  309  100  407  917   18  788  851   661 #>  [823,]  604  915  765  613  701  968  622  949  489   800 #>  [824,]  760  301  250  555  871  847  513  218  383   890 #>  [825,]  471  554  641   61  852  569  758  688  194   800 #>  [826,]  280  841  987  535  606  292  746  674  994   171 #>  [827,]  897   56  984  412  414  300  244  338   96   564 #>  [828,]  342  526  618  356  333  779  394  186  698   845 #>  [829,]  209  429  630  357  343  868  221  655  560   251 #>  [830,]  983  404  786  221   26  479  785  812  141   364 #>  [831,]  802  160  877  639  267  615  675  125  169   876 #>  [832,]  314  150   98  306  423  463  619  810  612   961 #>  [833,]  184  270  141  785  525    8   26  678  425   469 #>  [834,]  603  929  399  904  262  988  196  614   22   569 #>  [835,]  263  732  119  224  350  482  568  182  992   135 #>  [836,]  837  137  189  120  996  330  118  354  784   474 #>  [837,]  836  189  354  120  137  543  118  113  474   330 #>  [838,]  909  741  542  799   36  357  697  343  490   184 #>  [839,]   90  492  313  815  615  851  971  801  730   935 #>  [840,]  806  758  275  999   97  789  520   61  954   410 #>  [841,]  826  535  987  606  280  674  171  756  746   626 #>  [842,]  564   56  312   95  984  415  713  190   96   328 #>  [843,]  390  777  205  341  202  642  926  111  953   323 #>  [844,]  647  956  217  372  277  376  406  248  123    48 #>  [845,]  394  848   33  342  526  828  397  976   59   186 #>  [846,]  148  443   43  247  558  534  128   64  155   532 #>  [847,]  871  250  760  361  470  849  301  513   41   824 #>  [848,]  845  394  976   59   33  192  523  402  465    46 #>  [849,]  361  470  717   41  871  513  847  808  250   649 #>  [850,]  135  224  182  568   37  531  263  627  974   201 #>  [851,]  815  971  106  839  100  917  407   90   68   313 #>  [852,]   63  471  569  648  554  171  266  800  436   825 #>  [853,]   18  597  936  703  989   29  172  796  272   227 #>  [854,]   94  130  351  559  444  348  857   66   40   320 #>  [855,]  645  603  988  431  803  781  821  467  628   711 #>  [856,]  927  177  589  599  656  200  910  426  120   934 #>  [857,]  666  348   40  559  866  529  254   38  320   854 #>  [858,]  237  646  643  738  808  717  887  543  925   675 #>  [859,]  216  413  454  476  934  788  906   23  786   227 #>  [860,]  521  635  420   78  630  812  567  340   76   427 #>  [861,]  398  798  768   68  816  640  910  412  418   313 #>  [862,]  577  863  406  804  657  378  291  875  922   677 #>  [863,]  862  577  677  804  406  378  657  302  151   865 #>  [864,]  379  421  316  403   92  922  862  657  378   863 #>  [865,]  285  556  883  347  302  956  151  536  863    21 #>  [866,]  529  320  348  254   38  857  694  792  693   559 #>  [867,]  192  498  402  360  257  627  165  465  261   835 #>  [868,]  221  983  346  630   26  829  429  211  560   404 #>  [869,]  347  761  217  372  180  964  295  779  186   698 #>  [870,]  258  578  385   81  444  817  944  656  962   308 #>  [871,]  250  847   41  361  849  555  470  890  513   760 #>  [872,]  307  771  571  253  103  511  575  123  933   991 #>  [873,]  366  632  681  105  887   85  738  361  740   943 #>  [874,]  540    2  179  168  223  720  978  528   15   951 #>  [875,]  291   76  550  804  912  801  582  862  900   406 #>  [876,]  802  475  637  831  160  496  457  997  877   267 #>  [877,]  831  169  548  639  267  802   24  457  160   796 #>  [878,]  581  477  813  924   79  579  748  509  980   920 #>  [879,]  748  215  532  500  534  233  558   50   79   924 #>  [880,]  163  329  957  200  750  722  710  290  996   408 #>  [881,]  960  326  453  463  998  488  718  306  807   727 #>  [882,]  427  567  521  115  170  592  183   23  860   763 #>  [883,]  151  556  382  865  347  991  148  956  273   677 #>  [884,]  433  469  305  525  467    8  514    6  173   921 #>  [885,]  614  249  432  139  179  399  353  218  375   809 #>  [886,]  908  667  519  111  938  174  685  946  446   323 #>  [887,]  943  366  738  873  105  717  858  632  675   555 #>  [888,]  819  818  771  372  549  510  594   48  779   575 #>  [889,]  565  683  920   35  509  337  477  307  980   379 #>  [890,]  485   41  871  649  250  978  178  555  375   849 #>  [891,]  811  236  659  194  986  384  695  546  114   149 #>  [892,]  522   44  634  387  942  468  899  653  793   386 #>  [893,]   15  112  375  585  969  178  967  617  405   259 #>  [894,]  805  187  791  473  193  843  360  737  362   202 #>  [895,]  274  612  517   98   78  932  314  423  150   420 #>  [896,]  819  647  510  724  277  199  527  549  888   395 #>  [897,]  827   56   96  244  300  564  984  412  338   414 #>  [898,]  134  184  537    8  833  525  542  428  332   108 #>  [899,]   44  522  419  146  437  761  964  180  610   892 #>  [900,]  727  912  153  212  664  807  992  434  550   582 #>  [901,]  393  716  388   17  371  990  631  570  317   916 #>  [902,]  387  386  776  633  973  919  658  892  914   246 #>  [903,]  450  563  370  381  282   16  363   82  636   289 #>  [904,]  256  225  139  583  506  616  658  399  973   633 #>  [905,]  505  920  581  424  715  924  878  452  337   672 #>  [906,]  995  476   11  173  216  786  232   13  413   349 #>  [907,]  143   37  318  562  797  474  531  762  925   982 #>  [908,]  886  519  938  667  685  946  111  691  411   820 #>  [909,]  741  838   36  697  357  567  654  343  427    80 #>  [910,]  640  816  599  798  927  325  177  861  311   354 #>  [911,]  769  579  676  509  980  477   79  337  188   104 #>  [912,]  153  632  664  582  219  105  900  423  150   738 #>  [913,]  409   45   93  299  252  598  562  762   75   264 #>  [914,]  265  981  591  733  999  552   97  410  892   386 #>  [915,]  823  968  166  765  352  728  604  662  508    25 #>  [916,]  570  458  441  176  512  707  226  129  750   680 #>  [917,]  407  100  309  822  661  125   71  851  815   839 #>  [918,]   58  551  778   89  694  668  780  478  459    62 #>  [919,]  387  504  942  653  963  902  246  892  973   699 #>  [920,]  581  565  878  813  337  477  509  980  905   683 #>  [921,]  552  455  410   97  344  266    6  591    3   514 #>  [922,]  378   92  775  403  461  657  862  406  677   863 #>  [923,]  222  931  926  197  355  488  673  553  323   679 #>  [924,]  878  672  581  813  806  748  789  715  879   532 #>  [925,]  797  808  294  531  474  907  373   37  327   319 #>  [926,]  323  673  777  953  923  519  843  111  222   744 #>  [927,]  599  589  177  856  910  426  120  640  656   189 #>  [928,]  631  620  279   17  662  739  590   32  621   946 #>  [929,]  603  262  569  641  213  773  834    6  471   711 #>  [930,]  677   57  310  151  314  437   76  895  804   419 #>  [931,]  355  331  923  488  673  197  718  255  222   208 #>  [932,]  437  705  274  895  423  643  105  742   98   522 #>  [933,]  481  229  818  991  382  714  260  774  273   771 #>  [934,]  859  216  749  703   13  454  308  476  906    88 #>  [935,]  782  480  297  517  219  479  801   90  615   418 #>  [936,]   29  227  853  172   18  675  272  796   71   548 #>  [937,]  816  768  414  861  107  244  359   68  910   412 #>  [938,]  588  519  908  886  371  685  777  323  111   926 #>  [939,]  530  682  242  744  486  794  790  240  430   380 #>  [940,]  170  730  998  231  115  370  586  121  719   313 #>  [941,]  587  692  484  728   49  949  604  109  401   156 #>  [942,]  653  504  919  892   77  387  246   20  419   468 #>  [943,]  555  740  717  887  366  649  681  871  849   361 #>  [944,]  126  308  551  753  416  385  668  870  918   767 #>  [945,]  511  422  577  379  657  862   35   42  376   864 #>  [946,]  519  240  621  691  958  323   32  886  667   908 #>  [947,]  129  767  780  725  499  731   63  803  436   626 #>  [948,]  505  715  608  905  766  787   83  672  194   806 #>  [949,]  501  622  941  692  823  604  765  405  613   726 #>  [950,]  593  695  126  336  669  478  243   12  944   293 #>  [951,]  795  432  528  485  890  649  464  369  451   624 #>  [952,]  772  315  953  186  362  277  642  539  510   647 #>  [953,]  673  642  926  952  323  843  341  285  536   958 #>  [954,]  520   43  128  468  733  524  148   97  273   275 #>  [955,]  589  177  670  445  927  157  856  354  426   599 #>  [956,]  372  217  844  347  991  869  865  285  883   151 #>  [957,]  163  880  200  996  589  189  329  120  836   837 #>  [958,]   21  691  536  667  162  443    4  347  946   240 #>  [959,]  822   71  309  100  407  917   18  788  661   851 #>  [960,]  881  392  998  727  302  807  463   19  745   453 #>  [961,]  150  423  340  801  420  517  612   76  297    78 #>  [962,]  684  660  979  502  495  702  573  335  210   706 #>  [963,]  246  919  942  653  387  902  419  481  310   504 #>  [964,]  295  180  761  146  899  698  869   98  105   610 #>  [965,]   52  483  283  696  132  318   91  137  201   143 #>  [966,]  239  740  366  681  105    5  295  267  873   964 #>  [967,]  708   15  292  969  764  994  178  397  280   893 #>  [968,]  716  662  393  166  915  701  823  388   84   279 #>  [969,]  112  284  617  238  967  259  708  893  261   327 #>  [970,]   69  689  133  298  710  339  112  238  441     7 #>  [971,]  851  815  839  313   90  730  398  106  661   550 #>  [972,]  644  684  704  783  578  440  203  979  694    67 #>  [973,]  633  699  902  591  658  387  776  225  386   506 #>  [974,]  627  850  135  446  318  397  257  131  201   360 #>  [975,]    9  358  394  333  526  828   48  199  888   845 #>  [976,]   59   33    5  848  350  993  523  465  845    86 #>  [977,]  367  721  561   19  545  377  392  355   42    55 #>  [978,]  890  375  485  178  617  871  555   41  250    46 #>  [979,]  210  706  684  495  660  335  962  502  233   247 #>  [980,]  260  382  911  477  683  878  769  337  151   991 #>  [981,]  410  552  733  999  678  914  265  921   72   954 #>  [982,]  762  651   37  174  264  162  562  205  497   913 #>  [983,]  830  404  705  364  812  786  868  274  386   221 #>  [984,]   56  312  842  827  713  415  435  190  289   897 #>  [985,]  207  311   10   81  258  159  381   23  282   418 #>  [986,]  117  799  833  236  134  678  659  811    8   425 #>  [987,]  606  826  535  841  634  280  674  218  574   144 #>  [988,]  645  603  711  855  431  596  803  305  616   142 #>  [989,]  703  597   13  216  147  172   60   88   29   272 #>  [990,]  140  570  901  198  388  533  916   17  458   611 #>  [991,]  382  883  956  556  307  151  229  933  260   185 #>  [992,]  664  212  153  119  732  900  244  912  632   482 #>  [993,]   14   59    5  724  976  496  376  123  239    48 #>  [994,]  292  708  280  535  356  618  764  826  847   342 #>  [995,]  906  476  173  232   11  786  600  195   30   404 #>  [996,]  836  189  957  722  837  880  137   47  329   290 #>  [997,]  438  160  831  125  876  815  877  407  917   802 #>  [998,]  730  940  370  170  960  881  313  418  745   115 #>  [999,]  733  981  410  840  806  914  552   97  273   954 #> [1000,]  429  424   80  251  209  829  683  452  211   630 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.75123324 0.7728336 0.8535100 0.9610233 0.9988456 1.0241624 1.0346625 #>    [2,] 0.72794121 0.8192607 1.0118221 1.0396370 1.0447104 1.0736597 1.1356458 #>    [3,] 0.31837803 0.4564968 0.4829120 0.5219559 0.5329834 0.6032451 0.6036069 #>    [4,] 0.31047166 0.3921811 0.4326476 0.4630233 0.5398038 0.5555416 0.6151065 #>    [5,] 0.46734788 0.4760593 0.5466231 0.5606464 0.5640889 0.5726195 0.5783608 #>    [6,] 0.51152215 0.5275568 0.5497865 0.5556941 0.5624806 0.6122315 0.6278000 #>    [7,] 0.29359887 0.5086648 0.5542773 0.5716974 0.5869704 0.5940340 0.5959630 #>    [8,] 0.26143033 0.4718084 0.5603310 0.5707832 0.6882329 0.7308097 0.7341715 #>    [9,] 0.24984831 0.5609735 0.8632232 0.9219492 1.0170726 1.0442705 1.0520745 #>   [10,] 0.28986430 0.4537154 0.5204006 0.5421002 0.5423238 0.5463735 0.5587194 #>   [11,] 0.46652531 0.5084248 0.5263341 0.5266163 0.5446352 0.5495054 0.5850168 #>   [12,] 0.37170190 0.4381048 0.5241100 0.5423993 0.5424052 0.5655038 0.6071722 #>   [13,] 0.57222011 0.6124874 0.6357935 0.6396935 0.6462147 0.6708131 0.7391421 #>   [14,] 0.34717912 0.5838188 0.5962627 0.6141551 0.6745910 0.8141714 0.8167852 #>   [15,] 0.58059369 0.6224053 0.6662234 0.6803393 0.7407235 0.8389967 0.8429282 #>   [16,] 0.63314368 0.8630664 0.8939270 1.0213772 1.0458141 1.0663115 1.1116785 #>   [17,] 0.54835213 0.7198504 0.7467861 0.8400073 0.8529885 0.9064278 0.9411035 #>   [18,] 0.66924590 0.6764030 0.8256855 0.8928497 0.9098371 0.9177645 0.9264857 #>   [19,] 0.47391219 0.5187272 0.6039699 0.6313239 0.7718839 0.8130187 0.8617744 #>   [20,] 0.15081454 0.3758961 0.3943047 0.4202105 0.4597621 0.5058134 0.5526436 #>   [21,] 0.26227964 0.3306440 0.4625359 0.4748135 0.5735866 0.5903636 0.6051760 #>   [22,] 0.43233503 0.5294653 0.5807848 0.6182965 0.6219620 0.6649769 0.6820446 #>   [23,] 0.51569242 0.5551573 0.6019943 0.6874485 0.7129012 0.7578704 0.7810091 #>   [24,] 0.26564505 0.8384672 0.9027206 0.9060224 0.9245897 0.9398366 0.9480771 #>   [25,] 0.58665844 0.8659828 0.8981276 0.9708535 1.0050467 1.0329852 1.0364884 #>   [26,] 0.19951012 0.3092625 0.3686001 0.4240887 0.6186630 0.6479357 0.7211515 #>   [27,] 0.36583627 0.4208790 0.4291136 0.5052316 0.5424372 0.6643204 0.6768602 #>   [28,] 0.63749376 0.6643837 0.7336474 0.8632298 0.9630081 1.0143946 1.0585654 #>   [29,] 0.22773632 0.2810413 0.3024392 0.6371490 0.7398366 0.7736565 0.7775577 #>   [30,] 0.41843597 0.4328745 0.4340449 0.5067279 0.5268015 0.5302476 0.5624027 #>   [31,] 0.44109626 0.5183360 0.6860934 0.9339130 0.9629930 1.0579500 1.0943981 #>   [32,] 0.51867312 0.5645729 0.6016788 0.6357531 0.6454604 0.6971910 0.7115832 #>   [33,] 0.47605929 0.5257607 0.5566021 0.5824304 0.6490195 0.7135536 0.7156801 #>   [34,] 0.97263621 1.1064219 1.1444155 1.1538665 1.1596231 1.2692750 1.3001680 #>   [35,] 0.98260936 1.1123529 1.1596231 1.1717316 1.1850187 1.2225809 1.2601779 #>   [36,] 0.49461149 0.5933300 0.6646068 0.6683092 0.8323921 0.8352585 0.8584428 #>   [37,] 0.33752748 0.3668717 0.3733893 0.3738390 0.4858712 0.5329507 0.5359664 #>   [38,] 0.63792553 0.6805158 0.8052105 0.8253294 0.9434459 0.9543999 0.9622925 #>   [39,] 0.79115486 0.9026125 1.0002906 1.0816304 1.1440999 1.2319974 1.2718061 #>   [40,] 0.43594864 0.7188591 0.7189500 0.8269726 1.0044478 1.0197690 1.0395219 #>   [41,] 0.29776484 0.3110705 0.3169707 0.3448560 0.3540405 0.3739873 0.4252863 #>   [42,] 0.56407060 0.8340099 0.9236600 0.9486578 0.9507656 0.9726362 0.9826094 #>   [43,] 0.35070927 0.4212043 0.4399540 0.5016230 0.5245879 0.5408275 0.5485840 #>   [44,] 0.13879613 0.2449583 0.3716588 0.3857744 0.4513943 0.4539900 0.4953717 #>   [45,] 0.27674962 0.3248874 0.3792540 0.4061885 0.4685934 0.5096766 0.5394649 #>   [46,] 0.70931322 0.7762396 0.7874432 0.8142466 0.8157303 0.8707487 0.8863619 #>   [47,] 0.34194145 0.6358041 0.6792359 0.6991985 0.7115954 0.7373865 0.8197065 #>   [48,] 0.54036550 0.6094105 0.6267325 0.6674362 0.7317710 0.7325700 0.7442621 #>   [49,] 0.53167438 0.6307679 0.7248237 0.7447617 0.7648825 0.7757223 0.7758032 #>   [50,] 0.34302240 0.4088468 0.4949305 0.6649502 0.6736528 0.6801958 0.6810368 #>   [51,] 0.44016974 0.5076383 0.5175767 0.7000366 0.7683283 0.7880880 0.8114595 #>   [52,] 0.34683737 0.4084745 0.5982558 0.5990630 0.6392620 0.6435954 0.6734625 #>   [53,] 0.43617718 0.4965451 0.5327786 0.5778905 0.5869704 0.5978329 0.6719906 #>   [54,] 0.30248329 0.3537647 0.3890210 0.5052213 0.5101134 0.5352680 0.5394586 #>   [55,] 0.52308478 0.5402685 0.5593313 0.5874356 0.7559557 0.7821695 0.7822892 #>   [56,] 0.69637689 0.7825293 0.8849706 0.9317456 0.9860083 1.0912192 1.1467084 #>   [57,] 0.16587260 0.2957155 0.3413110 0.4116207 0.4205946 0.5540923 0.6107552 #>   [58,] 0.21674498 0.2655099 0.3790429 0.3932341 0.4436496 0.5844425 0.6218011 #>   [59,] 0.40454188 0.4800348 0.5403655 0.5566021 0.5771780 0.6141551 0.6305519 #>   [60,] 0.75561149 0.7588936 0.7819681 0.7975871 0.8945171 0.9152283 0.9162163 #>   [61,] 0.30100470 0.4964479 0.5864232 0.5975842 0.6878447 0.6894267 0.6965180 #>   [62,] 0.16282452 0.3341115 0.4328745 0.4532430 0.4765493 0.5213406 0.5403077 #>   [63,] 0.27072483 0.3851949 0.4612409 0.5142720 0.5167208 0.5294653 0.6030569 #>   [64,] 0.49644789 0.5186731 0.5261169 0.5533974 0.5655843 0.6290988 0.6358013 #>   [65,] 0.35509133 0.5000259 0.5016800 0.5273160 0.5482631 0.6101186 0.6657547 #>   [66,] 0.51826095 0.5183360 0.6878115 0.9025787 0.9928195 1.0014826 1.0029237 #>   [67,] 0.20842890 0.3411604 0.3568485 0.4068925 0.4214355 0.4377764 0.4642517 #>   [68,] 0.47750098 0.6644961 0.8175037 0.8371260 0.8424111 0.8428174 0.8493960 #>   [69,] 0.45928747 0.4965451 0.5542773 0.5917991 0.6237566 0.6343305 0.6550373 #>   [70,] 1.00949093 1.1650926 1.2078393 1.2169444 1.2341341 1.2526122 1.3587940 #>   [71,] 0.22038706 0.3698291 0.5063805 0.6682706 0.6764030 0.6803568 0.7025122 #>   [72,] 0.41824000 0.4184360 0.4325937 0.4377125 0.4848735 0.5098943 0.5213406 #>   [73,] 0.36595529 0.4150283 0.4230495 0.4715471 0.4820203 0.4893759 0.5093840 #>   [74,] 0.48657110 0.5810022 0.7735514 0.8210664 0.8910608 0.8927631 0.9176643 #>   [75,] 0.40020124 0.4232959 0.4436496 0.4596097 0.5149030 0.5152366 0.5463399 #>   [76,] 0.48817965 0.4927598 0.5107277 0.5623835 0.5859066 0.5935301 0.5946564 #>   [77,] 0.15081454 0.4335340 0.4363955 0.5182849 0.5205824 0.5418517 0.5425802 #>   [78,] 0.30995948 0.3273770 0.4254990 0.4672448 0.5121810 0.5136565 0.5154224 #>   [79,] 0.47970446 0.4947340 0.6647554 0.7263034 0.7535873 0.7609947 0.7625186 #>   [80,] 0.79618626 0.8698408 0.8936291 0.8975484 0.9456737 0.9510369 0.9690743 #>   [81,] 0.47623620 0.4877438 0.4971451 0.5032684 0.5146468 0.5204006 0.5501698 #>   [82,] 0.93583477 1.0071221 1.0885044 1.1050823 1.1755327 1.1912636 1.2374069 #>   [83,] 0.70018889 0.8879985 0.9946745 1.0809744 1.1726914 1.2589149 1.3267449 #>   [84,] 0.85574145 0.9550328 0.9788586 0.9906871 1.0431189 1.0460363 1.0573611 #>   [85,] 0.32254407 0.4354345 0.4755552 0.4913438 0.5488552 0.5558120 0.6032168 #>   [86,] 0.58625836 0.7660761 0.7706474 0.7710468 0.7778610 0.7782860 0.7874432 #>   [87,] 0.39066227 0.4763041 0.5491078 0.6551946 0.6561217 0.6865512 0.7407140 #>   [88,] 0.40030939 0.5722201 0.6381720 0.6390878 0.6411925 0.6611606 0.6664912 #>   [89,] 0.46587098 0.5052316 0.5139742 0.5400055 0.5485160 0.5844425 0.5922445 #>   [90,] 0.19996637 0.2139283 0.3522130 0.3596801 0.5070188 0.5268149 0.5578403 #>   [91,] 0.34578357 0.3713855 0.5607744 0.5739698 0.5832266 0.5948363 0.6034775 #>   [92,] 0.13118949 0.4307515 0.5089294 0.6219634 0.7261603 0.7798434 0.8711605 #>   [93,] 0.15515797 0.2767496 0.3113777 0.3347892 0.4146456 0.4380970 0.4573444 #>   [94,] 0.40949008 0.7662003 0.8612254 0.8767726 0.8964731 1.1548959 1.1752675 #>   [95,] 0.81376542 0.8750154 0.8946274 0.8990536 0.9284389 0.9383646 0.9488876 #>   [96,] 0.36398921 0.7536512 0.7638342 0.8374410 0.8986590 0.9269765 0.9570827 #>   [97,] 0.40763037 0.4564968 0.4906205 0.4921939 0.4925928 0.5062591 0.5259640 #>   [98,] 0.27744439 0.3237234 0.4171864 0.4533024 0.4574603 0.5073590 0.5079862 #>   [99,] 0.44986007 0.5442689 0.6053123 0.6070115 0.6822141 0.6850527 0.8025247 #>  [100,] 0.36217182 0.4002402 0.5479470 0.6148331 0.6682706 0.6987118 0.7176815 #>  [101,] 1.16034211 1.1830457 1.4589260 1.4813706 1.5482614 1.6614958 1.7219734 #>  [102,] 0.20121330 0.2754540 0.3096327 0.3457012 0.3905825 0.3975459 0.4304232 #>  [103,] 1.20255514 1.2330142 1.2589149 1.3426098 1.3481100 1.5117781 1.6069093 #>  [104,] 0.44558674 0.5320156 0.5873528 0.5957944 0.6836550 0.6969275 0.7006954 #>  [105,] 0.28454807 0.4706502 0.4755460 0.5303708 0.5371465 0.5512903 0.5558524 #>  [106,] 0.47750098 0.4851378 0.4973154 0.5868762 0.7283071 0.8416151 0.8593591 #>  [107,] 0.98216529 1.0064208 1.1040333 1.2141759 1.2774960 1.2957623 1.3022217 #>  [108,] 0.47869309 0.8343755 0.9840538 1.0110834 1.0577510 1.0926077 1.1350025 #>  [109,] 0.49710326 0.5006748 0.5058134 0.5114418 0.5418517 0.5850060 0.5912959 #>  [110,] 0.19702653 0.3113777 0.3457012 0.4007505 0.4532430 0.4683849 0.4685934 #>  [111,] 0.36008810 0.4174495 0.4408895 0.4548463 0.4828149 0.5061000 0.5141196 #>  [112,] 0.57458749 0.6909275 0.7177089 0.7218150 0.7744658 0.8237228 0.8288619 #>  [113,] 0.57147892 0.6049098 0.6478061 0.6816491 0.7262376 0.7536512 0.8159034 #>  [114,] 0.53953399 0.6014050 0.6576091 0.6786399 0.6947844 0.7110033 0.7216347 #>  [115,] 0.48599759 0.5154224 0.5558413 0.5789364 0.6354666 0.6547929 0.6603546 #>  [116,] 0.33628768 0.4650064 0.5263157 0.7069239 0.7447617 0.7891283 0.8259153 #>  [117,] 0.69958193 0.9283156 1.0939061 1.1216403 1.1250323 1.1288179 1.1515432 #>  [118,] 0.36398921 0.5714789 0.6894734 0.7014631 0.7260693 0.7619641 0.8240498 #>  [119,] 0.29785763 0.3904106 0.5147426 0.5658674 0.5798745 0.5887206 0.5896853 #>  [120,] 0.35909924 0.4613995 0.4725982 0.5263326 0.5385190 0.5893542 0.6825840 #>  [121,] 0.35748401 0.4455867 0.5154027 0.6343369 0.6851376 0.7147886 0.7230207 #>  [122,] 0.26383426 0.2754540 0.2988481 0.2991627 0.3411604 0.4419143 0.4423288 #>  [123,] 0.62395483 0.6685404 0.7950016 0.8067952 0.8221489 0.8340085 0.8765175 #>  [124,] 0.82937244 0.8707487 0.9551027 1.0103346 1.0519770 1.0832535 1.2253165 #>  [125,] 0.55221468 0.5857830 0.6497453 0.6719993 0.6832759 0.6859977 0.7828531 #>  [126,] 0.45402224 0.6171313 0.6190679 0.7087893 0.7216347 0.7515560 0.7782790 #>  [127,] 0.27028389 0.3572052 0.3993061 0.4557764 0.4626339 0.4726576 0.4993475 #>  [128,] 0.28309416 0.4212043 0.4574603 0.4870235 0.5599778 0.5800733 0.5826591 #>  [129,] 0.25146438 0.4186988 0.5370477 0.5654464 0.5749203 0.6088727 0.6190746 #>  [130,] 0.49033543 0.5993018 0.6014718 0.6776866 0.7389885 0.7588429 0.7662003 #>  [131,] 0.35233048 0.4090712 0.5369264 0.6189582 0.6317574 0.6684878 0.6798811 #>  [132,] 0.48681494 0.5408715 0.6034775 0.6051837 0.6162894 0.6389791 0.6392017 #>  [133,] 0.20289628 0.5917991 0.7040529 0.8219994 0.8745047 0.9693476 0.9888539 #>  [134,] 0.86087471 0.8734834 0.9566091 1.0393017 1.0486299 1.1115831 1.1149204 #>  [135,] 0.27865399 0.2969847 0.3897075 0.4253274 0.4470561 0.4950304 0.5887206 #>  [136,] 0.73790913 0.7727693 0.7880136 0.8494167 0.9279067 1.0006806 1.0803707 #>  [137,] 0.45981635 0.4838382 0.5119779 0.5679398 0.5857583 0.5990630 0.6031911 #>  [138,] 0.30248329 0.3120646 0.3843879 0.3865320 0.4880859 0.4925018 0.5331744 #>  [139,] 0.36139975 0.3821192 0.3884705 0.4467783 0.6854213 0.6990176 0.7259507 #>  [140,] 0.79370421 1.1505867 1.1890757 1.1910424 1.2222432 1.3167299 1.3355435 #>  [141,] 0.19951012 0.2417104 0.2781614 0.4680106 0.6250949 0.6525452 0.6603980 #>  [142,] 0.37893352 0.4015229 0.4064958 0.4696581 0.4792169 0.4909026 0.5502156 #>  [143,] 0.31849457 0.3427354 0.3941537 0.4860365 0.5329507 0.5679398 0.5687805 #>  [144,] 0.36318027 0.4053421 0.4399584 0.4597621 0.5413375 0.5425802 0.5480974 #>  [145,] 0.38772521 0.4192009 0.4871528 0.5026201 0.5073320 0.6164275 0.6390106 #>  [146,] 0.26642362 0.3237234 0.4394007 0.4495239 0.4681588 0.4948503 0.5472648 #>  [147,] 0.61755802 0.6381720 0.6557861 0.7506527 0.7529128 0.7540028 0.7591031 #>  [148,] 0.18634156 0.5009155 0.5485840 0.5599778 0.5931087 0.5965084 0.6349871 #>  [149,] 0.12046345 0.5411184 0.6786399 0.6798061 0.6833299 0.7009866 0.7406080 #>  [150,] 0.17188245 0.3712625 0.3743934 0.3987000 0.4416277 0.5023142 0.5079862 #>  [151,] 0.37547110 0.4474790 0.4828926 0.5041523 0.6416367 0.6856432 0.7161804 #>  [152,] 0.79937319 0.8241613 0.8907011 1.0241436 1.1297508 1.1573210 1.1658958 #>  [153,] 0.19419128 0.2061225 0.3007250 0.4605015 0.5260537 0.5295352 0.5749598 #>  [154,] 0.30085979 0.3841699 0.5687805 0.5778905 0.6377990 0.6564521 0.6819878 #>  [155,] 0.19513800 0.4827132 0.5439209 0.5786936 0.5950256 0.6442066 0.6687645 #>  [156,] 0.46868378 0.5114418 0.5316744 0.5526436 0.5607080 0.6290993 0.6300735 #>  [157,] 0.59045114 0.9869900 1.1535666 1.1582809 1.1780062 1.2135801 1.2585351 #>  [158,] 0.24545491 0.3333003 0.3969425 0.4088468 0.4721369 0.4748135 0.5520819 #>  [159,] 0.28986430 0.3544125 0.3764880 0.3992212 0.5491586 0.5680241 0.5835483 #>  [160,] 0.43780840 0.4498638 0.7033036 0.7877849 0.8172419 0.8357316 0.8577205 #>  [161,] 0.40582631 0.5054017 0.7030924 0.7243780 0.7407140 0.7705307 0.7930608 #>  [162,] 0.35234103 0.4147042 0.4795022 0.4952720 0.4962613 0.4989207 0.5185135 #>  [163,] 0.54300594 0.5583139 0.6795859 0.8095291 0.8206264 0.9728522 1.1327863 #>  [164,] 0.52367020 0.5885379 0.8717503 0.8939719 0.9026125 0.9614319 1.0410679 #>  [165,] 0.96143186 1.0199945 1.0232013 1.0551349 1.0902843 1.1010699 1.1045643 #>  [166,] 0.61571818 0.7040191 0.7058041 0.7656191 0.7734775 0.7824822 0.8215516 #>  [167,] 0.35229033 0.3921811 0.5471192 0.5639015 0.5672174 0.5735262 0.5753703 #>  [168,] 0.96825642 1.0396370 1.1898986 1.2800371 1.2881848 1.3270543 1.3435666 #>  [169,] 0.66673361 0.6783771 0.6894816 0.7395991 0.7798434 0.8020988 0.8409993 #>  [170,] 0.28743920 0.4859976 0.6151464 0.6426209 0.6501716 0.6633979 0.7000754 #>  [171,] 0.31719653 0.4426525 0.4802058 0.5162458 0.5402894 0.5484489 0.5699656 #>  [172,] 0.08045996 0.2277363 0.4479699 0.6083513 0.7456291 0.7558175 0.7626539 #>  [173,] 0.26393459 0.3593245 0.3717283 0.3820295 0.4015229 0.4740713 0.5161408 #>  [174,] 0.30338965 0.3445281 0.3752012 0.3833929 0.4174495 0.4185740 0.5224324 #>  [175,] 0.60837870 0.6760452 0.7997734 0.8205199 0.8496036 0.8767713 0.8946601 #>  [176,] 0.61829653 0.6366517 0.6997558 0.7136063 0.7383797 0.7610103 0.8476542 #>  [177,] 0.29403821 0.3544237 0.5263326 0.5589544 0.6405376 0.6407043 0.6920594 #>  [178,] 0.30753941 0.4389056 0.4819657 0.5267271 0.5626776 0.5839383 0.6590841 #>  [179,] 0.61451410 0.8065479 0.8074916 0.8192607 0.8541983 0.8731405 0.9437775 #>  [180,] 0.26642362 0.3097676 0.3796937 0.3842518 0.5073590 0.5130520 0.5358143 #>  [181,] 0.47013970 0.5230848 0.5470321 0.8496036 0.8674290 0.9467661 0.9817323 #>  [182,] 0.36021158 0.4470561 0.4515219 0.4767623 0.5241343 0.5364844 0.5865542 #>  [183,] 0.53317440 0.6307292 0.6375269 0.6506767 0.6550839 0.6692890 0.6958393 #>  [184,] 0.59828158 0.7636470 0.8197293 0.8356096 0.8501639 0.8775427 0.9832344 #>  [185,] 0.51230390 0.5204844 0.5648963 0.7084205 0.7865361 0.7996885 0.8246749 #>  [186,] 0.38596645 0.4145507 0.5691145 0.5989056 0.6002112 0.6328652 0.6405012 #>  [187,] 0.96030647 1.0761704 1.0808862 1.0870889 1.1122201 1.1279417 1.1959206 #>  [188,] 0.49473402 0.6299515 0.6832576 0.6942725 0.6958393 0.7062105 0.7064561 #>  [189,] 0.35909924 0.4255819 0.5056986 0.5103887 0.6192480 0.7221886 0.7384616 #>  [190,] 0.48660327 0.7114507 0.7246401 0.7313637 0.8284993 1.0153069 1.0305508 #>  [191,] 0.65050082 0.6816491 0.6842797 0.7600037 0.7705307 0.7733659 0.8202470 #>  [192,] 0.81182782 0.8194373 0.8417935 1.1055276 1.1253849 1.1289979 1.1556449 #>  [193,] 0.66753911 0.7257133 0.7266951 0.7743539 0.8705561 0.9086395 0.9237531 #>  [194,] 0.62045966 0.7111853 0.7449372 0.8068628 0.8219124 0.8335637 0.8411046 #>  [195,] 0.32084307 0.3593245 0.3889879 0.4064958 0.4534542 0.5020450 0.5061745 #>  [196,] 0.59162905 0.6261190 0.6519473 0.6742100 0.7273983 0.7396244 0.7504098 #>  [197,] 0.25774459 0.3922203 0.4871528 0.5731440 0.5860091 0.6188489 0.6274038 #>  [198,] 0.55964953 0.6301278 0.7006146 0.7704925 0.8103618 0.8187889 0.8411695 #>  [199,] 0.56526701 0.5919769 0.7933394 0.8006608 0.8031460 0.8174900 0.9500898 #>  [200,] 0.63850522 0.6481022 0.7466410 0.8095291 0.8236840 0.8689609 0.8885308 #>  [201,] 0.27865399 0.2923046 0.5241343 0.5313052 0.5860547 0.5909128 0.5959543 #>  [202,] 0.42631331 0.5904569 0.5998869 0.7362744 0.7605896 0.8071532 0.8210664 #>  [203,] 0.20842890 0.2428933 0.2988481 0.3402142 0.3697308 0.3865320 0.3890210 #>  [204,] 0.47013970 0.5402685 0.6083787 0.7876943 0.8457159 0.8897081 0.8939270 #>  [205,] 0.34090425 0.4108805 0.4379580 0.5384481 0.5431463 0.5516274 0.5550702 #>  [206,] 0.52132482 0.5291135 0.5549221 0.6991985 0.7043297 0.7597526 0.7809424 #>  [207,] 0.21587317 0.5501698 0.5944061 0.6019943 0.6036912 0.6121399 0.6232368 #>  [208,] 0.19508862 0.3493520 0.4058071 0.5062397 0.5209490 0.5405174 0.5476367 #>  [209,] 0.34835901 0.3519596 0.4355776 0.7052760 0.7261054 0.7961863 0.7980408 #>  [210,] 0.15472873 0.2741477 0.3276143 0.3874743 0.4512306 0.4848735 0.5456915 #>  [211,] 0.30083629 0.5030022 0.5802170 0.6049625 0.6124386 0.6855360 0.7587768 #>  [212,] 0.50905999 0.5763424 0.6077715 0.6494028 0.6571812 0.7116446 0.7209059 #>  [213,] 0.31837803 0.3607279 0.5027575 0.5151727 0.5491726 0.5556941 0.6165135 #>  [214,] 0.58913260 0.8071999 0.9856087 0.9869900 1.0638696 1.1631375 1.1634441 #>  [215,] 0.31003120 0.3585382 0.3890705 0.3975790 0.4177120 0.5668593 0.5714364 #>  [216,] 0.40446900 0.4795265 0.5715888 0.5716924 0.6813370 0.7271226 0.7320339 #>  [217,] 0.41890859 0.4878582 0.5088305 0.5258547 0.5416196 0.5602363 0.5909218 #>  [218,] 0.40846562 0.4148849 0.4390372 0.4579331 0.4686838 0.5092006 0.5149004 #>  [219,] 0.31027223 0.3580854 0.4416277 0.4557797 0.4635054 0.4980985 0.5223489 #>  [220,] 0.67821809 0.7269518 0.7884421 0.8981276 0.9696410 1.0095566 1.0242894 #>  [221,] 0.29113310 0.4240887 0.4680106 0.5413932 0.5551246 0.6033871 0.6445696 #>  [222,] 0.31200656 0.3922203 0.5089802 0.6606336 0.6940500 0.7074970 0.7195269 #>  [223,] 0.80654788 0.8376506 0.9906952 1.0447104 1.0594308 1.1200518 1.1231975 #>  [224,] 0.29785763 0.3634108 0.3946379 0.4253274 0.5136025 0.5313052 0.5568903 #>  [225,] 0.51517267 0.6075172 0.6088218 0.6133793 0.6376472 0.6498677 0.6685887 #>  [226,] 0.41347323 0.4914823 0.5701759 0.5940340 0.6190746 0.6238119 0.6348328 #>  [227,] 0.30243922 0.4479699 0.4755517 0.5638175 0.6171614 0.6514300 0.7090876 #>  [228,] 0.90555460 0.9918885 1.1684544 1.1782701 1.2056914 1.2159078 1.2336533 #>  [229,] 0.51230390 0.6631301 0.6653664 0.7335557 0.7518248 0.8405305 0.9252294 #>  [230,] 0.77283362 0.8079880 0.8467161 0.8528566 0.8555573 0.9325761 0.9362719 #>  [231,] 0.59961280 0.6343369 0.7535997 0.7794280 0.8462224 0.8493717 0.8586241 #>  [232,] 0.26393459 0.2679328 0.2736122 0.3208431 0.3571812 0.4792169 0.4811862 #>  [233,] 0.17875079 0.3975790 0.4053346 0.4628703 0.5497720 0.5765510 0.6245413 #>  [234,] 0.67821809 0.6819256 0.6971910 0.7084205 0.7768582 0.8004708 0.8130695 #>  [235,] 0.35229033 0.4113023 0.4561031 0.4946848 0.4971033 0.5271013 0.5398038 #>  [236,] 0.62906531 0.7234641 0.7449372 0.7810325 0.8642700 0.8649101 0.8839147 #>  [237,] 0.20395837 0.3844797 0.4306182 0.5561102 0.5694909 0.5874698 0.5900798 #>  [238,] 0.57458749 0.5959630 0.6238756 0.6348328 0.6590748 0.6690772 0.7566615 #>  [239,] 0.24032959 0.5017250 0.5050407 0.5692543 0.5727376 0.5783608 0.6350611 #>  [240,] 0.41672649 0.4448618 0.4721369 0.5199025 0.5258675 0.5286509 0.5563468 #>  [241,] 0.98405382 1.1375119 1.1976571 1.2046299 1.2651680 1.3673162 1.3923991 #>  [242,] 0.57243631 0.9198506 1.0032346 1.1074054 1.1169257 1.1289227 1.1497500 #>  [243,] 0.55313581 0.6545472 0.7726849 0.8180935 0.8738729 0.8899513 0.9580921 #>  [244,] 0.57634239 0.6158662 0.6329802 0.6512504 0.6656699 0.6795726 0.7843879 #>  [245,] 0.40030939 0.4047201 0.6347717 0.6518593 0.6594240 0.6682516 0.6796197 #>  [246,] 0.20957563 0.5535769 0.5850788 0.5888863 0.5982422 0.6195995 0.6572079 #>  [247,] 0.32538741 0.3764248 0.4068925 0.4827132 0.5377097 0.5388781 0.5564219 #>  [248,] 0.07991648 0.3969090 0.4554043 0.5958814 0.6328125 0.6462949 0.6542727 #>  [249,] 0.40846562 0.5515295 0.6300735 0.6669118 0.6803393 0.7171484 0.7440268 #>  [250,] 0.24531337 0.2920796 0.3045802 0.3529613 0.3733389 0.3739873 0.4389056 #>  [251,] 0.30083629 0.3895963 0.5889364 0.6204556 0.6560988 0.6840995 0.7052760 #>  [252,] 0.35356658 0.4333924 0.4380970 0.4901973 0.5463399 0.5705713 0.5717453 #>  [253,] 0.71555951 0.8531945 0.9589535 1.0147257 1.0754897 1.0893189 1.0893488 #>  [254,] 0.32560846 0.3436373 0.5602555 0.6310238 0.7119669 0.7121295 0.8242852 #>  [255,] 0.19508862 0.3335111 0.3359325 0.4334802 0.4795022 0.5193626 0.5880298 #>  [256,] 0.33217500 0.5334556 0.5916505 0.7259507 0.7293199 0.7529128 0.7547055 #>  [257,] 0.34844429 0.3698551 0.4515219 0.6835393 0.7039375 0.7097591 0.7388971 #>  [258,] 0.48774381 0.5034437 0.6036912 0.6462597 0.6528830 0.6738408 0.7292561 #>  [259,] 0.50387183 0.5885379 0.8716588 0.9163334 0.9436734 0.9756567 0.9843683 #>  [260,] 0.31083119 0.5392876 0.5584831 0.6788038 0.6856432 0.6939049 0.7587768 #>  [261,] 0.50540167 0.6094466 0.6106162 0.7100869 0.7474043 0.7548418 0.7657958 #>  [262,] 0.36072787 0.4829120 0.6355625 0.6428138 0.6685887 0.7080839 0.7910339 #>  [263,] 0.39463790 0.3948480 0.5147426 0.5186912 0.5888827 0.6300291 0.6367832 #>  [264,] 0.39988625 0.4002021 0.4185740 0.4483313 0.4727237 0.4871645 0.4962613 #>  [265,] 0.23993803 0.5224575 0.5456090 0.5960820 0.6028731 0.6078198 0.6157228 #>  [266,] 0.37926665 0.4468730 0.4925928 0.4942371 0.5473633 0.5825448 0.6047881 #>  [267,] 0.46645854 0.5050407 0.6158712 0.7140490 0.7180839 0.7395991 0.7456979 #>  [268,] 0.38487972 0.4326476 0.4426525 0.4727237 0.4775865 0.4810028 0.5031708 #>  [269,] 1.06380439 1.1005776 1.1676122 1.1770550 1.2246484 1.2639915 1.3374345 #>  [270,] 0.35760660 0.5306228 0.6001879 0.6131775 0.6140907 0.6375269 0.6378469 #>  [271,] 0.37007701 0.3978038 0.4291071 0.5187272 0.5306961 0.5880864 0.6199867 #>  [272,] 0.08045996 0.2810413 0.4755517 0.5850168 0.7445571 0.7490401 0.7683102 #>  [273,] 0.48999353 0.5196985 0.5392876 0.6215960 0.6416367 0.6426553 0.6913845 #>  [274,] 0.24010441 0.3874158 0.4525542 0.4539625 0.4949872 0.5261021 0.5265085 #>  [275,] 0.30100470 0.5029816 0.5127194 0.5510996 0.5639015 0.5655843 0.6384658 #>  [276,] 0.54449025 1.0617308 1.1690400 1.2214387 1.2731221 1.2739128 1.4960939 #>  [277,] 0.29910942 0.5714456 0.5963457 0.6705824 0.6787581 0.7043262 0.7580649 #>  [278,] 0.35718116 0.4193687 0.4433985 0.4534542 0.4665253 0.5451624 0.5502156 #>  [279,] 0.41394639 0.6325459 0.6699654 0.7836029 0.7851510 0.8182959 0.8425422 #>  [280,] 0.22475057 0.3396683 0.4055814 0.4175321 0.4377923 0.4471095 0.4585823 #>  [281,] 0.29444451 0.4113023 0.4141784 0.4404892 0.4630233 0.5031708 0.5333971 #>  [282,] 0.31644694 0.5551573 0.5961214 0.6221072 0.6550789 0.7101610 0.7283993 #>  [283,] 0.34578357 0.3468282 0.3687117 0.4835465 0.5648596 0.6162894 0.6381854 #>  [284,] 0.50387183 0.5236702 0.7701056 0.7911549 0.8739263 0.8836861 0.9411378 #>  [285,] 0.41119252 0.5622579 0.6023753 0.6042996 0.6207918 0.6479959 0.6823808 #>  [286,] 0.85567071 1.0204548 1.0805443 1.1364532 1.3088280 1.3428671 1.3523249 #>  [287,] 0.52439153 0.7499065 0.9440280 0.9675250 1.0153069 1.2163210 1.2222432 #>  [288,] 0.54239075 0.6429094 0.8806943 1.3620115 1.4205182 1.4246796 1.4566494 #>  [289,] 0.94204478 0.9724045 0.9750135 1.0133426 1.1141167 1.1172216 1.1293275 #>  [290,] 0.34194145 0.4542825 0.5073444 0.5291135 0.7688035 0.7853064 0.8207269 #>  [291,] 0.26594121 0.4145992 0.5107277 0.5382576 0.5775870 0.6428034 0.6433268 #>  [292,] 0.33966834 0.3705808 0.4968724 0.5614452 0.5912959 0.6030132 0.6323524 #>  [293,] 0.54240523 0.5685634 0.6545472 0.7480650 0.7893958 0.7894660 0.8047075 #>  [294,] 0.26927678 0.4298212 0.4530965 0.4804884 0.5015095 0.5394649 0.5716974 #>  [295,] 0.26343145 0.2979331 0.4463409 0.5502562 0.5519391 0.5640889 0.5888744 #>  [296,] 0.28309416 0.3568485 0.4377125 0.4419143 0.4674355 0.4870335 0.5484208 #>  [297,] 0.23681564 0.3086668 0.4232261 0.4378483 0.4828435 0.5027134 0.5113881 #>  [298,] 0.44123648 0.4935362 0.5216645 0.5916291 0.6151879 0.7155653 0.7452075 #>  [299,] 0.15515797 0.1970265 0.3792540 0.3921772 0.4304232 0.4333924 0.4406006 #>  [300,] 0.35029758 0.3859824 0.6158662 0.6386173 0.6545420 0.6789222 0.6912502 #>  [301,] 0.17672129 0.2920796 0.3487168 0.4119493 0.4148849 0.4666492 0.5515295 #>  [302,] 0.53302955 0.5382576 0.5505231 0.6596260 0.6688616 0.6746336 0.6863087 #>  [303,] 1.26360735 1.2688591 1.4489720 1.5091963 1.5111890 1.6452195 1.7570417 #>  [304,] 0.32254407 0.3594234 0.4605015 0.4645395 0.5425355 0.5434271 0.5556632 #>  [305,] 0.24866835 0.3789335 0.3792134 0.4561757 0.5161408 0.5266475 0.5673960 #>  [306,] 0.26740534 0.3208248 0.4667387 0.4988816 0.5023142 0.5210939 0.5911413 #>  [307,] 0.68948956 0.8591377 0.8632621 0.8758765 0.9509291 0.9731328 1.0001691 #>  [308,] 0.51152798 0.7055470 0.7202057 0.7660243 0.7819818 0.7912739 0.8258615 #>  [309,] 0.50638053 0.5179364 0.5468375 0.6046618 0.6985545 0.7881233 0.8091576 #>  [310,] 0.16587260 0.3356574 0.3871199 0.4471608 0.4613834 0.5982422 0.6546082 #>  [311,] 0.43717069 0.4465631 0.5035108 0.6308780 0.6550789 0.6917758 0.7570848 #>  [312,] 0.35346968 0.4866033 0.4911228 0.9278780 0.9597156 0.9675250 0.9823241 #>  [313,] 0.46884574 0.4715928 0.4735928 0.5765781 0.5976214 0.6209378 0.6795702 #>  [314,] 0.18842874 0.2774444 0.3743934 0.4975694 0.5050988 0.5495635 0.5568096 #>  [315,] 0.48747026 0.5115595 0.5776815 0.5810022 0.5833092 0.5961116 0.6199867 #>  [316,] 0.71882339 0.7298102 0.7980408 0.8027938 0.8137303 0.8317879 0.8445150 #>  [317,] 0.42087897 0.4312480 0.5634303 0.6422605 0.6566718 0.7048257 0.7623149 #>  [318,] 0.34683737 0.4090368 0.4860365 0.5359664 0.5383853 0.6108532 0.6336967 #>  [319,] 0.37138546 0.4117716 0.4785496 0.4868149 0.5997890 0.6381854 0.6638874 #>  [320,] 0.46517599 0.5368974 0.6422321 0.6776026 0.6805158 0.7277149 0.7588429 #>  [321,] 0.09697109 0.3934919 0.3992212 0.4013733 0.4841724 0.5219711 0.6044576 #>  [322,] 0.61354902 0.7331312 0.8358797 0.8843709 0.9381280 0.9839040 0.9903867 #>  [323,] 0.37300207 0.3944722 0.4408895 0.5156462 0.6216648 0.6234677 0.6260663 #>  [324,] 0.30975111 0.5447037 0.5730397 0.5768426 0.6028126 0.6794550 0.6901274 #>  [325,] 0.49046188 0.5118977 0.5345808 0.5487884 0.6182018 0.6263767 0.6269757 #>  [326,] 0.48914700 0.5917555 0.6135490 0.8236793 0.8388834 0.8661062 0.8718881 #>  [327,] 0.47466248 0.6094466 0.6433676 0.6557585 0.6625708 0.6628817 0.6690772 #>  [328,] 0.73136370 0.8106643 0.8197065 0.9443775 1.0060133 1.0388432 1.0488026 #>  [329,] 0.56057729 0.5963301 0.6683562 0.6795859 0.7329504 0.8120086 0.8243287 #>  [330,] 0.27949333 0.4054250 0.4598163 0.4782392 0.5327786 0.6019534 0.6318225 #>  [331,] 0.33351112 0.3356392 0.3441288 0.4058071 0.4617185 0.4678582 0.5969929 #>  [332,] 0.50641307 0.5115280 0.5247714 0.5806314 0.6723671 0.7161356 0.7278448 #>  [333,] 0.52374859 0.5609209 0.5919769 0.7004560 0.7470308 0.7624804 0.7892986 #>  [334,] 0.42795110 0.4530965 0.4612184 0.4931298 0.5000259 0.5240484 0.5290541 #>  [335,] 0.32761430 0.3475464 0.3843879 0.3949626 0.4205965 0.4415721 0.4535849 #>  [336,] 0.50451422 0.8163552 1.0484713 1.0540369 1.1106780 1.1204779 1.1334821 #>  [337,] 0.56262031 0.7564921 0.8078945 0.8326922 0.8352566 0.8653057 0.8771891 #>  [338,] 0.35029758 0.6987542 0.7735514 0.8113368 0.8188095 0.8228033 0.8238807 #>  [339,] 0.49353624 0.6602226 0.7272707 0.7396244 0.7642973 0.8857255 0.9054262 #>  [340,] 0.26385543 0.4138580 0.4591137 0.4841722 0.4971807 0.5357776 0.5859066 #>  [341,] 0.25334228 0.4108805 0.4143892 0.4465461 0.5185135 0.5862135 0.6011670 #>  [342,] 0.23535424 0.3844714 0.3873494 0.4871865 0.5377632 0.5901825 0.6002112 #>  [343,] 0.49333622 0.5099957 0.5933300 0.6932422 0.7805514 0.7853750 0.9455148 #>  [344,] 0.42777114 0.4942371 0.4996934 0.5374261 0.5378361 0.5491287 0.5572177 #>  [345,] 0.43543452 0.4731234 0.5097656 0.5154537 0.5501798 0.5601731 0.5648554 #>  [346,] 0.27816143 0.2911331 0.3092625 0.4558091 0.6182421 0.6550839 0.6832576 #>  [347,] 0.31133296 0.5416196 0.5924440 0.5951297 0.6042996 0.6043597 0.6051760 #>  [348,] 0.32560846 0.4348900 0.5081217 0.5956861 0.7277149 0.8389705 0.8713819 #>  [349,] 0.27110632 0.2736122 0.3717283 0.4193687 0.4696581 0.5124989 0.5188817 #>  [350,] 0.46804512 0.5862584 0.6132736 0.6300291 0.6931258 0.7347957 0.8070378 #>  [351,] 0.59930178 0.6040936 0.6243774 0.7537008 0.8512212 0.8618755 0.8767726 #>  [352,] 0.72695182 0.8925216 1.0102435 1.0211662 1.0279754 1.0329852 1.2980993 #>  [353,] 0.31170307 0.6374938 0.7231658 0.8318084 0.9315260 0.9454788 1.0235594 #>  [354,] 0.47014037 0.5311183 0.5807093 0.5893542 0.6192480 0.6478061 0.6894734 #>  [355,] 0.31605501 0.5687865 0.6450369 0.6562205 0.6602688 0.6698618 0.6733962 #>  [356,] 0.21566331 0.3844714 0.4404892 0.4961319 0.5078930 0.5369264 0.5770353 #>  [357,] 0.44777486 0.5099957 0.5576428 0.6046208 0.6613447 0.6683092 0.6720861 #>  [358,] 0.44599817 0.5609735 0.7096210 0.8861194 0.8862931 0.8908547 0.9431895 #>  [359,] 0.59854713 0.7551560 0.7975922 0.8340979 0.9488876 0.9678762 1.0104143 #>  [360,] 0.69343238 0.8115715 0.8518886 0.8595648 0.8660315 0.9372885 1.0002448 #>  [361,] 0.18945147 0.3203283 0.3361130 0.3448560 0.3493174 0.3777877 0.4662042 #>  [362,] 0.48657110 0.6705820 0.7001198 0.7362744 0.8745113 0.9834923 0.9946699 #>  [363,] 0.31644694 0.5156924 0.6910260 0.7869916 0.8203473 0.8254108 0.8631331 #>  [364,] 0.57077554 0.6313865 0.6719993 0.6959316 0.7819634 0.8589755 0.8680502 #>  [365,] 0.58735280 0.5874356 0.6407729 0.6911030 0.7000366 0.7373071 0.7389704 #>  [366,] 0.28454807 0.3498404 0.3726540 0.3987329 0.4167784 0.4767417 0.4883674 #>  [367,] 0.24909537 0.6217602 0.8683734 0.9142125 0.9621563 0.9622823 0.9941056 #>  [368,] 0.20121330 0.2632861 0.2991627 0.3697308 0.4134017 0.4259888 0.5201796 #>  [369,] 0.24136134 0.6594240 0.6920199 0.7117756 0.7880136 0.8037376 0.8159284 #>  [370,] 0.49568273 0.6052306 0.6221072 0.6234920 0.6700591 0.7000754 0.7869916 #>  [371,] 0.47399983 0.6625547 0.7281672 0.7694525 0.7743539 0.8051282 0.8220837 #>  [372,] 0.36567019 0.4189086 0.5234874 0.5771078 0.5944776 0.5951297 0.7530624 #>  [373,] 0.18460255 0.2060190 0.3782162 0.3791834 0.4426923 0.4612184 0.4794289 #>  [374,] 0.46500636 0.5511406 0.5911722 0.5958814 0.6242367 0.6417307 0.6562524 #>  [375,] 0.30753941 0.5299665 0.5805937 0.5926426 0.6214401 0.6687676 0.7171484 #>  [376,] 0.58633486 0.6239548 0.6599681 0.6648714 0.6745910 0.7043262 0.7398995 #>  [377,] 0.50763829 0.5663951 0.6228037 0.7147886 0.7307823 0.7430718 0.7822892 #>  [378,] 0.30361897 0.3430907 0.5306958 0.5863829 0.6143961 0.6843397 0.7215748 #>  [379,] 0.62529285 0.9373032 0.9589361 0.9839291 1.0569027 1.1136162 1.1334750 #>  [380,] 0.31004980 0.6990266 0.9175304 1.0122607 1.1262807 1.2133086 1.2242808 #>  [381,] 0.49568273 0.5961214 0.6232368 0.6734077 0.8202901 0.8360364 0.8509438 #>  [382,] 0.31083119 0.4828926 0.4899935 0.5448074 0.5461205 0.5871392 0.7828199 #>  [383,] 0.33628768 0.5511406 0.5918048 0.6436058 0.6527433 0.6718151 0.7163910 #>  [384,] 0.44077776 0.5411184 0.6801610 0.7706525 0.7962910 0.8294079 0.8335637 #>  [385,] 0.15604009 0.4762362 0.5680078 0.5814557 0.6462597 0.6486402 0.6494302 #>  [386,] 0.38532828 0.4359686 0.5209098 0.5689635 0.5757741 0.5904509 0.5991853 #>  [387,] 0.33470661 0.3647560 0.5047202 0.5630189 0.5689635 0.5829721 0.5891104 #>  [388,] 0.65667184 0.6750756 0.6775991 0.7616078 0.7726849 0.9088996 0.9411035 #>  [389,] 0.31575585 0.5786936 0.6070519 0.6149352 0.7121295 0.7450731 0.7560740 #>  [390,] 0.40636897 0.4379580 0.4465461 0.5390755 0.5909128 0.5998869 0.6395035 #>  [391,] 0.71637391 0.9092624 0.9917192 1.0071221 1.0974428 1.1297508 1.1602162 #>  [392,] 0.51834711 0.5505231 0.5846558 0.5926610 0.7513978 0.7774382 0.7794280 #>  [393,] 0.14605421 0.6075121 0.6775991 0.7048257 0.7444487 0.7576389 0.8104532 #>  [394,] 0.46638959 0.5294214 0.5480739 0.6234146 0.6267325 0.6959634 0.7060311 #>  [395,] 1.04920444 1.1822441 1.2197848 1.3257101 1.3857820 1.3957540 1.3989331 #>  [396,] 0.50074816 0.9368811 1.0471965 1.0540369 1.0659909 1.0825885 1.0936585 #>  [397,] 0.35233048 0.3636660 0.4969829 0.5377632 0.5908810 0.6138392 0.7085501 #>  [398,] 0.33018724 0.5976214 0.6068353 0.6865432 0.7154680 0.7209059 0.7564411 #>  [399,] 0.32685154 0.3821192 0.5760403 0.6261190 0.6692866 0.7112562 0.7409202 #>  [400,] 0.99219177 1.0147922 1.1050029 1.1439902 1.2163210 1.2301288 1.2718061 #>  [401,] 0.50067478 0.5271013 0.5735262 0.6820610 0.6876870 0.7728214 0.7903175 #>  [402,] 0.61061623 0.6870153 0.7093132 0.7347957 0.8417935 0.9099727 0.9207612 #>  [403,] 0.13118949 0.5519855 0.5731555 0.6801153 0.8020988 0.8270089 0.9160206 #>  [404,] 0.35945348 0.3929751 0.4128428 0.4949872 0.5282306 0.6033871 0.6078198 #>  [405,] 0.47216259 0.6429094 0.8313961 0.9559077 1.1019036 1.1677363 1.2491498 #>  [406,] 0.52840771 0.5306958 0.5440199 0.5557236 0.5803419 0.5863349 0.5922188 #>  [407,] 0.18051066 0.4002402 0.5468375 0.5576100 0.5873958 0.6803568 0.7861184 #>  [408,] 0.42982120 0.4931298 0.5219711 0.5226653 0.5355817 0.5618288 0.6011145 #>  [409,] 0.23307038 0.5096766 0.5400055 0.5411882 0.5479479 0.5729807 0.5868046 #>  [410,] 0.22690537 0.3102786 0.4061678 0.4906205 0.5086148 0.5583424 0.6063374 #>  [411,] 0.59354400 0.6070115 0.6145340 0.6739434 0.6935096 0.6939493 0.7555520 #>  [412,] 0.45311652 0.4835465 0.6051837 0.6545420 0.6795726 0.6883190 0.7681392 #>  [413,] 0.52874860 0.5485678 0.5557123 0.5716924 0.6452023 0.7073426 0.7129012 #>  [414,] 0.59854713 0.7433678 0.7931495 1.1149152 1.1309300 1.2472189 1.2511145 #>  [415,] 1.00915273 1.0397144 1.0531656 1.0897849 1.1299244 1.2105582 1.2705682 #>  [416,] 0.44685385 0.4802813 0.4841724 0.5951493 0.6011145 0.6486402 0.6837553 #>  [417,] 0.39066227 0.4058263 0.5686761 0.5893919 0.7694337 0.7836191 0.8194804 #>  [418,] 0.30577483 0.4465631 0.5118977 0.5633698 0.5763036 0.6474377 0.6518129 #>  [419,] 0.33565738 0.3413110 0.3634738 0.3796179 0.3857744 0.4868420 0.5030333 #>  [420,] 0.26385543 0.3050787 0.3099595 0.4493096 0.5142780 0.5426927 0.5432273 #>  [421,] 0.72981016 0.8191095 1.0391618 1.0635243 1.1439234 1.1497564 1.1579309 #>  [422,] 0.77901084 0.8141714 0.8880066 0.9686581 0.9776988 0.9981969 1.0372120 #>  [423,] 0.17188245 0.3102722 0.4068494 0.4948228 0.5050988 0.5092787 0.5166929 #>  [424,] 0.58021695 0.6560988 0.8278941 0.8310321 0.8902744 0.9046550 0.9497534 #>  [425,] 0.50074816 0.7472879 0.7886271 0.8055432 0.8072300 0.8322109 0.8544600 #>  [426,] 0.65841128 0.7551560 0.8793542 0.8990536 0.9343049 0.9647801 1.0091527 #>  [427,] 0.40360403 0.4477749 0.4521097 0.5402954 0.5465505 0.6198224 0.6646068 #>  [428,] 0.47869309 0.9571049 1.1259877 1.1363119 1.2431542 1.2535680 1.2883587 #>  [429,] 0.34027172 0.3519596 0.3895963 0.5030022 0.5741917 0.5803987 0.7337276 #>  [430,] 0.21863794 0.5792501 0.5799310 0.6055756 0.6098908 0.6619151 0.7052326 #>  [431,] 0.42262902 0.5161931 0.5211340 0.5809020 0.6295294 0.6742100 0.7002335 #>  [432,] 0.57267127 0.5730397 0.6557861 0.6854213 0.6911311 0.6957793 0.7067249 #>  [433,] 0.24866835 0.2996319 0.4200978 0.4258462 0.4310830 0.5603310 0.5667096 #>  [434,] 0.39780376 0.4386172 0.4797447 0.4874703 0.4933392 0.5682878 0.6303169 #>  [435,] 0.49112284 0.6390106 0.6759421 0.7114507 0.7823791 0.7902742 0.7998991 #>  [436,] 0.36738405 0.4135458 0.5167208 0.5334669 0.5473633 0.5482934 0.5957012 #>  [437,] 0.29571554 0.3634738 0.3637507 0.3814911 0.3871199 0.3876728 0.4539900 #>  [438,] 0.49119061 0.7828531 0.8027938 0.8172419 0.9485036 1.0184482 1.0185377 #>  [439,] 0.83437551 0.9571049 1.0803707 1.1735669 1.1976571 1.2111689 1.3843671 #>  [440,] 0.24289334 0.3120646 0.3537647 0.3949626 0.4134017 0.4214355 0.4319502 #>  [441,] 0.20289628 0.6237566 0.6844604 0.7369896 0.8385844 0.8803578 0.8962578 #>  [442,] 0.75123324 0.9219082 1.0496610 1.1107187 1.1215952 1.1425865 1.1637278 #>  [443,] 0.24545491 0.4625359 0.4660731 0.4949305 0.5009155 0.5330862 0.5507820 #>  [444,] 0.67768660 0.7038044 0.7892187 0.8172974 0.8343469 0.8612254 0.8907011 #>  [445,] 1.22623347 1.2420842 1.3854303 1.3953893 1.4621698 1.5357017 1.5569942 #>  [446,] 0.47289305 0.6145340 0.6684878 0.6760726 0.6819878 0.6879263 0.6969249 #>  [447,] 1.45228667 1.6043613 1.6490182 1.8686264 1.8838568 1.8952957 1.9006795 #>  [448,] 0.57243631 0.7067615 0.8611921 1.0199524 1.0782641 1.1621953 1.1898859 #>  [449,] 0.24863800 0.3598209 0.3796937 0.4948503 0.5142888 0.5173598 0.5306004 #>  [450,] 0.44366791 0.7192560 1.2657779 1.2739660 1.3403521 1.3811454 1.5902023 #>  [451,] 0.50167997 0.5237082 0.5300692 0.5317664 0.5451624 0.5490896 0.5717995 #>  [452,] 0.64144872 0.8653057 1.1236420 1.2908359 1.3073813 1.3171347 1.3352933 #>  [453,] 0.40963634 0.4797447 0.5306961 0.6045138 0.6223325 0.6235444 0.6778300 #>  [454,] 0.57965193 0.7163739 0.7299407 0.7894505 0.9358348 1.0104482 1.0190099 #>  [455,] 0.33731955 0.3678879 0.3792666 0.4171944 0.5020450 0.5062591 0.5226281 #>  [456,] 0.09697109 0.3223750 0.3544125 0.4270109 0.4468538 0.5355817 0.5816812 #>  [457,] 0.26564505 0.7653629 0.8236488 0.9174340 0.9267543 0.9272176 0.9374222 #>  [458,] 0.48470066 0.5052092 0.5596495 0.6027456 0.6594966 0.6607136 0.6997558 #>  [459,] 0.16282452 0.2891480 0.4182400 0.4340449 0.4996934 0.5051723 0.5113368 #>  [460,] 0.44060061 0.4449831 0.4557764 0.4573444 0.4681588 0.5077163 0.5246272 #>  [461,] 0.27996485 0.5602452 0.6143961 0.6219634 0.6801153 0.7140490 0.7973198 #>  [462,] 0.70380443 0.8241613 1.1755510 1.1950636 1.2795708 1.3081447 1.3256072 #>  [463,] 0.26740534 0.3117459 0.4585147 0.4678582 0.5209490 0.5859090 0.5880765 #>  [464,] 0.52166448 0.5273160 0.6314860 0.6347717 0.6591848 0.6602226 0.6829279 #>  [465,] 0.46804512 0.6870153 0.7545626 0.7706474 0.7762396 0.8118278 0.9270370 #>  [466,] 0.31004980 0.7137102 0.8195100 0.8730117 0.9593647 1.0354425 1.1030984 #>  [467,] 0.29292073 0.3314803 0.4310830 0.4425622 0.4561757 0.5497865 0.5655038 #>  [468,] 0.27981317 0.3631803 0.3758961 0.4363955 0.4510979 0.4921939 0.5126823 #>  [469,] 0.34390429 0.3668414 0.4200978 0.5247714 0.5707832 0.5720249 0.6123558 #>  [470,] 0.21164504 0.2930111 0.3169707 0.3361130 0.3613120 0.3687756 0.3733389 #>  [471,] 0.20417561 0.4786287 0.5084755 0.5140385 0.5410413 0.5428946 0.6918404 #>  [472,] 0.83587974 0.8890259 0.9255049 0.9664203 1.0821634 1.0852990 1.1843941 #>  [473,] 0.76058958 0.9090353 0.9256838 0.9697771 1.0202062 1.0394324 1.0615033 #>  [474,] 0.40542497 0.4449027 0.4514099 0.5119779 0.5300852 0.5545604 0.5947904 #>  [475,] 0.87266945 1.0586150 1.0839485 1.0860132 1.1040333 1.1843674 1.3202047 #>  [476,] 0.39915058 0.4044690 0.4656943 0.5084248 0.5287486 0.5500657 0.6266317 #>  [477,] 0.51479463 0.5694424 0.6092113 0.6469373 0.6859729 0.6948786 0.6948917 #>  [478,] 0.33332358 0.4540222 0.6165999 0.6311446 0.6354071 0.6525144 0.6576091 #>  [479,] 0.32348784 0.4167936 0.4622053 0.4756200 0.4828435 0.4856521 0.5458660 #>  [480,] 0.20774666 0.2368156 0.3148796 0.3318808 0.4167936 0.5171208 0.5223489 #>  [481,] 0.64265530 0.6615948 0.6939049 0.7691026 0.7837144 0.8313751 0.8374920 #>  [482,] 0.31191358 0.5115595 0.5186912 0.5568903 0.5658674 0.5805367 0.6526331 #>  [483,] 0.36871174 0.4752569 0.4946232 0.5832266 0.6778089 0.6828681 0.7059491 #>  [484,] 0.61434841 0.6643837 0.7710334 0.8202840 0.8318084 1.0382065 1.1255773 #>  [485,] 0.32282065 0.4160175 0.4522604 0.4870973 0.5622388 0.5837745 0.6021089 #>  [486,] 0.69902660 0.9255049 0.9593647 0.9603065 1.0848989 1.1964572 1.2806124 #>  [487,] 0.36583627 0.4312480 0.5921655 0.6179367 0.6290988 0.6688491 0.6798061 #>  [488,] 0.48914700 0.5809788 0.5860091 0.6228037 0.6670446 0.7151664 0.7331312 #>  [489,] 0.54426886 0.5818935 0.6092135 0.6802616 0.7296064 0.7703605 0.7863003 #>  [490,] 0.64144872 1.1515432 1.2574863 1.3068810 1.3621837 1.4400532 1.5037535 #>  [491,] 0.68609343 0.6878115 1.0190392 1.1752675 1.2500793 1.4017630 1.4175909 #>  [492,] 0.19996637 0.2641698 0.4474902 0.4658086 0.5312450 0.5522147 0.5635916 #>  [493,] 0.55034352 0.6327033 0.7231658 0.9630081 1.1152965 1.1166193 1.2305216 #>  [494,] 0.44016974 0.7307823 0.8092806 0.8182231 0.8593062 0.8993036 0.9097510 #>  [495,] 0.27017635 0.3699957 0.4096830 0.4512306 0.4612165 0.4628703 0.4941352 #>  [496,] 0.73232324 0.7710468 0.8167852 0.8925772 0.9230566 0.9272176 0.9380741 #>  [497,] 0.35942336 0.4049898 0.4334802 0.4913438 0.5031696 0.5197681 0.5405174 #>  [498,] 1.03943243 1.0721897 1.0905577 1.1089035 1.1314227 1.1912541 1.2253874 #>  [499,] 0.27072483 0.3865848 0.4292685 0.5141644 0.5370477 0.5482934 0.5624287 #>  [500,] 0.37642480 0.3978315 0.3998387 0.5439209 0.5668593 0.6262270 0.6268746 #>  [501,] 0.47216259 0.5423907 0.7833552 0.9727131 1.1413017 1.1811073 1.2372009 #>  [502,] 0.34754640 0.3576066 0.3862040 0.3874743 0.4431694 0.4952917 0.5221971 #>  [503,] 1.25593536 1.3176629 1.3585019 1.3851334 1.3869811 1.4232511 1.4684821 #>  [504,] 0.41890633 0.4389962 0.4798121 0.6254812 0.6718151 0.6731796 0.7411969 #>  [505,] 0.78545275 0.8847553 1.0815974 1.1519782 1.3383411 1.4112341 1.5026801 #>  [506,] 0.37644458 0.5334556 0.5487723 0.7187771 0.7560823 0.7745370 0.9103913 #>  [507,] 0.70927902 0.7398905 0.8395667 0.8904261 0.8994460 0.9188252 0.9655937 #>  [508,] 0.51459128 0.6009983 0.6357531 0.6474427 0.6819256 0.7059153 0.7111395 #>  [509,] 0.43697204 0.4958141 0.5626203 0.5694424 0.5959871 0.6326815 0.7707595 #>  [510,] 0.40476741 0.5652670 0.5761168 0.6490482 0.6917122 0.7084974 0.7534034 #>  [511,] 0.82162781 0.9675018 0.9981969 1.0832153 1.2422757 1.2847455 1.2862323 #>  [512,] 0.30085979 0.4361772 0.5251689 0.5338096 0.5823034 0.6650514 0.7381164 #>  [513,] 0.29301114 0.3731118 0.4421991 0.4486907 0.4543662 0.4699835 0.4710620 #>  [514,] 0.29292073 0.4098502 0.4798583 0.5378361 0.5423993 0.5514421 0.5667096 #>  [515,] 0.26793281 0.2711063 0.3820295 0.3889879 0.4171944 0.4261615 0.4433985 #>  [516,] 0.27028389 0.3415438 0.3734846 0.3840070 0.4426923 0.4609179 0.4715471 #>  [517,] 0.30866684 0.3234878 0.3318808 0.4254990 0.4446930 0.4488586 0.4648980 #>  [518,] 0.07991648 0.4038128 0.4762512 0.5911722 0.6350611 0.6912811 0.6981930 #>  [519,] 0.37025403 0.3944722 0.4546167 0.5061000 0.5270976 0.5509830 0.5810267 #>  [520,] 0.27981317 0.4053421 0.4202105 0.4315446 0.5017654 0.5127194 0.5205824 #>  [521,] 0.34512046 0.4042546 0.4521097 0.5453375 0.5888239 0.6046208 0.6074047 #>  [522,] 0.13879613 0.3419732 0.3665608 0.4178758 0.4448724 0.4893759 0.5030333 #>  [523,] 0.54363676 0.5771780 0.5962627 0.7278883 0.8893138 0.9051578 0.9270370 #>  [524,] 0.33184739 0.3507093 0.3598209 0.5017654 0.5346923 0.5475948 0.5485160 #>  [525,] 0.26143033 0.3439043 0.3928074 0.4258462 0.5064131 0.5837491 0.7095298 #>  [526,] 0.28883648 0.4871865 0.5237486 0.5480739 0.6635628 0.6831837 0.6882478 #>  [527,] 0.77901084 1.1327007 1.2185269 1.2789434 1.2862323 1.3177358 1.4660522 #>  [528,] 0.38801771 0.3950953 0.4755505 0.5452861 0.5768426 0.6079400 0.6224556 #>  [529,] 0.27912903 0.3436373 0.4348900 0.6630490 0.6776026 0.7560740 0.8175933 #>  [530,] 0.45669225 0.5905829 0.6098908 0.8362491 0.8714916 0.8802147 0.9061382 #>  [531,] 0.36687170 0.4117716 0.4755552 0.5197681 0.5227071 0.5425355 0.5607744 #>  [532,] 0.33962879 0.3890705 0.4053346 0.5261169 0.6142398 0.6576187 0.6897535 #>  [533,] 0.73738653 0.8103618 0.8189857 0.8284993 0.8510004 0.8795685 0.8951109 #>  [534,] 0.17875079 0.3396288 0.3585382 0.5533974 0.5907733 0.6179367 0.6273748 #>  [535,] 0.32500550 0.3266515 0.3547841 0.3792344 0.4175321 0.4422283 0.4517481 #>  [536,] 0.33064403 0.3969425 0.5079901 0.5199025 0.5263975 0.5330862 0.5579990 #>  [537,] 0.86476367 0.9477399 0.9832344 1.0586136 1.2534981 1.3615438 1.3869811 #>  [538,] 1.51838574 1.6109467 1.7708302 1.8085940 1.9709012 1.9897454 2.1130770 #>  [539,] 0.31191358 0.4145507 0.4342199 0.5136025 0.5556632 0.5776815 0.5888827 #>  [540,] 0.48520405 0.6145141 0.9431510 0.9827255 1.0118221 1.0709103 1.1359482 #>  [541,] 0.40472014 0.4864877 0.6390878 0.6591848 0.7155856 0.7660701 0.7727693 #>  [542,] 0.76364702 0.7853750 0.8647637 1.0036165 1.0303411 1.0931007 1.0985984 #>  [543,] 0.58070930 0.6279492 0.6657246 0.6752513 0.6872129 0.7148179 0.7352546 #>  [544,] 0.61975077 0.9142557 0.9437180 1.0027772 1.0378565 1.1022966 1.2146529 #>  [545,] 0.60396993 0.8556707 0.8925672 0.9236600 0.9622823 0.9663578 0.9743262 #>  [546,] 0.12046345 0.4407778 0.6910868 0.7058085 0.7183874 0.7288252 0.7548969 #>  [547,] 1.17888285 1.2565012 1.3092816 1.3485371 1.3592511 1.3868103 1.3965006 #>  [548,] 0.55249129 0.5894451 0.6794550 0.6825160 0.7403855 0.7499781 0.7685453 #>  [549,] 0.40476741 0.5235680 0.5698808 0.6055756 0.6478767 0.7933394 0.8048888 #>  [550,] 0.59574307 0.6550834 0.7081091 0.8176899 0.8303848 0.8308750 0.8356224 #>  [551,] 0.36883720 0.3790429 0.4196418 0.4813874 0.6354071 0.7087893 0.7210488 #>  [552,] 0.22690537 0.3318503 0.3474324 0.3919076 0.5672823 0.5812286 0.5816418 #>  [553,] 0.25774459 0.3120066 0.5073320 0.6759421 0.6994948 0.7042752 0.7059491 #>  [554,] 0.48465152 0.5241100 0.5428946 0.5505425 0.5685634 0.5802675 0.6282014 #>  [555,] 0.28688126 0.3224021 0.4224186 0.4696288 0.4751730 0.4799773 0.4841708 #>  [556,] 0.42682207 0.4577456 0.5079901 0.5520819 0.6207918 0.6501106 0.6740800 #>  [557,] 0.51817417 0.5442637 0.5868762 0.6314365 0.6477322 0.6781473 0.6986159 #>  [558,] 0.19513800 0.3253874 0.3978315 0.5390598 0.5714364 0.5780151 0.6273748 #>  [559,] 0.60147181 0.6422321 0.6654582 0.7315526 0.7750984 0.8343469 0.8389705 #>  [560,] 0.58039868 0.6049625 0.6840995 0.7140941 0.7261054 0.7437403 0.7692705 #>  [561,] 0.56407060 0.5846558 0.8028055 0.8462224 0.8719151 0.8746693 0.8830011 #>  [562,] 0.34273538 0.3841699 0.4105118 0.4383739 0.4858712 0.5065422 0.5251689 #>  [563,] 0.44366791 0.7238057 1.1969462 1.3358588 1.3543267 1.3886413 1.5250261 #>  [564,] 0.63184141 0.7544464 0.7638342 0.8534673 0.9591824 0.9823241 0.9860083 #>  [565,] 0.53892468 0.6336688 0.8073962 0.8078945 0.9509165 0.9673514 1.0400164 #>  [566,] 1.40517342 1.4799383 1.5337433 1.6619145 1.6645287 1.6742392 1.6770461 #>  [567,] 0.40425462 0.5054819 0.5465505 0.6699691 0.6847809 0.7834679 0.7970432 #>  [568,] 0.29230462 0.2969847 0.3602116 0.3634108 0.3904106 0.5878294 0.6034387 #>  [569,] 0.41354584 0.4359867 0.4786287 0.5156658 0.5329834 0.5480443 0.5491726 #>  [570,] 0.40415075 0.6027456 0.6301278 0.6499022 0.6650514 0.7953267 0.8599447 #>  [571,] 1.01472574 1.1123529 1.1923692 1.3073333 1.3876238 1.5133920 1.5342320 #>  [572,] 1.41605561 1.5498688 1.7465202 1.7507080 1.8019820 1.8112516 1.8627146 #>  [573,] 0.59337182 0.6013404 0.6559592 0.6794917 0.7073037 0.7472879 0.7559327 #>  [574,] 0.20601898 0.2138112 0.2836252 0.3734846 0.3993061 0.4641697 0.5026104 #>  [575,] 0.56988075 0.5799310 0.6264804 0.6338821 0.7155595 0.7585791 0.8802147 #>  [576,] 0.24010441 0.3451244 0.3776825 0.4448724 0.5067279 0.5093840 0.5153017 #>  [577,] 0.44522840 0.4637061 0.5803419 0.6279280 0.7888915 0.8112898 0.8401171 #>  [578,] 0.46177516 0.5032684 0.5560926 0.6384115 0.6558610 0.6738408 0.6795696 #>  [579,] 0.25183425 0.4369720 0.4405283 0.4724317 0.6092113 0.6395914 0.6836550 #>  [580,] 0.55034352 0.8932676 0.9048609 0.9122109 0.9204655 1.0020373 1.0966724 #>  [581,] 0.27957885 0.4029978 0.5986835 0.6859729 0.7006915 0.8743741 0.9495803 #>  [582,] 0.46009541 0.5295352 0.5377479 0.5922188 0.5985136 0.6594093 0.6648714 #>  [583,] 0.16973124 0.3884705 0.4261615 0.4953801 0.5302664 0.6032451 0.6088218 #>  [584,] 0.36096082 0.4292685 0.4315726 0.5161931 0.5861869 0.6151879 0.6519473 #>  [585,] 0.62240532 0.8313961 0.8539695 1.0598134 1.0899057 1.1185382 1.1891441 #>  [586,] 0.53355768 0.6586069 0.7373932 0.8106935 0.8137303 0.8560083 0.8586241 #>  [587,] 0.61434841 0.6742504 0.7758032 0.8632298 0.9866009 0.9946745 1.0171249 #>  [588,] 0.50994700 0.7137102 0.7281672 0.8292282 0.8709165 0.9152130 0.9175304 #>  [589,] 0.35442371 0.4167385 0.4613995 0.4975055 0.5103887 0.7466410 0.7591619 #>  [590,] 0.54835213 0.7573177 0.7731458 0.7745561 0.7955375 0.8407062 0.8494256 #>  [591,] 0.48960202 0.5124989 0.5754902 0.5816418 0.5968568 0.6040564 0.6065801 #>  [592,] 0.40807386 0.5852049 0.5944061 0.6151464 0.6305765 0.6354666 0.6405491 #>  [593,] 0.50451422 0.5435610 0.8748761 0.9055023 1.0413266 1.0492853 1.1193411 #>  [594,] 0.60941048 0.8286666 0.8362473 0.8475980 0.8652686 0.9248949 0.9401446 #>  [595,] 1.02764981 1.0675792 1.1726157 1.1737706 1.2117283 1.2122693 1.2136554 #>  [596,] 0.48648770 0.6071182 0.6077914 0.6451965 0.6664912 0.6796197 0.6990176 #>  [597,] 0.31537054 0.4401888 0.7049388 0.7611104 0.7926868 0.8169729 0.8347674 #>  [598,] 0.33478924 0.3535666 0.3921772 0.3934919 0.4061885 0.4270109 0.4683849 #>  [599,] 0.29403821 0.4011936 0.4167385 0.4725982 0.5336573 0.5487884 0.5762095 #>  [600,] 0.34154377 0.3776825 0.4150283 0.4241536 0.4626339 0.4811862 0.5238636 #>  [601,] 0.29062669 0.3969090 0.4038128 0.6562524 0.6739732 0.6791804 0.7069239 #>  [602,] 0.36985508 0.4767623 0.6505008 0.6659052 0.6908772 0.6949283 0.7074873 #>  [603,] 0.46510675 0.5777555 0.6102530 0.6860259 0.6954669 0.8290772 0.8351042 #>  [604,] 0.58189352 0.6589000 0.6686780 0.6893716 0.8203466 0.8461130 0.8599066 #>  [605,] 0.28459575 0.3376415 0.4192009 0.5731440 0.6105425 0.6149352 0.6214294 #>  [606,] 0.11608719 0.3638735 0.3792344 0.3799525 0.3879428 0.4390372 0.4585823 #>  [607,] 0.80719987 0.8293724 1.0997222 1.2354086 1.3177878 1.3927904 1.4089550 #>  [608,] 0.70018889 1.2503321 1.2780366 1.3383411 1.4643526 1.5313353 1.5387897 #>  [609,] 0.54703206 0.6326815 0.7559557 0.8459306 0.8506859 0.8917204 0.9307966 #>  [610,] 0.27361090 0.3943047 0.4335340 0.5142888 0.5265425 0.5371743 0.5416264 #>  [611,] 0.82697259 0.8951109 0.9285000 0.9448010 1.0888297 1.2039308 1.2067116 #>  [612,] 0.30507871 0.3273770 0.4344419 0.4591137 0.4751239 0.4870335 0.5101134 #>  [613,] 0.54105950 0.7512295 0.8366602 0.9077201 1.0226334 1.0241518 1.1789045 #>  [614,] 0.32685154 0.4467783 0.6437903 0.6957793 0.7111202 0.7504098 0.7703679 #>  [615,] 0.21392826 0.2641698 0.4380816 0.4557797 0.5332089 0.5424867 0.5470235 #>  [616,] 0.16973124 0.3613998 0.4432428 0.4559979 0.5624052 0.5760403 0.6043345 #>  [617,] 0.54910784 0.5686761 0.6911297 0.6945931 0.7177089 0.7198688 0.7597752 #>  [618,] 0.21566331 0.3873494 0.4141784 0.4209737 0.4946848 0.5121898 0.5441918 #>  [619,] 0.31174585 0.3208248 0.3302222 0.3356392 0.3359325 0.3493520 0.4049898 #>  [620,] 0.48416998 0.6688491 0.6699654 0.7330502 0.7655117 0.7961905 0.8147810 #>  [621,] 0.54243723 0.5634303 0.5645729 0.5921655 0.5974787 0.6009983 0.6831728 #>  [622,] 0.44986007 0.6802616 0.6893716 0.8791343 0.8939719 0.9821576 0.9837626 #>  [623,] 0.58665844 0.8052953 0.8582436 0.9003027 0.9672961 0.9803843 1.0155728 #>  [624,] 0.24136134 0.5790625 0.6168309 0.6571811 0.6682516 0.7423945 0.7494334 #>  [625,] 0.52631572 0.6946062 0.8203172 0.8286666 0.8862931 1.0503166 1.0956282 #>  [626,] 0.28362515 0.3572052 0.3782162 0.4301535 0.4609179 0.4736896 0.4951976 #>  [627,] 0.34844429 0.4708596 0.4950304 0.5364844 0.5959543 0.6394717 0.6509156 #>  [628,] 0.70116622 0.8738729 0.9232706 0.9257615 0.9500668 1.0094909 1.0283225 #>  [629,] 0.41787351 0.5240484 0.6101186 0.6395927 0.6518593 0.6559082 0.6670681 #>  [630,] 0.34027172 0.3483590 0.5775658 0.5876252 0.6204556 0.6855360 0.7085435 #>  [631,] 0.48183801 0.7126242 0.7467861 0.7836029 0.8784556 0.8980112 0.8987570 #>  [632,] 0.19419128 0.2839768 0.3802278 0.4279197 0.4645395 0.4706502 0.4918564 #>  [633,] 0.23167235 0.4764203 0.4957492 0.5487723 0.5527083 0.5540839 0.6585077 #>  [634,] 0.37995251 0.4259055 0.4356021 0.4399584 0.4510979 0.5149004 0.6219822 #>  [635,] 0.39363928 0.4841722 0.5142780 0.5335577 0.5623835 0.5888239 0.6495236 #>  [636,] 0.63314368 1.0503016 1.1153360 1.1235266 1.1364532 1.1380188 1.1802990 #>  [637,] 0.85546966 0.8595941 0.8765175 0.8949732 0.9058662 0.9230566 0.9535782 #>  [638,] 0.54449025 1.2893829 1.4274326 1.4313215 1.4664327 1.6344595 1.6742548 #>  [639,] 0.46645854 0.4802830 0.6528180 0.6667336 0.6717098 0.6732536 0.6761374 #>  [640,] 0.35965794 0.4701404 0.5471553 0.5762095 0.6405376 0.6763833 0.6825840 #>  [641,] 0.43598666 0.4381048 0.5115222 0.5120130 0.5410413 0.5505425 0.5846763 #>  [642,] 0.25334228 0.5324512 0.5390755 0.5392326 0.5592968 0.5691145 0.5746819 #>  [643,] 0.36595529 0.3844797 0.4811879 0.5233490 0.5263663 0.5361204 0.5486290 #>  [644,] 0.34235251 0.5245471 0.5290194 0.5560926 0.5857627 0.6764634 0.6833624 #>  [645,] 0.36347243 0.4590754 0.6295294 0.6487658 0.6860259 0.7038720 0.7096475 #>  [646,] 0.20395837 0.4657923 0.4935208 0.5361204 0.5476945 0.5932247 0.6263767 #>  [647,] 0.29910942 0.4783190 0.5909218 0.6377302 0.6388986 0.7084974 0.7317710 #>  [648,] 0.38519494 0.4323350 0.5596796 0.6020497 0.6978972 0.7114342 0.7876461 #>  [649,] 0.35376145 0.4160175 0.4224186 0.4543662 0.4552867 0.4556376 0.4574192 #>  [650,] 1.26516795 1.2810324 1.5369662 1.5829576 1.5865118 1.6985075 1.7013157 #>  [651,] 0.30338965 0.3409042 0.3426225 0.3523410 0.3687144 0.4049237 0.4143892 #>  [652,] 0.38772521 0.4232959 0.5335816 0.5549221 0.5569106 0.6105425 0.6243774 #>  [653,] 0.37150479 0.4389962 0.4868420 0.4953717 0.5373714 0.5376232 0.5427501 #>  [654,] 0.78346792 0.7997734 0.8752845 0.9425318 0.9635824 0.9930162 0.9941969 #>  [655,] 0.49333622 0.4946115 0.5402954 0.5576428 0.6074047 0.7881233 0.8216602 #>  [656,] 0.81634704 0.8325586 0.9138814 0.9159168 0.9335997 0.9660048 1.0039897 #>  [657,] 0.30361897 0.5440199 0.5652880 0.6127630 0.6279280 0.6685404 0.7063750 #>  [658,] 0.37644458 0.4764203 0.5026760 0.5916505 0.6111725 0.6610760 0.7162576 #>  [659,] 0.46121647 0.4937272 0.6014050 0.6290653 0.6328639 0.7201901 0.7545655 #>  [660,] 0.27017635 0.4135228 0.4148534 0.4937272 0.5395340 0.5418916 0.5552143 #>  [661,] 0.58739582 0.6725229 0.7993370 0.9048243 0.9329313 0.9839407 1.0221971 #>  [662,] 0.41394639 0.6016788 0.6157182 0.6422605 0.6474427 0.6831728 0.7126242 #>  [663,] 0.18460255 0.2138112 0.3822591 0.3840070 0.3862574 0.4230495 0.4736896 #>  [664,] 0.30072497 0.3464240 0.3802278 0.3995926 0.6015810 0.6372212 0.6519142 #>  [665,] 0.30975111 0.3880177 0.4556376 0.5139233 0.5483299 0.5894451 0.6325165 #>  [666,] 0.43594864 0.5407081 0.8323526 0.9285000 0.9896595 1.0405765 1.0770914 #>  [667,] 0.34452809 0.3600881 0.3892187 0.4049237 0.4952720 0.5409081 0.5506858 #>  [668,] 0.25073339 0.2655099 0.3688372 0.4002012 0.5335816 0.5430112 0.5562233 #>  [669,] 0.55313581 0.8070900 0.8268404 0.9176893 0.9838827 1.0484415 1.0492853 #>  [670,] 0.77684925 0.7780350 0.8705382 0.8738428 0.9277626 0.9402255 0.9558444 #>  [671,] 0.62196198 0.6366517 0.6978972 0.8322545 0.8497819 0.9580972 1.0241518 #>  [672,] 0.30084255 0.5388117 0.5648963 0.5803478 0.7518248 0.7807733 0.8681542 #>  [673,] 0.43749453 0.5505227 0.5672890 0.5687865 0.5735866 0.5894259 0.5947715 #>  [674,] 0.24863800 0.3318474 0.4301535 0.4310850 0.4422283 0.4810028 0.4870022 #>  [675,] 0.53320894 0.6171614 0.6680559 0.6984509 0.7053176 0.7166298 0.7309727 #>  [676,] 0.39983873 0.4405283 0.4797045 0.5156670 0.5388781 0.5728042 0.6942725 #>  [677,] 0.35368533 0.4474790 0.4496334 0.4678426 0.6593369 0.7176423 0.7300486 #>  [678,] 0.39190757 0.4899965 0.5306228 0.5583424 0.6397865 0.6539415 0.6601470 #>  [679,] 0.42631331 0.4291071 0.5682878 0.6235444 0.6862337 0.7036078 0.7612428 #>  [680,] 0.40020213 0.4387530 0.4914823 0.5162458 0.5411882 0.5538449 0.5839871 #>  [681,] 0.27824019 0.3971149 0.4167784 0.4673479 0.4958828 0.5184400 0.5692543 #>  [682,] 0.44486184 0.5100506 0.5699179 0.5792501 0.5905829 0.6962281 0.6983024 #>  [683,] 0.63366877 0.7138283 0.8833182 0.9951903 0.9986345 1.0016824 1.0486325 #>  [684,] 0.32908268 0.3829368 0.4572627 0.4617752 0.5499103 0.5675280 0.5688572 #>  [685,] 0.47289305 0.4739998 0.6328005 0.6521120 0.6720328 0.6739434 0.7266951 #>  [686,] 0.35509133 0.4265314 0.6051751 0.6168309 0.6865512 0.7016635 0.7183189 #>  [687,] 0.71885913 0.8323526 0.9055023 0.9176893 0.9448010 1.1334821 1.1536165 #>  [688,] 0.51403851 0.5219559 0.5413375 0.5480443 0.6355625 0.6555136 0.6644830 #>  [689,] 0.61265766 0.6874574 0.7786590 0.8613076 0.9503610 0.9610233 1.0182848 #>  [690,] 0.42653138 0.4625601 0.4763041 0.5893919 0.6858187 0.6941150 0.6977133 #>  [691,] 0.29444451 0.3104717 0.4775865 0.5029744 0.5991155 0.6026409 0.6093745 #>  [692,] 0.69054547 0.8296649 0.8948670 0.9504654 1.0171249 1.0282789 1.0300253 #>  [693,] 0.51757671 0.5368974 0.7315526 0.7389885 0.8092806 0.8729183 0.8828692 #>  [694,] 0.21674498 0.2507334 0.4196418 0.4596097 0.5467713 0.5569106 0.6194824 #>  [695,] 0.69062254 0.8392936 1.1106780 1.1193411 1.1366575 1.1374524 1.1464533 #>  [696,] 0.34682822 0.3859824 0.4531165 0.4946232 0.5408715 0.5927076 0.5948363 #>  [697,] 0.95620290 1.1272844 1.1292652 1.3601725 1.4219230 1.4411477 1.4704535 #>  [698,] 0.26343145 0.4435184 0.5219604 0.5413950 0.5726195 0.6162140 0.6336426 #>  [699,] 0.42701073 0.5527083 0.8069478 0.8241123 0.8512284 0.8574372 0.8688199 #>  [700,] 0.36336045 0.4141241 0.4178735 0.4315726 0.5211340 0.6684754 0.6770869 #>  [701,] 0.54105950 0.9021926 0.9023072 1.1646467 1.1690400 1.1740738 1.2017255 #>  [702,] 0.33332358 0.4941352 0.5491287 0.5514421 0.5823703 0.6171313 0.6328639 #>  [703,] 0.31537054 0.4176534 0.6411925 0.6462147 0.7403294 0.7454633 0.7899675 #>  [704,] 0.26328614 0.2638343 0.3096327 0.3402142 0.4377764 0.4409665 0.5062397 #>  [705,] 0.38149111 0.3966306 0.4026726 0.4178758 0.4513943 0.4525542 0.5153017 #>  [706,] 0.15472873 0.3533348 0.3699957 0.3862040 0.4205965 0.4325937 0.5418916 #>  [707,] 0.43000173 0.5073444 0.5338096 0.5381579 0.6499022 0.6594966 0.6792359 #>  [708,] 0.33323683 0.4416356 0.4746625 0.4969829 0.5978585 0.6048488 0.6156391 #>  [709,] 0.60490980 0.6197508 0.6389791 0.6671744 0.6842797 0.8041659 0.8240498 #>  [710,] 0.44123648 0.5963301 0.6770869 0.6782984 0.7436061 0.7591996 0.7596100 #>  [711,] 0.36738405 0.4432428 0.4953801 0.5027575 0.5266475 0.5653288 0.5719470 #>  [712,] 0.44109626 0.5182610 0.8114595 0.8182231 0.8704664 0.8718881 0.8750923 #>  [713,] 0.35346968 0.7246401 0.7499065 0.7823791 0.8305809 0.9931664 1.0404170 #>  [714,] 0.58893642 0.6124386 0.6788038 0.7691026 0.7834769 0.8118543 0.8310321 #>  [715,] 0.66340973 0.8016984 0.8089124 0.8649101 0.8843676 0.9499100 1.0330265 #>  [716,] 0.14605421 0.6347718 0.6725681 0.7590693 0.7616078 0.7722215 0.7821952 #>  [717,] 0.25735799 0.3537615 0.3695420 0.3777877 0.4214002 0.4252863 0.4281232 #>  [718,] 0.33022224 0.3441288 0.4096363 0.4386172 0.4585147 0.5031696 0.5193626 #>  [719,] 0.65860686 0.8196058 0.8914782 0.9086368 0.9839407 1.0014516 1.0230460 #>  [720,] 0.39509527 0.5139233 0.5447037 0.5524913 0.8080131 0.8155186 0.8215988 #>  [721,] 0.55933129 0.6217602 0.6965583 0.7067615 0.7703424 0.8276266 0.8368484 #>  [722,] 0.63580413 0.7688035 0.8106643 0.9246408 0.9380414 0.9439554 1.0680439 #>  [723,] 0.46256011 0.4801519 0.5622388 0.6051751 0.6279492 0.6551946 0.6571811 #>  [724,] 0.34717912 0.4045419 0.5436368 0.6388986 0.7033968 0.7442621 0.7580649 #>  [725,] 0.51181402 0.5664642 0.6071722 0.6465218 0.6607136 0.6631087 0.6820446 #>  [726,] 0.75122951 0.7833552 0.8497819 0.8599066 0.8806943 0.9128641 0.9215414 #>  [727,] 0.22735807 0.5369339 0.5880864 0.6313239 0.6365637 0.6494028 0.6978221 #>  [728,] 0.69858196 0.8308600 0.8988011 0.9483479 0.9529792 0.9557612 0.9866009 #>  [729,] 0.58913260 0.5904511 1.0997222 1.2397709 1.3674834 1.3693199 1.3854303 #>  [730,] 0.47359279 0.5291050 0.5563820 0.6234920 0.6501716 0.6651793 0.6910260 #>  [731,] 0.38658483 0.4641697 0.4951976 0.5142720 0.5381997 0.5654464 0.5733830 #>  [732,] 0.53774224 0.6493739 0.6512504 0.6671744 0.7118943 0.7749027 0.7782724 #>  [733,] 0.40440349 0.4300163 0.5196985 0.5397259 0.6101514 0.6157228 0.6182368 #>  [734,] 1.35351303 1.6109467 1.7051863 1.7236095 1.8262364 1.9428414 2.0175106 #>  [735,] 0.29359887 0.4279511 0.4804884 0.5369971 0.5482631 0.5865848 0.5953025 #>  [736,] 0.90613818 0.9500898 0.9713147 1.0095566 1.0338680 1.1879064 1.2013942 #>  [737,] 0.52439153 0.6675391 0.8305809 1.0501612 1.0567316 1.1273738 1.1840653 #>  [738,] 0.42791970 0.4785496 0.5145920 0.5260537 0.5268112 0.5434271 0.5488552 #>  [739,] 0.77256093 0.8926279 1.0544813 1.1382764 1.1418979 1.1830457 1.2970655 #>  [740,] 0.27824019 0.3109608 0.3987329 0.4258963 0.5017250 0.5105818 0.5888744 #>  [741,] 0.27773200 0.8213555 0.8559930 0.9525178 0.9838940 1.0723668 1.1206739 #>  [742,] 0.38767281 0.4026726 0.4205946 0.4471608 0.4802830 0.5507127 0.5815310 #>  [743,] 0.32237498 0.3764880 0.4013733 0.4537154 0.4802813 0.4904619 0.5476945 #>  [744,] 0.49446897 0.5258675 0.5579990 0.5600066 0.5672890 0.5699179 0.6562205 #>  [745,] 0.35748401 0.5123131 0.5290194 0.5663951 0.5957944 0.6198647 0.6897391 #>  [746,] 0.31719653 0.3848797 0.4561031 0.4979489 0.5333971 0.5371761 0.5391688 #>  [747,] 0.67604518 0.9275340 1.0278988 1.0327197 1.2267464 1.2375629 1.3199692 #>  [748,] 0.12222005 0.4177120 0.6268746 0.7180089 0.7371032 0.7431611 0.7436420 #>  [749,] 0.74546332 0.7926868 0.8942326 1.0656954 1.1363119 1.1613837 1.1821319 #>  [750,] 0.43000173 0.5052092 0.5965068 0.6683562 0.7105456 0.7366041 0.7704925 #>  [751,] 0.28459575 0.3694457 0.5026201 0.6070519 0.6188489 0.6194824 0.6218011 #>  [752,] 0.70730375 0.7993732 0.8869694 0.9236479 0.9618237 1.0278988 1.0328210 #>  [753,] 0.45428253 0.5213248 0.5381579 0.5430112 0.6351318 0.6863909 0.6964509 #>  [754,] 0.73790913 0.9146707 0.9268745 0.9441675 0.9728522 0.9886703 1.0041557 #>  [755,] 0.51540272 0.5320156 0.5852049 0.6104892 0.6833624 0.6897391 0.6911030 #>  [756,] 0.41347323 0.4387530 0.4678809 0.4871645 0.4934944 0.5402894 0.5618440 #>  [757,] 1.17827006 1.2534981 1.2886819 1.3553739 1.3561492 1.4709502 1.4736376 #>  [758,] 0.48695844 0.5510996 0.5864232 0.6654570 0.6918404 0.6931311 0.6985820 #>  [759,] 1.60098152 1.6043613 1.6645287 1.8161045 1.8887888 1.9565765 2.0145514 #>  [760,] 0.17672129 0.2947138 0.3361387 0.3529613 0.4579331 0.4654775 0.5653037 #>  [761,] 0.27361090 0.3842518 0.3946160 0.4463409 0.4822301 0.4970682 0.5173598 #>  [762,] 0.09831649 0.3687144 0.3738390 0.3752012 0.4383739 0.4483313 0.4989207 #>  [763,] 0.40807386 0.6692890 0.7407087 0.7445498 0.7617625 0.7812317 0.8029511 #>  [764,] 0.33323683 0.3636660 0.4090712 0.4678809 0.5384396 0.5770353 0.6342586 #>  [765,] 0.74149780 0.7884421 0.8924413 0.8925216 1.0852243 1.1068269 1.1279884 #>  [766,] 0.88475525 1.0307034 1.1031474 1.1288179 1.1767783 1.2611665 1.3072379 #>  [767,] 0.39276221 0.4141241 0.4186988 0.5460700 0.5804832 0.5861869 0.5965068 #>  [768,] 0.60683531 0.6239664 0.6329802 0.6571812 0.7014294 0.7681392 0.9043524 #>  [769,] 0.25183425 0.3287616 0.4958141 0.5156670 0.6469373 0.7240607 0.7927622 #>  [770,] 0.81951004 1.0033135 1.0122607 1.1505867 1.1603421 1.1781983 1.1982659 #>  [771,] 0.63388207 0.7708441 0.8405305 0.8498749 0.9045846 0.9466005 0.9803991 #>  [772,] 0.38596645 0.4342199 0.4684409 0.5602363 0.5714456 0.5805367 0.5833092 #>  [773,] 0.63764715 0.7092790 0.8200161 0.8512293 0.8517123 0.9066578 0.9243237 #>  [774,] 0.29062669 0.4554043 0.4762512 0.6821908 0.6890077 0.7307151 0.7315235 #>  [775,] 0.27996485 0.5089294 0.5409551 0.5731555 0.6783771 0.7118041 0.7215748 #>  [776,] 0.38532828 0.4681975 0.5026760 0.5540839 0.5630189 0.6028126 0.6175580 #>  [777,] 0.51411964 0.5156462 0.5420390 0.5666462 0.6606336 0.6987629 0.7096344 #>  [778,] 0.28914798 0.3341115 0.3905825 0.4007505 0.4423288 0.4925744 0.5092038 #>  [779,] 0.44351835 0.5441918 0.5751142 0.5771078 0.5850060 0.6032333 0.6109984 #>  [780,] 0.42911358 0.4658710 0.4704423 0.5636624 0.5749203 0.6282014 0.6493615 #>  [781,] 0.58078479 0.6287389 0.6727315 0.7011662 0.7128726 0.7296091 0.7383797 #>  [782,] 0.17515967 0.3148796 0.4622053 0.4935208 0.5181742 0.5225545 0.5405678 #>  [783,] 0.34235251 0.4319502 0.4692709 0.4880859 0.5052213 0.5123131 0.5347047 #>  [784,] 0.27949333 0.5545604 0.5978329 0.6031911 0.6126577 0.6343305 0.7437618 #>  [785,] 0.24171039 0.3686001 0.4558091 0.5551246 0.6074524 0.6198224 0.6720896 #>  [786,] 0.39297509 0.3943971 0.4756200 0.5476847 0.5500657 0.5557123 0.5801731 #>  [787,] 0.62045966 0.6634097 0.6801610 0.7152110 0.7696425 0.8052953 0.8215516 #>  [788,] 0.54426365 0.5638175 0.6749506 0.6987118 0.7195750 0.7425097 0.7472007 #>  [789,] 0.30084255 0.5204844 0.5390357 0.6601272 0.6631301 0.7861197 0.7917998 #>  [790,] 0.21863794 0.4566923 0.5100506 0.6264804 0.6478767 0.7233856 0.7629658 #>  [791,] 0.69343238 0.7916039 0.8174900 0.8209361 0.8597213 0.8956150 0.9191062 #>  [792,] 0.31575585 0.3376415 0.3694457 0.6310238 0.6630490 0.6687645 0.6753017 #>  [793,] 0.33731955 0.3451244 0.4241536 0.4726576 0.4765648 0.4850090 0.5104808 #>  [794,] 0.33330030 0.3430224 0.4944690 0.5286509 0.5507820 0.5691711 0.6740800 #>  [795,] 0.48015193 0.4870973 0.5434333 0.5681859 0.5790625 0.6224556 0.6920199 #>  [796,] 0.91545188 0.9851428 0.9985390 1.2401699 1.2706049 1.4116211 1.4267028 #>  [797,] 0.26927678 0.3941537 0.4221518 0.4449027 0.4632372 0.4782392 0.5086648 #>  [798,] 0.30577483 0.4371707 0.5345808 0.6105168 0.6122402 0.6865432 0.7719839 #>  [799,] 0.85802249 0.9283156 1.2431804 1.2509933 1.2636073 1.2909028 1.3068810 #>  [800,] 0.60499899 0.6353063 0.6588731 0.6686780 0.6783649 0.7031266 0.7059153 #>  [801,] 0.35808541 0.3596801 0.4380816 0.4387298 0.4474902 0.4715928 0.4920686 #>  [802,] 0.42497290 0.4498638 0.7653629 0.8186734 0.8834345 0.8955751 0.9027206 #>  [803,] 0.36096082 0.3633604 0.4226290 0.5460700 0.5624287 0.6155368 0.6287389 #>  [804,] 0.41459923 0.4496334 0.4880470 0.4927598 0.4971807 0.5330295 0.5530242 #>  [805,] 0.87209495 1.2580143 1.5146902 1.5192367 1.6207223 1.7483121 1.7926297 #>  [806,] 0.32580181 0.5388117 0.5390357 0.6096010 0.6983498 0.7022300 0.7152110 #>  [807,] 0.22735807 0.3700770 0.4739122 0.4933392 0.6045138 0.6468782 0.7561484 #>  [808,] 0.36954200 0.3791834 0.3862574 0.4063097 0.4711711 0.4919237 0.4926647 #>  [809,] 0.31170307 0.6327033 0.7336474 0.9043976 0.9048609 0.9850208 1.0023837 #>  [810,] 0.42322607 0.4259888 0.4446164 0.4449831 0.4667387 0.4983489 0.5171208 #>  [811,] 0.47742160 0.7927973 0.8392936 0.9368811 0.9712860 1.0107862 1.0526832 #>  [812,] 0.57426260 0.5857830 0.6128149 0.6252175 0.6313865 0.6448859 0.6608414 #>  [813,] 0.40299783 0.5424989 0.6948786 0.7302712 0.8294974 0.9501195 0.9531711 #>  [814,] 0.72727075 0.8829206 0.9873766 1.0244392 1.0398980 1.2170482 1.2480076 #>  [815,] 0.24949429 0.4851378 0.4852129 0.5202777 0.6531028 0.7033036 0.7176815 #>  [816,] 0.51507672 0.5471553 0.5615487 0.6850255 0.7931495 0.7975922 0.8424111 #>  [817,] 0.15604009 0.4431694 0.5146468 0.5624673 0.5727703 0.6123558 0.6131775 #>  [818,] 0.65828602 0.6739732 0.6864811 0.6890077 0.7181508 0.7231773 0.7530624 #>  [819,] 0.51564803 0.5235680 0.5761168 0.7585791 0.8006608 0.8498749 0.9355411 #>  [820,] 0.51459128 0.5371761 0.5935440 0.6053123 0.6092135 0.6686627 0.6725681 #>  [821,] 0.33148026 0.3717019 0.4098502 0.5120130 0.5334669 0.5664642 0.6158515 #>  [822,] 0.22038706 0.2836823 0.5179364 0.5479470 0.5576100 0.6203619 0.8928497 #>  [823,] 0.65890004 0.6900357 0.7414978 0.8366602 0.9023072 0.9483216 0.9959242 #>  [824,] 0.29471381 0.3487168 0.4474640 0.4799773 0.4854754 0.4999563 0.5302813 #>  [825,] 0.20417561 0.4846515 0.5846763 0.5975842 0.6272176 0.6513768 0.6654570 #>  [826,] 0.22475057 0.2403118 0.3006863 0.3547841 0.3638735 0.4968724 0.4979489 #>  [827,] 0.33702873 0.8849706 1.0227250 1.2455886 1.2472189 1.2625984 1.2728276 #>  [828,] 0.23535424 0.2888365 0.4209737 0.5078930 0.5609209 0.6032333 0.6234146 #>  [829,] 0.43557756 0.5741917 0.5876252 0.6720861 0.6932422 0.7299574 0.8358283 #>  [830,] 0.34242776 0.3594535 0.3943971 0.6445696 0.6479357 0.6531994 0.6720896 #>  [831,] 0.42497290 0.4378084 0.6613781 0.6717098 0.7180839 0.8036945 0.8090444 #>  [832,] 0.18842874 0.3712625 0.4171864 0.4988816 0.5338943 0.5859090 0.6002829 #>  [833,] 0.59828158 0.6140907 0.6609668 0.6916844 0.7095298 0.7533940 0.7615608 #>  [834,] 0.85086686 0.8693708 1.0402638 1.0913809 1.1162744 1.1580728 1.1882179 #>  [835,] 0.39484804 0.5377422 0.5896853 0.5998148 0.6132736 0.7345074 0.7400159 #>  [836,] 0.28200459 0.4838382 0.5056986 0.7097586 0.7118269 0.7154967 0.7260693 #>  [837,] 0.28200459 0.4255819 0.5311183 0.5385190 0.5857583 0.6752513 0.7014631 #>  [838,] 0.72854123 0.8213555 1.2479845 1.2509933 1.3578865 1.3883013 1.4704535 #>  [839,] 0.35221305 0.4658086 0.4688457 0.4852129 0.5470235 0.5481457 0.5696647 #>  [840,] 0.32580181 0.4869584 0.5029816 0.5929361 0.6505765 0.6601272 0.6815772 #>  [841,] 0.24031182 0.3266515 0.3289196 0.3879428 0.4055814 0.4310850 0.4802058 #>  [842,] 0.63184141 0.7825293 0.9278780 0.9812174 0.9830406 1.0397144 1.0555835 #>  [843,] 0.40636897 0.5420390 0.5550702 0.5862135 0.5904569 0.6071488 0.6836963 #>  [844,] 0.47831904 0.4992977 0.5258547 0.5944776 0.5963457 0.6599681 0.7640140 #>  [845,] 0.46638959 0.5044446 0.5824304 0.6530868 0.6635628 0.6810039 0.7583725 #>  [846,] 0.18634156 0.4660731 0.5016230 0.5377097 0.5390598 0.5907733 0.6081748 #>  [847,] 0.29038507 0.3045802 0.3361387 0.3493174 0.3687756 0.3766028 0.4119493 #>  [848,] 0.50444460 0.5294214 0.6075915 0.7424908 0.8023538 0.8194373 0.9051578 #>  [849,] 0.18945147 0.2116450 0.2573580 0.3110705 0.3223047 0.3731118 0.3766028 #>  [850,] 0.38970748 0.5717071 0.5865542 0.5878294 0.5908949 0.6282007 0.6367832 #>  [851,] 0.24949429 0.4835535 0.4973154 0.5481457 0.6148331 0.7302801 0.7861184 #>  [852,] 0.46124088 0.5084755 0.5156658 0.5596796 0.5802675 0.6023530 0.6047881 #>  [853,] 0.66924590 0.7049388 0.8096001 0.8637338 0.8647272 0.8857966 0.9629770 #>  [854,] 0.40949008 0.4903354 0.6040936 0.6654582 0.7892187 0.9190275 0.9911303 #>  [855,] 0.45907545 0.5777555 0.5780089 0.7002335 0.7745468 0.8503036 0.8679628 #>  [856,] 0.60555636 0.7423913 0.7591619 0.7960978 0.9138814 0.9284428 1.1086736 #>  [857,] 0.54070810 0.5956861 0.7189500 0.7750984 0.7991863 0.8518376 0.8815974 #>  [858,] 0.43061825 0.4657923 0.4811879 0.5268112 0.5396213 0.5876804 0.5909889 #>  [859,] 0.47952646 0.5485678 0.5796519 0.7068683 0.7246722 0.7839269 0.8756713 #>  [860,] 0.34512046 0.3936393 0.5426927 0.5617833 0.5775658 0.6252175 0.6699691 #>  [861,] 0.33018724 0.6105168 0.6239664 0.6644961 0.6850255 0.7567525 0.7708239 #>  [862,] 0.44522840 0.4481359 0.5284077 0.5530242 0.5652880 0.5863829 0.6606663 #>  [863,] 0.44813593 0.4637061 0.4678426 0.4880470 0.5557236 0.6843397 0.7063750 #>  [864,] 0.62529285 0.8191095 1.0646795 1.0720833 1.0783879 1.1276875 1.1329767 #>  [865,] 0.41119252 0.4577456 0.5452479 0.6297758 0.6929260 0.7024502 0.7180998 #>  [866,] 0.27912903 0.4651760 0.5081217 0.5602555 0.6379255 0.7991863 0.8322765 #>  [867,] 1.15661048 1.3462438 1.4471441 1.5645124 1.5808967 1.6063300 1.6320500 #>  [868,] 0.54139322 0.6773988 0.7105605 0.7149278 0.7211515 0.7299574 0.7337276 #>  [869,] 0.31133296 0.4822301 0.5088305 0.5234874 0.5358143 0.5401556 0.5946605 #>  [870,] 0.50344372 0.6795696 0.7893724 0.8130988 0.8172974 0.8690556 0.8829630 #>  [871,] 0.24531337 0.2903851 0.2977648 0.3203283 0.3223047 0.3224021 0.3613120 #>  [872,] 1.09268104 1.1382408 1.1923692 1.2465492 1.3481100 1.4001927 1.4189594 #>  [873,] 0.37265397 0.4918564 0.4958828 0.5303708 0.5321874 0.5558120 0.5829550 #>  [874,] 0.48520405 0.7279412 0.8074916 0.9682564 1.1254497 1.1566882 1.1824327 #>  [875,] 0.26594121 0.5953002 0.5957431 0.6172237 0.6716399 0.6896890 0.6984653 #>  [876,] 0.81867341 0.8726695 0.9058662 0.9245956 0.9318064 1.0447502 1.0583478 #>  [877,] 0.66137812 0.6894816 0.8342098 0.8775902 0.9044680 0.9185322 0.9245897 #>  [878,] 0.27957885 0.5147946 0.5424989 0.5528173 0.7625186 0.7667228 0.7693490 #>  [879,] 0.12222005 0.3100312 0.6142398 0.6262270 0.6349211 0.6857133 0.7149717 #>  [880,] 0.55831393 0.5605773 0.6047171 0.6481022 0.9314802 0.9439554 0.9520623 #>  [881,] 0.49736419 0.5917555 0.6223325 0.6957458 0.7322672 0.7716297 0.7745400 #>  [882,] 0.40360403 0.5054819 0.5453375 0.5558413 0.6633979 0.7233839 0.7326161 #>  [883,] 0.37547110 0.4268221 0.5448074 0.5452479 0.6043597 0.6078415 0.6495392 #>  [884,] 0.29963193 0.3668414 0.3792134 0.3928074 0.4425622 0.4718084 0.4798583 #>  [885,] 0.64379029 0.7468705 0.8206195 0.8262232 0.8541983 0.8743703 0.9315260 #>  [886,] 0.30096399 0.3892187 0.4546167 0.4548463 0.5983123 0.6060355 0.6328005 #>  [887,] 0.46703537 0.4767417 0.5145920 0.5321874 0.5712901 0.5777134 0.5909889 #>  [888,] 0.51564803 0.6582860 0.7708441 0.7788900 0.8357769 0.8599289 0.8652686 #>  [889,] 0.53892468 1.0486325 1.1644871 1.1717316 1.2046336 1.2400584 1.2450309 #>  [890,] 0.32282065 0.3540405 0.4008547 0.4574192 0.4597129 0.4749997 0.4819657 #>  [891,] 0.47742160 0.7234641 0.8592318 1.0554974 1.0620862 1.1109065 1.1366575 #>  [892,] 0.34197322 0.3716588 0.4356021 0.5047202 0.5166129 0.5323596 0.5344388 #>  [893,] 0.66622344 0.6909275 0.8534496 0.8539695 0.9764982 0.9863673 0.9984615 #>  [894,] 0.87209495 1.0808862 1.3254115 1.3404295 1.4891477 1.5381128 1.5951257 #>  [895,] 0.38741583 0.4344419 0.4488586 0.4533024 0.4672448 0.4848637 0.4975694 #>  [896,] 1.03245278 1.1925389 1.2063668 1.2165550 1.2345554 1.2772759 1.3177358 #>  [897,] 0.33702873 0.9317456 1.1587109 1.2196853 1.2244513 1.2387571 1.2509943 #>  [898,] 0.86087471 0.8775427 1.0586136 1.2316273 1.2486592 1.3250910 1.3474000 #>  [899,] 0.24495826 0.3665608 0.3796179 0.4394007 0.4699607 0.4970682 0.4973593 #>  [900,] 0.53693393 0.5509196 0.5758092 0.6077715 0.6372212 0.6468782 0.6495503 #>  [901,] 0.60751210 0.6347718 0.6750756 0.8400073 0.8639459 0.8938192 0.8987570 #>  [902,] 0.36475602 0.4359686 0.4681975 0.4957492 0.5509920 0.6065373 0.6610760 #>  [903,] 0.71925597 0.7238057 1.4242708 1.4808959 1.6356863 1.7811930 1.8049915 #>  [904,] 0.33217500 0.6075172 0.7308439 0.7573067 0.7745370 0.8331341 0.8373647 #>  [905,] 1.08159736 1.0956074 1.1598090 1.2341912 1.2433489 1.2582241 1.2708966 #>  [906,] 0.29083287 0.3991506 0.5263341 0.5313566 0.5715888 0.5801731 0.5866417 #>  [907,] 0.31849457 0.3375275 0.4090368 0.4105118 0.4221518 0.4514099 0.5643394 #>  [908,] 0.30096399 0.5509830 0.5541190 0.6393489 0.6521120 0.6928918 0.7301782 #>  [909,] 0.27773200 0.7285412 0.9501224 0.9562029 0.9740056 1.0353836 1.1208545 #>  [910,] 0.35965794 0.5150767 0.5336573 0.6122402 0.6531913 0.6848237 0.6920594 #>  [911,] 0.32876163 0.4724317 0.5728042 0.5959871 0.6017204 0.7424823 0.7535873 #>  [912,] 0.20612255 0.2839768 0.3995926 0.4600954 0.4980985 0.5371465 0.5509196 #>  [913,] 0.23307038 0.3248874 0.4146456 0.4839062 0.4901973 0.5347778 0.5501868 #>  [914,] 0.23993803 0.5254370 0.6040564 0.6101514 0.6314974 0.6320861 0.6400916 #>  [915,] 0.69003570 0.8739171 0.8805306 0.8924413 1.0279754 1.0449738 1.1265626 #>  [916,] 0.40415075 0.4847007 0.6844604 0.7136063 0.7381164 0.7421462 0.7458784 #>  [917,] 0.18051066 0.3621718 0.6046618 0.6203619 0.6725229 0.6859977 0.7025122 #>  [918,] 0.39323414 0.4813874 0.5092038 0.5139742 0.5467713 0.5562233 0.5636624 #>  [919,] 0.33470661 0.4189063 0.4808973 0.5373714 0.5594251 0.6065373 0.6195995 #>  [920,] 0.70069148 0.8073962 0.8207193 0.8294974 0.8352566 0.8714288 0.9656345 #>  [921,] 0.34743241 0.3678879 0.4061678 0.4076304 0.4277711 0.4468730 0.5275568 #>  [922,] 0.34309068 0.4307515 0.5409551 0.5519855 0.5602452 0.6127630 0.7134870 #>  [923,] 0.50898016 0.5401785 0.6252212 0.6393644 0.6450369 0.6670446 0.6746208 #>  [924,] 0.55281735 0.5803478 0.5986835 0.7302712 0.7642574 0.7886514 0.7917998 #>  [925,] 0.46323720 0.4711711 0.5015095 0.5227071 0.5300852 0.6057881 0.6281770 #>  [926,] 0.37300207 0.5505227 0.5666462 0.5839332 0.6252212 0.6690963 0.6836963 #>  [927,] 0.40119359 0.4975055 0.5589544 0.6055564 0.6531913 0.6584113 0.7604565 #>  [928,] 0.48183801 0.4841700 0.6325459 0.7198504 0.7318016 0.7725609 0.7955375 #>  [929,] 0.61025299 0.7080839 0.8064294 0.8291200 0.8344719 0.8517123 0.8693708 #>  [930,] 0.35368533 0.4116207 0.4613834 0.5041523 0.5568096 0.5683251 0.6135434 #>  [931,] 0.31605501 0.4617185 0.5401785 0.5809788 0.5947715 0.6274038 0.6835825 #>  [932,] 0.36375067 0.3966306 0.4539625 0.4848637 0.5092787 0.5233490 0.5512903 #>  [933,] 0.66159483 0.6653664 0.7231773 0.7462066 0.7828199 0.7834769 0.8125567 #>  [934,] 0.72467222 0.8892709 0.8942326 0.9342293 1.0019782 1.0190099 1.0817150 #>  [935,] 0.17515967 0.2077467 0.4378483 0.4446930 0.4635054 0.4856521 0.4920686 #>  [936,] 0.63714896 0.6514300 0.8096001 0.8222615 0.8256855 0.8450948 0.8645342 #>  [937,] 0.56154873 0.7014294 0.7433678 0.8551267 1.0064208 1.0101535 1.0104143 #>  [938,] 0.50994700 0.5270976 0.5541190 0.5983123 0.6625547 0.6720328 0.6987629 #>  [939,] 1.13746210 1.1554039 1.1709452 1.2012700 1.3270357 1.3400856 1.4142670 #>  [940,] 0.28743920 0.5563820 0.5856901 0.5996128 0.6547929 0.6700591 0.7373932 #>  [941,] 0.67425040 0.6905455 0.7710334 0.9557612 0.9796315 1.0197606 1.1882176 #>  [942,] 0.37150479 0.4798121 0.4808973 0.5166129 0.5182849 0.5829721 0.5888863 #>  [943,] 0.28688126 0.4258963 0.4281232 0.4670354 0.4883674 0.5060454 0.5184400 #>  [944,] 0.77827903 0.7819818 0.8017048 0.8162861 0.8181842 0.8197966 0.8473799 #>  [945,] 0.82162781 1.0372120 1.1002160 1.1334750 1.2121846 1.2270154 1.2946210 #>  [946,] 0.37025403 0.4167265 0.5974787 0.6093745 0.6213680 0.6260663 0.6454604 #>  [947,] 0.25146438 0.3927622 0.4704423 0.5118140 0.5141644 0.5981667 0.6030569 #>  [948,] 0.78545275 1.4532707 1.5313353 1.5427409 1.6086276 1.7504291 1.7885411 #>  [949,] 0.97271309 0.9821576 1.0197606 1.0300253 1.0468094 1.0555918 1.2018503 #>  [950,] 0.54356099 0.6906225 0.7515560 0.8163552 0.8268404 1.0246197 1.0835439 #>  [951,] 0.54343326 0.5726713 0.6079400 0.6362282 0.6411489 0.6882258 0.7099575 #>  [952,] 0.46844091 0.5961116 0.6552774 0.6681492 0.6705820 0.6705824 0.6773838 #>  [953,] 0.43749453 0.5324512 0.5839332 0.6552774 0.6928143 0.7366193 0.7452899 #>  [954,] 0.43154461 0.4399540 0.4870235 0.5126823 0.5397259 0.5775316 0.5931087 #>  [955,] 1.02021825 1.1881607 1.1982660 1.2262335 1.2503180 1.2585351 1.2634868 #>  [956,] 0.36567019 0.4878582 0.4992977 0.5924440 0.6344151 0.6589955 0.7024502 #>  [957,] 0.54300594 0.6047171 0.6385052 0.8357751 0.8688679 0.8910615 0.9210669 #>  [958,] 0.26227964 0.5029744 0.5263975 0.5506858 0.5875720 0.5980812 0.6151065 #>  [959,] 0.28368227 0.3698291 0.6985545 0.7824819 0.8126316 0.8950014 0.9177645 #>  [960,] 0.49736419 0.5183471 0.6872977 0.7351015 0.7555208 0.7721703 0.8106311 #>  [961,] 0.39870005 0.4068494 0.4138580 0.4387298 0.4493096 0.4648980 0.4751239 #>  [962,] 0.32908268 0.4148534 0.4663373 0.4952917 0.5148448 0.5823703 0.5933718 #>  [963,] 0.20957563 0.5594251 0.6219183 0.6602812 0.7078393 0.7360118 0.7703560 #>  [964,] 0.29793315 0.3097676 0.3946160 0.4495239 0.4973593 0.5219604 0.5401556 #>  [965,] 0.40847446 0.4752569 0.5648596 0.5927076 0.6392017 0.6626822 0.6950428 #>  [966,] 0.24032959 0.3109608 0.3498404 0.3971149 0.4755460 0.5466231 0.5519391 #>  [967,] 0.83996762 0.8429282 0.8430529 0.8506495 0.8805370 0.9030809 0.9297668 #>  [968,] 0.75906932 0.7979691 0.8549952 0.8591549 0.8739171 0.9021926 0.9483216 #>  [969,] 0.72181504 0.7701056 0.8012313 0.8261697 0.8506495 0.9436734 0.9631076 #>  [970,] 0.45928747 0.6874574 0.7040529 0.7155653 0.7596100 0.7642973 0.8288619 #>  [971,] 0.48355347 0.5202777 0.5696647 0.6209378 0.8020739 0.8293285 0.8423353 #>  [972,] 0.52454708 0.5688572 0.5876460 0.5896110 0.6384115 0.6425840 0.6848581 #>  [973,] 0.23167235 0.4270107 0.5509920 0.6065801 0.6111725 0.6277603 0.6409072 #>  [974,] 0.47085961 0.6588610 0.6596290 0.6879263 0.7065132 0.7088534 0.7781482 #>  [975,] 0.24984831 0.4459982 0.7060311 0.8481894 0.8836024 0.9899705 0.9995362 #>  [976,] 0.48003483 0.5257607 0.5606464 0.6075915 0.6931258 0.7270252 0.7278883 #>  [977,] 0.24909537 0.6965583 0.8719151 0.8899695 0.8925672 0.9524394 0.9771197 #>  [978,] 0.47499973 0.5926426 0.6021089 0.6590841 0.6911297 0.7376685 0.7610334 #>  [979,] 0.27414771 0.3533348 0.3829368 0.4096830 0.4135228 0.4415721 0.4663373 #>  [980,] 0.55848306 0.5871392 0.6017204 0.6948917 0.7138283 0.7796337 0.8115816 #>  [981,] 0.31027863 0.3318503 0.4300163 0.4788421 0.4899965 0.5254370 0.5960820 #>  [982,] 0.09831649 0.3426225 0.3733893 0.3833929 0.3998862 0.4147042 0.5065422 #>  [983,] 0.34242776 0.4128428 0.5373668 0.5707755 0.5742626 0.6556826 0.6773988 #>  [984,] 0.69637689 0.9597156 0.9830406 1.0227250 1.0404170 1.0897849 1.1604625 #>  [985,] 0.21587317 0.5035108 0.5587194 0.6152778 0.6528830 0.6680267 0.6734077 #>  [986,] 0.69958193 0.8580225 0.8754899 0.9156674 0.9566091 0.9670229 0.9763510 #>  [987,] 0.11608719 0.3006863 0.3250055 0.3289196 0.4259055 0.4377923 0.4870022 #>  [988,] 0.36347243 0.4651067 0.5653288 0.5780089 0.5809020 0.6451965 0.6682168 #>  [989,] 0.41765340 0.4401888 0.6357935 0.6813370 0.7506527 0.7766402 0.7819681 #>  [990,] 0.79370421 0.8864215 0.8938192 0.9058586 1.0523116 1.1082587 1.1725493 #>  [991,] 0.54612053 0.6078415 0.6344151 0.6866979 0.6894896 0.7161804 0.7335557 #>  [992,] 0.34642398 0.5090600 0.5749598 0.5798745 0.6493739 0.6495503 0.6656699 #>  [993,] 0.58381883 0.6305519 0.6584598 0.7033968 0.7270252 0.7323232 0.7672032 #>  [994,] 0.37058080 0.4416356 0.4471095 0.4517481 0.4961319 0.5121898 0.5384396 #>  [995,] 0.29083287 0.4656943 0.4740713 0.5162538 0.5446352 0.5476847 0.5501051 #>  [996,] 0.71182690 0.8015365 0.8357751 0.9246408 0.9344621 1.0045098 1.0209222 #>  [997,] 0.49119061 0.8981545 1.0922723 1.0947023 1.1007515 1.1540649 1.1801942 #>  [998,] 0.52910495 0.5856901 0.6052306 0.6426209 0.6872977 0.7322672 0.7591426 #>  [999,] 0.40440349 0.4788421 0.5086148 0.5929361 0.6096010 0.6314974 0.6784615 #> [1000,] 0.95906486 0.9779007 0.9891183 0.9967242 1.0371942 1.0655567 1.1123559 #>              [,8]      [,9]     [,10] #>    [1,] 1.1277723 1.1816461 1.1990002 #>    [2,] 1.2216679 1.2352019 1.2608456 #>    [3,] 0.6189972 0.6357971 0.6409345 #>    [4,] 0.6563752 0.6593882 0.6812084 #>    [5,] 0.6451487 0.6575858 0.6584598 #>    [6,] 0.6787011 0.7148674 0.7266524 #>    [7,] 0.6318225 0.6663029 0.6779481 #>    [8,] 0.7533940 0.7807431 0.7992978 #>    [9,] 1.0873969 1.0961940 1.1964236 #>   [10,] 0.5822407 0.5883231 0.5917679 #>   [11,] 0.6083513 0.6091392 0.6192702 #>   [12,] 0.7107465 0.7228639 0.7490380 #>   [13,] 0.7498239 0.7559947 0.7591031 #>   [14,] 0.8340085 0.8789927 0.8985272 #>   [15,] 0.8731405 0.8742264 0.9712348 #>   [16,] 1.1797889 1.1845552 1.2039234 #>   [17,] 1.0033135 1.0354425 1.0443826 #>   [18,] 0.9330399 0.9576537 0.9757561 #>   [19,] 0.8899695 0.9015966 0.9232722 #>   [20,] 0.5672174 0.5912759 0.6029007 #>   [21,] 0.6501106 0.6602688 0.6823808 #>   [22,] 0.7445577 0.7545314 0.7877731 #>   [23,] 0.7894505 0.8406640 0.8509438 #>   [24,] 0.9551027 0.9654747 1.0030288 #>   [25,] 1.0730757 1.0733707 1.0883246 #>   [26,] 0.7280532 0.7556115 0.7615608 #>   [27,] 0.7040471 0.7180793 0.7558149 #>   [28,] 1.1124655 1.1726914 1.2164293 #>   [29,] 0.7843067 0.7848351 0.8214750 #>   [30,] 0.5764293 0.6088673 0.6187806 #>   [31,] 1.1153360 1.1448984 1.1843941 #>   [32,] 0.7166056 0.7172308 0.7263161 #>   [33,] 0.7250852 0.7477290 0.7512148 #>   [34,] 1.3742790 1.4484635 1.4505247 #>   [35,] 1.2946210 1.2946745 1.3529488 #>   [36,] 0.9501224 0.9525178 0.9781398 #>   [37,] 0.5908949 0.6201243 0.6238170 #>   [38,] 0.9860467 1.0113623 1.0792367 #>   [39,] 1.3823259 1.4800667 1.4810435 #>   [40,] 1.0405158 1.0413266 1.0484415 #>   [41,] 0.4522604 0.4552867 0.4983990 #>   [42,] 1.0056548 1.0083335 1.0214761 #>   [43,] 0.5572177 0.5785664 0.6033729 #>   [44,] 0.5246025 0.5514685 0.5659403 #>   [45,] 0.5520987 0.5618288 0.5626486 #>   [46,] 0.9168416 0.9505614 0.9540991 #>   [47,] 0.9491927 0.9748667 1.0007042 #>   [48,] 0.7468701 0.7627787 0.7740428 #>   [49,] 0.8202840 0.8203177 0.8369207 #>   [50,] 0.7371032 0.7728698 0.7842856 #>   [51,] 0.8279323 0.8695652 0.8741601 #>   [52,] 0.6908772 0.7031286 0.7333217 #>   [53,] 0.6937080 0.7369896 0.7374129 #>   [54,] 0.5789364 0.5883231 0.5903267 #>   [55,] 0.8279323 0.8611921 0.8671132 #>   [56,] 1.2105582 1.3609712 1.4209254 #>   [57,] 0.6228348 0.6295301 0.6422188 #>   [58,] 0.6590690 0.6728996 0.6740843 #>   [59,] 0.6575858 0.6959634 0.7385297 #>   [60,] 0.9164001 0.9352856 0.9474459 #>   [61,] 0.6986781 0.7031266 0.7040471 #>   [62,] 0.5624673 0.5656930 0.5680078 #>   [63,] 0.6356963 0.6507316 0.6567545 #>   [64,] 0.6932837 0.7119049 0.7338189 #>   [65,] 0.6698017 0.6710056 0.6977133 #>   [66,] 1.0568114 1.0584024 1.0628807 #>   [67,] 0.4925018 0.5051723 0.5192192 #>   [68,] 0.8972152 0.9264264 1.0154784 #>   [69,] 0.7329504 0.7436061 0.7528723 #>   [70,] 1.3642570 1.4449321 1.4667406 #>   [71,] 0.8690166 0.9903226 1.0250856 #>   [72,] 0.5239980 0.5479711 0.5800733 #>   [73,] 0.5115099 0.5237082 0.5635509 #>   [74,] 0.9470885 0.9779822 1.0129587 #>   [75,] 0.5990171 0.6098017 0.6144892 #>   [76,] 0.5953002 0.6128149 0.6135434 #>   [77,] 0.5607080 0.6527787 0.6877265 #>   [78,] 0.5357776 0.5617833 0.5903267 #>   [79,] 0.7854694 0.8062140 0.8121136 #>   [80,] 0.9891183 0.9941969 0.9993140 #>   [81,] 0.5521847 0.5686514 0.5835483 #>   [82,] 1.2409497 1.2821540 1.3338516 #>   [83,] 1.3557836 1.3559887 1.3816546 #>   [84,] 1.1189773 1.1394716 1.2007114 #>   [85,] 0.6464739 0.6472974 0.6520667 #>   [86,] 0.8236488 0.8243628 0.8298920 #>   [87,] 0.7494334 0.7898359 0.8762251 #>   [88,] 0.7067036 0.7517859 0.7558175 #>   [89,] 0.6324472 0.6384841 0.6393787 #>   [90,] 0.5765781 0.6253036 0.6467292 #>   [91,] 0.6217369 0.6738939 0.6883190 #>   [92,] 0.9049822 0.9530349 1.0050902 #>   [93,] 0.5503597 0.5701566 0.5904144 #>   [94,] 1.1755510 1.2042861 1.2316526 #>   [95,] 0.9724045 0.9812174 0.9884258 #>   [96,] 0.9592701 0.9728378 1.0266564 #>   [97,] 0.5480974 0.5812286 0.6118587 #>   [98,] 0.5246272 0.5265085 0.5475677 #>   [99,] 0.8461130 0.8477330 0.8717503 #>  [100,] 0.7628803 0.7824819 0.7993370 #>  [101,] 1.7962282 1.8124344 1.8204522 #>  [102,] 0.4446164 0.4626767 0.4765493 #>  [103,] 1.6171545 1.6189861 1.6381932 #>  [104,] 0.7240607 0.7821695 0.8235358 #>  [105,] 0.5712901 0.5985136 0.6067016 #>  [106,] 0.8766191 0.8782562 0.8872883 #>  [107,] 1.3221504 1.3258106 1.3595579 #>  [108,] 1.2497242 1.2797769 1.2847999 #>  [109,] 0.6307679 0.6548610 0.6825140 #>  [110,] 0.5077163 0.5152366 0.5201796 #>  [111,] 0.5897513 0.6775438 0.7249468 #>  [112,] 0.8716588 0.9054262 0.9855289 #>  [113,] 0.8448758 0.8714976 0.9142557 #>  [114,] 0.7288252 0.8052105 0.8151615 #>  [115,] 0.6718406 0.6722277 0.6948328 #>  [116,] 0.8939690 0.9073273 0.9459113 #>  [117,] 1.1866277 1.2049009 1.2131600 #>  [118,] 0.9652541 0.9756351 0.9942206 #>  [119,] 0.5998649 0.6091943 0.6123165 #>  [120,] 0.6872129 0.7097586 0.7301151 #>  [121,] 0.7390389 0.7604702 0.7630935 #>  [122,] 0.4938862 0.4983489 0.5466885 #>  [123,] 0.9209192 0.9381286 0.9578028 #>  [124,] 1.2576783 1.3457942 1.3543061 #>  [125,] 0.8000203 0.8167809 0.8301323 #>  [126,] 0.8340372 0.8514435 0.8515045 #>  [127,] 0.5103176 0.5475948 0.5882427 #>  [128,] 0.5827694 0.5828899 0.5951991 #>  [129,] 0.6340862 0.6482273 0.6507316 #>  [130,] 0.7738277 0.8869694 0.8988091 #>  [131,] 0.6822141 0.6939493 0.6992247 #>  [132,] 0.6574931 0.7422702 0.7461058 #>  [133,] 0.9973896 1.0184821 1.0237132 #>  [134,] 1.1486590 1.1613028 1.1837634 #>  [135,] 0.6238170 0.6395035 0.6520195 #>  [136,] 1.0973044 1.1709569 1.2332039 #>  [137,] 0.6108532 0.6429611 0.6630001 #>  [138,] 0.5521847 0.5843494 0.6012981 #>  [139,] 0.7308439 0.7434359 0.7581942 #>  [140,] 1.3928817 1.4068608 1.4439310 #>  [141,] 0.6609668 0.6850597 0.7299244 #>  [142,] 0.5915916 0.6050565 0.6077914 #>  [143,] 0.5823034 0.5947904 0.6019534 #>  [144,] 0.5553071 0.5645280 0.6446181 #>  [145,] 0.6940500 0.7282091 0.7310340 #>  [146,] 0.5495635 0.5514685 0.5826591 #>  [147,] 0.7611104 0.8040045 0.8043343 #>  [148,] 0.6495392 0.6776919 0.6854624 #>  [149,] 0.7480650 0.8191044 0.8823637 #>  [150,] 0.5411869 0.5502896 0.5583409 #>  [151,] 0.7180998 0.7336379 0.7341086 #>  [152,] 1.1912636 1.2095629 1.2352239 #>  [153,] 0.5758092 0.6116671 0.6165203 #>  [154,] 0.7524017 0.7819264 0.7953267 #>  [155,] 0.6733962 0.6810368 0.6899465 #>  [156,] 0.6521463 0.6840823 0.7100448 #>  [157,] 1.3620943 1.3688559 1.3708892 #>  [158,] 0.5600066 0.6737385 0.6776919 #>  [159,] 0.5901161 0.5951493 0.6357927 #>  [160,] 0.8658120 0.8981545 0.9256894 #>  [161,] 0.7964822 0.7980622 0.8108124 #>  [162,] 0.5224324 0.5541192 0.5592968 #>  [163,] 1.1540350 1.1687959 1.1734590 #>  [164,] 1.0675792 1.1022426 1.1054776 #>  [165,] 1.1229310 1.1440999 1.1454136 #>  [166,] 0.8308600 0.8457055 0.8557414 #>  [167,] 0.5969554 0.5991155 0.6028723 #>  [168,] 1.3838868 1.3842514 1.3956961 #>  [169,] 0.8712192 0.9154238 0.9272356 #>  [170,] 0.7390389 0.7535997 0.7970432 #>  [171,] 0.6023530 0.6238119 0.6355553 #>  [172,] 0.7766402 0.7777657 0.7899675 #>  [173,] 0.5313566 0.5754902 0.5769897 #>  [174,] 0.5431463 0.5839871 0.6055436 #>  [175,] 0.9994798 1.0213772 1.0685104 #>  [176,] 0.8997026 0.9091246 0.9232706 #>  [177,] 0.7352546 0.7384616 0.7423913 #>  [178,] 0.6937898 0.6945931 0.7143432 #>  [179,] 1.0741032 1.0937999 1.0980578 #>  [180,] 0.5416264 0.5501798 0.5502562 #>  [181,] 0.9843336 1.0336066 1.0590858 #>  [182,] 0.6091943 0.6363898 0.6373057 #>  [183,] 0.7003897 0.7075189 0.7136140 #>  [184,] 0.9884055 1.0074228 1.0174219 #>  [185,] 0.8916240 0.8993724 0.9282640 #>  [186,] 0.6490195 0.6628685 0.6681492 #>  [187,] 1.2156100 1.2544759 1.2724148 #>  [188,] 0.7837702 0.8218098 0.8225141 #>  [189,] 0.7619641 0.8015365 0.8407601 #>  [190,] 1.0560959 1.1273738 1.1434620 #>  [191,] 0.8261643 0.8521884 0.9099727 #>  [192,] 1.1566105 1.1855532 1.1886661 #>  [193,] 0.9440280 0.9661984 0.9921918 #>  [194,] 0.8645134 0.8670063 0.9061379 #>  [195,] 0.5188817 0.5238636 0.5719127 #>  [196,] 0.8252084 0.8782798 0.8829206 #>  [197,] 0.6393644 0.7216211 0.7395698 #>  [198,] 0.9058586 0.9194339 0.9787950 #>  [199,] 0.9836911 1.0023737 1.0260539 #>  [200,] 0.8919486 0.9284428 0.9431832 #>  [201,] 0.5982558 0.6336967 0.6477662 #>  [202,] 0.8238807 0.8295729 0.8532570 #>  [203,] 0.3975459 0.4535849 0.4674355 #>  [204,] 0.8965174 0.8982999 0.8993036 #>  [205,] 0.5746819 0.5860547 0.5897513 #>  [206,] 0.7902742 0.8046735 0.8447648 #>  [207,] 0.6917758 0.7283993 0.7666928 #>  [208,] 0.5911413 0.5921035 0.5962793 #>  [209,] 0.8112749 0.8424908 0.8805676 #>  [210,] 0.5499103 0.5552143 0.5724341 #>  [211,] 0.7664883 0.7766420 0.8158615 #>  [212,] 0.7401987 0.7662884 0.7797529 #>  [213,] 0.6575542 0.6580014 0.6768431 #>  [214,] 1.2166165 1.2253165 1.2261671 #>  [215,] 0.6186600 0.6671991 0.6732922 #>  [216,] 0.7398366 0.7403294 0.7425097 #>  [217,] 0.5989056 0.6023753 0.6490482 #>  [218,] 0.5521809 0.5585820 0.6238076 #>  [219,] 0.5268149 0.5624969 0.5636207 #>  [220,] 1.1284222 1.1794205 1.1963549 #>  [221,] 0.6613447 0.6957399 0.7197768 #>  [222,] 0.7376104 0.7534260 0.7571064 #>  [223,] 1.1254497 1.1310411 1.1359482 #>  [224,] 0.5717071 0.5998148 0.6373057 #>  [225,] 0.7136713 0.7231501 0.7289041 #>  [226,] 0.6541174 0.7063086 0.7362559 #>  [227,] 0.7185699 0.7271226 0.7680247 #>  [228,] 1.2394236 1.2587553 1.3192218 #>  [229,] 0.9253467 0.9658028 0.9916496 #>  [230,] 0.9420330 0.9539283 0.9658795 #>  [231,] 0.8630664 0.8804020 0.8901090 #>  [232,] 0.4850090 0.5162538 0.5226281 #>  [233,] 0.6355172 0.6559131 0.6857133 #>  [234,] 0.8232688 0.8362491 0.8615428 #>  [235,] 0.5794818 0.5823488 0.5878504 #>  [236,] 0.8986594 0.9156674 0.9355886 #>  [237,] 0.6070168 0.6146959 0.6385568 #>  [238,] 0.7800092 0.7919962 0.8261697 #>  [239,] 0.6446008 0.6517779 0.6528180 #>  [240,] 0.5903636 0.6649502 0.6650598 #>  [241,] 1.5181657 1.5191653 1.6806529 #>  [242,] 1.1709452 1.2108411 1.2212352 #>  [243,] 0.9794785 1.0148312 1.0588020 #>  [244,] 0.8228033 0.9406653 0.9412112 #>  [245,] 0.7355959 0.7427091 0.8169518 #>  [246,] 0.6605395 0.7010432 0.7101375 #>  [247,] 0.5724341 0.5965084 0.6013598 #>  [248,] 0.6581380 0.6864811 0.7007856 #>  [249,] 0.7468705 0.7483195 0.7560462 #>  [250,] 0.4474640 0.4590751 0.4597129 #>  [251,] 0.8388607 0.9121455 0.9395272 #>  [252,] 0.6237672 0.6324957 0.6378056 #>  [253,] 1.1115367 1.1695811 1.2465492 #>  [254,] 0.8507018 0.8815974 0.9280725 #>  [255,] 0.5880765 0.6234843 0.6359189 #>  [256,] 0.7837060 0.7840352 0.8021130 #>  [257,] 0.7432229 0.7474043 0.7781482 #>  [258,] 0.8157246 0.8163470 0.8207238 #>  [259,] 1.0071526 1.0514318 1.0816304 #>  [260,] 0.7723188 0.8073125 0.8125567 #>  [261,] 0.7733659 0.7765029 0.7781799 #>  [262,] 0.8045442 0.8443363 0.8512293 #>  [263,] 0.6691929 0.6805346 0.7250852 #>  [264,] 0.5409081 0.5479479 0.5533832 #>  [265,] 0.6240639 0.6376946 0.6383766 #>  [266,] 0.6140820 0.6224795 0.6236054 #>  [267,] 0.7967967 0.8110177 0.8293811 #>  [268,] 0.5538449 0.5592717 0.5692131 #>  [269,] 1.3894109 1.3983734 1.4073322 #>  [270,] 0.6532931 0.6535509 0.6603980 #>  [271,] 0.6954934 0.8071532 0.8544645 #>  [272,] 0.7997930 0.8001390 0.8008286 #>  [273,] 0.7323858 0.7352067 0.7820764 #>  [274,] 0.5457597 0.5458660 0.5603155 #>  [275,] 0.6593882 0.6684101 0.6983498 #>  [276,] 1.5282590 1.5432321 1.5518024 #>  [277,] 0.7831023 0.8821525 0.8906814 #>  [278,] 0.5610538 0.5769897 0.6043345 #>  [279,] 0.8457055 0.8582436 0.9107608 #>  [280,] 0.5585820 0.5978585 0.6342586 #>  [281,] 0.5753703 0.6876870 0.7038946 #>  [282,] 0.7290462 0.8648736 0.8648975 #>  [283,] 0.6778300 0.6789222 0.7318722 #>  [284,] 0.9411683 0.9855289 1.0050375 #>  [285,] 0.7043195 0.7432437 0.7502960 #>  [286,] 1.3651561 1.3892015 1.3943802 #>  [287,] 1.2771909 1.2880192 1.3741400 #>  [288,] 1.5075022 1.5866471 1.6241959 #>  [289,] 1.1508820 1.2054700 1.2060725 #>  [290,] 0.8510004 0.8512387 0.8942729 #>  [291,] 0.6606663 0.6876140 0.7072640 #>  [292,] 0.6391744 0.6506912 0.6697097 #>  [293,] 0.8054279 0.8070900 0.8415829 #>  [294,] 0.6004037 0.6064343 0.6525837 #>  [295,] 0.5946605 0.6109984 0.6217659 #>  [296,] 0.5564219 0.5682669 0.5785664 #>  [297,] 0.5121810 0.5405678 0.5407712 #>  [298,] 0.8108245 0.8151554 0.8167585 #>  [299,] 0.4839062 0.4925744 0.5149030 #>  [300,] 0.7401987 0.7627323 0.7641001 #>  [301,] 0.5626776 0.6190075 0.6316696 #>  [302,] 0.6929260 0.7291426 0.7316196 #>  [303,] 1.9051118 1.9100229 1.9334947 #>  [304,] 0.5817847 0.5997890 0.6207748 #>  [305,] 0.5720249 0.5837491 0.5898708 #>  [306,] 0.5965174 0.6005517 0.6137788 #>  [307,] 1.0034240 1.0314873 1.0320467 #>  [308,] 0.8265704 0.8445410 0.8636050 #>  [309,] 0.8943133 0.9098371 0.9781398 #>  [310,] 0.6571992 0.6586063 0.6722925 #>  [311,] 0.8053866 0.8088441 0.8141323 #>  [312,] 0.9904840 1.0488026 1.0567316 #>  [313,] 0.6881557 0.7582715 0.7591426 #>  [314,] 0.5568581 0.5827694 0.6204041 #>  [315,] 0.6862337 0.7001198 0.7561484 #>  [316,] 0.8492696 0.8711605 0.8899702 #>  [317,] 0.7655117 0.7722215 0.7753759 #>  [318,] 0.6363898 0.6404232 0.6509156 #>  [319,] 0.6670985 0.6672640 0.6962625 #>  [320,] 0.8233239 0.8242852 0.8484660 #>  [321,] 0.6495988 0.6508068 0.6542615 #>  [322,] 1.0180832 1.0250659 1.0266634 #>  [323,] 0.6837625 0.6928143 0.6936870 #>  [324,] 0.7342534 0.7540028 0.7679974 #>  [325,] 0.6308780 0.6407043 0.6508068 #>  [326,] 0.9350917 0.9420448 0.9533092 #>  [327,] 0.6695906 0.6926156 0.7533284 #>  [328,] 1.0668279 1.0853428 1.2035339 #>  [329,] 0.8267822 0.8279529 0.8500662 #>  [330,] 0.6328065 0.6525837 0.6550373 #>  [331,] 0.6137788 0.6349687 0.6698618 #>  [332,] 0.7303193 0.7322579 0.7341715 #>  [333,] 0.8000697 0.8059705 0.8269345 #>  [334,] 0.5379070 0.5381997 0.5402068 #>  [335,] 0.4572627 0.4642517 0.4692709 #>  [336,] 1.1938257 1.2105804 1.2646468 #>  [337,] 0.8833182 0.8913455 0.9097912 #>  [338,] 0.8483925 0.8485289 0.8739361 #>  [339,] 0.9268745 0.9301437 0.9494924 #>  [340,] 0.5926610 0.6433268 0.6688616 #>  [341,] 0.6328652 0.6697167 0.6775438 #>  [342,] 0.6189582 0.6336426 0.6530868 #>  [343,] 0.9829755 0.9838940 1.0288515 #>  [344,] 0.5624027 0.5672823 0.5751450 #>  [345,] 0.5785100 0.5880912 0.6032128 #>  [346,] 0.7105605 0.7254459 0.7285652 #>  [347,] 0.6198076 0.6297758 0.6598254 #>  [348,] 0.8729183 0.8793803 0.9190275 #>  [349,] 0.5209098 0.5302664 0.5624052 #>  [350,] 0.8863619 0.9420280 0.9459780 #>  [351,] 0.8880786 0.9228884 0.9664693 #>  [352,] 1.3276280 1.3284202 1.3549191 #>  [353,] 1.0438588 1.0442103 1.0701039 #>  [354,] 0.7461058 0.7690134 0.7864186 #>  [355,] 0.7151664 0.7450731 0.7689244 #>  [356,] 0.5878504 0.5908810 0.6090971 #>  [357,] 0.6847809 0.8065705 0.8067604 #>  [358,] 1.0136404 1.0154122 1.0282789 #>  [359,] 1.0531656 1.0646987 1.1138957 #>  [360,] 1.0397803 1.0461697 1.0537380 #>  [361,] 0.4926647 0.5154537 0.5237127 #>  [362,] 0.9955914 1.0392933 1.0474345 #>  [363,] 0.8972945 0.8996744 0.9027318 #>  [364,] 0.9159105 0.9435594 0.9511380 #>  [365,] 0.7430718 0.7604702 0.7980560 #>  [366,] 0.5674692 0.5727376 0.6627259 #>  [367,] 1.0199524 1.0204548 1.0471335 #>  [368,] 0.5353742 0.5394586 0.5463735 #>  [369,] 0.8494756 0.8770611 0.8840677 #>  [370,] 0.9045793 0.9141658 0.9328294 #>  [371,] 0.8484185 0.8639459 0.9237728 #>  [372,] 0.7616295 0.7788900 0.8071625 #>  [373,] 0.5097656 0.5103176 0.5450248 #>  [374,] 0.6674362 0.6946062 0.8056381 #>  [375,] 0.7198688 0.7292259 0.7533332 #>  [376,] 0.7404467 0.7665664 0.7672032 #>  [377,] 0.8388834 0.8573182 0.8683734 #>  [378,] 0.7261603 0.7888915 0.8065603 #>  [379,] 1.1768365 1.2174035 1.2453905 #>  [380,] 1.2598092 1.3246854 1.3305341 #>  [381,] 0.8631331 0.8777154 0.8879424 #>  [382,] 0.8118543 0.8243492 0.8374920 #>  [383,] 0.7757223 0.7796205 0.8203172 #>  [384,] 0.8415829 0.8425422 0.8427918 #>  [385,] 0.6887134 0.6924916 0.6935413 #>  [386,] 0.6301571 0.6443765 0.6467538 #>  [387,] 0.6254812 0.6277603 0.6707994 #>  [388,] 0.9504140 0.9787950 0.9788155 #>  [389,] 0.7573177 0.7574468 0.7613383 #>  [390,] 0.6926296 0.7004906 0.7667403 #>  [391,] 1.1676943 1.2179838 1.2325915 #>  [392,] 0.8188247 0.8241835 0.8339341 #>  [393,] 0.8329418 0.8386294 0.8460252 #>  [394,] 0.7096210 0.7292739 0.7584514 #>  [395,] 1.4799383 1.5064008 1.5235157 #>  [396,] 1.1022143 1.1110085 1.1184343 #>  [397,] 0.7088534 0.7127603 0.7214720 #>  [398,] 0.7625693 0.7998142 0.8176899 #>  [399,] 0.7830381 0.8207924 0.8252420 #>  [400,] 1.2736809 1.3238208 1.3259648 #>  [401,] 0.7904562 0.8157185 0.8233814 #>  [402,] 0.9497575 0.9665054 0.9835361 #>  [403,] 0.9377258 1.0256769 1.0350779 #>  [404,] 0.6182421 0.6186630 0.6250949 #>  [405,] 1.3379349 1.3868488 1.4096641 #>  [406,] 0.6810388 0.7326497 0.7436179 #>  [407,] 0.8000203 0.8126316 0.8261912 #>  [408,] 0.6668383 0.6772600 0.7011845 #>  [409,] 0.5904144 0.6055436 0.6144892 #>  [410,] 0.6182368 0.6483972 0.6787011 #>  [411,] 0.7589513 0.7703605 0.7758075 #>  [412,] 0.7763655 0.7924663 0.8046182 #>  [413,] 0.7299407 0.7307987 0.7472007 #>  [414,] 1.2705682 1.3039116 1.3173147 #>  [415,] 1.3978243 1.4099353 1.4368023 #>  [416,] 0.7055470 0.7556795 0.7571401 #>  [417,] 0.8557944 0.9016194 0.9258674 #>  [418,] 0.6795702 0.6936138 0.7203690 #>  [419,] 0.5507127 0.5616786 0.5664522 #>  [420,] 0.5946564 0.6271226 0.6589521 #>  [421,] 1.2660488 1.2935256 1.3210175 #>  [422,] 1.0777358 1.1552969 1.2204435 #>  [423,] 0.5313030 0.5338943 0.5407712 #>  [424,] 0.9779007 1.0178157 1.0591399 #>  [425,] 0.8950220 0.9454731 0.9560139 #>  [426,] 1.0097005 1.0485973 1.1099787 #>  [427,] 0.6957399 0.7095744 0.7805514 #>  [428,] 1.3067943 1.3501308 1.3673162 #>  [429,] 0.8278941 0.8936291 0.9025688 #>  [430,] 0.7547116 0.7996885 0.8211158 #>  [431,] 0.7154578 0.7296091 0.7660701 #>  [432,] 0.7421226 0.7538467 0.8155186 #>  [433,] 0.5806314 0.5915916 0.6548079 #>  [434,] 0.6349687 0.6365637 0.6500784 #>  [435,] 0.8473934 0.8574420 0.9175749 #>  [436,] 0.6155368 0.6198042 0.6409345 #>  [437,] 0.4699607 0.5248791 0.5486645 #>  [438,] 1.0221971 1.0283199 1.0576939 #>  [439,] 1.4077905 1.4078477 1.4427959 #>  [440,] 0.4409665 0.4626767 0.4938862 #>  [441,] 0.9048603 0.9087658 0.9091246 #>  [442,] 1.1669433 1.1732456 1.1790484 #>  [443,] 0.5563468 0.5780151 0.5950256 #>  [444,] 0.9618237 0.9843987 1.0340714 #>  [445,] 1.6385503 1.6417239 1.6554494 #>  [446,] 0.7878675 0.7962567 0.7979834 #>  [447,] 2.0097095 2.0525425 2.0587405 #>  [448,] 1.1924949 1.2178915 1.2492241 #>  [449,] 0.5403095 0.5631900 0.5737795 #>  [450,] 1.6583900 1.7281786 1.7370262 #>  [451,] 0.6314860 0.6396309 0.6518001 #>  [452,] 1.3654383 1.3918685 1.4056749 #>  [453,] 0.6978221 0.7011060 0.7079638 #>  [454,] 1.0720183 1.1228689 1.1266475 #>  [455,] 0.5374261 0.5787567 0.5882427 #>  [456,] 0.5917679 0.6269757 0.6475247 #>  [457,] 1.0103346 1.0583478 1.0754355 #>  [458,] 0.7366074 0.7696810 0.8113648 #>  [459,] 0.5130750 0.5307737 0.5408275 #>  [460,] 0.5350491 0.5520000 0.5657748 #>  [461,] 0.8358193 0.8409993 0.8453590 #>  [462,] 1.3948239 1.4562316 1.4921572 #>  [463,] 0.5976927 0.6159258 0.6270187 #>  [464,] 0.7016635 0.7099575 0.7111202 #>  [465,] 0.9276422 0.9977400 1.0455170 #>  [466,] 1.1230235 1.1773242 1.1921464 #>  [467,] 0.5719470 0.6084708 0.6584985 #>  [468,] 0.5323596 0.5371743 0.6082670 #>  [469,] 0.6305895 0.6475206 0.6699390 #>  [470,] 0.3822591 0.4214002 0.4794289 #>  [471,] 0.6965180 0.7162136 0.7932884 #>  [472,] 1.2037354 1.2412579 1.2781834 #>  [473,] 1.1528347 1.1575442 1.1691273 #>  [474,] 0.6404232 0.6628817 0.6633204 #>  [475,] 1.3680536 1.3806925 1.4502315 #>  [476,] 0.7013151 0.7044657 0.7068683 #>  [477,] 0.7424823 0.8617070 0.8710939 #>  [478,] 0.6833299 0.7013946 0.7057739 #>  [479,] 0.5670320 0.5874698 0.6266317 #>  [480,] 0.5411971 0.5717583 0.5764336 #>  [481,] 0.8700075 0.8761098 0.8879985 #>  [482,] 0.6665749 0.6856635 0.6897393 #>  [483,] 0.7095349 0.7123296 0.7411007 #>  [484,] 1.2568529 1.3388399 1.3498595 #>  [485,] 0.6030901 0.6106986 0.6362282 #>  [486,] 1.3270357 1.3446570 1.3753723 #>  [487,] 0.6944722 0.6986781 0.7058085 #>  [488,] 0.7442717 0.7716297 0.8258617 #>  [489,] 0.8303598 0.8338579 0.8443118 #>  [490,] 1.5111890 1.5445189 1.5564387 #>  [491,] 1.4287770 1.4338115 1.4534610 #>  [492,] 0.6028583 0.6085813 0.6364568 #>  [493,] 1.2444039 1.2724466 1.2782419 #>  [494,] 0.9186961 0.9288731 0.9339130 #>  [495,] 0.5148448 0.5639078 0.6331913 #>  [496,] 0.9704159 0.9718047 0.9869484 #>  [497,] 0.5541192 0.5699598 0.5739698 #>  [498,] 1.2294258 1.2405399 1.2632070 #>  [499,] 0.5804832 0.6020497 0.6649769 #>  [500,] 0.6395914 0.6407729 0.6647554 #>  [501,] 1.2427244 1.2891885 1.3755788 #>  [502,] 0.5479711 0.5639078 0.5675280 #>  [503,] 1.5388021 1.6372228 1.6697375 #>  [504,] 0.7529697 0.7724098 0.7991795 #>  [505,] 1.5642651 1.5753041 1.5896113 #>  [506,] 0.9122109 0.9163889 0.9183538 #>  [507,] 0.9718225 0.9727489 0.9946086 #>  [508,] 0.7348817 0.7541810 0.7824822 #>  [509,] 0.8368484 0.8441140 0.8712227 #>  [510,] 0.7831023 0.8224706 0.8269345 #>  [511,] 1.2972052 1.2995585 1.3610271 #>  [512,] 0.7433959 0.7674406 0.8095525 #>  [513,] 0.4820203 0.4914494 0.5091375 #>  [514,] 0.5673960 0.6052295 0.6122315 #>  [515,] 0.4559979 0.4896020 0.4909026 #>  [516,] 0.4765648 0.5061745 0.5290541 #>  [517,] 0.5166929 0.5225545 0.5312450 #>  [518,] 0.7012764 0.7025821 0.7181508 #>  [519,] 0.6690963 0.6722143 0.7096344 #>  [520,] 0.5259640 0.5403095 0.5471192 #>  [521,] 0.7425617 0.7567662 0.7822832 #>  [522,] 0.5248791 0.5320507 0.5325069 #>  [523,] 0.9687019 0.9696667 1.0605354 #>  [524,] 0.5592717 0.5775316 0.6013149 #>  [525,] 0.7134244 0.7180454 0.7746114 #>  [526,] 0.6894268 0.6917122 0.7388943 #>  [527,] 1.5320355 1.5359497 1.5481314 #>  [528,] 0.6239519 0.6647352 0.6698996 #>  [529,] 0.8253294 0.8426068 0.8512405 #>  [530,] 0.9175670 0.9586984 0.9696410 #>  [531,] 0.5643394 0.6282007 0.6373988 #>  [532,] 0.7024892 0.7180089 0.7402136 #>  [533,] 0.9412042 0.9443775 0.9501321 #>  [534,] 0.6331913 0.6349211 0.6712309 #>  [535,] 0.4731234 0.5026104 0.5306004 #>  [536,] 0.5622579 0.5691711 0.5894259 #>  [537,] 1.3938269 1.4201260 1.4538800 #>  [538,] 2.1562114 2.1712210 2.1791550 #>  [539,] 0.5998649 0.6303169 0.6841752 #>  [540,] 1.2021338 1.2431104 1.2434704 #>  [541,] 0.8252084 0.8266875 0.8453320 #>  [542,] 1.1119488 1.1136882 1.1416424 #>  [543,] 0.7668405 0.7668689 0.7780350 #>  [544,] 1.2257260 1.2418458 1.3271819 #>  [545,] 0.9903867 1.0414513 1.0425481 #>  [546,] 0.7894660 0.7979414 0.8440595 #>  [547,] 1.4748032 1.5288034 1.6200355 #>  [548,] 0.8342098 0.8576379 0.8589755 #>  [549,] 0.8357769 0.8472275 0.8531945 #>  [550,] 0.8899300 0.9027397 0.9051167 #>  [551,] 0.7655653 0.7879630 0.8017048 #>  [552,] 0.6278000 0.6282079 0.6320861 #>  [553,] 0.7442717 0.7569825 0.7942681 #>  [554,] 0.6768602 0.6894267 0.7283503 #>  [555,] 0.4914494 0.5066574 0.5105818 #>  [556,] 0.6791070 0.6866979 0.7237962 #>  [557,] 0.7090876 0.7166298 0.7232070 #>  [558,] 0.6349871 0.6720933 0.6736528 #>  [559,] 0.8838416 0.8964731 0.9543999 #>  [560,] 0.7819956 0.8213843 0.8433024 #>  [561,] 0.8987376 0.9224726 0.9437928 #>  [562,] 0.5383853 0.5501868 0.5729807 #>  [563,] 1.6153224 1.6803922 1.7070157 #>  [564,] 0.9931664 1.0353998 1.0435389 #>  [565,] 1.1575457 1.2387429 1.2800923 #>  [566,] 1.7779091 1.7815292 1.8143845 #>  [567,] 0.8014217 0.8219595 0.8323921 #>  [568,] 0.6558496 0.6684397 0.6691929 #>  [569,] 0.5976967 0.6356963 0.6428138 #>  [570,] 0.8780852 0.8807945 0.8864215 #>  [571,] 1.5694029 1.6226836 1.6559844 #>  [572,] 1.8867064 1.8946499 1.8951040 #>  [573,] 0.7954502 0.8146452 0.8159977 #>  [574,] 0.5106542 0.5251450 0.5402068 #>  [575,] 0.9253467 0.9494333 0.9523070 #>  [576,] 0.5224575 0.5246025 0.5282306 #>  [577,] 0.8574534 0.8758765 0.9156594 #>  [578,] 0.6972932 0.7002176 0.7072410 #>  [579,] 0.7263034 0.7667228 0.7703424 #>  [580,] 1.1658215 1.2123779 1.2285181 #>  [581,] 0.9509007 0.9569566 0.9901120 #>  [582,] 0.6984653 0.7123291 0.7231011 #>  [583,] 0.6165135 0.6549497 0.6617059 #>  [584,] 0.6559082 0.6567545 0.6708039 #>  [585,] 1.2372009 1.2431104 1.3414206 #>  [586,] 0.8837551 0.8870166 0.8986792 #>  [587,] 1.1300497 1.1378241 1.1534381 #>  [588,] 0.9341930 0.9854642 0.9955070 #>  [589,] 0.7817602 0.7950334 0.8359405 #>  [590,] 0.8507018 0.8532815 0.8706052 #>  [591,] 0.6070573 0.6123936 0.6133793 #>  [592,] 0.6506767 0.6857493 0.6886219 #>  [593,] 1.1799360 1.2041982 1.2203544 #>  [594,] 0.9431895 1.0075567 1.0447846 #>  [595,] 1.2599315 1.2657402 1.2736123 #>  [596,] 0.7112562 0.7154578 0.7300252 #>  [597,] 0.9327264 0.9697106 0.9757561 #>  [598,] 0.5226653 0.5347778 0.6004037 #>  [599,] 0.7221886 0.7933000 0.7960978 #>  [600,] 0.5261021 0.5263663 0.5302476 #>  [601,] 0.7163910 0.7248237 0.7679930 #>  [602,] 0.7257560 0.7548418 0.7964255 #>  [603,] 0.8378586 0.8414736 0.8446556 #>  [604,] 0.9077201 0.9923359 1.0106972 #>  [605,] 0.6994948 0.7045753 0.7119669 #>  [606,] 0.5645280 0.5647955 0.5910950 #>  [607,] 1.4204439 1.4740305 1.4971383 #>  [608,] 1.5498688 1.6069093 1.7384498 #>  [609,] 0.9435022 0.9635824 0.9656355 #>  [610,] 0.5616786 0.5708692 0.6117274 #>  [611,] 1.2172076 1.2886264 1.3355435 #>  [612,] 0.5113881 0.5568581 0.5676932 #>  [613,] 1.1811073 1.2101745 1.2565012 #>  [614,] 0.8288751 0.8812426 0.9096677 #>  [615,] 0.5957393 0.6231754 0.6320876 #>  [616,] 0.6050565 0.6071182 0.6480847 #>  [617,] 0.7711614 0.7980622 0.8012313 #>  [618,] 0.5614452 0.6487696 0.6725718 #>  [619,] 0.5817847 0.6002829 0.6276241 #>  [620,] 0.8364844 0.8494256 0.8512405 #>  [621,] 0.7005655 0.7149314 0.7576389 #>  [622,] 0.9959242 1.0071526 1.0788781 #>  [623,] 1.0235715 1.0478058 1.0535272 #>  [624,] 0.7768493 0.7793272 0.8205517 #>  [625,] 1.1115848 1.1248822 1.1475012 #>  [626,] 0.5346923 0.5503597 0.5520000 #>  [627,] 0.6558496 0.6659052 0.7765029 #>  [628,] 1.0708415 1.1446938 1.2266482 #>  [629,] 0.6829279 0.7051407 0.7155856 #>  [630,] 0.7140941 0.7149278 0.7381929 #>  [631,] 0.9039229 0.9152130 0.9270557 #>  [632,] 0.5377479 0.5674692 0.6032168 #>  [633,] 0.6707994 0.6877516 0.7379386 #>  [634,] 0.6339956 0.6650379 0.6674789 #>  [635,] 0.6655739 0.6722275 0.7188234 #>  [636,] 1.2039409 1.2538158 1.3004335 #>  [637,] 0.9567400 0.9805564 1.0181206 #>  [638,] 1.7680531 1.7727131 1.8282199 #>  [639,] 0.7118041 0.7131544 0.7225123 #>  [640,] 0.7567525 0.7756439 0.7817602 #>  [641,] 0.5957012 0.6084708 0.6490912 #>  [642,] 0.6071488 0.6660500 0.6773838 #>  [643,] 0.5670320 0.5772271 0.6008826 #>  [644,] 0.6868794 0.6977937 0.7150017 #>  [645,] 0.7461080 0.7604850 0.7808844 #>  [646,] 0.6266361 0.6314365 0.6341940 #>  [647,] 0.7385297 0.7404467 0.7519838 #>  [648,] 0.8369020 0.8398624 0.8476542 #>  [649,] 0.4740971 0.4755505 0.5060454 #>  [650,] 1.7220624 1.7519612 1.7616198 #>  [651,] 0.4828149 0.5392326 0.5533832 #>  [652,] 0.6740843 0.6871881 0.7243692 #>  [653,] 0.5535769 0.5727801 0.5891104 #>  [654,] 1.0375054 1.0590858 1.0765221 #>  [655,] 0.8332197 0.8422317 0.8527906 #>  [656,] 1.0206574 1.0517808 1.0649530 #>  [657,] 0.7398995 0.8453590 0.8595941 #>  [658,] 0.8261406 0.8307582 0.8373647 #>  [659,] 0.7806629 0.7927973 0.7979414 #>  [660,] 0.5940258 0.6013404 0.6245413 #>  [661,] 1.0329767 1.0371129 1.0452618 #>  [662,] 0.7318016 0.7900017 0.7961905 #>  [663,] 0.4782290 0.4993475 0.5221172 #>  [664,] 0.6718837 0.6856635 0.7067344 #>  [665,] 0.6518001 0.6655306 0.6815493 #>  [666,] 1.1155896 1.1403134 1.1439860 #>  [667,] 0.5810267 0.5871655 0.6011670 #>  [668,] 0.7238108 0.7438533 0.7550931 #>  [669,] 1.0504722 1.0550247 1.0723984 #>  [670,] 0.9731496 0.9735136 0.9877512 #>  [671,] 1.0529481 1.0845242 1.1297322 #>  [672,] 0.8843676 0.8887155 0.9268679 #>  [673,] 0.6216648 0.6479959 0.6746208 #>  [674,] 0.5251450 0.5284033 0.5484489 #>  [675,] 0.7403855 0.7486979 0.7514374 #>  [676,] 0.6969275 0.7127841 0.7689411 #>  [677,] 0.7326497 0.7373563 0.7384600 #>  [678,] 0.6684066 0.6699390 0.6867790 #>  [679,] 0.7660027 0.7884803 0.7889959 #>  [680,] 0.6324472 0.6806701 0.6925097 #>  [681,] 0.6062568 0.6252554 0.6853151 #>  [682,] 0.7331707 0.7955418 0.8179501 #>  [683,] 1.0878071 1.1123559 1.1526806 #>  [684,] 0.5940258 0.6229879 0.6271196 #>  [685,] 0.8574649 0.8976148 0.9387797 #>  [686,] 0.7263605 0.7401842 0.7438612 #>  [687,] 1.3116721 1.3278361 1.3876646 #>  [688,] 0.6817233 0.6931311 0.7211141 #>  [689,] 1.0200061 1.0265487 1.0418415 #>  [690,] 0.7148179 0.7231723 0.7243780 #>  [691,] 0.6315268 0.6431302 0.6574496 #>  [692,] 1.0381903 1.0520745 1.0933699 #>  [693,] 0.9025787 0.9038915 0.9198327 #>  [694,] 0.6214294 0.6753017 0.7139887 #>  [695,] 1.1763199 1.1795062 1.2006747 #>  [696,] 0.6034387 0.6123165 0.6987542 #>  [697,] 1.4813297 1.6121141 1.7260634 #>  [698,] 0.6417307 0.6438171 0.6462949 #>  [699,] 0.8838049 0.9152433 0.9183538 #>  [700,] 0.7079312 0.7122314 0.7785440 #>  [701,] 1.2274216 1.3371795 1.3521911 #>  [702,] 0.6383516 0.6398683 0.6559131 #>  [703,] 0.8225748 0.8324250 0.8455299 #>  [704,] 0.5142809 0.5876460 0.6074908 #>  [705,] 0.5373668 0.5540923 0.5664522 #>  [706,] 0.5765510 0.5853877 0.6001879 #>  [707,] 0.6937080 0.7006146 0.7421462 #>  [708,] 0.6238756 0.6882597 0.6976726 #>  [709,] 0.8374410 0.9248079 0.9406653 #>  [710,] 0.7652198 0.8181279 0.8206264 #>  [711,] 0.5948992 0.5976967 0.6158515 #>  [712,] 0.9381280 0.9597892 0.9664203 #>  [713,] 1.0555835 1.0615033 1.0912192 #>  [714,] 0.8848121 0.9112138 0.9500410 #>  [715,] 1.0850121 1.0871142 1.0940913 #>  [716,] 0.7843407 0.8227103 0.8617159 #>  [717,] 0.4696288 0.4699835 0.4738325 #>  [718,] 0.5210939 0.5921035 0.6556833 #>  [719,] 1.0706496 1.0765221 1.1663353 #>  [720,] 0.8406039 0.8808923 0.8958698 #>  [721,] 0.8506859 0.8674290 0.8749529 #>  [722,] 1.1576949 1.1636063 1.1886189 #>  [723,] 0.7265791 0.7418144 0.7951605 #>  [724,] 0.7665664 0.8252081 0.8266375 #>  [725,] 0.6844479 0.6874830 0.7128726 #>  [726,] 0.9559077 1.1242090 1.1646467 #>  [727,] 0.7351015 0.7832581 0.8303848 #>  [728,] 0.9923359 1.0102435 1.0381903 #>  [729,] 1.4331600 1.4771536 1.4932030 #>  [730,] 0.6936138 0.7290462 0.7386993 #>  [731,] 0.5865848 0.5928012 0.5935847 #>  [732,] 0.8202470 0.8342600 0.8562082 #>  [733,] 0.6299515 0.7325734 0.7354251 #>  [734,] 2.0558621 2.0864969 2.1005553 #>  [735,] 0.6088727 0.6541174 0.6590748 #>  [736,] 1.2058457 1.2621229 1.2702962 #>  [737,] 1.1890757 1.2943075 1.2991210 #>  [738,] 0.5636207 0.5829550 0.6010974 #>  [739,] 1.2999900 1.3123376 1.3535130 #>  [740,] 0.5961094 0.6115983 0.6147504 #>  [741,] 1.1292652 1.1476807 1.1993746 #>  [742,] 0.6389123 0.6490562 0.6605395 #>  [743,] 0.5694909 0.6220328 0.6521282 #>  [744,] 0.6801958 0.6913184 0.7516634 #>  [745,] 0.7373071 0.7444701 0.7774382 #>  [746,] 0.5555416 0.5618440 0.5831496 #>  [747,] 1.3390375 1.3843793 1.4050764 #>  [748,] 0.7693490 0.7886514 0.8007839 #>  [749,] 1.2160325 1.2310418 1.2612687 #>  [750,] 0.7772398 0.7835136 0.7853064 #>  [751,] 0.6469686 0.6871881 0.6893706 #>  [752,] 1.0467176 1.0487921 1.0535688 #>  [753,] 0.7115954 0.7243692 0.7353212 #>  [754,] 1.0067329 1.1439401 1.1663841 #>  [755,] 0.7445498 0.8205199 0.8258803 #>  [756,] 0.5692131 0.5878257 0.6048488 #>  [757,] 1.5059130 1.5141408 1.5370495 #>  [758,] 0.7022300 0.7040191 0.7266179 #>  [759,] 2.0418621 2.1325963 2.2567825 #>  [760,] 0.5918048 0.5966892 0.6095008 #>  [761,] 0.5413950 0.5472648 0.5751142 #>  [762,] 0.5384481 0.5705695 0.5868046 #>  [763,] 0.8146452 0.8153426 0.8235265 #>  [764,] 0.6850527 0.6924807 0.7120703 #>  [765,] 1.1885719 1.2018503 1.2018910 #>  [766,] 1.3260409 1.3341675 1.3347847 #>  [767,] 0.6248858 0.6631087 0.6670681 #>  [768,] 0.9237803 0.9821653 1.0128317 #>  [769,] 0.8028055 0.8115816 0.8469829 #>  [770,] 1.3735787 1.4586779 1.4587643 #>  [771,] 1.0487313 1.1115367 1.1278697 #>  [772,] 0.6377302 0.7069487 0.7291969 #>  [773,] 0.9324725 0.9695837 1.0005072 #>  [774,] 0.7340137 0.7686250 0.7910865 #>  [775,] 0.7437403 0.7456979 0.7878617 #>  [776,] 0.6409072 0.6948549 0.7067249 #>  [777,] 0.7257133 0.7526207 0.8145793 #>  [778,] 0.5142809 0.5245879 0.5252494 #>  [779,] 0.6242367 0.6256287 0.6328125 #>  [780,] 0.6837660 0.6874830 0.7228639 #>  [781,] 0.8125125 0.8322545 0.8503036 #>  [782,] 0.5561102 0.5578403 0.5763036 #>  [783,] 0.5896110 0.5958654 0.6104892 #>  [784,] 0.7866859 0.7935557 0.7964822 #>  [785,] 0.6916844 0.7073426 0.7114112 #>  [786,] 0.6074524 0.6283285 0.6525452 #>  [787,] 0.8485117 0.8661158 0.8681542 #>  [788,] 0.7669146 0.7704553 0.7730321 #>  [789,] 0.7936552 0.8056731 0.8282903 #>  [790,] 0.7768582 0.7846403 0.7865361 #>  [791,] 0.9218025 0.9309645 0.9834923 #>  [792,] 0.7310340 0.7395698 0.7413927 #>  [793,] 0.5268015 0.5320507 0.5456090 #>  [794,] 0.6962281 0.7052326 0.7597433 #>  [795,] 0.7230854 0.7567452 0.7898359 #>  [796,] 1.4279747 1.4767257 1.4891995 #>  [797,] 0.5369971 0.6397847 0.6429611 #>  [798,] 0.7756439 0.7789369 0.7825231 #>  [799,] 1.3097582 1.4824465 1.5489940 #>  [800,] 0.7162136 0.7266179 0.7296064 #>  [801,] 0.4948228 0.5717583 0.5764634 #>  [802,] 0.9185322 0.9380741 0.9420223 #>  [803,] 0.6465218 0.6621150 0.6682168 #>  [804,] 0.6172237 0.6478300 0.6539777 #>  [805,] 1.8593783 1.8708800 1.9053267 #>  [806,] 0.7604921 0.7642574 0.7730720 #>  [807,] 0.7662884 0.7721703 0.7889959 #>  [808,] 0.5115099 0.5396213 0.5483203 #>  [809,] 1.0282668 1.0382065 1.0560935 #>  [810,] 0.5475677 0.5502896 0.5973181 #>  [811,] 1.1429708 1.1613028 1.2231753 #>  [812,] 0.6638050 0.6828485 0.6834797 #>  [813,] 0.9778346 1.0510234 1.1124590 #>  [814,] 1.2542723 1.3124297 1.3212982 #>  [815,] 0.7370478 0.7417071 0.7623365 #>  [816,] 0.8667483 0.8711702 0.8878093 #>  [817,] 0.6253059 0.6553342 0.6873358 #>  [818,] 0.8282982 0.8362473 0.8699008 #>  [819,] 0.9744774 0.9890063 1.0132698 #>  [820,] 0.6783649 0.7362620 0.7444487 #>  [821,] 0.6621150 0.6987482 0.7166870 #>  [822,] 0.9290550 1.0580104 1.0725154 #>  [823,] 1.0468094 1.0712767 1.0978278 #>  [824,] 0.6427528 0.6436058 0.6524632 #>  [825,] 0.6817233 0.7111853 0.7402580 #>  [826,] 0.5284033 0.5541392 0.5699656 #>  [827,] 1.3117818 1.3270609 1.3359374 #>  [828,] 0.6628685 0.6713565 0.6810039 #>  [829,] 0.8527906 0.8812073 0.9528009 #>  [830,] 0.6828485 0.6850597 0.6959316 #>  [831,] 0.8301323 0.8712192 0.9245956 #>  [832,] 0.6132856 0.6421572 0.6431027 #>  [833,] 0.7869176 0.8055432 0.8226591 #>  [834,] 1.2076362 1.2278662 1.2417090 #>  [835,] 0.7902266 0.8018794 0.8600771 #>  [836,] 0.7864186 0.7935557 0.8255778 #>  [837,] 0.7262376 0.7844301 0.7885148 #>  [838,] 1.4799255 1.5037535 1.5076612 #>  [839,] 0.5764634 0.6651793 0.6815833 #>  [840,] 0.6878447 0.6985192 0.7296800 #>  [841,] 0.4934944 0.5391688 0.5655502 #>  [842,] 1.0560959 1.0712848 1.0853428 #>  [843,] 0.7249468 0.7366193 0.7376150 #>  [844,] 0.7874349 0.7950016 0.8099821 #>  [845,] 0.7664371 0.7807477 0.8116326 #>  [846,] 0.6358013 0.6442066 0.6576187 #>  [847,] 0.4486907 0.4983990 0.4999563 #>  [848,] 0.9207612 0.9276422 0.9540991 #>  [849,] 0.4063097 0.4590751 0.4740971 #>  [850,] 0.6394717 0.6588610 0.6600258 #>  [851,] 0.8149142 0.8428174 0.8796094 #>  [852,] 0.6049990 0.6198042 0.6272176 #>  [853,] 0.9851428 1.0335664 1.0680627 #>  [854,] 1.0029237 1.0044478 1.0091058 #>  [855,] 0.9468798 0.9500668 0.9856499 #>  [856,] 1.1343272 1.1434065 1.1500361 #>  [857,] 0.9434459 0.9806701 0.9911303 #>  [858,] 0.6657246 0.6823429 0.6984509 #>  [859,] 0.9392122 1.0334538 1.0380556 #>  [860,] 0.6851883 0.6919852 0.7095744 #>  [861,] 0.7763655 0.7913457 0.8270811 #>  [862,] 0.6989579 0.7134870 0.7771113 #>  [863,] 0.7291426 0.7341086 0.7359247 #>  [864,] 1.2080432 1.2282035 1.3640246 #>  [865,] 0.7292787 0.7359247 0.8104232 #>  [866,] 0.8350270 0.8828692 0.8838416 #>  [867,] 1.6801516 1.7936242 1.8107486 #>  [868,] 0.7664883 0.7692705 0.7853750 #>  [869,] 0.6256287 0.6405012 0.6438171 #>  [870,] 0.9159168 0.9412794 0.9424081 #>  [871,] 0.4008547 0.4421991 0.4654775 #>  [872,] 1.5398663 1.5488528 1.5865198 #>  [873,] 0.5946995 0.5961094 0.5985655 #>  [874,] 1.2174384 1.2866041 1.3608177 #>  [875,] 0.6989579 0.7028270 0.7502891 #>  [876,] 1.1007515 1.1159988 1.1618348 #>  [877,] 0.9267543 0.9303417 0.9985390 #>  [878,] 0.7707595 0.7796337 0.8207193 #>  [879,] 0.7728698 0.8062140 0.8064596 #>  [880,] 0.9699226 1.0045098 1.0449545 #>  [881,] 0.8332732 0.8572955 0.8811205 #>  [882,] 0.7810091 0.7894367 0.8153426 #>  [883,] 0.7170823 0.7352067 0.7384600 #>  [884,] 0.5624806 0.5863302 0.6213767 #>  [885,] 0.9655477 0.9727644 1.0023837 #>  [886,] 0.6547229 0.6760726 0.6837625 #>  [887,] 0.6487290 0.6680559 0.7312532 #>  [888,] 0.8688664 0.9291881 0.9494333 #>  [889,] 1.3239755 1.3330514 1.3419673 #>  [890,] 0.4841708 0.5299665 0.5941560 #>  [891,] 1.1557669 1.2092693 1.2211860 #>  [892,] 0.5427501 0.5509455 0.5757741 #>  [893,] 1.0055165 1.1019036 1.1303557 #>  [894,] 1.5957744 1.6656746 1.6704343 #>  [895,] 0.5313030 0.5411869 0.5432273 #>  [896,] 1.3521568 1.3854506 1.3989331 #>  [897,] 1.2729158 1.2869336 1.3173147 #>  [898,] 1.3501308 1.4088867 1.4431790 #>  [899,] 0.5130520 0.5265425 0.5344388 #>  [900,] 0.6500784 0.6550834 0.6594093 #>  [901,] 0.9341268 0.9882515 1.0482291 #>  [902,] 0.6887986 0.6949705 0.7101375 #>  [903,] 1.8382930 1.8593577 1.8821169 #>  [904,] 0.8450184 0.8584939 0.8900323 #>  [905,] 1.3352933 1.3647099 1.3707155 #>  [906,] 0.6124874 0.6452023 0.6502552 #>  [907,] 0.6015697 0.6057881 0.6303679 #>  [908,] 0.7397444 0.7589513 0.7761755 #>  [909,] 1.1331706 1.1684123 1.2233917 #>  [910,] 0.7708239 0.8088441 0.8090672 #>  [911,] 0.7564921 0.8313556 0.8853633 #>  [912,] 0.5590943 0.5693136 0.6010974 #>  [913,] 0.5705695 0.5990171 0.5997920 #>  [914,] 0.6483972 0.6809148 0.6938318 #>  [915,] 1.1443646 1.1713342 1.1896728 #>  [916,] 0.7747097 0.7772398 0.8024150 #>  [917,] 0.7302801 0.7417071 0.7470587 #>  [918,] 0.6165999 0.6218071 0.6254043 #>  [919,] 0.6983487 0.8245811 0.8574372 #>  [920,] 1.0107482 1.0956074 1.1528632 #>  [921,] 0.5968568 0.6036069 0.6052295 #>  [922,] 0.7816347 0.8317877 0.8353579 #>  [923,] 0.7042752 0.7556773 0.7612428 #>  [924,] 0.8016984 0.8064596 0.8279561 #>  [925,] 0.6581170 0.6625708 0.6638874 #>  [926,] 0.7545084 0.7692472 0.8111023 #>  [927,] 0.8234208 0.8325586 0.8762490 #>  [928,] 0.8036009 0.8617396 0.9095927 #>  [929,] 0.9777802 0.9867707 0.9916101 #>  [930,] 0.6246838 0.6478300 0.6710057 #>  [931,] 0.7047821 0.7074970 0.7094189 #>  [932,] 0.5815310 0.5894735 0.5981939 #>  [933,] 0.8676934 0.8809400 0.9466005 #>  [934,] 1.0968149 1.1379194 1.1401699 #>  [935,] 0.5070188 0.5424867 0.5633698 #>  [936,] 0.9154519 0.9903226 0.9985880 #>  [937,] 1.0154784 1.0198059 1.0558893 #>  [938,] 0.7369948 0.7536130 0.8294904 #>  [939,] 1.4303140 1.4317122 1.4805684 #>  [940,] 0.8062438 0.8196058 0.8569086 #>  [941,] 1.1892653 1.2261792 1.2324396 #>  [942,] 0.5912759 0.5969571 0.6082670 #>  [943,] 0.5314154 0.5326785 0.5801175 #>  [944,] 0.8829630 0.8910723 0.8967822 #>  [945,] 1.3858221 1.4302707 1.4316539 #>  [946,] 0.6547229 0.6886322 0.6928918 #>  [947,] 0.6877890 0.7001301 0.7057125 #>  [948,] 1.8357152 1.9045001 1.9065517 #>  [949,] 1.3379349 1.4021315 1.4079049 #>  [950,] 1.0840138 1.1094766 1.1308136 #>  [951,] 0.7117756 0.7177677 0.7423945 #>  [952,] 0.7438321 0.7534034 0.7842284 #>  [953,] 0.7502960 0.7789664 0.7982690 #>  [954,] 0.6118587 0.6215960 0.6384658 #>  [955,] 1.2871531 1.3225393 1.3418591 #>  [956,] 0.7043195 0.7170823 0.7336379 #>  [957,] 1.0358191 1.0774448 1.1165770 #>  [958,] 0.6198076 0.6213680 0.6650598 #>  [959,] 1.1471868 1.2669688 1.2800816 #>  [960,] 0.8130187 0.8631036 0.8891762 #>  [961,] 0.4881796 0.5027134 0.5136565 #>  [962,] 0.5982893 0.6004924 0.6157327 #>  [963,] 0.7837144 0.7919935 0.7991795 #>  [964,] 0.6104453 0.6329952 0.6364906 #>  [965,] 0.7174851 0.7278104 0.7323772 #>  [966,] 0.6158712 0.6274870 0.6436952 #>  [967,] 0.9331233 0.9648185 0.9984615 #>  [968,] 0.9794996 0.9906871 1.0181875 #>  [969,] 0.9764982 0.9772140 0.9803378 #>  [970,] 0.8332279 0.8385844 0.8746902 #>  [971,] 0.8782562 0.9048243 0.9051167 #>  [972,] 0.7135772 0.7139887 0.7223360 #>  [973,] 0.6498677 0.6716114 0.7187771 #>  [974,] 0.7911595 0.7980903 0.8115715 #>  [975,] 1.0262068 1.0452156 1.0937855 #>  [976,] 0.7545626 0.7664371 0.7778610 #>  [977,] 0.9817203 1.0214761 1.0233572 #>  [978,] 0.7640607 0.7933599 0.8157303 #>  [979,] 0.5221971 0.5497720 0.6275281 #>  [980,] 0.8326922 0.8450174 0.8531720 #>  [981,] 0.6079576 0.6749162 0.6866674 #>  [982,] 0.5516274 0.5699598 0.6100876 #>  [983,] 0.6790706 0.7139076 0.7197768 #>  [984,] 1.2032878 1.2213903 1.2509943 #>  [985,] 0.6874485 0.7101610 0.7203690 #>  [986,] 1.0107862 1.0289652 1.0302160 #>  [987,] 0.5092006 0.5504881 0.5553071 #>  [988,] 0.6925121 0.7282713 0.7690535 #>  [989,] 0.7949332 0.8214750 0.8386153 #>  [990,] 1.1753586 1.2128637 1.2172076 #>  [991,] 0.7462066 0.8073125 0.8246749 #>  [992,] 0.6815427 0.7020037 0.7071514 #>  [993,] 0.8221489 0.8382346 0.8520056 #>  [994,] 0.5541392 0.5859897 0.5901825 #>  [995,] 0.6030581 0.6088673 0.6820477 #>  [996,] 1.0221451 1.0348177 1.0581953 #>  [997,] 1.1938107 1.2440572 1.2494514 #>  [998,] 0.7631284 0.8002346 0.8086030 #>  [999,] 0.6835776 0.6913845 0.6999382 #> [1000,] 1.1236420 1.1943301 1.2301638 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  442  230  784  689   53  137  330  836  996    69 #>    [2,]  874  179  540  168  223  720  504  824  885   383 #>    [3,]  213   97  262  688  569  583  921  711  455   436 #>    [4,]  691  167  268  281  235  746  958  524  275   449 #>    [5,]  681   33  966  976  295  698  239  740   59   993 #>    [6,]  641  921  467  213  884  514  552  410  711     3 #>    [7,]  735  797   69  294   53  226  238  330  907   129 #>    [8,]  525  884  433  469  305  678  332  833  591     6 #>    [9,]  975  358  333  394  526  199  692  888  828    48 #>   [10,]  159  743   81  440  297  368  985  480   54   456 #>   [11,]  278  476  906  232  995  600  272  172  349    73 #>   [12,]  821  641  554  514  293  467  725  478  780   702 #>   [13,]   88  906  989  349  703  142   11  216  596   147 #>   [14,]  724  993  523   59  376  422  496  123  647   976 #>   [15,]  375  585  893  249  178  301  967  179  978   250 #>   [16,]  636  231  204  175  121  181  377  370  998   960 #>   [17,]  590  928  631  901  620  317  388  770  466   529 #>   [18,]  853   71  936  822  309  959  989   29  227   597 #>   [19,]  807  271  545  727  434  960  679  977  453   302 #>   [20,]   77  468  610  520  144  109  156  167  942   235 #>   [21,]  958  536  443  158  673  240  347  556  355   285 #>   [22,]  648   63  781  176  671  499  725  569  852   436 #>   [23,]  363  282  207  985  413  115  882  454  788   381 #>   [24,]  457   86  802  267  877  681  943  124  548   740 #>   [25,]  623  234  220  279   32  352  662  166  530   185 #>   [26,]  141  346  785  221  404  830  868  786   60   833 #>   [27,]  487  317  780   89  621  918  554   61   58   171 #>   [28,]  353  484  809  587  493  699   49  919   83   156 #>   [29,]  172  272  227  936  216   11  675  476  788   989 #>   [30,]   72   62  459  576  793  600  344  274  995   127 #>   [31,]  712   66  491  494  326  322   51  636  488   472 #>   [32,]   64  621  662  508  946  234    4  443   61   487 #>   [33,]    5  976   59  845  186  698  539  263  873   772 #>   [34,]   42  561  231  181   35  609   16  719  545   977 #>   [35,]   42  571   34  889  561  977  379  945  577   545 #>   [36,]  655  343  427  357  567  521  882  909  741   309 #>   [37,]  907  531  982  762  562  143  318  850  497   135 #>   [38,]  866  320  114  529  857  559  149  348  546   254 #>   [39,]  284  164  969  259  165  230  400  974  112   595 #>   [40,]  666  687  857  611  854  348  559  866  593   669 #>   [41,]  871  849  470  361  890  250  717  485  649   847 #>   [42,]  561  392  545   19  960   34   35  231  577   977 #>   [43,]  524  128  954  846  778  459  148  344  296   127 #>   [44,]  522  899  892  419  705  437  653  576  146   513 #>   [45,]   93  913  299  598  110  409  294  626  408   334 #>   [46,]  402  465   86  976  978  124  350  681  261   848 #>   [47,]  290  722  707  206  753  533  328  512  750   198 #>   [48,]   59  594  394  374  647  248  724  518  526     5 #>   [49,]  156  109  601  116   77  383  587  484  942   504 #>   [50,]  794  158  443  240  558  744  155  748  879   536 #>   [51,]  494  377  693  365  644  745  712   55  972   121 #>   [52,]  318  965  201  137  182  143  907  602  568    37 #>   [53,]  512   69  330  154    7  784  143  707  441   797 #>   [54,]  138  440  203  783  612   67  368  115   10    78 #>   [55,]  181  204  721  365  609  104  377   51  448   121 #>   [56,]  984  842  827  897  564  713  312  415   96   190 #>   [57,]  310  437  419  930  742  705  895  932   44   899 #>   [58,]  694  668  551  918   75   89  751  409  778   652 #>   [59,]  724  976   48   33  523   14  993    5  394   647 #>   [60,]   26  830  989  983  868  141  633  404  386   902 #>   [61,]  275   64  758  825  840  554  471  487  800    27 #>   [62,]  459  778   30  110  102   72  335  817  203   385 #>   [63,]  499  648  852  731  436   22  947  569  129   584 #>   [64,]   61   32  532  534  275  487  846  148  233   443 #>   [65,]  686  334  451  464  735  629   41  373  663   690 #>   [66,]  712   31  491  693   51  494  854  130  326   488 #>   [67,]  203  122  296  247  440  704  335  138  459   102 #>   [68,]  106  861  815  557  816  851  640  398  910   937 #>   [69,]  970   53    7  133  441  784  330  329  710   735 #>   [70,]  628  243  198  458  990  176  388  669  916   570 #>   [71,]  822  959  309  100   18  407  917  788  936   227 #>   [72,]  459   30  706  296  210  335   62   67  502   128 #>   [73,]  643  600  663  516  513  522  576  808  451   717 #>   [74,]  362  315  338  202  679  271  952  482  434   224 #>   [75,]  668  652   58  694  299  110  252  913   93   409 #>   [76,]  961  804  291  635  340  423  420  875  812   930 #>   [77,]   20  610  468  942  520  109  144  156  167   761 #>   [78,]  420  612  517  895  297  961  115  340  860    54 #>   [79,]  676  188  500  579  911  215  878  247  879   706 #>   [80,]  209  630  429  567  521  860  829 1000  654   357 #>   [81,]  385  258  440  578  817   10  207  138  335   159 #>   [82,]  454  391   23  381  282  152  363  763  207   592 #>   [83,]  608  481  587  933   28  103  229  484  424   714 #>   [84,]  166  384  279  968  787  662  825  194  293   554 #>   [85,]  304  345  531  497  738  873  632   37  964   808 #>   [86,]  350  681  465  496  976  873   46  457  887   366 #>   [87,]  417  690  617  723  485  686  161  624  795   978 #>   [88,]  245   13  147  541  703  278  596   11  272   172 #>   [89,]  780   27  918  409  524   58  778  680  268    43 #>   [90,]  492  615  839  801  935  219  782  313  517   480 #>   [91,]  283  319  531  497  483  696  132  304  738   412 #>   [92,]  403  922  775  461  378  169  316  560  657   209 #>   [93,]  299   45  110  598  913  252  460  626  102   409 #>   [94,]  854  130  444  351  559   66  491  462   40   857 #>   [95,]  120  189  965  426  206  599  359  289  842   435 #>   [96,]  118  113  564  709  836  837  354  132  602   189 #>   [97,]  921    3  410  468  266  455  520  144  552   954 #>   [98,]  314  146  832  895  128  180  150  460  274   810 #>   [99,]  622  489  820  411  131  764  756  604  746   164 #>  [100,]  917  407  822  851   71  788  815  839  959   661 #>  [101,]  770  739  466   17  380  928  857  590  631   620 #>  [102,]  368  122  704  110  778  203  299  810  440    62 #>  [103,]  771  933   83  229  872  905  608  714  481   818 #>  [104,]  121  755  365  745  579  676  783  769   55   500 #>  [105,]  366  632  966  873  912  932  423  887  582   219 #>  [106,]   68  815  851  557  839  100  861  788  971    90 #>  [107,]  768  937  475  244  861  398   68  550  971   212 #>  [108,]  428  439  241  645  596  988   13  332  142   305 #>  [109,]  235  401   20  156   77  779  292   49  610   167 #>  [110,]  299   93  102  778   62  598   45  460   75   368 #>  [111,]  667  174  323  886  651  519  777  205  341   843 #>  [112,]  238  893  617  969  178  375  970  259  339   284 #>  [113,]  118  709  354  191  837   96  602  836  132   544 #>  [114,]  660  659  478  149  962  495  126  546   38   702 #>  [115,]  170   78  882   54  592  940  420  138  517   297 #>  [116,]  383  374  625  601   49  518  248  504  760   156 #>  [117,]  986  799  188  236   79  766  490  678  346   981 #>  [118,]   96  113  354  837  836  189  709  132  120   640 #>  [119,]  224  568  263  482  992  135  835  539  182   696 #>  [120,]  189  589  599  177  837  354  640  543  836   325 #>  [121,]  745  104  755  231  783  377  644  170  365   592 #>  [122,]  704  102  203  368   67  296  778  440  810   459 #>  [123,]  376  657  844  378  993   14  637  406  724   461 #>  [124,]  607   46   24  457   86  465  214  978  350   402 #>  [125,]  492  812  615  364   90  917  438  407  839   831 #>  [126,]  478  702  962  551  114  950  944  684  918   660 #>  [127,]  516  626  574  460  600  793  663  373  524   455 #>  [128,]  296   43   98  954  148   72  146  314  122    67 #>  [129,]  947  767  499  731  780  735  226   45  626    63 #>  [130,]  854  351  559  444  693  320   94  578  752   644 #>  [131,]  397  764  356  342  756  446  618   99  411   708 #>  [132,]  319  696   91  412  283  709  965  182  531   354 #>  [133,]  441   69  970   53  916    7  750  176  710   458 #>  [134,]  898    8  986  507  525  833  773  184  811   396 #>  [135,]  201  568  850  224  182  627  119   37  390   205 #>  [136,]  754  541  369  245  624   88  439  670  596   464 #>  [137,]  330  836  474  143  837   52  784  318  797   907 #>  [138,]   54  440  335  203  783   67  183   81   72   612 #>  [139,]  616  399  583  614  432  596  256  904  515   711 #>  [140,]  990  770  737  533  287  190  611  570  193   371 #>  [141,]   26  785  346  221  404  786  270  833  830   183 #>  [142,]  305  173  195  349  232  515  278  433  616   596 #>  [143,]  907  562  797  318   37  137  154  512  474   330 #>  [144,]  468  520  634   20  688   77   97  987  606     3 #>  [145,]  652  605  197  751  553   75  435  222  252   792 #>  [146,]  180   98  899  964  460  449  761  314   44   128 #>  [147,]  776   88  432  989  256  324   13  597  596   139 #>  [148,]  846  443   43  128  954  247  558  883  158   296 #>  [149,]  546  384  114  487  478  233  534  293  659   702 #>  [150,]  423  832  314  961  219  306   98  895  810   297 #>  [151,]  883  677  382  930  273  260  991  865  956   863 #>  [152,]  752  462  444  870  391  258  573   82  763   130 #>  [153,]  632  912  664  304  738  582  992  900  219   105 #>  [154,]  512  562  143   53  907  318  446    7  762   570 #>  [155,]  558  247  500  389  443  846  792  355   50   158 #>  [156,]  218  109   49   20   77  942  249  144  634   760 #>  [157,]  729  214   68  670  936  106  955  557  543    29 #>  [158,]  443  794  536   50  240   21  556  744  958   148 #>  [159,]   10  456  743  321  368  102   81  110  416   440 #>  [160,]  831  802  815  615  438  125  675   90  997   492 #>  [161,]  417  261  474  690   87  191  327  784  617   602 #>  [162,]  651  982  255  667  264  762  341  174  497   642 #>  [163,]  957  880  329  200  710  754  996  298  686   629 #>  [164,]  284  259   99  622   39  165  411  595  967   489 #>  [165,]  164  967  397  848  284  360  845  131   39   969 #>  [166,]  662  758   61  800  825  508  787  728  279    84 #>  [167,]  235    4  520  275   20  401  281  449  691   746 #>  [168,]  874    2   24  383  116  540  457  720  625   124 #>  [169,]  639  775  877  267   92  403  461  831  560   742 #>  [170,]  940  115  592  998  730  882  370  121  231   567 #>  [171,]  746  268  841  680  756  674  826  852  226   524 #>  [172,]  272   29  227   11  476   88  216  989  324   703 #>  [173,]  232  195  349  515  142  995  305  906  591   278 #>  [174,]  651  667  762  982  111  264  162  205  680   409 #>  [175,]  204  747  654  755  181  121  231  104   16    55 #>  [176,]   22  671  458  916  781  725  648   63  441   628 #>  [177,]  599  589  120  927  640  325  910  543  189   856 #>  [178,]  375  250  890   41  301  871  978  470  617   760 #>  [179,]  540  223  874    2  885   15  375  951  249   432 #>  [180,]  146  964  449  761   98  899  869  610  345   295 #>  [181,]  204   55  609  175  721  104  231  121  365   654 #>  [182,]  568  135  257  602  201  627  850  119  318   224 #>  [183,]  138   78  270  592  346  763  188   54  115   335 #>  [184,]  833  542  785   26  141  898  537    8  525    60 #>  [185,]  229  789  672  234  790  430  991  794  924   158 #>  [186,]  772  539  642  217  342  341  869   33  828   952 #>  [187,]  486  926  894  202  843  362  791  953  777   473 #>  [188,]   79  733  346  676  183  981   72  221  296   706 #>  [189,]  120  837  836  589  354  599  177  118  996   543 #>  [190,]  312  435  713  328  533  287   47  842  737   206 #>  [191,]  602  113  709  182  161  261  732  132  257   402 #>  [192,]  465  848  402  350  523  845  976  867   46   165 #>  [193,]  737  777  685  371  446  843  938  287  111   400 #>  [194,]  787  825  236  840  471  384  806  758    6   641 #>  [195,]  232  173  515  142  278  455  516  349  600   793 #>  [196,]  298  399  584  431  464  339  614  541  803   814 #>  [197,]  553  222  145  605  488  751  931  923  208   792 #>  [198,]  458  570  707  750  533  753  916  990  551   388 #>  [199,]  510  333  549  819  526  791  736  953  828   952 #>  [200,]  957  880  589  163  177  416  120  408  856   599 #>  [201,]  135  568  182  224  205  390  627   52  318   119 #>  [202,]  679  843  390  362  473  271   74  338  315   222 #>  [203,]   67  440  122  704  368  138   54  102  335   296 #>  [204,]  181   55  175  121  755  104   16   51  365   494 #>  [205,]  651  341  390  762  174  982  843  642  201   111 #>  [206,]  753  290  652   47   75  145  668  435  252   598 #>  [207,]  985   81  592   23  258   10  381  311  282   115 #>  [208,]  255  619  331  704  463  497  122  306  718   368 #>  [209,]  630  429  829  251  560   80  316  860  211   868 #>  [210,]  706  979  335  502  495   72   67  684  660   247 #>  [211,]  251  429  424  560  714  630  260  868  246   310 #>  [212,]  992  244  900  727  768  453  398  300  807   664 #>  [213,]    3  262  711  225  569    6  583  436  921    97 #>  [214,]  729  607  723  157  795   24  887  457  124   191 #>  [215,]  879  534  532  233  748  500  558  247  495   979 #>  [216,]  476  859  906  413  989  227   11   29  703   788 #>  [217,]  372  956  869  844  347  772  647  186  285   510 #>  [218,]  249  301  606  760  156  987  634  250  280   826 #>  [219,]  423  801  150  615  935  912  480   90  961   738 #>  [220,]  234  352  765   25  530  736  508  790  631   915 #>  [221,]  346   26  141  868  785  404  830  357  427   983 #>  [222,]  553  197  923  777  145  931  323  605  751   111 #>  [223,]  179  432  951    2  885  720  614  874  147   540 #>  [224,]  119  568  263  135  539  201  482  850  835   182 #>  [225,]  213  904  583  591  773  973  262    3  616   711 #>  [226,]  756  680  841    7  129  171  238  735  264   764 #>  [227,]   29  172  272  788  675  936  557  476  216   479 #>  [228,]  560  169  364  757  902  963  868  246  742   775 #>  [229,]  185  789  933  991  672  771  401  575  382   818 #>  [230,]    1  318  627  257  974  154  602  784   52    53 #>  [231,]  940  121  170  392  561  104  586   16  998   745 #>  [232,]  173  515  349  195  278  142  600  793  995   455 #>  [233,]  534  215  532  495  979  706  660  210  702   879 #>  [234,]  220  508   32  185  790  946  240  691  530     4 #>  [235,]  167  281  746  618  109  401    4  449  826   356 #>  [236,]  659  891  194  532  495  715  410  384  986   787 #>  [237,]  646  643  858  782  743  479  480  935  600    73 #>  [238,]  112    7  708  226  735  327  178  764   69   969 #>  [239,]  966  740  267  681  366    5  518  105  295   639 #>  [240,]  946  682  158  536  744  794  443   21   50   958 #>  [241,]  108  855  439  645  650  428  988  603  431   596 #>  [242,]  448  721   50  744  794  748  367  939  813   879 #>  [243,]  669  293  388  725  628   12  554  458  176   198 #>  [244,]  212  300  768  732  992  412  696  338  709   861 #>  [245,]   88  541  464  629  369  624  596  278  451    65 #>  [246,]  963  653  419  942  310  919   57  742  387   902 #>  [247,]  558  500   67  155  846  676  296  210  148   203 #>  [248,]  518  601  774  374  779  698  239  295  818     5 #>  [249,]  218  301  156  760   15  375  178  885  250   824 #>  [250,]  871  301  847  760  470   41  178  824  849   890 #>  [251,]  211  429  714  630  424  560  209  260  677   868 #>  [252,]  598  299   93  913   75  110   45  762  208   409 #>  [253,]  575  549  430  571  790  819  307  771  510   872 #>  [254,]  348  529  866  792  605  389  320  590  857   693 #>  [255,]  208  331  619  497  162  718  651  463  982   306 #>  [256,]  904  506  658  139  225  147  633  776  583   973 #>  [257,]  627  602  182  135  318  568  201   52  261   974 #>  [258,]   81  870  207  385  985  578  817  159  656    10 #>  [259,]  284  164  112  489  969   99  238  622  967    39 #>  [260,]  382  273  980  714  151  481  211  733  991   933 #>  [261,]  161  327  402  850  257  602  474  191  627   182 #>  [262,]  213    3  688  569  225  929    6  711  641   773 #>  [263,]  224  835  119  482  539  350  850  568  135    33 #>  [264,]  982  680  174  762  268  756  162  667  409   651 #>  [265,]  914  576  793  981  274  404  733  522  419   892 #>  [266,]  455  921   97  344  436  520  852  127  793   524 #>  [267,]  639  239  966  461  831  169  775  366  740   105 #>  [268,]  746    4  171  264  691  674  281  680  524   756 #>  [269,]  339   87  369  617  754  624  417  814  689   951 #>  [270,]  502  678  706  817  833  183  210  335   72   141 #>  [271,]  807  434  679   19  453  727  315  718  202   931 #>  [272,]  172   29  227   11  476  646  324  675  665   216 #>  [273,]  382  733  260  954  151  481  999  610  883    77 #>  [274,]  576  895  705  932  404  600   98  522  479   437 #>  [275,]   61  840  520  758  167   64  954    4  524   806 #>  [276,]  638  968  701  388  243   84  901  293   70   716 #>  [277,]  647  772  844  952  217  376  724  510  186   315 #>  [278,]  232  349  515  195   11  451  142  600  173   616 #>  [279,]  662  928  620  631   32  317  384  166  623   487 #>  [280,]  826  292  841  535  987  994  606  218  708   764 #>  [281,]  691  235  618  356    4  268  746  167  401   828 #>  [282,]  363   23  381  370  311  985  207  730  798   418 #>  [283,]   91  696  483  412  965  132  319  453  300   497 #>  [284,]  259  164  969   39  238  764   99  411  112   708 #>  [285,]  865  536  217  347  556  673   21  956  772   953 #>  [286,]  545  367  977  636   16  322  712   19  721   377 #>  [287,]  737  713  193  312  190  400  140  564  473   435 #>  [288,]  501  405  726  613  949  585  604  941  249   893 #>  [289,]  326   95  351  311  435  881  359  985   31   998 #>  [290,]   47  753  707  206  722  750  512  533  143   329 #>  [291,]  875  804   76  302  961  801  340  862  150   900 #>  [292,]  280  994  826  618  109  535  218  356  235   987 #>  [293,]   12  554  243  149  317  546  641  478  669   384 #>  [294,]  797  408  334  735  925   45    7  598  143   330 #>  [295,]  698  964  761  180  966    5  740  869  779   899 #>  [296,]  128   67   72  122  203  612  459  247   98    43 #>  [297,]  480  517  810  935  479  961  612   78  782   423 #>  [298,]  710  339  464  196  584  970   65  686  700   629 #>  [299,]   93  110   45  598  102  252  460  913  778    75 #>  [300,]  338  696  244  119  412  283  568  212  453   483 #>  [301,]  760  250  824  847  218  871  249  178  470   513 #>  [302,]  804  291  392  832  340  463  900  865  863   961 #>  [303,]  799  117  766  986  490  505  452  891  236   905 #>  [304,]   85  497  153  632  531  738  539  619  319   119 #>  [305,]  433  142  884  467  173  711  514  469  525   195 #>  [306,]  463  619  810  832  150  718  208  497  368   331 #>  [307,]  991  956  863  577  865  980  151  382  883   556 #>  [308,]  332  416  385  469  944  817  433  995  142   906 #>  [309,]   71  822  407  917  959  655  100  125   18    36 #>  [310,]   57  419  437  742  930  246  899  705  653    44 #>  [311,]  798  418  985  325  282  207   10  159  910   743 #>  [312,]  713  190  435  842  984  287  564  553  328   737 #>  [313,]  839  801  730   90  398  971  418  492  961   998 #>  [314,]  832   98  150  895  423  146  930  612  128   810 #>  [315,]  434  482  539   74  772  952  271  679  362   807 #>  [316,]  635  421  209  438  586  860  630   76   92   922 #>  [317,]   27  487  621  662  388  393  554  620  716   780 #>  [318,]   52  907  143   37  562  137  201  182  474   627 #>  [319,]   91  531  738  132  304  283  925   85  119   497 #>  [320,]  866  693  559  529   38  348  130  972  254   684 #>  [321,]  456  598  159  743  416  408  110   93  325   299 #>  [322,]  326  488  472  923  712  679  545  271  881   553 #>  [323,]  926  519  111  777  673  667  946  886  953   958 #>  [324,]  665  720  432  528  776  548  386  649  147   451 #>  [325,]  743  418  798  599  782  646  456  311  177   321 #>  [326,]  488  881  322  197  377  553  712  960  289   453 #>  [327,]  708  261  361   41  925  474  238  907  345    37 #>  [328,]  190  722   47  533  206  435  312  290  842    95 #>  [329,]  880  710  750  163   69  330  294   53  707   767 #>  [330,]  784  474  137  797   53  143    7  907  294    69 #>  [331,]  255  619  718  208  931  463  497  306  434   355 #>  [332,]  525  308  469  433  305  906  884  142  173     8 #>  [333,]  526  828  199  342  131  618  281  356  908   510 #>  [334,]  735  294  373  408   65  629  516  663  731   574 #>  [335,]  210  502  138  440  706  979  203  684   67   783 #>  [336,]  593  950  126  396  695  114  687   40  444   669 #>  [337,]  509  911  565  980  920  452  579  683  769   878 #>  [338,]  300  696   74  453  119  244  202  224  568   679 #>  [339,]  298  464  814  196  970  710  112  754  617   369 #>  [340,]  420  961  612  635  804   78   76  392  291   302 #>  [341,]  642  205  651  390  162  843  667  186  174   111 #>  [342,]  828  356  618  526  397  994  186  131  698   845 #>  [343,]  655  357   36  829  427  542  521  221  741   209 #>  [344,]  921  266  459  455  514  702   43   30  552    62 #>  [345,]   85  535  373  361  180  674  808  574  849   663 #>  [346,]  141  221   26  785  404  183  188  868  270   678 #>  [347,]  869  217  956  372  285  883   21  958  865   536 #>  [348,]  254  529  866  857  320  559  792  693  605   854 #>  [349,]  515  232  173  278  142  591  195  386  583   616 #>  [350,]  465   86  835  263  976  402   33   46  732   482 #>  [351,]  130  854  652  578  972  206   94  145  644    75 #>  [352,]  220  765  728  234  915   25  823  185  692   508 #>  [353,]  809   28  493  484  885  919  156  504  699    49 #>  [354,]  640  837  543  120  189  113  118  132  177   836 #>  [355,]  931  673  923  744   21  331  155  488  389   536 #>  [356,]  618  342  281  994  828  131  764  235  397   756 #>  [357,]  427  343  655  521  221   36  829  567  860   785 #>  [358,]  975    9  394   48  625  374  594  848  526   692 #>  [359,]  414  426  816  910   95  927  937  415  640   599 #>  [360,]  791  974  390  845  627  135  850  263  224   201 #>  [361,]  849  871  470   41  847  717  250  808  345   555 #>  [362,]   74  952  315  202  679  791  390  271  772   953 #>  [363,]  282   23  730  370  100  311  381  418  839   798 #>  [364,]  983  812  125  830  227  548  705  742  404    29 #>  [365,]  104   55  500  755   51  745  783  377  121   579 #>  [366,]  105  966  873  740  681  887  943  632  239   964 #>  [367,]  977  721  377  355   55  545   19  448  286   488 #>  [368,]  102  704  122  203  440  810  110   67   54    10 #>  [369,]  624  245  795  951  136  686  464  541  723    87 #>  [370,]  381  998  282  730  940  170  363  207  985   311 #>  [371,]  685  938  588  886  193  446  908  411  901   111 #>  [372,]  956  217  869  779  844  347  818  761  888   526 #>  [373,]  663  574  626  808  516  334  470  345  127   849 #>  [374,]  116  383  518  248  779  698  601   48  625     5 #>  [375,]  178  890   15  978  250  301  249  617   41   871 #>  [376,]  406  123  844  582   14  277  657  647  724   993 #>  [377,]   51  745  488  121  494  365   55  326  644   367 #>  [378,]  657  922  406  862  461  863  775   92  577   677 #>  [379,]  864  862  577  657  863  378  945  922  683   307 #>  [380,]  466  486  588  770  590  926  777  938  472    17 #>  [381,]  370  282  207  985  170  998   23  363  592   311 #>  [382,]  260  151  273  883  991  980  933  714  733   481 #>  [383,]  116  374  760  824  301  504  601   49  156   625 #>  [384,]  546  149  787   64  487  532  194  293  279   534 #>  [385,]  817   81   62  502  258  416  335  459  962   469 #>  [386,]  776  902  349  387  892  515  232  522  591   793 #>  [387,]  919  902  892  776  386  942  653  504  973   633 #>  [388,]  317  901  393  716  243  293   17   27  198   570 #>  [389,]  792  155  751  605  254  355  529  590  323   558 #>  [390,]  843  205  341  642  201  202  135  224  651   568 #>  [391,]  454  258  870   82  308  152  859  656   23   934 #>  [392,]  960  302  561  340  804  745  231  463  420   121 #>  [393,]  716  901  388  317  820  621  916   27  680   411 #>  [394,]  845  848  526  828   48   59  975  358  342    33 #>  [395,]  594  358  975    9   48  625  896  566  888   394 #>  [396,]  425  811  659  336  126  833  469  114  525   962 #>  [397,]  131  764  708  342  356  994  828  974  618   850 #>  [398,]  861  313  768  798  801  212  992  418  839   550 #>  [399,]  614  139  616  196  583  596  464  584  988   711 #>  [400,]  193  230  685  446  287  974   39  371  737   154 #>  [401,]  109  235  167  779  281   20  618   77    4   372 #>  [402,]  261  465   46  350  192  191  848  161  850   263 #>  [403,]   92  922  775  461  169  378  560  316  209   657 #>  [404,]  830  786  983  274  576  221  265  346   26   141 #>  [405,]  501  288  585  726  893   15  249  949  259   967 #>  [406,]  862  378  657  863  577  376  582  804  677   291 #>  [407,]  917  100  309  822  661   71  851  125  959   815 #>  [408,]  294  334  321  598  456   45  416   93  797   629 #>  [409,]  913   45   89  680  264  562  762   93  174    75 #>  [410,]  552  981  921   97  999  678  344  733  914     6 #>  [411,]  820   99  446  685  756  131  886  908  489   680 #>  [412,]  696  283  132  300  244   91  768  861  483   212 #>  [413,]  476  859  786  216  906  785   23  454  995   788 #>  [414,]  359  937  816  910  426  827  640  415  768   897 #>  [415,]  426  842  359  984   95   56  414  827  289   328 #>  [416,]  456  743  321  159  408  385  995  308   10   110 #>  [417,]   87  161  617  690  485  261  723  978  327   686 #>  [418,]  798  311  325  935  782  480   10  313  730   985 #>  [419,]  310   57  437  899   44  653  522  742  610   705 #>  [420,]  340  612   78  961  635  860  895   76  517   804 #>  [421,]  316  864   80  209  403  438   92  586  630   719 #>  [422,]  527   14  376  724  277  511  945  123  647   523 #>  [423,]  150  219  961  801  314  932  517  895  832   297 #>  [424,]  211  251  429  714  260  481  560 1000  868   963 #>  [425,]  396  573  270  833  962  660  502  659  469   495 #>  [426,]  927  359  589   95  599  189  415  910  120   177 #>  [427,]  882  357  521  655  567  785   36  221  860   343 #>  [428,]  108  439   13  749  934  703  596  597  898   241 #>  [429,]  630  209  251  211  829  560  868  424   80   860 #>  [430,]  790  682  575  549  530  536  794  240  185   158 #>  [431,]  803  584  700  988  645  196  855  596  781   541 #>  [432,]  951  324  147  139  665  614  776  528  451   720 #>  [433,]  305  884  469  525  467    8  514  332  142   173 #>  [434,]  271  718  453  315  807  679  539  331  727   900 #>  [435,]  312  145  553  190  713  206  652  197  483   965 #>  [436,]  711  569   63  821  266  499  641  803  852     3 #>  [437,]   57  419  932  705  310  742   44  899  522   895 #>  [438,]  997  125  316  160  831  407  815  661  917   971 #>  [439,]  108  428  136  541  241  596  431  988  645   754 #>  [440,]  203  138   54  335  368   67  783  704  102   122 #>  [441,]  133   69  916   53  970  458  750    7  512   176 #>  [442,]    1   53  512   47  441  707  133  230   69   784 #>  [443,]  158   21  846   50  148  536  794  240  558   155 #>  [444,]  130  462  854  870  559   94  152  752  578   351 #>  [445,]  955  113  729  118  157  544  354  709   96   214 #>  [446,]  685  411  131  886  154  974  174  562  667   111 #>  [447,]  585  759  405  484  501  288  625   15    2   941 #>  [448,]  242  721   55  367  365   51  693  377  977   181 #>  [449,]  674  524  180  146  610  761  535  520  987   268 #>  [450,]  563  903  282  370  363  381   82  730  359    23 #>  [451,]   65   73  663  649  278  513  470  464   41   665 #>  [452,]  490  337 1000  117  683  920  905  565   80   509 #>  [453,]  718  434  271  807  881  679  283  727  619   331 #>  [454,]  859  391  413   23   82  216  934  258  476   363 #>  [455,]  793  921  266  515  195   97  232  344  173   127 #>  [456,]  321  743  159  598  416  408  110   10  325   299 #>  [457,]   24  802   86  267  877  496  831  124  876   681 #>  [458,]  916  750  198  570  707  725  176  129  947   767 #>  [459,]   62  778   72   30  344   67  102  335  203    43 #>  [460,]  299  810  127   93  146  110   98  102  626   122 #>  [461,]  775  922  378   92  403  267  239  639  169   657 #>  [462,]  444  152   94  870  130  752  854  559  336   593 #>  [463,]  306  619  718  331  208  832  255  368  704   122 #>  [464,]  298   65  451  245  541  339  629  686  951   614 #>  [465,]  350  402  976   86   46  192  523  848  835   263 #>  [466,]  380  588  770  590  486   17  938  777  928   926 #>  [467,]  514  821  433  884  305    6   12  711  641   436 #>  [468,]  520  144   20   77  634   97  954  892  610   942 #>  [469,]  525  884  433  332    8  305  817  514  173   678 #>  [470,]  849  513   41  361  871  847  250  663  717   373 #>  [471,]  825  569  852  688  641  554  758   61  800   275 #>  [472,]  322  923  486  712  488   66   31  222  326   197 #>  [473,]  202  390  843  338  201  498  713  679  205   193 #>  [474,]  330  797  907  137  925  784  143  318  327   294 #>  [475,]  876  802  496  550  107  160  637  831  875   992 #>  [476,]  906  216  995   11  413  786  479  646  830   859 #>  [477,]  878  509  579  769  581  813  980  911  676   556 #>  [478,]  702  126  918  962  551  495  114  149  660   233 #>  [479,]  517  480  782  786  297  935  274  643  237   476 #>  [480,]  935  297  782  517  479  810  219  423  801   961 #>  [481,]  273  933  260  714  963  246  382  211  774    83 #>  [482,]  539  315  263  224  119  772  153  434  664   186 #>  [483,]  283  965  696   91  497  201  553  568  453   252 #>  [484,]  587   28  941   49  353  809  156  692  109   493 #>  [485,]  890  649   41  795  723  717  978  871  555   951 #>  [486,]  380  472  466  187  926  923  777  939  588   323 #>  [487,]   27  317  621  534   64  620  149  233   61   546 #>  [488,]  326  931  197  377  923  355  322  553  881   222 #>  [489,]   99  604  820  622  800  411  746  756  171   226 #>  [490,]  452  117  337  799  741  909  838  303 1000   654 #>  [491,]   31   66  712   94  854  289  351  472  984   326 #>  [492,]   90  615  801  839  517  125  935  219  782   961 #>  [493,]  580  809  353   28  699  904  256  658  506   885 #>  [494,]   51  377  693  712  644  204  745  121  130    31 #>  [495,]  660  706  979  210  659  233  702  962  502   534 #>  [496,]  993   86   14  376  637  457  802  267  582   976 #>  [497,]  304  619  255   85  718  531  208  162  982    91 #>  [498,]  473  835  360   74  338  627  257  263  224   568 #>  [499,]   63  731  584  947  129  436  803  767  648    22 #>  [500,]  247  558  676  155  215  879  748  579  365    79 #>  [501,]  405  288  726  949  604  613  585  622  941   489 #>  [502,]  335  270  706  210  817  962  979   72  495   684 #>  [503,]   18  959  542   71  537  309  822  749  343   859 #>  [504,]  919  653  942  387  383  824  156  760  892   963 #>  [505,]  948  766  905  715  608   83  806  672  999   787 #>  [506,]  658  256  633  973  776  904  902  580  147   699 #>  [507,]  773  225    8    6  591  213  552  262  699   973 #>  [508,]  820  621   32  662  234  800    4  746  691   166 #>  [509,]  579  769  337  477  911  609  878  721  676   980 #>  [510,]  549  199  819  217  526  647  952  277  372   333 #>  [511,]  945  123  422  657  637  376  527  379  577   378 #>  [512,]  154   53  562  707  143  570  916    7  907   318 #>  [513,]  470  849  871  847  649  717  250   73  555    41 #>  [514,]  467  821  884  344   12  702  433  305  921     6 #>  [515,]  232  349  173  195  455  583  278  616  591   142 #>  [516,]  127  600  574  663  373  626   73  793  195   334 #>  [517,]  297  479  480   78  935  895  961  423  782   492 #>  [518,]  248  601  774  374  239  698  779  295    5   818 #>  [519,]  946  323  886  111  938  908  667  926  240   777 #>  [520,]  468  144   20  954  524  275   77   97  449   167 #>  [521,]  860  567  427  882  635  357  655  115   78   630 #>  [522,]   44  892  899  705  576   73  419  437  793   513 #>  [523,]  724   59   14  976  993  848  465   33  350   845 #>  [524,]  674   43  449  520  626  127   89  268  954   460 #>  [525,]    8  469  884  433  332  305  833  173  678   467 #>  [526,]  828  342  333  394  845  186  217  618  510   779 #>  [527,]  422   14  724  523  511  896  277  376  123   945 #>  [528,]  665  720  649  555  324  951  795  890  485   943 #>  [529,]  866  254  348  792  320  389  605   38  694   620 #>  [530,]  790  682  430  234  240  575  736  794  185   220 #>  [531,]   37  319   85  497  925  304   91  907  850   982 #>  [532,]  534  215  233   64  879  846  495  148  748   706 #>  [533,]   47  198  753  190  290  206  611  707  328   652 #>  [534,]  233  532  215   64  846  487  558  495  879   247 #>  [535,]  987  841  826  606  280  674  994  345  574   449 #>  [536,]   21  158  556  240  958  443  744  285  794   673 #>  [537,]  542   60  184  898  757  989  503   26  343   506 #>  [538,]  939  734  242  813  920  448  581  477  530   721 #>  [539,]  482  186  772  224  304  315  263  119  434   497 #>  [540,]  874  179  978   15    2  375  223  951  585   890 #>  [541,]  245  596   88  464  629  431  136  196  298   399 #>  [542,]  184  343  537  357   36  785   60  655   26   427 #>  [543,]  354  723  858  837  120  690  177  925  646   670 #>  [544,]  709  113  732  191   96  118  244  132  602   354 #>  [545,]   19  286  977   42  367  807  960  322  727   271 #>  [546,]  149  384  233  487  534  114  478  293  659   532 #>  [547,]  671  613  595  133  259  441  176  701  726   284 #>  [548,]  720  665  324  528  675  943  639  877  705   364 #>  [549,]  510  819  575  430  790  199  217  888  372   253 #>  [550,]  875  900  291  398  727  313  212  801  912   971 #>  [551,]  668   58  694  918  478  126   75  753  780   944 #>  [552,]  410  981  921  678  344   97  591    6  455   914 #>  [553,]  197  222  145  435  605  923  483  488  751   931 #>  [554,]  825   12  471  641  293  852  780   27   61   569 #>  [555,]  943  871  649  717  849  824  890  513  847   740 #>  [556,]  883  865  536  158  285   21  794  443  991   347 #>  [557,]  782  788  106  646  935  325  839  227  675    90 #>  [558,]  155  247  500  846  215  443  534  148   67    50 #>  [559,]  130  320  854  693  857  444  348  866   94    38 #>  [560,]  429  211  251  630  209  775  868  246  742   963 #>  [561,]   42  392  769  231  977  863  804  302  340   911 #>  [562,]  143  154  907  762   37  982  512  318  913   409 #>  [563,]  450  903  370  282  381  363   82  730  940   661 #>  [564,]  842   52   96  965  137  312   56  713  118   602 #>  [565,]  889  683  920  337  980  509  477  911  769   878 #>  [566,]  192  395  848  523  759  358  625  976  465   394 #>  [567,]  521  882  427  860  357  654  170  635  115    36 #>  [568,]  201  135  182  224  119  850  696  627  531   263 #>  [569,]  436  641  471  852    3  688  213  711   63   262 #>  [570,]  916  458  198  707  512  154  750  680  393   990 #>  [571,]  253   35  872  307  889  945  577  511  379   575 #>  [572,]   83  608  587  484  103  818   49  594  933    28 #>  [573,]  962  660  684  979  752  425  502  210  763   578 #>  [574,]  373  663  626  516  127  731  535  470  674   334 #>  [575,]  549  430  790  771  253  819  530  229  888   991 #>  [576,]  274  793  600  522   30   73  705  265   44   404 #>  [577,]  862  863  406  657  378  804  302  865  307   677 #>  [578,]  684   81  644  972  962  258  870  783  440   335 #>  [579,]  769  509  676  911  477  500  104   79  878   721 #>  [580,]  493  904  809  506  256  658  353  699  633   973 #>  [581,]  878  813  924  477  920  748  980  509  879    79 #>  [582,]  912  153  632  406  105  900  376  875  664   366 #>  [583,]  616  139  515  711  349    3  225  213  278   591 #>  [584,]  803  499  700  431  767  298  196  629   63   731 #>  [585,]   15  405  893  249  967  179  375  501  540   178 #>  [586,]  635  719  940  340  316  291  231  860  313   804 #>  [587,]  484  941   49   28  728   83  692  109  156   401 #>  [588,]  938  466  371  519  590  631  380  777  908   685 #>  [589,]  177  599  120  927  189  200  856  640  354   910 #>  [590,]   17  389  792  519  928  605  620  254  323   111 #>  [591,]  515  349  173  552  921  914  973  455  232   225 #>  [592,]  763  755  207  170  783  115  138  183   54    81 #>  [593,]  336  950  126  687   40  669  695  944  444   396 #>  [594,]   48  625  818  374  888  518  248  358  116    59 #>  [595,]  411  164  901  284  716  259  371  685  393   489 #>  [596,]  541  616  142  988   88  245  139  399  431   583 #>  [597,]  703  989  853  147  749   88   13  172   29    18 #>  [598,]   93  252  299  321   45  456  110  408  913   294 #>  [599,]  177  927  589  120  910  325  640  189  354   856 #>  [600,]  516  576   73  793  127  232  195  274  643    30 #>  [601,]  774  248  518  374  818  779  116  383   49   761 #>  [602,]  257  182  191  627   52  318  474  137  261   132 #>  [603,]  988  855  929  645  711  803  436  569  821   431 #>  [604,]  489  823  800  622  820   99  726  613  728   746 #>  [605,]  751  792  145  197  652  389  694  553   58   254 #>  [606,]  987  826  535  634  841  218  280  144  574   674 #>  [607,]  214  124  729   24  457  978   46  795  417    87 #>  [608,]   83  587   28  505  484  948  481  572  103   766 #>  [609,]  181  509   55  579  721  769  204  337  654   104 #>  [610,]  761   20   77  449  899  468  180  419  520   167 #>  [611,]   40  533  666  687  198  857  328  990   47   140 #>  [612,]  420   78  895  340  961  296   54  297  314   517 #>  [613,]  701  726  823  604  489  671  968  501  622   547 #>  [614,]  399  139  885  432  464  196  616  583  596   541 #>  [615,]   90  492  801  219  675  935  839  782  517   423 #>  [616,]  583  139  711  515  349  399  278  142  596   436 #>  [617,]   87  417  978  178  112  375  485  890  161   969 #>  [618,]  356  342  281  828  235  994  779  292  698   691 #>  [619,]  463  306  718  331  255  208  497  304  832   810 #>  [620,]  928  487  279   32  317  662  621  389  590   529 #>  [621,]   27  317   32  487  946  508  662    4  268   393 #>  [622,]   99  489  604  820  164  949  411  823  259   764 #>  [623,]   25  787  279   32   64  672  662  166  185   384 #>  [624,]  369  795  686  723  245  951   87  670  690   464 #>  [625,]  116  374  383  594  358   48   49  518  601   248 #>  [626,]  574  127  373  674  516  663  731  524   93   460 #>  [627,]  257  974  135  182  201  850  318  568  602   261 #>  [628,]  781  243  176  725  855   70   22  458  803   671 #>  [629,]  700  334   65  278  245  584  767  464  451   541 #>  [630,]  429  209  860  829  251  211  812  560  868   221 #>  [631,]  928  662   17  279  621  620  901  590  588   508 #>  [632,]  153  912  664  738  304  105  873  582  366    85 #>  [633,]  973  658  902  506  699  776  386  387  591   225 #>  [634,]  606  987  892  144  468  218  520   20  513   574 #>  [635,]  860  340  420  586   76  521  961   78  804   316 #>  [636,]   16  545   31  326  286  712  494  322  377   960 #>  [637,]  378  657  123  922  876  496  461  267  376    92 #>  [638,]  276   84  701  968  243  388  293  669  628    70 #>  [639,]  267  742  239  169  831  437  966  775  932   105 #>  [640,]  910  354  816  599  177  325  120  861  798   589 #>  [641,]  569   12    6  821  471  554  825  436  467   514 #>  [642,]  341  953  390  651  162  186  205  843  667   952 #>  [643,]   73  237  858  932  600  646  808  479  274   576 #>  [644,]  783  972  745  578  440   81  755  684   54   335 #>  [645,]  988  855  431  305  603  433  803  467  711   142 #>  [646,]  237  858  782  643  743  935  325  479  557   480 #>  [647,]  277  844  217  772  724  510   48   59  376   526 #>  [648,]   63   22  852  499  671  569  436  800  731   176 #>  [649,]  717  485  555  513   41  665  890  849  528   943 #>  [650,]  241  695  134  773  855  811  950  645  603   108 #>  [651,]  174  205  982  162  762  667  341  111  642   264 #>  [652,]  145   75  668  206  694  605  351   58  751   753 #>  [653,]  942  504  419   44  919  899  892  246  522   387 #>  [654,]  567  175  104  231  609  755   80  121  181   719 #>  [655,]  343   36  427  357  521  309  882  860  567   829 #>  [656,]  258  927  856  870  599  985  311  200  589   416 #>  [657,]  378  406  862  922  577  123  863  376  461   637 #>  [658,]  506  633  776  256  973  902  387  147  386   904 #>  [659,]  495  660  114  236  702  478  233  962  811   546 #>  [660,]  495  979  962  659  114  706  210  684  573   233 #>  [661,]  407  917  100  971  851  719  438  815  309   839 #>  [662,]  279   32  166  317  508  621  631  928  487   620 #>  [663,]  373  574  470  516  808   73  626  849  127   513 #>  [664,]  153  992  632  912  738  900  304  119  482   319 #>  [665,]  324  528  649  720  513  548  555  451   73   943 #>  [666,]   40  857  687  611  348  866  669  529  559    38 #>  [667,]  174  111  886  651  162  264  958  519  268   341 #>  [668,]  694   58  551   75  652  753  918  409  751   605 #>  [669,]  243  293  950  687  388   40  593  198  551   126 #>  [670,]  624  543  177  723  369  272  245  172  200   589 #>  [671,]   22  176  648  781  726   63  613  499  489   133 #>  [672,]  789  806  185  924  229  840  787  715   64   273 #>  [673,]  953  926  744  355   21  536  931  323  285   923 #>  [674,]  449  524  626  841  535  268  987  574  826   171 #>  [675,]  615  227  887  858   90  557  219  548  492   643 #>  [676,]  500  579   79  769  247  911  188  104  558    67 #>  [677,]  930  151  804  863   76  340  314  406   57   883 #>  [678,]  552  981  270  410   72  921  884  344  469   706 #>  [679,]  202  271  434  453  315  718  923  931  331   807 #>  [680,]  264  756  226  171  409  268  174   89  913   746 #>  [681,]  740  966  366    5  873  943  239  555  295   105 #>  [682,]  240  790  744  430  530  794  536  946  158   673 #>  [683,]  565  980  337  714  251  911  889  260 1000   509 #>  [684,]  962  979  335  578  210  502  972  660  783   706 #>  [685,]  446  371  886  908  938  411  193  111  131   667 #>  [686,]   65  690  723  624   87  464  334  485  735   294 #>  [687,]   40  666  593  669  611  336  950  198  857   243 #>  [688,]  471    3  144  569  262  852   97  825  758   213 #>  [689,]  784  970   69  330  161    1   53   87  417   690 #>  [690,]  686  723   87  417  485  474   65  543  925   161 #>  [691,]  281    4  268  958  167  235  946  667  746   356 #>  [692,]  941  401  109   49  587  358  949  728    9   622 #>  [693,]   51  320  559  130  494  348  866   66  972   365 #>  [694,]   58  668  551   75  918  652  751  605  792   972 #>  [695,]  950  811  336  593  891  669  293  126   12   396 #>  [696,]  283  300  412  483  132  965   91  568  119   338 #>  [697,]  909  654  741  719   80  567  838  175   36   357 #>  [698,]  295  779  964  761    5  994  342  374  869   248 #>  [699,]  973  633  902  387  658  919  914  225  591   506 #>  [700,]  803  767  629  584  431  499  710  947  334   731 #>  [701,]  613  968  823  726  276  604  915  671  716   489 #>  [702,]  478  495  344  514  962  126  659  660  918   233 #>  [703,]  597  989   88   13  216  749  172  147   29   272 #>  [704,]  368  122  102  203   67  440  208  778  972   110 #>  [705,]  437  932  742  522   44  274  576  983   57   419 #>  [706,]  210  979  495  502  335   72  660  233  459   270 #>  [707,]  750  290  512  753  570  458   47   53  198   916 #>  [708,]  764  994  327  397  280  756  535  238  292   841 #>  [709,]  113  544  132  732  191  354  118   96  602   244 #>  [710,]  298  329  700  584   69  767  970  629  431   163 #>  [711,]  436  616  583  213  305  988  467  515  569   821 #>  [712,]   31   66   51  494  488  326  377  322  693   472 #>  [713,]  312  190  287  435  737  564  984  842  473    56 #>  [714,]  251  211  260  481  933  382  424  151  980   677 #>  [715,]  787  924  806  236  672  194  532  840  581   623 #>  [716,]  393  901  820  968  388  317  621  508  411   662 #>  [717,]  849  649  808  361  470   41  943  555  513   871 #>  [718,]  619  331  453  434  463  497  255  306  208   304 #>  [719,]  586  940  231  567  661  170  635  521  654   730 #>  [720,]  528  665  324  548  555  432  649  824  943   951 #>  [721,]   55  367  977  448  579  365  509  609  181   769 #>  [722,]   47  290  328  996  206  880  753  957  707   533 #>  [723,]  690  795  485  686  543   87  624  649  858   717 #>  [724,]   14   59  523  647  993   48  277  376   33   976 #>  [725,]  947  821   12  803  458  767   22  129  780   781 #>  [726,]  613  501  671  604  288  489  648  405  259   701 #>  [727,]  807  900  271   19  434  212  453  960  302   550 #>  [728,]  758  166  401  789  800  941  587  604  352   692 #>  [729,]  214  157  607   68  936  723  445  106  795   670 #>  [730,]  313  998  940  370  170  839  363  418  282   115 #>  [731,]  499  574  626   63  334  129  373  735  841   663 #>  [732,]  835  992  244  709  119  132  300  191  182   696 #>  [733,]  999  981  273  954  914  265  410  188  552   128 #>  [734,]  739  538  939  242  101  623   25  928  448   813 #>  [735,]    7  334  294  797   65  731  373  129  226   238 #>  [736,]  530  199  682  220  790  549  938  430  234   510 #>  [737,]  287  193  713  777  312  190  473  140  843   371 #>  [738,]  632  319  887  153  858  304   85  219  873   912 #>  [739,]  928  620  279  631   17  101  590  466  623   734 #>  [740,]  681  966  366  943  239  555  295  873  847   105 #>  [741,]  909  838  357   36  343  567   80  697  427   829 #>  [742,]  437  705   57  310  639  419  932  653   44   246 #>  [743,]  456  159  321   10  416  325  646  237  782   480 #>  [744,]  794  240  536  158  673  682  355   50   21   443 #>  [745,]  121  783  644  377  104   54  755  365  440   392 #>  [746,]  171  268  235  826  281  820  841    4  756   674 #>  [747,]  175  204  752  755  654  181   55  121  104   763 #>  [748,]  879  215  500  532   50  534  558  878  924   233 #>  [749,]  703  597  934  989  428  853   18   13  216    88 #>  [750,]  707  458  767  329  129  753  198  916  947   290 #>  [751,]  605  792  145  389  197  694   58   75  652   208 #>  [752,]  573  152  130  755  444  747  644  494  693   559 #>  [753,]  290  206  707  668   75  913  409   47  652    58 #>  [754,]  136  369  339  298  163  541  710  624  245   196 #>  [755,]  121  104  592  783  644  745  365  763  175   573 #>  [756,]  226  680  764  264  841  171  746  268  826   708 #>  [757,]  228  537   60  868  829  343  506  542  633   560 #>  [758,]  840  275   61  825  471  688  728  806  166   800 #>  [759,]  168  447  566  625  874  585  540    2  116    15 #>  [760,]  301  824  847  250  218  871  513  383  470   555 #>  [761,]  610  180  964  295  869  899  449  698  146   779 #>  [762,]  982  651   37  174  562  264  162  205  913   409 #>  [763,]  592  183  270  755   81  502  138  573  882   207 #>  [764,]  708  397  131  756  994  356  280   99  292   618 #>  [765,]  823  220  915  352  622  604  508  820  949   234 #>  [766,]  505  507  999  117  699  715  424  236  410   981 #>  [767,]  947  700  129  803  499  584  750  334  725   629 #>  [768,]  398  861  244  212  937  412  816  992  107   798 #>  [769,]  579  911  509  676  477  104  500  561  980    79 #>  [770,]  466   17  380  140  101  590  588  990  371   901 #>  [771,]  575  888  229  819  818  933  549  991  253   430 #>  [772,]  186  539  952  217  277  482  315  647  434   642 #>  [773,]  225  507  213  262  929    6  603    8  904   988 #>  [774,]  601  248  518  310  818  761  419  610  653   779 #>  [775,]  461   92  922  403  169  639  378  560  267   310 #>  [776,]  386  902  658  633  387  324  147  973  349   432 #>  [777,]  111  323  843  926  222  938  519  193  205   886 #>  [778,]  459   62  102  110  122  299  918  704   43    67 #>  [779,]  698  618  761  372  109  828  295  374  869   248 #>  [780,]   27   89  947  918  129  554  171  852  725    12 #>  [781,]   22  803  584  628  725  431  176  499  671   855 #>  [782,]  935  480  479  646  557  517  297  237   90   418 #>  [783,]  644  440  335  138   54  745  203  972   67   755 #>  [784,]  330  474   53  137  689   69  797    7  836   161 #>  [785,]  141   26  346  221  786  427  830  833  413   404 #>  [786,]  404  830  479  995  476  413  906  785  517   141 #>  [787,]  194  715  384  806   64  623  166  840  758   672 #>  [788,]  557  227  782  100  476  216  413  917  839   479 #>  [789,]  672  185  806  840  229  273  924  167  758   275 #>  [790,]  430  530  682  575  549  240  536  234  794   185 #>  [791,]  360  843  199  390  952  341  642  953  333   362 #>  [792,]  389  605  751  254  529  155  694  145  197    58 #>  [793,]  455  576  600  127  516  232  515   30  522   265 #>  [794,]  158   50  744  240  443  536  556  682  430    21 #>  [795,]  723  485  951  649  624  528  369  890  665    87 #>  [796,]  936  853  877   18  548  364  720   29  227   831 #>  [797,]  294  143  907  474  925  330    7  735  562   137 #>  [798,]  418  311  325  861  910  398  313  640  782   730 #>  [799,]  986  117  833  838  303  134  490  184  425   898 #>  [800,]  852  746  171  604  820   61  508  471  758   489 #>  [801,]  219   90  615  961  492  313  935  423  480   839 #>  [802,]  831  160  457  876  267  675   24  877  496   615 #>  [803,]  584  700  431  767  499  436  781  725  821   988 #>  [804,]  291  677  863   76  340  302  862  875  930   961 #>  [805,]  894  791  187  360  199  362  736  843  473   498 #>  [806,]  840  672  789  999  275  758  787   64  924   532 #>  [807,]  727  271   19  434  453  900  315  212  960   679 #>  [808,]  717  373  663  849  925  470  361   73  858   574 #>  [809,]  353  493   28  919  580  699  885  658  484   387 #>  [810,]  297  368  102  460  306  122  480   98  150   299 #>  [811,]  891  659  695  396  236  986  114  425  134   660 #>  [812,]  983  125   76  860  364  492  895  517  830   705 #>  [813,]  581  878  477  924  920   50  748  794  879   509 #>  [814,]  339  196  298  112  970  893  671  464  710   614 #>  [815,]  851  106  839  971   90  160  100  615  917   492 #>  [816,]  910  640  937  861  414  359   68  412  354   798 #>  [817,]  385  502   81   62  335  469  270  962  459   684 #>  [818,]  888  601  248  774  518  933  372  779  594   956 #>  [819,]  888  549  510  575  199  771  647  372  526   217 #>  [820,]  508  746  411   99  489  171  716  800  268   393 #>  [821,]  467   12  514  641  436  725  711  803  305   569 #>  [822,]   71  959  309  100  407  917   18  788  851   661 #>  [823,]  604  915  765  613  701  968  622  949  489   800 #>  [824,]  760  301  250  555  871  847  513  218  383   890 #>  [825,]  471  554  641   61  852  569  758  688  194   800 #>  [826,]  280  841  987  535  606  292  746  674  994   171 #>  [827,]  897   56  984  412  414  300  244  338   96   564 #>  [828,]  342  526  618  356  333  779  394  186  698   845 #>  [829,]  209  429  630  357  343  868  221  655  560   251 #>  [830,]  983  404  786  221   26  479  785  812  141   364 #>  [831,]  802  160  877  639  267  615  675  125  169   876 #>  [832,]  314  150   98  306  423  463  619  810  612   961 #>  [833,]  184  270  141  785  525    8   26  678  425   469 #>  [834,]  603  929  399  904  262  988  196  614   22   569 #>  [835,]  263  732  119  224  350  482  568  182  992   135 #>  [836,]  837  137  189  120  996  330  118  354  784   474 #>  [837,]  836  189  354  120  137  543  118  113  474   330 #>  [838,]  909  741  542  799   36  357  697  343  490   184 #>  [839,]   90  492  313  815  615  851  971  801  730   935 #>  [840,]  806  758  275  999   97  789  520   61  954   410 #>  [841,]  826  535  987  606  280  674  171  756  746   626 #>  [842,]  564   56  312   95  984  415  713  190   96   328 #>  [843,]  390  777  205  341  202  642  926  111  953   323 #>  [844,]  647  956  217  372  277  376  406  248  123    48 #>  [845,]  394  848   33  342  526  828  397  976   59   186 #>  [846,]  148  443   43  247  558  534  128   64  155   532 #>  [847,]  871  250  760  361  470  849  301  513   41   824 #>  [848,]  845  394  976   59   33  192  523  402  465    46 #>  [849,]  361  470  717   41  871  513  847  808  250   649 #>  [850,]  135  224  182  568   37  531  263  627  974   201 #>  [851,]  815  971  106  839  100  917  407   90   68   313 #>  [852,]   63  471  569  648  554  171  266  800  436   825 #>  [853,]   18  597  936  703  989   29  172  796  272   227 #>  [854,]   94  130  351  559  444  348  857   66   40   320 #>  [855,]  645  603  988  431  803  781  821  467  628   711 #>  [856,]  927  177  589  599  656  200  910  426  120   934 #>  [857,]  666  348   40  559  866  529  254   38  320   854 #>  [858,]  237  646  643  738  808  717  887  543  925   675 #>  [859,]  216  413  454  476  934  788  906   23  786   227 #>  [860,]  521  635  420   78  630  812  567  340   76   427 #>  [861,]  398  798  768   68  816  640  910  412  418   313 #>  [862,]  577  863  406  804  657  378  291  875  922   677 #>  [863,]  862  577  677  804  406  378  657  302  151   865 #>  [864,]  379  421  316  403   92  922  862  657  378   863 #>  [865,]  285  556  883  347  302  956  151  536  863    21 #>  [866,]  529  320  348  254   38  857  694  792  693   559 #>  [867,]  192  498  402  360  257  627  165  465  261   835 #>  [868,]  221  983  346  630   26  829  429  211  560   404 #>  [869,]  347  761  217  372  180  964  295  779  186   698 #>  [870,]  258  578  385   81  444  817  944  656  962   308 #>  [871,]  250  847   41  361  849  555  470  890  513   760 #>  [872,]  307  771  571  253  103  511  575  123  933   991 #>  [873,]  366  632  681  105  887   85  738  361  740   943 #>  [874,]  540    2  179  168  223  720  978  528   15   951 #>  [875,]  291   76  550  804  912  801  582  862  900   406 #>  [876,]  802  475  637  831  160  496  457  997  877   267 #>  [877,]  831  169  548  639  267  802   24  457  160   796 #>  [878,]  581  477  813  924   79  579  748  509  980   920 #>  [879,]  748  215  532  500  534  233  558   50   79   924 #>  [880,]  163  329  957  200  750  722  710  290  996   408 #>  [881,]  960  326  453  463  998  488  718  306  807   727 #>  [882,]  427  567  521  115  170  592  183   23  860   763 #>  [883,]  151  556  382  865  347  991  148  956  273   677 #>  [884,]  433  469  305  525  467    8  514    6  173   921 #>  [885,]  614  249  432  139  179  399  353  218  375   809 #>  [886,]  908  667  519  111  938  174  685  946  446   323 #>  [887,]  943  366  738  873  105  717  858  632  675   555 #>  [888,]  819  818  771  372  549  510  594   48  779   575 #>  [889,]  565  683  920   35  509  337  477  307  980   379 #>  [890,]  485   41  871  649  250  978  178  555  375   849 #>  [891,]  811  236  659  194  986  384  695  546  114   149 #>  [892,]  522   44  634  387  942  468  899  653  793   386 #>  [893,]   15  112  375  585  969  178  967  617  405   259 #>  [894,]  805  187  791  473  193  843  360  737  362   202 #>  [895,]  274  612  517   98   78  932  314  423  150   420 #>  [896,]  819  647  510  724  277  199  527  549  888   395 #>  [897,]  827   56   96  244  300  564  984  412  338   414 #>  [898,]  134  184  537    8  833  525  542  428  332   108 #>  [899,]   44  522  419  146  437  761  964  180  610   892 #>  [900,]  727  912  153  212  664  807  992  434  550   582 #>  [901,]  393  716  388   17  371  990  631  570  317   916 #>  [902,]  387  386  776  633  973  919  658  892  914   246 #>  [903,]  450  563  370  381  282   16  363   82  636   289 #>  [904,]  256  225  139  583  506  616  658  399  973   633 #>  [905,]  505  920  581  424  715  924  878  452  337   672 #>  [906,]  995  476   11  173  216  786  232   13  413   349 #>  [907,]  143   37  318  562  797  474  531  762  925   982 #>  [908,]  886  519  938  667  685  946  111  691  411   820 #>  [909,]  741  838   36  697  357  567  654  343  427    80 #>  [910,]  640  816  599  798  927  325  177  861  311   354 #>  [911,]  769  579  676  509  980  477   79  337  188   104 #>  [912,]  153  632  664  582  219  105  900  423  150   738 #>  [913,]  409   45   93  299  252  598  562  762   75   264 #>  [914,]  265  981  591  733  999  552   97  410  892   386 #>  [915,]  823  968  166  765  352  728  604  662  508    25 #>  [916,]  570  458  441  176  512  707  226  129  750   680 #>  [917,]  407  100  309  822  661  125   71  851  815   839 #>  [918,]   58  551  778   89  694  668  780  478  459    62 #>  [919,]  387  504  942  653  963  902  246  892  973   699 #>  [920,]  581  565  878  813  337  477  509  980  905   683 #>  [921,]  552  455  410   97  344  266    6  591    3   514 #>  [922,]  378   92  775  403  461  657  862  406  677   863 #>  [923,]  222  931  926  197  355  488  673  553  323   679 #>  [924,]  878  672  581  813  806  748  789  715  879   532 #>  [925,]  797  808  294  531  474  907  373   37  327   319 #>  [926,]  323  673  777  953  923  519  843  111  222   744 #>  [927,]  599  589  177  856  910  426  120  640  656   189 #>  [928,]  631  620  279   17  662  739  590   32  621   946 #>  [929,]  603  262  569  641  213  773  834    6  471   711 #>  [930,]  677   57  310  151  314  437   76  895  804   419 #>  [931,]  355  331  923  488  673  197  718  255  222   208 #>  [932,]  437  705  274  895  423  643  105  742   98   522 #>  [933,]  481  229  818  991  382  714  260  774  273   771 #>  [934,]  859  216  749  703   13  454  308  476  906    88 #>  [935,]  782  480  297  517  219  479  801   90  615   418 #>  [936,]   29  227  853  172   18  675  272  796   71   548 #>  [937,]  816  768  414  861  107  244  359   68  910   412 #>  [938,]  588  519  908  886  371  685  777  323  111   926 #>  [939,]  530  682  242  744  486  794  790  240  430   380 #>  [940,]  170  730  998  231  115  370  586  121  719   313 #>  [941,]  587  692  484  728   49  949  604  109  401   156 #>  [942,]  653  504  919  892   77  387  246   20  419   468 #>  [943,]  555  740  717  887  366  649  681  871  849   361 #>  [944,]  126  308  551  753  416  385  668  870  918   767 #>  [945,]  511  422  577  379  657  862   35   42  376   864 #>  [946,]  519  240  621  691  958  323   32  886  667   908 #>  [947,]  129  767  780  725  499  731   63  803  436   626 #>  [948,]  505  715  608  905  766  787   83  672  194   806 #>  [949,]  501  622  941  692  823  604  765  405  613   726 #>  [950,]  593  695  126  336  669  478  243   12  944   293 #>  [951,]  795  432  528  485  890  649  464  369  451   624 #>  [952,]  772  315  953  186  362  277  642  539  510   647 #>  [953,]  673  642  926  952  323  843  341  285  536   958 #>  [954,]  520   43  128  468  733  524  148   97  273   275 #>  [955,]  589  177  670  445  927  157  856  354  426   599 #>  [956,]  372  217  844  347  991  869  865  285  883   151 #>  [957,]  163  880  200  996  589  189  329  120  836   837 #>  [958,]   21  691  536  667  162  443    4  347  946   240 #>  [959,]  822   71  309  100  407  917   18  788  661   851 #>  [960,]  881  392  998  727  302  807  463   19  745   453 #>  [961,]  150  423  340  801  420  517  612   76  297    78 #>  [962,]  684  660  979  502  495  702  573  335  210   706 #>  [963,]  246  919  942  653  387  902  419  481  310   504 #>  [964,]  295  180  761  146  899  698  869   98  105   610 #>  [965,]   52  483  283  696  132  318   91  137  201   143 #>  [966,]  239  740  366  681  105    5  295  267  873   964 #>  [967,]  708   15  292  969  764  994  178  397  280   893 #>  [968,]  716  662  393  166  915  701  823  388   84   279 #>  [969,]  112  284  617  238  967  259  708  893  261   327 #>  [970,]   69  689  133  298  710  339  112  238  441     7 #>  [971,]  851  815  839  313   90  730  398  106  661   550 #>  [972,]  644  684  704  783  578  440  203  979  694    67 #>  [973,]  633  699  902  591  658  387  776  225  386   506 #>  [974,]  627  850  135  446  318  397  257  131  201   360 #>  [975,]    9  358  394  333  526  828   48  199  888   845 #>  [976,]   59   33    5  848  350  993  523  465  845    86 #>  [977,]  367  721  561   19  545  377  392  355   42    55 #>  [978,]  890  375  485  178  617  871  555   41  250    46 #>  [979,]  210  706  684  495  660  335  962  502  233   247 #>  [980,]  260  382  911  477  683  878  769  337  151   991 #>  [981,]  410  552  733  999  678  914  265  921   72   954 #>  [982,]  762  651   37  174  264  162  562  205  497   913 #>  [983,]  830  404  705  364  812  786  868  274  386   221 #>  [984,]   56  312  842  827  713  415  435  190  289   897 #>  [985,]  207  311   10   81  258  159  381   23  282   418 #>  [986,]  117  799  833  236  134  678  659  811    8   425 #>  [987,]  606  826  535  841  634  280  674  218  574   144 #>  [988,]  645  603  711  855  431  596  803  305  616   142 #>  [989,]  703  597   13  216  147  172   60   88   29   272 #>  [990,]  140  570  901  198  388  533  916   17  458   611 #>  [991,]  382  883  956  556  307  151  229  933  260   185 #>  [992,]  664  212  153  119  732  900  244  912  632   482 #>  [993,]   14   59    5  724  976  496  376  123  239    48 #>  [994,]  292  708  280  535  356  618  764  826  847   342 #>  [995,]  906  476  173  232   11  786  600  195   30   404 #>  [996,]  836  189  957  722  837  880  137   47  329   290 #>  [997,]  438  160  831  125  876  815  877  407  917   802 #>  [998,]  730  940  370  170  960  881  313  418  745   115 #>  [999,]  733  981  410  840  806  914  552   97  273   954 #> [1000,]  429  424   80  251  209  829  683  452  211   630 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.75123324 0.7728336 0.8535100 0.9610233 0.9988456 1.0241624 1.0346625 #>    [2,] 0.72794121 0.8192607 1.0118221 1.0396370 1.0447104 1.0736597 1.1356458 #>    [3,] 0.31837803 0.4564968 0.4829120 0.5219559 0.5329834 0.6032451 0.6036069 #>    [4,] 0.31047166 0.3921811 0.4326476 0.4630233 0.5398038 0.5555416 0.6151065 #>    [5,] 0.46734788 0.4760593 0.5466231 0.5606464 0.5640889 0.5726195 0.5783608 #>    [6,] 0.51152215 0.5275568 0.5497865 0.5556941 0.5624806 0.6122315 0.6278000 #>    [7,] 0.29359887 0.5086648 0.5542773 0.5716974 0.5869704 0.5940340 0.5959630 #>    [8,] 0.26143033 0.4718084 0.5603310 0.5707832 0.6882329 0.7308097 0.7341715 #>    [9,] 0.24984831 0.5609735 0.8632232 0.9219492 1.0170726 1.0442705 1.0520745 #>   [10,] 0.28986430 0.4537154 0.5204006 0.5421002 0.5423238 0.5463735 0.5587194 #>   [11,] 0.46652531 0.5084248 0.5263341 0.5266163 0.5446352 0.5495054 0.5850168 #>   [12,] 0.37170190 0.4381048 0.5241100 0.5423993 0.5424052 0.5655038 0.6071722 #>   [13,] 0.57222011 0.6124874 0.6357935 0.6396935 0.6462147 0.6708131 0.7391421 #>   [14,] 0.34717912 0.5838188 0.5962627 0.6141551 0.6745910 0.8141714 0.8167852 #>   [15,] 0.58059369 0.6224053 0.6662234 0.6803393 0.7407235 0.8389967 0.8429282 #>   [16,] 0.63314368 0.8630664 0.8939270 1.0213772 1.0458141 1.0663115 1.1116785 #>   [17,] 0.54835213 0.7198504 0.7467861 0.8400073 0.8529885 0.9064278 0.9411035 #>   [18,] 0.66924590 0.6764030 0.8256855 0.8928497 0.9098371 0.9177645 0.9264857 #>   [19,] 0.47391219 0.5187272 0.6039699 0.6313239 0.7718839 0.8130187 0.8617744 #>   [20,] 0.15081454 0.3758961 0.3943047 0.4202105 0.4597621 0.5058134 0.5526436 #>   [21,] 0.26227964 0.3306440 0.4625359 0.4748135 0.5735866 0.5903636 0.6051760 #>   [22,] 0.43233503 0.5294653 0.5807848 0.6182965 0.6219620 0.6649769 0.6820446 #>   [23,] 0.51569242 0.5551573 0.6019943 0.6874485 0.7129012 0.7578704 0.7810091 #>   [24,] 0.26564505 0.8384672 0.9027206 0.9060224 0.9245897 0.9398366 0.9480771 #>   [25,] 0.58665844 0.8659828 0.8981276 0.9708535 1.0050467 1.0329852 1.0364884 #>   [26,] 0.19951012 0.3092625 0.3686001 0.4240887 0.6186630 0.6479357 0.7211515 #>   [27,] 0.36583627 0.4208790 0.4291136 0.5052316 0.5424372 0.6643204 0.6768602 #>   [28,] 0.63749376 0.6643837 0.7336474 0.8632298 0.9630081 1.0143946 1.0585654 #>   [29,] 0.22773632 0.2810413 0.3024392 0.6371490 0.7398366 0.7736565 0.7775577 #>   [30,] 0.41843597 0.4328745 0.4340449 0.5067279 0.5268015 0.5302476 0.5624027 #>   [31,] 0.44109626 0.5183360 0.6860934 0.9339130 0.9629930 1.0579500 1.0943981 #>   [32,] 0.51867312 0.5645729 0.6016788 0.6357531 0.6454604 0.6971910 0.7115832 #>   [33,] 0.47605929 0.5257607 0.5566021 0.5824304 0.6490195 0.7135536 0.7156801 #>   [34,] 0.97263621 1.1064219 1.1444155 1.1538665 1.1596231 1.2692750 1.3001680 #>   [35,] 0.98260936 1.1123529 1.1596231 1.1717316 1.1850187 1.2225809 1.2601779 #>   [36,] 0.49461149 0.5933300 0.6646068 0.6683092 0.8323921 0.8352585 0.8584428 #>   [37,] 0.33752748 0.3668717 0.3733893 0.3738390 0.4858712 0.5329507 0.5359664 #>   [38,] 0.63792553 0.6805158 0.8052105 0.8253294 0.9434459 0.9543999 0.9622925 #>   [39,] 0.79115486 0.9026125 1.0002906 1.0816304 1.1440999 1.2319974 1.2718061 #>   [40,] 0.43594864 0.7188591 0.7189500 0.8269726 1.0044478 1.0197690 1.0395219 #>   [41,] 0.29776484 0.3110705 0.3169707 0.3448560 0.3540405 0.3739873 0.4252863 #>   [42,] 0.56407060 0.8340099 0.9236600 0.9486578 0.9507656 0.9726362 0.9826094 #>   [43,] 0.35070927 0.4212043 0.4399540 0.5016230 0.5245879 0.5408275 0.5485840 #>   [44,] 0.13879613 0.2449583 0.3716588 0.3857744 0.4513943 0.4539900 0.4953717 #>   [45,] 0.27674962 0.3248874 0.3792540 0.4061885 0.4685934 0.5096766 0.5394649 #>   [46,] 0.70931322 0.7762396 0.7874432 0.8142466 0.8157303 0.8707487 0.8863619 #>   [47,] 0.34194145 0.6358041 0.6792359 0.6991985 0.7115954 0.7373865 0.8197065 #>   [48,] 0.54036550 0.6094105 0.6267325 0.6674362 0.7317710 0.7325700 0.7442621 #>   [49,] 0.53167438 0.6307679 0.7248237 0.7447617 0.7648825 0.7757223 0.7758032 #>   [50,] 0.34302240 0.4088468 0.4949305 0.6649502 0.6736528 0.6801958 0.6810368 #>   [51,] 0.44016974 0.5076383 0.5175767 0.7000366 0.7683283 0.7880880 0.8114595 #>   [52,] 0.34683737 0.4084745 0.5982558 0.5990630 0.6392620 0.6435954 0.6734625 #>   [53,] 0.43617718 0.4965451 0.5327786 0.5778905 0.5869704 0.5978329 0.6719906 #>   [54,] 0.30248329 0.3537647 0.3890210 0.5052213 0.5101134 0.5352680 0.5394586 #>   [55,] 0.52308478 0.5402685 0.5593313 0.5874356 0.7559557 0.7821695 0.7822892 #>   [56,] 0.69637689 0.7825293 0.8849706 0.9317456 0.9860083 1.0912192 1.1467084 #>   [57,] 0.16587260 0.2957155 0.3413110 0.4116207 0.4205946 0.5540923 0.6107552 #>   [58,] 0.21674498 0.2655099 0.3790429 0.3932341 0.4436496 0.5844425 0.6218011 #>   [59,] 0.40454188 0.4800348 0.5403655 0.5566021 0.5771780 0.6141551 0.6305519 #>   [60,] 0.75561149 0.7588936 0.7819681 0.7975871 0.8945171 0.9152283 0.9162163 #>   [61,] 0.30100470 0.4964479 0.5864232 0.5975842 0.6878447 0.6894267 0.6965180 #>   [62,] 0.16282452 0.3341115 0.4328745 0.4532430 0.4765493 0.5213406 0.5403077 #>   [63,] 0.27072483 0.3851949 0.4612409 0.5142720 0.5167208 0.5294653 0.6030569 #>   [64,] 0.49644789 0.5186731 0.5261169 0.5533974 0.5655843 0.6290988 0.6358013 #>   [65,] 0.35509133 0.5000259 0.5016800 0.5273160 0.5482631 0.6101186 0.6657547 #>   [66,] 0.51826095 0.5183360 0.6878115 0.9025787 0.9928195 1.0014826 1.0029237 #>   [67,] 0.20842890 0.3411604 0.3568485 0.4068925 0.4214355 0.4377764 0.4642517 #>   [68,] 0.47750098 0.6644961 0.8175037 0.8371260 0.8424111 0.8428174 0.8493960 #>   [69,] 0.45928747 0.4965451 0.5542773 0.5917991 0.6237566 0.6343305 0.6550373 #>   [70,] 1.00949093 1.1650926 1.2078393 1.2169444 1.2341341 1.2526122 1.3587940 #>   [71,] 0.22038706 0.3698291 0.5063805 0.6682706 0.6764030 0.6803568 0.7025122 #>   [72,] 0.41824000 0.4184360 0.4325937 0.4377125 0.4848735 0.5098943 0.5213406 #>   [73,] 0.36595529 0.4150283 0.4230495 0.4715471 0.4820203 0.4893759 0.5093840 #>   [74,] 0.48657110 0.5810022 0.7735514 0.8210664 0.8910608 0.8927631 0.9176643 #>   [75,] 0.40020124 0.4232959 0.4436496 0.4596097 0.5149030 0.5152366 0.5463399 #>   [76,] 0.48817965 0.4927598 0.5107277 0.5623835 0.5859066 0.5935301 0.5946564 #>   [77,] 0.15081454 0.4335340 0.4363955 0.5182849 0.5205824 0.5418517 0.5425802 #>   [78,] 0.30995948 0.3273770 0.4254990 0.4672448 0.5121810 0.5136565 0.5154224 #>   [79,] 0.47970446 0.4947340 0.6647554 0.7263034 0.7535873 0.7609947 0.7625186 #>   [80,] 0.79618626 0.8698408 0.8936291 0.8975484 0.9456737 0.9510369 0.9690743 #>   [81,] 0.47623620 0.4877438 0.4971451 0.5032684 0.5146468 0.5204006 0.5501698 #>   [82,] 0.93583477 1.0071221 1.0885044 1.1050823 1.1755327 1.1912636 1.2374069 #>   [83,] 0.70018889 0.8879985 0.9946745 1.0809744 1.1726914 1.2589149 1.3267449 #>   [84,] 0.85574145 0.9550328 0.9788586 0.9906871 1.0431189 1.0460363 1.0573611 #>   [85,] 0.32254407 0.4354345 0.4755552 0.4913438 0.5488552 0.5558120 0.6032168 #>   [86,] 0.58625836 0.7660761 0.7706474 0.7710468 0.7778610 0.7782860 0.7874432 #>   [87,] 0.39066227 0.4763041 0.5491078 0.6551946 0.6561217 0.6865512 0.7407140 #>   [88,] 0.40030939 0.5722201 0.6381720 0.6390878 0.6411925 0.6611606 0.6664912 #>   [89,] 0.46587098 0.5052316 0.5139742 0.5400055 0.5485160 0.5844425 0.5922445 #>   [90,] 0.19996637 0.2139283 0.3522130 0.3596801 0.5070188 0.5268149 0.5578403 #>   [91,] 0.34578357 0.3713855 0.5607744 0.5739698 0.5832266 0.5948363 0.6034775 #>   [92,] 0.13118949 0.4307515 0.5089294 0.6219634 0.7261603 0.7798434 0.8711605 #>   [93,] 0.15515797 0.2767496 0.3113777 0.3347892 0.4146456 0.4380970 0.4573444 #>   [94,] 0.40949008 0.7662003 0.8612254 0.8767726 0.8964731 1.1548959 1.1752675 #>   [95,] 0.81376542 0.8750154 0.8946274 0.8990536 0.9284389 0.9383646 0.9488876 #>   [96,] 0.36398921 0.7536512 0.7638342 0.8374410 0.8986590 0.9269765 0.9570827 #>   [97,] 0.40763037 0.4564968 0.4906205 0.4921939 0.4925928 0.5062591 0.5259640 #>   [98,] 0.27744439 0.3237234 0.4171864 0.4533024 0.4574603 0.5073590 0.5079862 #>   [99,] 0.44986007 0.5442689 0.6053123 0.6070115 0.6822141 0.6850527 0.8025247 #>  [100,] 0.36217182 0.4002402 0.5479470 0.6148331 0.6682706 0.6987118 0.7176815 #>  [101,] 1.16034211 1.1830457 1.4589260 1.4813706 1.5482614 1.6614958 1.7219734 #>  [102,] 0.20121330 0.2754540 0.3096327 0.3457012 0.3905825 0.3975459 0.4304232 #>  [103,] 1.20255514 1.2330142 1.2589149 1.3426098 1.3481100 1.5117781 1.6069093 #>  [104,] 0.44558674 0.5320156 0.5873528 0.5957944 0.6836550 0.6969275 0.7006954 #>  [105,] 0.28454807 0.4706502 0.4755460 0.5303708 0.5371465 0.5512903 0.5558524 #>  [106,] 0.47750098 0.4851378 0.4973154 0.5868762 0.7283071 0.8416151 0.8593591 #>  [107,] 0.98216529 1.0064208 1.1040333 1.2141759 1.2774960 1.2957623 1.3022217 #>  [108,] 0.47869309 0.8343755 0.9840538 1.0110834 1.0577510 1.0926077 1.1350025 #>  [109,] 0.49710326 0.5006748 0.5058134 0.5114418 0.5418517 0.5850060 0.5912959 #>  [110,] 0.19702653 0.3113777 0.3457012 0.4007505 0.4532430 0.4683849 0.4685934 #>  [111,] 0.36008810 0.4174495 0.4408895 0.4548463 0.4828149 0.5061000 0.5141196 #>  [112,] 0.57458749 0.6909275 0.7177089 0.7218150 0.7744658 0.8237228 0.8288619 #>  [113,] 0.57147892 0.6049098 0.6478061 0.6816491 0.7262376 0.7536512 0.8159034 #>  [114,] 0.53953399 0.6014050 0.6576091 0.6786399 0.6947844 0.7110033 0.7216347 #>  [115,] 0.48599759 0.5154224 0.5558413 0.5789364 0.6354666 0.6547929 0.6603546 #>  [116,] 0.33628768 0.4650064 0.5263157 0.7069239 0.7447617 0.7891283 0.8259153 #>  [117,] 0.69958193 0.9283156 1.0939061 1.1216403 1.1250323 1.1288179 1.1515432 #>  [118,] 0.36398921 0.5714789 0.6894734 0.7014631 0.7260693 0.7619641 0.8240498 #>  [119,] 0.29785763 0.3904106 0.5147426 0.5658674 0.5798745 0.5887206 0.5896853 #>  [120,] 0.35909924 0.4613995 0.4725982 0.5263326 0.5385190 0.5893542 0.6825840 #>  [121,] 0.35748401 0.4455867 0.5154027 0.6343369 0.6851376 0.7147886 0.7230207 #>  [122,] 0.26383426 0.2754540 0.2988481 0.2991627 0.3411604 0.4419143 0.4423288 #>  [123,] 0.62395483 0.6685404 0.7950016 0.8067952 0.8221489 0.8340085 0.8765175 #>  [124,] 0.82937244 0.8707487 0.9551027 1.0103346 1.0519770 1.0832535 1.2253165 #>  [125,] 0.55221468 0.5857830 0.6497453 0.6719993 0.6832759 0.6859977 0.7828531 #>  [126,] 0.45402224 0.6171313 0.6190679 0.7087893 0.7216347 0.7515560 0.7782790 #>  [127,] 0.27028389 0.3572052 0.3993061 0.4557764 0.4626339 0.4726576 0.4993475 #>  [128,] 0.28309416 0.4212043 0.4574603 0.4870235 0.5599778 0.5800733 0.5826591 #>  [129,] 0.25146438 0.4186988 0.5370477 0.5654464 0.5749203 0.6088727 0.6190746 #>  [130,] 0.49033543 0.5993018 0.6014718 0.6776866 0.7389885 0.7588429 0.7662003 #>  [131,] 0.35233048 0.4090712 0.5369264 0.6189582 0.6317574 0.6684878 0.6798811 #>  [132,] 0.48681494 0.5408715 0.6034775 0.6051837 0.6162894 0.6389791 0.6392017 #>  [133,] 0.20289628 0.5917991 0.7040529 0.8219994 0.8745047 0.9693476 0.9888539 #>  [134,] 0.86087471 0.8734834 0.9566091 1.0393017 1.0486299 1.1115831 1.1149204 #>  [135,] 0.27865399 0.2969847 0.3897075 0.4253274 0.4470561 0.4950304 0.5887206 #>  [136,] 0.73790913 0.7727693 0.7880136 0.8494167 0.9279067 1.0006806 1.0803707 #>  [137,] 0.45981635 0.4838382 0.5119779 0.5679398 0.5857583 0.5990630 0.6031911 #>  [138,] 0.30248329 0.3120646 0.3843879 0.3865320 0.4880859 0.4925018 0.5331744 #>  [139,] 0.36139975 0.3821192 0.3884705 0.4467783 0.6854213 0.6990176 0.7259507 #>  [140,] 0.79370421 1.1505867 1.1890757 1.1910424 1.2222432 1.3167299 1.3355435 #>  [141,] 0.19951012 0.2417104 0.2781614 0.4680106 0.6250949 0.6525452 0.6603980 #>  [142,] 0.37893352 0.4015229 0.4064958 0.4696581 0.4792169 0.4909026 0.5502156 #>  [143,] 0.31849457 0.3427354 0.3941537 0.4860365 0.5329507 0.5679398 0.5687805 #>  [144,] 0.36318027 0.4053421 0.4399584 0.4597621 0.5413375 0.5425802 0.5480974 #>  [145,] 0.38772521 0.4192009 0.4871528 0.5026201 0.5073320 0.6164275 0.6390106 #>  [146,] 0.26642362 0.3237234 0.4394007 0.4495239 0.4681588 0.4948503 0.5472648 #>  [147,] 0.61755802 0.6381720 0.6557861 0.7506527 0.7529128 0.7540028 0.7591031 #>  [148,] 0.18634156 0.5009155 0.5485840 0.5599778 0.5931087 0.5965084 0.6349871 #>  [149,] 0.12046345 0.5411184 0.6786399 0.6798061 0.6833299 0.7009866 0.7406080 #>  [150,] 0.17188245 0.3712625 0.3743934 0.3987000 0.4416277 0.5023142 0.5079862 #>  [151,] 0.37547110 0.4474790 0.4828926 0.5041523 0.6416367 0.6856432 0.7161804 #>  [152,] 0.79937319 0.8241613 0.8907011 1.0241436 1.1297508 1.1573210 1.1658958 #>  [153,] 0.19419128 0.2061225 0.3007250 0.4605015 0.5260537 0.5295352 0.5749598 #>  [154,] 0.30085979 0.3841699 0.5687805 0.5778905 0.6377990 0.6564521 0.6819878 #>  [155,] 0.19513800 0.4827132 0.5439209 0.5786936 0.5950256 0.6442066 0.6687645 #>  [156,] 0.46868378 0.5114418 0.5316744 0.5526436 0.5607080 0.6290993 0.6300735 #>  [157,] 0.59045114 0.9869900 1.1535666 1.1582809 1.1780062 1.2135801 1.2585351 #>  [158,] 0.24545491 0.3333003 0.3969425 0.4088468 0.4721369 0.4748135 0.5520819 #>  [159,] 0.28986430 0.3544125 0.3764880 0.3992212 0.5491586 0.5680241 0.5835483 #>  [160,] 0.43780840 0.4498638 0.7033036 0.7877849 0.8172419 0.8357316 0.8577205 #>  [161,] 0.40582631 0.5054017 0.7030924 0.7243780 0.7407140 0.7705307 0.7930608 #>  [162,] 0.35234103 0.4147042 0.4795022 0.4952720 0.4962613 0.4989207 0.5185135 #>  [163,] 0.54300594 0.5583139 0.6795859 0.8095291 0.8206264 0.9728522 1.1327863 #>  [164,] 0.52367020 0.5885379 0.8717503 0.8939719 0.9026125 0.9614319 1.0410679 #>  [165,] 0.96143186 1.0199945 1.0232013 1.0551349 1.0902843 1.1010699 1.1045643 #>  [166,] 0.61571818 0.7040191 0.7058041 0.7656191 0.7734775 0.7824822 0.8215516 #>  [167,] 0.35229033 0.3921811 0.5471192 0.5639015 0.5672174 0.5735262 0.5753703 #>  [168,] 0.96825642 1.0396370 1.1898986 1.2800371 1.2881848 1.3270543 1.3435666 #>  [169,] 0.66673361 0.6783771 0.6894816 0.7395991 0.7798434 0.8020988 0.8409993 #>  [170,] 0.28743920 0.4859976 0.6151464 0.6426209 0.6501716 0.6633979 0.7000754 #>  [171,] 0.31719653 0.4426525 0.4802058 0.5162458 0.5402894 0.5484489 0.5699656 #>  [172,] 0.08045996 0.2277363 0.4479699 0.6083513 0.7456291 0.7558175 0.7626539 #>  [173,] 0.26393459 0.3593245 0.3717283 0.3820295 0.4015229 0.4740713 0.5161408 #>  [174,] 0.30338965 0.3445281 0.3752012 0.3833929 0.4174495 0.4185740 0.5224324 #>  [175,] 0.60837870 0.6760452 0.7997734 0.8205199 0.8496036 0.8767713 0.8946601 #>  [176,] 0.61829653 0.6366517 0.6997558 0.7136063 0.7383797 0.7610103 0.8476542 #>  [177,] 0.29403821 0.3544237 0.5263326 0.5589544 0.6405376 0.6407043 0.6920594 #>  [178,] 0.30753941 0.4389056 0.4819657 0.5267271 0.5626776 0.5839383 0.6590841 #>  [179,] 0.61451410 0.8065479 0.8074916 0.8192607 0.8541983 0.8731405 0.9437775 #>  [180,] 0.26642362 0.3097676 0.3796937 0.3842518 0.5073590 0.5130520 0.5358143 #>  [181,] 0.47013970 0.5230848 0.5470321 0.8496036 0.8674290 0.9467661 0.9817323 #>  [182,] 0.36021158 0.4470561 0.4515219 0.4767623 0.5241343 0.5364844 0.5865542 #>  [183,] 0.53317440 0.6307292 0.6375269 0.6506767 0.6550839 0.6692890 0.6958393 #>  [184,] 0.59828158 0.7636470 0.8197293 0.8356096 0.8501639 0.8775427 0.9832344 #>  [185,] 0.51230390 0.5204844 0.5648963 0.7084205 0.7865361 0.7996885 0.8246749 #>  [186,] 0.38596645 0.4145507 0.5691145 0.5989056 0.6002112 0.6328652 0.6405012 #>  [187,] 0.96030647 1.0761704 1.0808862 1.0870889 1.1122201 1.1279417 1.1959206 #>  [188,] 0.49473402 0.6299515 0.6832576 0.6942725 0.6958393 0.7062105 0.7064561 #>  [189,] 0.35909924 0.4255819 0.5056986 0.5103887 0.6192480 0.7221886 0.7384616 #>  [190,] 0.48660327 0.7114507 0.7246401 0.7313637 0.8284993 1.0153069 1.0305508 #>  [191,] 0.65050082 0.6816491 0.6842797 0.7600037 0.7705307 0.7733659 0.8202470 #>  [192,] 0.81182782 0.8194373 0.8417935 1.1055276 1.1253849 1.1289979 1.1556449 #>  [193,] 0.66753911 0.7257133 0.7266951 0.7743539 0.8705561 0.9086395 0.9237531 #>  [194,] 0.62045966 0.7111853 0.7449372 0.8068628 0.8219124 0.8335637 0.8411046 #>  [195,] 0.32084307 0.3593245 0.3889879 0.4064958 0.4534542 0.5020450 0.5061745 #>  [196,] 0.59162905 0.6261190 0.6519473 0.6742100 0.7273983 0.7396244 0.7504098 #>  [197,] 0.25774459 0.3922203 0.4871528 0.5731440 0.5860091 0.6188489 0.6274038 #>  [198,] 0.55964953 0.6301278 0.7006146 0.7704925 0.8103618 0.8187889 0.8411695 #>  [199,] 0.56526701 0.5919769 0.7933394 0.8006608 0.8031460 0.8174900 0.9500898 #>  [200,] 0.63850522 0.6481022 0.7466410 0.8095291 0.8236840 0.8689609 0.8885308 #>  [201,] 0.27865399 0.2923046 0.5241343 0.5313052 0.5860547 0.5909128 0.5959543 #>  [202,] 0.42631331 0.5904569 0.5998869 0.7362744 0.7605896 0.8071532 0.8210664 #>  [203,] 0.20842890 0.2428933 0.2988481 0.3402142 0.3697308 0.3865320 0.3890210 #>  [204,] 0.47013970 0.5402685 0.6083787 0.7876943 0.8457159 0.8897081 0.8939270 #>  [205,] 0.34090425 0.4108805 0.4379580 0.5384481 0.5431463 0.5516274 0.5550702 #>  [206,] 0.52132482 0.5291135 0.5549221 0.6991985 0.7043297 0.7597526 0.7809424 #>  [207,] 0.21587317 0.5501698 0.5944061 0.6019943 0.6036912 0.6121399 0.6232368 #>  [208,] 0.19508862 0.3493520 0.4058071 0.5062397 0.5209490 0.5405174 0.5476367 #>  [209,] 0.34835901 0.3519596 0.4355776 0.7052760 0.7261054 0.7961863 0.7980408 #>  [210,] 0.15472873 0.2741477 0.3276143 0.3874743 0.4512306 0.4848735 0.5456915 #>  [211,] 0.30083629 0.5030022 0.5802170 0.6049625 0.6124386 0.6855360 0.7587768 #>  [212,] 0.50905999 0.5763424 0.6077715 0.6494028 0.6571812 0.7116446 0.7209059 #>  [213,] 0.31837803 0.3607279 0.5027575 0.5151727 0.5491726 0.5556941 0.6165135 #>  [214,] 0.58913260 0.8071999 0.9856087 0.9869900 1.0638696 1.1631375 1.1634441 #>  [215,] 0.31003120 0.3585382 0.3890705 0.3975790 0.4177120 0.5668593 0.5714364 #>  [216,] 0.40446900 0.4795265 0.5715888 0.5716924 0.6813370 0.7271226 0.7320339 #>  [217,] 0.41890859 0.4878582 0.5088305 0.5258547 0.5416196 0.5602363 0.5909218 #>  [218,] 0.40846562 0.4148849 0.4390372 0.4579331 0.4686838 0.5092006 0.5149004 #>  [219,] 0.31027223 0.3580854 0.4416277 0.4557797 0.4635054 0.4980985 0.5223489 #>  [220,] 0.67821809 0.7269518 0.7884421 0.8981276 0.9696410 1.0095566 1.0242894 #>  [221,] 0.29113310 0.4240887 0.4680106 0.5413932 0.5551246 0.6033871 0.6445696 #>  [222,] 0.31200656 0.3922203 0.5089802 0.6606336 0.6940500 0.7074970 0.7195269 #>  [223,] 0.80654788 0.8376506 0.9906952 1.0447104 1.0594308 1.1200518 1.1231975 #>  [224,] 0.29785763 0.3634108 0.3946379 0.4253274 0.5136025 0.5313052 0.5568903 #>  [225,] 0.51517267 0.6075172 0.6088218 0.6133793 0.6376472 0.6498677 0.6685887 #>  [226,] 0.41347323 0.4914823 0.5701759 0.5940340 0.6190746 0.6238119 0.6348328 #>  [227,] 0.30243922 0.4479699 0.4755517 0.5638175 0.6171614 0.6514300 0.7090876 #>  [228,] 0.90555460 0.9918885 1.1684544 1.1782701 1.2056914 1.2159078 1.2336533 #>  [229,] 0.51230390 0.6631301 0.6653664 0.7335557 0.7518248 0.8405305 0.9252294 #>  [230,] 0.77283362 0.8079880 0.8467161 0.8528566 0.8555573 0.9325761 0.9362719 #>  [231,] 0.59961280 0.6343369 0.7535997 0.7794280 0.8462224 0.8493717 0.8586241 #>  [232,] 0.26393459 0.2679328 0.2736122 0.3208431 0.3571812 0.4792169 0.4811862 #>  [233,] 0.17875079 0.3975790 0.4053346 0.4628703 0.5497720 0.5765510 0.6245413 #>  [234,] 0.67821809 0.6819256 0.6971910 0.7084205 0.7768582 0.8004708 0.8130695 #>  [235,] 0.35229033 0.4113023 0.4561031 0.4946848 0.4971033 0.5271013 0.5398038 #>  [236,] 0.62906531 0.7234641 0.7449372 0.7810325 0.8642700 0.8649101 0.8839147 #>  [237,] 0.20395837 0.3844797 0.4306182 0.5561102 0.5694909 0.5874698 0.5900798 #>  [238,] 0.57458749 0.5959630 0.6238756 0.6348328 0.6590748 0.6690772 0.7566615 #>  [239,] 0.24032959 0.5017250 0.5050407 0.5692543 0.5727376 0.5783608 0.6350611 #>  [240,] 0.41672649 0.4448618 0.4721369 0.5199025 0.5258675 0.5286509 0.5563468 #>  [241,] 0.98405382 1.1375119 1.1976571 1.2046299 1.2651680 1.3673162 1.3923991 #>  [242,] 0.57243631 0.9198506 1.0032346 1.1074054 1.1169257 1.1289227 1.1497500 #>  [243,] 0.55313581 0.6545472 0.7726849 0.8180935 0.8738729 0.8899513 0.9580921 #>  [244,] 0.57634239 0.6158662 0.6329802 0.6512504 0.6656699 0.6795726 0.7843879 #>  [245,] 0.40030939 0.4047201 0.6347717 0.6518593 0.6594240 0.6682516 0.6796197 #>  [246,] 0.20957563 0.5535769 0.5850788 0.5888863 0.5982422 0.6195995 0.6572079 #>  [247,] 0.32538741 0.3764248 0.4068925 0.4827132 0.5377097 0.5388781 0.5564219 #>  [248,] 0.07991648 0.3969090 0.4554043 0.5958814 0.6328125 0.6462949 0.6542727 #>  [249,] 0.40846562 0.5515295 0.6300735 0.6669118 0.6803393 0.7171484 0.7440268 #>  [250,] 0.24531337 0.2920796 0.3045802 0.3529613 0.3733389 0.3739873 0.4389056 #>  [251,] 0.30083629 0.3895963 0.5889364 0.6204556 0.6560988 0.6840995 0.7052760 #>  [252,] 0.35356658 0.4333924 0.4380970 0.4901973 0.5463399 0.5705713 0.5717453 #>  [253,] 0.71555951 0.8531945 0.9589535 1.0147257 1.0754897 1.0893189 1.0893488 #>  [254,] 0.32560846 0.3436373 0.5602555 0.6310238 0.7119669 0.7121295 0.8242852 #>  [255,] 0.19508862 0.3335111 0.3359325 0.4334802 0.4795022 0.5193626 0.5880298 #>  [256,] 0.33217500 0.5334556 0.5916505 0.7259507 0.7293199 0.7529128 0.7547055 #>  [257,] 0.34844429 0.3698551 0.4515219 0.6835393 0.7039375 0.7097591 0.7388971 #>  [258,] 0.48774381 0.5034437 0.6036912 0.6462597 0.6528830 0.6738408 0.7292561 #>  [259,] 0.50387183 0.5885379 0.8716588 0.9163334 0.9436734 0.9756567 0.9843683 #>  [260,] 0.31083119 0.5392876 0.5584831 0.6788038 0.6856432 0.6939049 0.7587768 #>  [261,] 0.50540167 0.6094466 0.6106162 0.7100869 0.7474043 0.7548418 0.7657958 #>  [262,] 0.36072787 0.4829120 0.6355625 0.6428138 0.6685887 0.7080839 0.7910339 #>  [263,] 0.39463790 0.3948480 0.5147426 0.5186912 0.5888827 0.6300291 0.6367832 #>  [264,] 0.39988625 0.4002021 0.4185740 0.4483313 0.4727237 0.4871645 0.4962613 #>  [265,] 0.23993803 0.5224575 0.5456090 0.5960820 0.6028731 0.6078198 0.6157228 #>  [266,] 0.37926665 0.4468730 0.4925928 0.4942371 0.5473633 0.5825448 0.6047881 #>  [267,] 0.46645854 0.5050407 0.6158712 0.7140490 0.7180839 0.7395991 0.7456979 #>  [268,] 0.38487972 0.4326476 0.4426525 0.4727237 0.4775865 0.4810028 0.5031708 #>  [269,] 1.06380439 1.1005776 1.1676122 1.1770550 1.2246484 1.2639915 1.3374345 #>  [270,] 0.35760660 0.5306228 0.6001879 0.6131775 0.6140907 0.6375269 0.6378469 #>  [271,] 0.37007701 0.3978038 0.4291071 0.5187272 0.5306961 0.5880864 0.6199867 #>  [272,] 0.08045996 0.2810413 0.4755517 0.5850168 0.7445571 0.7490401 0.7683102 #>  [273,] 0.48999353 0.5196985 0.5392876 0.6215960 0.6416367 0.6426553 0.6913845 #>  [274,] 0.24010441 0.3874158 0.4525542 0.4539625 0.4949872 0.5261021 0.5265085 #>  [275,] 0.30100470 0.5029816 0.5127194 0.5510996 0.5639015 0.5655843 0.6384658 #>  [276,] 0.54449025 1.0617308 1.1690400 1.2214387 1.2731221 1.2739128 1.4960939 #>  [277,] 0.29910942 0.5714456 0.5963457 0.6705824 0.6787581 0.7043262 0.7580649 #>  [278,] 0.35718116 0.4193687 0.4433985 0.4534542 0.4665253 0.5451624 0.5502156 #>  [279,] 0.41394639 0.6325459 0.6699654 0.7836029 0.7851510 0.8182959 0.8425422 #>  [280,] 0.22475057 0.3396683 0.4055814 0.4175321 0.4377923 0.4471095 0.4585823 #>  [281,] 0.29444451 0.4113023 0.4141784 0.4404892 0.4630233 0.5031708 0.5333971 #>  [282,] 0.31644694 0.5551573 0.5961214 0.6221072 0.6550789 0.7101610 0.7283993 #>  [283,] 0.34578357 0.3468282 0.3687117 0.4835465 0.5648596 0.6162894 0.6381854 #>  [284,] 0.50387183 0.5236702 0.7701056 0.7911549 0.8739263 0.8836861 0.9411378 #>  [285,] 0.41119252 0.5622579 0.6023753 0.6042996 0.6207918 0.6479959 0.6823808 #>  [286,] 0.85567071 1.0204548 1.0805443 1.1364532 1.3088280 1.3428671 1.3523249 #>  [287,] 0.52439153 0.7499065 0.9440280 0.9675250 1.0153069 1.2163210 1.2222432 #>  [288,] 0.54239075 0.6429094 0.8806943 1.3620115 1.4205182 1.4246796 1.4566494 #>  [289,] 0.94204478 0.9724045 0.9750135 1.0133426 1.1141167 1.1172216 1.1293275 #>  [290,] 0.34194145 0.4542825 0.5073444 0.5291135 0.7688035 0.7853064 0.8207269 #>  [291,] 0.26594121 0.4145992 0.5107277 0.5382576 0.5775870 0.6428034 0.6433268 #>  [292,] 0.33966834 0.3705808 0.4968724 0.5614452 0.5912959 0.6030132 0.6323524 #>  [293,] 0.54240523 0.5685634 0.6545472 0.7480650 0.7893958 0.7894660 0.8047075 #>  [294,] 0.26927678 0.4298212 0.4530965 0.4804884 0.5015095 0.5394649 0.5716974 #>  [295,] 0.26343145 0.2979331 0.4463409 0.5502562 0.5519391 0.5640889 0.5888744 #>  [296,] 0.28309416 0.3568485 0.4377125 0.4419143 0.4674355 0.4870335 0.5484208 #>  [297,] 0.23681564 0.3086668 0.4232261 0.4378483 0.4828435 0.5027134 0.5113881 #>  [298,] 0.44123648 0.4935362 0.5216645 0.5916291 0.6151879 0.7155653 0.7452075 #>  [299,] 0.15515797 0.1970265 0.3792540 0.3921772 0.4304232 0.4333924 0.4406006 #>  [300,] 0.35029758 0.3859824 0.6158662 0.6386173 0.6545420 0.6789222 0.6912502 #>  [301,] 0.17672129 0.2920796 0.3487168 0.4119493 0.4148849 0.4666492 0.5515295 #>  [302,] 0.53302955 0.5382576 0.5505231 0.6596260 0.6688616 0.6746336 0.6863087 #>  [303,] 1.26360735 1.2688591 1.4489720 1.5091963 1.5111890 1.6452195 1.7570417 #>  [304,] 0.32254407 0.3594234 0.4605015 0.4645395 0.5425355 0.5434271 0.5556632 #>  [305,] 0.24866835 0.3789335 0.3792134 0.4561757 0.5161408 0.5266475 0.5673960 #>  [306,] 0.26740534 0.3208248 0.4667387 0.4988816 0.5023142 0.5210939 0.5911413 #>  [307,] 0.68948956 0.8591377 0.8632621 0.8758765 0.9509291 0.9731328 1.0001691 #>  [308,] 0.51152798 0.7055470 0.7202057 0.7660243 0.7819818 0.7912739 0.8258615 #>  [309,] 0.50638053 0.5179364 0.5468375 0.6046618 0.6985545 0.7881233 0.8091576 #>  [310,] 0.16587260 0.3356574 0.3871199 0.4471608 0.4613834 0.5982422 0.6546082 #>  [311,] 0.43717069 0.4465631 0.5035108 0.6308780 0.6550789 0.6917758 0.7570848 #>  [312,] 0.35346968 0.4866033 0.4911228 0.9278780 0.9597156 0.9675250 0.9823241 #>  [313,] 0.46884574 0.4715928 0.4735928 0.5765781 0.5976214 0.6209378 0.6795702 #>  [314,] 0.18842874 0.2774444 0.3743934 0.4975694 0.5050988 0.5495635 0.5568096 #>  [315,] 0.48747026 0.5115595 0.5776815 0.5810022 0.5833092 0.5961116 0.6199867 #>  [316,] 0.71882339 0.7298102 0.7980408 0.8027938 0.8137303 0.8317879 0.8445150 #>  [317,] 0.42087897 0.4312480 0.5634303 0.6422605 0.6566718 0.7048257 0.7623149 #>  [318,] 0.34683737 0.4090368 0.4860365 0.5359664 0.5383853 0.6108532 0.6336967 #>  [319,] 0.37138546 0.4117716 0.4785496 0.4868149 0.5997890 0.6381854 0.6638874 #>  [320,] 0.46517599 0.5368974 0.6422321 0.6776026 0.6805158 0.7277149 0.7588429 #>  [321,] 0.09697109 0.3934919 0.3992212 0.4013733 0.4841724 0.5219711 0.6044576 #>  [322,] 0.61354902 0.7331312 0.8358797 0.8843709 0.9381280 0.9839040 0.9903867 #>  [323,] 0.37300207 0.3944722 0.4408895 0.5156462 0.6216648 0.6234677 0.6260663 #>  [324,] 0.30975111 0.5447037 0.5730397 0.5768426 0.6028126 0.6794550 0.6901274 #>  [325,] 0.49046188 0.5118977 0.5345808 0.5487884 0.6182018 0.6263767 0.6269757 #>  [326,] 0.48914700 0.5917555 0.6135490 0.8236793 0.8388834 0.8661062 0.8718881 #>  [327,] 0.47466248 0.6094466 0.6433676 0.6557585 0.6625708 0.6628817 0.6690772 #>  [328,] 0.73136370 0.8106643 0.8197065 0.9443775 1.0060133 1.0388432 1.0488026 #>  [329,] 0.56057729 0.5963301 0.6683562 0.6795859 0.7329504 0.8120086 0.8243287 #>  [330,] 0.27949333 0.4054250 0.4598163 0.4782392 0.5327786 0.6019534 0.6318225 #>  [331,] 0.33351112 0.3356392 0.3441288 0.4058071 0.4617185 0.4678582 0.5969929 #>  [332,] 0.50641307 0.5115280 0.5247714 0.5806314 0.6723671 0.7161356 0.7278448 #>  [333,] 0.52374859 0.5609209 0.5919769 0.7004560 0.7470308 0.7624804 0.7892986 #>  [334,] 0.42795110 0.4530965 0.4612184 0.4931298 0.5000259 0.5240484 0.5290541 #>  [335,] 0.32761430 0.3475464 0.3843879 0.3949626 0.4205965 0.4415721 0.4535849 #>  [336,] 0.50451422 0.8163552 1.0484713 1.0540369 1.1106780 1.1204779 1.1334821 #>  [337,] 0.56262031 0.7564921 0.8078945 0.8326922 0.8352566 0.8653057 0.8771891 #>  [338,] 0.35029758 0.6987542 0.7735514 0.8113368 0.8188095 0.8228033 0.8238807 #>  [339,] 0.49353624 0.6602226 0.7272707 0.7396244 0.7642973 0.8857255 0.9054262 #>  [340,] 0.26385543 0.4138580 0.4591137 0.4841722 0.4971807 0.5357776 0.5859066 #>  [341,] 0.25334228 0.4108805 0.4143892 0.4465461 0.5185135 0.5862135 0.6011670 #>  [342,] 0.23535424 0.3844714 0.3873494 0.4871865 0.5377632 0.5901825 0.6002112 #>  [343,] 0.49333622 0.5099957 0.5933300 0.6932422 0.7805514 0.7853750 0.9455148 #>  [344,] 0.42777114 0.4942371 0.4996934 0.5374261 0.5378361 0.5491287 0.5572177 #>  [345,] 0.43543452 0.4731234 0.5097656 0.5154537 0.5501798 0.5601731 0.5648554 #>  [346,] 0.27816143 0.2911331 0.3092625 0.4558091 0.6182421 0.6550839 0.6832576 #>  [347,] 0.31133296 0.5416196 0.5924440 0.5951297 0.6042996 0.6043597 0.6051760 #>  [348,] 0.32560846 0.4348900 0.5081217 0.5956861 0.7277149 0.8389705 0.8713819 #>  [349,] 0.27110632 0.2736122 0.3717283 0.4193687 0.4696581 0.5124989 0.5188817 #>  [350,] 0.46804512 0.5862584 0.6132736 0.6300291 0.6931258 0.7347957 0.8070378 #>  [351,] 0.59930178 0.6040936 0.6243774 0.7537008 0.8512212 0.8618755 0.8767726 #>  [352,] 0.72695182 0.8925216 1.0102435 1.0211662 1.0279754 1.0329852 1.2980993 #>  [353,] 0.31170307 0.6374938 0.7231658 0.8318084 0.9315260 0.9454788 1.0235594 #>  [354,] 0.47014037 0.5311183 0.5807093 0.5893542 0.6192480 0.6478061 0.6894734 #>  [355,] 0.31605501 0.5687865 0.6450369 0.6562205 0.6602688 0.6698618 0.6733962 #>  [356,] 0.21566331 0.3844714 0.4404892 0.4961319 0.5078930 0.5369264 0.5770353 #>  [357,] 0.44777486 0.5099957 0.5576428 0.6046208 0.6613447 0.6683092 0.6720861 #>  [358,] 0.44599817 0.5609735 0.7096210 0.8861194 0.8862931 0.8908547 0.9431895 #>  [359,] 0.59854713 0.7551560 0.7975922 0.8340979 0.9488876 0.9678762 1.0104143 #>  [360,] 0.69343238 0.8115715 0.8518886 0.8595648 0.8660315 0.9372885 1.0002448 #>  [361,] 0.18945147 0.3203283 0.3361130 0.3448560 0.3493174 0.3777877 0.4662042 #>  [362,] 0.48657110 0.6705820 0.7001198 0.7362744 0.8745113 0.9834923 0.9946699 #>  [363,] 0.31644694 0.5156924 0.6910260 0.7869916 0.8203473 0.8254108 0.8631331 #>  [364,] 0.57077554 0.6313865 0.6719993 0.6959316 0.7819634 0.8589755 0.8680502 #>  [365,] 0.58735280 0.5874356 0.6407729 0.6911030 0.7000366 0.7373071 0.7389704 #>  [366,] 0.28454807 0.3498404 0.3726540 0.3987329 0.4167784 0.4767417 0.4883674 #>  [367,] 0.24909537 0.6217602 0.8683734 0.9142125 0.9621563 0.9622823 0.9941056 #>  [368,] 0.20121330 0.2632861 0.2991627 0.3697308 0.4134017 0.4259888 0.5201796 #>  [369,] 0.24136134 0.6594240 0.6920199 0.7117756 0.7880136 0.8037376 0.8159284 #>  [370,] 0.49568273 0.6052306 0.6221072 0.6234920 0.6700591 0.7000754 0.7869916 #>  [371,] 0.47399983 0.6625547 0.7281672 0.7694525 0.7743539 0.8051282 0.8220837 #>  [372,] 0.36567019 0.4189086 0.5234874 0.5771078 0.5944776 0.5951297 0.7530624 #>  [373,] 0.18460255 0.2060190 0.3782162 0.3791834 0.4426923 0.4612184 0.4794289 #>  [374,] 0.46500636 0.5511406 0.5911722 0.5958814 0.6242367 0.6417307 0.6562524 #>  [375,] 0.30753941 0.5299665 0.5805937 0.5926426 0.6214401 0.6687676 0.7171484 #>  [376,] 0.58633486 0.6239548 0.6599681 0.6648714 0.6745910 0.7043262 0.7398995 #>  [377,] 0.50763829 0.5663951 0.6228037 0.7147886 0.7307823 0.7430718 0.7822892 #>  [378,] 0.30361897 0.3430907 0.5306958 0.5863829 0.6143961 0.6843397 0.7215748 #>  [379,] 0.62529285 0.9373032 0.9589361 0.9839291 1.0569027 1.1136162 1.1334750 #>  [380,] 0.31004980 0.6990266 0.9175304 1.0122607 1.1262807 1.2133086 1.2242808 #>  [381,] 0.49568273 0.5961214 0.6232368 0.6734077 0.8202901 0.8360364 0.8509438 #>  [382,] 0.31083119 0.4828926 0.4899935 0.5448074 0.5461205 0.5871392 0.7828199 #>  [383,] 0.33628768 0.5511406 0.5918048 0.6436058 0.6527433 0.6718151 0.7163910 #>  [384,] 0.44077776 0.5411184 0.6801610 0.7706525 0.7962910 0.8294079 0.8335637 #>  [385,] 0.15604009 0.4762362 0.5680078 0.5814557 0.6462597 0.6486402 0.6494302 #>  [386,] 0.38532828 0.4359686 0.5209098 0.5689635 0.5757741 0.5904509 0.5991853 #>  [387,] 0.33470661 0.3647560 0.5047202 0.5630189 0.5689635 0.5829721 0.5891104 #>  [388,] 0.65667184 0.6750756 0.6775991 0.7616078 0.7726849 0.9088996 0.9411035 #>  [389,] 0.31575585 0.5786936 0.6070519 0.6149352 0.7121295 0.7450731 0.7560740 #>  [390,] 0.40636897 0.4379580 0.4465461 0.5390755 0.5909128 0.5998869 0.6395035 #>  [391,] 0.71637391 0.9092624 0.9917192 1.0071221 1.0974428 1.1297508 1.1602162 #>  [392,] 0.51834711 0.5505231 0.5846558 0.5926610 0.7513978 0.7774382 0.7794280 #>  [393,] 0.14605421 0.6075121 0.6775991 0.7048257 0.7444487 0.7576389 0.8104532 #>  [394,] 0.46638959 0.5294214 0.5480739 0.6234146 0.6267325 0.6959634 0.7060311 #>  [395,] 1.04920444 1.1822441 1.2197848 1.3257101 1.3857820 1.3957540 1.3989331 #>  [396,] 0.50074816 0.9368811 1.0471965 1.0540369 1.0659909 1.0825885 1.0936585 #>  [397,] 0.35233048 0.3636660 0.4969829 0.5377632 0.5908810 0.6138392 0.7085501 #>  [398,] 0.33018724 0.5976214 0.6068353 0.6865432 0.7154680 0.7209059 0.7564411 #>  [399,] 0.32685154 0.3821192 0.5760403 0.6261190 0.6692866 0.7112562 0.7409202 #>  [400,] 0.99219177 1.0147922 1.1050029 1.1439902 1.2163210 1.2301288 1.2718061 #>  [401,] 0.50067478 0.5271013 0.5735262 0.6820610 0.6876870 0.7728214 0.7903175 #>  [402,] 0.61061623 0.6870153 0.7093132 0.7347957 0.8417935 0.9099727 0.9207612 #>  [403,] 0.13118949 0.5519855 0.5731555 0.6801153 0.8020988 0.8270089 0.9160206 #>  [404,] 0.35945348 0.3929751 0.4128428 0.4949872 0.5282306 0.6033871 0.6078198 #>  [405,] 0.47216259 0.6429094 0.8313961 0.9559077 1.1019036 1.1677363 1.2491498 #>  [406,] 0.52840771 0.5306958 0.5440199 0.5557236 0.5803419 0.5863349 0.5922188 #>  [407,] 0.18051066 0.4002402 0.5468375 0.5576100 0.5873958 0.6803568 0.7861184 #>  [408,] 0.42982120 0.4931298 0.5219711 0.5226653 0.5355817 0.5618288 0.6011145 #>  [409,] 0.23307038 0.5096766 0.5400055 0.5411882 0.5479479 0.5729807 0.5868046 #>  [410,] 0.22690537 0.3102786 0.4061678 0.4906205 0.5086148 0.5583424 0.6063374 #>  [411,] 0.59354400 0.6070115 0.6145340 0.6739434 0.6935096 0.6939493 0.7555520 #>  [412,] 0.45311652 0.4835465 0.6051837 0.6545420 0.6795726 0.6883190 0.7681392 #>  [413,] 0.52874860 0.5485678 0.5557123 0.5716924 0.6452023 0.7073426 0.7129012 #>  [414,] 0.59854713 0.7433678 0.7931495 1.1149152 1.1309300 1.2472189 1.2511145 #>  [415,] 1.00915273 1.0397144 1.0531656 1.0897849 1.1299244 1.2105582 1.2705682 #>  [416,] 0.44685385 0.4802813 0.4841724 0.5951493 0.6011145 0.6486402 0.6837553 #>  [417,] 0.39066227 0.4058263 0.5686761 0.5893919 0.7694337 0.7836191 0.8194804 #>  [418,] 0.30577483 0.4465631 0.5118977 0.5633698 0.5763036 0.6474377 0.6518129 #>  [419,] 0.33565738 0.3413110 0.3634738 0.3796179 0.3857744 0.4868420 0.5030333 #>  [420,] 0.26385543 0.3050787 0.3099595 0.4493096 0.5142780 0.5426927 0.5432273 #>  [421,] 0.72981016 0.8191095 1.0391618 1.0635243 1.1439234 1.1497564 1.1579309 #>  [422,] 0.77901084 0.8141714 0.8880066 0.9686581 0.9776988 0.9981969 1.0372120 #>  [423,] 0.17188245 0.3102722 0.4068494 0.4948228 0.5050988 0.5092787 0.5166929 #>  [424,] 0.58021695 0.6560988 0.8278941 0.8310321 0.8902744 0.9046550 0.9497534 #>  [425,] 0.50074816 0.7472879 0.7886271 0.8055432 0.8072300 0.8322109 0.8544600 #>  [426,] 0.65841128 0.7551560 0.8793542 0.8990536 0.9343049 0.9647801 1.0091527 #>  [427,] 0.40360403 0.4477749 0.4521097 0.5402954 0.5465505 0.6198224 0.6646068 #>  [428,] 0.47869309 0.9571049 1.1259877 1.1363119 1.2431542 1.2535680 1.2883587 #>  [429,] 0.34027172 0.3519596 0.3895963 0.5030022 0.5741917 0.5803987 0.7337276 #>  [430,] 0.21863794 0.5792501 0.5799310 0.6055756 0.6098908 0.6619151 0.7052326 #>  [431,] 0.42262902 0.5161931 0.5211340 0.5809020 0.6295294 0.6742100 0.7002335 #>  [432,] 0.57267127 0.5730397 0.6557861 0.6854213 0.6911311 0.6957793 0.7067249 #>  [433,] 0.24866835 0.2996319 0.4200978 0.4258462 0.4310830 0.5603310 0.5667096 #>  [434,] 0.39780376 0.4386172 0.4797447 0.4874703 0.4933392 0.5682878 0.6303169 #>  [435,] 0.49112284 0.6390106 0.6759421 0.7114507 0.7823791 0.7902742 0.7998991 #>  [436,] 0.36738405 0.4135458 0.5167208 0.5334669 0.5473633 0.5482934 0.5957012 #>  [437,] 0.29571554 0.3634738 0.3637507 0.3814911 0.3871199 0.3876728 0.4539900 #>  [438,] 0.49119061 0.7828531 0.8027938 0.8172419 0.9485036 1.0184482 1.0185377 #>  [439,] 0.83437551 0.9571049 1.0803707 1.1735669 1.1976571 1.2111689 1.3843671 #>  [440,] 0.24289334 0.3120646 0.3537647 0.3949626 0.4134017 0.4214355 0.4319502 #>  [441,] 0.20289628 0.6237566 0.6844604 0.7369896 0.8385844 0.8803578 0.8962578 #>  [442,] 0.75123324 0.9219082 1.0496610 1.1107187 1.1215952 1.1425865 1.1637278 #>  [443,] 0.24545491 0.4625359 0.4660731 0.4949305 0.5009155 0.5330862 0.5507820 #>  [444,] 0.67768660 0.7038044 0.7892187 0.8172974 0.8343469 0.8612254 0.8907011 #>  [445,] 1.22623347 1.2420842 1.3854303 1.3953893 1.4621698 1.5357017 1.5569942 #>  [446,] 0.47289305 0.6145340 0.6684878 0.6760726 0.6819878 0.6879263 0.6969249 #>  [447,] 1.45228667 1.6043613 1.6490182 1.8686264 1.8838568 1.8952957 1.9006795 #>  [448,] 0.57243631 0.7067615 0.8611921 1.0199524 1.0782641 1.1621953 1.1898859 #>  [449,] 0.24863800 0.3598209 0.3796937 0.4948503 0.5142888 0.5173598 0.5306004 #>  [450,] 0.44366791 0.7192560 1.2657779 1.2739660 1.3403521 1.3811454 1.5902023 #>  [451,] 0.50167997 0.5237082 0.5300692 0.5317664 0.5451624 0.5490896 0.5717995 #>  [452,] 0.64144872 0.8653057 1.1236420 1.2908359 1.3073813 1.3171347 1.3352933 #>  [453,] 0.40963634 0.4797447 0.5306961 0.6045138 0.6223325 0.6235444 0.6778300 #>  [454,] 0.57965193 0.7163739 0.7299407 0.7894505 0.9358348 1.0104482 1.0190099 #>  [455,] 0.33731955 0.3678879 0.3792666 0.4171944 0.5020450 0.5062591 0.5226281 #>  [456,] 0.09697109 0.3223750 0.3544125 0.4270109 0.4468538 0.5355817 0.5816812 #>  [457,] 0.26564505 0.7653629 0.8236488 0.9174340 0.9267543 0.9272176 0.9374222 #>  [458,] 0.48470066 0.5052092 0.5596495 0.6027456 0.6594966 0.6607136 0.6997558 #>  [459,] 0.16282452 0.2891480 0.4182400 0.4340449 0.4996934 0.5051723 0.5113368 #>  [460,] 0.44060061 0.4449831 0.4557764 0.4573444 0.4681588 0.5077163 0.5246272 #>  [461,] 0.27996485 0.5602452 0.6143961 0.6219634 0.6801153 0.7140490 0.7973198 #>  [462,] 0.70380443 0.8241613 1.1755510 1.1950636 1.2795708 1.3081447 1.3256072 #>  [463,] 0.26740534 0.3117459 0.4585147 0.4678582 0.5209490 0.5859090 0.5880765 #>  [464,] 0.52166448 0.5273160 0.6314860 0.6347717 0.6591848 0.6602226 0.6829279 #>  [465,] 0.46804512 0.6870153 0.7545626 0.7706474 0.7762396 0.8118278 0.9270370 #>  [466,] 0.31004980 0.7137102 0.8195100 0.8730117 0.9593647 1.0354425 1.1030984 #>  [467,] 0.29292073 0.3314803 0.4310830 0.4425622 0.4561757 0.5497865 0.5655038 #>  [468,] 0.27981317 0.3631803 0.3758961 0.4363955 0.4510979 0.4921939 0.5126823 #>  [469,] 0.34390429 0.3668414 0.4200978 0.5247714 0.5707832 0.5720249 0.6123558 #>  [470,] 0.21164504 0.2930111 0.3169707 0.3361130 0.3613120 0.3687756 0.3733389 #>  [471,] 0.20417561 0.4786287 0.5084755 0.5140385 0.5410413 0.5428946 0.6918404 #>  [472,] 0.83587974 0.8890259 0.9255049 0.9664203 1.0821634 1.0852990 1.1843941 #>  [473,] 0.76058958 0.9090353 0.9256838 0.9697771 1.0202062 1.0394324 1.0615033 #>  [474,] 0.40542497 0.4449027 0.4514099 0.5119779 0.5300852 0.5545604 0.5947904 #>  [475,] 0.87266945 1.0586150 1.0839485 1.0860132 1.1040333 1.1843674 1.3202047 #>  [476,] 0.39915058 0.4044690 0.4656943 0.5084248 0.5287486 0.5500657 0.6266317 #>  [477,] 0.51479463 0.5694424 0.6092113 0.6469373 0.6859729 0.6948786 0.6948917 #>  [478,] 0.33332358 0.4540222 0.6165999 0.6311446 0.6354071 0.6525144 0.6576091 #>  [479,] 0.32348784 0.4167936 0.4622053 0.4756200 0.4828435 0.4856521 0.5458660 #>  [480,] 0.20774666 0.2368156 0.3148796 0.3318808 0.4167936 0.5171208 0.5223489 #>  [481,] 0.64265530 0.6615948 0.6939049 0.7691026 0.7837144 0.8313751 0.8374920 #>  [482,] 0.31191358 0.5115595 0.5186912 0.5568903 0.5658674 0.5805367 0.6526331 #>  [483,] 0.36871174 0.4752569 0.4946232 0.5832266 0.6778089 0.6828681 0.7059491 #>  [484,] 0.61434841 0.6643837 0.7710334 0.8202840 0.8318084 1.0382065 1.1255773 #>  [485,] 0.32282065 0.4160175 0.4522604 0.4870973 0.5622388 0.5837745 0.6021089 #>  [486,] 0.69902660 0.9255049 0.9593647 0.9603065 1.0848989 1.1964572 1.2806124 #>  [487,] 0.36583627 0.4312480 0.5921655 0.6179367 0.6290988 0.6688491 0.6798061 #>  [488,] 0.48914700 0.5809788 0.5860091 0.6228037 0.6670446 0.7151664 0.7331312 #>  [489,] 0.54426886 0.5818935 0.6092135 0.6802616 0.7296064 0.7703605 0.7863003 #>  [490,] 0.64144872 1.1515432 1.2574863 1.3068810 1.3621837 1.4400532 1.5037535 #>  [491,] 0.68609343 0.6878115 1.0190392 1.1752675 1.2500793 1.4017630 1.4175909 #>  [492,] 0.19996637 0.2641698 0.4474902 0.4658086 0.5312450 0.5522147 0.5635916 #>  [493,] 0.55034352 0.6327033 0.7231658 0.9630081 1.1152965 1.1166193 1.2305216 #>  [494,] 0.44016974 0.7307823 0.8092806 0.8182231 0.8593062 0.8993036 0.9097510 #>  [495,] 0.27017635 0.3699957 0.4096830 0.4512306 0.4612165 0.4628703 0.4941352 #>  [496,] 0.73232324 0.7710468 0.8167852 0.8925772 0.9230566 0.9272176 0.9380741 #>  [497,] 0.35942336 0.4049898 0.4334802 0.4913438 0.5031696 0.5197681 0.5405174 #>  [498,] 1.03943243 1.0721897 1.0905577 1.1089035 1.1314227 1.1912541 1.2253874 #>  [499,] 0.27072483 0.3865848 0.4292685 0.5141644 0.5370477 0.5482934 0.5624287 #>  [500,] 0.37642480 0.3978315 0.3998387 0.5439209 0.5668593 0.6262270 0.6268746 #>  [501,] 0.47216259 0.5423907 0.7833552 0.9727131 1.1413017 1.1811073 1.2372009 #>  [502,] 0.34754640 0.3576066 0.3862040 0.3874743 0.4431694 0.4952917 0.5221971 #>  [503,] 1.25593536 1.3176629 1.3585019 1.3851334 1.3869811 1.4232511 1.4684821 #>  [504,] 0.41890633 0.4389962 0.4798121 0.6254812 0.6718151 0.6731796 0.7411969 #>  [505,] 0.78545275 0.8847553 1.0815974 1.1519782 1.3383411 1.4112341 1.5026801 #>  [506,] 0.37644458 0.5334556 0.5487723 0.7187771 0.7560823 0.7745370 0.9103913 #>  [507,] 0.70927902 0.7398905 0.8395667 0.8904261 0.8994460 0.9188252 0.9655937 #>  [508,] 0.51459128 0.6009983 0.6357531 0.6474427 0.6819256 0.7059153 0.7111395 #>  [509,] 0.43697204 0.4958141 0.5626203 0.5694424 0.5959871 0.6326815 0.7707595 #>  [510,] 0.40476741 0.5652670 0.5761168 0.6490482 0.6917122 0.7084974 0.7534034 #>  [511,] 0.82162781 0.9675018 0.9981969 1.0832153 1.2422757 1.2847455 1.2862323 #>  [512,] 0.30085979 0.4361772 0.5251689 0.5338096 0.5823034 0.6650514 0.7381164 #>  [513,] 0.29301114 0.3731118 0.4421991 0.4486907 0.4543662 0.4699835 0.4710620 #>  [514,] 0.29292073 0.4098502 0.4798583 0.5378361 0.5423993 0.5514421 0.5667096 #>  [515,] 0.26793281 0.2711063 0.3820295 0.3889879 0.4171944 0.4261615 0.4433985 #>  [516,] 0.27028389 0.3415438 0.3734846 0.3840070 0.4426923 0.4609179 0.4715471 #>  [517,] 0.30866684 0.3234878 0.3318808 0.4254990 0.4446930 0.4488586 0.4648980 #>  [518,] 0.07991648 0.4038128 0.4762512 0.5911722 0.6350611 0.6912811 0.6981930 #>  [519,] 0.37025403 0.3944722 0.4546167 0.5061000 0.5270976 0.5509830 0.5810267 #>  [520,] 0.27981317 0.4053421 0.4202105 0.4315446 0.5017654 0.5127194 0.5205824 #>  [521,] 0.34512046 0.4042546 0.4521097 0.5453375 0.5888239 0.6046208 0.6074047 #>  [522,] 0.13879613 0.3419732 0.3665608 0.4178758 0.4448724 0.4893759 0.5030333 #>  [523,] 0.54363676 0.5771780 0.5962627 0.7278883 0.8893138 0.9051578 0.9270370 #>  [524,] 0.33184739 0.3507093 0.3598209 0.5017654 0.5346923 0.5475948 0.5485160 #>  [525,] 0.26143033 0.3439043 0.3928074 0.4258462 0.5064131 0.5837491 0.7095298 #>  [526,] 0.28883648 0.4871865 0.5237486 0.5480739 0.6635628 0.6831837 0.6882478 #>  [527,] 0.77901084 1.1327007 1.2185269 1.2789434 1.2862323 1.3177358 1.4660522 #>  [528,] 0.38801771 0.3950953 0.4755505 0.5452861 0.5768426 0.6079400 0.6224556 #>  [529,] 0.27912903 0.3436373 0.4348900 0.6630490 0.6776026 0.7560740 0.8175933 #>  [530,] 0.45669225 0.5905829 0.6098908 0.8362491 0.8714916 0.8802147 0.9061382 #>  [531,] 0.36687170 0.4117716 0.4755552 0.5197681 0.5227071 0.5425355 0.5607744 #>  [532,] 0.33962879 0.3890705 0.4053346 0.5261169 0.6142398 0.6576187 0.6897535 #>  [533,] 0.73738653 0.8103618 0.8189857 0.8284993 0.8510004 0.8795685 0.8951109 #>  [534,] 0.17875079 0.3396288 0.3585382 0.5533974 0.5907733 0.6179367 0.6273748 #>  [535,] 0.32500550 0.3266515 0.3547841 0.3792344 0.4175321 0.4422283 0.4517481 #>  [536,] 0.33064403 0.3969425 0.5079901 0.5199025 0.5263975 0.5330862 0.5579990 #>  [537,] 0.86476367 0.9477399 0.9832344 1.0586136 1.2534981 1.3615438 1.3869811 #>  [538,] 1.51838574 1.6109467 1.7708302 1.8085940 1.9709012 1.9897454 2.1130770 #>  [539,] 0.31191358 0.4145507 0.4342199 0.5136025 0.5556632 0.5776815 0.5888827 #>  [540,] 0.48520405 0.6145141 0.9431510 0.9827255 1.0118221 1.0709103 1.1359482 #>  [541,] 0.40472014 0.4864877 0.6390878 0.6591848 0.7155856 0.7660701 0.7727693 #>  [542,] 0.76364702 0.7853750 0.8647637 1.0036165 1.0303411 1.0931007 1.0985984 #>  [543,] 0.58070930 0.6279492 0.6657246 0.6752513 0.6872129 0.7148179 0.7352546 #>  [544,] 0.61975077 0.9142557 0.9437180 1.0027772 1.0378565 1.1022966 1.2146529 #>  [545,] 0.60396993 0.8556707 0.8925672 0.9236600 0.9622823 0.9663578 0.9743262 #>  [546,] 0.12046345 0.4407778 0.6910868 0.7058085 0.7183874 0.7288252 0.7548969 #>  [547,] 1.17888285 1.2565012 1.3092816 1.3485371 1.3592511 1.3868103 1.3965006 #>  [548,] 0.55249129 0.5894451 0.6794550 0.6825160 0.7403855 0.7499781 0.7685453 #>  [549,] 0.40476741 0.5235680 0.5698808 0.6055756 0.6478767 0.7933394 0.8048888 #>  [550,] 0.59574307 0.6550834 0.7081091 0.8176899 0.8303848 0.8308750 0.8356224 #>  [551,] 0.36883720 0.3790429 0.4196418 0.4813874 0.6354071 0.7087893 0.7210488 #>  [552,] 0.22690537 0.3318503 0.3474324 0.3919076 0.5672823 0.5812286 0.5816418 #>  [553,] 0.25774459 0.3120066 0.5073320 0.6759421 0.6994948 0.7042752 0.7059491 #>  [554,] 0.48465152 0.5241100 0.5428946 0.5505425 0.5685634 0.5802675 0.6282014 #>  [555,] 0.28688126 0.3224021 0.4224186 0.4696288 0.4751730 0.4799773 0.4841708 #>  [556,] 0.42682207 0.4577456 0.5079901 0.5520819 0.6207918 0.6501106 0.6740800 #>  [557,] 0.51817417 0.5442637 0.5868762 0.6314365 0.6477322 0.6781473 0.6986159 #>  [558,] 0.19513800 0.3253874 0.3978315 0.5390598 0.5714364 0.5780151 0.6273748 #>  [559,] 0.60147181 0.6422321 0.6654582 0.7315526 0.7750984 0.8343469 0.8389705 #>  [560,] 0.58039868 0.6049625 0.6840995 0.7140941 0.7261054 0.7437403 0.7692705 #>  [561,] 0.56407060 0.5846558 0.8028055 0.8462224 0.8719151 0.8746693 0.8830011 #>  [562,] 0.34273538 0.3841699 0.4105118 0.4383739 0.4858712 0.5065422 0.5251689 #>  [563,] 0.44366791 0.7238057 1.1969462 1.3358588 1.3543267 1.3886413 1.5250261 #>  [564,] 0.63184141 0.7544464 0.7638342 0.8534673 0.9591824 0.9823241 0.9860083 #>  [565,] 0.53892468 0.6336688 0.8073962 0.8078945 0.9509165 0.9673514 1.0400164 #>  [566,] 1.40517342 1.4799383 1.5337433 1.6619145 1.6645287 1.6742392 1.6770461 #>  [567,] 0.40425462 0.5054819 0.5465505 0.6699691 0.6847809 0.7834679 0.7970432 #>  [568,] 0.29230462 0.2969847 0.3602116 0.3634108 0.3904106 0.5878294 0.6034387 #>  [569,] 0.41354584 0.4359867 0.4786287 0.5156658 0.5329834 0.5480443 0.5491726 #>  [570,] 0.40415075 0.6027456 0.6301278 0.6499022 0.6650514 0.7953267 0.8599447 #>  [571,] 1.01472574 1.1123529 1.1923692 1.3073333 1.3876238 1.5133920 1.5342320 #>  [572,] 1.41605561 1.5498688 1.7465202 1.7507080 1.8019820 1.8112516 1.8627146 #>  [573,] 0.59337182 0.6013404 0.6559592 0.6794917 0.7073037 0.7472879 0.7559327 #>  [574,] 0.20601898 0.2138112 0.2836252 0.3734846 0.3993061 0.4641697 0.5026104 #>  [575,] 0.56988075 0.5799310 0.6264804 0.6338821 0.7155595 0.7585791 0.8802147 #>  [576,] 0.24010441 0.3451244 0.3776825 0.4448724 0.5067279 0.5093840 0.5153017 #>  [577,] 0.44522840 0.4637061 0.5803419 0.6279280 0.7888915 0.8112898 0.8401171 #>  [578,] 0.46177516 0.5032684 0.5560926 0.6384115 0.6558610 0.6738408 0.6795696 #>  [579,] 0.25183425 0.4369720 0.4405283 0.4724317 0.6092113 0.6395914 0.6836550 #>  [580,] 0.55034352 0.8932676 0.9048609 0.9122109 0.9204655 1.0020373 1.0966724 #>  [581,] 0.27957885 0.4029978 0.5986835 0.6859729 0.7006915 0.8743741 0.9495803 #>  [582,] 0.46009541 0.5295352 0.5377479 0.5922188 0.5985136 0.6594093 0.6648714 #>  [583,] 0.16973124 0.3884705 0.4261615 0.4953801 0.5302664 0.6032451 0.6088218 #>  [584,] 0.36096082 0.4292685 0.4315726 0.5161931 0.5861869 0.6151879 0.6519473 #>  [585,] 0.62240532 0.8313961 0.8539695 1.0598134 1.0899057 1.1185382 1.1891441 #>  [586,] 0.53355768 0.6586069 0.7373932 0.8106935 0.8137303 0.8560083 0.8586241 #>  [587,] 0.61434841 0.6742504 0.7758032 0.8632298 0.9866009 0.9946745 1.0171249 #>  [588,] 0.50994700 0.7137102 0.7281672 0.8292282 0.8709165 0.9152130 0.9175304 #>  [589,] 0.35442371 0.4167385 0.4613995 0.4975055 0.5103887 0.7466410 0.7591619 #>  [590,] 0.54835213 0.7573177 0.7731458 0.7745561 0.7955375 0.8407062 0.8494256 #>  [591,] 0.48960202 0.5124989 0.5754902 0.5816418 0.5968568 0.6040564 0.6065801 #>  [592,] 0.40807386 0.5852049 0.5944061 0.6151464 0.6305765 0.6354666 0.6405491 #>  [593,] 0.50451422 0.5435610 0.8748761 0.9055023 1.0413266 1.0492853 1.1193411 #>  [594,] 0.60941048 0.8286666 0.8362473 0.8475980 0.8652686 0.9248949 0.9401446 #>  [595,] 1.02764981 1.0675792 1.1726157 1.1737706 1.2117283 1.2122693 1.2136554 #>  [596,] 0.48648770 0.6071182 0.6077914 0.6451965 0.6664912 0.6796197 0.6990176 #>  [597,] 0.31537054 0.4401888 0.7049388 0.7611104 0.7926868 0.8169729 0.8347674 #>  [598,] 0.33478924 0.3535666 0.3921772 0.3934919 0.4061885 0.4270109 0.4683849 #>  [599,] 0.29403821 0.4011936 0.4167385 0.4725982 0.5336573 0.5487884 0.5762095 #>  [600,] 0.34154377 0.3776825 0.4150283 0.4241536 0.4626339 0.4811862 0.5238636 #>  [601,] 0.29062669 0.3969090 0.4038128 0.6562524 0.6739732 0.6791804 0.7069239 #>  [602,] 0.36985508 0.4767623 0.6505008 0.6659052 0.6908772 0.6949283 0.7074873 #>  [603,] 0.46510675 0.5777555 0.6102530 0.6860259 0.6954669 0.8290772 0.8351042 #>  [604,] 0.58189352 0.6589000 0.6686780 0.6893716 0.8203466 0.8461130 0.8599066 #>  [605,] 0.28459575 0.3376415 0.4192009 0.5731440 0.6105425 0.6149352 0.6214294 #>  [606,] 0.11608719 0.3638735 0.3792344 0.3799525 0.3879428 0.4390372 0.4585823 #>  [607,] 0.80719987 0.8293724 1.0997222 1.2354086 1.3177878 1.3927904 1.4089550 #>  [608,] 0.70018889 1.2503321 1.2780366 1.3383411 1.4643526 1.5313353 1.5387897 #>  [609,] 0.54703206 0.6326815 0.7559557 0.8459306 0.8506859 0.8917204 0.9307966 #>  [610,] 0.27361090 0.3943047 0.4335340 0.5142888 0.5265425 0.5371743 0.5416264 #>  [611,] 0.82697259 0.8951109 0.9285000 0.9448010 1.0888297 1.2039308 1.2067116 #>  [612,] 0.30507871 0.3273770 0.4344419 0.4591137 0.4751239 0.4870335 0.5101134 #>  [613,] 0.54105950 0.7512295 0.8366602 0.9077201 1.0226334 1.0241518 1.1789045 #>  [614,] 0.32685154 0.4467783 0.6437903 0.6957793 0.7111202 0.7504098 0.7703679 #>  [615,] 0.21392826 0.2641698 0.4380816 0.4557797 0.5332089 0.5424867 0.5470235 #>  [616,] 0.16973124 0.3613998 0.4432428 0.4559979 0.5624052 0.5760403 0.6043345 #>  [617,] 0.54910784 0.5686761 0.6911297 0.6945931 0.7177089 0.7198688 0.7597752 #>  [618,] 0.21566331 0.3873494 0.4141784 0.4209737 0.4946848 0.5121898 0.5441918 #>  [619,] 0.31174585 0.3208248 0.3302222 0.3356392 0.3359325 0.3493520 0.4049898 #>  [620,] 0.48416998 0.6688491 0.6699654 0.7330502 0.7655117 0.7961905 0.8147810 #>  [621,] 0.54243723 0.5634303 0.5645729 0.5921655 0.5974787 0.6009983 0.6831728 #>  [622,] 0.44986007 0.6802616 0.6893716 0.8791343 0.8939719 0.9821576 0.9837626 #>  [623,] 0.58665844 0.8052953 0.8582436 0.9003027 0.9672961 0.9803843 1.0155728 #>  [624,] 0.24136134 0.5790625 0.6168309 0.6571811 0.6682516 0.7423945 0.7494334 #>  [625,] 0.52631572 0.6946062 0.8203172 0.8286666 0.8862931 1.0503166 1.0956282 #>  [626,] 0.28362515 0.3572052 0.3782162 0.4301535 0.4609179 0.4736896 0.4951976 #>  [627,] 0.34844429 0.4708596 0.4950304 0.5364844 0.5959543 0.6394717 0.6509156 #>  [628,] 0.70116622 0.8738729 0.9232706 0.9257615 0.9500668 1.0094909 1.0283225 #>  [629,] 0.41787351 0.5240484 0.6101186 0.6395927 0.6518593 0.6559082 0.6670681 #>  [630,] 0.34027172 0.3483590 0.5775658 0.5876252 0.6204556 0.6855360 0.7085435 #>  [631,] 0.48183801 0.7126242 0.7467861 0.7836029 0.8784556 0.8980112 0.8987570 #>  [632,] 0.19419128 0.2839768 0.3802278 0.4279197 0.4645395 0.4706502 0.4918564 #>  [633,] 0.23167235 0.4764203 0.4957492 0.5487723 0.5527083 0.5540839 0.6585077 #>  [634,] 0.37995251 0.4259055 0.4356021 0.4399584 0.4510979 0.5149004 0.6219822 #>  [635,] 0.39363928 0.4841722 0.5142780 0.5335577 0.5623835 0.5888239 0.6495236 #>  [636,] 0.63314368 1.0503016 1.1153360 1.1235266 1.1364532 1.1380188 1.1802990 #>  [637,] 0.85546966 0.8595941 0.8765175 0.8949732 0.9058662 0.9230566 0.9535782 #>  [638,] 0.54449025 1.2893829 1.4274326 1.4313215 1.4664327 1.6344595 1.6742548 #>  [639,] 0.46645854 0.4802830 0.6528180 0.6667336 0.6717098 0.6732536 0.6761374 #>  [640,] 0.35965794 0.4701404 0.5471553 0.5762095 0.6405376 0.6763833 0.6825840 #>  [641,] 0.43598666 0.4381048 0.5115222 0.5120130 0.5410413 0.5505425 0.5846763 #>  [642,] 0.25334228 0.5324512 0.5390755 0.5392326 0.5592968 0.5691145 0.5746819 #>  [643,] 0.36595529 0.3844797 0.4811879 0.5233490 0.5263663 0.5361204 0.5486290 #>  [644,] 0.34235251 0.5245471 0.5290194 0.5560926 0.5857627 0.6764634 0.6833624 #>  [645,] 0.36347243 0.4590754 0.6295294 0.6487658 0.6860259 0.7038720 0.7096475 #>  [646,] 0.20395837 0.4657923 0.4935208 0.5361204 0.5476945 0.5932247 0.6263767 #>  [647,] 0.29910942 0.4783190 0.5909218 0.6377302 0.6388986 0.7084974 0.7317710 #>  [648,] 0.38519494 0.4323350 0.5596796 0.6020497 0.6978972 0.7114342 0.7876461 #>  [649,] 0.35376145 0.4160175 0.4224186 0.4543662 0.4552867 0.4556376 0.4574192 #>  [650,] 1.26516795 1.2810324 1.5369662 1.5829576 1.5865118 1.6985075 1.7013157 #>  [651,] 0.30338965 0.3409042 0.3426225 0.3523410 0.3687144 0.4049237 0.4143892 #>  [652,] 0.38772521 0.4232959 0.5335816 0.5549221 0.5569106 0.6105425 0.6243774 #>  [653,] 0.37150479 0.4389962 0.4868420 0.4953717 0.5373714 0.5376232 0.5427501 #>  [654,] 0.78346792 0.7997734 0.8752845 0.9425318 0.9635824 0.9930162 0.9941969 #>  [655,] 0.49333622 0.4946115 0.5402954 0.5576428 0.6074047 0.7881233 0.8216602 #>  [656,] 0.81634704 0.8325586 0.9138814 0.9159168 0.9335997 0.9660048 1.0039897 #>  [657,] 0.30361897 0.5440199 0.5652880 0.6127630 0.6279280 0.6685404 0.7063750 #>  [658,] 0.37644458 0.4764203 0.5026760 0.5916505 0.6111725 0.6610760 0.7162576 #>  [659,] 0.46121647 0.4937272 0.6014050 0.6290653 0.6328639 0.7201901 0.7545655 #>  [660,] 0.27017635 0.4135228 0.4148534 0.4937272 0.5395340 0.5418916 0.5552143 #>  [661,] 0.58739582 0.6725229 0.7993370 0.9048243 0.9329313 0.9839407 1.0221971 #>  [662,] 0.41394639 0.6016788 0.6157182 0.6422605 0.6474427 0.6831728 0.7126242 #>  [663,] 0.18460255 0.2138112 0.3822591 0.3840070 0.3862574 0.4230495 0.4736896 #>  [664,] 0.30072497 0.3464240 0.3802278 0.3995926 0.6015810 0.6372212 0.6519142 #>  [665,] 0.30975111 0.3880177 0.4556376 0.5139233 0.5483299 0.5894451 0.6325165 #>  [666,] 0.43594864 0.5407081 0.8323526 0.9285000 0.9896595 1.0405765 1.0770914 #>  [667,] 0.34452809 0.3600881 0.3892187 0.4049237 0.4952720 0.5409081 0.5506858 #>  [668,] 0.25073339 0.2655099 0.3688372 0.4002012 0.5335816 0.5430112 0.5562233 #>  [669,] 0.55313581 0.8070900 0.8268404 0.9176893 0.9838827 1.0484415 1.0492853 #>  [670,] 0.77684925 0.7780350 0.8705382 0.8738428 0.9277626 0.9402255 0.9558444 #>  [671,] 0.62196198 0.6366517 0.6978972 0.8322545 0.8497819 0.9580972 1.0241518 #>  [672,] 0.30084255 0.5388117 0.5648963 0.5803478 0.7518248 0.7807733 0.8681542 #>  [673,] 0.43749453 0.5505227 0.5672890 0.5687865 0.5735866 0.5894259 0.5947715 #>  [674,] 0.24863800 0.3318474 0.4301535 0.4310850 0.4422283 0.4810028 0.4870022 #>  [675,] 0.53320894 0.6171614 0.6680559 0.6984509 0.7053176 0.7166298 0.7309727 #>  [676,] 0.39983873 0.4405283 0.4797045 0.5156670 0.5388781 0.5728042 0.6942725 #>  [677,] 0.35368533 0.4474790 0.4496334 0.4678426 0.6593369 0.7176423 0.7300486 #>  [678,] 0.39190757 0.4899965 0.5306228 0.5583424 0.6397865 0.6539415 0.6601470 #>  [679,] 0.42631331 0.4291071 0.5682878 0.6235444 0.6862337 0.7036078 0.7612428 #>  [680,] 0.40020213 0.4387530 0.4914823 0.5162458 0.5411882 0.5538449 0.5839871 #>  [681,] 0.27824019 0.3971149 0.4167784 0.4673479 0.4958828 0.5184400 0.5692543 #>  [682,] 0.44486184 0.5100506 0.5699179 0.5792501 0.5905829 0.6962281 0.6983024 #>  [683,] 0.63366877 0.7138283 0.8833182 0.9951903 0.9986345 1.0016824 1.0486325 #>  [684,] 0.32908268 0.3829368 0.4572627 0.4617752 0.5499103 0.5675280 0.5688572 #>  [685,] 0.47289305 0.4739998 0.6328005 0.6521120 0.6720328 0.6739434 0.7266951 #>  [686,] 0.35509133 0.4265314 0.6051751 0.6168309 0.6865512 0.7016635 0.7183189 #>  [687,] 0.71885913 0.8323526 0.9055023 0.9176893 0.9448010 1.1334821 1.1536165 #>  [688,] 0.51403851 0.5219559 0.5413375 0.5480443 0.6355625 0.6555136 0.6644830 #>  [689,] 0.61265766 0.6874574 0.7786590 0.8613076 0.9503610 0.9610233 1.0182848 #>  [690,] 0.42653138 0.4625601 0.4763041 0.5893919 0.6858187 0.6941150 0.6977133 #>  [691,] 0.29444451 0.3104717 0.4775865 0.5029744 0.5991155 0.6026409 0.6093745 #>  [692,] 0.69054547 0.8296649 0.8948670 0.9504654 1.0171249 1.0282789 1.0300253 #>  [693,] 0.51757671 0.5368974 0.7315526 0.7389885 0.8092806 0.8729183 0.8828692 #>  [694,] 0.21674498 0.2507334 0.4196418 0.4596097 0.5467713 0.5569106 0.6194824 #>  [695,] 0.69062254 0.8392936 1.1106780 1.1193411 1.1366575 1.1374524 1.1464533 #>  [696,] 0.34682822 0.3859824 0.4531165 0.4946232 0.5408715 0.5927076 0.5948363 #>  [697,] 0.95620290 1.1272844 1.1292652 1.3601725 1.4219230 1.4411477 1.4704535 #>  [698,] 0.26343145 0.4435184 0.5219604 0.5413950 0.5726195 0.6162140 0.6336426 #>  [699,] 0.42701073 0.5527083 0.8069478 0.8241123 0.8512284 0.8574372 0.8688199 #>  [700,] 0.36336045 0.4141241 0.4178735 0.4315726 0.5211340 0.6684754 0.6770869 #>  [701,] 0.54105950 0.9021926 0.9023072 1.1646467 1.1690400 1.1740738 1.2017255 #>  [702,] 0.33332358 0.4941352 0.5491287 0.5514421 0.5823703 0.6171313 0.6328639 #>  [703,] 0.31537054 0.4176534 0.6411925 0.6462147 0.7403294 0.7454633 0.7899675 #>  [704,] 0.26328614 0.2638343 0.3096327 0.3402142 0.4377764 0.4409665 0.5062397 #>  [705,] 0.38149111 0.3966306 0.4026726 0.4178758 0.4513943 0.4525542 0.5153017 #>  [706,] 0.15472873 0.3533348 0.3699957 0.3862040 0.4205965 0.4325937 0.5418916 #>  [707,] 0.43000173 0.5073444 0.5338096 0.5381579 0.6499022 0.6594966 0.6792359 #>  [708,] 0.33323683 0.4416356 0.4746625 0.4969829 0.5978585 0.6048488 0.6156391 #>  [709,] 0.60490980 0.6197508 0.6389791 0.6671744 0.6842797 0.8041659 0.8240498 #>  [710,] 0.44123648 0.5963301 0.6770869 0.6782984 0.7436061 0.7591996 0.7596100 #>  [711,] 0.36738405 0.4432428 0.4953801 0.5027575 0.5266475 0.5653288 0.5719470 #>  [712,] 0.44109626 0.5182610 0.8114595 0.8182231 0.8704664 0.8718881 0.8750923 #>  [713,] 0.35346968 0.7246401 0.7499065 0.7823791 0.8305809 0.9931664 1.0404170 #>  [714,] 0.58893642 0.6124386 0.6788038 0.7691026 0.7834769 0.8118543 0.8310321 #>  [715,] 0.66340973 0.8016984 0.8089124 0.8649101 0.8843676 0.9499100 1.0330265 #>  [716,] 0.14605421 0.6347718 0.6725681 0.7590693 0.7616078 0.7722215 0.7821952 #>  [717,] 0.25735799 0.3537615 0.3695420 0.3777877 0.4214002 0.4252863 0.4281232 #>  [718,] 0.33022224 0.3441288 0.4096363 0.4386172 0.4585147 0.5031696 0.5193626 #>  [719,] 0.65860686 0.8196058 0.8914782 0.9086368 0.9839407 1.0014516 1.0230460 #>  [720,] 0.39509527 0.5139233 0.5447037 0.5524913 0.8080131 0.8155186 0.8215988 #>  [721,] 0.55933129 0.6217602 0.6965583 0.7067615 0.7703424 0.8276266 0.8368484 #>  [722,] 0.63580413 0.7688035 0.8106643 0.9246408 0.9380414 0.9439554 1.0680439 #>  [723,] 0.46256011 0.4801519 0.5622388 0.6051751 0.6279492 0.6551946 0.6571811 #>  [724,] 0.34717912 0.4045419 0.5436368 0.6388986 0.7033968 0.7442621 0.7580649 #>  [725,] 0.51181402 0.5664642 0.6071722 0.6465218 0.6607136 0.6631087 0.6820446 #>  [726,] 0.75122951 0.7833552 0.8497819 0.8599066 0.8806943 0.9128641 0.9215414 #>  [727,] 0.22735807 0.5369339 0.5880864 0.6313239 0.6365637 0.6494028 0.6978221 #>  [728,] 0.69858196 0.8308600 0.8988011 0.9483479 0.9529792 0.9557612 0.9866009 #>  [729,] 0.58913260 0.5904511 1.0997222 1.2397709 1.3674834 1.3693199 1.3854303 #>  [730,] 0.47359279 0.5291050 0.5563820 0.6234920 0.6501716 0.6651793 0.6910260 #>  [731,] 0.38658483 0.4641697 0.4951976 0.5142720 0.5381997 0.5654464 0.5733830 #>  [732,] 0.53774224 0.6493739 0.6512504 0.6671744 0.7118943 0.7749027 0.7782724 #>  [733,] 0.40440349 0.4300163 0.5196985 0.5397259 0.6101514 0.6157228 0.6182368 #>  [734,] 1.35351303 1.6109467 1.7051863 1.7236095 1.8262364 1.9428414 2.0175106 #>  [735,] 0.29359887 0.4279511 0.4804884 0.5369971 0.5482631 0.5865848 0.5953025 #>  [736,] 0.90613818 0.9500898 0.9713147 1.0095566 1.0338680 1.1879064 1.2013942 #>  [737,] 0.52439153 0.6675391 0.8305809 1.0501612 1.0567316 1.1273738 1.1840653 #>  [738,] 0.42791970 0.4785496 0.5145920 0.5260537 0.5268112 0.5434271 0.5488552 #>  [739,] 0.77256093 0.8926279 1.0544813 1.1382764 1.1418979 1.1830457 1.2970655 #>  [740,] 0.27824019 0.3109608 0.3987329 0.4258963 0.5017250 0.5105818 0.5888744 #>  [741,] 0.27773200 0.8213555 0.8559930 0.9525178 0.9838940 1.0723668 1.1206739 #>  [742,] 0.38767281 0.4026726 0.4205946 0.4471608 0.4802830 0.5507127 0.5815310 #>  [743,] 0.32237498 0.3764880 0.4013733 0.4537154 0.4802813 0.4904619 0.5476945 #>  [744,] 0.49446897 0.5258675 0.5579990 0.5600066 0.5672890 0.5699179 0.6562205 #>  [745,] 0.35748401 0.5123131 0.5290194 0.5663951 0.5957944 0.6198647 0.6897391 #>  [746,] 0.31719653 0.3848797 0.4561031 0.4979489 0.5333971 0.5371761 0.5391688 #>  [747,] 0.67604518 0.9275340 1.0278988 1.0327197 1.2267464 1.2375629 1.3199692 #>  [748,] 0.12222005 0.4177120 0.6268746 0.7180089 0.7371032 0.7431611 0.7436420 #>  [749,] 0.74546332 0.7926868 0.8942326 1.0656954 1.1363119 1.1613837 1.1821319 #>  [750,] 0.43000173 0.5052092 0.5965068 0.6683562 0.7105456 0.7366041 0.7704925 #>  [751,] 0.28459575 0.3694457 0.5026201 0.6070519 0.6188489 0.6194824 0.6218011 #>  [752,] 0.70730375 0.7993732 0.8869694 0.9236479 0.9618237 1.0278988 1.0328210 #>  [753,] 0.45428253 0.5213248 0.5381579 0.5430112 0.6351318 0.6863909 0.6964509 #>  [754,] 0.73790913 0.9146707 0.9268745 0.9441675 0.9728522 0.9886703 1.0041557 #>  [755,] 0.51540272 0.5320156 0.5852049 0.6104892 0.6833624 0.6897391 0.6911030 #>  [756,] 0.41347323 0.4387530 0.4678809 0.4871645 0.4934944 0.5402894 0.5618440 #>  [757,] 1.17827006 1.2534981 1.2886819 1.3553739 1.3561492 1.4709502 1.4736376 #>  [758,] 0.48695844 0.5510996 0.5864232 0.6654570 0.6918404 0.6931311 0.6985820 #>  [759,] 1.60098152 1.6043613 1.6645287 1.8161045 1.8887888 1.9565765 2.0145514 #>  [760,] 0.17672129 0.2947138 0.3361387 0.3529613 0.4579331 0.4654775 0.5653037 #>  [761,] 0.27361090 0.3842518 0.3946160 0.4463409 0.4822301 0.4970682 0.5173598 #>  [762,] 0.09831649 0.3687144 0.3738390 0.3752012 0.4383739 0.4483313 0.4989207 #>  [763,] 0.40807386 0.6692890 0.7407087 0.7445498 0.7617625 0.7812317 0.8029511 #>  [764,] 0.33323683 0.3636660 0.4090712 0.4678809 0.5384396 0.5770353 0.6342586 #>  [765,] 0.74149780 0.7884421 0.8924413 0.8925216 1.0852243 1.1068269 1.1279884 #>  [766,] 0.88475525 1.0307034 1.1031474 1.1288179 1.1767783 1.2611665 1.3072379 #>  [767,] 0.39276221 0.4141241 0.4186988 0.5460700 0.5804832 0.5861869 0.5965068 #>  [768,] 0.60683531 0.6239664 0.6329802 0.6571812 0.7014294 0.7681392 0.9043524 #>  [769,] 0.25183425 0.3287616 0.4958141 0.5156670 0.6469373 0.7240607 0.7927622 #>  [770,] 0.81951004 1.0033135 1.0122607 1.1505867 1.1603421 1.1781983 1.1982659 #>  [771,] 0.63388207 0.7708441 0.8405305 0.8498749 0.9045846 0.9466005 0.9803991 #>  [772,] 0.38596645 0.4342199 0.4684409 0.5602363 0.5714456 0.5805367 0.5833092 #>  [773,] 0.63764715 0.7092790 0.8200161 0.8512293 0.8517123 0.9066578 0.9243237 #>  [774,] 0.29062669 0.4554043 0.4762512 0.6821908 0.6890077 0.7307151 0.7315235 #>  [775,] 0.27996485 0.5089294 0.5409551 0.5731555 0.6783771 0.7118041 0.7215748 #>  [776,] 0.38532828 0.4681975 0.5026760 0.5540839 0.5630189 0.6028126 0.6175580 #>  [777,] 0.51411964 0.5156462 0.5420390 0.5666462 0.6606336 0.6987629 0.7096344 #>  [778,] 0.28914798 0.3341115 0.3905825 0.4007505 0.4423288 0.4925744 0.5092038 #>  [779,] 0.44351835 0.5441918 0.5751142 0.5771078 0.5850060 0.6032333 0.6109984 #>  [780,] 0.42911358 0.4658710 0.4704423 0.5636624 0.5749203 0.6282014 0.6493615 #>  [781,] 0.58078479 0.6287389 0.6727315 0.7011662 0.7128726 0.7296091 0.7383797 #>  [782,] 0.17515967 0.3148796 0.4622053 0.4935208 0.5181742 0.5225545 0.5405678 #>  [783,] 0.34235251 0.4319502 0.4692709 0.4880859 0.5052213 0.5123131 0.5347047 #>  [784,] 0.27949333 0.5545604 0.5978329 0.6031911 0.6126577 0.6343305 0.7437618 #>  [785,] 0.24171039 0.3686001 0.4558091 0.5551246 0.6074524 0.6198224 0.6720896 #>  [786,] 0.39297509 0.3943971 0.4756200 0.5476847 0.5500657 0.5557123 0.5801731 #>  [787,] 0.62045966 0.6634097 0.6801610 0.7152110 0.7696425 0.8052953 0.8215516 #>  [788,] 0.54426365 0.5638175 0.6749506 0.6987118 0.7195750 0.7425097 0.7472007 #>  [789,] 0.30084255 0.5204844 0.5390357 0.6601272 0.6631301 0.7861197 0.7917998 #>  [790,] 0.21863794 0.4566923 0.5100506 0.6264804 0.6478767 0.7233856 0.7629658 #>  [791,] 0.69343238 0.7916039 0.8174900 0.8209361 0.8597213 0.8956150 0.9191062 #>  [792,] 0.31575585 0.3376415 0.3694457 0.6310238 0.6630490 0.6687645 0.6753017 #>  [793,] 0.33731955 0.3451244 0.4241536 0.4726576 0.4765648 0.4850090 0.5104808 #>  [794,] 0.33330030 0.3430224 0.4944690 0.5286509 0.5507820 0.5691711 0.6740800 #>  [795,] 0.48015193 0.4870973 0.5434333 0.5681859 0.5790625 0.6224556 0.6920199 #>  [796,] 0.91545188 0.9851428 0.9985390 1.2401699 1.2706049 1.4116211 1.4267028 #>  [797,] 0.26927678 0.3941537 0.4221518 0.4449027 0.4632372 0.4782392 0.5086648 #>  [798,] 0.30577483 0.4371707 0.5345808 0.6105168 0.6122402 0.6865432 0.7719839 #>  [799,] 0.85802249 0.9283156 1.2431804 1.2509933 1.2636073 1.2909028 1.3068810 #>  [800,] 0.60499899 0.6353063 0.6588731 0.6686780 0.6783649 0.7031266 0.7059153 #>  [801,] 0.35808541 0.3596801 0.4380816 0.4387298 0.4474902 0.4715928 0.4920686 #>  [802,] 0.42497290 0.4498638 0.7653629 0.8186734 0.8834345 0.8955751 0.9027206 #>  [803,] 0.36096082 0.3633604 0.4226290 0.5460700 0.5624287 0.6155368 0.6287389 #>  [804,] 0.41459923 0.4496334 0.4880470 0.4927598 0.4971807 0.5330295 0.5530242 #>  [805,] 0.87209495 1.2580143 1.5146902 1.5192367 1.6207223 1.7483121 1.7926297 #>  [806,] 0.32580181 0.5388117 0.5390357 0.6096010 0.6983498 0.7022300 0.7152110 #>  [807,] 0.22735807 0.3700770 0.4739122 0.4933392 0.6045138 0.6468782 0.7561484 #>  [808,] 0.36954200 0.3791834 0.3862574 0.4063097 0.4711711 0.4919237 0.4926647 #>  [809,] 0.31170307 0.6327033 0.7336474 0.9043976 0.9048609 0.9850208 1.0023837 #>  [810,] 0.42322607 0.4259888 0.4446164 0.4449831 0.4667387 0.4983489 0.5171208 #>  [811,] 0.47742160 0.7927973 0.8392936 0.9368811 0.9712860 1.0107862 1.0526832 #>  [812,] 0.57426260 0.5857830 0.6128149 0.6252175 0.6313865 0.6448859 0.6608414 #>  [813,] 0.40299783 0.5424989 0.6948786 0.7302712 0.8294974 0.9501195 0.9531711 #>  [814,] 0.72727075 0.8829206 0.9873766 1.0244392 1.0398980 1.2170482 1.2480076 #>  [815,] 0.24949429 0.4851378 0.4852129 0.5202777 0.6531028 0.7033036 0.7176815 #>  [816,] 0.51507672 0.5471553 0.5615487 0.6850255 0.7931495 0.7975922 0.8424111 #>  [817,] 0.15604009 0.4431694 0.5146468 0.5624673 0.5727703 0.6123558 0.6131775 #>  [818,] 0.65828602 0.6739732 0.6864811 0.6890077 0.7181508 0.7231773 0.7530624 #>  [819,] 0.51564803 0.5235680 0.5761168 0.7585791 0.8006608 0.8498749 0.9355411 #>  [820,] 0.51459128 0.5371761 0.5935440 0.6053123 0.6092135 0.6686627 0.6725681 #>  [821,] 0.33148026 0.3717019 0.4098502 0.5120130 0.5334669 0.5664642 0.6158515 #>  [822,] 0.22038706 0.2836823 0.5179364 0.5479470 0.5576100 0.6203619 0.8928497 #>  [823,] 0.65890004 0.6900357 0.7414978 0.8366602 0.9023072 0.9483216 0.9959242 #>  [824,] 0.29471381 0.3487168 0.4474640 0.4799773 0.4854754 0.4999563 0.5302813 #>  [825,] 0.20417561 0.4846515 0.5846763 0.5975842 0.6272176 0.6513768 0.6654570 #>  [826,] 0.22475057 0.2403118 0.3006863 0.3547841 0.3638735 0.4968724 0.4979489 #>  [827,] 0.33702873 0.8849706 1.0227250 1.2455886 1.2472189 1.2625984 1.2728276 #>  [828,] 0.23535424 0.2888365 0.4209737 0.5078930 0.5609209 0.6032333 0.6234146 #>  [829,] 0.43557756 0.5741917 0.5876252 0.6720861 0.6932422 0.7299574 0.8358283 #>  [830,] 0.34242776 0.3594535 0.3943971 0.6445696 0.6479357 0.6531994 0.6720896 #>  [831,] 0.42497290 0.4378084 0.6613781 0.6717098 0.7180839 0.8036945 0.8090444 #>  [832,] 0.18842874 0.3712625 0.4171864 0.4988816 0.5338943 0.5859090 0.6002829 #>  [833,] 0.59828158 0.6140907 0.6609668 0.6916844 0.7095298 0.7533940 0.7615608 #>  [834,] 0.85086686 0.8693708 1.0402638 1.0913809 1.1162744 1.1580728 1.1882179 #>  [835,] 0.39484804 0.5377422 0.5896853 0.5998148 0.6132736 0.7345074 0.7400159 #>  [836,] 0.28200459 0.4838382 0.5056986 0.7097586 0.7118269 0.7154967 0.7260693 #>  [837,] 0.28200459 0.4255819 0.5311183 0.5385190 0.5857583 0.6752513 0.7014631 #>  [838,] 0.72854123 0.8213555 1.2479845 1.2509933 1.3578865 1.3883013 1.4704535 #>  [839,] 0.35221305 0.4658086 0.4688457 0.4852129 0.5470235 0.5481457 0.5696647 #>  [840,] 0.32580181 0.4869584 0.5029816 0.5929361 0.6505765 0.6601272 0.6815772 #>  [841,] 0.24031182 0.3266515 0.3289196 0.3879428 0.4055814 0.4310850 0.4802058 #>  [842,] 0.63184141 0.7825293 0.9278780 0.9812174 0.9830406 1.0397144 1.0555835 #>  [843,] 0.40636897 0.5420390 0.5550702 0.5862135 0.5904569 0.6071488 0.6836963 #>  [844,] 0.47831904 0.4992977 0.5258547 0.5944776 0.5963457 0.6599681 0.7640140 #>  [845,] 0.46638959 0.5044446 0.5824304 0.6530868 0.6635628 0.6810039 0.7583725 #>  [846,] 0.18634156 0.4660731 0.5016230 0.5377097 0.5390598 0.5907733 0.6081748 #>  [847,] 0.29038507 0.3045802 0.3361387 0.3493174 0.3687756 0.3766028 0.4119493 #>  [848,] 0.50444460 0.5294214 0.6075915 0.7424908 0.8023538 0.8194373 0.9051578 #>  [849,] 0.18945147 0.2116450 0.2573580 0.3110705 0.3223047 0.3731118 0.3766028 #>  [850,] 0.38970748 0.5717071 0.5865542 0.5878294 0.5908949 0.6282007 0.6367832 #>  [851,] 0.24949429 0.4835535 0.4973154 0.5481457 0.6148331 0.7302801 0.7861184 #>  [852,] 0.46124088 0.5084755 0.5156658 0.5596796 0.5802675 0.6023530 0.6047881 #>  [853,] 0.66924590 0.7049388 0.8096001 0.8637338 0.8647272 0.8857966 0.9629770 #>  [854,] 0.40949008 0.4903354 0.6040936 0.6654582 0.7892187 0.9190275 0.9911303 #>  [855,] 0.45907545 0.5777555 0.5780089 0.7002335 0.7745468 0.8503036 0.8679628 #>  [856,] 0.60555636 0.7423913 0.7591619 0.7960978 0.9138814 0.9284428 1.1086736 #>  [857,] 0.54070810 0.5956861 0.7189500 0.7750984 0.7991863 0.8518376 0.8815974 #>  [858,] 0.43061825 0.4657923 0.4811879 0.5268112 0.5396213 0.5876804 0.5909889 #>  [859,] 0.47952646 0.5485678 0.5796519 0.7068683 0.7246722 0.7839269 0.8756713 #>  [860,] 0.34512046 0.3936393 0.5426927 0.5617833 0.5775658 0.6252175 0.6699691 #>  [861,] 0.33018724 0.6105168 0.6239664 0.6644961 0.6850255 0.7567525 0.7708239 #>  [862,] 0.44522840 0.4481359 0.5284077 0.5530242 0.5652880 0.5863829 0.6606663 #>  [863,] 0.44813593 0.4637061 0.4678426 0.4880470 0.5557236 0.6843397 0.7063750 #>  [864,] 0.62529285 0.8191095 1.0646795 1.0720833 1.0783879 1.1276875 1.1329767 #>  [865,] 0.41119252 0.4577456 0.5452479 0.6297758 0.6929260 0.7024502 0.7180998 #>  [866,] 0.27912903 0.4651760 0.5081217 0.5602555 0.6379255 0.7991863 0.8322765 #>  [867,] 1.15661048 1.3462438 1.4471441 1.5645124 1.5808967 1.6063300 1.6320500 #>  [868,] 0.54139322 0.6773988 0.7105605 0.7149278 0.7211515 0.7299574 0.7337276 #>  [869,] 0.31133296 0.4822301 0.5088305 0.5234874 0.5358143 0.5401556 0.5946605 #>  [870,] 0.50344372 0.6795696 0.7893724 0.8130988 0.8172974 0.8690556 0.8829630 #>  [871,] 0.24531337 0.2903851 0.2977648 0.3203283 0.3223047 0.3224021 0.3613120 #>  [872,] 1.09268104 1.1382408 1.1923692 1.2465492 1.3481100 1.4001927 1.4189594 #>  [873,] 0.37265397 0.4918564 0.4958828 0.5303708 0.5321874 0.5558120 0.5829550 #>  [874,] 0.48520405 0.7279412 0.8074916 0.9682564 1.1254497 1.1566882 1.1824327 #>  [875,] 0.26594121 0.5953002 0.5957431 0.6172237 0.6716399 0.6896890 0.6984653 #>  [876,] 0.81867341 0.8726695 0.9058662 0.9245956 0.9318064 1.0447502 1.0583478 #>  [877,] 0.66137812 0.6894816 0.8342098 0.8775902 0.9044680 0.9185322 0.9245897 #>  [878,] 0.27957885 0.5147946 0.5424989 0.5528173 0.7625186 0.7667228 0.7693490 #>  [879,] 0.12222005 0.3100312 0.6142398 0.6262270 0.6349211 0.6857133 0.7149717 #>  [880,] 0.55831393 0.5605773 0.6047171 0.6481022 0.9314802 0.9439554 0.9520623 #>  [881,] 0.49736419 0.5917555 0.6223325 0.6957458 0.7322672 0.7716297 0.7745400 #>  [882,] 0.40360403 0.5054819 0.5453375 0.5558413 0.6633979 0.7233839 0.7326161 #>  [883,] 0.37547110 0.4268221 0.5448074 0.5452479 0.6043597 0.6078415 0.6495392 #>  [884,] 0.29963193 0.3668414 0.3792134 0.3928074 0.4425622 0.4718084 0.4798583 #>  [885,] 0.64379029 0.7468705 0.8206195 0.8262232 0.8541983 0.8743703 0.9315260 #>  [886,] 0.30096399 0.3892187 0.4546167 0.4548463 0.5983123 0.6060355 0.6328005 #>  [887,] 0.46703537 0.4767417 0.5145920 0.5321874 0.5712901 0.5777134 0.5909889 #>  [888,] 0.51564803 0.6582860 0.7708441 0.7788900 0.8357769 0.8599289 0.8652686 #>  [889,] 0.53892468 1.0486325 1.1644871 1.1717316 1.2046336 1.2400584 1.2450309 #>  [890,] 0.32282065 0.3540405 0.4008547 0.4574192 0.4597129 0.4749997 0.4819657 #>  [891,] 0.47742160 0.7234641 0.8592318 1.0554974 1.0620862 1.1109065 1.1366575 #>  [892,] 0.34197322 0.3716588 0.4356021 0.5047202 0.5166129 0.5323596 0.5344388 #>  [893,] 0.66622344 0.6909275 0.8534496 0.8539695 0.9764982 0.9863673 0.9984615 #>  [894,] 0.87209495 1.0808862 1.3254115 1.3404295 1.4891477 1.5381128 1.5951257 #>  [895,] 0.38741583 0.4344419 0.4488586 0.4533024 0.4672448 0.4848637 0.4975694 #>  [896,] 1.03245278 1.1925389 1.2063668 1.2165550 1.2345554 1.2772759 1.3177358 #>  [897,] 0.33702873 0.9317456 1.1587109 1.2196853 1.2244513 1.2387571 1.2509943 #>  [898,] 0.86087471 0.8775427 1.0586136 1.2316273 1.2486592 1.3250910 1.3474000 #>  [899,] 0.24495826 0.3665608 0.3796179 0.4394007 0.4699607 0.4970682 0.4973593 #>  [900,] 0.53693393 0.5509196 0.5758092 0.6077715 0.6372212 0.6468782 0.6495503 #>  [901,] 0.60751210 0.6347718 0.6750756 0.8400073 0.8639459 0.8938192 0.8987570 #>  [902,] 0.36475602 0.4359686 0.4681975 0.4957492 0.5509920 0.6065373 0.6610760 #>  [903,] 0.71925597 0.7238057 1.4242708 1.4808959 1.6356863 1.7811930 1.8049915 #>  [904,] 0.33217500 0.6075172 0.7308439 0.7573067 0.7745370 0.8331341 0.8373647 #>  [905,] 1.08159736 1.0956074 1.1598090 1.2341912 1.2433489 1.2582241 1.2708966 #>  [906,] 0.29083287 0.3991506 0.5263341 0.5313566 0.5715888 0.5801731 0.5866417 #>  [907,] 0.31849457 0.3375275 0.4090368 0.4105118 0.4221518 0.4514099 0.5643394 #>  [908,] 0.30096399 0.5509830 0.5541190 0.6393489 0.6521120 0.6928918 0.7301782 #>  [909,] 0.27773200 0.7285412 0.9501224 0.9562029 0.9740056 1.0353836 1.1208545 #>  [910,] 0.35965794 0.5150767 0.5336573 0.6122402 0.6531913 0.6848237 0.6920594 #>  [911,] 0.32876163 0.4724317 0.5728042 0.5959871 0.6017204 0.7424823 0.7535873 #>  [912,] 0.20612255 0.2839768 0.3995926 0.4600954 0.4980985 0.5371465 0.5509196 #>  [913,] 0.23307038 0.3248874 0.4146456 0.4839062 0.4901973 0.5347778 0.5501868 #>  [914,] 0.23993803 0.5254370 0.6040564 0.6101514 0.6314974 0.6320861 0.6400916 #>  [915,] 0.69003570 0.8739171 0.8805306 0.8924413 1.0279754 1.0449738 1.1265626 #>  [916,] 0.40415075 0.4847007 0.6844604 0.7136063 0.7381164 0.7421462 0.7458784 #>  [917,] 0.18051066 0.3621718 0.6046618 0.6203619 0.6725229 0.6859977 0.7025122 #>  [918,] 0.39323414 0.4813874 0.5092038 0.5139742 0.5467713 0.5562233 0.5636624 #>  [919,] 0.33470661 0.4189063 0.4808973 0.5373714 0.5594251 0.6065373 0.6195995 #>  [920,] 0.70069148 0.8073962 0.8207193 0.8294974 0.8352566 0.8714288 0.9656345 #>  [921,] 0.34743241 0.3678879 0.4061678 0.4076304 0.4277711 0.4468730 0.5275568 #>  [922,] 0.34309068 0.4307515 0.5409551 0.5519855 0.5602452 0.6127630 0.7134870 #>  [923,] 0.50898016 0.5401785 0.6252212 0.6393644 0.6450369 0.6670446 0.6746208 #>  [924,] 0.55281735 0.5803478 0.5986835 0.7302712 0.7642574 0.7886514 0.7917998 #>  [925,] 0.46323720 0.4711711 0.5015095 0.5227071 0.5300852 0.6057881 0.6281770 #>  [926,] 0.37300207 0.5505227 0.5666462 0.5839332 0.6252212 0.6690963 0.6836963 #>  [927,] 0.40119359 0.4975055 0.5589544 0.6055564 0.6531913 0.6584113 0.7604565 #>  [928,] 0.48183801 0.4841700 0.6325459 0.7198504 0.7318016 0.7725609 0.7955375 #>  [929,] 0.61025299 0.7080839 0.8064294 0.8291200 0.8344719 0.8517123 0.8693708 #>  [930,] 0.35368533 0.4116207 0.4613834 0.5041523 0.5568096 0.5683251 0.6135434 #>  [931,] 0.31605501 0.4617185 0.5401785 0.5809788 0.5947715 0.6274038 0.6835825 #>  [932,] 0.36375067 0.3966306 0.4539625 0.4848637 0.5092787 0.5233490 0.5512903 #>  [933,] 0.66159483 0.6653664 0.7231773 0.7462066 0.7828199 0.7834769 0.8125567 #>  [934,] 0.72467222 0.8892709 0.8942326 0.9342293 1.0019782 1.0190099 1.0817150 #>  [935,] 0.17515967 0.2077467 0.4378483 0.4446930 0.4635054 0.4856521 0.4920686 #>  [936,] 0.63714896 0.6514300 0.8096001 0.8222615 0.8256855 0.8450948 0.8645342 #>  [937,] 0.56154873 0.7014294 0.7433678 0.8551267 1.0064208 1.0101535 1.0104143 #>  [938,] 0.50994700 0.5270976 0.5541190 0.5983123 0.6625547 0.6720328 0.6987629 #>  [939,] 1.13746210 1.1554039 1.1709452 1.2012700 1.3270357 1.3400856 1.4142670 #>  [940,] 0.28743920 0.5563820 0.5856901 0.5996128 0.6547929 0.6700591 0.7373932 #>  [941,] 0.67425040 0.6905455 0.7710334 0.9557612 0.9796315 1.0197606 1.1882176 #>  [942,] 0.37150479 0.4798121 0.4808973 0.5166129 0.5182849 0.5829721 0.5888863 #>  [943,] 0.28688126 0.4258963 0.4281232 0.4670354 0.4883674 0.5060454 0.5184400 #>  [944,] 0.77827903 0.7819818 0.8017048 0.8162861 0.8181842 0.8197966 0.8473799 #>  [945,] 0.82162781 1.0372120 1.1002160 1.1334750 1.2121846 1.2270154 1.2946210 #>  [946,] 0.37025403 0.4167265 0.5974787 0.6093745 0.6213680 0.6260663 0.6454604 #>  [947,] 0.25146438 0.3927622 0.4704423 0.5118140 0.5141644 0.5981667 0.6030569 #>  [948,] 0.78545275 1.4532707 1.5313353 1.5427409 1.6086276 1.7504291 1.7885411 #>  [949,] 0.97271309 0.9821576 1.0197606 1.0300253 1.0468094 1.0555918 1.2018503 #>  [950,] 0.54356099 0.6906225 0.7515560 0.8163552 0.8268404 1.0246197 1.0835439 #>  [951,] 0.54343326 0.5726713 0.6079400 0.6362282 0.6411489 0.6882258 0.7099575 #>  [952,] 0.46844091 0.5961116 0.6552774 0.6681492 0.6705820 0.6705824 0.6773838 #>  [953,] 0.43749453 0.5324512 0.5839332 0.6552774 0.6928143 0.7366193 0.7452899 #>  [954,] 0.43154461 0.4399540 0.4870235 0.5126823 0.5397259 0.5775316 0.5931087 #>  [955,] 1.02021825 1.1881607 1.1982660 1.2262335 1.2503180 1.2585351 1.2634868 #>  [956,] 0.36567019 0.4878582 0.4992977 0.5924440 0.6344151 0.6589955 0.7024502 #>  [957,] 0.54300594 0.6047171 0.6385052 0.8357751 0.8688679 0.8910615 0.9210669 #>  [958,] 0.26227964 0.5029744 0.5263975 0.5506858 0.5875720 0.5980812 0.6151065 #>  [959,] 0.28368227 0.3698291 0.6985545 0.7824819 0.8126316 0.8950014 0.9177645 #>  [960,] 0.49736419 0.5183471 0.6872977 0.7351015 0.7555208 0.7721703 0.8106311 #>  [961,] 0.39870005 0.4068494 0.4138580 0.4387298 0.4493096 0.4648980 0.4751239 #>  [962,] 0.32908268 0.4148534 0.4663373 0.4952917 0.5148448 0.5823703 0.5933718 #>  [963,] 0.20957563 0.5594251 0.6219183 0.6602812 0.7078393 0.7360118 0.7703560 #>  [964,] 0.29793315 0.3097676 0.3946160 0.4495239 0.4973593 0.5219604 0.5401556 #>  [965,] 0.40847446 0.4752569 0.5648596 0.5927076 0.6392017 0.6626822 0.6950428 #>  [966,] 0.24032959 0.3109608 0.3498404 0.3971149 0.4755460 0.5466231 0.5519391 #>  [967,] 0.83996762 0.8429282 0.8430529 0.8506495 0.8805370 0.9030809 0.9297668 #>  [968,] 0.75906932 0.7979691 0.8549952 0.8591549 0.8739171 0.9021926 0.9483216 #>  [969,] 0.72181504 0.7701056 0.8012313 0.8261697 0.8506495 0.9436734 0.9631076 #>  [970,] 0.45928747 0.6874574 0.7040529 0.7155653 0.7596100 0.7642973 0.8288619 #>  [971,] 0.48355347 0.5202777 0.5696647 0.6209378 0.8020739 0.8293285 0.8423353 #>  [972,] 0.52454708 0.5688572 0.5876460 0.5896110 0.6384115 0.6425840 0.6848581 #>  [973,] 0.23167235 0.4270107 0.5509920 0.6065801 0.6111725 0.6277603 0.6409072 #>  [974,] 0.47085961 0.6588610 0.6596290 0.6879263 0.7065132 0.7088534 0.7781482 #>  [975,] 0.24984831 0.4459982 0.7060311 0.8481894 0.8836024 0.9899705 0.9995362 #>  [976,] 0.48003483 0.5257607 0.5606464 0.6075915 0.6931258 0.7270252 0.7278883 #>  [977,] 0.24909537 0.6965583 0.8719151 0.8899695 0.8925672 0.9524394 0.9771197 #>  [978,] 0.47499973 0.5926426 0.6021089 0.6590841 0.6911297 0.7376685 0.7610334 #>  [979,] 0.27414771 0.3533348 0.3829368 0.4096830 0.4135228 0.4415721 0.4663373 #>  [980,] 0.55848306 0.5871392 0.6017204 0.6948917 0.7138283 0.7796337 0.8115816 #>  [981,] 0.31027863 0.3318503 0.4300163 0.4788421 0.4899965 0.5254370 0.5960820 #>  [982,] 0.09831649 0.3426225 0.3733893 0.3833929 0.3998862 0.4147042 0.5065422 #>  [983,] 0.34242776 0.4128428 0.5373668 0.5707755 0.5742626 0.6556826 0.6773988 #>  [984,] 0.69637689 0.9597156 0.9830406 1.0227250 1.0404170 1.0897849 1.1604625 #>  [985,] 0.21587317 0.5035108 0.5587194 0.6152778 0.6528830 0.6680267 0.6734077 #>  [986,] 0.69958193 0.8580225 0.8754899 0.9156674 0.9566091 0.9670229 0.9763510 #>  [987,] 0.11608719 0.3006863 0.3250055 0.3289196 0.4259055 0.4377923 0.4870022 #>  [988,] 0.36347243 0.4651067 0.5653288 0.5780089 0.5809020 0.6451965 0.6682168 #>  [989,] 0.41765340 0.4401888 0.6357935 0.6813370 0.7506527 0.7766402 0.7819681 #>  [990,] 0.79370421 0.8864215 0.8938192 0.9058586 1.0523116 1.1082587 1.1725493 #>  [991,] 0.54612053 0.6078415 0.6344151 0.6866979 0.6894896 0.7161804 0.7335557 #>  [992,] 0.34642398 0.5090600 0.5749598 0.5798745 0.6493739 0.6495503 0.6656699 #>  [993,] 0.58381883 0.6305519 0.6584598 0.7033968 0.7270252 0.7323232 0.7672032 #>  [994,] 0.37058080 0.4416356 0.4471095 0.4517481 0.4961319 0.5121898 0.5384396 #>  [995,] 0.29083287 0.4656943 0.4740713 0.5162538 0.5446352 0.5476847 0.5501051 #>  [996,] 0.71182690 0.8015365 0.8357751 0.9246408 0.9344621 1.0045098 1.0209222 #>  [997,] 0.49119061 0.8981545 1.0922723 1.0947023 1.1007515 1.1540649 1.1801942 #>  [998,] 0.52910495 0.5856901 0.6052306 0.6426209 0.6872977 0.7322672 0.7591426 #>  [999,] 0.40440349 0.4788421 0.5086148 0.5929361 0.6096010 0.6314974 0.6784615 #> [1000,] 0.95906486 0.9779007 0.9891183 0.9967242 1.0371942 1.0655567 1.1123559 #>              [,8]      [,9]     [,10] #>    [1,] 1.1277723 1.1816461 1.1990002 #>    [2,] 1.2216679 1.2352019 1.2608456 #>    [3,] 0.6189972 0.6357971 0.6409345 #>    [4,] 0.6563752 0.6593882 0.6812084 #>    [5,] 0.6451487 0.6575858 0.6584598 #>    [6,] 0.6787011 0.7148674 0.7266524 #>    [7,] 0.6318225 0.6663029 0.6779481 #>    [8,] 0.7533940 0.7807431 0.7992978 #>    [9,] 1.0873969 1.0961940 1.1964236 #>   [10,] 0.5822407 0.5883231 0.5917679 #>   [11,] 0.6083513 0.6091392 0.6192702 #>   [12,] 0.7107465 0.7228639 0.7490380 #>   [13,] 0.7498239 0.7559947 0.7591031 #>   [14,] 0.8340085 0.8789927 0.8985272 #>   [15,] 0.8731405 0.8742264 0.9712348 #>   [16,] 1.1797889 1.1845552 1.2039234 #>   [17,] 1.0033135 1.0354425 1.0443826 #>   [18,] 0.9330399 0.9576537 0.9757561 #>   [19,] 0.8899695 0.9015966 0.9232722 #>   [20,] 0.5672174 0.5912759 0.6029007 #>   [21,] 0.6501106 0.6602688 0.6823808 #>   [22,] 0.7445577 0.7545314 0.7877731 #>   [23,] 0.7894505 0.8406640 0.8509438 #>   [24,] 0.9551027 0.9654747 1.0030288 #>   [25,] 1.0730757 1.0733707 1.0883246 #>   [26,] 0.7280532 0.7556115 0.7615608 #>   [27,] 0.7040471 0.7180793 0.7558149 #>   [28,] 1.1124655 1.1726914 1.2164293 #>   [29,] 0.7843067 0.7848351 0.8214750 #>   [30,] 0.5764293 0.6088673 0.6187806 #>   [31,] 1.1153360 1.1448984 1.1843941 #>   [32,] 0.7166056 0.7172308 0.7263161 #>   [33,] 0.7250852 0.7477290 0.7512148 #>   [34,] 1.3742790 1.4484635 1.4505247 #>   [35,] 1.2946210 1.2946745 1.3529488 #>   [36,] 0.9501224 0.9525178 0.9781398 #>   [37,] 0.5908949 0.6201243 0.6238170 #>   [38,] 0.9860467 1.0113623 1.0792367 #>   [39,] 1.3823259 1.4800667 1.4810435 #>   [40,] 1.0405158 1.0413266 1.0484415 #>   [41,] 0.4522604 0.4552867 0.4983990 #>   [42,] 1.0056548 1.0083335 1.0214761 #>   [43,] 0.5572177 0.5785664 0.6033729 #>   [44,] 0.5246025 0.5514685 0.5659403 #>   [45,] 0.5520987 0.5618288 0.5626486 #>   [46,] 0.9168416 0.9505614 0.9540991 #>   [47,] 0.9491927 0.9748667 1.0007042 #>   [48,] 0.7468701 0.7627787 0.7740428 #>   [49,] 0.8202840 0.8203177 0.8369207 #>   [50,] 0.7371032 0.7728698 0.7842856 #>   [51,] 0.8279323 0.8695652 0.8741601 #>   [52,] 0.6908772 0.7031286 0.7333217 #>   [53,] 0.6937080 0.7369896 0.7374129 #>   [54,] 0.5789364 0.5883231 0.5903267 #>   [55,] 0.8279323 0.8611921 0.8671132 #>   [56,] 1.2105582 1.3609712 1.4209254 #>   [57,] 0.6228348 0.6295301 0.6422188 #>   [58,] 0.6590690 0.6728996 0.6740843 #>   [59,] 0.6575858 0.6959634 0.7385297 #>   [60,] 0.9164001 0.9352856 0.9474459 #>   [61,] 0.6986781 0.7031266 0.7040471 #>   [62,] 0.5624673 0.5656930 0.5680078 #>   [63,] 0.6356963 0.6507316 0.6567545 #>   [64,] 0.6932837 0.7119049 0.7338189 #>   [65,] 0.6698017 0.6710056 0.6977133 #>   [66,] 1.0568114 1.0584024 1.0628807 #>   [67,] 0.4925018 0.5051723 0.5192192 #>   [68,] 0.8972152 0.9264264 1.0154784 #>   [69,] 0.7329504 0.7436061 0.7528723 #>   [70,] 1.3642570 1.4449321 1.4667406 #>   [71,] 0.8690166 0.9903226 1.0250856 #>   [72,] 0.5239980 0.5479711 0.5800733 #>   [73,] 0.5115099 0.5237082 0.5635509 #>   [74,] 0.9470885 0.9779822 1.0129587 #>   [75,] 0.5990171 0.6098017 0.6144892 #>   [76,] 0.5953002 0.6128149 0.6135434 #>   [77,] 0.5607080 0.6527787 0.6877265 #>   [78,] 0.5357776 0.5617833 0.5903267 #>   [79,] 0.7854694 0.8062140 0.8121136 #>   [80,] 0.9891183 0.9941969 0.9993140 #>   [81,] 0.5521847 0.5686514 0.5835483 #>   [82,] 1.2409497 1.2821540 1.3338516 #>   [83,] 1.3557836 1.3559887 1.3816546 #>   [84,] 1.1189773 1.1394716 1.2007114 #>   [85,] 0.6464739 0.6472974 0.6520667 #>   [86,] 0.8236488 0.8243628 0.8298920 #>   [87,] 0.7494334 0.7898359 0.8762251 #>   [88,] 0.7067036 0.7517859 0.7558175 #>   [89,] 0.6324472 0.6384841 0.6393787 #>   [90,] 0.5765781 0.6253036 0.6467292 #>   [91,] 0.6217369 0.6738939 0.6883190 #>   [92,] 0.9049822 0.9530349 1.0050902 #>   [93,] 0.5503597 0.5701566 0.5904144 #>   [94,] 1.1755510 1.2042861 1.2316526 #>   [95,] 0.9724045 0.9812174 0.9884258 #>   [96,] 0.9592701 0.9728378 1.0266564 #>   [97,] 0.5480974 0.5812286 0.6118587 #>   [98,] 0.5246272 0.5265085 0.5475677 #>   [99,] 0.8461130 0.8477330 0.8717503 #>  [100,] 0.7628803 0.7824819 0.7993370 #>  [101,] 1.7962282 1.8124344 1.8204522 #>  [102,] 0.4446164 0.4626767 0.4765493 #>  [103,] 1.6171545 1.6189861 1.6381932 #>  [104,] 0.7240607 0.7821695 0.8235358 #>  [105,] 0.5712901 0.5985136 0.6067016 #>  [106,] 0.8766191 0.8782562 0.8872883 #>  [107,] 1.3221504 1.3258106 1.3595579 #>  [108,] 1.2497242 1.2797769 1.2847999 #>  [109,] 0.6307679 0.6548610 0.6825140 #>  [110,] 0.5077163 0.5152366 0.5201796 #>  [111,] 0.5897513 0.6775438 0.7249468 #>  [112,] 0.8716588 0.9054262 0.9855289 #>  [113,] 0.8448758 0.8714976 0.9142557 #>  [114,] 0.7288252 0.8052105 0.8151615 #>  [115,] 0.6718406 0.6722277 0.6948328 #>  [116,] 0.8939690 0.9073273 0.9459113 #>  [117,] 1.1866277 1.2049009 1.2131600 #>  [118,] 0.9652541 0.9756351 0.9942206 #>  [119,] 0.5998649 0.6091943 0.6123165 #>  [120,] 0.6872129 0.7097586 0.7301151 #>  [121,] 0.7390389 0.7604702 0.7630935 #>  [122,] 0.4938862 0.4983489 0.5466885 #>  [123,] 0.9209192 0.9381286 0.9578028 #>  [124,] 1.2576783 1.3457942 1.3543061 #>  [125,] 0.8000203 0.8167809 0.8301323 #>  [126,] 0.8340372 0.8514435 0.8515045 #>  [127,] 0.5103176 0.5475948 0.5882427 #>  [128,] 0.5827694 0.5828899 0.5951991 #>  [129,] 0.6340862 0.6482273 0.6507316 #>  [130,] 0.7738277 0.8869694 0.8988091 #>  [131,] 0.6822141 0.6939493 0.6992247 #>  [132,] 0.6574931 0.7422702 0.7461058 #>  [133,] 0.9973896 1.0184821 1.0237132 #>  [134,] 1.1486590 1.1613028 1.1837634 #>  [135,] 0.6238170 0.6395035 0.6520195 #>  [136,] 1.0973044 1.1709569 1.2332039 #>  [137,] 0.6108532 0.6429611 0.6630001 #>  [138,] 0.5521847 0.5843494 0.6012981 #>  [139,] 0.7308439 0.7434359 0.7581942 #>  [140,] 1.3928817 1.4068608 1.4439310 #>  [141,] 0.6609668 0.6850597 0.7299244 #>  [142,] 0.5915916 0.6050565 0.6077914 #>  [143,] 0.5823034 0.5947904 0.6019534 #>  [144,] 0.5553071 0.5645280 0.6446181 #>  [145,] 0.6940500 0.7282091 0.7310340 #>  [146,] 0.5495635 0.5514685 0.5826591 #>  [147,] 0.7611104 0.8040045 0.8043343 #>  [148,] 0.6495392 0.6776919 0.6854624 #>  [149,] 0.7480650 0.8191044 0.8823637 #>  [150,] 0.5411869 0.5502896 0.5583409 #>  [151,] 0.7180998 0.7336379 0.7341086 #>  [152,] 1.1912636 1.2095629 1.2352239 #>  [153,] 0.5758092 0.6116671 0.6165203 #>  [154,] 0.7524017 0.7819264 0.7953267 #>  [155,] 0.6733962 0.6810368 0.6899465 #>  [156,] 0.6521463 0.6840823 0.7100448 #>  [157,] 1.3620943 1.3688559 1.3708892 #>  [158,] 0.5600066 0.6737385 0.6776919 #>  [159,] 0.5901161 0.5951493 0.6357927 #>  [160,] 0.8658120 0.8981545 0.9256894 #>  [161,] 0.7964822 0.7980622 0.8108124 #>  [162,] 0.5224324 0.5541192 0.5592968 #>  [163,] 1.1540350 1.1687959 1.1734590 #>  [164,] 1.0675792 1.1022426 1.1054776 #>  [165,] 1.1229310 1.1440999 1.1454136 #>  [166,] 0.8308600 0.8457055 0.8557414 #>  [167,] 0.5969554 0.5991155 0.6028723 #>  [168,] 1.3838868 1.3842514 1.3956961 #>  [169,] 0.8712192 0.9154238 0.9272356 #>  [170,] 0.7390389 0.7535997 0.7970432 #>  [171,] 0.6023530 0.6238119 0.6355553 #>  [172,] 0.7766402 0.7777657 0.7899675 #>  [173,] 0.5313566 0.5754902 0.5769897 #>  [174,] 0.5431463 0.5839871 0.6055436 #>  [175,] 0.9994798 1.0213772 1.0685104 #>  [176,] 0.8997026 0.9091246 0.9232706 #>  [177,] 0.7352546 0.7384616 0.7423913 #>  [178,] 0.6937898 0.6945931 0.7143432 #>  [179,] 1.0741032 1.0937999 1.0980578 #>  [180,] 0.5416264 0.5501798 0.5502562 #>  [181,] 0.9843336 1.0336066 1.0590858 #>  [182,] 0.6091943 0.6363898 0.6373057 #>  [183,] 0.7003897 0.7075189 0.7136140 #>  [184,] 0.9884055 1.0074228 1.0174219 #>  [185,] 0.8916240 0.8993724 0.9282640 #>  [186,] 0.6490195 0.6628685 0.6681492 #>  [187,] 1.2156100 1.2544759 1.2724148 #>  [188,] 0.7837702 0.8218098 0.8225141 #>  [189,] 0.7619641 0.8015365 0.8407601 #>  [190,] 1.0560959 1.1273738 1.1434620 #>  [191,] 0.8261643 0.8521884 0.9099727 #>  [192,] 1.1566105 1.1855532 1.1886661 #>  [193,] 0.9440280 0.9661984 0.9921918 #>  [194,] 0.8645134 0.8670063 0.9061379 #>  [195,] 0.5188817 0.5238636 0.5719127 #>  [196,] 0.8252084 0.8782798 0.8829206 #>  [197,] 0.6393644 0.7216211 0.7395698 #>  [198,] 0.9058586 0.9194339 0.9787950 #>  [199,] 0.9836911 1.0023737 1.0260539 #>  [200,] 0.8919486 0.9284428 0.9431832 #>  [201,] 0.5982558 0.6336967 0.6477662 #>  [202,] 0.8238807 0.8295729 0.8532570 #>  [203,] 0.3975459 0.4535849 0.4674355 #>  [204,] 0.8965174 0.8982999 0.8993036 #>  [205,] 0.5746819 0.5860547 0.5897513 #>  [206,] 0.7902742 0.8046735 0.8447648 #>  [207,] 0.6917758 0.7283993 0.7666928 #>  [208,] 0.5911413 0.5921035 0.5962793 #>  [209,] 0.8112749 0.8424908 0.8805676 #>  [210,] 0.5499103 0.5552143 0.5724341 #>  [211,] 0.7664883 0.7766420 0.8158615 #>  [212,] 0.7401987 0.7662884 0.7797529 #>  [213,] 0.6575542 0.6580014 0.6768431 #>  [214,] 1.2166165 1.2253165 1.2261671 #>  [215,] 0.6186600 0.6671991 0.6732922 #>  [216,] 0.7398366 0.7403294 0.7425097 #>  [217,] 0.5989056 0.6023753 0.6490482 #>  [218,] 0.5521809 0.5585820 0.6238076 #>  [219,] 0.5268149 0.5624969 0.5636207 #>  [220,] 1.1284222 1.1794205 1.1963549 #>  [221,] 0.6613447 0.6957399 0.7197768 #>  [222,] 0.7376104 0.7534260 0.7571064 #>  [223,] 1.1254497 1.1310411 1.1359482 #>  [224,] 0.5717071 0.5998148 0.6373057 #>  [225,] 0.7136713 0.7231501 0.7289041 #>  [226,] 0.6541174 0.7063086 0.7362559 #>  [227,] 0.7185699 0.7271226 0.7680247 #>  [228,] 1.2394236 1.2587553 1.3192218 #>  [229,] 0.9253467 0.9658028 0.9916496 #>  [230,] 0.9420330 0.9539283 0.9658795 #>  [231,] 0.8630664 0.8804020 0.8901090 #>  [232,] 0.4850090 0.5162538 0.5226281 #>  [233,] 0.6355172 0.6559131 0.6857133 #>  [234,] 0.8232688 0.8362491 0.8615428 #>  [235,] 0.5794818 0.5823488 0.5878504 #>  [236,] 0.8986594 0.9156674 0.9355886 #>  [237,] 0.6070168 0.6146959 0.6385568 #>  [238,] 0.7800092 0.7919962 0.8261697 #>  [239,] 0.6446008 0.6517779 0.6528180 #>  [240,] 0.5903636 0.6649502 0.6650598 #>  [241,] 1.5181657 1.5191653 1.6806529 #>  [242,] 1.1709452 1.2108411 1.2212352 #>  [243,] 0.9794785 1.0148312 1.0588020 #>  [244,] 0.8228033 0.9406653 0.9412112 #>  [245,] 0.7355959 0.7427091 0.8169518 #>  [246,] 0.6605395 0.7010432 0.7101375 #>  [247,] 0.5724341 0.5965084 0.6013598 #>  [248,] 0.6581380 0.6864811 0.7007856 #>  [249,] 0.7468705 0.7483195 0.7560462 #>  [250,] 0.4474640 0.4590751 0.4597129 #>  [251,] 0.8388607 0.9121455 0.9395272 #>  [252,] 0.6237672 0.6324957 0.6378056 #>  [253,] 1.1115367 1.1695811 1.2465492 #>  [254,] 0.8507018 0.8815974 0.9280725 #>  [255,] 0.5880765 0.6234843 0.6359189 #>  [256,] 0.7837060 0.7840352 0.8021130 #>  [257,] 0.7432229 0.7474043 0.7781482 #>  [258,] 0.8157246 0.8163470 0.8207238 #>  [259,] 1.0071526 1.0514318 1.0816304 #>  [260,] 0.7723188 0.8073125 0.8125567 #>  [261,] 0.7733659 0.7765029 0.7781799 #>  [262,] 0.8045442 0.8443363 0.8512293 #>  [263,] 0.6691929 0.6805346 0.7250852 #>  [264,] 0.5409081 0.5479479 0.5533832 #>  [265,] 0.6240639 0.6376946 0.6383766 #>  [266,] 0.6140820 0.6224795 0.6236054 #>  [267,] 0.7967967 0.8110177 0.8293811 #>  [268,] 0.5538449 0.5592717 0.5692131 #>  [269,] 1.3894109 1.3983734 1.4073322 #>  [270,] 0.6532931 0.6535509 0.6603980 #>  [271,] 0.6954934 0.8071532 0.8544645 #>  [272,] 0.7997930 0.8001390 0.8008286 #>  [273,] 0.7323858 0.7352067 0.7820764 #>  [274,] 0.5457597 0.5458660 0.5603155 #>  [275,] 0.6593882 0.6684101 0.6983498 #>  [276,] 1.5282590 1.5432321 1.5518024 #>  [277,] 0.7831023 0.8821525 0.8906814 #>  [278,] 0.5610538 0.5769897 0.6043345 #>  [279,] 0.8457055 0.8582436 0.9107608 #>  [280,] 0.5585820 0.5978585 0.6342586 #>  [281,] 0.5753703 0.6876870 0.7038946 #>  [282,] 0.7290462 0.8648736 0.8648975 #>  [283,] 0.6778300 0.6789222 0.7318722 #>  [284,] 0.9411683 0.9855289 1.0050375 #>  [285,] 0.7043195 0.7432437 0.7502960 #>  [286,] 1.3651561 1.3892015 1.3943802 #>  [287,] 1.2771909 1.2880192 1.3741400 #>  [288,] 1.5075022 1.5866471 1.6241959 #>  [289,] 1.1508820 1.2054700 1.2060725 #>  [290,] 0.8510004 0.8512387 0.8942729 #>  [291,] 0.6606663 0.6876140 0.7072640 #>  [292,] 0.6391744 0.6506912 0.6697097 #>  [293,] 0.8054279 0.8070900 0.8415829 #>  [294,] 0.6004037 0.6064343 0.6525837 #>  [295,] 0.5946605 0.6109984 0.6217659 #>  [296,] 0.5564219 0.5682669 0.5785664 #>  [297,] 0.5121810 0.5405678 0.5407712 #>  [298,] 0.8108245 0.8151554 0.8167585 #>  [299,] 0.4839062 0.4925744 0.5149030 #>  [300,] 0.7401987 0.7627323 0.7641001 #>  [301,] 0.5626776 0.6190075 0.6316696 #>  [302,] 0.6929260 0.7291426 0.7316196 #>  [303,] 1.9051118 1.9100229 1.9334947 #>  [304,] 0.5817847 0.5997890 0.6207748 #>  [305,] 0.5720249 0.5837491 0.5898708 #>  [306,] 0.5965174 0.6005517 0.6137788 #>  [307,] 1.0034240 1.0314873 1.0320467 #>  [308,] 0.8265704 0.8445410 0.8636050 #>  [309,] 0.8943133 0.9098371 0.9781398 #>  [310,] 0.6571992 0.6586063 0.6722925 #>  [311,] 0.8053866 0.8088441 0.8141323 #>  [312,] 0.9904840 1.0488026 1.0567316 #>  [313,] 0.6881557 0.7582715 0.7591426 #>  [314,] 0.5568581 0.5827694 0.6204041 #>  [315,] 0.6862337 0.7001198 0.7561484 #>  [316,] 0.8492696 0.8711605 0.8899702 #>  [317,] 0.7655117 0.7722215 0.7753759 #>  [318,] 0.6363898 0.6404232 0.6509156 #>  [319,] 0.6670985 0.6672640 0.6962625 #>  [320,] 0.8233239 0.8242852 0.8484660 #>  [321,] 0.6495988 0.6508068 0.6542615 #>  [322,] 1.0180832 1.0250659 1.0266634 #>  [323,] 0.6837625 0.6928143 0.6936870 #>  [324,] 0.7342534 0.7540028 0.7679974 #>  [325,] 0.6308780 0.6407043 0.6508068 #>  [326,] 0.9350917 0.9420448 0.9533092 #>  [327,] 0.6695906 0.6926156 0.7533284 #>  [328,] 1.0668279 1.0853428 1.2035339 #>  [329,] 0.8267822 0.8279529 0.8500662 #>  [330,] 0.6328065 0.6525837 0.6550373 #>  [331,] 0.6137788 0.6349687 0.6698618 #>  [332,] 0.7303193 0.7322579 0.7341715 #>  [333,] 0.8000697 0.8059705 0.8269345 #>  [334,] 0.5379070 0.5381997 0.5402068 #>  [335,] 0.4572627 0.4642517 0.4692709 #>  [336,] 1.1938257 1.2105804 1.2646468 #>  [337,] 0.8833182 0.8913455 0.9097912 #>  [338,] 0.8483925 0.8485289 0.8739361 #>  [339,] 0.9268745 0.9301437 0.9494924 #>  [340,] 0.5926610 0.6433268 0.6688616 #>  [341,] 0.6328652 0.6697167 0.6775438 #>  [342,] 0.6189582 0.6336426 0.6530868 #>  [343,] 0.9829755 0.9838940 1.0288515 #>  [344,] 0.5624027 0.5672823 0.5751450 #>  [345,] 0.5785100 0.5880912 0.6032128 #>  [346,] 0.7105605 0.7254459 0.7285652 #>  [347,] 0.6198076 0.6297758 0.6598254 #>  [348,] 0.8729183 0.8793803 0.9190275 #>  [349,] 0.5209098 0.5302664 0.5624052 #>  [350,] 0.8863619 0.9420280 0.9459780 #>  [351,] 0.8880786 0.9228884 0.9664693 #>  [352,] 1.3276280 1.3284202 1.3549191 #>  [353,] 1.0438588 1.0442103 1.0701039 #>  [354,] 0.7461058 0.7690134 0.7864186 #>  [355,] 0.7151664 0.7450731 0.7689244 #>  [356,] 0.5878504 0.5908810 0.6090971 #>  [357,] 0.6847809 0.8065705 0.8067604 #>  [358,] 1.0136404 1.0154122 1.0282789 #>  [359,] 1.0531656 1.0646987 1.1138957 #>  [360,] 1.0397803 1.0461697 1.0537380 #>  [361,] 0.4926647 0.5154537 0.5237127 #>  [362,] 0.9955914 1.0392933 1.0474345 #>  [363,] 0.8972945 0.8996744 0.9027318 #>  [364,] 0.9159105 0.9435594 0.9511380 #>  [365,] 0.7430718 0.7604702 0.7980560 #>  [366,] 0.5674692 0.5727376 0.6627259 #>  [367,] 1.0199524 1.0204548 1.0471335 #>  [368,] 0.5353742 0.5394586 0.5463735 #>  [369,] 0.8494756 0.8770611 0.8840677 #>  [370,] 0.9045793 0.9141658 0.9328294 #>  [371,] 0.8484185 0.8639459 0.9237728 #>  [372,] 0.7616295 0.7788900 0.8071625 #>  [373,] 0.5097656 0.5103176 0.5450248 #>  [374,] 0.6674362 0.6946062 0.8056381 #>  [375,] 0.7198688 0.7292259 0.7533332 #>  [376,] 0.7404467 0.7665664 0.7672032 #>  [377,] 0.8388834 0.8573182 0.8683734 #>  [378,] 0.7261603 0.7888915 0.8065603 #>  [379,] 1.1768365 1.2174035 1.2453905 #>  [380,] 1.2598092 1.3246854 1.3305341 #>  [381,] 0.8631331 0.8777154 0.8879424 #>  [382,] 0.8118543 0.8243492 0.8374920 #>  [383,] 0.7757223 0.7796205 0.8203172 #>  [384,] 0.8415829 0.8425422 0.8427918 #>  [385,] 0.6887134 0.6924916 0.6935413 #>  [386,] 0.6301571 0.6443765 0.6467538 #>  [387,] 0.6254812 0.6277603 0.6707994 #>  [388,] 0.9504140 0.9787950 0.9788155 #>  [389,] 0.7573177 0.7574468 0.7613383 #>  [390,] 0.6926296 0.7004906 0.7667403 #>  [391,] 1.1676943 1.2179838 1.2325915 #>  [392,] 0.8188247 0.8241835 0.8339341 #>  [393,] 0.8329418 0.8386294 0.8460252 #>  [394,] 0.7096210 0.7292739 0.7584514 #>  [395,] 1.4799383 1.5064008 1.5235157 #>  [396,] 1.1022143 1.1110085 1.1184343 #>  [397,] 0.7088534 0.7127603 0.7214720 #>  [398,] 0.7625693 0.7998142 0.8176899 #>  [399,] 0.7830381 0.8207924 0.8252420 #>  [400,] 1.2736809 1.3238208 1.3259648 #>  [401,] 0.7904562 0.8157185 0.8233814 #>  [402,] 0.9497575 0.9665054 0.9835361 #>  [403,] 0.9377258 1.0256769 1.0350779 #>  [404,] 0.6182421 0.6186630 0.6250949 #>  [405,] 1.3379349 1.3868488 1.4096641 #>  [406,] 0.6810388 0.7326497 0.7436179 #>  [407,] 0.8000203 0.8126316 0.8261912 #>  [408,] 0.6668383 0.6772600 0.7011845 #>  [409,] 0.5904144 0.6055436 0.6144892 #>  [410,] 0.6182368 0.6483972 0.6787011 #>  [411,] 0.7589513 0.7703605 0.7758075 #>  [412,] 0.7763655 0.7924663 0.8046182 #>  [413,] 0.7299407 0.7307987 0.7472007 #>  [414,] 1.2705682 1.3039116 1.3173147 #>  [415,] 1.3978243 1.4099353 1.4368023 #>  [416,] 0.7055470 0.7556795 0.7571401 #>  [417,] 0.8557944 0.9016194 0.9258674 #>  [418,] 0.6795702 0.6936138 0.7203690 #>  [419,] 0.5507127 0.5616786 0.5664522 #>  [420,] 0.5946564 0.6271226 0.6589521 #>  [421,] 1.2660488 1.2935256 1.3210175 #>  [422,] 1.0777358 1.1552969 1.2204435 #>  [423,] 0.5313030 0.5338943 0.5407712 #>  [424,] 0.9779007 1.0178157 1.0591399 #>  [425,] 0.8950220 0.9454731 0.9560139 #>  [426,] 1.0097005 1.0485973 1.1099787 #>  [427,] 0.6957399 0.7095744 0.7805514 #>  [428,] 1.3067943 1.3501308 1.3673162 #>  [429,] 0.8278941 0.8936291 0.9025688 #>  [430,] 0.7547116 0.7996885 0.8211158 #>  [431,] 0.7154578 0.7296091 0.7660701 #>  [432,] 0.7421226 0.7538467 0.8155186 #>  [433,] 0.5806314 0.5915916 0.6548079 #>  [434,] 0.6349687 0.6365637 0.6500784 #>  [435,] 0.8473934 0.8574420 0.9175749 #>  [436,] 0.6155368 0.6198042 0.6409345 #>  [437,] 0.4699607 0.5248791 0.5486645 #>  [438,] 1.0221971 1.0283199 1.0576939 #>  [439,] 1.4077905 1.4078477 1.4427959 #>  [440,] 0.4409665 0.4626767 0.4938862 #>  [441,] 0.9048603 0.9087658 0.9091246 #>  [442,] 1.1669433 1.1732456 1.1790484 #>  [443,] 0.5563468 0.5780151 0.5950256 #>  [444,] 0.9618237 0.9843987 1.0340714 #>  [445,] 1.6385503 1.6417239 1.6554494 #>  [446,] 0.7878675 0.7962567 0.7979834 #>  [447,] 2.0097095 2.0525425 2.0587405 #>  [448,] 1.1924949 1.2178915 1.2492241 #>  [449,] 0.5403095 0.5631900 0.5737795 #>  [450,] 1.6583900 1.7281786 1.7370262 #>  [451,] 0.6314860 0.6396309 0.6518001 #>  [452,] 1.3654383 1.3918685 1.4056749 #>  [453,] 0.6978221 0.7011060 0.7079638 #>  [454,] 1.0720183 1.1228689 1.1266475 #>  [455,] 0.5374261 0.5787567 0.5882427 #>  [456,] 0.5917679 0.6269757 0.6475247 #>  [457,] 1.0103346 1.0583478 1.0754355 #>  [458,] 0.7366074 0.7696810 0.8113648 #>  [459,] 0.5130750 0.5307737 0.5408275 #>  [460,] 0.5350491 0.5520000 0.5657748 #>  [461,] 0.8358193 0.8409993 0.8453590 #>  [462,] 1.3948239 1.4562316 1.4921572 #>  [463,] 0.5976927 0.6159258 0.6270187 #>  [464,] 0.7016635 0.7099575 0.7111202 #>  [465,] 0.9276422 0.9977400 1.0455170 #>  [466,] 1.1230235 1.1773242 1.1921464 #>  [467,] 0.5719470 0.6084708 0.6584985 #>  [468,] 0.5323596 0.5371743 0.6082670 #>  [469,] 0.6305895 0.6475206 0.6699390 #>  [470,] 0.3822591 0.4214002 0.4794289 #>  [471,] 0.6965180 0.7162136 0.7932884 #>  [472,] 1.2037354 1.2412579 1.2781834 #>  [473,] 1.1528347 1.1575442 1.1691273 #>  [474,] 0.6404232 0.6628817 0.6633204 #>  [475,] 1.3680536 1.3806925 1.4502315 #>  [476,] 0.7013151 0.7044657 0.7068683 #>  [477,] 0.7424823 0.8617070 0.8710939 #>  [478,] 0.6833299 0.7013946 0.7057739 #>  [479,] 0.5670320 0.5874698 0.6266317 #>  [480,] 0.5411971 0.5717583 0.5764336 #>  [481,] 0.8700075 0.8761098 0.8879985 #>  [482,] 0.6665749 0.6856635 0.6897393 #>  [483,] 0.7095349 0.7123296 0.7411007 #>  [484,] 1.2568529 1.3388399 1.3498595 #>  [485,] 0.6030901 0.6106986 0.6362282 #>  [486,] 1.3270357 1.3446570 1.3753723 #>  [487,] 0.6944722 0.6986781 0.7058085 #>  [488,] 0.7442717 0.7716297 0.8258617 #>  [489,] 0.8303598 0.8338579 0.8443118 #>  [490,] 1.5111890 1.5445189 1.5564387 #>  [491,] 1.4287770 1.4338115 1.4534610 #>  [492,] 0.6028583 0.6085813 0.6364568 #>  [493,] 1.2444039 1.2724466 1.2782419 #>  [494,] 0.9186961 0.9288731 0.9339130 #>  [495,] 0.5148448 0.5639078 0.6331913 #>  [496,] 0.9704159 0.9718047 0.9869484 #>  [497,] 0.5541192 0.5699598 0.5739698 #>  [498,] 1.2294258 1.2405399 1.2632070 #>  [499,] 0.5804832 0.6020497 0.6649769 #>  [500,] 0.6395914 0.6407729 0.6647554 #>  [501,] 1.2427244 1.2891885 1.3755788 #>  [502,] 0.5479711 0.5639078 0.5675280 #>  [503,] 1.5388021 1.6372228 1.6697375 #>  [504,] 0.7529697 0.7724098 0.7991795 #>  [505,] 1.5642651 1.5753041 1.5896113 #>  [506,] 0.9122109 0.9163889 0.9183538 #>  [507,] 0.9718225 0.9727489 0.9946086 #>  [508,] 0.7348817 0.7541810 0.7824822 #>  [509,] 0.8368484 0.8441140 0.8712227 #>  [510,] 0.7831023 0.8224706 0.8269345 #>  [511,] 1.2972052 1.2995585 1.3610271 #>  [512,] 0.7433959 0.7674406 0.8095525 #>  [513,] 0.4820203 0.4914494 0.5091375 #>  [514,] 0.5673960 0.6052295 0.6122315 #>  [515,] 0.4559979 0.4896020 0.4909026 #>  [516,] 0.4765648 0.5061745 0.5290541 #>  [517,] 0.5166929 0.5225545 0.5312450 #>  [518,] 0.7012764 0.7025821 0.7181508 #>  [519,] 0.6690963 0.6722143 0.7096344 #>  [520,] 0.5259640 0.5403095 0.5471192 #>  [521,] 0.7425617 0.7567662 0.7822832 #>  [522,] 0.5248791 0.5320507 0.5325069 #>  [523,] 0.9687019 0.9696667 1.0605354 #>  [524,] 0.5592717 0.5775316 0.6013149 #>  [525,] 0.7134244 0.7180454 0.7746114 #>  [526,] 0.6894268 0.6917122 0.7388943 #>  [527,] 1.5320355 1.5359497 1.5481314 #>  [528,] 0.6239519 0.6647352 0.6698996 #>  [529,] 0.8253294 0.8426068 0.8512405 #>  [530,] 0.9175670 0.9586984 0.9696410 #>  [531,] 0.5643394 0.6282007 0.6373988 #>  [532,] 0.7024892 0.7180089 0.7402136 #>  [533,] 0.9412042 0.9443775 0.9501321 #>  [534,] 0.6331913 0.6349211 0.6712309 #>  [535,] 0.4731234 0.5026104 0.5306004 #>  [536,] 0.5622579 0.5691711 0.5894259 #>  [537,] 1.3938269 1.4201260 1.4538800 #>  [538,] 2.1562114 2.1712210 2.1791550 #>  [539,] 0.5998649 0.6303169 0.6841752 #>  [540,] 1.2021338 1.2431104 1.2434704 #>  [541,] 0.8252084 0.8266875 0.8453320 #>  [542,] 1.1119488 1.1136882 1.1416424 #>  [543,] 0.7668405 0.7668689 0.7780350 #>  [544,] 1.2257260 1.2418458 1.3271819 #>  [545,] 0.9903867 1.0414513 1.0425481 #>  [546,] 0.7894660 0.7979414 0.8440595 #>  [547,] 1.4748032 1.5288034 1.6200355 #>  [548,] 0.8342098 0.8576379 0.8589755 #>  [549,] 0.8357769 0.8472275 0.8531945 #>  [550,] 0.8899300 0.9027397 0.9051167 #>  [551,] 0.7655653 0.7879630 0.8017048 #>  [552,] 0.6278000 0.6282079 0.6320861 #>  [553,] 0.7442717 0.7569825 0.7942681 #>  [554,] 0.6768602 0.6894267 0.7283503 #>  [555,] 0.4914494 0.5066574 0.5105818 #>  [556,] 0.6791070 0.6866979 0.7237962 #>  [557,] 0.7090876 0.7166298 0.7232070 #>  [558,] 0.6349871 0.6720933 0.6736528 #>  [559,] 0.8838416 0.8964731 0.9543999 #>  [560,] 0.7819956 0.8213843 0.8433024 #>  [561,] 0.8987376 0.9224726 0.9437928 #>  [562,] 0.5383853 0.5501868 0.5729807 #>  [563,] 1.6153224 1.6803922 1.7070157 #>  [564,] 0.9931664 1.0353998 1.0435389 #>  [565,] 1.1575457 1.2387429 1.2800923 #>  [566,] 1.7779091 1.7815292 1.8143845 #>  [567,] 0.8014217 0.8219595 0.8323921 #>  [568,] 0.6558496 0.6684397 0.6691929 #>  [569,] 0.5976967 0.6356963 0.6428138 #>  [570,] 0.8780852 0.8807945 0.8864215 #>  [571,] 1.5694029 1.6226836 1.6559844 #>  [572,] 1.8867064 1.8946499 1.8951040 #>  [573,] 0.7954502 0.8146452 0.8159977 #>  [574,] 0.5106542 0.5251450 0.5402068 #>  [575,] 0.9253467 0.9494333 0.9523070 #>  [576,] 0.5224575 0.5246025 0.5282306 #>  [577,] 0.8574534 0.8758765 0.9156594 #>  [578,] 0.6972932 0.7002176 0.7072410 #>  [579,] 0.7263034 0.7667228 0.7703424 #>  [580,] 1.1658215 1.2123779 1.2285181 #>  [581,] 0.9509007 0.9569566 0.9901120 #>  [582,] 0.6984653 0.7123291 0.7231011 #>  [583,] 0.6165135 0.6549497 0.6617059 #>  [584,] 0.6559082 0.6567545 0.6708039 #>  [585,] 1.2372009 1.2431104 1.3414206 #>  [586,] 0.8837551 0.8870166 0.8986792 #>  [587,] 1.1300497 1.1378241 1.1534381 #>  [588,] 0.9341930 0.9854642 0.9955070 #>  [589,] 0.7817602 0.7950334 0.8359405 #>  [590,] 0.8507018 0.8532815 0.8706052 #>  [591,] 0.6070573 0.6123936 0.6133793 #>  [592,] 0.6506767 0.6857493 0.6886219 #>  [593,] 1.1799360 1.2041982 1.2203544 #>  [594,] 0.9431895 1.0075567 1.0447846 #>  [595,] 1.2599315 1.2657402 1.2736123 #>  [596,] 0.7112562 0.7154578 0.7300252 #>  [597,] 0.9327264 0.9697106 0.9757561 #>  [598,] 0.5226653 0.5347778 0.6004037 #>  [599,] 0.7221886 0.7933000 0.7960978 #>  [600,] 0.5261021 0.5263663 0.5302476 #>  [601,] 0.7163910 0.7248237 0.7679930 #>  [602,] 0.7257560 0.7548418 0.7964255 #>  [603,] 0.8378586 0.8414736 0.8446556 #>  [604,] 0.9077201 0.9923359 1.0106972 #>  [605,] 0.6994948 0.7045753 0.7119669 #>  [606,] 0.5645280 0.5647955 0.5910950 #>  [607,] 1.4204439 1.4740305 1.4971383 #>  [608,] 1.5498688 1.6069093 1.7384498 #>  [609,] 0.9435022 0.9635824 0.9656355 #>  [610,] 0.5616786 0.5708692 0.6117274 #>  [611,] 1.2172076 1.2886264 1.3355435 #>  [612,] 0.5113881 0.5568581 0.5676932 #>  [613,] 1.1811073 1.2101745 1.2565012 #>  [614,] 0.8288751 0.8812426 0.9096677 #>  [615,] 0.5957393 0.6231754 0.6320876 #>  [616,] 0.6050565 0.6071182 0.6480847 #>  [617,] 0.7711614 0.7980622 0.8012313 #>  [618,] 0.5614452 0.6487696 0.6725718 #>  [619,] 0.5817847 0.6002829 0.6276241 #>  [620,] 0.8364844 0.8494256 0.8512405 #>  [621,] 0.7005655 0.7149314 0.7576389 #>  [622,] 0.9959242 1.0071526 1.0788781 #>  [623,] 1.0235715 1.0478058 1.0535272 #>  [624,] 0.7768493 0.7793272 0.8205517 #>  [625,] 1.1115848 1.1248822 1.1475012 #>  [626,] 0.5346923 0.5503597 0.5520000 #>  [627,] 0.6558496 0.6659052 0.7765029 #>  [628,] 1.0708415 1.1446938 1.2266482 #>  [629,] 0.6829279 0.7051407 0.7155856 #>  [630,] 0.7140941 0.7149278 0.7381929 #>  [631,] 0.9039229 0.9152130 0.9270557 #>  [632,] 0.5377479 0.5674692 0.6032168 #>  [633,] 0.6707994 0.6877516 0.7379386 #>  [634,] 0.6339956 0.6650379 0.6674789 #>  [635,] 0.6655739 0.6722275 0.7188234 #>  [636,] 1.2039409 1.2538158 1.3004335 #>  [637,] 0.9567400 0.9805564 1.0181206 #>  [638,] 1.7680531 1.7727131 1.8282199 #>  [639,] 0.7118041 0.7131544 0.7225123 #>  [640,] 0.7567525 0.7756439 0.7817602 #>  [641,] 0.5957012 0.6084708 0.6490912 #>  [642,] 0.6071488 0.6660500 0.6773838 #>  [643,] 0.5670320 0.5772271 0.6008826 #>  [644,] 0.6868794 0.6977937 0.7150017 #>  [645,] 0.7461080 0.7604850 0.7808844 #>  [646,] 0.6266361 0.6314365 0.6341940 #>  [647,] 0.7385297 0.7404467 0.7519838 #>  [648,] 0.8369020 0.8398624 0.8476542 #>  [649,] 0.4740971 0.4755505 0.5060454 #>  [650,] 1.7220624 1.7519612 1.7616198 #>  [651,] 0.4828149 0.5392326 0.5533832 #>  [652,] 0.6740843 0.6871881 0.7243692 #>  [653,] 0.5535769 0.5727801 0.5891104 #>  [654,] 1.0375054 1.0590858 1.0765221 #>  [655,] 0.8332197 0.8422317 0.8527906 #>  [656,] 1.0206574 1.0517808 1.0649530 #>  [657,] 0.7398995 0.8453590 0.8595941 #>  [658,] 0.8261406 0.8307582 0.8373647 #>  [659,] 0.7806629 0.7927973 0.7979414 #>  [660,] 0.5940258 0.6013404 0.6245413 #>  [661,] 1.0329767 1.0371129 1.0452618 #>  [662,] 0.7318016 0.7900017 0.7961905 #>  [663,] 0.4782290 0.4993475 0.5221172 #>  [664,] 0.6718837 0.6856635 0.7067344 #>  [665,] 0.6518001 0.6655306 0.6815493 #>  [666,] 1.1155896 1.1403134 1.1439860 #>  [667,] 0.5810267 0.5871655 0.6011670 #>  [668,] 0.7238108 0.7438533 0.7550931 #>  [669,] 1.0504722 1.0550247 1.0723984 #>  [670,] 0.9731496 0.9735136 0.9877512 #>  [671,] 1.0529481 1.0845242 1.1297322 #>  [672,] 0.8843676 0.8887155 0.9268679 #>  [673,] 0.6216648 0.6479959 0.6746208 #>  [674,] 0.5251450 0.5284033 0.5484489 #>  [675,] 0.7403855 0.7486979 0.7514374 #>  [676,] 0.6969275 0.7127841 0.7689411 #>  [677,] 0.7326497 0.7373563 0.7384600 #>  [678,] 0.6684066 0.6699390 0.6867790 #>  [679,] 0.7660027 0.7884803 0.7889959 #>  [680,] 0.6324472 0.6806701 0.6925097 #>  [681,] 0.6062568 0.6252554 0.6853151 #>  [682,] 0.7331707 0.7955418 0.8179501 #>  [683,] 1.0878071 1.1123559 1.1526806 #>  [684,] 0.5940258 0.6229879 0.6271196 #>  [685,] 0.8574649 0.8976148 0.9387797 #>  [686,] 0.7263605 0.7401842 0.7438612 #>  [687,] 1.3116721 1.3278361 1.3876646 #>  [688,] 0.6817233 0.6931311 0.7211141 #>  [689,] 1.0200061 1.0265487 1.0418415 #>  [690,] 0.7148179 0.7231723 0.7243780 #>  [691,] 0.6315268 0.6431302 0.6574496 #>  [692,] 1.0381903 1.0520745 1.0933699 #>  [693,] 0.9025787 0.9038915 0.9198327 #>  [694,] 0.6214294 0.6753017 0.7139887 #>  [695,] 1.1763199 1.1795062 1.2006747 #>  [696,] 0.6034387 0.6123165 0.6987542 #>  [697,] 1.4813297 1.6121141 1.7260634 #>  [698,] 0.6417307 0.6438171 0.6462949 #>  [699,] 0.8838049 0.9152433 0.9183538 #>  [700,] 0.7079312 0.7122314 0.7785440 #>  [701,] 1.2274216 1.3371795 1.3521911 #>  [702,] 0.6383516 0.6398683 0.6559131 #>  [703,] 0.8225748 0.8324250 0.8455299 #>  [704,] 0.5142809 0.5876460 0.6074908 #>  [705,] 0.5373668 0.5540923 0.5664522 #>  [706,] 0.5765510 0.5853877 0.6001879 #>  [707,] 0.6937080 0.7006146 0.7421462 #>  [708,] 0.6238756 0.6882597 0.6976726 #>  [709,] 0.8374410 0.9248079 0.9406653 #>  [710,] 0.7652198 0.8181279 0.8206264 #>  [711,] 0.5948992 0.5976967 0.6158515 #>  [712,] 0.9381280 0.9597892 0.9664203 #>  [713,] 1.0555835 1.0615033 1.0912192 #>  [714,] 0.8848121 0.9112138 0.9500410 #>  [715,] 1.0850121 1.0871142 1.0940913 #>  [716,] 0.7843407 0.8227103 0.8617159 #>  [717,] 0.4696288 0.4699835 0.4738325 #>  [718,] 0.5210939 0.5921035 0.6556833 #>  [719,] 1.0706496 1.0765221 1.1663353 #>  [720,] 0.8406039 0.8808923 0.8958698 #>  [721,] 0.8506859 0.8674290 0.8749529 #>  [722,] 1.1576949 1.1636063 1.1886189 #>  [723,] 0.7265791 0.7418144 0.7951605 #>  [724,] 0.7665664 0.8252081 0.8266375 #>  [725,] 0.6844479 0.6874830 0.7128726 #>  [726,] 0.9559077 1.1242090 1.1646467 #>  [727,] 0.7351015 0.7832581 0.8303848 #>  [728,] 0.9923359 1.0102435 1.0381903 #>  [729,] 1.4331600 1.4771536 1.4932030 #>  [730,] 0.6936138 0.7290462 0.7386993 #>  [731,] 0.5865848 0.5928012 0.5935847 #>  [732,] 0.8202470 0.8342600 0.8562082 #>  [733,] 0.6299515 0.7325734 0.7354251 #>  [734,] 2.0558621 2.0864969 2.1005553 #>  [735,] 0.6088727 0.6541174 0.6590748 #>  [736,] 1.2058457 1.2621229 1.2702962 #>  [737,] 1.1890757 1.2943075 1.2991210 #>  [738,] 0.5636207 0.5829550 0.6010974 #>  [739,] 1.2999900 1.3123376 1.3535130 #>  [740,] 0.5961094 0.6115983 0.6147504 #>  [741,] 1.1292652 1.1476807 1.1993746 #>  [742,] 0.6389123 0.6490562 0.6605395 #>  [743,] 0.5694909 0.6220328 0.6521282 #>  [744,] 0.6801958 0.6913184 0.7516634 #>  [745,] 0.7373071 0.7444701 0.7774382 #>  [746,] 0.5555416 0.5618440 0.5831496 #>  [747,] 1.3390375 1.3843793 1.4050764 #>  [748,] 0.7693490 0.7886514 0.8007839 #>  [749,] 1.2160325 1.2310418 1.2612687 #>  [750,] 0.7772398 0.7835136 0.7853064 #>  [751,] 0.6469686 0.6871881 0.6893706 #>  [752,] 1.0467176 1.0487921 1.0535688 #>  [753,] 0.7115954 0.7243692 0.7353212 #>  [754,] 1.0067329 1.1439401 1.1663841 #>  [755,] 0.7445498 0.8205199 0.8258803 #>  [756,] 0.5692131 0.5878257 0.6048488 #>  [757,] 1.5059130 1.5141408 1.5370495 #>  [758,] 0.7022300 0.7040191 0.7266179 #>  [759,] 2.0418621 2.1325963 2.2567825 #>  [760,] 0.5918048 0.5966892 0.6095008 #>  [761,] 0.5413950 0.5472648 0.5751142 #>  [762,] 0.5384481 0.5705695 0.5868046 #>  [763,] 0.8146452 0.8153426 0.8235265 #>  [764,] 0.6850527 0.6924807 0.7120703 #>  [765,] 1.1885719 1.2018503 1.2018910 #>  [766,] 1.3260409 1.3341675 1.3347847 #>  [767,] 0.6248858 0.6631087 0.6670681 #>  [768,] 0.9237803 0.9821653 1.0128317 #>  [769,] 0.8028055 0.8115816 0.8469829 #>  [770,] 1.3735787 1.4586779 1.4587643 #>  [771,] 1.0487313 1.1115367 1.1278697 #>  [772,] 0.6377302 0.7069487 0.7291969 #>  [773,] 0.9324725 0.9695837 1.0005072 #>  [774,] 0.7340137 0.7686250 0.7910865 #>  [775,] 0.7437403 0.7456979 0.7878617 #>  [776,] 0.6409072 0.6948549 0.7067249 #>  [777,] 0.7257133 0.7526207 0.8145793 #>  [778,] 0.5142809 0.5245879 0.5252494 #>  [779,] 0.6242367 0.6256287 0.6328125 #>  [780,] 0.6837660 0.6874830 0.7228639 #>  [781,] 0.8125125 0.8322545 0.8503036 #>  [782,] 0.5561102 0.5578403 0.5763036 #>  [783,] 0.5896110 0.5958654 0.6104892 #>  [784,] 0.7866859 0.7935557 0.7964822 #>  [785,] 0.6916844 0.7073426 0.7114112 #>  [786,] 0.6074524 0.6283285 0.6525452 #>  [787,] 0.8485117 0.8661158 0.8681542 #>  [788,] 0.7669146 0.7704553 0.7730321 #>  [789,] 0.7936552 0.8056731 0.8282903 #>  [790,] 0.7768582 0.7846403 0.7865361 #>  [791,] 0.9218025 0.9309645 0.9834923 #>  [792,] 0.7310340 0.7395698 0.7413927 #>  [793,] 0.5268015 0.5320507 0.5456090 #>  [794,] 0.6962281 0.7052326 0.7597433 #>  [795,] 0.7230854 0.7567452 0.7898359 #>  [796,] 1.4279747 1.4767257 1.4891995 #>  [797,] 0.5369971 0.6397847 0.6429611 #>  [798,] 0.7756439 0.7789369 0.7825231 #>  [799,] 1.3097582 1.4824465 1.5489940 #>  [800,] 0.7162136 0.7266179 0.7296064 #>  [801,] 0.4948228 0.5717583 0.5764634 #>  [802,] 0.9185322 0.9380741 0.9420223 #>  [803,] 0.6465218 0.6621150 0.6682168 #>  [804,] 0.6172237 0.6478300 0.6539777 #>  [805,] 1.8593783 1.8708800 1.9053267 #>  [806,] 0.7604921 0.7642574 0.7730720 #>  [807,] 0.7662884 0.7721703 0.7889959 #>  [808,] 0.5115099 0.5396213 0.5483203 #>  [809,] 1.0282668 1.0382065 1.0560935 #>  [810,] 0.5475677 0.5502896 0.5973181 #>  [811,] 1.1429708 1.1613028 1.2231753 #>  [812,] 0.6638050 0.6828485 0.6834797 #>  [813,] 0.9778346 1.0510234 1.1124590 #>  [814,] 1.2542723 1.3124297 1.3212982 #>  [815,] 0.7370478 0.7417071 0.7623365 #>  [816,] 0.8667483 0.8711702 0.8878093 #>  [817,] 0.6253059 0.6553342 0.6873358 #>  [818,] 0.8282982 0.8362473 0.8699008 #>  [819,] 0.9744774 0.9890063 1.0132698 #>  [820,] 0.6783649 0.7362620 0.7444487 #>  [821,] 0.6621150 0.6987482 0.7166870 #>  [822,] 0.9290550 1.0580104 1.0725154 #>  [823,] 1.0468094 1.0712767 1.0978278 #>  [824,] 0.6427528 0.6436058 0.6524632 #>  [825,] 0.6817233 0.7111853 0.7402580 #>  [826,] 0.5284033 0.5541392 0.5699656 #>  [827,] 1.3117818 1.3270609 1.3359374 #>  [828,] 0.6628685 0.6713565 0.6810039 #>  [829,] 0.8527906 0.8812073 0.9528009 #>  [830,] 0.6828485 0.6850597 0.6959316 #>  [831,] 0.8301323 0.8712192 0.9245956 #>  [832,] 0.6132856 0.6421572 0.6431027 #>  [833,] 0.7869176 0.8055432 0.8226591 #>  [834,] 1.2076362 1.2278662 1.2417090 #>  [835,] 0.7902266 0.8018794 0.8600771 #>  [836,] 0.7864186 0.7935557 0.8255778 #>  [837,] 0.7262376 0.7844301 0.7885148 #>  [838,] 1.4799255 1.5037535 1.5076612 #>  [839,] 0.5764634 0.6651793 0.6815833 #>  [840,] 0.6878447 0.6985192 0.7296800 #>  [841,] 0.4934944 0.5391688 0.5655502 #>  [842,] 1.0560959 1.0712848 1.0853428 #>  [843,] 0.7249468 0.7366193 0.7376150 #>  [844,] 0.7874349 0.7950016 0.8099821 #>  [845,] 0.7664371 0.7807477 0.8116326 #>  [846,] 0.6358013 0.6442066 0.6576187 #>  [847,] 0.4486907 0.4983990 0.4999563 #>  [848,] 0.9207612 0.9276422 0.9540991 #>  [849,] 0.4063097 0.4590751 0.4740971 #>  [850,] 0.6394717 0.6588610 0.6600258 #>  [851,] 0.8149142 0.8428174 0.8796094 #>  [852,] 0.6049990 0.6198042 0.6272176 #>  [853,] 0.9851428 1.0335664 1.0680627 #>  [854,] 1.0029237 1.0044478 1.0091058 #>  [855,] 0.9468798 0.9500668 0.9856499 #>  [856,] 1.1343272 1.1434065 1.1500361 #>  [857,] 0.9434459 0.9806701 0.9911303 #>  [858,] 0.6657246 0.6823429 0.6984509 #>  [859,] 0.9392122 1.0334538 1.0380556 #>  [860,] 0.6851883 0.6919852 0.7095744 #>  [861,] 0.7763655 0.7913457 0.8270811 #>  [862,] 0.6989579 0.7134870 0.7771113 #>  [863,] 0.7291426 0.7341086 0.7359247 #>  [864,] 1.2080432 1.2282035 1.3640246 #>  [865,] 0.7292787 0.7359247 0.8104232 #>  [866,] 0.8350270 0.8828692 0.8838416 #>  [867,] 1.6801516 1.7936242 1.8107486 #>  [868,] 0.7664883 0.7692705 0.7853750 #>  [869,] 0.6256287 0.6405012 0.6438171 #>  [870,] 0.9159168 0.9412794 0.9424081 #>  [871,] 0.4008547 0.4421991 0.4654775 #>  [872,] 1.5398663 1.5488528 1.5865198 #>  [873,] 0.5946995 0.5961094 0.5985655 #>  [874,] 1.2174384 1.2866041 1.3608177 #>  [875,] 0.6989579 0.7028270 0.7502891 #>  [876,] 1.1007515 1.1159988 1.1618348 #>  [877,] 0.9267543 0.9303417 0.9985390 #>  [878,] 0.7707595 0.7796337 0.8207193 #>  [879,] 0.7728698 0.8062140 0.8064596 #>  [880,] 0.9699226 1.0045098 1.0449545 #>  [881,] 0.8332732 0.8572955 0.8811205 #>  [882,] 0.7810091 0.7894367 0.8153426 #>  [883,] 0.7170823 0.7352067 0.7384600 #>  [884,] 0.5624806 0.5863302 0.6213767 #>  [885,] 0.9655477 0.9727644 1.0023837 #>  [886,] 0.6547229 0.6760726 0.6837625 #>  [887,] 0.6487290 0.6680559 0.7312532 #>  [888,] 0.8688664 0.9291881 0.9494333 #>  [889,] 1.3239755 1.3330514 1.3419673 #>  [890,] 0.4841708 0.5299665 0.5941560 #>  [891,] 1.1557669 1.2092693 1.2211860 #>  [892,] 0.5427501 0.5509455 0.5757741 #>  [893,] 1.0055165 1.1019036 1.1303557 #>  [894,] 1.5957744 1.6656746 1.6704343 #>  [895,] 0.5313030 0.5411869 0.5432273 #>  [896,] 1.3521568 1.3854506 1.3989331 #>  [897,] 1.2729158 1.2869336 1.3173147 #>  [898,] 1.3501308 1.4088867 1.4431790 #>  [899,] 0.5130520 0.5265425 0.5344388 #>  [900,] 0.6500784 0.6550834 0.6594093 #>  [901,] 0.9341268 0.9882515 1.0482291 #>  [902,] 0.6887986 0.6949705 0.7101375 #>  [903,] 1.8382930 1.8593577 1.8821169 #>  [904,] 0.8450184 0.8584939 0.8900323 #>  [905,] 1.3352933 1.3647099 1.3707155 #>  [906,] 0.6124874 0.6452023 0.6502552 #>  [907,] 0.6015697 0.6057881 0.6303679 #>  [908,] 0.7397444 0.7589513 0.7761755 #>  [909,] 1.1331706 1.1684123 1.2233917 #>  [910,] 0.7708239 0.8088441 0.8090672 #>  [911,] 0.7564921 0.8313556 0.8853633 #>  [912,] 0.5590943 0.5693136 0.6010974 #>  [913,] 0.5705695 0.5990171 0.5997920 #>  [914,] 0.6483972 0.6809148 0.6938318 #>  [915,] 1.1443646 1.1713342 1.1896728 #>  [916,] 0.7747097 0.7772398 0.8024150 #>  [917,] 0.7302801 0.7417071 0.7470587 #>  [918,] 0.6165999 0.6218071 0.6254043 #>  [919,] 0.6983487 0.8245811 0.8574372 #>  [920,] 1.0107482 1.0956074 1.1528632 #>  [921,] 0.5968568 0.6036069 0.6052295 #>  [922,] 0.7816347 0.8317877 0.8353579 #>  [923,] 0.7042752 0.7556773 0.7612428 #>  [924,] 0.8016984 0.8064596 0.8279561 #>  [925,] 0.6581170 0.6625708 0.6638874 #>  [926,] 0.7545084 0.7692472 0.8111023 #>  [927,] 0.8234208 0.8325586 0.8762490 #>  [928,] 0.8036009 0.8617396 0.9095927 #>  [929,] 0.9777802 0.9867707 0.9916101 #>  [930,] 0.6246838 0.6478300 0.6710057 #>  [931,] 0.7047821 0.7074970 0.7094189 #>  [932,] 0.5815310 0.5894735 0.5981939 #>  [933,] 0.8676934 0.8809400 0.9466005 #>  [934,] 1.0968149 1.1379194 1.1401699 #>  [935,] 0.5070188 0.5424867 0.5633698 #>  [936,] 0.9154519 0.9903226 0.9985880 #>  [937,] 1.0154784 1.0198059 1.0558893 #>  [938,] 0.7369948 0.7536130 0.8294904 #>  [939,] 1.4303140 1.4317122 1.4805684 #>  [940,] 0.8062438 0.8196058 0.8569086 #>  [941,] 1.1892653 1.2261792 1.2324396 #>  [942,] 0.5912759 0.5969571 0.6082670 #>  [943,] 0.5314154 0.5326785 0.5801175 #>  [944,] 0.8829630 0.8910723 0.8967822 #>  [945,] 1.3858221 1.4302707 1.4316539 #>  [946,] 0.6547229 0.6886322 0.6928918 #>  [947,] 0.6877890 0.7001301 0.7057125 #>  [948,] 1.8357152 1.9045001 1.9065517 #>  [949,] 1.3379349 1.4021315 1.4079049 #>  [950,] 1.0840138 1.1094766 1.1308136 #>  [951,] 0.7117756 0.7177677 0.7423945 #>  [952,] 0.7438321 0.7534034 0.7842284 #>  [953,] 0.7502960 0.7789664 0.7982690 #>  [954,] 0.6118587 0.6215960 0.6384658 #>  [955,] 1.2871531 1.3225393 1.3418591 #>  [956,] 0.7043195 0.7170823 0.7336379 #>  [957,] 1.0358191 1.0774448 1.1165770 #>  [958,] 0.6198076 0.6213680 0.6650598 #>  [959,] 1.1471868 1.2669688 1.2800816 #>  [960,] 0.8130187 0.8631036 0.8891762 #>  [961,] 0.4881796 0.5027134 0.5136565 #>  [962,] 0.5982893 0.6004924 0.6157327 #>  [963,] 0.7837144 0.7919935 0.7991795 #>  [964,] 0.6104453 0.6329952 0.6364906 #>  [965,] 0.7174851 0.7278104 0.7323772 #>  [966,] 0.6158712 0.6274870 0.6436952 #>  [967,] 0.9331233 0.9648185 0.9984615 #>  [968,] 0.9794996 0.9906871 1.0181875 #>  [969,] 0.9764982 0.9772140 0.9803378 #>  [970,] 0.8332279 0.8385844 0.8746902 #>  [971,] 0.8782562 0.9048243 0.9051167 #>  [972,] 0.7135772 0.7139887 0.7223360 #>  [973,] 0.6498677 0.6716114 0.7187771 #>  [974,] 0.7911595 0.7980903 0.8115715 #>  [975,] 1.0262068 1.0452156 1.0937855 #>  [976,] 0.7545626 0.7664371 0.7778610 #>  [977,] 0.9817203 1.0214761 1.0233572 #>  [978,] 0.7640607 0.7933599 0.8157303 #>  [979,] 0.5221971 0.5497720 0.6275281 #>  [980,] 0.8326922 0.8450174 0.8531720 #>  [981,] 0.6079576 0.6749162 0.6866674 #>  [982,] 0.5516274 0.5699598 0.6100876 #>  [983,] 0.6790706 0.7139076 0.7197768 #>  [984,] 1.2032878 1.2213903 1.2509943 #>  [985,] 0.6874485 0.7101610 0.7203690 #>  [986,] 1.0107862 1.0289652 1.0302160 #>  [987,] 0.5092006 0.5504881 0.5553071 #>  [988,] 0.6925121 0.7282713 0.7690535 #>  [989,] 0.7949332 0.8214750 0.8386153 #>  [990,] 1.1753586 1.2128637 1.2172076 #>  [991,] 0.7462066 0.8073125 0.8246749 #>  [992,] 0.6815427 0.7020037 0.7071514 #>  [993,] 0.8221489 0.8382346 0.8520056 #>  [994,] 0.5541392 0.5859897 0.5901825 #>  [995,] 0.6030581 0.6088673 0.6820477 #>  [996,] 1.0221451 1.0348177 1.0581953 #>  [997,] 1.1938107 1.2440572 1.2494514 #>  [998,] 0.7631284 0.8002346 0.8086030 #>  [999,] 0.6835776 0.6913845 0.6999382 #> [1000,] 1.1236420 1.1943301 1.2301638 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 0"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample   cd45 pstat5   cd34 outcome class  multiclass event time_to_event #>    <chr>   <dbl>  <dbl>  <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 85     0.788   0.914 0.440     6.14 class1 class3         1          6.43 #>  2 31     0.806   0.240 0.782     3.61 class2 class2         1          9.90 #>  3 48     0.375   0.825 0.0230    4.55 class1 class2         1         12.2  #>  4 61     0.0185  0.946 0.314     3.68 class2 class3         1          8.11 #>  5 22     0.196   0.691 0.347     2.99 class2 class1         0          8.27 #>  6 79     0.535   0.249 0.523     2.49 class2 class3         1         10.2  #>  7 74     0.689   0.856 0.907     6.98 class1 class3         1         10.9  #>  8 9      0.239   0.408 0.344     3.82 class1 class1         0         10.9  #>  9 53     0.134   0.906 0.919     5.34 class1 class2         1          8.89 #> 10 81     0.169   0.947 0.178     4.31 class1 class3         1          6.35 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>               cd45        pstat5         cd34 #>   [1,] -1.78317206 -1.0787379605  1.333560457 #>   [2,]  1.10354848  1.0628629638 -0.007971152 #>   [3,]  0.28101225 -0.9863854712  0.943167367 #>   [4,]  0.15853500  0.9648649256  1.478340692 #>   [5,] -0.19131391 -0.5968674218 -1.511126613 #>   [6,]  0.46303565  0.9286830086 -0.295172477 #>   [7,] -1.70231141  1.5557823494  1.379459045 #>   [8,]  1.49148700 -1.4755548574  1.159147834 #>   [9,]  1.72386496  0.5710371564  0.330228937 #>  [10,] -0.39782305  0.2049274774  0.357080999 #>  [11,]  0.44302282  1.3419463533  0.167546255 #>  [12,] -1.76651518  0.8491942626  0.976864801 #>  [13,] -0.63356464 -1.4433745349  0.332350031 #>  [14,] -0.77306937 -1.1757549265 -0.945803345 #>  [15,] -0.63717571 -0.8130631050 -1.004776766 #>  [16,] -1.45990328 -1.6729066815 -1.581385700 #>  [17,]  0.10951455  0.0323062376  0.230590132 #>  [18,]  0.70539364  0.6626321482  0.559850122 #>  [19,]  0.33545021 -0.0490838722 -0.260766820 #>  [20,] -0.76876632 -1.3719608221  0.685592057 #>  [21,]  1.18076987  0.9757881406  0.409331098 #>  [22,]  0.29693186 -1.5711703850 -0.593965239 #>  [23,]  1.06160014  1.9560886989 -0.359778415 #>  [24,]  0.83531440  0.2409114010 -1.332756134 #>  [25,]  0.66249487 -1.2375144652 -1.575283965 #>  [26,] -0.98960673 -0.6669653896 -1.340737940 #>  [27,]  1.41488135 -0.9242453876  0.725438340 #>  [28,] -0.59096372  1.0250240427 -1.545310478 #>  [29,]  1.75503156 -0.2734310127  0.267503896 #>  [30,] -0.44195731 -0.0417721597  0.552188957 #>  [31,]  0.63496759 -1.3558765673 -0.836229703 #>  [32,] -1.40325154 -0.4987362393  1.478943176 #>  [33,] -0.41326441 -0.7409474669  1.386029524 #>  [34,] -0.11448838 -1.0214624007 -1.602191748 #>  [35,] -0.16017563 -0.8513593263  1.137506946 #>  [36,]  0.58728012  1.5438732777 -0.832493326 #>  [37,] -1.08957913 -0.5714635307 -0.817002991 #>  [38,]  0.56855878  1.6475160444  1.245318999 #>  [39,] -0.17115678  0.5475570558 -0.644908178 #>  [40,]  0.02686691  0.9672587787 -1.026616390 #>  [41,]  0.33192934  0.0145352092 -0.173320975 #>  [42,] -1.05596792 -1.0748526758 -0.191256247 #>  [43,]  0.25905544 -0.7499622282 -0.087657555 #>  [44,]  0.15440636  1.3524495620  0.168353586 #>  [45,] -1.16808454 -0.7985231102 -0.803837572 #>  [46,] -1.45180107 -1.3360255127 -1.439330467 #>  [47,] -1.69432680  1.6889785690  1.329175952 #>  [48,]  0.28276938 -0.0993963932  0.013122238 #>  [49,]  0.12893504 -0.4431576358 -0.229954891 #>  [50,]  0.98692593  1.0557804701  1.190741254 #>  [51,]  0.92667438  0.1577735525 -1.669680934 #>  [52,] -1.27372723  0.5730161197  0.053478552 #>  [53,]  1.06871379 -1.2095639195 -0.451003047 #>  [54,]  0.77182004  0.3530487708 -1.059214355 #>  [55,]  1.29626841  0.8187685274 -0.478643532 #>  [56,]  1.74791062  0.9897908331 -0.425375490 #>  [57,] -0.16235393 -0.0910664797  1.705414173 #>  [58,] -0.15738729  1.8711936081 -0.126729294 #>  [59,] -0.29535792 -0.1358952865  1.397848103 #>  [60,]  1.79191607  0.6458904947 -1.638537173 #>  [61,] -0.66798290 -1.5840545159 -0.419631398 #>  [62,] -0.32974182  1.1886707737 -0.173524097 #>  [63,] -0.83681468  0.6331643597  0.082403326 #>  [64,] -0.73922866 -0.2322845260  0.101457935 #>  [65,] -0.57623004 -1.3937666103  1.443584669 #>  [66,] -0.42359729  1.5135844751  0.072547217 #>  [67,] -0.32929042 -0.0006291011 -1.692261786 #>  [68,] -0.24088988  1.8261944212  0.224511135 #>  [69,] -0.95149649 -1.1081043364 -0.378855087 #>  [70,]  1.91723194 -0.3502579310 -1.844824658 #>  [71,]  1.25176008  1.2581136351  1.233394505 #>  [72,]  0.07080782 -0.8866318099  0.638288680 #>  [73,] -1.54302889  1.6857596143 -0.287625849 #>  [74,]  1.18695821 -0.5113548744  0.394427408 #>  [75,] -0.82486995 -1.6204020019 -0.588203677 #>  [76,] -1.79645181 -0.6864040144 -1.311847684 #>  [77,] -1.55872438 -1.0220035939  1.789038093 #>  [78,] -0.77897578  0.3692559643  0.428812512 #>  [79,]  1.57042159 -1.4346590275  0.833725974 #>  [80,] -0.06382824  0.2857970510  1.481791590 #>  [81,] -1.61397628 -0.8465167432 -1.648507113 #>  [82,]  0.20313852  0.0542426137 -0.118507950 #>  [83,]  0.62050888  0.3346826055  1.023535635 #>  [84,] -1.14703558 -1.5574576712  1.355170017 #>  [85,]  0.42846179 -0.1753167314  1.112048926 #>  [86,]  0.41997232  0.4549634910 -0.711286973 #>  [87,] -0.19044873  0.8933333770 -0.474693737 #>  [88,] -0.81555060  1.0777003059 -0.877067329 #>  [89,]  1.17350911 -0.4341643860  0.698854727 #>  [90,]  1.71932353  1.0695474903  0.804058565 #>  [91,] -0.20881194  0.9738611349  1.699522445 #>  [92,]  0.81303834 -0.4329034118 -1.108390019 #>  [93,]  0.81484298 -0.3213290673 -0.321048497 #>  [94,]  1.65329116  0.6674428429 -0.108223498 #>  [95,]  1.26883535  0.1571099065 -1.479695708 #>  [96,] -1.37947623  0.1786102124  0.793738394 #>  [97,]  0.03251312  0.3384958529  1.722195881 #>  [98,] -1.52463054 -1.2938448569  0.866870876 #>  [99,]  0.72690694  1.0860309387 -0.340135386 #> [100,] -0.17026210 -0.3968786695 -1.021002674"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1] 3.52157326 4.18706346 4.99297032 4.17405690 6.40545747 2.50865483 #>   [7] 2.33612014 5.33430165 2.56476097 3.01796819 2.89283573 3.66406721 #>  [13] 5.22714046 4.35298919 2.58000727 2.15550594 3.60309971 4.89536032 #>  [19] 3.81554420 6.30328847 3.53770881 1.86969723 4.09551566 7.24970111 #>  [25] 2.86504606 3.55623919 3.95237545 4.11631444 5.47602150 0.28915723 #>  [31] 3.07282122 5.27719683 3.72704122 6.58541327 5.98730966 3.61953499 #>  [37] 3.87629426 2.33057302 5.04979749 3.18911819 3.49611601 3.47001035 #>  [43] 7.14360147 3.63460106 4.13321827 5.18586447 2.17984783 3.86569248 #>  [49] 5.01891594 0.53959254 6.47362294 4.17886077 4.79635337 3.38241659 #>  [55] 3.88628723 1.25895231 3.16017574 4.52602869 1.12086352 4.14951568 #>  [61] 3.76323375 4.80787027 7.01629099 3.03324953 3.10142062 4.20861853 #>  [67] 2.47186593 4.27612420 4.45194221 7.21234030 3.62721676 4.33038331 #>  [73] 3.34296498 3.24989602 3.46735076 0.29506689 0.03436764 1.68920782 #>  [79] 5.35307405 5.71910412 2.83330794 0.24626349 2.92575949 0.42468688 #>  [85] 1.52052028 3.57405227 8.28915490 7.86521083 4.00969324 4.79126650 #>  [91] 1.25838678 2.55059481 2.77286430 1.54709918 1.48236052 0.40922086 #>  [97] 3.08609250 3.17320626 3.97903992 2.75743110"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>      cd45   cd38    cd34    cd19 cluster_id .flowsom_metacluster #>     <dbl>  <dbl>   <dbl>   <dbl> <chr>      <chr>                #>  1  1.85  -1.32  -1.84   -0.719  y          2                    #>  2  1.32  -0.265  0.545  -1.95   i          4                    #>  3  1.12   1.42   0.995   0.844  h          2                    #>  4 -1.07  -0.107  0.620   0.0522 r          4                    #>  5  0.474 -0.470  0.874  -0.0629 b          2                    #>  6  0.985  0.559  0.408  -0.162  w          2                    #>  7 -0.321  0.307  1.96    1.64   p          2                    #>  8  0.145 -1.28  -0.451  -1.04   s          2                    #>  9 -0.378 -0.390  0.0341 -0.130  a          1                    #> 10  0.387 -0.367  0.873  -0.678  m          2                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>      cd45   cd38    cd34    cd19 cluster_id .phenograph_metacluster #>     <dbl>  <dbl>   <dbl>   <dbl> <chr>      <chr>                   #>  1  1.85  -1.32  -1.84   -0.719  y          1                       #>  2  1.32  -0.265  0.545  -1.95   i          4                       #>  3  1.12   1.42   0.995   0.844  h          2                       #>  4 -1.07  -0.107  0.620   0.0522 r          4                       #>  5  0.474 -0.470  0.874  -0.0629 b          3                       #>  6  0.985  0.559  0.408  -0.162  w          3                       #>  7 -0.321  0.307  1.96    1.64   p          1                       #>  8  0.145 -1.28  -0.451  -1.04   s          2                       #>  9 -0.378 -0.390  0.0341 -0.130  a          2                       #> 10  0.387 -0.367  0.873  -0.678  m          2                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 8                      #>  2 7                      #>  3 8                      #>  4 1                      #>  5 1                      #>  6 6                      #>  7 1                      #>  8 6                      #>  9 8                      #> 10 3                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 2                    #>  2 3                    #>  3 4                    #>  4 4                    #>  5 3                    #>  6 5                    #>  7 1                    #>  8 3                    #>  9 4                    #> 10 4                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 1                    #>  2 2                    #>  3 3                    #>  4 3                    #>  5 1                    #>  6 4                    #>  7 1                    #>  8 3                    #>  9 3                    #> 10 3                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 1                         #>  2 2                         #>  3 9                         #>  4 5                         #>  5 2                         #>  6 1                         #>  7 7                         #>  8 3                         #>  9 3                         #> 10 8                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 6                   #>  2 3                   #>  3 4                   #>  4 6                   #>  5 9                   #>  6 6                   #>  7 6                   #>  8 4                   #>  9 9                   #> 10 9                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 1                       #>  2 3                       #>  3 3                       #>  4 2                       #>  5 3                       #>  6 3                       #>  7 5                       #>  8 1                       #>  9 1                       #> 10 2                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1 4.06  #>  2 1.01  #>  3 5.13  #>  4 4.07  #>  5 4.76  #>  6 4.54  #>  7 2.65  #>  8 2.13  #>  9 2.95  #> 10 5.19  #> 11 4.63  #> 12 1.27  #> 13 3.74  #> 14 3.48  #> 15 2.03  #> 16 3.08  #> 17 1.20  #> 18 5.99  #> 19 0.665 #> 20 0.118"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>      cd45    cd38    cd34    cd19   .pc1   .pc2   .pc3   .pc4 #>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl> #>  1  1.39  -0.189  -0.202  -0.956  -0.752  0.370 -1.34  -0.395 #>  2  1.39  -1.25   -2.00   -0.963   0.656 -0.729 -2.61  -0.274 #>  3 -0.688 -0.896   0.0756  0.610   0.743 -0.189  0.720 -0.455 #>  4 -1.18  -0.0477 -1.78   -0.249   1.17  -0.839 -0.456  1.45  #>  5  0.925  0.198  -0.208  -0.0243 -0.801 -0.288 -0.504 -0.217 #>  6  0.388 -0.689   0.252   1.34   -0.118 -0.791  0.672 -1.17  #>  7 -0.207 -1.14    1.05    0.931   0.259  0.189  1.18  -1.39  #>  8  0.947  2.46    0.174   1.87   -2.63  -1.68   1.15   0.439 #>  9 -0.258 -2.54   -0.769  -1.52    2.07   0.916 -1.49  -0.655 #> 10  1.77   0.659   0.726  -0.134  -1.95   0.245 -0.390 -0.724 #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>      cd45    cd38    cd34    cd19 .tsne1 .tsne2 #>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>  <dbl> #>  1  1.39  -0.189  -0.202  -0.956   1.44  -0.343 #>  2  1.39  -1.25   -2.00   -0.963  -2.51   2.47  #>  3 -0.688 -0.896   0.0756  0.610  -2.30  -1.68  #>  4 -1.18  -0.0477 -1.78   -0.249  -2.58   0.667 #>  5  0.925  0.198  -0.208  -0.0243  1.65   1.49  #>  6  0.388 -0.689   0.252   1.34   -2.63  -3.18  #>  7 -0.207 -1.14    1.05    0.931  -1.81  -3.71  #>  8  0.947  2.46    0.174   1.87    2.89   4.60  #>  9 -0.258 -2.54   -0.769  -1.52    0.474 -3.26  #> 10  1.77   0.659   0.726  -0.134   3.42   2.05  #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>      cd45    cd38    cd34    cd19 .umap1 .umap2 #>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>  <dbl> #>  1  1.39  -0.189  -0.202  -0.956  -3.80  -2.20  #>  2  1.39  -1.25   -2.00   -0.963   1.54  -1.89  #>  3 -0.688 -0.896   0.0756  0.610   1.52   0.938 #>  4 -1.18  -0.0477 -1.78   -0.249   0.418 -0.149 #>  5  0.925  0.198  -0.208  -0.0243 -3.80  -1.13  #>  6  0.388 -0.689   0.252   1.34    3.91  -2.45  #>  7 -0.207 -1.14    1.05    0.931   4.12  -3.12  #>  8  0.947  2.46    0.174   1.87   -2.15   1.50  #>  9 -0.258 -2.54   -0.769  -1.52   -1.83  -2.71  #> 10  1.77   0.659   0.726  -0.134  -4.28   0.887 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>       .pc1   .pc2 #>      <dbl>  <dbl> #>  1 -0.324  -2.56  #>  2 -1.03    0.829 #>  3  0.657  -0.668 #>  4  0.511  -0.681 #>  5  0.250   0.361 #>  6 -0.448  -0.371 #>  7 -1.13    1.54  #>  8 -0.259  -1.95  #>  9 -0.0261  0.277 #> 10  0.0256  0.445 #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1    PC2     PC3     PC4 #>     <dbl>  <dbl>   <dbl>   <dbl> #>  1  1.06   1.68  -0.145   0.324  #>  2 -0.295  0.281 -0.912   1.73   #>  3  0.459 -0.686 -2.27    0.921  #>  4  2.57  -0.607 -0.349  -0.0860 #>  5 -0.637 -1.86   1.13    0.370  #>  6 -0.265 -0.281  0.562  -0.349  #>  7 -0.806 -0.395 -0.558   1.36   #>  8 -0.421  1.33  -0.410  -1.35   #>  9  0.667 -0.798  1.59   -0.0229 #> 10 -0.329 -0.494  0.0244 -0.315  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  5.71  -1.94  #>  2  6.79  -3.89  #>  3  4.59   1.47  #>  4 -5.97   3.60  #>  5  1.44  -6.66  #>  6  6.40  -4.35  #>  7  0.858  6.37  #>  8  3.04   0.757 #>  9 -4.07  -1.17  #> 10  2.57  -7.17  #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -6.78    4.69 #>  2 -3.11    6.73 #>  3 -1.96    4.62 #>  4  8.84   -2.51 #>  5  6.52    2.62 #>  6 -3.57    2.33 #>  7  8.31    1.91 #>  8  1.10    6.10 #>  9 -0.347  -5.74 #> 10  4.42    6.23 #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -0.107 -2.62  #>  2  1.28   0.775 #>  3 -3.33   1.56  #>  4  1.09   0.991 #>  5 -2.92  -3.27  #>  6 -3.02  -3.33  #>  7  1.37   2.20  #>  8  0.917  2.54  #>  9 -0.459 -1.25  #> 10  2.54   2.57  #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1  .tsne2 #>     <dbl>   <dbl> #>  1  1.89  -6.18   #>  2 -7.23  -0.302  #>  3  2.95   1.72   #>  4 -7.82  -0.0960 #>  5 -0.989 -5.83   #>  6 -0.605 -5.28   #>  7 -3.50   3.27   #>  8 -4.11   4.16   #>  9  6.96  -3.82   #> 10 -4.94   8.10   #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>     UMAP1   UMAP2 #>     <dbl>   <dbl> #>  1 -0.411  1.91   #>  2 -0.689 -1.06   #>  3 -5.01  -0.0412 #>  4  5.71  -0.340  #>  5 -4.68   0.0799 #>  6 -4.96  -0.0157 #>  7  4.94   3.30   #>  8 -5.05  -0.222  #>  9  4.13   0.650  #> 10  3.40   2.58   #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.375 #>  2          0.25  #>  3          0.25  #>  4          0     #>  5          0.625 #>  6          0.125 #>  7          0.375 #>  8          0.125 #>  9          0.25  #> 10          0.375 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            1   #>  2            1   #>  3            0.7 #>  4            0.1 #>  5            0.3 #>  6            0.9 #>  7            1   #>  8            0.5 #>  9            1   #> 10            0.1 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/37]> Bootstrap01 #>  2 <split [100/41]> Bootstrap02 #>  3 <split [100/37]> Bootstrap03 #>  4 <split [100/34]> Bootstrap04 #>  5 <split [100/37]> Bootstrap05 #>  6 <split [100/33]> Bootstrap06 #>  7 <split [100/34]> Bootstrap07 #>  8 <split [100/37]> Bootstrap08 #>  9 <split [100/34]> Bootstrap09 #> 10 <split [100/38]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-08  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)       3.44  #> 2 pstat5            1.18  #> 3 cd45              0.958 #> 4 cd34              0.133  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5          -1.53   #> 2 cd45            -1.21   #> 3 cd34            -0.233  #> 4 (Intercept)     -0.0361  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 3 × 2 #>   feature coefficient #>   <chr>         <dbl> #> 1 cd45        -0.175  #> 2 pstat5       0.0684 #> 3 cd34        -0.0448"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>      cd45     cd38   cd34   cd19 .upsample_cluster #>     <dbl>    <dbl>  <dbl>  <dbl> <chr>             #>  1 -1.24   0.373   -0.937 -0.704 b                 #>  2  0.269  1.52     1.81   0.506 a                 #>  3 -0.736 -0.0917  -0.830  0.821 b                 #>  4  0.638  0.608    0.564 -0.428 a                 #>  5  1.29  -0.926   -0.153  0.324 b                 #>  6 -0.634 -0.00913 -0.996  0.145 b                 #>  7 -0.481 -0.782   -0.704 -0.812 b                 #>  8  0.924  1.21    -1.44  -1.48  a                 #>  9 -1.24   0.128    0.107 -0.509 a                 #> 10  0.255 -0.885    1.41   1.78  b                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>      cd45     cd38   cd34   cd19 .upsample_cluster #>     <dbl>    <dbl>  <dbl>  <dbl> <chr>             #>  1 -1.24   0.373   -0.937 -0.704 b                 #>  2  0.269  1.52     1.81   0.506 a                 #>  3 -0.736 -0.0917  -0.830  0.821 a                 #>  4  0.638  0.608    0.564 -0.428 a                 #>  5  1.29  -0.926   -0.153  0.324 a                 #>  6 -0.634 -0.00913 -0.996  0.145 a                 #>  7 -0.481 -0.782   -0.704 -0.812 a                 #>  8  0.924  1.21    -1.44  -1.48  b                 #>  9 -1.24   0.128    0.107 -0.509 a                 #> 10  0.255 -0.885    1.41   1.78  b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 b                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 a                 #>  4 a                 #>  5 a                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 b                 #>  4 b                 #>  5 a                 #>  6 b                 #>  7 a                 #>  8 b                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 a                 #>  4 a                 #>  5 a                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
