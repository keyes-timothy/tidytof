[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.0    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.34       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.0     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.8          #>  [19] tools_4.3.3         igraph_2.0.2        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.0 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.2.7          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.1     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.1         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.34     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.8        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.2.7        bslib_0.6.1       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] labeling_0.4.3                filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     highr_0.10                    #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] data.table_1.15.2             hms_1.1.3                     #>  [73] tidygraph_1.3.1               utf8_1.2.4                    #>  [75] XVector_0.42.0                ggrepel_0.9.5                 #>  [77] BiocVersion_3.18.1            foreach_1.5.2                 #>  [79] pillar_1.9.0                  RcppHNSW_0.6.0                #>  [81] later_1.3.2                   splines_4.3.3                 #>  [83] tweenr_2.0.3                  lattice_0.22-5                #>  [85] survival_3.5-8                bit_4.0.5                     #>  [87] RProtoBufLib_2.14.0           tidyselect_1.2.0              #>  [89] Biostrings_2.70.2             knitr_1.45                    #>  [91] gridExtra_2.3                 xfun_0.42                     #>  [93] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [95] timeDate_4032.109             stringi_1.8.3                 #>  [97] yaml_2.3.8                    evaluate_0.23                 #>  [99] codetools_0.2-19              ggraph_2.2.1                  #> [101] tibble_3.2.1                  BiocManager_1.30.22           #> [103] cli_3.6.2                     rpart_4.1.23                  #> [105] xtable_1.8-4                  systemfonts_1.0.6             #> [107] munsell_0.5.0                 jquerylib_0.1.4               #> [109] Rcpp_1.0.12                   globals_0.16.3                #> [111] png_0.1-8                     parallel_4.3.3                #> [113] ellipsis_0.3.2                pkgdown_2.0.7                 #> [115] gower_1.0.1                   readr_2.1.5                   #> [117] blob_1.2.4                    listenv_0.9.1                 #> [119] glmnet_4.1-8                  viridisLite_0.4.2             #> [121] ipred_0.9-14                  scales_1.3.0                  #> [123] prodlim_2023.08.28            purrr_1.0.2                   #> [125] crayon_1.5.2                  rlang_1.1.3                   #> [127] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1   1.10   17.2 #> 2  -4.99   14.2 #> 3 -28.9    16.0 #> 4 -15.2    12.0 #> 5  -1.45   19.8 #> 6 -13.3    21.6 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  8.65   13.2  #>  2  1.61   16.2  #>  3 -9.86   38.4  #>  4 -8.74   17.2  #>  5  6.72   15.9  #>  6 -4.57   24.6  #>  7  0.840  17.9  #>  8 -0.335  30.1  #>  9 -3.15   24.4  #> 10  4.96    8.83 #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1   9.72  2.09  #>  2   8.54  2.11  #>  3   6.34  0.991 #>  4   4.00 -2.02  #>  5   9.69  1.81  #>  6   1.18 -3.16  #>  7   9.50  1.33  #>  8   4.95 -1.21  #>  9   4.90  1.34  #> 10   9.49  4.33  #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] png_0.1-8           systemfonts_1.0.6   vctrs_0.6.5         #>  [10] stringr_1.5.1       pkgconfig_2.0.3     shape_1.4.6.1       #>  [13] fastmap_1.1.1       ellipsis_0.3.2      labeling_0.4.3      #>  [16] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [19] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          keras_2.13.0        tweenr_2.0.3        #>  [31] irlba_2.3.5.1       tensorflow_2.15.0   parallel_4.3.3      #>  [34] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [37] reticulate_1.35.0   parallelly_1.37.1   rpart_4.1.23        #>  [40] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [43] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [46] base64enc_0.1-3     readr_2.1.5         flowCore_2.14.1     #>  [49] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [52] igraph_2.0.2        timechange_0.3.0    tidyselect_1.2.0    #>  [55] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [58] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [61] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [64] withr_3.0.0         evaluate_0.23       Rtsne_0.17          #>  [67] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [70] polyclip_1.10-6     embed_1.1.3         pillar_1.9.0        #>  [73] whisker_0.4.1       foreach_1.5.2       stats4_4.3.3        #>  [76] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [79] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [82] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [85] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [88] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [91] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [94] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [97] ggforce_0.4.2       cli_3.6.2           tfruns_1.5.2        #> [100] textshaping_0.3.7   fansi_1.0.6         cytolib_2.14.1      #> [103] viridisLite_0.4.2   lava_1.8.0          uwot_0.1.16         #> [106] gtable_0.3.4        zeallot_0.1.0       sass_0.4.8          #> [109] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [112] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [115] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [118] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.2.7          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.1         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.1     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.2        timechange_0.3.0    tidyselect_1.2.0    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.8          #>  [94] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] philentropy_0.8.0             filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     ggforce_0.4.2                 #>  [53] MASS_7.3-60.0.1               lava_1.8.0                    #>  [55] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [57] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [59] httpuv_1.6.14                 future.apply_1.11.1           #>  [61] nnet_7.3-19                   glue_1.7.0                    #>  [63] promises_1.2.1                grid_4.3.3                    #>  [65] generics_0.1.3                recipes_1.0.10                #>  [67] gtable_0.3.4                  tzdb_0.4.0                    #>  [69] class_7.3-22                  tidyr_1.3.1                   #>  [71] data.table_1.15.2             hms_1.1.3                     #>  [73] tidygraph_1.3.1               utf8_1.2.4                    #>  [75] XVector_0.42.0                ggrepel_0.9.5                 #>  [77] BiocVersion_3.18.1            foreach_1.5.2                 #>  [79] pillar_1.9.0                  RcppHNSW_0.6.0                #>  [81] later_1.3.2                   splines_4.3.3                 #>  [83] tweenr_2.0.3                  lattice_0.22-5                #>  [85] survival_3.5-8                bit_4.0.5                     #>  [87] emdist_0.3-3                  RProtoBufLib_2.14.0           #>  [89] tidyselect_1.2.0              Biostrings_2.70.2             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] ggplot2_3.5.0                 readr_2.1.5                   #> [119] blob_1.2.4                    listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.2.7          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.0       bslib_0.6.1         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.1     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.2        #>  [49] timechange_0.3.0    tidyselect_1.2.0    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.0     tidyr_1.3.1         RProtoBufLib_2.14.0 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.8          #> [103] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  130.  2.81   1.17 #> 2  229. -0.800 10.6  #> 3  292.  4.68   1.42 #> 4  431. -0.406 13.2  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.0    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.34       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.0     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.8          #>  [19] tools_4.3.3         igraph_2.0.2        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.0 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.2.7          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.1     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.1         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.0           flowCore_2.14.1             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.7         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.4.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.0               ragg_1.2.7                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] htmltools_0.5.7               S4Arrays_1.2.1                #>  [13] curl_5.2.1                    SparseArray_1.2.4             #>  [15] sass_0.4.8                    parallelly_1.37.1             #>  [17] bslib_0.6.1                   desc_1.4.3                    #>  [19] lubridate_1.9.3               cachem_1.0.8                  #>  [21] igraph_2.0.2                  mime_0.12                     #>  [23] lifecycle_1.0.4               iterators_1.0.14              #>  [25] pkgconfig_2.0.3               Matrix_1.6-5                  #>  [27] R6_2.5.1                      fastmap_1.1.1                 #>  [29] shiny_1.8.0                   GenomeInfoDbData_1.2.11       #>  [31] future_1.33.1                 digest_0.6.34                 #>  [33] colorspace_2.1-0              AnnotationDbi_1.64.1          #>  [35] textshaping_0.3.7             RSQLite_2.3.5                 #>  [37] labeling_0.4.3                filelock_1.0.3                #>  [39] cytolib_2.14.1                fansi_1.0.6                   #>  [41] yardstick_1.3.0               timechange_0.3.0              #>  [43] httr_1.4.7                    polyclip_1.10-6               #>  [45] abind_1.4-5                   compiler_4.3.3                #>  [47] bit64_4.0.5                   withr_3.0.0                   #>  [49] doParallel_1.0.17             viridis_0.6.5                 #>  [51] DBI_1.2.2                     highr_0.10                    #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] stringr_1.5.1                 RcppHNSW_0.6.0                #>  [83] later_1.3.2                   splines_4.3.3                 #>  [85] tweenr_2.0.3                  lattice_0.22-5                #>  [87] survival_3.5-8                bit_4.0.5                     #>  [89] RProtoBufLib_2.14.0           tidyselect_1.2.0              #>  [91] Biostrings_2.70.2             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   readr_2.1.5                   #> [119] blob_1.2.4                    listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  ggridges_0.5.6                #> [125] scales_1.3.0                  prodlim_2023.08.28            #> [127] purrr_1.0.2                   crayon_1.5.2                  #> [129] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.1     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.2        timechange_0.3.0    #>  [46] tidyselect_1.2.0    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.8          #>  [97] digest_0.6.34       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.2.7          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.1         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.1     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.2        timechange_0.3.0    #>  [46] tidyselect_1.2.0    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.0     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.0 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.8          digest_0.6.34       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T (2024). tidytof: Analyze High-dimensional Cytometry Data Using Tidy Data Principles. R package version 0.99.0,  https://keyes-timothy.github.io/tidytof/, https://keyes-timothy.github.io/tidytof.","code":"@Manual{,   title = {tidytof: Analyze High-dimensional Cytometry Data Using Tidy Data Principles},   author = {Timothy Keyes},   year = {2024},   note = {R package version 0.99.0,  https://keyes-timothy.github.io/tidytof/},   url = {https://keyes-timothy.github.io/tidytof}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-highly-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if(!require(devtools)) install.packages(\"devtools\")  devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if(!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if(!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-    tidytof_example_data(\"phenograph\") |>    tof_read_data()  phenograph |>    class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-    phenograph |>    # mutate the input tof_tbl   mutate(     PhenoGraph = as.character(PhenoGraph),      Condition = as.character(Condition)   )  phenograph |>    # use dplyr's select method to show that the columns have been changed   select(where(is.character)) |>    head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>    class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>    tof_get_panel() |>    head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>    select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>    head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-    phenograph |>    tof_preprocess()  # inspect new values phenograph |>    select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>    head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>    count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>    # downsample    tof_downsample(     method = \"constant\",      group_cols = phenograph_cluster,      num_cells = 200   ) |>    # count the number of downsampled cells in each cluster   count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>    # downsample   tof_downsample(     method = \"prop\",     group_cols = phenograph_cluster,      prop_cells = 0.5   ) |>    # count the number of downsampled cells in each cluster   count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>    # preprocess all numeric columns in the dataset   tof_preprocess(undo_noise = FALSE) |>    # make a scatterplot   ggplot(aes(x = cd34, y = cd38)) +    geom_point(alpha = 0.5) +    scale_x_continuous(limits = c(NA, 1.5)) +    scale_y_continuous(limits = c(NA, 4)) +    theme_bw() phenograph_data |>    tof_preprocess(undo_noise = FALSE) |>    tof_downsample(     density_cols = c(cd34, cd38),      target_prop_cells = 0.25,      method = \"density\",    ) |>    ggplot(aes(x = cd34, y = cd38)) +    geom_point(alpha = 0.5) +    scale_x_continuous(limits = c(NA, 1.5)) +    scale_y_continuous(limits = c(NA, 4)) +    theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path  # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>    tof_write_data(     group_cols = phenograph_cluster,      out_path = my_path,     format = \"fcs\"   ) phenograph_data |>    # create a variable representing if a cell is above or below the median    # expression level of pstat5   mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>    tof_write_data(     group_cols = c(phenograph_cluster, expression_group),      out_path = my_path,      format = \"fcs\"   )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-    phenograph_data |>    tof_preprocess() |>    tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>    select(sample_name, .flowsom_metacluster, everything()) |>    head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 3                    cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 7                    cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 3                    cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 2                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 4                    cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 2                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>    count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 24 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster2           13                     483 #>  2 cluster3           18                     418 #>  3 cluster3           11                     300 #>  4 cluster2           20                     215 #>  5 cluster1           3                      213 #>  6 cluster3           12                     182 #>  7 cluster1           4                      177 #>  8 cluster1           1                      167 #>  9 cluster1           2                      165 #> 10 cluster2           19                     124 #> # ℹ 14 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>    tof_preprocess() |>    tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>    head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 11                   #> 2 7                    #> 3 11                   #> 4 16                   #> 5 4                    #> 6 16"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-    phenograph_clusters |>    tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>    select(contains(\"tsne\")) |>    head() #> # A tibble: 6 × 2 #>   .tsne_1 .tsne_2 #>     <dbl>   <dbl> #> 1   7.44    -5.16 #> 2   5.64    -9.25 #> 3 -10.9    -25.6  #> 4   0.781  -17.2  #> 5   3.50    -7.82 #> 6   2.82   -24.9 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>    ggplot(aes(x = .tsne_1, y = .tsne_2, fill = phenograph_cluster)) +    geom_point(shape = 21) +    theme_bw() +    labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>    ggplot(aes(x = .tsne_1, y = .tsne_2, fill = cd11b)) +    geom_point(shape = 21) +    scale_fill_viridis_c() +   theme_bw() +    labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-    citrus_raw |>    as_tof_tbl(sep = \"_\") citrus_metadata <-    tibble(     file_name = as.character(flowCore::pData(citrus_raw)[[1]]),      sample_id = 1:length(file_name),     patient = str_extract(file_name, \"patient[:digit:]\"),      stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")   ) |>    mutate(     stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)   )  citrus_metadata |>   head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-    citrus_data |>    left_join(citrus_metadata, by = \"sample_id\") daa_result <-    citrus_data |>    tof_analyze_abundance(     cluster_col = population_id,      effect_col = stimulation,      group_cols = patient,      test_type = \"paired\",      method = \"ttest\"   )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-    citrus_data |>    mutate(population_id = as.character(population_id)) |>   left_join(     select(daa_result, population_id, significant, mean_fc),      by = \"population_id\"   ) |>    dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>    group_by(patient, stimulation) |>    mutate(prop = n / sum(n)) |>    ungroup() |>    pivot_wider(     names_from = stimulation,      values_from = c(prop, n),    ) |>    mutate(     diff = `prop_BCR-XL` - prop_Basal,      fc = `prop_BCR-XL` / prop_Basal,     population_id = fct_reorder(population_id, diff),     direction =        case_when(         mean_fc > 1 & significant == \"*\" ~ \"increase\",         mean_fc < 1 & significant == \"*\" ~ \"decrease\",          TRUE ~ NA_character_       )   )  significance_data <-    plot_data |>    group_by(population_id, significant, direction) |>    summarize(diff = max(diff), fc = max(fc)) |>    ungroup()  plot_data |>    ggplot(aes(x = population_id, y = fc, fill = direction)) +    geom_violin(trim = FALSE) +   geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +    geom_point() +    geom_text(     aes(x = population_id, y = fc, label = significant),      data = significance_data,      size = 8,      nudge_x = 0.2,     nudge_y = 0.06   ) +   scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +    scale_fill_manual(     values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),     na.translate = FALSE   ) +   labs(     x = NULL,      y = \"Abundance fold-change (stimulated / basal)\",      fill = \"Effect\",      caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"   ) signaling_markers <-    c(     \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",      \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"   )  dea_result <-    citrus_data |>    tof_preprocess(channel_cols = any_of(signaling_markers)) |>    tof_analyze_expression(     cluster_col = population_id,      marker_cols = any_of(signaling_markers),      effect_col = stimulation,     group_cols = patient,      test_type = \"paired\",      method = \"ttest\"   )  dea_result |>    head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-    dea_result |>    tof_plot_clusters_volcano(     use_ggrepel = TRUE   )   volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-    citrus_data |>    mutate(cluster = str_c(\"cluster\", population_id)) |>    tof_preprocess()  citrus_data |>    tof_extract_proportion(     cluster_col = cluster,      group_cols = c(patient, stimulation)   ) |>    head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>    tof_extract_proportion(     cluster_col = cluster,      group_cols = c(patient, stimulation),      format = \"long\"   ) |>    head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>    tof_extract_central_tendency(     cluster_col = cluster,      group_cols = c(patient, stimulation),      marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      central_tendency_function = mean   ) |>    head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>    tof_extract_threshold(     cluster_col = cluster,      group_cols = c(patient, stimulation),      marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      threshold = 5   ) |>    head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>    tof_extract_emd(     cluster_col = cluster,      group_cols = patient,      marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      emd_col = stimulation,      reference_level = \"Basal\"   ) |>    head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>    tof_extract_jsd(     cluster_col = cluster,      group_cols = patient,       marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),      jsd_col = stimulation,      reference_level = \"Basal\"   ) |>    head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>    tof_extract_features(     cluster_col = cluster,      group_cols = patient,      stimulation_col = stimulation,     lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),      signaling_cols = any_of(signaling_markers),      signaling_method = \"emd\",      basal_level = \"Basal\"   ) |>    head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-    \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-    readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>    dplyr::rename(patient_id = Patient_ID) |>    left_join(ddpr_metadata, by = \"patient_id\") |>    dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>    select(where(~ !is.numeric(.x))) |>    head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-    ddpr_patients |>    # convert the relapse_status variable to a factor first,    # which is something we'll want for fitting the model later   # and create the time_to_event and event columns for survival modeling   mutate(     relapse_status = as.factor(relapse_status),      time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),     event = if_else(relapse_status == \"Yes\", 1, 0)   )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-    ddpr_patients |>    dplyr::filter(cohort == \"Training\")   ddpr_validation <-    ddpr_patients |>    dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>    dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-    ddpr_training |>    tof_split_data(     split_method = \"k-fold\",      num_cv_folds = 5,      strata = relapse_status   )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>    rsample::training() |>    head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1-Rx        0.0395    0.618     0.0634    0.572       2.93     0.944 #> 2 UPN2           0.139     0.0662    0.0221    0.0825      2.25     0.454 #> 3 UPN3           0.633     0.0234    0.0165    0.0327      2.25     0.226 #> 4 UPN7           0.474     0.966     0.124     1.24        2.59     0.243 #> 5 UPN8           0.951     0.958     0.161     0.556       3.18     0.556 #> 6 UPN9          15.6       0.446     0.0445    0.163       2.86     0.434 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>    rsample::testing() |>    head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449      0.164      1.94     0.416 #> 2 UPN6          5.62       0.550   0.00374      0.622      2.86     0.342 #> 3 UPN10         0.00374    0.761   0.000696     0.829      3.19     0.886 #> 4 UPN13         0.0634     0.0300  0.0219       0.109      2.34     0.314 #> 5 UPN22         3.29       1.63    0.128        0.525      3.38     0.688 #> 6 UPN22-Rx      0.0643     1.68    0.0804       1.56       3.06     0.529 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-    training_split |>    tof_train_model(     predictor_cols = contains(\"Pop2\"),      response_col = relapse_status,     model_type = \"two-class\",      hyperparameter_grid = tof_create_grid(mixture_values = 1),      impute_missing_predictors = TRUE,      remove_zv_predictors = TRUE # often a smart decision   ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-    class_mod |>    tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>    dplyr::mutate(     truth = ddpr_validation$relapse_status   ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-    class_mod |>    tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>    tof_plot_model() +    labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-    class_mod |>    tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>    tof_plot_model(new_data = ddpr_validation) +    labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>    # step 1   tof_read_data() |>    # step 2   tof_preprocess() |>    # step 3   tof_cluster(method = \"phenograph\") |>   # step 4   tof_downsample(     group_cols = .phenograph_cluster,      num_cells = 100,     method = \"constant\"    ) |>    # step 5   tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>    # step 6   tof_plot_cells_embedding(     embedding_cols = starts_with(\".tsne\"),     color_col = .phenograph_cluster   )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `cluster_col_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_cluster_name\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"time_col\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"time_col\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.distance_function_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.distance_function_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 6               #>  2 7               #>  3 15              #>  4 2               #>  5 20              #>  6 10              #>  7 3               #>  8 19              #>  9 20              #> 10 16              #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 12              #>  2 15              #>  3 18              #>  4 8               #>  5 13              #>  6 19              #>  7 15              #>  8 15              #>  9 2               #> 10 8               #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 2                   #>  2 10                  #>  3 10                  #>  4 4                   #>  5 3                   #>  6 9                   #>  7 1                   #>  8 8                   #>  9 11                  #> 10 4                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 4                   #>  2 2                   #>  3 7                   #>  4 12                  #>  5 10                  #>  6 5                   #>  7 7                   #>  8 1                   #>  9 13                  #> 10 5                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>      cd45    cd38   cd34    cd19 cluster_id #>     <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  0.124 -0.0156 -2.05   0.0134 g          #>  2  1.65  -1.39   -0.180 -0.710  c          #>  3  0.636 -0.170   0.778 -1.97   a          #>  4 -1.44   0.340   0.241  1.63   n          #>  5 -0.876 -1.04    0.109  0.403  i          #>  6 -2.78  -0.871  -0.725  0.717  d          #>  7  0.809 -0.349  -0.243 -0.735  w          #>  8 -1.10  -0.263  -2.10  -1.32   j          #>  9  1.95  -0.584  -0.993 -0.651  p          #> 10  1.99  -0.220  -1.03  -2.58   a          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>      cd45   cd38   cd34    cd19 cluster_id #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>      #>  1  0.797  0.755  1.77   0.876  r          #>  2 -0.570  0.751 -1.00  -0.810  n          #>  3 -0.450 -0.998 -0.986  1.78   w          #>  4 -0.311  1.98  -0.719 -1.06   z          #>  5 -0.669 -0.263  0.830  1.43   f          #>  6  0.661 -0.696 -0.728 -0.639  l          #>  7 -0.165  0.176 -0.203  0.0940 f          #>  8 -0.770  0.292  0.309  0.132  t          #>  9  0.490  1.07  -0.408 -0.541  a          #> 10  0.874  0.445  1.02  -0.806  u          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 101 × 5 #>      cd45   cd38     cd34    cd19 cluster_id #>     <dbl>  <dbl>    <dbl>   <dbl> <chr>      #>  1  2.02  -0.234  1.02    -0.727  i          #>  2  1.52  -0.652  2.83    -0.0350 q          #>  3  0.281 -0.616 -0.00816 -1.07   k          #>  4  1.79  -0.490  0.426    1.61   y          #>  5  1.99  -0.220 -1.03    -2.58   a          #>  6  1.43   1.35   0.391   -0.886  x          #>  7 -0.335  1.80  -0.470   -0.747  r          #>  8 -1.03  -0.145 -1.36    -1.08   c          #>  9  0.630 -0.491 -0.990   -1.11   z          #> 10 -0.110  0.501  0.903   -1.36   n          #> # ℹ 91 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>       cd45   cd38    cd34   cd19 cluster_id #>      <dbl>  <dbl>   <dbl>  <dbl> <chr>      #>  1 -0.0579 -1.72  -1.42    0.289 x          #>  2  2.73    0.172  0.177   1.18  h          #>  3  0.538  -2.43   0.701  -0.222 n          #>  4 -1.16   -0.397  1.38   -0.903 a          #>  5 -0.210   0.404 -1.36    0.656 m          #>  6  1.08   -0.877  0.165  -2.33  t          #>  7  0.216  -1.20   0.776  -1.04  b          #>  8  0.670   2.26  -0.317   0.340 s          #>  9  0.468   0.819  0.0918  0.853 s          #> 10  2.01    0.284 -0.721  -1.49  y          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>       cd45   cd38    cd34   cd19 cluster_id #>      <dbl>  <dbl>   <dbl>  <dbl> <chr>      #>  1 -1.16   -0.397  1.38   -0.903 a          #>  2 -0.135  -0.177 -0.800   0.947 h          #>  3  0.0699 -1.46   1.82   -0.283 g          #>  4  0.840   1.47   0.305  -0.474 n          #>  5  1.08   -0.877  0.165  -2.33  t          #>  6  1.80    1.07   1.60    0.549 q          #>  7  2.01    0.284 -0.721  -1.49  y          #>  8  0.0317 -0.919 -0.970   0.168 t          #>  9 -0.884  -0.334  0.0589  0.366 l          #> 10 -1.09   -0.656 -1.48   -1.57  v          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 514 × 4 #>      cd45     cd38    cd34    cd19 #>     <dbl>    <dbl>   <dbl>   <dbl> #>  1 -1.76  -0.130    0.750   0.569  #>  2 -0.325  0.995    1.42   -1.90   #>  3  0.139 -0.0432  -0.569   1.27   #>  4 -0.221 -1.13     1.43    0.595  #>  5  1.82   0.0462   0.937  -0.0783 #>  6  1.47   0.909   -1.03   -1.34   #>  7 -0.287 -1.11     0.295  -0.0843 #>  8 -0.467 -0.421   -0.487  -1.22   #>  9  0.311 -0.00684  0.877  -0.194  #> 10  1.41   0.107   -0.0705  0.292  #> # ℹ 504 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 201 × 4 #>       cd45     cd38    cd34    cd19 #>      <dbl>    <dbl>   <dbl>   <dbl> #>  1 -0.325   0.995    1.42   -1.90   #>  2 -1.48   -1.45     0.0642 -0.158  #>  3  1.82    0.0462   0.937  -0.0783 #>  4  0.311  -0.00684  0.877  -0.194  #>  5  0.118   0.233   -1.21   -0.548  #>  6  0.648  -1.34    -0.0295 -0.718  #>  7 -0.403  -1.06     0.418  -0.470  #>  8  1.14   -1.03    -0.990   0.589  #>  9 -0.105  -0.0490   0.514  -0.102  #> 10  0.0821  0.844    1.40   -0.0105 #> # ℹ 191 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 226 × 4 #>      cd45   cd38    cd34   cd19 #>     <dbl>  <dbl>   <dbl>  <dbl> #>  1  0.113 -2.21   0.328   0.912 #>  2 -0.221 -1.13   1.43    0.595 #>  3  1.28   2.66   1.32    0.302 #>  4  0.648 -1.34  -0.0295 -0.718 #>  5 -0.508  0.647  0.783   0.965 #>  6 -0.382 -0.949  0.423   0.316 #>  7  1.29  -0.837 -0.445  -0.362 #>  8  0.118 -0.781  0.707  -1.72  #>  9  0.368  0.897 -2.19    0.497 #> 10  1.37   0.563 -0.343   0.968 #> # ℹ 216 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>       cd45   cd38     cd34   cd19 cluster_id #>      <dbl>  <dbl>    <dbl>  <dbl> <chr>      #>  1 -2.68   -0.366  0.00593 -0.150 x          #>  2 -0.0284  0.659  0.234    0.469 g          #>  3 -1.97   -0.272 -1.01    -0.245 h          #>  4 -0.139   0.326  0.497   -1.61  q          #>  5 -0.830  -0.881 -0.198    0.854 u          #>  6 -0.971   1.23  -0.347   -0.173 m          #>  7  1.53    0.522  0.843    2.24  t          #>  8  1.43    1.73  -0.129    0.411 d          #>  9  1.79   -1.61   0.990    1.02  g          #> 10 -0.716   0.200  0.856   -0.306 e          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 90 × 5 #>       cd45    cd38   cd34    cd19 cluster_id #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  2.00    0.505   1.01   1.17   a          #>  2 -0.239  -0.817   0.556 -0.381  a          #>  3 -0.148   2.25    0.850  1.25   a          #>  4  0.658  -2.70   -0.985 -1.30   a          #>  5 -1.62   -0.0323 -1.14   1.48   b          #>  6  0.300  -1.15   -1.44   1.39   b          #>  7  1.22   -1.28    0.340 -1.08   b          #>  8  0.128  -0.844   1.38   0.218  b          #>  9  0.561   0.619   0.395 -0.0378 b          #> 10  0.0478  1.47   -0.618 -1.26   c          #> # ℹ 80 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>        cd45     cd38    cd34    cd19 .spade_density #>       <dbl>    <dbl>   <dbl>   <dbl>          <dbl> #>  1 -0.406   -0.0145  -1.41   -0.484               1 #>  2 -0.0872   0.00235 -0.843  -0.796               1 #>  3  0.901   -0.100   -1.44   -1.02                1 #>  4 -0.793   -2.06     0.599   1.23                1 #>  5  1.60    -1.71    -0.553   0.595               1 #>  6 -0.579    0.516   -0.501  -0.0455              1 #>  7  0.0192  -0.216    0.352  -0.482               1 #>  8 -0.00891  1.54    -0.209  -0.767               1 #>  9  0.936    1.95    -0.224  -0.195               1 #> 10  1.23     0.389   -0.0372  0.565               1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>        cd45     cd38    cd34    cd19 .spade_density #>       <dbl>    <dbl>   <dbl>   <dbl>          <dbl> #>  1 -0.406   -0.0145  -1.41   -0.484             1   #>  2 -0.0872   0.00235 -0.843  -0.796             1   #>  3  0.901   -0.100   -1.44   -1.02              1   #>  4 -0.793   -2.06     0.599   1.23              0   #>  5  1.60    -1.71    -0.553   0.595             0.4 #>  6 -0.579    0.516   -0.501  -0.0455            1   #>  7  0.0192  -0.216    0.352  -0.482             1   #>  8 -0.00891  1.54    -0.209  -0.767             1   #>  9  0.936    1.95    -0.224  -0.195             1   #> 10  1.23     0.389   -0.0372  0.565             1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby       -0.0756     -0.0766       0.725      0.0444      -0.172 #> 2 mario        0.144      -0.0654      -0.389     -0.189        0.265 #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45    -0.0756 #>  2 kirby   a          cd38    -0.0766 #>  3 kirby   a          cd34     0.725  #>  4 kirby   a          cd19     0.0444 #>  5 kirby   b          cd45    -0.172  #>  6 kirby   b          cd38     0.238  #>  7 kirby   b          cd34    -0.0607 #>  8 kirby   b          cd19     0.0159 #>  9 kirby   c          cd45     0.247  #> 10 kirby   c          cd38    -0.143  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@t_emd` `stim_cd38@t_emd` `stim_cd34@t_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby                9.33              9.77              6.04 #> 2 mario               NA                NA                NA    #> # ℹ 101 more variables: `stim_cd19@t_emd` <dbl>, `stim_cd45@d_emd` <dbl>, #> #   `stim_cd38@d_emd` <dbl>, `stim_cd34@d_emd` <dbl>, `stim_cd19@d_emd` <dbl>, #> #   `stim_cd45@s_emd` <dbl>, `stim_cd38@s_emd` <dbl>, `stim_cd34@s_emd` <dbl>, #> #   `stim_cd19@s_emd` <dbl>, `stim_cd45@i_emd` <dbl>, `stim_cd38@i_emd` <dbl>, #> #   `stim_cd34@i_emd` <dbl>, `stim_cd19@i_emd` <dbl>, `stim_cd45@l_emd` <dbl>, #> #   `stim_cd38@l_emd` <dbl>, `stim_cd34@l_emd` <dbl>, `stim_cd19@l_emd` <dbl>, #> #   `stim_cd45@j_emd` <dbl>, `stim_cd38@j_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 t          cd45   stim         9.18 #>  2 t          cd38   stim         3.88 #>  3 t          cd34   stim         7.49 #>  4 t          cd19   stim        10.4  #>  5 d          cd45   stim         7.16 #>  6 d          cd38   stim         4.41 #>  7 d          cd34   stim         4.79 #>  8 d          cd19   stim         5.43 #>  9 s          cd45   stim        14.1  #> 10 s          cd38   stim         5.16 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0234   0.0331   0.0507   0.0273   0.0409   0.0409   0.0331 #> 2 mario     0.0370   0.0390   0.0349   0.0513   0.0370   0.0370   0.0287 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0234   0.0331   0.0507   0.0273   0.0409   0.0409   0.0331 #> 2 mario     0.0370   0.0390   0.0349   0.0513   0.0370   0.0370   0.0287 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@y_jsd` `stim_cd38@y_jsd` `stim_cd34@y_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby                  NA                NA                NA #> 2 mario                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@y_jsd` <dbl>, `stim_cd45@a_jsd` <dbl>, #> #   `stim_cd38@a_jsd` <dbl>, `stim_cd34@a_jsd` <dbl>, `stim_cd19@a_jsd` <dbl>, #> #   `stim_cd45@r_jsd` <dbl>, `stim_cd38@r_jsd` <dbl>, `stim_cd34@r_jsd` <dbl>, #> #   `stim_cd19@r_jsd` <dbl>, `stim_cd45@t_jsd` <dbl>, `stim_cd38@t_jsd` <dbl>, #> #   `stim_cd34@t_jsd` <dbl>, `stim_cd19@t_jsd` <dbl>, `stim_cd45@g_jsd` <dbl>, #> #   `stim_cd38@g_jsd` <dbl>, `stim_cd34@g_jsd` <dbl>, `stim_cd19@g_jsd` <dbl>, #> #   `stim_cd45@m_jsd` <dbl>, `stim_cd38@m_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 y          cd45   stim        0.788 #>  2 y          cd38   stim        0.937 #>  3 y          cd34   stim        0.812 #>  4 y          cd19   stim        0.915 #>  5 a          cd45   stim        0.813 #>  6 a          cd38   stim        0.690 #>  7 a          cd34   stim        0.923 #>  8 a          cd19   stim        0.741 #>  9 r          cd45   stim        0.737 #> 10 r          cd38   stim        0.769 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0281   0.0281   0.0561   0.0421   0.0341   0.0261   0.0561 #> 2 mario     0.0419   0.0379   0.0479   0.0379   0.0419   0.0220   0.0559 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0281 #>  2 kirby   b          0.0281 #>  3 kirby   c          0.0561 #>  4 kirby   d          0.0421 #>  5 kirby   e          0.0341 #>  6 kirby   f          0.0261 #>  7 kirby   g          0.0561 #>  8 kirby   h          0.0301 #>  9 kirby   i          0.0321 #> 10 kirby   j          0.0401 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby                    0             0.0769             0.0769 #> 2 mario                    0             0.0667             0      #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0      #>  2 kirby   a          cd38    0.0769 #>  3 kirby   a          cd34    0.0769 #>  4 kirby   a          cd19    0.0769 #>  5 kirby   b          cd45    0.0769 #>  6 kirby   b          cd38    0      #>  7 kirby   b          cd34    0.0385 #>  8 kirby   b          cd19    0.115  #>  9 kirby   c          cd45    0      #> 10 kirby   c          cd38    0.0833 #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  992  435  985  238   66  939  919  181  825   995 #>    [2,]  153  154  787  895  289  432  114  784  379   774 #>    [3,]  945   35  553  884  360    7  956  357   86   562 #>    [4,]  556  616  499  964  211  688   89  761  155   805 #>    [5,]   86  553  637  377    7  624  242  751  283     3 #>    [6,]  830  941  940  569  678  256  323  356  199   851 #>    [7,]  956  624  553   86  714    3  945  360  132   232 #>    [8,]  822  604   76  493  740  229  547  514  222   578 #>    [9,]  619  378  531  527  732  975  585  728  549   589 #>   [10,]  266  575  291  863  469  900  268  376  838   638 #>   [11,]  972  153  154  570  157  245  895  121  746   529 #>   [12,]  600  235  911  331  617  468  367  615  134    23 #>   [13,]  464  284  978  495  117   89  706  211  189   702 #>   [14,]  325  555  879  622  812  799  433  672  123   176 #>   [15,]  690  152  420  907  701  492   35  981  657    86 #>   [16,]  140   64  162  164  143  552  230  366  243   167 #>   [17,]  386  502  643  891  413  551  120  567  876   257 #>   [18,]  341  909  533  598  995  340  487  351  724    66 #>   [19,]  488  909   92  340  322  341   18  855  486   183 #>   [20,]  372  856  507  943   72  315  309   22  136   655 #>   [21,]  280   90  689  680  307  778  189  436  702   359 #>   [22,]   72  118  943  309  507  796  856  824   20   470 #>   [23,]  373  327  843  844  676  134  936   12  699   617 #>   [24,]   29  742  122  826  334  847  756  178  382   955 #>   [25,]  921  169  916  344  866  225  991  500  930   700 #>   [26,]  380   93  196  758  452  911  158   78   77   891 #>   [27,]  285  312   69  292   36  223  362  237  661   180 #>   [28,]  440   62   52  226  908  241  677   71  217   878 #>   [29,]  742  122   24  382  331  816  955  847  826   334 #>   [30,]   68  855  461  974  952  735  183  472  614   345 #>   [31,]  893  589  787  531   52   62  595  975  850   908 #>   [32,]  205  835  375  477   79  315  953  151  136   713 #>   [33,]  463  221  179  653  361  479   95  871  938   529 #>   [34,]  971  539 1000  864  870   95  938  685  136   267 #>   [35,]    3  884  562  360  553  690  945  751   86   511 #>   [36,]   69  285  292   98  237  931  912   27  223   661 #>   [37,]   40  756  214  982  178  632  130  334  780   640 #>   [38,]  904  953  437  799  107  622  433  533  669   128 #>   [39,]  719  223  285  777  292  661  795  246  193   362 #>   [40,]   37  214  705  756  982  809  242  780  178   983 #>   [41,]  723  496  661  385   50   36  755  519   98   312 #>   [42,]  204  107  437  290  602  159  460  540  622   401 #>   [43,]   71  878  391  440   62   28  106  914  764   247 #>   [44,]  830  740  493  434  456  941  295  449  766   294 #>   [45,]  793  883  329  780  239  338  442  195  268   384 #>   [46,]  427  458  844  807  794  740   23  373   60   820 #>   [47,]  129   75  245  162  278  918  234   54  972   570 #>   [48,]  221  776  915  361  379  405  168   55  950   359 #>   [49,]  587  438  534  538  168  796  856  545  792    22 #>   [50,]  231  254  524  255   98  280  464  689  397   897 #>   [51,]  818  920  178  990  113  847  982  813  576    91 #>   [52,]   62  908   28  440  217  241   31  589  709   595 #>   [53,]  966   94  335   82  431  454  116  189  469   579 #>   [54,]  408  849  652  554  278  948  230  856  374   572 #>   [55,]  950  776  959  789  801  171  842  582  663   317 #>   [56,]  529   34   95  642 1000  938  354  539  630   245 #>   [57,]  914  347  245  570  642   47  234   56  864   971 #>   [58,]  949  937  601  220  870  462  829  267  862   630 #>   [59,]  434  119  456  528  708  505  949  684  267   277 #>   [60,]  794  218  699  515  373  516  514  763  294   508 #>   [61,]  875  451  579  963  116  865  915  958  335   860 #>   [62,]   52  440   28  908   31  241  217  589  878   709 #>   [63,]  788  797  836  655  546  372  194  518  477   984 #>   [64,]  366  140  552   16  143  243  126  490   85   164 #>   [65,]  628  902  520  763  518  514  836  880  910   186 #>   [66,]  425  181  825  598  533  472  726  182   18   390 #>   [67,]  578  278  938   95  849  141  836  984  880    76 #>   [68,]  952  345  461  735  974  183  156  370   30   567 #>   [69,]   36  237   27  285  170  912  292  180  342   443 #>   [70,]  676  711  820  806  775   78   93  750  843   465 #>   [71,]  391   43   28  677  878  534  587  440   62   792 #>   [72,]   22  309  943  631   20  824  372  507  856   135 #>   [73,]  699  314  877  277  294  917  665  119  508   327 #>   [74,]  519  292  719  755  362  661  557   39  618   285 #>   [75,]  374  641  572   47  948  999   54  960  422   230 #>   [76,]  880  578  141  980  836  858  902   67  822   984 #>   [77,]  932  939  610  452  196  506  891   26  935   158 #>   [78,]   93  617  158  321  777  465  373   26  989   750 #>   [79,]  390   32  954  151  477  833  181  953  643   835 #>   [80,]  498  679   19  488  486   81  416  402   92   712 #>   [81,]  435  561  322  486  612  710    1  238  995   939 #>   [82,]   94  365  933  694  963  431   53  743  363   900 #>   [83,]  263  798  819  796  300  647  526  834   22   206 #>   [84,]  517  281  525  248  378  687  233  549  355   673 #>   [85,]  366  162   64  164   16  490  918  143  302   980 #>   [86,]  553    5    7  714  956    3   35  624  232   360 #>   [87,]  829  566  483  339  862  523   88  182  630   220 #>   [88,]  802  957  924  871  194  463  339  568  630   829 #>   [89,]  443  170  947  211  482    4  706  556  499   603 #>   [90,]  778  280  689  359   21  436  524  399  950   931 #>   [91,]  813  197  818  586  990  535  983   51  674   468 #>   [92,]  488   19   30  855  542  909  183  857  351   487 #>   [93,]   78  617  158   26  321  634  196  380  911   465 #>   [94,]   82  365   53  694  933  963  431  363   61   900 #>   [95,]  938   67  121  245  653  871  278  971   33   129 #>   [96,]  326  680  861  970  922  791   21  654  853   307 #>   [97,]  610  733  841  901  103  932  304   77  723   452 #>   [98,]  254  223  285   36  661  292  931   69   39   795 #>   [99,]  627  618  768  444  109  550  930  237  823   916 #>  [100,]  370  754  183  935  977  345  729  952   68   156 #>  [101,]  284  117  640  453  231  397  611  334  706   332 #>  [102,]  299  450  738  809  945  571  536  831  790     3 #>  [103,]  901   97  733  841  610  913  898  355  723   304 #>  [104,]  287  848  228  236  804  336  960  573  313   374 #>  [105,]  722  190  876  407  257  107  120  602  437   146 #>  [106,]  497  247  471  986  289  532  633  635  874   489 #>  [107,]  437   42  602  290  460   38  204  105  707   190 #>  [108,]  139  714  522  330  212  771  232  377  860   215 #>  [109,]  823  478  627   99  490  973  143  768  444   393 #>  [110,]  946  259  367   12  854  235  191  753  600   844 #>  [111,]  834  693  782  349  633  532  538  819  746    83 #>  [112,]  353  419  629  811  536  563  639  313  667   175 #>  [113,]  920  847  658  178  332   51  146  982  310   762 #>  [114,]  432  436  778  969  774  359  895  784   90   379 #>  [115,]  857  351  176  487  662  879  669   14  485   855 #>  [116,]  875   61  579  189  335  702  451  727  964   668 #>  [117,]  284  640  544  101  445  704  249  978  837   335 #>  [118,]  593  545   22  306  943  961  438  470   72   796 #>  [119,]  456  294  708  434  277  218  699  917   59    73 #>  [120,]  551  190  658   17  876  386  502  105  643   257 #>  [121,]  938  871  129   95  245  856  278  234  534    49 #>  [122,]   29   24  178  334  847  742  756  816  586   813 #>  [123,]  404  672  325   42  205  929  894  540  799   107 #>  [124,]  163  523  506  181  192  829  786  541  954   872 #>  [125,]  369  734  512  674  983  265   40  720  817   632 #>  [126,]  973  143   64  366  552  288  140  671  243   490 #>  [127,]  667  336  520  745  252  573  852  552  515   313 #>  [128,]  559  833  473  217  182  405  350  381  803    38 #>  [129,]  278  162  245  121  938   95  583   67  849   164 #>  [130,]  632  615  756  262  334  753  122  367  596   265 #>  [131,]  500  137  169  659  858  832  736  618  944   296 #>  [132,]  146  297  826  624  227  409  956    7  441   876 #>  [133,]  770  906  594  186  721  508  264  308  457   737 #>  [134,]  844  373  967  617  344  308  264  955  235   331 #>  [135,]  309  631  943  470   72  581  507  810   22   824 #>  [136,]  194  477  655  984  315   20  871  462  797   802 #>  [137,]  131  500  786  659  736  937  944  858  541   169 #>  [138,]  675  821  614  348  645  602  783  574  415   437 #>  [139,]  108  798  216  714  420  152  771  681  701   537 #>  [140,]  552  143  243   64   16  745  520  490  366   252 #>  [141,]  880  980   76  578  490  788  836  910   67   628 #>  [142,]  759  544  730  146  722  297  624  958  956   105 #>  [143,]  140  243  552  973   64   16  823  126  478   109 #>  [144,]  415  411  485  662  138  614  979  675  204   783 #>  [145,]  693  269  647  188  798  253  526   83  263   208 #>  [146,]  722  132  544  142  759  297  876  737  658   826 #>  [147,]  407  737  906  457  696  789  594  713  388   887 #>  [148,]  282  406  491  283  637  705  869  982  576   242 #>  [149,]  503  358  370  381  260  355  951  281  524   324 #>  [150,]  346  762  453  332  977  754  413  371  742   621 #>  [151,]  721  835  713  457  810  594  257   79  205    32 #>  [152,]  681  657  300  216  907  690   15  798  981   389 #>  [153,]  154   11  895    2  379  529  972   33  850   221 #>  [154,]  153   11  895  157    2  391  972  289  570   529 #>  [155,]  616  603  588    4  392  596  185  556  428   396 #>  [156,]  726  345  567  472  935  183  413  598   68   260 #>  [157,]  746   11  972  154  570  224  391  633  934   153 #>  [158,]  321  196  465   93   78  891  251  634   26   380 #>  [159,]  401  792  204  677   42  538  460  290  923   241 #>  [160,]  859  967  994  716  344  867  866  700  428   398 #>  [161,]  692  405  796  460  538  819  168  602  545   105 #>  [162,]   16  129  278  164   85  918  583  849  230    64 #>  [163,]  124  523  506  825  181  992  260   87  192   829 #>  [164,]   16  478  823  162  143  583  490  109  140   141 #>  [165,]  845  986  532  494  247  187  291  782  838   743 #>  [166,]  840  312  392   27  715  170  428  814   69    89 #>  [167,]  606  387  504  521  455  745  961  288  451   243 #>  [168,]  538  796  792   49  405  534  587  241  315    48 #>  [169,]  500  131   25  820  858  244  944  137  921   916 #>  [170,]  443   69  482   89  342  706  912   36  947   556 #>  [171,]  959  950  605   55  317  801  249  702  875   958 #>  [172,]  271  582  568  768  560  399  924  698  926   463 #>  [173,]  960  374  228  903  287  104  997  175  613   804 #>  [174,]  637  200  576  406  305  873  144  148  415   751 #>  [175,]  613  903  804  229  353  515  173  997  667   429 #>  [176,]  857  879  351  433  669  487  585  783  115   799 #>  [177,]  371  193  621  932  453  231  385  254  661   452 #>  [178,]  756  982  122   51  847  113  920  214  334    24 #>  [179,]  653   33  463  479  924  361  221   95  279   938 #>  [180,]  795  237  285   69  706  892  223   27  393   342 #>  [181,]  825  182   66  425  124  163   79  523  260   726 #>  [182,]  181  425  381  128  260  833  825  350  726   324 #>  [183,]  935  567  345  952  754  156  100  413   68   977 #>  [184,]  368  940  419  752   15  356  448  690  475   511 #>  [185,]  396  596  616  761  450  155  293  738  965   603 #>  [186,]  508  133  518  763  546  388  594  890  628   721 #>  [187,]  401  635  986  532  874  471  159  923  204   460 #>  [188,]  572  269  999  263  641  145  234  693   83   274 #>  [189,]  702  482  116  464  861  680  211  280  966   791 #>  [190,]  707  821  120  602  437  105  460  658  107   551 #>  [191,]  367  275  412  636  854  632  600  816  110   262 #>  [192,]  560  557  124  506  541  172  786  271  698   296 #>  [193,]  371  621  452  453  899  611  380   39  223   150 #>  [194,]  802  136  462  797  477  871  829   88  655    63 #>  [195,]  780  705  704  883  282  239  837  769  240   445 #>  [196,]  158  251  891  939   26   77  380  322   93   634 #>  [197,]  813   91  818  983   51  586  636  674  178   990 #>  [198,]  548  272  316  352  987  739  325  896  672   328 #>  [199,]  851  896  684  608  987  417  414  274  941   548 #>  [200,]  576  873  675  415  174  406  637  535  990   409 #>  [201,]  936  416   46  886   23  843  807  295  458   946 #>  [202,]  530  137  250  131  500  296  858  311  169   659 #>  [203,]  747  720  265  327  357  691  571  839  319   536 #>  [204,]   42  401  159  460  107  437  602  540  622   799 #>  [205,]   32  835  375  953  810  151  290  315  656   123 #>  [206,]  773  976  300  438  819  118  681  545  263   306 #>  [207,]   96  179  302  970  509  467  550  279  326   479 #>  [208,]  677  894  656  226  526  587  269  792  290   375 #>  [209,]  806  275  888  412  191  775  561  911  258    70 #>  [210,]  725  418  717  591  649  476  668  213  455   474 #>  [211,]  964    4  791  189   89  482  499  702  556   688 #>  [212,]  330  522  785  730  283  869  645  692  142   297 #>  [213,]  717  476  320  418  556  455  725  892  927   964 #>  [214,]   40  242  809  756   37  982  178  297  624   640 #>  [215,]  701  232  798  420  540  647  929  714  108    86 #>  [216,]  681  564  976  426  860  865  300  714  819   389 #>  [217,]  241  908  803  595  128   52  709  850   28   833 #>  [218,]  294  708   60  699  508  902  119  456  514   794 #>  [219,]  346  611  332  453  977  334  816  150  371   646 #>  [220,]   58  862  601  949  919   87  937  267  988   354 #>  [221,]  361   48  379  359  463   33  583  871  776   915 #>  [222,]    8  613  604  577  175  903  740  225  229   822 #>  [223,]  285   98   39  661  292  795  254   27   36   193 #>  [224,]  746  633  934  157  349  111  648  363  834   782 #>  [225,]  577  697   25  429  671  921  794  916  514   629 #>  [226,]  375   28  677  208  315  792  587  534  217   241 #>  [227,]  580  868  990  535  409  441  132  826  360   945 #>  [228,]  287  104  848  960  374  569  236  256  652   804 #>  [229,]  794  804  515  902  514   65  218   60  628     8 #>  [230,]  824  422  336   16  652  773  374   54  881   745 #>  [231,]  255   50  254  397  101  284  177  464  453   338 #>  [232,]  714  929  215  574  540    7  108  798   86   212 #>  [233,]  566  951  324  248   87  531  549  687  517   523 #>  [234,]  570  587  534  121  972   49  856  188  391   864 #>  [235,]  615  753  331  747  955  600   12  134  265   967 #>  [236,]  256  848  907  104  287  772  573  356  228   678 #>  [237,]  292   69   36  795  285  912  180   27  931   768 #>  [238,]  612    1  995  919  992  905  390  528  465   985 #>  [239,]  883  329  780  588  195  704  117   37  640   978 #>  [240,]  837  704  727  579  445  978  335  431  668   730 #>  [241,]  217  923  792  635   52  908  168   28  538   595 #>  [242,]  297  624  214  785  982  132  809  553  956   283 #>  [243,]  552  140  745  252  143  455  606  973  320   127 #>  [244,]  169  820  500   25  131  766  858  137  427   815 #>  [245,]  129  938  121   95  529  278  642  234  570    11 #>  [246,]  777  750  344  866  719   39  331  991  731   617 #>  [247,]  253  349  106  633  187  934  532   43   71   165 #>  [248,]  281  951  324  517  233  728  355  358  549   260 #>  [249,]  605  544  759  722  146  171  801  310  640   959 #>  [250,]  202  832  131  550  296  748  137  530  500   169 #>  [251,]  322  196  158  634  340  710  486  321   93   911 #>  [252,]  320  243  476  745  261  455  127  649  552   667 #>  [253,]  247  349  145  693  647  633  187  421  401   111 #>  [254,]   98  397  223  899   50  285  621  582  317   706 #>  [255,]  231  338  683  757   50  385  177  464  254   827 #>  [256,]  236  848  356  772  287  907  104  228  960   274 #>  [257,]  713  643  876  457  407  594  721  386  835   105 #>  [258,]  888  682  561  939  610  729  998   77   97    19 #>  [259,]  110  946  458  807  844  629  753  967   46   319 #>  [260,]  825  324  381  728  951  726  182  523  156   472 #>  [261,]  476  320  474  252  927  852  649  388  660   745 #>  [262,]  130  334  632  646  588  219  101  756  623   611 #>  [263,]   83  300  798  999  206  681  819  526   22   824 #>  [264,]  308  955  770  133  580  882  826  571  388   747 #>  [265,]  753  615  747  674  293  235  571  203  130   720 #>  [266,]   10  575  863  291  268  638  376  838  469   808 #>  [267,]  862  462  949  136  620  477   58  803  194   870 #>  [268,]  575  808  484  863  469  298  827  266  838   491 #>  [269,]  145  188  208  417  526  274  677  693  894   647 #>  [270,]  800  917  631  810  749  678  459  581  423   135 #>  [271,]  172  582  842  926  663  899  350  872  741   473 #>  [272,]  352  325  316   14  208  894  548  555  677   540 #>  [273,]  559  774  405  128  503  969  381  549  741   923 #>  [274,]  526  656  417  631  896  199  894   72  269   208 #>  [275,]  623  758  600  816  191  412  611  331  367   911 #>  [276,]  494  614  144  491  783  348  735  662  461   138 #>  [277,]  314  119  528   73  917  321  151  390  721   699 #>  [278,]  129   67  849  162  938   95  245  121   54   578 #>  [279,]  479  529  179  642  394  653   33   56  311   630 #>  [280,]   90  689   21  702  171  189  524  436  778   950 #>  [281,]  248  355  728  673  517  324   84  951  149   260 #>  [282,]  869  148  283  491  846  481  446  195  785   780 #>  [283,]  869  785  212  330  730  481  645  282  297   242 #>  [284,]  464  706  117  101   13  702  171  827  231   397 #>  [285,]  292  223   27   36   98   69   39  661  237   795 #>  [286,]  970  947   50   21  467  443  897  680  170    41 #>  [287,]  228  848  104  960  374  236  569  256  336   652 #>  [288,]  606  167  973  387  143  243  584  654  521   688 #>  [289,]  784  489  774  895  893  471    2  497  106    31 #>  [290,]  507  107  796   42  315  792  656  894  205   375 #>  [291,]  838  900  575  469   10  986  694  845  266   471 #>  [292,]  285  237   36  223   27   39  795   74   69   661 #>  [293,]  753  596  716  615  265  369  235  450  130   747 #>  [294,]  218  119  456  699  708   73  917  508  270   434 #>  [295,]   44  650  664  201  383  449  740  830   46   434 #>  [296,]  192  557  560  339  698  659  618  403  924   736 #>  [297,]  624  242  730  785  146  956  142  132  759   544 #>  [298,]  268  808  735  442  863  952  484  575   68    30 #>  [299,]  102  571  809  811  450  396  261  945  852   418 #>  [300,]  681  263  824  976  206   83  881  216  999   152 #>  [301,]  625  537  648  771  139  599  337  579  925   108 #>  [302,]   85  642  479  918  311  279  179  653  164   162 #>  [303,]  489  694  289   94  900  784   82  365  114   853 #>  [304,]  932  736  719  519   74  557  452  610   97   750 #>  [305,]  174  200  415  979  144  662  411  651  485   410 #>  [306,]  593  118  583  545  438  773  961   22  206   167 #>  [307,]   21  467   90  778  436  114  853  359  432   280 #>  [308,]  264  955  770  388  133  967  571  882  826   134 #>  [309,]  943   72  135  631  372   22  518  749  507    20 #>  [310,]  484  821  658  735  249  190  120  113  952   605 #>  [311,]  653   67   95  938  870  578  642  822  530    76 #>  [312,]   27  362  392  285  731  661  519  496  223   840 #>  [313,]  563  804  573  336  515  127  667  767  104   516 #>  [314,]  277   73  665  917  151  592  119  721  810   400 #>  [315,]   20  136  507  375  833  290   32  797  835   205 #>  [316,]  485  411  555  272  662  325   14  979  352   144 #>  [317,]  842  801  899  696  887  605  663  959  926   171 #>  [318,]  364  619  609  985    9  351  527  425  855   483 #>  [319,]  967  747  852  516  691  811  629  308   60   515 #>  [320,]  476  252  892  261  213  927  439  455  717   418 #>  [321,]  158  465  634  954  528   78  890  891  277    93 #>  [322,]  251  340  486  196  561  939  909  710  341   995 #>  [323,]  104    6  804  563  767  228  287  678  313   997 #>  [324,]  951  260  381  248  728  233  566  182  523   549 #>  [325,]   14  123  272  672  622  894   42  799  812   555 #>  [326,]  680  791  922   96  861  947  970  482  654   443 #>  [327,]  468  886   73   23  699  877  747  203  691   357 #>  [328,]  744  410  979  402  712  672  198  485  679   305 #>  [329,]  239  883  495   13  978  703   45  780  588   195 #>  [330,]  522  212  626  481  692  869  446  283  108   846 #>  [331,]  600   29  235  758  615  742  617  623  246    24 #>  [332,]  847  346  150  334  219  453  977  742  113   762 #>  [333,]  927  887  696  544  737  474  826  146  476   722 #>  [334,]  847  122  332  756  816  742  178  219  632   346 #>  [335,]  966  875  579  116   53  171  727  958   61   827 #>  [336,]  573  881  127  313  824  104  230  591  745   848 #>  [337,]  430  625  301  599  648  424  537  139  389   492 #>  [338,]  683  757  255  827  231  454  464   50  808   284 #>  [339,]  924  630   88  957  698   87  354  829  296   653 #>  [340,]  909  322  341  598   18  251  533  567  939   196 #>  [341,]  909   18  340  724  533  598  995  487  592   402 #>  [342,]  393  439  867  428  556   69  840  170  237   180 #>  [343,]  731  362  496  750  814  519  775  312  715    74 #>  [344,]  866  991  700  246  921  916  777  930  160   867 #>  [345,]  156   68  567  726  952  183  935  370  413   551 #>  [346,]  150  453  332  611  219  762  371  977  742   847 #>  [347,]  685  864  608  971   34  914 1000  539   57   234 #>  [348,]  783  614  799  138  437  707  602  461  622   460 #>  [349,]  633  934  253  111  782  247  693  224  599   532 #>  [350,]  473  741  833  643  568  271  381  872  957   182 #>  [351,]  857  487  176  855  115   18  669  879  598   533 #>  [352,]  272   71  208  269  417  325  440  145  316   548 #>  [353,]  429  671  667  447  175  903  552   64  639   126 #>  [354,]  630  394  339   87   58  220  928  870   88    56 #>  [355,]  281  248  673  149  998  841  728  913  260   324 #>  [356,]  772  459  511  597  256  678  543  236  800   767 #>  [357,]  691  884  882    3  945   35  580  581  571   747 #>  [358,]  969  778  524  149  951  381  436  687  503   399 #>  [359,]  221  361   90  463  778  950   48  568  689    55 #>  [360,]  409  562    3  884   35    7  423  868  574   581 #>  [361,]  221   48  359  379  463  583   33  915  776   950 #>  [362,]  519  312  661   27  719   74  496   39  292   285 #>  [363,]  963  889  895  933  915  834   82  648   94   111 #>  [364,]  318  351  855  857  115  435  619  879  985   609 #>  [365,]   82  743   94  431  828  694  933  537  963   648 #>  [366,]   64   85  140   16  126  552  143  490  164   162 #>  [367,]  615  632  191  130   12  235  753  636  600   275 #>  [368,]  511  543  751  597  562  356  410  873  772    35 #>  [369,]  293  450  265  596  753  125  130  615  185   738 #>  [370,]  100  345  808   68  149  952  754  503  935   183 #>  [371,]  193  453  611  621  346  150  452  177  762   380 #>  [372,]   20  943  309   72  518  856   63  655   22   749 #>  [373,]  844  134  617  989   60   23   78  699  967   921 #>  [374,]  960  287  228  848   75  572  104  569  230   641 #>  [375,]  205   32  953  226  315  290  812  835  136   833 #>  [376,]  525  969  687   10  436  863  784  517  266   358 #>  [377,]  108    5  925  701  869  637  215  283   86   212 #>  [378,]    9  531  619  549  728  233   84  248  687   281 #>  [379,]  221   48  361  850  895  787  168  871  595   153 #>  [380,]  758   26  452  891  742  193  150  196  346   371 #>  [381,]  741  260  951  324  182  350  559  523  726   128 #>  [382,]  634  502  441  742   29  413  762  876  150    17 #>  [383,]  414  505   44  608  851   59  685  941  449   434 #>  [384,]  282  846  793  446  195  942  743  481  780   869 #>  [385,]  177  723   41  255  231   50  646  496  371   661 #>  [386,]   17  643  876  502  257  120  891  663  551   737 #>  [387,]  167  504  521  606  584  288  451  773  455   644 #>  [388,]  763  186  520  147  308  261  508  133  906   696 #>  [389,]  657  426  681  216  976  564  591  422  206   152 #>  [390,]   79  592  995  277  528  151  724  953   66   181 #>  [391,]  534   71  587  677  538  792  570   49   28   878 #>  [392,]  312   27  731  623  840  166  859  646  285   155 #>  [393,]  439  342  892  867  237  556  180  973  700   930 #>  [394,]  354  630  928  339  279   56  781    2  529   233 #>  [395,]  654  670  584  288  521  644  504  387  688   167 #>  [396,]  185  616  299  596  761  450  718  738  418   155 #>  [397,]  254  899  621  317  801  453  762  605  193    98 #>  [398,]  671  885  994  429  439  428  697  160  393   973 #>  [399,]  698  582  524  568  560  172  897  271  689   778 #>  [400,]  996  684  672  592  314  205  917  665  123   277 #>  [401,]  159  204  187   42  460  792  602  540  635   437 #>  [402,]  712  341  679  724  909  486  744  314  410   592 #>  [403,]  897  698  399  560  913  557  524  296  192   358 #>  [404,]  123  672  415  979  574  724  868  423  929   799 #>  [405,]  168  161  559  128   48  923  776  915  707   241 #>  [406,]  576  200  982  148  491   51  442  645  818   174 #>  [407,]  789  147  257  722  737  663  713  470  105   776 #>  [408,]   54  849  554  652  547  760  278  749  372   971 #>  [409,]  360  868  574  227  535  132  990  423  675   873 #>  [410,]  744  651  328  402  679  873  543  979  712   368 #>  [411,]  485  144  316  662  979  415  475  305  421   540 #>  [412,]  636  816  275  911  586  813  219  367  632   334 #>  [413,]  567  502   17  935  150  183  382  762  754   345 #>  [414,]  608  199  941  987  851  896  760  685  417   948 #>  [415,]  675  979  138  404  574  200  144  409  576   614 #>  [416,]  843  936  486   23  710  712  612  886  402   468 #>  [417,]  896  274  269  199  208  987  548  608  526   894 #>  [418,]  725  210  717  476  213  668  320  474  591   649 #>  [419,]  563  536  313  323   15  981  907  236  690   767 #>  [420,]  798  701  215  647  690  139  962  152   15   693 #>  [421,]  475  253  316  411  145  272  352  647  485   693 #>  [422,]  230  387  389  773  206  606  374  504  167   657 #>  [423,]  665  868  800  877  459  581  360  562  884   270 #>  [424,]  240  727  837  301  670  704  579  666  978   625 #>  [425,]   66  182  181  825  620  709  732  726  533   260 #>  [426,]  389  657  216  591  564  681  976  210  881   981 #>  [427,]   46  244  740  222  577  820  807  766  458   794 #>  [428,]  840  814  342  867  885  859  393  398  439   160 #>  [429,]  671  667  398  629  852  225  353  252  697   127 #>  [430,]  337  625  648  301  599  537  224  480  644   828 #>  [431,]  942  846   82  743  365  481  626  579   53   446 #>  [432,]  114  895  379  359  221  361  774  778  436     2 #>  [433,]  622  908  879  176  799   38  904  783  953   348 #>  [434,]  456   59  119  708  766  294  740  493  528   218 #>  [435,]    1  992  985  238   81  939   66   18  995   322 #>  [436,]  778   90  969  524  358  280  454  114   21   273 #>  [437,]  602  107  707  460   42  190   38  204  904   348 #>  [438,]   49  306  545  773  593  118  889  206  796   819 #>  [439,]  393  892  342  556  973  320  213  867  688   180 #>  [440,]   28   62   52  908  555   71  622  433  764   878 #>  [441,]  876  868  382  227  826  457  695  594  502   721 #>  [442,]  491  982  406  113  640  785  310  484  920   282 #>  [443,]  170  482  706   89   69  912  947  702  931    36 #>  [444,]  930   99  910  627  991  916  618  700  768   546 #>  [445,]  704  837  668  790  117  240  725  730  809   418 #>  [446,]  481  626  846  942  330  743  869  431  522   283 #>  [447,]  126  353  398  671  639  429  973  885  288   805 #>  [448,]  886  516  767  691  678  877  327  203  323   458 #>  [449,]  996  400  712  543  744  851  877  830  456   119 #>  [450,]  738  102  299  596  293  369  185  396  265   809 #>  [451,]  865   61  875  504  521  167  958  579  387   860 #>  [452,]  193  932  380  371   26  719   77   39  758   891 #>  [453,]  346  150  762  371  611  621  332  193  977   754 #>  [454,]  827  469  683  436  503  280  966   53  335   484 #>  [455,]  745  961  660  649  717  606  167  243  476   213 #>  [456,]  119  434  294  708  218   59  699  493  830   740 #>  [457,]  721  594  713  810  257  835  151  147  876   906 #>  [458,]  807  886  319  844  516  327   46   60   23   203 #>  [459,]  800  356  423  772  511  597  270  543  562   581 #>  [460,]  602  707  437  107  204   42  190  161  401   159 #>  [461,]  735   68  821  952  974  614  348  345  190   783 #>  [462,]  870  194  829  984  949  937  477  267  136    58 #>  [463,]  924  221  957   33  359  568  361  698   88   179 #>  [464,]  284   13  702  189  706  280  482  443  117    50 #>  [465,]  158  321  528   78  196  944   93  786  710   954 #>  [466,]  395  861  670  424  727  430  644  654  853   584 #>  [467,]  307  897  779   21  403  970  286  524   90   689 #>  [468,]  327   12   91  586  535  990  227  674  955    23 #>  [469,]  454  900  575  291  694  838  827  268  863   484 #>  [470,]  507  135  796   22  407  118  545  309  147   943 #>  [471,]  986  635  532  923  187  497  874  589  774   900 #>  [472,]  156  726  598  345  825   66  567  260  183   935 #>  [473,]  350  741  833  643  128  797  271  776  568   954 #>  [474,]  649  476  261  927  660  333  956  591  210   418 #>  [475,]  752  411  701  421  420  215  368  597  751   511 #>  [476,]  320  261  927  213  474  252  418  649  717   455 #>  [477,]  655  984  136   32  194  462   63  797   79   954 #>  [478,]  823  109  164  143  583  490  788   99  768   140 #>  [479,]  279  529   33  179  653  642   95  938  245   311 #>  [480,]  644  504  521  773  889  206  387  438  972   746 #>  [481,]  446  626  846  942  330  869  283  522  431   212 #>  [482,]  443  702  791  170  706  189  912  556   89   211 #>  [483,]  709  862   87  620  566  803  531  425  595   220 #>  [484,]  808  310  735  827  503  370  952  268  249   821 #>  [485,]  662  411  979  316  144  325   14  415  555   799 #>  [486,]  322  710  251  416  402  712  843  911  612   909 #>  [487,]  669  351  533  341   18  598  176  909  724   857 #>  [488,]   19   92  855  909  351  487   18   30  341   857 #>  [489,]  289  694  784  900  471  774  303  106  895   986 #>  [490,]  980  141  823  109  880  143  478  140  627   164 #>  [491,]  442  282  406  283  869  645  785  148  481   446 #>  [492,]   15  501  152  337  657  962  389  690  419   420 #>  [493,]  941  740  830  547  760  456  434    8  554   708 #>  [494,]  276  838  165  614  348  491  291  986  874   144 #>  [495,]   13  329  464  513  284   89  239  231  338   255 #>  [496,]  362  723  519  661  312   41   74  304   27   719 #>  [497,]  106  874  471  893  986  635   31  289  589   187 #>  [498,]  679   91  197   80  402  651  468  486  813   818 #>  [499,]    4  688  805  791  922  211   89  556  964   947 #>  [500,]  169  131  858  137  944   25  820  921  244   659 #>  [501,]  492  337  430  389  657  641  962  599   15   152 #>  [502,]   17  413  695  386  567  382  120  876  441   643 #>  [503,]  149  370  484  808  358  273  381  454  551   863 #>  [504,]  521  387  167  644  606  773  451  206  306   584 #>  [505,]  685   59  608  760  988  949  267   34  862   864 #>  [506,]  124  872  523  163  560  192  932   77  825   260 #>  [507,]  470   20   22  290  796   72  943  309  835   315 #>  [508,]  186  518  917  810  763  594  721  133  218   457 #>  [509,]  479  853  279  918  529    2  153  207  179    33 #>  [510,]  641  572  188  999  962  145  948  569  269   960 #>  [511,]  562  772  459  356  597  690  884   35  907   360 #>  [512,]  632   37  262  130  588   40  590  125  983   756 #>  [513,]   13  495  211   89  978  922  947  464  189   680 #>  [514,]  902  628  921   65  763  794  218  880  858   910 #>  [515,]  804  516  229  313  127   60  794  667  767   218 #>  [516,]  691  515  767   60  319  313  678  357  563   804 #>  [517,]  248   84  687  281  358  525  969  913  233   951 #>  [518,]  508  186  943  309  520  372  628   65  836   749 #>  [519,]  362   74  661  719  292  496   39  285  312   755 #>  [520,]   65  518  628  763  961  127  388  660  943   745 #>  [521,]  504  387  167  644  584  606  451  288  773   480 #>  [522,]  330  771  692  860  212  108  626  730  481   161 #>  [523,]  124  163  506  260  324  381  350  825  872   182 #>  [524,]  399  778  358   90  897  689  436   50  280   254 #>  [525,]  687  376  969  549  517   84  784  774  378   248 #>  [526,]  894  656  929  274  208  540  631   83   72   290 #>  [527,]  585  619    9  732  975  589  974  176  638   378 #>  [528,]  277  321  465  989  390  119  612   59   79   890 #>  [529,]  479  245   33  938   95  153   56  642  279   121 #>  [530,]  202  311   58  937  870  949  354  630  220   137 #>  [531,]    9   31  566  378  549  787  893  589  233   975 #>  [532,]  986  471  187  635  782  923  111  401  933   159 #>  [533,]  598  669  904   18  724  341  487  909   66   340 #>  [534,]  587  391   49  538  168  792  677  234  226   241 #>  [535,]  990  227  409  873  868   91  360  200   51   818 #>  [536,]  691  357  563  102  811  419  981   35  299   313 #>  [537,]  771  648  301  782  625  365  522  108  139   828 #>  [538,]  792  168   49  587  534  923  796  159  161   677 #>  [539,] 1000   34  864  971  803  226  862  595  267   607 #>  [540,]  929  894   42  204  526  232  123  215  401   290 #>  [541,]  786  829  659  954  462  937  194  192  124   924 #>  [542,]  673   30  100  998  370  472  855  728   68   281 #>  [543,]  597  996  459  356  423  800  511  744  672   877 #>  [544,]  759  142  249  146  730  333  958  722  605   297 #>  [545,]  118  306  593  438  796  819  470   22  865   206 #>  [546,]  910  788   63  186  926  890  518  628  133   663 #>  [547,]  760  554  408  493  822  578  849  984  941   652 #>  [548,]  896  987  851  684  417  199  198  272  325   672 #>  [549,]  687  951  531  324  566  969  525  732  248   728 #>  [550,]  627  832   99  618  768  109  748  444  755   490 #>  [551,]  120   17  386  801  726  741  345  899  643   762 #>  [552,]  140  243   64  143  745   16  252  127  667   606 #>  [553,]   86    3    5    7  956  945  624   35  360   242 #>  [554,]  547  408  760  849  652   54  578  984   67   749 #>  [555,]   14  622  440  433  316  325  783  176  879   799 #>  [556,]  439  688    4  213  342  393  964  180  482   892 #>  [557,]  192  560   74  506  296  304  618  932  736   124 #>  [558,]  509   47  642  918   11  529   57  245  302   479 #>  [559,]  128  273  405  381  707  741  190  551  473   120 #>  [560,]  192  557  698  399  172  271  506  582  523   124 #>  [561,]  939  322  196   26  251  911   77  806  158   258 #>  [562,]  511  360  884   35  459  423  581  772    3   409 #>  [563,]  313  767  573  336  104  804  691  516  236   907 #>  [564,]  216  976  681  865  426  881  860  649  591   660 #>  [565,]  488  115  328   92   80  857  305   19  351   487 #>  [566,]  951  233  324  531  595  787  850  549  182    87 #>  [567,]  413  156  345  726  935  502  183   17  598   551 #>  [568,]  957  741  399  698  172  350  582  473  463   271 #>  [569,]  948  228  960  287  848  374  256    6  274   104 #>  [570,]  234  972  391   11  534  587  245  121  157    49 #>  [571,]  747  580  955  299  264  308  882  945  809   261 #>  [572,]  999  641  188  374  263   75  300  948  274    54 #>  [573,]  336  881  313  824  127  907  981  563  236   104 #>  [574,]  675  409  232  138  360  415  645  132  404   929 #>  [575,]  863  268   10  266  469  291  838  808  484   900 #>  [576,]  200  406  675  637  645  873  174   51  415   409 #>  [577,]  225  697  429  222  671   25  629  175  794   398 #>  [578,]   67   76  880  141  836  822  980  849  984   554 #>  [579,]   61  875  116  860  451  240  771  865  335   958 #>  [580,]  227  826  955  571  882  264  945  770  132   747 #>  [581,]  884  423  135  800  882  459  562  270  907   360 #>  [582,]  271  172  899  741  399  842  872  568   55   801 #>  [583,]  306  593  361  164  438  118   48  478  545   221 #>  [584,]  521  387  606  670  288  504  167  389  426   210 #>  [585,]  527  732  974  176  433  589  619    9  348   783 #>  [586,]  674  813  983  636   91  122  632  178  197   816 #>  [587,]  534   49  677  391  538  792  168  796  208   856 #>  [588,]  155  262  603  130  239  596   37  616  185   756 #>  [589,]   31  908   52  635  732  217  874   62  241   893 #>  [590,]  512  191  262  632  646  588  367  130  636   275 #>  [591,]  649  881  210  745  660  426  606  564  976   474 #>  [592,]  390  724  995  400  151  812  314  953  341    79 #>  [593,]  306  118  545  583  961  438   22  773  943   372 #>  [594,]  721  457  133  906  713  770  257  737  186   876 #>  [595,]  850  787  803  217  566  241  802   31  379   709 #>  [596,]  293  185  396  450  716  753  155  616  130   369 #>  [597,]  543  459  356  772  511  562  929  896  800   526 #>  [598,]  533   18  340  909  472  669  156  341   66   567 #>  [599,]  962  139  625  537  782  301  349  693  648   108 #>  [600,]  331  758  623   12  617  235  731  246  275    29 #>  [601,]  949  937   58  919  220  829  786  462  541   267 #>  [602,]  460  437  707  107  190   42  204  105  138   348 #>  [603,]  155  616  588  761    4   89  392  185  965   428 #>  [604,]    8  822  903  554  547  613  222  578  493   408 #>  [605,]  249  801  171  959  317  722  544   55  759   397 #>  [606,]  167  387  745  455  243  504  591  288  717   649 #>  [607,]  988  539  483 1000  862  709  620   34  505   220 #>  [608,]  685  414  199  347  851  760  417  505  864   684 #>  [609,]  673  619  318  542  728  998  281  378  364   527 #>  [610,]   97  932   77  841  304  939  733  901  452   506 #>  [611,]  346  371  219  453  623  758  742  193  150   380 #>  [612,]  710  238  528  843  995  465  765  322  251   277 #>  [613,]  903  175  997  222  604  173  229  804    8   353 #>  [614,]  783  138  348  461  799  669  821  662  675   735 #>  [615,]  753  235  265  130  331  747  293  955  122   367 #>  [616,]  155    4  603  396  556  185  885  761  596   716 #>  [617,]   93   78  134  373  634  331  600  246  777   158 #>  [618,]   99  768  627  444  550  237  755  292   74   172 #>  [619,]    9  527  728  378  585  732  673  531  425   318 #>  [620,]  862  267  425  709  919  812  483  181   66   390 #>  [621,]  193  899  371  872  397  762  453  150  891   551 #>  [622,]  433  799   38   42  908   14  953  437  204   783 #>  [623,]  758  611  600  731  275  331  392  742  646   312 #>  [624,]  297  956    7  242  730  142  132  553  759   146 #>  [625,]  301  537  648  599  828  430  337  782  771   139 #>  [626,]  481  446  330  942  846  692  522  431  212   869 #>  [627,]   99  550  618  444  109  768  930  237  916   823 #>  [628,]  902   65  763  514  910  518  836  880  520   186 #>  [629,]  319  429  697  994  967  852  225  811  671   160 #>  [630,]  354  339   88  870  653   87   58  924  802   871 #>  [631,]  309   72  749  135  943  656  270   22  824   507 #>  [632,]  130  334  636  262  586  756  674  122  367   983 #>  [633,]  934  349  224  111  247  782  746  532  106   157 #>  [634,]  382  321  891  158  251  441  502  770  133   594 #>  [635,]  923  471  187  241  986  532  159  589  792   538 #>  [636,]  412  586  816  632  813  674  367  983  122   197 #>  [637,]    5  174  576  200  751  377  873  148   86   553 #>  [638,]  838  974  527  291  575  863  266  585  732   874 #>  [639,]  718  885  398  396  994  671  429  447  811   252 #>  [640,]  117  249  544  113  101  759  730  785  704   297 #>  [641,]  999  572   75  188  374  422  263  300  206   960 #>  [642,]  245  479  529  938   95  311   56  279  278   302 #>  [643,]  386   17  257  473  713  663  350  954  502   120 #>  [644,]  480  521  504  451  889  387  773  206  167    61 #>  [645,]  675  785  821  138  212  574  920  658  576   283 #>  [646,]  623  262  219  611  392  312  275  101  371   231 #>  [647,]  693  798  145   83  420  215  540  263  701   526 #>  [648,]  537  625  301  771  834  365  782  363  963   828 #>  [649,]  660  745  591  961  881  455  474  476  210   261 #>  [650,]  765  295  383   44  416  612  905  843  449    81 #>  [651,]  873  679  410  535   91  200  990  734  751   498 #>  [652,]  749  408  849   54  554  372  824  943   72   309 #>  [653,]  179   95   33  311  924  938  630  463  870    88 #>  [654,]  288  395  521  326  504  791  167  387  688   973 #>  [655,]  984  477  836  136   63  372  194  462   20   788 #>  [656,]  526  894  631  208   72  290  507   20  274   205 #>  [657,]  389  426  681  152  981  216  591  300  976   881 #>  [658,]  920  120  821  876  113  146  190  502  310   722 #>  [659,]  541  786  444  137  829  910  858  192  141   937 #>  [660,]  649  961  745  455  881  591  474  476  520   606 #>  [661,]  223  285  519   98   39  292  362   74   36    27 #>  [662,]  485  979  144  614  411  783  316  799   14   669 #>  [663,]  926  842  789  906  737  407  317  271  643   386 #>  [664,]   44  295  997  941  414  493  830    6  383   940 #>  [665,]  423  868  877  917  314  800  810   73  270   151 #>  [666,]  769  925  424  705  195  790  831  301  704   837 #>  [667,]  127  852  252  429  313  552  811  243  336   745 #>  [668,]  725  964  418  717  958  210  445  213  875   451 #>  [669,]  487  799  533  724  904  176  598  783   38   351 #>  [670,]  584  964  395  668  717  688  116  211  521   725 #>  [671,]  429  398  252  667  552  126  243  973  225   994 #>  [672,]  123  404  325  400  979  744  996  592   14   724 #>  [673,]  728  281  355  619  998  542  472  248  609   260 #>  [674,]  586  983  813  734  265   91  632  636  122   615 #>  [675,]  645  138  574  415  576  821  200  409  920   658 #>  [676,]   70  806  843   78   93  820   23  373  617   710 #>  [677,]  792  208  587  159  226  534  538   28  290   894 #>  [678,]  767  270  800  356  236  459  516  581  877   104 #>  [679,]  498  402  651   91  410  535  468  990  712   818 #>  [680,]  861  326  791  189   21   96  922  482  702   947 #>  [681,]  216  976  300  564  426  152  389  881  657   206 #>  [682,]  729  258  100  977  754  888  935  183  998   219 #>  [683,]  757  338  255  454  808  827  863  231  503   484 #>  [684,]  851  400  199  205  996  896  749   32  656   548 #>  [685,]  347  608  505  864  971   34  760  547  414   554 #>  [686,]  448  368  410  651  886  936  449  679  744   328 #>  [687,]  549  969  525  774  358  951  517  248  784   566 #>  [688,]  556  791  439  499    4  973  717  964  213   288 #>  [689,]  931  280   90   21  912  399  524  359  950   702 #>  [690,]   15  511   35  907  562  772  420  152   86   701 #>  [691,]  357  516  767  882  319  884  747  313  563   536 #>  [692,]  522  161  330  212  626  460  105  860  707   933 #>  [693,]  647  145  798  111   83  263  269  188  834   962 #>  [694,]  900   82   94  365  933  489  469  471  291   774 #>  [695,]  502  724  441  151  904  533  658  567  382    17 #>  [696,]  887  333  842  906  926  317  737  927  663   147 #>  [697,]  225  629  398  577  994  429  160  671   25   967 #>  [698,]  399  560  568  957  924  172  463  403  192   339 #>  [699,]   73  294  218   60  119  373  877  277  508   314 #>  [700,]  991  866  930  916  344  892  867  444  921   910 #>  [701,]  215  420  798  377  232  647  108  139   86   690 #>  [702,]  189  482  280  464  171  706  443  116  284   689 #>  [703,]  761  239  185  588  329  603  965  396  155   616 #>  [704,]  837  445  240  195  117  978  640  730  727   705 #>  [705,]  195  769  780   40  790  214  704  148  282   242 #>  [706,]  443  284  180  170  482  702   69  464  254    98 #>  [707,]  602  190  460  437  821  107  348  559  105   120 #>  [708,]  119  456  218  890  294  434  989  514  902   766 #>  [709,]  483  908  803  217   52  620  862  595  425    62 #>  [710,]  612  843  486  251  322  528  158  465   93   995 #>  [711,]   70  815  465  676  820  612  736  775  304   137 #>  [712,]  402  314  744  592  400  486  665  277  996   449 #>  [713,]  257  457  835  721  594  151  643  407  810   147 #>  [714,]  232    7  108   86  216  860  212  564  956   215 #>  [715,]  166  814  840  343  428  312  731  392  362    27 #>  [716,]  994  160  859  293  885  596  967  753  616   428 #>  [717,]  213  210  418  455  725  476  606  668  320   649 #>  [718,]  210  418  725  639  591  717  811  584  396   426 #>  [719,]   39  777  750  519   74  246  362  452  292   661 #>  [720,]  839  734  203  265    3  945  102  357  536    35 #>  [721,]  457  594  713  151  810  835  257  917  133   508 #>  [722,]  737  146  876  105  407  142  605  759  544   789 #>  [723,]   41  496  733  661  519  177  385  304  362   932 #>  [724,]  695  592  533  669  341  904  151  487  799   909 #>  [725,]  418  210  668  717  213  476  591  474  649   964 #>  [726,]  156  567  345  551  472  260   17  182  825   381 #>  [727,]  978  240  837  335  966  116  579  189  211   964 #>  [728,]  324  260  281  951  673  732  248  472  825   619 #>  [729,]  977  682  754  100  219  346  332  935  453   177 #>  [730,]  759  142  297  624  544  212  785  146  283   958 #>  [731,]  312  392  623  246  600  859  362  750  331    27 #>  [732,]  585  589  728  974    9  527  549  433  425   619 #>  [733,]   97  103  723  610  304  932  496  901  841   898 #>  [734,]  674  839  720  983   91  586  265  813  535   873 #>  [735,]  461   68  974  952  821  310  484  345  190   348 #>  [736,]  304  137  557  131  296   74  192  519  901   500 #>  [737,]  906  876  722  147  696  663  826  407  594   887 #>  [738,]  450  102  299  396  185  536  596  811  369   831 #>  [739,]  198  328  548  383  115   14  316  352  272   879 #>  [740,]  766  493  434  456    8  708  794  218   44   229 #>  [741,]  350  473  381  582  568  872  801  899  551   271 #>  [742,]   29   24  346  122  847  382  611  380  758   150 #>  [743,]  365  942  431  446  846  828   82  481  626   845 #>  [744,]  410  672  543  328  996  712  402  979  404   400 #>  [745,]  649  660  243  455  961  606  591  252  881   552 #>  [746,]  157  224  972  111   11  570  363  834  633   188 #>  [747,]  571  955  235  319  264  753  580  308  265   615 #>  [748,]  550  832  627  342  126  109  973  393   99   814 #>  [749,]  631  309  652  943  372  270   72  518   20   135 #>  [750,]  777  246  719  362  758   39   78  731   93   519 #>  [751,]  873   35  360    3  562  553    5  637  839    86 #>  [752,]  475  368  751  411  701  637  421  174  690   420 #>  [753,]  615  235  293  265  747  130  571  596  367   331 #>  [754,]  977  935  150  100  183  413  453  346  567   729 #>  [755,]   74   36  292  618  519  237  931  912   69   661 #>  [756,]  178  214  122   37  982  334   24  847  130   113 #>  [757,]  683  338  255  454  863  231   50  827  808   575 #>  [758,]  380  623  611  600   26  742  331  452  371   346 #>  [759,]  544  142  730  146  958  249  722  297  624   605 #>  [760,]  547  554  408  493  941  984  608  849  864   685 #>  [761,]    4  616  185  603  396  703  155  964  211   805 #>  [762,]  150  453  346  621  413  382  742  371  899   386 #>  [763,]  388  628   65  186  902  520  508  991  910   514 #>  [764,]  440  878   62   52  975   28   43  607  709   908 #>  [765,]  905  612  238  650  919   59  528  710  995   843 #>  [766,]  740  434  708  858  989  456  514  493    8    76 #>  [767,]  678  516  563  691  313  800  270  236  581   884 #>  [768,]   99  618  627  172  444  237  931  912  109   271 #>  [769,]  790  705  925  831    5  553   86  242  283   195 #>  [770,]  264  133  826  308  955  594  906  457  737   441 #>  [771,]  860  522  537  819  834  579  108  963  865   648 #>  [772,]  511  356  459  597  907  256  562  236  690   581 #>  [773,]  206  438  306  504  593  118  387  545  167   976 #>  [774,]  784  273  289  787  687  893  549  969   31   471 #>  [775,]   70  304  750  343  806  820  711  519  676   736 #>  [776,]   55  789   48  950  407  801  663  959  473   797 #>  [777,]  246  719  750   39  866  344   78  991  452   617 #>  [778,]  436   90  524  358  359  969  399  568  280   689 #>  [779,]  467  307  286  897   21  970  403  524  436    96 #>  [780,]  195  883  705  239   37  704   40  282  148   640 #>  [781,]  928  233  339  913  394  517  248  354  403    87 #>  [782,]  537  111  532  349  771  828  648  365  834   633 #>  [783,]  348  614  799  138  622  669  433  437  461   176 #>  [784,]  774  289  893  687  489  525  114  969  787    31 #>  [785,]  283  645  297  212  242  730  869  624  146   920 #>  [786,]  541  829  659  937  954  124  601  192  137   944 #>  [787,]  850  595   31  566  774  379  531  217  549   273 #>  [788,]   63  836  546  910  880  797  141  655  628   518 #>  [789,]  407  776  663   55  926  842  801  147  722   887 #>  [790,]  831  769  445  925  624  553  705  956  809   102 #>  [791,]  326  482  922  680  688  211  499  443  189   947 #>  [792,]  159  538  677  241  168  587  290  534  923   796 #>  [793,]   45  268  883  384  338  827  942  683  575   329 #>  [794,]   60  229  514  218  515  902  763  921  516   740 #>  [795,]  842  237  180  292  223  285   39  926  317   930 #>  [796,]  507   22  168   49  290  545  470  538  161   118 #>  [797,]   63  194  315  788  833  473  136  477  776   546 #>  [798,]  420  647   83  263  215  701  139  693  232   714 #>  [799,]  622  669   38  783  904  433   42  348  437   107 #>  [800,]  270  459  423  877  917  581  678  665  810   631 #>  [801,]  605  317   55  899  959  789  663  741  551   842 #>  [802,]   88  194  871  803  957  833  924  136  473   797 #>  [803,]  217  595  802  850  833  709  128  267  182   315 #>  [804,]  515  313  104  229  127  563  336  667  516   573 #>  [805,]  499    4  885   89  428  688  616  556  603   761 #>  [806,]  676   70  911   93   26  561   78   12  617   710 #>  [807,]  458   46  886  448  259  516  629  319  203   327 #>  [808,]  484  370  863  503  310  268  683  827  575   735 #>  [809,]  214  945  299  624  956  242  571  102  297   756 #>  [810,]  917  457  721  835  508  270  713  151  594   205 #>  [811,]  852  299  667  261  319  313  127  536  252   571 #>  [812,]  953  879   14  375  592  620  622  325  433   205 #>  [813,]  586  197   91  983  674  818   51  178  636   122 #>  [814,]  840  428  867  342  859   27  312  166  393   362 #>  [815,]  711   70  820  676  244  775  736  612  137   765 #>  [816,]  334  122  742   29  332  412  847  636  911   219 #>  [817,]  734  498  983  125  674   91  197  854  651   586 #>  [818,]   51  197  990   91  813  920  200  535  178   576 #>  [819,]  834  545  206  860   83  865  771  438  161   976 #>  [820,]  169   70  500  676  244   25  944  711  775    78 #>  [821,]  190  461  658  138  707  735  645  310  120   602 #>  [822,]  578    8  604   76  547  554   67  311  760   880 #>  [823,]  478  109  143  164  490   99  788  444  627   910 #>  [824,]   72   22  300  309  943  230  881  118  573   135 #>  [825,]  260  181   66  182  163  726  472  523  425   324 #>  [826,]  770  580  737   24  132  441  876  906  146   955 #>  [827,]  454  484  249  335  284  808  683  310  966   605 #>  [828,]  968  365  743  782  537  625  648  845   82   301 #>  [829,]  541  786  462  194  937   58  924  954  124   601 #>  [830,]  941  493  294  456    6  851  678  218  119    44 #>  [831,]  790  769  553   86  956  102  981  925  624   945 #>  [832,]  550  627  131  618   99  748  755  768  916    74 #>  [833,]  473  128  315  350  802  803  797  643  182   194 #>  [834,]  819  111  771   83  889   49  438  538  206   161 #>  [835,]  713   32  205  810  721  457  151  507  257   315 #>  [836,]  655  880  788   63  984  628  141  518  902   372 #>  [837,]  240  704  445  727  978  668  579  117  335   730 #>  [838,]  291  900  986  575  471  469  638  974  626   863 #>  [839,]  720  734    3  751  945  873   35  553  357   203 #>  [840,]  428  814  342  166   27  867   69  312  170   392 #>  [841,]  610   97  901  163  992  355   77  103  932   825 #>  [842,]  926  663  317  795  696  271  899  582  887   789 #>  [843,]  710  612  676   23  416  486  989   78  528   806 #>  [844,]  134  373  967   23   60  617  344  921   25   319 #>  [845,]  165  743  986  968  900  532  828  291  365   782 #>  [846,]  481  942  446  431  626  869  330  743  522   283 #>  [847,]  332  113  334  122  742  346  178  150  920    24 #>  [848,]  287  236  104  228  256  960  374  336  569   824 #>  [849,]  408   54  554  278  652   67  372  856  578   836 #>  [850,]  595  787  803  379  566  217  802  241   88   871 #>  [851,]  199  684  896  987  941  548  996  608  400   414 #>  [852,]  811  667  261  127  252  319  313  320  515   429 #>  [853,]  432  114  307  861   96   21  680   94  509   359 #>  [854,]  946  367  636   12  191  412  110  586  936   674 #>  [855,]  351  598  472  857  487   30   18  176  533   909 #>  [856,]   20   22  372   72  507  943  796  315   49   656 #>  [857,]  115  351  176  487  855  669  879  662  783   585 #>  [858,]   76  500  514  880  980  944  659  921  141   169 #>  [859,]  160  716  867  428  731  344  994  967  814   246 #>  [860,]  865  771  522  819  564  216  958  714  579   142 #>  [861,]  680  189  326  791  116   21   96  702  482   211 #>  [862,]  267  620  220  483   87  949   58  709  919   803 #>  [863,]  575  808  266  503  268   10  683  484  469   370 #>  [864,]  971   34  347  685 1000  539  408  234  856   849 #>  [865,]  860  451  958  564  819   61  545  976  875   216 #>  [866,]  991  344  700  916  930  921  246  867  777   444 #>  [867,]  393  700  916  342  866  814  237  428  930   344 #>  [868,]  665  227  423  409  441  360  535  990  457   877 #>  [869,]  283  481  330  212  785  282  846  446  730   626 #>  [870,]  462   58  949  937  984  194  829  136  630   267 #>  [871,]  802  194   88  136  121   95  797  938   33   924 #>  [872,]  506  899  621  741  582  271  350  193  523   381 #>  [873,]  535  751  200  409  360  651  576  990  415   637 #>  [874,]  497  187  589  986  635  471  975   52  555    62 #>  [875,]   61  116  958  451  865  579  959  668  171   950 #>  [876,]  737  722  257  386  441  120  105  658  906   594 #>  [877,]  665  423  800   73  270  917  868  699  996   314 #>  [878,]  914   71   28   43   62  391 1000  440   52   764 #>  [879,]  176  812  433   14  622  351  669  799  953   908 #>  [880,]  141  836  980   76  578  628  788  910  902    65 #>  [881,]  591  649  573  976  660  336  745  564  824   681 #>  [882,]  580  581  357  264  884  474  571  308  691   945 #>  [883,]  239  780  329  195  640  704   45  442  793   978 #>  [884,]  581   35  562  357    3  360  423  882  511   907 #>  [885,]  994  398  428  716  616  805  160  639  859     4 #>  [886,]  327  448  699  458   23   73  877  516  936    60 #>  [887,]  696  333  317  927  842  737  926  906  147   789 #>  [888,]  258  682  561  610   97  209  998  939  729   733 #>  [889,]  438  963  363  915  644  834   49  545  306   819 #>  [890,]  708  186  546  989  944  508  321  954  477   628 #>  [891,]   17  196  386  380  158  634  413  643  321   502 #>  [892,]  320  439  393  700  696  213  476  180  887   930 #>  [893,]   31  784  774  531  589  497  975  289  549   787 #>  [894,]  526  656  208  540  929  290  677  123   42   205 #>  [895,]  153  379  363  432  289  154   11  889  915   221 #>  [896,]  987  199  851  548  417  274  684  597  996   608 #>  [897,]  403  399  524  931  689  755  467  698   98    36 #>  [898,]  103  913  733  385  723   41  355  403   97   998 #>  [899,]  621  872  582  801  317  397  842  271  741   663 #>  [900,]  694  291  469  838  471  986   82  489  365   933 #>  [901,]   97  841  103  610  736  733  163  992  304   932 #>  [902,]  628   65  514  763  880  836  518  218  910   520 #>  [903,]  613  175  604  173  366   64  804  229  353   997 #>  [904,]   38  953  799  533  669  437  724  107  695   433 #>  [905,]  919  238  985  620  765  995    1  862  220   601 #>  [906,]  737  133  594  663  696  147  926  770  876   457 #>  [907,]  236  772  573  581  981  884  690  511  300   152 #>  [908,]   52  217  433   62  709  589  622  440   28   241 #>  [909,]  341   18  340  598  533  487  322  724  995   251 #>  [910,]  546  444  788  628  930  880  991  141  763   902 #>  [911,]   26  380   93  816  758   12  617  251   29   600 #>  [912,]  931  237   36   69  768  443  170  689  482   292 #>  [913,]  403  517  248  355  781  281  358  103  841   233 #>  [914,]  878  347 1000  570  539   57   43  864  391   234 #>  [915,]  963   48  933  889   61  405  161  545  776   168 #>  [916,]  930  700  991  866  867  444  344  921  627    25 #>  [917,]  810  270  508  800  721  665  457  835  314   277 #>  [918,]  162  129  164   85  245  583  278  654  479    47 #>  [919,]  601  905  238  220  985  620  862  949  181   267 #>  [920,]  113  658   51  132  146  847  178  382  645   675 #>  [921,]  991  866   25  344  514  916  930  700  763   944 #>  [922,]  947  791  326  499  680  482   89  970  443   211 #>  [923,]  635  241  538  792  471  405  159  168  161   217 #>  [924,]   88  957  463  339  698  802  172  194  829   568 #>  [925,]  769  377  869  108  790    5  283  831   86   139 #>  [926,]  663  842  696  906  789  271  546  795  317   887 #>  [927,]  333  476  887  261  320  696  474  213  892   388 #>  [928,]  781  354  394   87  233  220  339  630  483    58 #>  [929,]  540  232  526  894  123  459  656  574   42   290 #>  [930,]  916  700  444  991  866  910  627   99  867   344 #>  [931,]  912  689   36   98  237  768   69  897  292   443 #>  [932,]   77  452  610  304  506  193  371  177  621   872 #>  [933,]  963  915   82  692  363  365  694   94  161    61 #>  [934,]  633  349  224  247  106  157  111  746  253   782 #>  [935,]  754  183  567  413  156  345  100  977  726   150 #>  [936,]  416   23  468  886  327  946   12  201  843   486 #>  [937,]   58  949  601  462  829  786  541  870  659   220 #>  [938,]   95  121  245   67  278  971  871  653  129    33 #>  [939,]  196   77  561  322  992  340  935  251   26   158 #>  [940,]    6  987  356  256  896  323  569  597  543   851 #>  [941,]  830  493  199  851  760  414  547    6  554   456 #>  [942,]  431  846  481  446  626  743  330  522  869   365 #>  [943,]  309   72  372   22  135   20  518  507  631   118 #>  [944,]  989  890  921  786  465  858   78  500  321   659 #>  [945,]    3  956  553  580    7  809   35  624  571   882 #>  [946,]  110  854   12  259  367  936  235   23  753   844 #>  [947,]  922  443  170  970   89  482  791  326  680   286 #>  [948,]  569   54  572  408  274   75  374  417  228   960 #>  [949,]   58  937  601  462  870  267  220  829  862   541 #>  [950,]   55  959  171  776  789  801  359  875   48   842 #>  [951,]  324  381  566  248  233  549  260  728  182   358 #>  [952,]   68  345  183  461  735  567  821  370  413   310 #>  [953,]   38  375  904  812  205   32  622  799  833    79 #>  [954,]  643   79  541  321  350  473  477  546  829   786 #>  [955,]  264  308  770  580  747  571  826   29  235    24 #>  [956,]  624    7  945  297  553  142  474  132    3    86 #>  [957,]   88  568  924  802  698  463  350  473  172   339 #>  [958,]  875  759  865  544  142  668  860  959  451    61 #>  [959,]  171  950   55  605  801  317  789  776  842   887 #>  [960,]  374  287  228  848  569  104  256  236  173   572 #>  [961,]  660  745  455  649  593  118  520  167  306   881 #>  [962,]  420  599  693  647  798  139  701  145  152    15 #>  [963,]  933  915   61  889  363   82  771  579   94   834 #>  [964,]  668  211  213    4  717  556  725  688  418   670 #>  [965,]  185  603  596  588  155  761  616  703  293   396 #>  [966,]   53  335  189  727  978  454  827  464  702   116 #>  [967,]  134  319  160  308  844  344  264  747  235   955 #>  [968,]  828  845  743  365  165  782  625  537  446    82 #>  [969,]  687  358  436  778  525  549  273  774  517   114 #>  [970,]  947  912  286  326  443  931  680  170  922   482 #>  [971,]  864   34  938   95   67 1000  849  278  121   539 #>  [972,]   11  570  746  234   49  157  121  889  153   534 #>  [973,]  143  126  439  109  243  288  393  688  140   552 #>  [974,]  735   68  461  585  348  732  345  783  707   821 #>  [975,]    9   31  589  893   62   52  531  874  908   440 #>  [976,]  564  681  216  881  206  300  118  426  865   649 #>  [977,]  754  150  346  453  729  332  935  100  183   219 #>  [978,]  727  837   13  240  966  117  704  335  211   464 #>  [979,]  662  415  485  404  672  799  669  123  487   144 #>  [980,]  141  490  880   76  578  910  858  788  836   444 #>  [981,]  881  907  657  573  591  426  681  152  564   336 #>  [982,]  178  242  756  214  113   51  406  920   37   785 #>  [983,]  674  813  586  734  197   91  178  632  982   756 #>  [984,]  655  477  136  836  462  194  870   63  372    20 #>  [985,]    1  919  992  435  238  905   66  220  620   181 #>  [986,]  471  532  187  635  874  838  497  900  923   291 #>  [987,]  896  199  548  851  417  414  608    6  274   684 #>  [988,]  607  220  862  505  620  539  483  267   34  1000 #>  [989,]  944  890  708  373  528   78  321  119  921   218 #>  [990,]  535  227   51  409  818   91  868  441  920   873 #>  [991,]  866  700  930  344  916  921  444  910  763   546 #>  [992,]    1  939  163  238  825  181   66  985  435    77 #>  [993,]  769  637  148  705    5  751  839  174   40   925 #>  [994,]  716  885  160  398  859  697  428  629  671   429 #>  [995,]  390   18  592  341  238  909  612  322  251   340 #>  [996,]  400  543  800  449  877  684  665  672  459   270 #>  [997,]  613  173  323  175  903  228  804  104  960   287 #>  [998,]  355  673  841  281  682  542  258  610  100    97 #>  [999,]  572  641  188  263  300  206  773  374   83   824 #> [1000,]  539   34  864  971  226  803  878  595  850    28 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.37440774 0.5196210 0.6317683 0.6323538 0.8849260 0.8892560 0.9006937 #>    [2,] 0.71849076 0.8712022 0.8970041 0.9249884 0.9328638 0.9559555 0.9912308 #>    [3,] 0.33816647 0.3531914 0.4294108 0.5196530 0.5297383 0.5577980 0.6443834 #>    [4,] 0.54020961 0.6153700 0.6328276 0.6360577 0.6708464 0.6854089 0.7296972 #>    [5,] 0.39339787 0.4755666 0.6066615 0.7330094 0.7611787 0.7646775 0.7696904 #>    [6,] 0.81778517 0.8393568 0.8864097 0.8899425 0.8930137 0.9004203 0.9592937 #>    [7,] 0.31336098 0.4734230 0.4790972 0.5125694 0.5484259 0.5577980 0.5839837 #>    [8,] 0.69429370 0.6999343 0.8040632 0.8374759 0.8581814 0.8620620 0.9037422 #>    [9,] 0.49870522 0.5159316 0.5161472 0.6504423 0.7226073 0.7458232 0.8078439 #>   [10,] 0.43286308 0.6523323 0.8222796 0.8646028 0.9897671 1.0654198 1.0962131 #>   [11,] 0.41437972 0.5560717 0.6561674 0.7609491 0.7669037 0.8590798 0.8752580 #>   [12,] 0.67937879 0.7172980 0.7480645 0.7544614 0.8050573 0.8083640 0.8481635 #>   [13,] 0.52070502 0.6684482 0.7688076 0.7823320 0.8670848 0.9316208 0.9584593 #>   [14,] 0.41137800 0.5708362 0.5865694 0.6090094 0.6456530 0.6700576 0.7213540 #>   [15,] 0.59022782 0.7694994 0.8918625 1.0814758 1.1290545 1.1519124 1.1534854 #>   [16,] 0.45092441 0.4958946 0.5104549 0.5122970 0.5530641 0.6073729 0.6617331 #>   [17,] 0.21549985 0.3255899 0.3544750 0.4664532 0.4715509 0.4860027 0.4879230 #>   [18,] 0.28419387 0.3691577 0.5267358 0.5449690 0.5967973 0.5985593 0.6283001 #>   [19,] 0.60423508 0.9040169 0.9165124 1.0119967 1.0878704 1.1063906 1.1405633 #>   [20,] 0.28229287 0.3660425 0.4033861 0.4280612 0.4487782 0.4534048 0.4866329 #>   [21,] 0.53505778 0.5400066 0.6122105 0.7306741 0.7555545 0.8497530 0.8610543 #>   [22,] 0.21870056 0.3441216 0.3792610 0.4279712 0.4352831 0.4734599 0.4760026 #>   [23,] 0.69971236 0.7776224 0.7876056 0.7994573 0.8586295 0.8605815 0.8819863 #>   [24,] 0.38762218 0.4285535 0.4381970 0.5334751 0.6623435 0.6643578 0.6768378 #>   [25,] 0.53268027 0.6801124 0.6909970 0.7254717 0.7283049 0.7764582 0.7892815 #>   [26,] 0.43329051 0.5178387 0.5360601 0.5642680 0.5666451 0.5944099 0.6307465 #>   [27,] 0.30426516 0.3859418 0.4251838 0.4719293 0.5115982 0.5455742 0.5471404 #>   [28,] 0.42629419 0.4520204 0.4723838 0.5216885 0.5984226 0.6227925 0.6259317 #>   [29,] 0.35403636 0.3840472 0.3876222 0.5544435 0.5753758 0.6441560 0.6696159 #>   [30,] 0.70399445 0.8185857 0.8728922 0.8887481 0.9390512 0.9504278 0.9534198 #>   [31,] 0.54620478 0.5678647 0.5794177 0.5859331 0.6016578 0.6631736 0.6973421 #>   [32,] 0.32203562 0.3870360 0.4510068 0.4565310 0.5181098 0.5219980 0.5803326 #>   [33,] 0.59842366 0.6252209 0.6259422 0.6469902 0.6731264 0.6884798 0.6987678 #>   [34,] 0.42295739 0.4799947 0.4822970 0.5100279 0.7521974 0.7531811 0.7617941 #>   [35,] 0.35319143 0.4240218 0.5113439 0.5796505 0.5815733 0.6434926 0.6531255 #>   [36,] 0.28798006 0.3680010 0.4005744 0.4271074 0.4391532 0.4795506 0.4806273 #>   [37,] 0.46960421 0.5704743 0.5713747 0.7433508 0.8263683 0.9032159 0.9188813 #>   [38,] 0.16379892 0.4343415 0.4634704 0.4812532 0.5262166 0.5456857 0.5900957 #>   [39,] 0.32942541 0.3488723 0.4544843 0.4706264 0.4737524 0.5055472 0.5182899 #>   [40,] 0.46960421 0.5094448 0.8000923 0.8405120 0.8940577 0.9118995 0.9520868 #>   [41,] 0.56070439 0.8039226 0.8458749 0.9259973 0.9706053 1.0019942 1.0221179 #>   [42,] 0.26218164 0.3335003 0.4401235 0.4973035 0.5241576 0.5242244 0.5406525 #>   [43,] 0.63571193 0.7382393 0.9638590 1.0666145 1.0770948 1.0874487 1.0945852 #>   [44,] 0.98042680 0.9936126 1.0111360 1.0134749 1.0909802 1.1755655 1.2292283 #>   [45,] 0.96471043 1.1360815 1.2717714 1.5203067 1.5482659 1.7086648 1.7576296 #>   [46,] 0.92897311 1.0798204 1.2356634 1.2538734 1.2887295 1.3175664 1.3497319 #>   [47,] 0.89238862 0.9257327 0.9620712 0.9739201 0.9943237 1.1340280 1.1505984 #>   [48,] 0.44108247 0.4464113 0.4928736 0.5033910 0.5245417 0.5959135 0.6397210 #>   [49,] 0.39469461 0.3966216 0.4374424 0.4706606 0.4847577 0.4929153 0.6373957 #>   [50,] 0.62219362 0.6576409 0.7388219 0.7729828 0.7943559 0.8368663 0.8794120 #>   [51,] 0.30483279 0.4510571 0.5991109 0.6021361 0.6431851 0.6820095 0.6822274 #>   [52,] 0.16342217 0.3812533 0.4723838 0.4917449 0.5672412 0.6012372 0.6016578 #>   [53,] 0.47146486 0.6398191 0.6982818 0.7187265 0.7796118 0.9114307 0.9247849 #>   [54,] 0.32811395 0.4597374 0.5698973 0.6545683 0.7488184 0.7636551 0.8007657 #>   [55,] 0.26351243 0.2898434 0.3279429 0.3904213 0.4334976 0.4823644 0.5486852 #>   [56,] 0.77615810 0.8922126 0.9410711 0.9435230 0.9454779 0.9498508 0.9649450 #>   [57,] 1.01660350 1.0576989 1.0578482 1.0948736 1.1998130 1.2010383 1.2067120 #>   [58,] 0.31354966 0.3359187 0.4454083 0.5013944 0.5523149 0.5649255 0.6207553 #>   [59,] 0.54093924 0.6735608 0.6915943 0.7171179 0.7925492 0.8258154 0.8404956 #>   [60,] 0.39442631 0.5581936 0.6069573 0.6558298 0.6593543 0.6951015 0.7095590 #>   [61,] 0.42184296 0.4722252 0.4810669 0.5213441 0.5457783 0.5978246 0.6324206 #>   [62,] 0.16342217 0.4269498 0.4520204 0.5193114 0.6631736 0.7057671 0.7128491 #>   [63,] 0.22126147 0.3532780 0.4414033 0.4531874 0.4647006 0.5107906 0.5602252 #>   [64,] 0.33416754 0.4265877 0.4359787 0.4958946 0.5433790 0.6881546 0.7001640 #>   [65,] 0.23679109 0.2815989 0.3487280 0.4295142 0.5025708 0.5573627 0.6129167 #>   [66,] 0.44637144 0.5003019 0.5529245 0.6283844 0.6367535 0.6652489 0.7487575 #>   [67,] 0.33537141 0.5092862 0.5898424 0.5930201 0.6001093 0.6728713 0.6872553 #>   [68,] 0.37747986 0.4014896 0.4185361 0.4482289 0.5682722 0.5703633 0.6131069 #>   [69,] 0.28798006 0.3927377 0.4251838 0.4288953 0.4558640 0.4906690 0.5028235 #>   [70,] 0.54611205 0.6926403 0.7215123 0.7658092 0.8311058 0.9560666 1.0400445 #>   [71,] 0.47206866 0.6357119 0.6360646 0.6926937 0.6989833 0.7644924 0.7893722 #>   [72,] 0.21870056 0.2927399 0.2999043 0.3591081 0.4487782 0.4585332 0.4617932 #>   [73,] 0.30035462 0.5001202 0.5593482 0.5631557 0.6212020 0.6350773 0.6398905 #>   [74,] 0.30645224 0.5000964 0.5348828 0.5447165 0.5564983 0.5910982 0.6571445 #>   [75,] 0.73137409 0.7876294 0.7927559 0.9257327 0.9287029 0.9333650 0.9570342 #>   [76,] 0.40150325 0.4310171 0.4984940 0.5758994 0.5810228 0.5926704 0.7203417 #>   [77,] 0.42677834 0.5655940 0.5780670 0.5869566 0.5955668 0.6814462 0.6902135 #>   [78,] 0.24603251 0.4255550 0.5281018 0.6320025 0.6766829 0.6816221 0.7057718 #>   [79,] 0.44042104 0.5181098 0.5632566 0.5853790 0.5921010 0.6301329 0.6573707 #>   [80,] 1.17838407 1.4621528 1.4891457 1.6146337 1.6568477 1.6983617 1.7513378 #>   [81,] 0.97605309 1.0511801 1.0518557 1.0868473 1.1142342 1.1686700 1.1819750 #>   [82,] 0.30897320 0.4068803 0.5589393 0.5719344 0.6460923 0.6503385 0.7187265 #>   [83,] 0.29770340 0.5268685 0.5810016 0.5937661 0.6260777 0.6646483 0.6767827 #>   [84,] 0.73278181 0.8382064 0.8712902 0.9346618 0.9439012 1.1061611 1.2219257 #>   [85,] 0.63396681 0.7252764 0.8155012 0.8245226 0.8380611 0.9923770 0.9993802 #>   [86,] 0.32458341 0.3933979 0.5125694 0.6410320 0.6680742 0.6691817 0.6752053 #>   [87,] 0.66478616 0.7107108 0.7159460 0.7237704 0.7282900 0.7332213 0.7434692 #>   [88,] 0.30996952 0.3251140 0.3526699 0.5128921 0.5429316 0.6395256 0.6586995 #>   [89,] 0.57281868 0.5758453 0.7006440 0.7207689 0.7258189 0.7296972 0.7965332 #>   [90,] 0.39852216 0.4400132 0.4526669 0.5161778 0.5400066 0.5461164 0.6188844 #>   [91,] 0.48933920 0.6051880 0.6382770 0.6502117 0.6693098 0.7108046 0.7692118 #>   [92,] 0.62260206 0.9165124 1.3085745 1.3806910 1.5870406 1.6285594 1.6554045 #>   [93,] 0.24603251 0.3878538 0.4591714 0.5178387 0.6585143 0.6621358 0.6810870 #>   [94,] 0.30897320 0.6290901 0.6398191 0.6496431 0.7823336 0.7843597 0.8580708 #>   [95,] 0.04497083 0.5930201 0.6119075 0.6270330 0.6429569 0.6600823 0.6656487 #>   [96,] 0.62583943 0.7505155 0.9832066 1.0235993 1.0636559 1.1201775 1.1666406 #>   [97,] 0.35144018 0.6382641 0.7079532 0.7095187 0.7659251 0.8091797 0.8513275 #>   [98,] 0.31801358 0.3401989 0.4208660 0.4271074 0.5054884 0.5429898 0.5665091 #>   [99,] 0.21601832 0.3354368 0.3484150 0.3856758 0.5485465 0.5505203 0.5557009 #>  [100,] 0.41366461 0.5126158 0.5594749 0.5739571 0.6100644 0.6774000 0.7450978 #>  [101,] 0.66441475 0.7549090 0.7557675 0.7765707 0.7936885 0.7990604 0.8064913 #>  [102,] 0.46871727 0.5296746 0.6837906 0.7008518 0.7655323 0.8326505 0.8770413 #>  [103,] 0.76556108 0.7659251 0.7682346 0.9744743 1.0745172 1.1330448 1.1399362 #>  [104,] 0.30557984 0.3708418 0.3794128 0.5570809 0.5645912 0.6157789 0.6886539 #>  [105,] 0.42014793 0.4929323 0.5075120 0.5230954 0.5328842 0.5333565 0.5456871 #>  [106,] 0.60144678 0.9305805 0.9306688 0.9501760 0.9659964 1.0453325 1.0542669 #>  [107,] 0.26191941 0.3335003 0.3864874 0.4739008 0.4901712 0.5262166 0.5277461 #>  [108,] 0.53526753 0.5824204 0.5919049 0.6908379 0.6932066 0.6949184 0.7062489 #>  [109,] 0.32366596 0.3816655 0.5062977 0.5485465 0.6035720 0.6073536 0.6347685 #>  [110,] 0.65787838 0.8523714 1.1802698 1.3560210 1.3630859 1.3759184 1.3968075 #>  [111,] 0.50862957 0.6866783 0.7279623 0.7948560 0.8165282 0.8374849 0.8375440 #>  [112,] 1.55852407 1.5673626 1.6632869 1.6701479 1.7246864 1.7747710 1.7934094 #>  [113,] 0.36644829 0.4296335 0.5638167 0.6098110 0.6319255 0.6431851 0.6599731 #>  [114,] 0.27515565 0.7833691 0.7984154 0.8626899 0.8700936 0.8907433 0.9139923 #>  [115,] 0.38214516 0.6842062 0.7184307 0.8236605 0.8753309 0.9271065 0.9900302 #>  [116,] 0.45027271 0.5457783 0.6602727 0.6741195 0.6863318 0.7091045 0.7172088 #>  [117,] 0.56160326 0.6429118 0.7370743 0.7549090 0.7710974 0.7860382 0.7889454 #>  [118,] 0.23376156 0.3276499 0.3441216 0.3508093 0.5015056 0.5053651 0.5176712 #>  [119,] 0.31583768 0.3737276 0.4558761 0.5437083 0.5458634 0.5974658 0.6560051 #>  [120,] 0.34765690 0.3987382 0.4601763 0.4879230 0.5018809 0.5067646 0.5416199 #>  [121,] 0.58701147 0.5952777 0.6049412 0.6119075 0.6268535 0.6821388 0.7100069 #>  [122,] 0.38404719 0.4381970 0.4623692 0.4922980 0.5168948 0.5305939 0.5628925 #>  [123,] 0.35215632 0.3951595 0.5682765 0.5992893 0.6292636 0.6469049 0.6536885 #>  [124,] 0.37061007 0.3711900 0.3871380 0.5807237 0.5986405 0.6415935 0.6531730 #>  [125,] 1.16275048 1.2245416 1.2926636 1.3602846 1.3698820 1.4084729 1.4638888 #>  [126,] 0.50990188 0.6099109 0.7001640 0.7341859 0.7767447 0.7813376 0.7953612 #>  [127,] 0.38172029 0.5355710 0.5596657 0.5633162 0.5823183 0.5929949 0.6202899 #>  [128,] 0.32678210 0.4734693 0.5506425 0.5621268 0.5665520 0.5690209 0.6215555 #>  [129,] 0.32240302 0.5219120 0.5762402 0.6049412 0.6920584 0.7313320 0.7474944 #>  [130,] 0.49883170 0.6053445 0.7167148 0.7190791 0.7574800 0.7613518 0.7938191 #>  [131,] 0.53564742 0.6130721 0.6764559 0.7958312 0.8108554 0.8286614 0.8786131 #>  [132,] 0.42579509 0.5151876 0.5341619 0.5671062 0.5755747 0.5903237 0.6075006 #>  [133,] 0.35147778 0.3636692 0.3647389 0.4423911 0.5608529 0.5691907 0.5779306 #>  [134,] 0.39681078 0.4251424 0.5178433 0.5361624 0.6805308 0.6867334 0.7135838 #>  [135,] 0.30942474 0.4231522 0.4267138 0.5000046 0.5050926 0.5430369 0.5739390 #>  [136,] 0.41118245 0.4267375 0.4318495 0.4339700 0.4768650 0.5465379 0.5586927 #>  [137,] 0.61307211 0.6772350 0.7043720 0.7118153 0.8149391 0.8453201 0.8556896 #>  [138,] 0.43229124 0.5113181 0.5293639 0.5827702 0.5852424 0.5925780 0.6027970 #>  [139,] 0.53526753 0.6705211 0.7233836 0.7638404 0.7897678 0.7912746 0.8126103 #>  [140,] 0.25761193 0.3248417 0.3820281 0.4265877 0.4509244 0.6123456 0.6371633 #>  [141,] 0.21551060 0.2478560 0.4984940 0.5043320 0.5153898 0.5377246 0.5380901 #>  [142,] 0.23215070 0.3977784 0.4000386 0.4393166 0.4936062 0.5116403 0.5226528 #>  [143,] 0.32484169 0.4430272 0.4500779 0.4606841 0.5433790 0.5530641 0.5891766 #>  [144,] 0.70360030 0.7115000 0.7115202 0.7263464 0.7909070 0.8401681 0.8523100 #>  [145,] 0.53097493 0.5426041 0.5660205 0.8089592 0.9680723 0.9860777 1.0241528 #>  [146,] 0.36684834 0.4257951 0.4369957 0.4393166 0.4547368 0.5026818 0.5330085 #>  [147,] 0.34840672 0.4549819 0.4564327 0.5024490 0.5335413 0.5341757 0.5377761 #>  [148,] 0.68439506 0.7249098 0.8863247 0.9094872 0.9198462 0.9435541 0.9756199 #>  [149,] 0.48461201 0.6281582 0.7102363 0.7320435 0.7869123 0.8343406 0.8597976 #>  [150,] 0.27767287 0.2814221 0.2841270 0.4878354 0.4954478 0.4975521 0.5313888 #>  [151,] 0.37046721 0.4650588 0.4816673 0.4861472 0.5433768 0.5727964 0.5752032 #>  [152,] 0.56256667 0.5770576 0.6789019 0.7157721 0.7351366 0.7589517 0.7694994 #>  [153,] 0.54053002 0.5560717 0.5999067 0.7184908 0.7479200 0.7761110 0.8660131 #>  [154,] 0.54053002 0.6561674 0.8307043 0.8541981 0.8712022 0.9810323 0.9903409 #>  [155,] 0.37489759 0.4336603 0.7790019 0.8323242 0.8554640 0.8577206 0.9099627 #>  [156,] 0.30569236 0.3262743 0.3579049 0.3630452 0.4926383 0.5405824 0.6052169 #>  [157,] 0.64667460 0.7669037 0.8257021 0.8541981 0.9243470 0.9655508 1.0201939 #>  [158,] 0.37740552 0.4020145 0.4190839 0.4591714 0.5281018 0.5550570 0.5788570 #>  [159,] 0.33547237 0.3463819 0.4977218 0.5180707 0.5242244 0.5635180 0.5817520 #>  [160,] 0.35829338 0.5718766 0.5747591 0.5779698 0.6522162 0.7144527 0.7876369 #>  [161,] 0.50669338 0.5422210 0.5631950 0.5689447 0.6092181 0.6320838 0.6627306 #>  [162,] 0.51045490 0.5219120 0.5858995 0.5937850 0.7252764 0.8000330 0.8418996 #>  [163,] 0.37061007 0.4042716 0.5416616 0.6091344 0.6365370 0.7418901 0.7538221 #>  [164,] 0.51229703 0.5239113 0.5903342 0.5937850 0.6369687 0.6395027 0.7197476 #>  [165,] 0.54908168 0.9813251 1.1372137 1.1695009 1.2031595 1.2249379 1.2830620 #>  [166,] 0.61272048 0.7611578 0.7883182 0.8482370 0.8973138 0.8973912 0.9098426 #>  [167,] 0.24308049 0.2554877 0.3695717 0.4638763 0.4841923 0.5672204 0.5678705 #>  [168,] 0.38041963 0.4770930 0.4780638 0.4847577 0.5092416 0.5473634 0.5519264 #>  [169,] 0.26265001 0.6764559 0.6801124 0.7182474 0.8034945 0.8243029 0.9143408 #>  [170,] 0.26578713 0.4558640 0.5643588 0.5758453 0.6031906 0.6038029 0.6317046 #>  [171,] 0.17370456 0.4308061 0.4805783 0.4823644 0.5499564 0.5587297 0.6249264 #>  [172,] 0.26941305 0.4017908 0.5415747 0.5470445 0.5757414 0.5872002 0.6124346 #>  [173,] 0.87618145 0.9526264 0.9565228 0.9713093 1.0146814 1.0413455 1.1054185 #>  [174,] 0.61152392 0.7089670 0.7760067 0.9366138 0.9987533 1.0345146 1.0764891 #>  [175,] 0.55117629 0.6955637 0.8672199 0.9175538 1.0857738 1.0870652 1.1226844 #>  [176,] 0.51603535 0.5265768 0.5388508 0.5712551 0.5801553 0.6707166 0.7064780 #>  [177,] 0.57667920 0.6744389 0.7106979 0.7830243 0.8084727 0.8349234 0.8471915 #>  [178,] 0.35086757 0.4558084 0.4623692 0.5991109 0.5998957 0.6098110 0.6568489 #>  [179,] 0.59394151 0.6259422 0.6412760 0.7072447 0.9181475 0.9528680 0.9805333 #>  [180,] 0.45973796 0.5236926 0.5413020 0.5590320 0.5625617 0.5949277 0.6129280 #>  [181,] 0.48466368 0.4966760 0.5003019 0.5597563 0.5807237 0.6365370 0.6573707 #>  [182,] 0.49667604 0.5257725 0.5446453 0.5665520 0.5922374 0.5939369 0.6009061 #>  [183,] 0.44863069 0.4890375 0.4972940 0.5129245 0.5339640 0.5405824 0.5594749 #>  [184,] 1.54969454 1.6058166 1.7903249 1.8486250 1.9415717 1.9861202 1.9921299 #>  [185,] 0.46840057 0.5643122 0.7830058 0.8577187 0.9074240 0.9099627 0.9585011 #>  [186,] 0.21503155 0.4423911 0.4427498 0.4470150 0.4800804 0.4852145 0.5140889 #>  [187,] 0.54488025 0.5484068 0.6032080 0.6201989 0.6812469 0.6997092 0.7071064 #>  [188,] 0.55211975 0.5650773 0.6230229 0.7717706 0.7985339 0.8089592 0.8240324 #>  [189,] 0.38410060 0.6421988 0.6741195 0.6748141 0.7148040 0.7160836 0.7192255 #>  [190,] 0.29678858 0.3855973 0.3987382 0.4023448 0.4417458 0.4929323 0.5541087 #>  [191,] 0.83653302 0.9011914 1.1703316 1.1948539 1.3102195 1.3296849 1.3600533 #>  [192,] 0.25389733 0.3532200 0.5986405 0.6218608 0.6532183 0.6823172 0.6910984 #>  [193,] 0.22947858 0.3398413 0.4375047 0.5370750 0.5849706 0.5936046 0.5978990 #>  [194,] 0.40798941 0.4111824 0.4547087 0.4821675 0.5014282 0.5111314 0.5392919 #>  [195,] 0.42611375 0.5618296 0.6964333 0.8322004 0.9590741 0.9636064 0.9893164 #>  [196,] 0.40201451 0.4776085 0.5035358 0.5344354 0.5360601 0.5955668 0.6228103 #>  [197,] 0.46147713 0.6051880 0.6178127 0.7489781 0.7982087 0.8318041 0.9819342 #>  [198,] 0.90254645 1.1476636 1.2435210 1.2555075 1.2713360 1.2953993 1.2964965 #>  [199,] 0.35295760 0.4725503 0.6273540 0.6553937 0.6742267 0.7099813 0.7272521 #>  [200,] 0.22003989 0.6339161 0.6577880 0.7028651 0.7089670 0.7099221 0.7364444 #>  [201,] 1.30424483 1.3801370 1.6572063 1.6867596 1.7135375 1.7356769 1.7962741 #>  [202,] 0.96348909 1.1220217 1.2021038 1.2176376 1.3685976 1.4039036 1.4407800 #>  [203,] 0.72611264 0.8111915 0.8342606 0.8372628 0.8585798 0.8709668 1.0290069 #>  [204,] 0.26218164 0.3876053 0.4977218 0.5012997 0.5277461 0.5384173 0.5414872 #>  [205,] 0.32203562 0.4016753 0.4300057 0.5546442 0.5858126 0.5875525 0.6082550 #>  [206,] 0.37711935 0.4536032 0.5418304 0.5571568 0.5603790 0.5993868 0.6085266 #>  [207,] 1.29870348 1.4759336 1.5193207 1.6065617 1.6335442 1.6481263 1.6744164 #>  [208,] 0.41828293 0.4505434 0.5149747 0.5504608 0.5652963 0.6662338 0.6896558 #>  [209,] 1.09602517 1.3455591 1.3968001 1.4076033 1.4311583 1.4532473 1.4562446 #>  [210,] 0.23259817 0.2557204 0.3945140 0.4285865 0.5073673 0.5450982 0.5976732 #>  [211,] 0.57035503 0.6708464 0.6737630 0.7192255 0.7207689 0.7496445 0.7887201 #>  [212,] 0.39122971 0.4981192 0.5229825 0.5269430 0.5292013 0.5795555 0.5996315 #>  [213,] 0.35637992 0.4327384 0.4632784 0.4996657 0.5418139 0.5668559 0.5799450 #>  [214,] 0.50944477 0.5110197 0.5355926 0.5386034 0.5713747 0.5859775 0.6705592 #>  [215,] 0.34791594 0.5351012 0.5943828 0.6316720 0.6639791 0.7338786 0.7368381 #>  [216,] 0.27087776 0.2839025 0.3817311 0.5293472 0.5908624 0.6269716 0.6411617 #>  [217,] 0.39744238 0.4157032 0.4207887 0.5008248 0.5621268 0.5672412 0.6119784 #>  [218,] 0.33093201 0.5025979 0.5581936 0.5705094 0.5770479 0.5935215 0.5974658 #>  [219,] 0.47130002 0.4807848 0.5290914 0.6324410 0.6944847 0.7013259 0.7344657 #>  [220,] 0.50139444 0.6117694 0.6213244 0.6379400 0.6655542 0.7627878 0.7797618 #>  [221,] 0.17049041 0.4410825 0.4612374 0.4953889 0.5724994 0.6252209 0.7118564 #>  [222,] 0.95693748 1.1132546 1.1244440 1.1303904 1.2668734 1.3012856 1.3358036 #>  [223,] 0.28983255 0.3401989 0.3488723 0.4446433 0.4599618 0.4971177 0.5089164 #>  [224,] 0.68358791 0.7398657 0.8153097 0.9655508 1.0165439 1.0306387 1.0955916 #>  [225,] 0.52787810 0.6537160 0.7764582 0.8385543 0.8581661 0.9558473 0.9584774 #>  [226,] 0.47700844 0.5216885 0.5275571 0.5504608 0.6699999 0.6742696 0.6864118 #>  [227,] 0.40229399 0.4330564 0.4653143 0.4910223 0.5192757 0.5500262 0.5755747 #>  [228,] 0.16765161 0.3794128 0.3972535 0.4516268 0.5227325 0.5984751 0.7192160 #>  [229,] 0.56725251 0.5680787 0.5804492 0.6965240 0.7132296 0.7339512 0.7397689 #>  [230,] 0.53481399 0.6018809 0.6580955 0.6617331 0.6902225 0.7393891 0.7903442 #>  [231,] 0.56754181 0.6221936 0.7386678 0.7643205 0.7936885 0.8099410 0.8349234 #>  [232,] 0.33706501 0.5086939 0.5351012 0.5672952 0.6229590 0.6575454 0.7062489 #>  [233,] 0.51643360 0.5335565 0.5571488 0.5878117 0.7780923 0.8003594 0.8174984 #>  [234,] 0.38920400 0.6969675 0.7000426 0.7243613 0.7523700 0.7669118 0.7962175 #>  [235,] 0.37712295 0.3991980 0.5946666 0.6124585 0.6698246 0.7125412 0.7172980 #>  [236,] 0.34385430 0.3561176 0.5080554 0.5570809 0.5827833 0.6707290 0.6944958 #>  [237,] 0.35853973 0.3927377 0.4391532 0.4562070 0.4633042 0.4707987 0.5236926 #>  [238,] 0.59462859 0.6323538 0.6356349 0.6532442 0.7442849 0.7569891 0.8079612 #>  [239,] 0.59284156 0.6264562 0.8839687 0.8899777 0.9636064 0.9918935 1.0633670 #>  [240,] 0.24728549 0.5359625 0.5978341 0.6676988 0.7735319 0.7764392 0.7795528 #>  [241,] 0.39744238 0.4338809 0.4520274 0.5868525 0.6012372 0.6065631 0.6152847 #>  [242,] 0.37716013 0.4836585 0.5110197 0.5421546 0.5715196 0.6801882 0.6905674 #>  [243,] 0.28394795 0.3820281 0.3876899 0.3974501 0.4430272 0.5167141 0.5183246 #>  [244,] 0.82430292 0.9597073 0.9680445 1.3547966 1.3548550 1.3607090 1.3921615 #>  [245,] 0.57624017 0.5876477 0.6268535 0.6270330 0.6747779 0.6848974 0.7931200 #>  [246,] 0.31299205 0.5034560 0.5043867 0.5419253 0.5535397 0.5575974 0.7085888 #>  [247,] 0.64262965 0.8921008 0.9305805 0.9339677 1.0069366 1.0193305 1.1414821 #>  [248,] 0.48782602 0.5189966 0.5340295 0.5627590 0.5878117 0.7211326 0.7482774 #>  [249,] 0.29951135 0.4259536 0.4972859 0.6099927 0.6159928 0.6249264 0.6333368 #>  [250,] 1.20210381 1.5519966 1.7618684 1.9120597 1.9633872 2.0200774 2.0272466 #>  [251,] 0.35031851 0.4776085 0.5788570 0.6083226 0.6146147 0.6818975 0.7005643 #>  [252,] 0.32958296 0.3974501 0.4641185 0.4644079 0.4666262 0.5781133 0.5823183 #>  [253,] 0.64262965 0.7900258 0.9860777 0.9909285 1.0919575 1.1173512 1.1255470 #>  [254,] 0.31801358 0.3946047 0.5089164 0.6378590 0.6576409 0.6856637 0.6870499 #>  [255,] 0.56754181 0.6402904 0.7009357 0.7173158 0.7729828 0.9631997 1.0913812 #>  [256,] 0.34385430 0.5192776 0.6300583 0.6377344 0.7117716 0.7386289 0.7809774 #>  [257,] 0.22952545 0.3700009 0.4237522 0.4269215 0.4446646 0.4706503 0.4720348 #>  [258,] 0.44150652 0.8000399 0.9923017 1.1193029 1.2113795 1.2947642 1.3275814 #>  [259,] 0.85237136 1.0701032 1.2366975 1.4143776 1.5372939 1.5401955 1.6497181 #>  [260,] 0.34800816 0.4439292 0.4792568 0.5645975 0.5678585 0.5823287 0.5922374 #>  [261,] 0.35396396 0.4361154 0.4656768 0.4666262 0.5121672 0.5249327 0.5773453 #>  [262,] 0.71907907 0.7288427 0.7508510 0.7767205 0.7890183 0.9310220 0.9435470 #>  [263,] 0.29770340 0.4141110 0.5676076 0.6408758 0.6567339 0.6658709 0.7265516 #>  [264,] 0.19402179 0.2678304 0.3317761 0.5779306 0.5793657 0.5922482 0.6011110 #>  [265,] 0.52654089 0.5694851 0.7143330 0.7409058 0.7444994 0.7695044 0.8202393 #>  [266,] 0.43286308 0.6539635 0.7156137 1.0338277 1.0880982 1.1014870 1.2061600 #>  [267,] 0.36675682 0.5501011 0.6080251 0.6144638 0.6671930 0.6740908 0.6979966 #>  [268,] 0.59586692 0.7958265 0.8402377 0.8576936 0.9461251 0.9771705 1.0383945 #>  [269,] 0.54260412 0.5650773 0.6896558 0.7013672 0.8024806 0.8243659 0.8619546 #>  [270,] 0.22500973 0.4578056 0.5132158 0.5347966 0.5573906 0.5618274 0.5656646 #>  [271,] 0.26941305 0.2701207 0.4742903 0.5017003 0.5199536 0.5307726 0.5483506 #>  [272,] 0.48405150 0.5934796 0.7977922 0.8339237 0.8528246 0.9053046 0.9145482 #>  [273,] 0.50643364 0.6628639 0.7460642 0.7497779 0.7905453 0.8047521 0.8092070 #>  [274,] 0.56440130 0.6220324 0.6527405 0.7055652 0.7417904 0.7430240 0.7638724 #>  [275,] 0.64111107 0.7362176 0.7411347 0.8071888 0.9011914 0.9139025 0.9205592 #>  [276,] 0.48583868 1.1128216 1.1280921 1.2256428 1.2970298 1.3186694 1.3719151 #>  [277,] 0.27111546 0.5458634 0.5522195 0.5631557 0.6328689 0.6480226 0.6719849 #>  [278,] 0.32240302 0.5092862 0.5285431 0.5858995 0.6302899 0.6656487 0.6848974 #>  [279,] 0.54272310 0.9510885 1.0333731 1.0378200 1.0842766 1.0886630 1.1258774 #>  [280,] 0.44001319 0.4482383 0.5350578 0.5680075 0.7093066 0.7229251 0.7477676 #>  [281,] 0.48782602 0.5382450 0.6441751 0.6856915 0.7746998 0.8234598 0.8382064 #>  [282,] 0.63216176 0.6843951 0.7033122 0.7206454 0.8457100 0.8556248 0.9346566 #>  [283,] 0.20119578 0.4330050 0.5292013 0.6444889 0.6596934 0.6674573 0.7008368 #>  [284,] 0.41791948 0.5500002 0.5616033 0.6644147 0.6684482 0.7115284 0.7714425 #>  [285,] 0.28122955 0.2898325 0.3042652 0.3680010 0.4208660 0.4288953 0.4544843 #>  [286,] 0.83117402 0.9536993 1.0759830 1.0794063 1.0797320 1.1290180 1.2017439 #>  [287,] 0.16765161 0.2524951 0.3055798 0.4410636 0.4944418 0.5827833 0.6699247 #>  [288,] 0.56499395 0.6104109 0.6494149 0.6533586 0.6589826 0.6912301 0.7058457 #>  [289,] 0.56128240 0.6060546 0.6891124 0.7835165 0.8987008 0.9107711 0.9328638 #>  [290,] 0.44254775 0.4739008 0.4938839 0.4973035 0.5154688 0.5364357 0.5900000 #>  [291,] 0.43114166 0.5037232 0.7502026 0.8022048 0.8222796 0.9218647 0.9456269 #>  [292,] 0.28122955 0.3585397 0.4005744 0.4599618 0.4719293 0.4737524 0.4941077 #>  [293,] 0.45982563 0.4627462 0.6790274 0.7352688 0.7444994 0.7550201 0.8146329 #>  [294,] 0.33093201 0.3737276 0.4075892 0.4965954 0.5459429 0.6212020 0.6413108 #>  [295,] 1.22922834 1.6228459 1.7320149 1.8213842 1.9268269 2.0307088 2.0696552 #>  [296,] 0.69835149 0.7256993 0.7417198 0.8211896 0.8380895 0.8780206 0.8932582 #>  [297,] 0.24047378 0.3771601 0.4302289 0.4714800 0.5026818 0.5079815 0.5116403 #>  [298,] 0.97717053 1.0341550 1.1530179 1.1615413 1.1964910 1.2109834 1.2236306 #>  [299,] 0.46871727 0.5940345 0.6718302 0.6963547 0.7474774 0.7541661 0.7727392 #>  [300,] 0.40337394 0.4141110 0.4921739 0.4987909 0.5418304 0.6260777 0.6305279 #>  [301,] 0.38832700 0.5591449 0.7470331 0.8280040 0.9345298 1.0007794 1.0097257 #>  [302,] 1.05544757 1.0864902 1.2096848 1.2278592 1.2559593 1.3363969 1.3384323 #>  [303,] 1.05931979 1.4083979 1.5475604 1.5779953 1.5884435 1.6557957 1.7377046 #>  [304,] 0.61747662 0.6944256 0.7058491 0.7141267 0.7232051 0.7310167 0.7342439 #>  [305,] 0.99875331 1.1196969 1.1629325 1.1712476 1.1934590 1.2020231 1.2147471 #>  [306,] 0.16044299 0.3508093 0.3586839 0.3947949 0.4432703 0.5215421 0.5766561 #>  [307,] 0.75555445 0.7985300 0.9673132 1.0086205 1.0165799 1.0217857 1.0825259 #>  [308,] 0.19402179 0.3555067 0.4337352 0.5723201 0.5901790 0.6238143 0.6588093 #>  [309,] 0.15739874 0.2927399 0.3094247 0.3420135 0.4140120 0.4279712 0.4617395 #>  [310,] 0.42526236 0.5833116 0.6245978 0.6534410 0.6637959 0.6728224 0.7151564 #>  [311,] 0.65948086 0.7622319 0.7696701 0.7931384 0.8242023 0.8477518 0.9194493 #>  [312,] 0.38594183 0.4376983 0.4930348 0.6038293 0.6202930 0.6476761 0.6973202 #>  [313,] 0.29619568 0.5594014 0.5688117 0.5864253 0.5870340 0.6421234 0.6713917 #>  [314,] 0.27111546 0.5001202 0.5686945 0.6167773 0.6353030 0.7064299 0.7158896 #>  [315,] 0.45340478 0.4768650 0.4864367 0.4908308 0.4909328 0.5154688 0.5219980 #>  [316,] 0.62039678 0.7758929 0.7894831 0.7977922 0.8005508 0.8373456 0.8664193 #>  [317,] 0.34725973 0.4317180 0.4657972 0.4728753 0.4784125 0.4947778 0.5146067 #>  [318,] 0.66774590 1.0664273 1.2667554 1.2998875 1.3524285 1.3923727 1.4089270 #>  [319,] 0.53683528 0.6458406 0.6819790 0.6968820 0.7221679 0.7954932 0.8013005 #>  [320,] 0.27692957 0.3295830 0.4315167 0.4361154 0.4632784 0.5194180 0.5731871 #>  [321,] 0.37740552 0.5298873 0.5674285 0.6048902 0.6227255 0.6320025 0.6411027 #>  [322,] 0.35031851 0.5399719 0.6108232 0.6269043 0.6609895 0.7051456 0.7055877 #>  [323,] 0.95372941 0.9592937 0.9818004 0.9823114 1.0534956 1.0553641 1.0968400 #>  [324,] 0.18607074 0.4439292 0.5175486 0.5340295 0.5501744 0.5571488 0.5711820 #>  [325,] 0.41137800 0.5682765 0.5934796 0.6069523 0.7628360 0.7758584 0.7772044 #>  [326,] 0.49029828 0.5084776 0.5933649 0.6258394 0.8065527 0.8477603 0.8576452 #>  [327,] 0.67399602 0.6808892 0.7301544 0.7776224 0.7818618 0.7955500 0.8297262 #>  [328,] 0.83159959 0.9046579 1.3424826 1.3942088 1.3985994 1.4262390 1.4263432 #>  [329,] 0.62645619 0.8139930 1.0637702 1.1379397 1.2330201 1.2445042 1.2717714 #>  [330,] 0.34718697 0.3912297 0.4194307 0.4439014 0.5228171 0.5727556 0.6406330 #>  [331,] 0.26035703 0.5753758 0.5946666 0.6105969 0.6638629 0.6697832 0.6705406 #>  [332,] 0.30855503 0.3710229 0.4878354 0.5026781 0.5290914 0.5319935 0.5828565 #>  [333,] 0.32922558 0.3842350 0.4455320 0.5087297 0.5693583 0.5817674 0.6002576 #>  [334,] 0.43580695 0.4922980 0.5026781 0.5831288 0.5879639 0.6053585 0.6735620 #>  [335,] 0.57875264 0.6839511 0.6853032 0.6863318 0.6982818 0.7301646 0.7401596 #>  [336,] 0.23416207 0.4904582 0.5355710 0.5864253 0.5963909 0.6157789 0.6580955 #>  [337,] 0.56117283 0.9724704 1.0097257 1.2080045 1.3264815 1.4421302 1.4433116 #>  [338,] 0.46558168 0.4841030 0.6402904 0.9160282 0.9315429 0.9379916 1.0990903 #>  [339,] 0.56536588 0.6463297 0.6586995 0.6940481 0.7130196 0.7237704 0.7773880 #>  [340,] 0.40700908 0.5399719 0.5425732 0.5478941 0.5985593 0.6146147 0.6517178 #>  [341,] 0.23253009 0.2841939 0.5425732 0.5526583 0.5707032 0.6098153 0.6189824 #>  [342,] 0.33335252 0.4853275 0.5666667 0.5674679 0.5784783 0.5826087 0.5944991 #>  [343,] 0.91191200 0.9235948 0.9993258 1.0262315 1.0356451 1.0573300 1.0660545 #>  [344,] 0.21286690 0.3670160 0.4329317 0.5043867 0.5509312 0.5822610 0.6361994 #>  [345,] 0.32627428 0.4014896 0.4233858 0.4694141 0.4925961 0.4972940 0.5446308 #>  [346,] 0.27767287 0.2783384 0.3710229 0.3929441 0.4713000 0.4934612 0.4958311 #>  [347,] 0.49907726 0.6222739 0.7091526 0.8132572 0.8963111 0.9075966 1.0341483 #>  [348,] 0.21792988 0.5361539 0.5793089 0.5827702 0.5841615 0.5937395 0.6079173 #>  [349,] 0.49561025 0.7515701 0.7900258 0.7948560 0.8526947 0.8921008 0.9249440 #>  [350,] 0.15272180 0.3451188 0.5312809 0.5427308 0.5455492 0.5483506 0.5682192 #>  [351,] 0.50111140 0.5290405 0.5388508 0.5638882 0.6842062 0.6856766 0.7081862 #>  [352,] 0.48405150 0.9997366 1.0063590 1.0186303 1.0258218 1.0370866 1.0842196 #>  [353,] 0.85506147 0.9796234 0.9997460 1.0331354 1.0857738 1.1596754 1.1766655 #>  [354,] 0.33886686 0.7598023 0.7773880 0.8075970 0.8530453 0.8797843 0.9533309 #>  [355,] 0.53824498 0.7482774 0.8041277 0.8343406 0.8527889 0.8808184 0.9057698 #>  [356,] 0.39460346 0.4735638 0.5339004 0.5406958 0.6300583 0.6759686 0.6760014 #>  [357,] 0.36786814 0.4943045 0.5858722 0.6555239 0.6883619 0.7011929 0.7140176 #>  [358,] 0.54467172 0.6008991 0.6133631 0.6281582 0.7045401 0.7285143 0.7305726 #>  [359,] 0.49538891 0.5077185 0.5161778 0.6036898 0.6470808 0.6509040 0.6822214 #>  [360,] 0.33360306 0.3951510 0.5297383 0.5445057 0.5796505 0.6006658 0.6055141 #>  [361,] 0.17049041 0.5033910 0.5077185 0.6048211 0.6167268 0.6264364 0.6731264 #>  [362,] 0.30195725 0.4376983 0.5229335 0.5471404 0.5548141 0.5564983 0.5812133 #>  [363,] 0.60005117 0.6010209 0.6738717 0.7179053 0.8279851 0.8281021 0.8510822 #>  [364,] 0.66774590 1.3163298 1.4704140 1.4948077 1.4982230 1.5405538 1.5528732 #>  [365,] 0.40688031 0.5753531 0.6290901 0.6897839 0.7227850 0.7229793 0.7529551 #>  [366,] 0.33416754 0.6339668 0.7072508 0.7096127 0.7341859 0.7492985 0.7689684 #>  [367,] 0.77150740 0.8281860 0.8365330 0.8415089 0.8481635 0.8571622 0.8613339 #>  [368,] 0.93525318 0.9501049 1.0214541 1.0440251 1.0497149 1.0786428 1.1421249 #>  [369,] 0.75502011 0.8643716 0.8916613 0.8925923 0.9750515 1.1627505 1.1896890 #>  [370,] 0.41366461 0.5810245 0.6492271 0.6670795 0.7102363 0.7141773 0.7190354 #>  [371,] 0.22947858 0.4005975 0.4329269 0.4377666 0.4958311 0.5414789 0.5570704 #>  [372,] 0.28229287 0.3060863 0.4140120 0.4617932 0.4860057 0.4901277 0.5107906 #>  [373,] 0.42234308 0.4251424 0.6440649 0.6532035 0.6593543 0.6997124 0.7057718 #>  [374,] 0.35705946 0.4944418 0.5227325 0.6337435 0.7313741 0.7448075 0.7467064 #>  [375,] 0.43000568 0.4510068 0.4537805 0.4770084 0.4908308 0.6091098 0.6605649 #>  [376,] 0.70550896 0.8658663 1.0162033 1.1059807 1.1066440 1.1351071 1.1641759 #>  [377,] 0.73231115 0.7330094 0.7646062 0.7711267 0.8413085 0.8651759 0.8653694 #>  [378,] 0.51593162 0.6416642 0.7694242 0.8225500 0.8955663 0.9084808 0.9439012 #>  [379,] 0.46123736 0.5245417 0.6048211 0.6248637 0.6372920 0.7045773 0.7268233 #>  [380,] 0.41684967 0.4332905 0.5386192 0.5518292 0.5708686 0.5978990 0.6011880 #>  [381,] 0.47919111 0.4792568 0.4871539 0.5175486 0.5446453 0.5682192 0.6344623 #>  [382,] 0.48667127 0.5048615 0.5272385 0.5503752 0.5544435 0.5757508 0.6004304 #>  [383,] 1.39237913 1.4389659 1.4775812 1.5511146 1.6401882 1.6666768 1.7071872 #>  [384,] 1.11081929 1.1862048 1.2363080 1.3240156 1.3580938 1.3619310 1.3934562 #>  [385,] 0.84719154 0.9257695 0.9259973 0.9631997 1.0528749 1.1507484 1.2607130 #>  [386,] 0.21549985 0.2927903 0.4528098 0.4554006 0.4847586 0.5067646 0.5147386 #>  [387,] 0.25548771 0.2627143 0.3012077 0.3369672 0.5852312 0.6533586 0.6665172 #>  [388,] 0.38313595 0.4852145 0.5667683 0.5705758 0.5723201 0.5816681 0.5817390 #>  [389,] 0.36776757 0.3820516 0.5654415 0.6478635 0.6581621 0.7580703 0.7614613 #>  [390,] 0.44042104 0.4462403 0.4861098 0.6844823 0.6898711 0.6920427 0.7149602 #>  [391,] 0.37755185 0.4720687 0.4748450 0.6676814 0.6830605 0.7232436 0.7517080 #>  [392,] 0.49303475 0.6282661 0.6352669 0.7280407 0.7822611 0.7883182 0.8423544 #>  [393,] 0.24156076 0.3333525 0.4894152 0.4907465 0.6046438 0.6096974 0.6198758 #>  [394,] 0.75980226 0.9182698 1.0389936 1.0786253 1.0842766 1.1125976 1.1204943 #>  [395,] 0.79131716 0.8450893 0.8701179 0.9600946 0.9620011 1.1613341 1.1650136 #>  [396,] 0.46840057 0.6900040 0.7541661 0.7634109 0.8923103 0.9210998 0.9261443 #>  [397,] 0.39460470 0.4769464 0.4993423 0.5605158 0.5964247 0.6108362 0.6189705 #>  [398,] 0.54175410 0.6101697 0.6214295 0.7347792 0.7857347 0.8037321 0.8482199 #>  [399,] 0.42443846 0.4946278 0.4988318 0.4991808 0.5728891 0.5872002 0.6422448 #>  [400,] 0.40589754 0.5994650 0.6405285 0.6597749 0.7341665 0.7384536 0.7440294 #>  [401,] 0.33547237 0.3876053 0.5448803 0.5742499 0.5754628 0.6805831 0.7048972 #>  [402,] 0.52774869 0.7536813 0.7796129 0.8243505 0.8382165 0.8643576 0.9220884 #>  [403,] 0.61366148 0.6602462 0.7427637 0.7735705 0.8246115 0.8442161 0.8613048 #>  [404,] 0.35215632 0.4564511 0.6322821 0.6395455 0.7042088 0.7094070 0.7266282 #>  [405,] 0.50924156 0.5422210 0.5544217 0.5690209 0.5959135 0.6045659 0.6229129 #>  [406,] 0.57640862 0.7099221 0.7166143 0.7249098 0.7888289 0.8557293 0.8600432 #>  [407,] 0.27916916 0.3484067 0.4446646 0.4531318 0.4875835 0.5116676 0.5139554 #>  [408,] 0.32811395 0.3350727 0.3440006 0.4969256 0.6380791 0.6789776 0.7619706 #>  [409,] 0.33360306 0.4789346 0.4905156 0.5192757 0.5432577 0.5903237 0.6025242 #>  [410,] 0.51734179 0.8135626 0.9046579 0.9546533 0.9682437 1.0339429 1.0568210 #>  [411,] 0.51230855 0.7115000 0.7758929 0.7828679 0.9054288 1.0238655 1.1780441 #>  [412,] 0.56052284 0.6773700 0.9139025 0.9216663 1.0707815 1.0758797 1.1157012 #>  [413,] 0.27429430 0.4174707 0.4715509 0.4769901 0.5313888 0.5681010 0.5757508 #>  [414,] 0.65431994 0.7272521 0.7962587 0.8683901 0.8706834 1.0330764 1.0452828 #>  [415,] 0.52130015 0.5345360 0.6173324 0.6322821 0.6335443 0.7028651 0.7036003 #>  [416,] 0.80280506 0.8307399 0.8473081 0.9751862 0.9957300 1.0787663 1.2395073 #>  [417,] 0.63880966 0.6527405 0.7013672 0.7099813 0.7667526 0.7864823 0.8593760 #>  [418,] 0.17091574 0.2557204 0.4154745 0.4707840 0.4996657 0.5305223 0.6249691 #>  [419,] 0.91355647 0.9407524 1.1901579 1.2092175 1.2215077 1.2843890 1.2951655 #>  [420,] 0.44077352 0.4423909 0.6316720 0.6967569 0.7555210 0.7897678 0.7911129 #>  [421,] 1.18129626 1.1820783 1.2192175 1.2663894 1.4015970 1.4078856 1.5088903 #>  [422,] 0.60188092 0.7306779 0.7614894 0.8201824 0.8507603 0.8563820 0.8624440 #>  [423,] 0.37105317 0.4343819 0.4415877 0.4975265 0.4978055 0.5155221 0.6055141 #>  [424,] 1.03306172 1.0416197 1.0467315 1.1375541 1.2039755 1.2894666 1.2903858 #>  [425,] 0.44637144 0.5257725 0.5597563 0.6685950 0.6792135 0.7737699 0.7910788 #>  [426,] 0.38205163 0.4427894 0.5293472 0.5416102 0.5452154 0.5486471 0.6135617 #>  [427,] 0.92897311 1.4607150 1.7194306 1.7638615 1.8088267 1.8113200 1.8456745 #>  [428,] 0.36893463 0.5189327 0.5674679 0.6249000 0.6716065 0.6980939 0.7404938 #>  [429,] 0.31315190 0.6597764 0.7347792 0.8168133 0.8300385 0.8385543 0.8550615 #>  [430,] 0.56117283 0.9280705 1.0769471 1.0922780 1.2842654 1.3766206 1.4703591 #>  [431,] 0.35991731 0.6071260 0.6503385 0.6590381 0.6897839 0.7125915 0.7392944 #>  [432,] 0.27515565 0.6780247 0.7875097 0.8063710 0.8114488 0.8716991 0.8797149 #>  [433,] 0.32404141 0.4805979 0.5681275 0.5712551 0.5734678 0.5900957 0.6468046 #>  [434,] 0.33579434 0.5409392 0.5437083 0.5716376 0.7179293 0.7368908 0.7704097 #>  [435,] 0.51962096 0.8417451 0.8673370 0.9462979 0.9760531 1.0758839 1.1064294 #>  [436,] 0.35551633 0.5461164 0.6081071 0.7107542 0.7305726 0.7630830 0.7731162 #>  [437,] 0.22473774 0.2619194 0.3630418 0.3737517 0.4401235 0.4417458 0.4634704 #>  [438,] 0.39662159 0.4432703 0.4436377 0.4566741 0.5134027 0.5176712 0.5475328 #>  [439,] 0.24156076 0.4339481 0.4853275 0.5150846 0.5453835 0.5731871 0.6445660 #>  [440,] 0.42629419 0.4269498 0.4917449 0.5967956 0.7033093 0.7925975 0.8220188 #>  [441,] 0.47387022 0.4973497 0.5272385 0.5500262 0.5524280 0.5579955 0.5641639 #>  [442,] 0.69234816 0.8231293 0.8600432 0.8741934 0.8783775 0.9141506 0.9162641 #>  [443,] 0.26578713 0.3455166 0.5271173 0.5728187 0.6090574 0.6193783 0.6266733 #>  [444,] 0.30916496 0.3856758 0.4017785 0.4945967 0.5464797 0.5544855 0.5725951 #>  [445,] 0.50248079 0.5973751 0.6198012 0.7106098 0.7710974 0.7735319 0.7790543 #>  [446,] 0.30696916 0.4064382 0.4439416 0.5047480 0.6406330 0.6714506 0.7422157 #>  [447,] 0.94100371 1.0331354 1.0410825 1.0532556 1.1293918 1.1827213 1.2545704 #>  [448,] 0.85654824 1.1190720 1.1199056 1.1775246 1.1937552 1.2525599 1.2540978 #>  [449,] 0.72588120 0.9358353 0.9492661 1.0811068 1.0912420 1.1134560 1.1234979 #>  [450,] 0.49268324 0.5296746 0.7474774 0.7683373 0.8557396 0.8643716 0.9074240 #>  [451,] 0.40730826 0.4722252 0.4829929 0.5956886 0.6168834 0.6456856 0.6482295 #>  [452,] 0.43750473 0.4411643 0.5386192 0.5570704 0.5666451 0.5785084 0.5869566 #>  [453,] 0.27833841 0.2841270 0.3683553 0.4005975 0.4819972 0.5281680 0.5319935 #>  [454,] 0.55997084 0.6393230 0.7498951 0.7731162 0.8337882 0.8384616 0.8678513 #>  [455,] 0.39223456 0.4003260 0.4009120 0.4256820 0.4335879 0.4368795 0.4841923 #>  [456,] 0.31583768 0.3357943 0.4075892 0.4683504 0.6180513 0.6915943 0.7676689 #>  [457,] 0.19718617 0.2507500 0.2952804 0.4110020 0.4269215 0.4505302 0.4861472 #>  [458,] 0.79403055 0.9079105 0.9744997 1.0245793 1.0396396 1.0684175 1.0798204 #>  [459,] 0.41279177 0.4735638 0.4978055 0.5009526 0.5194236 0.5210512 0.5656646 #>  [460,] 0.18365652 0.3565099 0.3737517 0.4901712 0.5012997 0.5406525 0.5541087 #>  [461,] 0.33777507 0.4185361 0.4500143 0.5213931 0.5732926 0.5733587 0.6311623 #>  [462,] 0.34000005 0.4547087 0.4803415 0.4979181 0.4981605 0.5139271 0.5324105 #>  [463,] 0.50958632 0.5724994 0.5762256 0.5984237 0.6036898 0.6167249 0.6167268 #>  [464,] 0.41791948 0.5207050 0.6310681 0.6748141 0.6753137 0.7997849 0.8257319 #>  [465,] 0.41908392 0.5298873 0.6748081 0.6816221 0.7071701 0.7271169 0.7385645 #>  [466,] 1.34494781 1.5233323 1.5635876 1.6090008 1.7593662 1.7745993 1.8503743 #>  [467,] 0.79853002 0.8112394 0.9556263 1.0278128 1.0292884 1.0529251 1.0797320 #>  [468,] 0.67399602 0.8083640 0.8330092 0.8502555 0.8880128 0.8915497 0.9213053 #>  [469,] 0.63932303 0.6410085 0.7169540 0.8022048 0.8101539 0.8853278 0.8998839 #>  [470,] 0.35517167 0.5000046 0.5068350 0.5085941 0.5143304 0.5251669 0.5482755 #>  [471,] 0.36491652 0.3965035 0.5752258 0.6001995 0.6997092 0.7815906 0.8311178 #>  [472,] 0.36304515 0.5643803 0.5915972 0.6311051 0.6366774 0.6652489 0.6658170 #>  [473,] 0.15272180 0.3878751 0.4335768 0.4719275 0.5506425 0.5845838 0.5928785 #>  [474,] 0.43303048 0.4391350 0.4656768 0.5288773 0.5328568 0.5817674 0.5961361 #>  [475,] 0.53830065 1.1780441 1.1802566 1.1812963 1.3166412 1.3192053 1.3597177 #>  [476,] 0.27692957 0.3539640 0.3934326 0.4327384 0.4391350 0.4641185 0.4707840 #>  [477,] 0.30784366 0.4136345 0.4267375 0.4565310 0.5014282 0.5324105 0.5731336 #>  [478,] 0.14874895 0.3816655 0.5239113 0.6164456 0.6900380 0.6975582 0.7122184 #>  [479,] 0.54272310 0.6060152 0.6884798 0.7072447 0.7911542 0.7989374 0.8566173 #>  [480,] 0.43637557 0.7652942 0.7878777 0.8075332 0.8276442 0.9581094 0.9721621 #>  [481,] 0.30696916 0.3199699 0.3438252 0.4263777 0.4439014 0.5274743 0.6674573 #>  [482,] 0.34551656 0.4346415 0.5532540 0.5643588 0.6144827 0.6421988 0.6648602 #>  [483,] 0.50575352 0.7093871 0.7159460 0.7826749 0.8296502 0.8301152 0.8694828 #>  [484,] 0.39196996 0.4252624 0.6739281 0.7272578 0.7433350 0.7891056 0.8303995 #>  [485,] 0.32267120 0.5123086 0.5447285 0.6203968 0.7115202 0.8486390 0.8656488 #>  [486,] 0.61082321 0.6598523 0.7005643 0.8473081 0.8643576 0.9271097 0.9627590 #>  [487,] 0.37131494 0.5290405 0.6032977 0.6206803 0.6283001 0.6460744 0.6707166 #>  [488,] 0.60423508 0.6226021 1.0455526 1.1612867 1.2450324 1.2661239 1.2846899 #>  [489,] 0.60605455 0.7563084 0.8980437 0.9233367 1.0435580 1.0566689 1.0593198 #>  [490,] 0.38529405 0.5153898 0.5944632 0.6035720 0.6498777 0.6666415 0.6975582 #>  [491,] 0.69234816 0.7206454 0.7888289 0.8132450 0.8274062 0.8489513 0.8564503 #>  [492,] 1.15191239 1.3899942 1.4500010 1.4885976 1.5228824 1.5852860 1.6965329 #>  [493,] 0.56315141 0.6642650 0.6965077 0.6999140 0.7645853 0.7683081 0.7897385 #>  [494,] 0.48583868 1.1109211 1.1695009 1.3133883 1.3257371 1.3295063 1.3357156 #>  [495,] 0.78233201 1.0637702 1.1451020 1.2800477 1.3045123 1.3432057 1.3498040 #>  [496,] 0.58121331 0.5842185 0.5934716 0.7158673 0.7288453 0.8039226 0.8781543 #>  [497,] 0.60144678 0.6523766 0.7815906 0.7855782 0.7883097 0.9350030 0.9439458 #>  [498,] 0.58608188 0.9931059 1.1399638 1.1783841 1.2097972 1.2181288 1.2365478 #>  [499,] 0.63282757 0.6682973 0.6743829 0.7578613 0.7671347 0.7887201 0.8602626 #>  [500,] 0.26265001 0.5356474 0.6421611 0.6772350 0.7457229 0.7951561 0.8453708 #>  [501,] 1.38999419 1.5992446 1.8790500 2.3113869 2.3168782 2.3637341 2.3922669 #>  [502,] 0.32558987 0.4174707 0.4371221 0.4554006 0.4772252 0.5048615 0.5416199 #>  [503,] 0.48461201 0.7215688 0.7433350 0.7617940 0.7680742 0.7905453 0.7961259 #>  [504,] 0.22486970 0.2627143 0.3695717 0.4947433 0.5551474 0.5586764 0.5956886 #>  [505,] 0.68271114 0.8258154 0.8675523 0.9214783 0.9267411 0.9584324 0.9606637 #>  [506,] 0.38713800 0.4160170 0.4167471 0.5416616 0.6201974 0.6218608 0.6513026 #>  [507,] 0.35517167 0.4033861 0.4352831 0.4425477 0.4630983 0.4665478 0.4729722 #>  [508,] 0.21503155 0.4364501 0.5066574 0.5068288 0.5470138 0.5629381 0.5653868 #>  [509,] 1.35540675 1.3651020 1.4498864 1.4697750 1.4866551 1.6000226 1.6029319 #>  [510,] 1.12729374 1.1422187 1.1849896 1.2738890 1.2847577 1.2913047 1.3467737 #>  [511,] 0.33004290 0.3838357 0.5194236 0.5339004 0.5774565 0.6389957 0.6516153 #>  [512,] 0.87751687 1.0572218 1.1211695 1.1232132 1.2340452 1.2617497 1.2899045 #>  [513,] 1.26501290 1.2800477 1.3927728 1.4072841 1.4812533 1.4894414 1.5189249 #>  [514,] 0.32349377 0.4353077 0.5567052 0.5573627 0.5938147 0.5940007 0.6354609 #>  [515,] 0.46681568 0.4981513 0.5804492 0.5870340 0.6382426 0.6558298 0.6613072 #>  [516,] 0.48176089 0.4981513 0.6124427 0.6951015 0.6968820 0.7107325 0.7603987 #>  [517,] 0.56275897 0.7327818 0.7415040 0.7746998 0.7948028 0.8078147 0.8275757 #>  [518,] 0.43645014 0.4427498 0.4582420 0.4617395 0.4696348 0.4860057 0.4869942 #>  [519,] 0.30195725 0.3064522 0.4834773 0.5319833 0.5844000 0.5934716 0.6602826 #>  [520,] 0.34872796 0.4696348 0.5094419 0.5328879 0.5508058 0.5596657 0.5667683 #>  [521,] 0.22486970 0.3012077 0.4638763 0.4827970 0.5581506 0.5857969 0.6168834 #>  [522,] 0.34718697 0.4734484 0.4759376 0.4821902 0.4981192 0.5919049 0.6765002 #>  [523,] 0.37119003 0.4042716 0.4167471 0.6327125 0.6424517 0.6451651 0.6544454 #>  [524,] 0.49883178 0.5564145 0.6133631 0.6188844 0.6548673 0.6671413 0.7107542 #>  [525,] 0.51487828 0.7055090 0.7121909 0.7625581 0.8078147 0.8712902 0.9196127 #>  [526,] 0.26233166 0.3301814 0.5477472 0.5644013 0.5652963 0.6095633 0.6419645 #>  [527,] 0.44657063 0.5469588 0.6504423 0.7273693 0.9348490 0.9960069 1.0127452 #>  [528,] 0.55221954 0.6227255 0.6748081 0.6885028 0.6898711 0.6936241 0.6971507 #>  [529,] 0.60601516 0.6747779 0.7274967 0.7710522 0.7746791 0.7761110 0.7761581 #>  [530,] 0.96348909 1.0005127 1.1531303 1.1819835 1.2705730 1.2881013 1.3097788 #>  [531,] 0.51614723 0.5859331 0.6091953 0.6416642 0.6484656 0.7493636 0.7608141 #>  [532,] 0.52734415 0.5752258 0.6201989 0.6509948 0.7475855 0.7848703 0.8374849 #>  [533,] 0.22768949 0.4755288 0.5001598 0.5267358 0.5417933 0.5707032 0.6032977 #>  [534,] 0.17308916 0.3775519 0.4374424 0.4842991 0.5473634 0.5522140 0.5544129 #>  [535,] 0.27366290 0.4910223 0.5432577 0.5697910 0.6618646 0.7108046 0.7424222 #>  [536,] 0.82986354 0.8525027 0.8694440 0.8770413 0.8785766 0.9407524 0.9698302 #>  [537,] 0.50957678 0.5401574 0.5591449 0.5853550 0.6122867 0.8077789 0.8343363 #>  [538,] 0.36353777 0.3804196 0.4706606 0.4781166 0.4842991 0.5207731 0.5435039 #>  [539,] 0.12432811 0.4799947 0.7927098 0.8045342 0.8104586 0.8335825 0.8565542 #>  [540,] 0.39267342 0.5104084 0.5539836 0.5571402 0.6095633 0.6229590 0.6637908 #>  [541,] 0.28212285 0.2891919 0.4649396 0.5648903 0.5664279 0.5829420 0.6284229 #>  [542,] 0.99208071 1.0640377 1.1408177 1.2567472 1.2610097 1.2973438 1.3444573 #>  [543,] 0.48996733 0.5606936 0.5728755 0.6760014 0.7544363 0.7715961 0.7818113 #>  [544,] 0.22723214 0.3977784 0.4259536 0.4369957 0.5030719 0.5087297 0.5148810 #>  [545,] 0.32764986 0.3947949 0.3989610 0.4436377 0.5049733 0.5212736 0.5482755 #>  [546,] 0.38903127 0.4299702 0.4647006 0.4800804 0.5080255 0.5473492 0.6005693 #>  [547,] 0.22075267 0.3000063 0.6380791 0.6999140 0.7695203 0.7772380 0.7839562 #>  [548,] 0.54444892 0.7026799 0.7865930 0.8482936 0.8593760 0.8771458 0.9025465 #>  [549,] 0.41975680 0.5425809 0.6484656 0.6700281 0.6740985 0.7462301 0.7625581 #>  [550,] 0.44410572 0.4786823 0.5505203 0.6208388 0.7245477 0.7528892 0.8241554 #>  [551,] 0.34765690 0.4860027 0.5374429 0.5498394 0.5611247 0.5674918 0.5913260 #>  [552,] 0.25761193 0.2839479 0.4359787 0.4500779 0.5492644 0.6073729 0.6101469 #>  [553,] 0.32458341 0.4294108 0.4755666 0.4790972 0.5430447 0.5497086 0.5698945 #>  [554,] 0.30000634 0.3440006 0.3895970 0.5069029 0.6480851 0.6545683 0.7117059 #>  [555,] 0.57083623 0.6741173 0.7033093 0.7443693 0.7894831 0.7964902 0.8458878 #>  [556,] 0.51508459 0.5199321 0.5402096 0.5418139 0.5784783 0.6096974 0.6549053 #>  [557,] 0.35322004 0.4095795 0.6571445 0.7186039 0.7256993 0.7310167 0.7931390 #>  [558,] 1.73915157 2.0895044 2.1799612 2.2052621 2.2889129 2.3213603 2.3241489 #>  [559,] 0.32678210 0.5064336 0.5544217 0.6344623 0.6354370 0.6742242 0.6952326 #>  [560,] 0.25389733 0.4095795 0.4867599 0.5728891 0.5757414 0.6128420 0.6201974 #>  [561,] 0.57920643 0.6609895 0.7130723 0.7608231 0.8280994 0.8915774 0.9119757 #>  [562,] 0.33004290 0.3951510 0.4803121 0.5113439 0.5922088 0.6058663 0.6105139 #>  [563,] 0.29619568 0.6414745 0.6818945 0.7300882 0.7494630 0.7524761 0.8068922 #>  [564,] 0.28390248 0.3352527 0.4368724 0.4797075 0.5452154 0.5546065 0.5663818 #>  [565,] 1.70387685 1.8756984 1.9238217 1.9351767 2.0168327 2.0358703 2.0389652 #>  [566,] 0.50368519 0.5164336 0.5711820 0.6091953 0.6135240 0.6179733 0.6527461 #>  [567,] 0.27429430 0.3579049 0.4233858 0.4472829 0.4561306 0.4772252 0.4890375 #>  [568,] 0.36176548 0.4923406 0.4991808 0.5343824 0.5415747 0.5455492 0.5481736 #>  [569,] 0.58372918 0.5984751 0.6508299 0.6699247 0.7298699 0.7735197 0.8480297 #>  [570,] 0.38920400 0.6251328 0.7517080 0.7609491 0.7827158 0.8434251 0.8563041 #>  [571,] 0.44136721 0.5160107 0.5731316 0.5940345 0.6567246 0.6588093 0.6591535 #>  [572,] 0.33373156 0.4814404 0.5521197 0.7448075 0.7741427 0.7927559 0.8362222 #>  [573,] 0.23416207 0.4356454 0.5688117 0.5912199 0.5929949 0.5965354 0.6701969 #>  [574,] 0.46386001 0.4905156 0.5672952 0.6115767 0.6319799 0.6335443 0.6418135 #>  [575,] 0.44102183 0.5958669 0.6523323 0.6539635 0.7169540 0.7502026 0.7989667 #>  [576,] 0.22003989 0.5764086 0.5800283 0.6960439 0.6992767 0.7734542 0.7760067 #>  [577,] 0.52787810 0.8656258 1.0886843 1.1303904 1.1652766 1.1992359 1.2040200 #>  [578,] 0.33537141 0.4310171 0.4855791 0.5043320 0.5506841 0.6286606 0.6449115 #>  [579,] 0.48106688 0.6400865 0.6602727 0.6610452 0.6643364 0.6676988 0.6725714 #>  [580,] 0.40229399 0.4831555 0.5020988 0.5160107 0.5657945 0.5793657 0.5832154 #>  [581,] 0.35648607 0.5155221 0.5430369 0.5512025 0.5672378 0.5931377 0.6105139 #>  [582,] 0.27012072 0.4017908 0.4559433 0.4892858 0.4946278 0.5128846 0.5350863 #>  [583,] 0.35868385 0.4425961 0.6264364 0.6395027 0.6446911 0.6611604 0.6894536 #>  [584,] 0.55815062 0.5852312 0.6701959 0.6814269 0.7058457 0.7367348 0.7549490 #>  [585,] 0.44657063 0.4577985 0.7049280 0.7064780 0.7427919 0.7677238 0.7866158 #>  [586,] 0.33284522 0.3968305 0.5929588 0.6385466 0.6502117 0.6619225 0.7842259 #>  [587,] 0.17308916 0.3946946 0.4523318 0.4748450 0.4781166 0.5063630 0.5519264 #>  [588,] 0.77900189 0.7890183 0.8378151 0.8851613 0.8899777 0.9409221 1.0251435 #>  [589,] 0.56786474 0.5713880 0.6050779 0.6742909 0.6922978 0.7159223 0.7236839 #>  [590,] 1.28990446 1.4368071 1.4372491 1.6684753 1.6883546 1.7540976 1.8215611 #>  [591,] 0.34060381 0.3857767 0.4285865 0.4323910 0.5243204 0.5416102 0.5619075 #>  [592,] 0.44624031 0.4964189 0.6007497 0.6597749 0.6793760 0.7046408 0.7064299 #>  [593,] 0.16044299 0.2337616 0.3989610 0.4425961 0.4827286 0.5134027 0.5305207 #>  [594,] 0.23433208 0.2507500 0.3647389 0.3863603 0.4060251 0.4638805 0.4706503 #>  [595,] 0.17597548 0.4429149 0.4458199 0.5008248 0.6135240 0.6417925 0.6768346 #>  [596,] 0.46274619 0.5643122 0.7634109 0.7683373 0.8060857 0.8275630 0.8577206 #>  [597,] 0.48996733 0.5210512 0.5406958 0.5489483 0.5774565 0.7836787 0.8296072 #>  [598,] 0.22768949 0.5449690 0.5478941 0.5777244 0.5915972 0.6030622 0.6073392 #>  [599,] 0.83371889 0.8694239 0.8819580 0.9786088 0.9887986 1.0007794 1.1333100 #>  [600,] 0.26035703 0.5574171 0.6283340 0.6793788 0.6816118 0.7125412 0.7249124 #>  [601,] 0.37701435 0.3873969 0.4454083 0.5852220 0.6213244 0.6464179 0.6551963 #>  [602,] 0.18365652 0.2247377 0.2577553 0.3864874 0.4023448 0.5241576 0.5414872 #>  [603,] 0.43366031 0.6522712 0.8378151 0.8617993 0.8700834 0.9045392 1.0198042 #>  [604,] 0.69993429 0.7284301 0.9402911 1.1137788 1.1158997 1.1169389 1.1244440 #>  [605,] 0.29951135 0.3365124 0.4805783 0.4852801 0.4947778 0.5059454 0.5593715 #>  [606,] 0.24308049 0.3369672 0.4299477 0.4368795 0.5183246 0.5551474 0.5619075 #>  [607,] 0.44525949 0.8932878 0.9821860 1.0011803 1.0103385 1.0981862 1.1486406 #>  [608,] 0.59405249 0.6543199 0.6553937 0.7091526 0.8328801 0.8486597 0.8609763 #>  [609,] 1.02977260 1.2619621 1.2667554 1.4606998 1.5334449 1.5560651 1.5957530 #>  [610,] 0.35144018 0.5686196 0.5780670 0.6654444 0.8031539 0.8919497 0.8937318 #>  [611,] 0.39294411 0.4329269 0.4807848 0.4819972 0.4849148 0.5227979 0.5640177 #>  [612,] 0.46886255 0.5946286 0.6971507 0.7394289 0.7854985 0.8576131 0.9304374 #>  [613,] 0.51490569 0.5511763 0.9546355 1.1132546 1.1169389 1.1330129 1.2553011 #>  [614,] 0.44559324 0.5293639 0.5361539 0.5733587 0.7285486 0.7346014 0.7350405 #>  [615,] 0.33760424 0.3771229 0.5694851 0.6053445 0.6638629 0.7151035 0.7352688 #>  [616,] 0.37489759 0.6153700 0.6522712 0.6900040 0.7691259 0.7830058 0.8490819 #>  [617,] 0.38785383 0.4255550 0.5361624 0.6440649 0.6580717 0.6705406 0.6816118 #>  [618,] 0.33543684 0.3541546 0.4724177 0.5725951 0.6208388 0.6248876 0.6351238 #>  [619,] 0.49870522 0.5469588 0.7579067 0.7694242 0.7866158 0.8033215 0.9437138 #>  [620,] 0.45415534 0.6671930 0.6792135 0.6862691 0.7155112 0.7678281 0.7826749 #>  [621,] 0.33984133 0.4188059 0.4377666 0.4584733 0.4993423 0.5206577 0.5281680 #>  [622,] 0.32404141 0.4348363 0.5456857 0.5670290 0.5897818 0.6090094 0.6204706 #>  [623,] 0.43463282 0.4849148 0.6283340 0.6380633 0.6411111 0.6772921 0.7280407 #>  [624,] 0.24047378 0.2949672 0.4734230 0.4836585 0.4855279 0.5226528 0.5671062 #>  [625,] 0.38832700 0.6122867 0.6906560 0.8819580 0.9070997 0.9280705 0.9724704 #>  [626,] 0.31996990 0.4064382 0.4194307 0.5095882 0.6187073 0.6682280 0.6765002 #>  [627,] 0.21601832 0.4441057 0.4724177 0.4945967 0.5062977 0.5134793 0.5488952 #>  [628,] 0.17402163 0.2367911 0.4004923 0.4353077 0.4847487 0.4869942 0.4950905 #>  [629,] 0.80130051 0.8168133 0.8360590 0.9012890 0.9719824 0.9892314 1.0326790 #>  [630,] 0.33886686 0.6463297 0.6651778 0.7060388 0.7318452 0.7538065 0.7692197 #>  [631,] 0.34201350 0.3591081 0.4149334 0.4231522 0.4760790 0.4992524 0.5132158 #>  [632,] 0.49883170 0.7197396 0.7218012 0.7508510 0.7842259 0.7848501 0.7930338 #>  [633,] 0.40473610 0.4956102 0.7398657 0.8165282 0.9339677 0.9609719 1.0370421 #>  [634,] 0.48667127 0.5674285 0.5851370 0.6052577 0.6083226 0.6202031 0.6234698 #>  [635,] 0.32803844 0.3965035 0.5484068 0.5868525 0.6253015 0.6509948 0.6716849 #>  [636,] 0.56052284 0.6385466 0.6993452 0.7218012 0.7321719 0.8379912 0.8791882 #>  [637,] 0.60666145 0.6115239 0.6960439 0.7364444 0.7907865 0.8651759 0.9106117 #>  [638,] 0.90824995 0.9976108 1.0257840 1.0490677 1.0991771 1.1008939 1.1014870 #>  [639,] 0.74307655 0.9445222 0.9865465 1.0185952 1.0381068 1.0908697 1.1027061 #>  [640,] 0.64291176 0.6669140 0.7011364 0.7486184 0.7557675 0.8058338 0.8103042 #>  [641,] 0.35605581 0.4814404 0.7876294 0.7985339 0.8573493 0.9576553 0.9659746 #>  [642,] 0.79311997 0.7989374 0.8668125 0.8767005 0.8896757 0.9194493 0.9435230 #>  [643,] 0.29279031 0.3544750 0.3700009 0.4719275 0.5045860 0.5201948 0.5427308 #>  [644,] 0.43637557 0.4827970 0.4947433 0.7024931 0.7082306 0.7102383 0.7503552 #>  [645,] 0.38434723 0.4441885 0.5685905 0.5852424 0.5996315 0.6418135 0.6847756 #>  [646,] 0.75806006 0.7767205 0.7881615 0.8075945 0.8449039 0.9816106 0.9991894 #>  [647,] 0.34015775 0.4648615 0.5660205 0.6646483 0.6967569 0.7338786 0.7546331 #>  [648,] 0.54015739 0.6906560 0.7470331 0.7691937 0.8596595 0.8851544 0.8855184 #>  [649,] 0.21401924 0.3291718 0.3406038 0.4113986 0.4169955 0.4256820 0.4330305 #>  [650,] 1.21571383 1.6228459 1.7779071 1.8151949 1.8291248 1.8450162 1.9125968 #>  [651,] 0.73862833 0.7855138 0.8135626 0.9202073 0.9247456 1.0629530 1.1103865 #>  [652,] 0.48695987 0.4969256 0.5372878 0.5698973 0.6480851 0.6495004 0.6571974 #>  [653,] 0.59394151 0.6429569 0.6469902 0.6594809 0.6669274 0.6801128 0.7318452 #>  [654,] 0.71059489 0.7913172 0.8570968 0.9106875 0.9401968 0.9611286 0.9756189 #>  [655,] 0.19780375 0.3078437 0.3579763 0.4318495 0.4531874 0.5124364 0.5570000 #>  [656,] 0.33018138 0.3567649 0.4992524 0.5149747 0.5353460 0.5900000 0.6121609 #>  [657,] 0.36776757 0.4427894 0.5663868 0.5770576 0.6664361 0.7138950 0.7603336 #>  [658,] 0.39142869 0.4601763 0.4863964 0.5127744 0.5638167 0.5713538 0.5737622 #>  [659,] 0.46493959 0.5561894 0.7030695 0.7118153 0.7135524 0.7341962 0.7462063 #>  [660,] 0.21401924 0.2281317 0.3397789 0.4009120 0.4742309 0.5243204 0.5328568 #>  [661,] 0.44464332 0.4574371 0.4834773 0.5054884 0.5055472 0.5161832 0.5229335 #>  [662,] 0.32267120 0.5252603 0.7263464 0.7772791 0.7828679 0.7894459 0.8005508 #>  [663,] 0.23163085 0.3125665 0.3891389 0.4232646 0.4854022 0.5116676 0.5146067 #>  [664,] 1.68507968 1.7320149 1.8154012 1.8993829 1.9175140 1.9931019 2.0122906 #>  [665,] 0.37105317 0.3822649 0.4080247 0.5637485 0.5686945 0.5851032 0.6203053 #>  [666,] 1.26596347 1.2987503 1.3163879 1.3481555 1.4350144 1.4667450 1.5794637 #>  [667,] 0.38172029 0.5221992 0.6277827 0.6597764 0.6713917 0.6715206 0.7095495 #>  [668,] 0.41705624 0.4903407 0.5305223 0.5740756 0.5962643 0.5976732 0.6198012 #>  [669,] 0.37131494 0.4369859 0.4755288 0.5471576 0.5577912 0.5801553 0.6030622 #>  [670,] 0.68142692 0.7803132 0.8450893 0.9206161 0.9284356 0.9300096 0.9300310 #>  [671,] 0.31315190 0.5417541 0.7687094 0.7741071 0.8012836 0.8145714 0.8155763 #>  [672,] 0.39515951 0.4564511 0.6069523 0.6405285 0.7031803 0.7632962 0.7708018 #>  [673,] 0.66039001 0.6856915 0.8041277 0.9437138 0.9860807 0.9920807 1.0049737 #>  [674,] 0.33284522 0.5010170 0.6251130 0.6716530 0.7409058 0.7854566 0.7930338 #>  [675,] 0.38434723 0.4322912 0.4638600 0.5213002 0.5800283 0.6553089 0.6577880 #>  [676,] 0.54611205 0.6339835 0.7537169 0.7589348 0.8409048 0.8528875 0.8586295 #>  [677,] 0.36503326 0.4182829 0.4523318 0.5180707 0.5275571 0.5544129 0.6218384 #>  [678,] 0.24648209 0.5618274 0.5625347 0.6759686 0.7198735 0.7292775 0.7603987 #>  [679,] 0.58608188 0.7796129 0.7855138 0.8454423 0.9682437 1.0820030 1.0851767 #>  [680,] 0.48666539 0.4902983 0.6471791 0.7160836 0.7306741 0.7505155 0.7845608 #>  [681,] 0.27087776 0.3374291 0.4033739 0.4368724 0.5486471 0.5625667 0.5654415 #>  [682,] 0.57372655 0.8000399 0.9717136 0.9758373 1.0200868 1.0596932 1.1610597 #>  [683,] 0.45429280 0.4655817 0.7009357 0.7498951 0.8086566 0.8632858 0.8719987 #>  [684,] 0.46307271 0.5994650 0.6273540 0.7221424 0.7638539 0.7792963 0.8033483 #>  [685,] 0.49907726 0.5940525 0.6827111 0.7004509 0.8277587 0.8280008 0.8723819 #>  [686,] 1.50596458 1.5657095 1.5754641 1.6338610 1.7295999 1.7931603 1.8113775 #>  [687,] 0.41975680 0.4354461 0.5148783 0.7302572 0.7369999 0.7374324 0.7415040 #>  [688,] 0.51993210 0.6507086 0.6613144 0.6682973 0.6854089 0.6890310 0.7054623 #>  [689,] 0.41315968 0.4482383 0.4526669 0.6122105 0.6367922 0.6531001 0.6671413 #>  [690,] 0.59022782 0.6389957 0.6434926 0.7062934 0.7356794 0.7406443 0.7555210 #>  [691,] 0.36786814 0.4817609 0.6667033 0.6692368 0.7221679 0.7474076 0.7715780 #>  [692,] 0.47593764 0.5066934 0.5228171 0.6133590 0.6682280 0.6710433 0.6933420 #>  [693,] 0.34015775 0.5309749 0.6754314 0.6866783 0.7454285 0.8355015 0.8627002 #>  [694,] 0.44287676 0.5719344 0.6496431 0.7229793 0.7558851 0.7563084 0.8101539 #>  [695,] 0.43712215 0.4553386 0.5641639 0.6392469 0.6439245 0.6870271 0.7060563 #>  [696,] 0.14706566 0.4455320 0.4473325 0.4511470 0.4564653 0.4728753 0.4769149 #>  [697,] 0.65371596 0.8360590 0.8482199 0.8656258 0.8673346 0.9124285 0.9252556 #>  [698,] 0.42443846 0.4867599 0.5343824 0.5512543 0.5709348 0.6297882 0.6391369 #>  [699,] 0.30035462 0.4965954 0.5705094 0.6069573 0.6560051 0.7111043 0.7248677 #>  [700,] 0.23566961 0.2962470 0.3037289 0.3804423 0.4329317 0.4957784 0.5218996 #>  [701,] 0.34791594 0.4423909 0.6339192 0.7711267 0.8043722 0.8176418 0.8193722 #>  [702,] 0.38410060 0.4346415 0.5680075 0.6310681 0.6459038 0.6606776 0.6892405 #>  [703,] 0.89461960 1.1036450 1.1944454 1.2430173 1.2445042 1.3393180 1.3762091 #>  [704,] 0.36525783 0.5024808 0.5359625 0.6964333 0.7860382 0.8233114 0.8387448 #>  [705,] 0.56182959 0.5877482 0.7154758 0.8000923 0.8829692 0.9316102 0.9406988 #>  [706,] 0.52711728 0.5500002 0.5625617 0.6038029 0.6144827 0.6606776 0.6733218 #>  [707,] 0.25775535 0.2967886 0.3565099 0.3630418 0.5500049 0.5858786 0.5937395 #>  [708,] 0.45587612 0.4683504 0.5025979 0.5197292 0.5459429 0.5716376 0.5886034 #>  [709,] 0.50575352 0.5658166 0.5931351 0.6119784 0.6813854 0.6862691 0.7420654 #>  [710,] 0.46886255 0.5376504 0.6598523 0.6818975 0.7356749 0.7961273 0.8070495 #>  [711,] 0.69264027 0.7333815 0.9616452 1.1140323 1.1178551 1.1265248 1.1347521 #>  [712,] 0.52774869 0.7639499 0.8649104 0.8873985 0.8907783 0.9271097 0.9462811 #>  [713,] 0.22952545 0.2952804 0.2981954 0.3316853 0.4060251 0.4816673 0.5045860 #>  [714,] 0.33706501 0.5484259 0.5824204 0.6410320 0.6418896 0.6458494 0.6616116 #>  [715,] 0.89731375 1.0537978 1.0872180 1.1281765 1.2874463 1.3430162 1.4573941 #>  [716,] 0.45879487 0.5779698 0.6209997 0.6790274 0.7966283 0.8060857 0.8867858 #>  [717,] 0.35637992 0.3945140 0.4154745 0.4335879 0.4409417 0.5278541 0.5740247 #>  [718,] 0.66195643 0.6783787 0.7290759 0.7430766 0.8105196 0.8730697 0.9213143 #>  [719,] 0.32942541 0.3510939 0.5217597 0.5319833 0.5348828 0.5535397 0.5548141 #>  [720,] 0.28226619 0.7007640 0.8111915 0.8873127 0.9021124 0.9370842 0.9768958 #>  [721,] 0.19718617 0.2343321 0.3316853 0.3704672 0.4115678 0.4458681 0.4720348 #>  [722,] 0.36214779 0.3668483 0.3811909 0.4201479 0.4531318 0.4936062 0.5059454 #>  [723,] 0.56070439 0.5842185 0.7960508 0.8029320 0.8727750 0.9239359 0.9257695 #>  [724,] 0.45533863 0.4964189 0.5417933 0.5471576 0.5526583 0.6159372 0.6252936 #>  [725,] 0.17091574 0.2325982 0.4170562 0.4409417 0.5799450 0.5900520 0.6431570 #>  [726,] 0.30569236 0.4472829 0.4694141 0.5611247 0.5643803 0.5823287 0.6055500 #>  [727,] 0.49841470 0.5978341 0.6058621 0.7401596 0.7509420 0.7776361 0.8039289 #>  [728,] 0.55017438 0.5645975 0.6441751 0.6565390 0.6603900 0.6950564 0.7211326 #>  [729,] 0.56164157 0.5737265 0.6881103 0.7450978 0.7895455 0.9096213 0.9724750 #>  [730,] 0.34414173 0.4000386 0.4302289 0.4855279 0.5030719 0.5269430 0.5926604 #>  [731,] 0.62029301 0.6352669 0.6380633 0.7147159 0.7249124 0.7291427 0.7433481 #>  [732,] 0.45779847 0.6922978 0.6950564 0.7096315 0.7226073 0.7273693 0.7833891 #>  [733,] 0.63826410 0.7682346 0.7960508 0.8937318 1.0084275 1.1145695 1.1332786 #>  [734,] 0.67165298 0.6951862 0.7007640 0.7114757 0.8941862 0.9199336 0.9738467 #>  [735,] 0.33777507 0.4482289 0.5056059 0.5320780 0.5597726 0.6534410 0.6739281 #>  [736,] 0.69442557 0.8149391 0.8167236 0.8786131 0.9513195 0.9557853 0.9811198 #>  [737,] 0.26835689 0.3334680 0.3621478 0.4549819 0.4769149 0.4854022 0.4865940 #>  [738,] 0.49268324 0.6837906 0.9234186 0.9441428 1.0225519 1.1003096 1.1280842 #>  [739,] 1.29539934 1.8722235 1.9284252 2.0010740 2.0750523 2.1162269 2.1169820 #>  [740,] 0.51734193 0.6642650 0.7704097 0.8122535 0.8581814 0.8711888 0.8950791 #>  [741,] 0.34511877 0.3878751 0.4791911 0.4892858 0.4923406 0.4952032 0.5455918 #>  [742,] 0.35403636 0.4285535 0.5277485 0.5305939 0.5498010 0.5503752 0.5640177 #>  [743,] 0.57535311 0.6563266 0.6590381 0.6714506 0.7532099 0.8052437 0.8501118 #>  [744,] 0.51734179 0.7632962 0.8085228 0.8315996 0.8591507 0.8649104 0.9220884 #>  [745,] 0.32917180 0.3397789 0.3876899 0.3922346 0.4001949 0.4299477 0.4323910 #>  [746,] 0.64667460 0.6835879 0.6979654 0.8804967 0.9374665 0.9778351 0.9948617 #>  [747,] 0.44136721 0.5503266 0.6124585 0.6458406 0.6666177 0.6790456 0.6853860 #>  [748,] 0.82415540 0.8868312 1.0763748 1.1582749 1.1680500 1.2156539 1.2208195 #>  [749,] 0.41493342 0.4700809 0.4869599 0.5400945 0.5436498 0.5573906 0.5594085 #>  [750,] 0.46799293 0.5034560 0.5217597 0.6771774 0.7306261 0.7400928 0.7437343 #>  [751,] 0.58434221 0.6646158 0.6969564 0.7237858 0.7355400 0.7586271 0.7755287 #>  [752,] 0.53830065 1.3152491 1.4967682 1.5136034 1.5573514 1.6377122 1.6517498 #>  [753,] 0.33760424 0.3991980 0.4598256 0.5265409 0.6790456 0.7613518 0.8217289 #>  [754,] 0.23008354 0.3640111 0.4975521 0.5126158 0.5339640 0.5841814 0.6017285 #>  [755,] 0.54471650 0.6192503 0.6313910 0.6351238 0.7059582 0.7568730 0.7921023 #>  [756,] 0.35086757 0.5386034 0.5628925 0.5704743 0.5749911 0.5831288 0.6768378 #>  [757,] 0.45429280 0.4841030 0.7173158 1.0579114 1.1550930 1.1706918 1.2055242 #>  [758,] 0.41684967 0.4346328 0.5227979 0.5574171 0.5642680 0.5748597 0.6105969 #>  [759,] 0.22723214 0.2321507 0.3441417 0.4547368 0.4606442 0.4972859 0.5295162 #>  [760,] 0.22075267 0.3895970 0.6789776 0.7645853 0.7901658 0.8013009 0.8486597 #>  [761,] 0.81532947 0.8531185 0.8577187 0.8617993 0.8923103 0.8946196 0.9825679 #>  [762,] 0.28142206 0.3683553 0.4934612 0.5206577 0.5777682 0.6004304 0.6115999 #>  [763,] 0.38313595 0.4004923 0.4295142 0.4470150 0.4973108 0.5328879 0.5470138 #>  [764,] 0.85570464 0.8876872 0.8948302 1.0199801 1.0230997 1.0844723 1.1143924 #>  [765,] 0.92943659 0.9304374 1.0307765 1.2157138 1.2584467 1.2722371 1.3115574 #>  [766,] 0.51734193 0.7179293 0.7347693 0.8160029 0.8686874 0.8732938 0.9418266 #>  [767,] 0.24648209 0.6124427 0.6414745 0.6667033 0.6792825 0.7024752 0.7242682 #>  [768,] 0.34841500 0.3541546 0.5134793 0.5470445 0.6012403 0.6016000 0.6136057 #>  [769,] 0.52454319 0.5877482 0.6497930 0.6978403 0.8646325 0.9219122 0.9685776 #>  [770,] 0.33177611 0.3514778 0.4325350 0.4337352 0.4599327 0.4638805 0.4926394 #>  [771,] 0.46283211 0.4734484 0.5095768 0.6294922 0.6707089 0.6725714 0.6949184 #>  [772,] 0.38383571 0.3946035 0.5009526 0.5489483 0.5762502 0.6377344 0.6440527 #>  [773,] 0.37711935 0.4566741 0.5215421 0.5586764 0.5766874 0.6164888 0.6767031 #>  [774,] 0.38993683 0.6628639 0.6891124 0.7015497 0.7302572 0.7341874 0.7989318 #>  [775,] 0.83110582 0.9107652 0.9549498 1.0660545 1.0960889 1.1519532 1.1663112 #>  [776,] 0.28984342 0.3565893 0.4464113 0.4694526 0.5826878 0.5859595 0.5972087 #>  [777,] 0.31299205 0.3510939 0.4679929 0.4706264 0.5949997 0.6361994 0.6766829 #>  [778,] 0.35551633 0.3985222 0.5564145 0.6008991 0.6470808 0.6550018 0.6857016 #>  [779,] 0.95562635 1.2624698 1.4753414 1.7136959 1.7248187 1.7823646 1.8136329 #>  [780,] 0.42611375 0.6624952 0.7154758 0.8839687 0.9812302 0.9990435 1.0114281 #>  [781,] 0.79814003 0.9909280 1.0555764 1.0578797 1.1204943 1.1938586 1.1983328 #>  [782,] 0.58535499 0.7279623 0.7475855 0.8526947 0.8637983 0.8680231 0.8855184 #>  [783,] 0.21792988 0.4455932 0.4849461 0.6027970 0.6261556 0.6593693 0.6599585 #>  [784,] 0.38993683 0.5612824 0.7160182 0.8346796 0.8980437 0.9196127 0.9264201 #>  [785,] 0.43300503 0.4441885 0.4714800 0.5229825 0.5421546 0.5926604 0.6107581 #>  [786,] 0.28212285 0.4773151 0.5561894 0.5812558 0.6418716 0.6531730 0.6551963 #>  [787,] 0.38701647 0.4429149 0.5794177 0.6179733 0.7015497 0.7045773 0.7493636 #>  [788,] 0.22126147 0.4290754 0.4299702 0.4498610 0.5164665 0.5368604 0.5377246 #>  [789,] 0.27916916 0.3565893 0.3891389 0.3904213 0.4800280 0.5232374 0.5258567 #>  [790,] 0.36237544 0.5245432 0.7106098 0.8368973 0.8374019 0.8462018 0.8829692 #>  [791,] 0.50847764 0.5532540 0.5913410 0.6471791 0.6507086 0.6737630 0.7578613 #>  [792,] 0.34638187 0.3635378 0.3650333 0.4520274 0.4780638 0.5063630 0.5364357 #>  [793,] 0.96471043 1.1238617 1.1670605 1.2363080 1.3438715 1.4656662 1.5202666 #>  [794,] 0.39442631 0.5672525 0.5940007 0.6562407 0.6613072 0.7771895 0.8676490 #>  [795,] 0.44218243 0.4562070 0.4597380 0.4941077 0.4971177 0.5149583 0.5182899 #>  [796,] 0.46309833 0.4734599 0.4770930 0.4929153 0.4938839 0.5049733 0.5068350 #>  [797,] 0.35327797 0.4821675 0.5343740 0.5368604 0.5838635 0.5845838 0.5888128 #>  [798,] 0.44077352 0.4648615 0.5268685 0.5676076 0.5943828 0.6339192 0.6705211 #>  [799,] 0.43483633 0.4369859 0.4812532 0.4849461 0.4924158 0.5734678 0.5745182 #>  [800,] 0.22500973 0.4127918 0.4415877 0.5176093 0.5338640 0.5512025 0.5625347 #>  [801,] 0.33651243 0.4317180 0.4334976 0.4602431 0.4944497 0.5258567 0.5421749 #>  [802,] 0.30996952 0.4079894 0.4082440 0.5007269 0.5075303 0.5519626 0.5956112 #>  [803,] 0.42078874 0.4458199 0.5007269 0.5594309 0.5710308 0.5931351 0.6654464 #>  [804,] 0.46681568 0.5594014 0.5645912 0.5680787 0.7353619 0.7524761 0.7629788 #>  [805,] 0.67438290 0.8576244 0.8710689 1.0787180 1.0813341 1.1490374 1.1719507 #>  [806,] 0.63398347 0.7658092 0.8245560 0.8568136 0.8746828 0.9278684 0.9469909 #>  [807,] 0.79403055 1.2538734 1.3409049 1.3886341 1.4143776 1.6039930 1.6385793 #>  [808,] 0.39196996 0.6492271 0.7006185 0.7617940 0.7707938 0.7958265 0.8086566 #>  [809,] 0.53559259 0.5987499 0.6718302 0.6761828 0.6896680 0.6905674 0.6947258 #>  [810,] 0.21910513 0.4110020 0.4115678 0.4192902 0.5068288 0.5347966 0.5386177 #>  [811,] 0.31452038 0.6963547 0.7095495 0.7133073 0.7954932 0.8097445 0.8705029 #>  [812,] 0.54548829 0.5467555 0.6456530 0.6605649 0.7046408 0.7678281 0.7826580 #>  [813,] 0.39683053 0.4614771 0.4893392 0.5376430 0.6251130 0.6571221 0.7005399 #>  [814,] 0.42103663 0.5189327 0.5921624 0.7932110 0.7953206 0.8013409 0.8744982 #>  [815,] 0.73338145 1.1091642 1.3315277 1.5215019 1.5316756 1.5636798 1.5704113 #>  [816,] 0.58796392 0.6011233 0.6173346 0.6441560 0.6747761 0.6773700 0.6797189 #>  [817,] 1.36065079 1.5137655 1.5193820 1.5240171 1.5498771 1.5958677 1.6121502 #>  [818,] 0.30483279 0.6178127 0.6380806 0.6382770 0.6571221 0.7243450 0.8326125 #>  [819,] 0.40273042 0.5212736 0.5603790 0.5628116 0.5810016 0.5887656 0.6294922 #>  [820,] 0.71824740 0.7215123 0.8453708 0.8528875 0.9597073 0.9738452 1.1058711 #>  [821,] 0.38559728 0.4500143 0.4863964 0.5113181 0.5500049 0.5597726 0.5685905 #>  [822,] 0.62866059 0.6942937 0.7284301 0.7386602 0.7695203 0.8087480 0.8161729 #>  [823,] 0.14874895 0.3236660 0.5891766 0.5903342 0.5944632 0.6515879 0.6564730 #>  [824,] 0.45853317 0.4877218 0.4921739 0.5230083 0.5250451 0.5348140 0.5552367 #>  [825,] 0.34800816 0.4846637 0.5529245 0.6009061 0.6091344 0.6167648 0.6366774 #>  [826,] 0.43253503 0.4831555 0.4865940 0.5334751 0.5341619 0.5524280 0.5628177 #>  [827,] 0.55997084 0.7272578 0.7378849 0.7621492 0.8044038 0.8407370 0.8632858 #>  [828,] 0.68204381 0.7227850 0.8052437 0.8680231 0.8800067 0.9070997 0.9344276 #>  [829,] 0.28919190 0.4773151 0.4803415 0.5392919 0.5550533 0.6207553 0.6225913 #>  [830,] 0.55774317 0.6965077 0.7545314 0.7733977 0.8177852 0.9057978 0.9184425 #>  [831,] 0.36237544 0.6978403 0.7546528 0.7967500 0.8791270 0.8803966 0.8834623 #>  [832,] 0.47868229 0.7783767 0.8286614 0.8366864 0.8746035 0.8868312 0.9465115 #>  [833,] 0.43357679 0.4734693 0.4909328 0.5312809 0.5519626 0.5710308 0.5838635 #>  [834,] 0.40273042 0.5086296 0.6707089 0.6912846 0.7190484 0.7190719 0.7273207 #>  [835,] 0.29819539 0.3870360 0.4016753 0.4192902 0.4458681 0.4505302 0.4650588 #>  [836,] 0.35797635 0.3874699 0.4290754 0.4414033 0.4415019 0.4950905 0.5380901 #>  [837,] 0.24728549 0.3652578 0.5973751 0.6058621 0.6714878 0.7875077 0.8330189 #>  [838,] 0.43114166 0.7145558 0.7729599 0.7989667 0.8771213 0.8853278 0.9082500 #>  [839,] 0.28226619 0.6951862 0.7774018 0.8110518 0.8782227 0.8891517 0.9318547 #>  [840,] 0.36893463 0.4210366 0.5944991 0.6127205 0.6323531 0.6557683 0.7007896 #>  [841,] 0.66544443 0.7079532 0.7227111 0.8612166 0.8741109 0.8808184 0.9161539 #>  [842,] 0.23240441 0.3125665 0.3472597 0.4421824 0.4473325 0.4742903 0.5013366 #>  [843,] 0.53765037 0.7394289 0.7537169 0.7876056 0.8028051 0.9627590 1.0137468 #>  [844,] 0.39681078 0.4223431 0.6354693 0.7994573 0.8189176 0.8444658 0.8649676 #>  [845,] 0.54908168 0.8796845 0.9251165 0.9912498 1.0151577 1.0183992 1.0188981 #>  [846,] 0.34382525 0.3694933 0.4439416 0.6071260 0.6187073 0.6506722 0.6954510 #>  [847,] 0.30855503 0.4296335 0.4358069 0.5168948 0.5498010 0.5910771 0.5998957 #>  [848,] 0.25249506 0.3561176 0.3708418 0.3972535 0.5192776 0.5754905 0.6337435 #>  [849,] 0.33507272 0.4597374 0.5069029 0.5285431 0.5372878 0.6001093 0.6130547 #>  [850,] 0.17597548 0.3870165 0.5594309 0.6248637 0.6527461 0.6582989 0.6609336 #>  [851,] 0.35295760 0.4630727 0.5233075 0.7415390 0.7522670 0.7865930 0.8056994 #>  [852,] 0.31452038 0.5221992 0.5249327 0.6202899 0.6636930 0.6819790 0.7412960 #>  [853,] 1.06356035 1.0736661 1.0825259 1.0962366 1.2298611 1.2869292 1.2916757 #>  [854,] 0.96573690 1.1756648 1.1910772 1.2641272 1.3102195 1.3528209 1.3630859 #>  [855,] 0.56388819 0.6959618 0.7599807 0.7856879 0.8119880 0.8185857 0.8418481 #>  [856,] 0.36604246 0.4760026 0.4901277 0.4980567 0.6008453 0.6148009 0.6341309 #>  [857,] 0.38214516 0.5011114 0.5160354 0.6922482 0.7856879 0.8467618 0.9077031 #>  [858,] 0.59267044 0.6421611 0.6810884 0.7180966 0.7294620 0.7447693 0.7462063 #>  [859,] 0.35829338 0.6209997 0.6765025 0.6980939 0.7291427 0.7454981 0.7605660 #>  [860,] 0.35107872 0.4628321 0.4821902 0.5628116 0.5663818 0.5908624 0.6366756 #>  [861,] 0.48666539 0.7148040 0.8065527 0.8443996 0.8621241 0.9785859 0.9832066 #>  [862,] 0.36675682 0.4541553 0.6117694 0.7093871 0.7282900 0.7284700 0.7376806 #>  [863,] 0.44102183 0.7006185 0.7156137 0.8526129 0.8576936 0.8646028 0.8719987 #>  [864,] 0.25530869 0.5100279 0.6222739 0.7004509 0.7518164 0.7927098 0.8247377 #>  [865,] 0.35107872 0.4073083 0.4727952 0.4797075 0.5887656 0.5978246 0.6011425 #>  [866,] 0.20711353 0.2128669 0.2962470 0.4271706 0.4383742 0.5015894 0.5419253 #>  [867,] 0.49074646 0.5218996 0.5402898 0.5666667 0.5851182 0.5921624 0.6165753 #>  [868,] 0.38226491 0.4330564 0.4343819 0.4789346 0.4973497 0.6238698 0.6618646 #>  [869,] 0.20119578 0.5274743 0.5727556 0.5795555 0.6107581 0.6321618 0.6506722 #>  [870,] 0.34000005 0.5523149 0.5835526 0.5923980 0.6091881 0.6279973 0.6840545 #>  [871,] 0.40824403 0.5111314 0.5128921 0.5586927 0.5952777 0.6600823 0.6684693 #>  [872,] 0.41601699 0.4297828 0.4584733 0.4952032 0.5350863 0.5674021 0.5813493 #>  [873,] 0.56979095 0.5843422 0.6339161 0.6882297 0.7151055 0.7386283 0.7734542 #>  [874,] 0.65237655 0.6812469 0.7236839 0.7454451 0.8110938 0.8311178 0.9366361 #>  [875,] 0.42184296 0.4502727 0.4504206 0.4829929 0.6192943 0.6400865 0.6467567 #>  [876,] 0.33346801 0.3811909 0.4237522 0.4528098 0.4738702 0.5018809 0.5075120 #>  [877,] 0.40802474 0.4975265 0.5176093 0.5593482 0.6650764 0.6870879 0.6948454 #>  [878,] 0.67952156 0.6989833 0.7085963 0.7382393 0.7438888 0.8188065 0.8575808 #>  [879,] 0.52657678 0.5467555 0.5681275 0.5865694 0.7248411 0.7300095 0.7356286 #>  [880,] 0.21551060 0.3874699 0.3986045 0.4015032 0.4855791 0.5016559 0.5164665 #>  [881,] 0.38577668 0.4169955 0.4356454 0.4523469 0.4742309 0.4904582 0.5262045 #>  [882,] 0.56579449 0.5672378 0.5858722 0.5922482 0.6274278 0.6352016 0.6591535 #>  [883,] 0.59284156 0.6624952 0.8139930 0.8322004 0.9945305 1.0395810 1.1360815 #>  [884,] 0.35648607 0.4240218 0.4803121 0.4943045 0.5196530 0.5445057 0.6082788 #>  [885,] 0.53011276 0.6101697 0.6716065 0.7966283 0.8490819 0.8710689 0.9369868 #>  [886,] 0.68088921 0.8565482 0.8652427 0.9079105 0.9379848 0.9565635 0.9650364 #>  [887,] 0.14706566 0.3842350 0.4784125 0.5095337 0.5187470 0.5218255 0.5586692 #>  [888,] 0.44150652 1.0596932 1.2575503 1.3015299 1.3514940 1.3968001 1.4491465 #>  [889,] 0.54753283 0.5853666 0.6010209 0.6263943 0.7082306 0.7190484 0.7254835 #>  [890,] 0.51972920 0.5291272 0.5473492 0.5569819 0.5688599 0.6242691 0.6411027 #>  [891,] 0.46645317 0.5035358 0.5147386 0.5518292 0.5550570 0.5851370 0.6037221 #>  [892,] 0.43151667 0.4339481 0.4894152 0.4957784 0.5787041 0.5879778 0.5921479 #>  [893,] 0.54620478 0.7160182 0.7341874 0.7608141 0.7634351 0.7855782 0.8240498 #>  [894,] 0.26233166 0.3567649 0.4505434 0.5104084 0.5520312 0.6066468 0.6306655 #>  [895,] 0.59990667 0.6372920 0.6738717 0.6780247 0.7835165 0.8307043 0.8752580 #>  [896,] 0.44276402 0.4725503 0.5233075 0.5444489 0.6388097 0.7417904 0.7792963 #>  [897,] 0.61366148 0.6422448 0.6548673 0.6628541 0.7373350 0.8047808 0.8112394 #>  [898,] 1.13993621 1.2238417 1.2944929 1.4138356 1.4223752 1.5587307 1.5715766 #>  [899,] 0.41880586 0.4297828 0.4559433 0.4602431 0.4657972 0.4769464 0.5013366 #>  [900,] 0.44287676 0.5037232 0.6410085 0.7145558 0.8573915 0.8691765 0.8887671 #>  [901,] 0.70951869 0.7227111 0.7655611 0.9049409 1.1103051 1.1436977 1.1671287 #>  [902,] 0.17402163 0.2815989 0.3234938 0.4973108 0.5245936 0.5454948 0.5846517 #>  [903,] 0.51490569 0.6955637 0.9402911 0.9713093 0.9992002 1.0926981 1.1465395 #>  [904,] 0.16379892 0.4782800 0.4924158 0.5001598 0.5577912 0.5829803 0.6159372 #>  [905,] 0.64480070 0.7569891 0.9153377 0.9287700 0.9294366 1.0306542 1.1035669 #>  [906,] 0.26835689 0.3636692 0.3863603 0.4232646 0.4511470 0.4564327 0.4722120 #>  [907,] 0.50805535 0.5762502 0.5965354 0.6315937 0.6394524 0.6589275 0.7062934 #>  [908,] 0.38125326 0.4157032 0.4805979 0.5193114 0.5658166 0.5713880 0.5897818 #>  [909,] 0.23253009 0.3691577 0.4070091 0.5777244 0.6250401 0.6715531 0.7055877 #>  [910,] 0.38903127 0.4017785 0.4498610 0.4847487 0.4936195 0.5238938 0.5465308 #>  [911,] 0.59440990 0.6989068 0.6995980 0.7242203 0.7455946 0.7480645 0.7795465 #>  [912,] 0.29872606 0.4707987 0.4806273 0.4906690 0.6176954 0.6193783 0.6317046 #>  [913,] 0.82461152 0.8591310 0.8731408 0.9164328 1.0578797 1.0834695 1.1278420 #>  [914,] 0.67952156 0.9075966 0.9496742 0.9526848 1.0082962 1.0166035 1.1136135 #>  [915,] 0.44171162 0.4928736 0.5012118 0.6263943 0.6324206 0.6440154 0.6997098 #>  [916,] 0.29134698 0.3804423 0.4118020 0.4271706 0.5402898 0.5544855 0.5822610 #>  [917,] 0.21910513 0.4578056 0.5066574 0.5338640 0.5411180 0.5637485 0.5884009 #>  [918,] 0.80003296 0.8520190 0.8595147 0.9993802 1.0713708 1.0777662 1.0786178 #>  [919,] 0.58522196 0.6448007 0.6532442 0.6655542 0.7092594 0.7155112 0.7459836 #>  [920,] 0.36644829 0.3914287 0.4510571 0.6330261 0.6349593 0.6370497 0.6568489 #>  [921,] 0.43640664 0.5015894 0.5326803 0.5509312 0.5567052 0.5991453 0.6388802 #>  [922,] 0.50561703 0.5913410 0.5933649 0.7671347 0.7845608 0.9111170 0.9142453 #>  [923,] 0.32803844 0.4338809 0.5207731 0.5649189 0.6001995 0.6045659 0.6381594 #>  [924,] 0.35266986 0.3835013 0.5095863 0.5653659 0.5709348 0.5956112 0.6124346 #>  [925,] 0.64979301 0.7646062 0.8164882 0.8276377 0.8368973 0.8421748 0.8771384 #>  [926,] 0.23163085 0.2324044 0.4564653 0.4722120 0.4800280 0.5017003 0.5080255 #>  [927,] 0.32922558 0.3934326 0.5095337 0.5121672 0.5194180 0.5259880 0.5288773 #>  [928,] 0.79814003 0.9533309 1.0389936 1.1709526 1.1749098 1.1781384 1.2001907 #>  [929,] 0.39267342 0.5086939 0.5477472 0.5520312 0.6469049 0.6839461 0.6940983 #>  [930,] 0.29134698 0.3037289 0.3091650 0.3305156 0.4383742 0.4936195 0.5488952 #>  [931,] 0.29872606 0.4131597 0.4795506 0.5665091 0.5997251 0.6136057 0.6261643 #>  [932,] 0.42677834 0.4411643 0.5686196 0.6174766 0.6513026 0.6731724 0.7777964 #>  [933,] 0.39206430 0.5012118 0.5589393 0.7086554 0.7179053 0.7529551 0.7558851 #>  [934,] 0.40473610 0.7515701 0.8153097 1.0193305 1.1129096 1.1454856 1.2042223 #>  [935,] 0.36401105 0.4486307 0.4561306 0.4769901 0.4926383 0.5446308 0.5739571 #>  [936,] 0.83073988 0.8819863 1.0641047 1.0782516 1.0969681 1.1447650 1.2193489 #>  [937,] 0.33591867 0.3466916 0.3873969 0.5139271 0.5550533 0.5812558 0.5829420 #>  [938,] 0.04497083 0.5870115 0.5876477 0.5898424 0.6302899 0.6714246 0.6754866 #>  [939,] 0.53443537 0.5655940 0.5792064 0.7051456 0.7086461 0.7153976 0.8056811 #>  [940,] 0.88640969 1.1744302 1.2819133 1.3042470 1.3137897 1.4205330 1.4232624 #>  [941,] 0.55774317 0.5631514 0.7511748 0.7522670 0.7901658 0.7962587 0.8298927 #>  [942,] 0.35991731 0.3694933 0.4263777 0.5047480 0.5095882 0.6563266 0.7308714 #>  [943,] 0.15739874 0.2999043 0.3060863 0.3792610 0.4267138 0.4280612 0.4582420 #>  [944,] 0.46932208 0.5688599 0.6562525 0.7224982 0.7271169 0.7447693 0.7451598 #>  [945,] 0.33816647 0.5002608 0.5497086 0.5832154 0.5839837 0.5987499 0.6531255 #>  [946,] 0.65787838 0.9657369 0.9883514 1.0701032 1.1374992 1.1447650 1.2451739 #>  [947,] 0.50561703 0.6266733 0.6672829 0.6746814 0.7006440 0.7663563 0.7955146 #>  [948,] 0.58372918 0.7636551 0.8544198 0.9077602 0.9096541 0.9287029 0.9601853 #>  [949,] 0.31354966 0.3466916 0.3770144 0.4981605 0.5835526 0.6080251 0.6379400 #>  [950,] 0.26351243 0.3076413 0.4308061 0.4694526 0.5942378 0.6482221 0.6509040 #>  [951,] 0.18607074 0.4871539 0.5036852 0.5189966 0.5335565 0.5425809 0.5678585 #>  [952,] 0.37747986 0.4925961 0.5129245 0.5213931 0.5320780 0.6816017 0.7071654 #>  [953,] 0.43434151 0.4537805 0.4782800 0.5454883 0.5546442 0.5803326 0.6204706 #>  [954,] 0.54966756 0.5632566 0.5648903 0.6048902 0.6158045 0.6161821 0.6182972 #>  [955,] 0.26783037 0.3555067 0.4599327 0.5020988 0.5503266 0.5731316 0.5883047 #>  [956,] 0.29496717 0.3133610 0.5002608 0.5079815 0.5430447 0.5891322 0.5961361 #>  [957,] 0.32511397 0.3617655 0.3835013 0.5075303 0.5512543 0.5762256 0.5950332 #>  [958,] 0.45042063 0.4606442 0.4727952 0.5148810 0.5263058 0.5962643 0.6366756 #>  [959,] 0.17370456 0.3076413 0.3279429 0.4852801 0.4944497 0.5166436 0.5732934 #>  [960,] 0.35705946 0.4410636 0.4516268 0.5754905 0.6508299 0.6886539 0.8302582 #>  [961,] 0.22813174 0.4001949 0.4003260 0.4113986 0.4827286 0.5053651 0.5508058 #>  [962,] 0.79111290 0.8337189 0.9096423 0.9653220 0.9693479 1.0392179 1.0942301 #>  [963,] 0.39206430 0.4417116 0.5213441 0.5853666 0.6000512 0.6460923 0.6988536 #>  [964,] 0.49034069 0.5703550 0.6110425 0.6360577 0.6465991 0.6549053 0.6917995 #>  [965,] 1.03453276 1.0574077 1.1989866 1.2401557 1.2488760 1.2885182 1.3480125 #>  [966,] 0.47146486 0.5787526 0.7349696 0.7509420 0.8018245 0.8678513 0.8806975 #>  [967,] 0.51784333 0.5368353 0.5718766 0.6238143 0.6354693 0.6705881 0.7379584 #>  [968,] 0.68204381 0.9912498 1.0265272 1.2226328 1.3495796 1.3968221 1.4309520 #>  [969,] 0.43544614 0.5446717 0.6081071 0.6550018 0.7121909 0.7462301 0.8047521 #>  [970,] 0.67468144 0.8115864 0.8311740 0.8576452 0.8817724 0.8970071 0.9092255 #>  [971,] 0.25530869 0.4229574 0.6714246 0.6844769 0.7469655 0.7584307 0.7610679 #>  [972,] 0.41437972 0.6251328 0.6979654 0.7523700 0.8096269 0.8257021 0.8363396 #>  [973,] 0.46068409 0.5099019 0.5453835 0.6073536 0.6115334 0.6494149 0.6606911 #>  [974,] 0.50560586 0.5682722 0.5732926 0.7049280 0.7061830 0.7096315 0.7706464 #>  [975,] 0.74582316 0.7609546 0.8046738 0.8240498 0.8241563 0.8281400 0.8356967 #>  [976,] 0.33525273 0.3374291 0.3817311 0.4523469 0.4536032 0.4987909 0.6120957 #>  [977,] 0.23008354 0.4954478 0.5046153 0.5614417 0.5616416 0.5828565 0.5882024 #>  [978,] 0.49841470 0.6714878 0.7688076 0.7764392 0.8018245 0.8105688 0.8233114 #>  [979,] 0.52526029 0.5345360 0.5447285 0.6395455 0.7031803 0.7376332 0.7483666 #>  [980,] 0.24785601 0.3852941 0.3986045 0.5758994 0.6449115 0.6810014 0.7294620 #>  [981,] 0.63397320 0.6394524 0.6664361 0.6701969 0.6802607 0.7022022 0.7301337 #>  [982,] 0.45580842 0.5715196 0.5749911 0.5859775 0.6681737 0.6822274 0.7166143 #>  [983,] 0.50101698 0.5376430 0.5929588 0.7114757 0.7489781 0.7692118 0.7773591 #>  [984,] 0.19780375 0.4136345 0.4339700 0.4415019 0.4979181 0.6075412 0.6091881 #>  [985,] 0.63176827 0.7092594 0.8033928 0.8673370 0.9140608 0.9153377 1.0441789 #>  [986,] 0.36491652 0.5273441 0.6032080 0.6253015 0.7454451 0.7729599 0.7883097 #>  [987,] 0.44276402 0.6742267 0.7026799 0.7415390 0.7864823 0.8683901 0.9982356 #>  [988,] 0.44525949 0.8690679 0.8875176 0.9267411 1.0588732 1.0614233 1.0699795 #>  [989,] 0.46932208 0.5569819 0.5886034 0.6532035 0.6885028 0.7242253 0.7372330 #>  [990,] 0.27366290 0.4653143 0.6021361 0.6025242 0.6380806 0.6693098 0.6744915 #>  [991,] 0.20711353 0.2356696 0.3305156 0.3670160 0.4118020 0.4364066 0.5464797 #>  [992,] 0.37440774 0.7086461 0.7418901 0.7442849 0.7787907 0.7836854 0.7855291 #>  [993,] 1.04193676 1.0992335 1.1503974 1.1741563 1.2870854 1.3807208 1.4045472 #>  [994,] 0.45879487 0.5301128 0.5747591 0.6214295 0.7605660 0.8673346 0.8709480 #>  [995,] 0.48610978 0.5967973 0.6007497 0.6189824 0.6356349 0.7741783 0.7854985 #>  [996,] 0.40589754 0.5606936 0.6975627 0.7258812 0.7362571 0.7638539 0.7670559 #>  [997,] 0.95463549 1.1054185 1.1069747 1.1304412 1.2374547 1.4004799 1.4737834 #>  [998,] 0.85278886 0.9860807 1.0845824 1.2091892 1.2122146 1.2567472 1.3275814 #>  [999,] 0.33373156 0.3560558 0.6230229 0.6408758 0.6742086 0.7076926 0.8252286 #> [1000,] 0.12432811 0.4822970 0.7518164 0.7584307 0.8035997 0.8186917 0.8575808 #>              [,8]      [,9]     [,10] #>    [1,] 1.0220903 1.0506990 1.0647866 #>    [2,] 1.0159804 1.0628464 1.0808911 #>    [3,] 0.6555239 0.6691817 0.6939634 #>    [4,] 0.8153295 0.8323242 0.8576244 #>    [5,] 0.7755287 0.8105826 0.8419308 #>    [6,] 0.9605567 0.9751774 0.9853637 #>    [7,] 0.6006658 0.6082166 0.6575454 #>    [8,] 0.9434125 0.9569375 0.9573127 #>    [9,] 0.8578887 0.8690163 0.9022197 #>   [10,] 1.1059807 1.1271065 1.2717197 #>   [11,] 0.9275638 0.9374665 0.9629951 #>   [12,] 0.8683344 0.8833672 0.8889993 #>   [13,] 0.9806743 0.9860205 1.0262920 #>   [14,] 0.8045830 0.8120747 0.8122041 #>   [15,] 1.1613124 1.1683864 1.1694879 #>   [16,] 0.7096127 0.7521758 0.7795502 #>   [17,] 0.5288156 0.5698295 0.5967761 #>   [18,] 0.6856766 0.7122816 0.7510326 #>   [19,] 1.1743609 1.2663257 1.2730675 #>   [20,] 0.5036007 0.5465379 0.5710962 #>   [21,] 0.8614368 0.8647220 0.9100972 #>   [22,] 0.4877218 0.5036007 0.5085941 #>   [23,] 0.8889993 0.9078457 0.9205416 #>   [24,] 0.6778038 0.6823220 0.6916917 #>   [25,] 0.7951561 0.9031122 0.9116083 #>   [26,] 0.7183941 0.7444101 0.7563863 #>   [27,] 0.5881498 0.6069905 0.6132131 #>   [28,] 0.6360646 0.6735662 0.7085963 #>   [29,] 0.6846481 0.6876163 0.7291948 #>   [30,] 1.0284256 1.0312844 1.0480669 #>   [31,] 0.7609546 0.7702795 0.8113416 #>   [32,] 0.5915577 0.6097883 0.6270160 #>   [33,] 0.7015258 0.7143286 0.7274967 #>   [34,] 0.8280008 0.8410305 0.8838150 #>   [35,] 0.6646158 0.6752053 0.6759780 #>   [36,] 0.5115982 0.5658013 0.6014117 #>   [37,] 0.9767749 0.9812302 0.9813567 #>   [38,] 0.6544361 0.6599681 0.6723698 #>   [39,] 0.5575974 0.5998258 0.6160434 #>   [40,] 1.0114281 1.0269782 1.0689315 #>   [41,] 1.0221192 1.0405471 1.0802871 #>   [42,] 0.5539836 0.5670290 0.5742499 #>   [43,] 1.1136135 1.1143924 1.1565844 #>   [44,] 1.2811282 1.3083940 1.3553939 #>   [45,] 1.7795953 1.7843617 1.8282038 #>   [46,] 1.3636859 1.3862933 1.4477444 #>   [47,] 1.1656563 1.1768936 1.2009966 #>   [48,] 0.6516211 0.6789018 0.6822214 #>   [49,] 0.6571013 0.6922736 0.7112233 #>   [50,] 0.9127270 0.9160051 0.9327613 #>   [51,] 0.7005399 0.7818339 0.7852307 #>   [52,] 0.6050779 0.6813854 0.7484952 #>   [53,] 0.9623091 0.9637074 0.9640488 #>   [54,] 0.9004985 0.9043681 0.9113352 #>   [55,] 0.5764813 0.5861439 0.6036196 #>   [56,] 0.9721654 0.9896678 1.0213423 #>   [57,] 1.2183686 1.2607060 1.2665570 #>   [58,] 0.6979966 0.7376806 0.7692197 #>   [59,] 0.9177779 0.9393185 0.9394270 #>   [60,] 0.7310089 0.7778650 0.8020409 #>   [61,] 0.6713180 0.7570872 0.7576333 #>   [62,] 0.7238832 0.7438888 0.7741449 #>   [63,] 0.5693800 0.5731336 0.6171722 #>   [64,] 0.8134684 0.8155012 0.8486851 #>   [65,] 0.6314431 0.6620528 0.6695307 #>   [66,] 0.7487702 0.7510326 0.7665815 #>   [67,] 0.7037280 0.7139507 0.7341633 #>   [68,] 0.6670795 0.7039944 0.7103590 #>   [69,] 0.5590320 0.5826087 0.6090574 #>   [70,] 1.0705625 1.0839160 1.1077849 #>   [71,] 0.7925975 0.8267848 0.8600750 #>   [72,] 0.4665478 0.4980567 0.5050926 #>   [73,] 0.6832122 0.7127399 0.7301544 #>   [74,] 0.6706489 0.7036290 0.7122281 #>   [75,] 0.9944253 1.0938387 1.1284889 #>   [76,] 0.7341633 0.7386602 0.7543114 #>   [77,] 0.7444101 0.7878845 0.8116886 #>   [78,] 0.7183941 0.7242253 0.7437343 #>   [79,] 0.6669422 0.6838606 0.7015809 #>   [80,] 1.7852066 1.9035128 1.9593996 #>   [81,] 1.2074716 1.2937300 1.3053031 #>   [82,] 0.8501118 0.8510822 0.8887671 #>   [83,] 0.6912846 0.7224415 0.7439148 #>   [84,] 1.2312541 1.2640422 1.2865493 #>   [85,] 1.0518943 1.0554476 1.0708872 #>   [86,] 0.6896308 0.7412201 0.7649269 #>   [87,] 0.7517473 0.7538065 0.7627878 #>   [88,] 0.6607499 0.6651778 0.6755015 #>   [89,] 0.8049486 0.8602626 0.9045392 #>   [90,] 0.7128878 0.7728106 0.8510530 #>   [91,] 0.7852307 0.7854566 0.8330092 #>   [92,] 1.7256766 1.7263170 1.7344674 #>   [93,] 0.6820320 0.6995980 0.7385645 #>   [94,] 0.9136147 1.0265890 1.0361744 #>   [95,] 0.6844769 0.6987678 0.7313320 #>   [96,] 1.1858038 1.2298611 1.2433319 #>   [97,] 0.9149957 1.1553283 1.1715203 #>   [98,] 0.6350549 0.6468977 0.6569167 #>   [99,] 0.6095392 0.6515879 0.7125169 #>  [100,] 0.7548809 0.7640128 0.7852657 #>  [101,] 0.8339963 0.8746430 0.8802706 #>  [102,] 0.8803966 0.9150893 0.9655447 #>  [103,] 1.3828986 1.3844780 1.4077336 #>  [104,] 0.6973268 0.7098145 0.7467064 #>  [105,] 0.5697776 0.6048633 0.6226070 #>  [106,] 1.0555791 1.0815560 1.0834790 #>  [107,] 0.5333565 0.5858786 0.5920383 #>  [108,] 0.7323111 0.7431155 0.7739945 #>  [109,] 0.6553638 0.7204231 0.7339759 #>  [110,] 1.4211427 1.5612817 1.5691502 #>  [111,] 0.8804201 0.8804967 0.9133936 #>  [112,] 1.8300943 1.8462969 1.8554780 #>  [113,] 0.6681737 0.7201891 0.7234314 #>  [114,] 0.9264201 0.9446354 0.9898591 #>  [115,] 1.0305274 1.0873706 1.1108897 #>  [116,] 0.7776361 0.8285550 0.8445627 #>  [117,] 0.8105688 0.8334105 0.8344281 #>  [118,] 0.5251669 0.5258499 0.5761898 #>  [119,] 0.6680991 0.6735608 0.6832122 #>  [120,] 0.5456871 0.5893277 0.5902274 #>  [121,] 0.7243613 0.7391918 0.7430023 #>  [122,] 0.6011233 0.6619225 0.7385597 #>  [123,] 0.6637908 0.6920283 0.7221301 #>  [124,] 0.6622352 0.6793424 0.6797925 #>  [125,] 1.4978961 1.5240171 1.5591992 #>  [126,] 0.8145714 0.8294044 0.8933134 #>  [127,] 0.6213495 0.6382426 0.6421234 #>  [128,] 0.6497090 0.6654464 0.6723698 #>  [129,] 0.7529188 0.7531056 0.8286505 #>  [130,] 0.8415089 0.8776250 0.8833272 #>  [131,] 0.9066364 0.9705027 0.9867259 #>  [132,] 0.6082166 0.6088717 0.6183626 #>  [133,] 0.5901790 0.5906260 0.6049659 #>  [134,] 0.7160267 0.7525095 0.7664416 #>  [135,] 0.5871855 0.5888006 0.5958864 #>  [136,] 0.5596206 0.5888128 0.5969488 #>  [137,] 0.8632859 0.8702170 0.9241328 #>  [138,] 0.6115767 0.6173324 0.6180640 #>  [139,] 0.8219311 0.8441528 0.8611271 #>  [140,] 0.7012192 0.7072508 0.7099819 #>  [141,] 0.5743078 0.6728713 0.6747774 #>  [142,] 0.5263058 0.5891322 0.6317845 #>  [143,] 0.6099109 0.6164456 0.6347685 #>  [144,] 0.8930163 0.9479502 0.9620478 #>  [145,] 1.0256061 1.0524403 1.0587543 #>  [146,] 0.5566784 0.5713538 0.5788591 #>  [147,] 0.5543984 0.5705758 0.5721490 #>  [148,] 0.9795626 1.0067947 1.0458673 #>  [149,] 0.8637182 0.9008321 0.9043360 #>  [150,] 0.5414789 0.5788055 0.5862132 #>  [151,] 0.5853790 0.5875525 0.5915577 #>  [152,] 0.7714320 0.7798431 0.7872667 #>  [153,] 0.9014666 0.9705633 0.9777831 #>  [154,] 1.0157654 1.0779330 1.0913184 #>  [155,] 0.9316542 0.9658182 0.9670866 #>  [156,] 0.6073392 0.6131069 0.6592461 #>  [157,] 1.1114114 1.1454856 1.1555352 #>  [158,] 0.6052577 0.6307465 0.7290489 #>  [159,] 0.6285511 0.6381594 0.6443042 #>  [160,] 0.7880060 0.8260032 0.8534824 #>  [161,] 0.6633763 0.6657410 0.6797596 #>  [162,] 0.8476128 0.8624028 0.8771263 #>  [163,] 0.7845580 0.8266930 0.8318053 #>  [164,] 0.7392637 0.7512895 0.8111425 #>  [165,] 1.2922349 1.3063313 1.3084353 #>  [166,] 0.9128304 0.9454870 1.0354152 #>  [167,] 0.6104109 0.6456856 0.6493743 #>  [168,] 0.6152847 0.6210218 0.6397210 #>  [169,] 0.9241328 0.9419218 1.1478319 #>  [170,] 0.6543718 0.6672829 0.7638711 #>  [171,] 0.6459038 0.6709559 0.6813143 #>  [172,] 0.6297882 0.6436494 0.6455486 #>  [173,] 1.1226844 1.1330129 1.2040133 #>  [174,] 1.0910784 1.1286312 1.1740047 #>  [175,] 1.1304412 1.1901069 1.1943255 #>  [176,] 0.7143797 0.7184307 0.7481196 #>  [177,] 0.8513361 0.8603842 0.8674875 #>  [178,] 0.6705592 0.6735620 0.6778038 #>  [179,] 1.0194385 1.0333731 1.0398635 #>  [180,] 0.6132131 0.6198758 0.6648093 #>  [181,] 0.6900043 0.7318831 0.7641128 #>  [182,] 0.6079576 0.6144660 0.6170095 #>  [183,] 0.5681010 0.5703633 0.6560972 #>  [184,] 2.0221354 2.0532234 2.0724232 #>  [185,] 1.0225519 1.0345328 1.0356459 #>  [186,] 0.5291272 0.5727759 0.5803860 #>  [187,] 0.8187429 0.8696613 0.8934775 #>  [188,] 0.8677932 0.8900682 0.9412017 #>  [189,] 0.7229251 0.7349696 0.7951147 #>  [190,] 0.5737622 0.5920383 0.6537043 #>  [191,] 1.3769688 1.3968075 1.4065190 #>  [192,] 0.6929701 0.6971881 0.6983515 #>  [193,] 0.5998258 0.6034515 0.6136679 #>  [194,] 0.5429316 0.5570000 0.5602252 #>  [195,] 1.0188878 1.0793454 1.0858714 #>  [196,] 0.6269043 0.6810870 0.6868403 #>  [197,] 1.0075614 1.0431346 1.0821745 #>  [198,] 1.3594604 1.4146364 1.4263432 #>  [199,] 0.7430240 0.7511748 0.8771458 #>  [200,] 0.7863389 0.8066169 0.8143462 #>  [201,] 1.8213842 1.8912685 1.9962653 #>  [202,] 1.4548162 1.4980519 1.4988507 #>  [203,] 1.0292585 1.0564403 1.0715925 #>  [204,] 0.5571402 0.6248315 0.6380658 #>  [205,] 0.6196099 0.6290472 0.6292636 #>  [206,] 0.6378416 0.6567339 0.6771992 #>  [207,] 1.6953200 1.7081563 1.7206302 #>  [208,] 0.7497781 0.7546189 0.7557900 #>  [209,] 1.5233936 1.5288099 1.5962986 #>  [210,] 0.6239921 0.6247975 0.6265817 #>  [211,] 0.7915838 0.8227246 0.8271605 #>  [212,] 0.6133590 0.6334791 0.6504994 #>  [213,] 0.5879778 0.5889366 0.6110425 #>  [214,] 0.7508885 0.8324732 0.8941450 #>  [215,] 0.7468176 0.7739945 0.8493845 #>  [216,] 0.6418896 0.6420441 0.6478635 #>  [217,] 0.6582989 0.6735662 0.7013804 #>  [218,] 0.6180513 0.6354609 0.6562407 #>  [219,] 0.7390813 0.7445928 0.7881615 #>  [220,] 0.8158097 0.8690679 0.8797843 #>  [221,] 0.7647663 0.7783410 0.7837751 #>  [222,] 1.3820083 1.3966081 1.4695749 #>  [223,] 0.5455742 0.5658013 0.6034515 #>  [224,] 1.1583985 1.2959913 1.3045000 #>  [225,] 0.9930158 1.0073708 1.0326790 #>  [226,] 0.7177860 0.7245656 0.7300216 #>  [227,] 0.6152128 0.6768162 0.7500130 #>  [228,] 0.8081437 0.8210160 0.8341311 #>  [229,] 0.8173428 0.8390229 0.8620620 #>  [230,] 0.8007657 0.8012049 0.8112083 #>  [231,] 0.9177369 0.9279086 0.9315429 #>  [232,] 0.7094825 0.7412201 0.7487212 #>  [233,] 0.8801390 0.8919684 0.9048960 #>  [234,] 0.8240324 0.8333244 0.8385498 #>  [235,] 0.7525095 0.7695044 0.7708732 #>  [236,] 0.7133467 0.7192160 0.7198735 #>  [237,] 0.5881498 0.5997251 0.6016000 #>  [238,] 0.8105593 0.9042581 0.9140608 #>  [239,] 1.0796850 1.0905094 1.0981334 #>  [240,] 0.8508098 0.8635917 0.8980599 #>  [241,] 0.6227925 0.6280889 0.6417925 #>  [242,] 0.7067708 0.7184563 0.7377581 #>  [243,] 0.6115334 0.6430333 0.6456477 #>  [244,] 1.4331381 1.4607150 1.5316756 #>  [245,] 0.8501881 0.8563041 0.8590798 #>  [246,] 0.7118094 0.7147159 0.7300108 #>  [247,] 1.1565844 1.1967436 1.2031595 #>  [248,] 0.7812252 0.7929947 0.8109086 #>  [249,] 0.6637959 0.6669140 0.6801039 #>  [250,] 2.0397549 2.0483508 2.0556776 #>  [251,] 0.7355141 0.7445453 0.7960024 #>  [252,] 0.6012655 0.6101469 0.6277827 #>  [253,] 1.1820783 1.1844585 1.1852437 #>  [254,] 0.7059918 0.7131183 0.7172770 #>  [255,] 1.1761711 1.1954909 1.2139322 #>  [256,] 0.8081437 0.8302582 0.8359470 #>  [257,] 0.4847586 0.4983993 0.5328842 #>  [258,] 1.3630821 1.3645951 1.4483778 #>  [259,] 1.6683581 1.6846586 1.6916542 #>  [260,] 0.6327125 0.6592461 0.6797594 #>  [261,] 0.5816681 0.6651170 0.6719349 #>  [262,] 1.0199230 1.0306691 1.0465887 #>  [263,] 0.7328701 0.7366519 0.7488794 #>  [264,] 0.6567246 0.6632021 0.6666177 #>  [265,] 0.8342606 0.8833272 0.8873127 #>  [266,] 1.2187290 1.2362250 1.3522488 #>  [267,] 0.7023748 0.7102512 0.7225791 #>  [268,] 1.0880982 1.0941461 1.0960332 #>  [269,] 0.8627002 0.8743276 0.8751708 #>  [270,] 0.6198851 0.6314126 0.6475378 #>  [271,] 0.5674021 0.5693480 0.5928785 #>  [272,] 0.9341928 0.9833019 0.9973478 #>  [273,] 0.8096329 0.8292255 0.8555027 #>  [274,] 0.7891404 0.8243659 0.8278745 #>  [275,] 0.9317763 0.9409960 0.9466711 #>  [276,] 1.3790276 1.3802968 1.4076604 #>  [277,] 0.6844823 0.7143535 0.7407388 #>  [278,] 0.7100069 0.7488184 0.7600098 #>  [279,] 1.1506401 1.1908013 1.2663376 #>  [280,] 0.7630830 0.7659436 0.7761110 #>  [281,] 0.8431615 0.8637182 0.9226522 #>  [282,] 0.9590741 1.0251275 1.0283219 #>  [283,] 0.7033122 0.7052669 0.7377581 #>  [284,] 0.8044038 0.8099410 0.8531779 #>  [285,] 0.4574371 0.4633042 0.5149583 #>  [286,] 1.2142199 1.2325390 1.2486723 #>  [287,] 0.7117716 0.7845475 0.8023944 #>  [288,] 0.7105949 0.7146610 0.7506698 #>  [289,] 0.9633728 0.9659964 1.0147951 #>  [290,] 0.6066468 0.6082550 0.6091098 #>  [291,] 1.0277905 1.0338277 1.0357108 #>  [292,] 0.5000964 0.5028235 0.5161832 #>  [293,] 0.8557396 0.8838206 0.9363732 #>  [294,] 0.7162112 0.7261345 0.7368908 #>  [295,] 2.1098008 2.1263382 2.1662556 #>  [296,] 0.9174849 0.9391519 0.9513195 #>  [297,] 0.5151876 0.5552198 0.6246004 #>  [298,] 1.2236423 1.2574848 1.2584744 #>  [299,] 0.8009335 0.8341694 0.8629700 #>  [300,] 0.6411617 0.6742086 0.6789019 #>  [301,] 1.0222484 1.0651726 1.0824499 #>  [302,] 1.4780679 1.4931978 1.4998941 #>  [303,] 1.7793757 1.8106507 1.8345273 #>  [304,] 0.8031539 0.8513275 0.8791171 #>  [305,] 1.2292597 1.2357294 1.2826214 #>  [306,] 0.6505470 0.6771992 0.6788451 #>  [307,] 1.1818239 1.1945705 1.2083771 #>  [308,] 0.6593763 0.6723912 0.6867334 #>  [309,] 0.4700809 0.4816955 0.4866329 #>  [310,] 0.7201891 0.7371411 0.7627039 #>  [311,] 0.9326344 1.0005127 1.0038540 #>  [312,] 0.7288453 0.7482867 0.7527413 #>  [313,] 0.6792825 0.7098145 0.7107325 #>  [314,] 0.7188043 0.7305566 0.7341665 #>  [315,] 0.5343740 0.5371986 0.6196099 #>  [316,] 1.0993493 1.1180550 1.1213501 #>  [317,] 0.5166436 0.5418754 0.5499564 #>  [318,] 1.4359835 1.4469369 1.4834774 #>  [319,] 0.8046689 0.8057893 0.8264896 #>  [320,] 0.5838682 0.5972898 0.6249691 #>  [321,] 0.6478044 0.6480226 0.6585143 #>  [322,] 0.7356749 0.7797624 0.8027854 #>  [323,] 1.0977021 1.1011990 1.1069747 #>  [324,] 0.6170095 0.6424517 0.6700281 #>  [325,] 0.7829631 0.7942367 0.7964902 #>  [326,] 0.8682310 0.9106875 1.0473610 #>  [327,] 0.8372628 0.8838178 0.9024265 #>  [328,] 1.4275131 1.5188548 1.5214910 #>  [329,] 1.2825670 1.3081612 1.3743889 #>  [330,] 0.6444889 0.6908379 0.6954510 #>  [331,] 0.6772921 0.7085888 0.7115589 #>  [332,] 0.6055590 0.6319255 0.6535943 #>  [333,] 0.6089178 0.6171698 0.6420984 #>  [334,] 0.7013259 0.7197396 0.7201731 #>  [335,] 0.7554972 0.7570872 0.7621492 #>  [336,] 0.6903874 0.7099542 0.7263274 #>  [337,] 1.4731754 1.4770385 1.4885976 #>  [338,] 1.1171090 1.1343383 1.1866288 #>  [339,] 0.7904959 0.8211896 0.8407411 #>  [340,] 0.6571768 0.7153976 0.7344173 #>  [341,] 0.6206803 0.7202563 0.7536813 #>  [342,] 0.6031906 0.6348537 0.6648093 #>  [343,] 1.0684635 1.1281765 1.2701446 #>  [344,] 0.6379043 0.6522162 0.6533374 #>  [345,] 0.5810245 0.5867504 0.5913260 #>  [346,] 0.5046153 0.5277485 0.5910771 #>  [347,] 1.0505311 1.0576989 1.0992925 #>  [348,] 0.6311623 0.6560215 0.6822626 #>  [349,] 1.0165439 1.1333100 1.1340170 #>  [350,] 0.5813493 0.5950332 0.6079576 #>  [351,] 0.7300095 0.7602339 0.7629245 #>  [352,] 1.1053641 1.1180550 1.1312491 #>  [353,] 1.1837643 1.1988522 1.2302067 #>  [354,] 0.9533387 0.9564164 0.9649450 #>  [355,] 0.9164328 0.9176535 1.0082143 #>  [356,] 0.7133467 0.7360781 0.7797316 #>  [357,] 0.7177315 0.7849657 0.7935783 #>  [358,] 0.7369999 0.7680742 0.7718746 #>  [359,] 0.6829276 0.7062740 0.7828293 #>  [360,] 0.6238698 0.6319799 0.6712264 #>  [361,] 0.8012627 0.8229591 0.8455997 #>  [362,] 0.6160434 0.6178926 0.6240917 #>  [363,] 0.9001376 0.9136147 0.9147746 #>  [364,] 1.5932991 1.6157023 1.6168954 #>  [365,] 0.8077789 0.8595672 0.8851544 #>  [366,] 0.8105764 0.9519390 0.9627244 #>  [367,] 0.8791882 0.8820581 0.9409960 #>  [368,] 1.1542080 1.2095336 1.2174031 #>  [369,] 1.2001517 1.2151301 1.2367852 #>  [370,] 0.7215688 0.7504660 0.7612260 #>  [371,] 0.5766792 0.6133128 0.6378261 #>  [372,] 0.5124364 0.5342045 0.5436498 #>  [373,] 0.7111043 0.7964800 0.8074443 #>  [374,] 0.7735197 0.7903442 0.8573493 #>  [375,] 0.6717405 0.6987919 0.7056988 #>  [376,] 1.1960716 1.2061600 1.2549521 #>  [377,] 0.9120929 0.9420186 1.0101190 #>  [378,] 0.9728332 0.9873418 0.9990933 #>  [379,] 0.7385341 0.7460797 0.7479200 #>  [380,] 0.6228103 0.6252471 0.6378261 #>  [381,] 0.6451651 0.6466886 0.6497090 #>  [382,] 0.6164454 0.6313534 0.6431640 #>  [383,] 1.7215563 1.7413460 1.7505421 #>  [384,] 1.4146987 1.4767661 1.5423798 #>  [385,] 1.2790766 1.3318983 1.3342449 #>  [386,] 0.5253829 0.5374429 0.5478135 #>  [387,] 0.6767031 0.6980473 0.7102383 #>  [388,] 0.6058627 0.6468854 0.6582067 #>  [389,] 0.7614894 0.7666488 0.7872667 #>  [390,] 0.7636327 0.7665815 0.7671899 #>  [391,] 0.7542396 0.7742806 0.8188065 #>  [392,] 0.8449039 0.8477306 0.8554640 #>  [393,] 0.6606911 0.6652344 0.7106932 #>  [394,] 1.1621956 1.1644541 1.1986978 #>  [395,] 1.1677274 1.2597720 1.2879303 #>  [396,] 0.9441428 0.9562852 0.9670866 #>  [397,] 0.6461569 0.6517059 0.6642091 #>  [398,] 0.8534824 0.8593124 0.9181514 #>  [399,] 0.6507469 0.6531001 0.6857016 #>  [400,] 0.7627499 0.8010999 0.8162060 #>  [401,] 0.7167615 0.7590209 0.7663757 #>  [402,] 0.9385822 0.9546533 0.9735454 #>  [403,] 0.9174849 0.9597572 0.9760358 #>  [404,] 0.7314190 0.7399096 0.7420626 #>  [405,] 0.6440154 0.6769841 0.6813038 #>  [406,] 0.9042870 0.9199815 0.9366138 #>  [407,] 0.5143304 0.5230954 0.5826878 #>  [408,] 0.7751121 0.8150130 0.8160969 #>  [409,] 0.6680155 0.6764425 0.6882297 #>  [410,] 1.0683585 1.0714703 1.1421249 #>  [411,] 1.2147471 1.2663894 1.2727458 #>  [412,] 1.1390125 1.1560421 1.1667422 #>  [413,] 0.5777682 0.5841814 0.5867504 #>  [414,] 1.0770330 1.1461043 1.1826790 #>  [415,] 0.7190763 0.7826114 0.8346353 #>  [416,] 1.2734965 1.3180883 1.3209671 #>  [417,] 0.8609763 0.8951846 0.9389049 #>  [418,] 0.6299388 0.6377190 0.6472083 #>  [419,] 1.3202222 1.3234820 1.3480002 #>  [420,] 0.7911226 0.8918625 0.9113162 #>  [421,] 1.5099517 1.5879799 1.6275022 #>  [422,] 0.8648793 0.8801506 0.8962246 #>  [423,] 0.6058663 0.6082788 0.6314126 #>  [424,] 1.3163879 1.3328708 1.3662731 #>  [425,] 0.7955620 0.7975097 0.8114964 #>  [426,] 0.6418109 0.6934614 0.7022022 #>  [427,] 1.8529715 1.9275538 1.9412448 #>  [428,] 0.8037321 0.8180881 0.8260032 #>  [429,] 0.8748160 0.9124285 0.9167675 #>  [430,] 1.4781769 1.5195083 1.5757886 #>  [431,] 0.7765806 0.7796118 0.7852608 #>  [432,] 0.9012644 0.9333909 0.9559555 #>  [433,] 0.6599585 0.6928193 0.6981878 #>  [434,] 0.7897385 0.8571447 0.8957822 #>  [435,] 1.1936272 1.2030167 1.2407876 #>  [436,] 0.7833691 0.8614368 0.8945441 #>  [437,] 0.5384173 0.5829803 0.5841615 #>  [438,] 0.5571568 0.6174222 0.6316854 #>  [439,] 0.6609872 0.6613144 0.7115270 #>  [440,] 0.8451830 0.8557046 0.8650737 #>  [441,] 0.5728784 0.5745183 0.5839120 #>  [442,] 1.0467757 1.0550746 1.0574801 #>  [443,] 0.6892405 0.7332718 0.7333728 #>  [444,] 0.5805887 0.6012403 0.6268490 #>  [445,] 0.7912182 0.8435330 0.8641570 #>  [446,] 0.7852608 0.8762724 0.9075501 #>  [447,] 1.3676645 1.3747721 1.4162996 #>  [448,] 1.2725432 1.2803105 1.2833201 #>  [449,] 1.1295200 1.2154808 1.2187803 #>  [450,] 0.9210998 0.9405099 1.0160491 #>  [451,] 0.6643364 0.6665172 0.6964813 #>  [452,] 0.6314404 0.6404495 0.6684119 #>  [453,] 0.5370750 0.5614417 0.6017285 #>  [454,] 0.9114307 0.9131999 0.9218992 #>  [455,] 0.5167141 0.5323207 0.5668559 #>  [456,] 0.7683081 0.7733977 0.8122535 #>  [457,] 0.5024490 0.5412091 0.5569929 #>  [458,] 1.0857416 1.1236817 1.1830759 #>  [459,] 0.5728755 0.5922088 0.5931377 #>  [460,] 0.5689447 0.5754628 0.5817520 #>  [461,] 0.6513352 0.7065268 0.7117218 #>  [462,] 0.5501011 0.5596206 0.5649255 #>  [463,] 0.6391369 0.6395256 0.6412760 #>  [464,] 0.8306194 0.8751047 0.8794120 #>  [465,] 0.7393981 0.8423412 0.8437964 #>  [466,] 1.8836910 1.9095367 1.9135119 #>  [467,] 1.1950243 1.2333716 1.2435436 #>  [468,] 0.9667808 0.9857054 0.9916732 #>  [469,] 0.9461251 0.9463880 0.9540307 #>  [470,] 0.5763679 0.5815961 0.5851288 #>  [471,] 0.8321809 0.8519922 0.8573915 #>  [472,] 0.6797594 0.6974174 0.7011072 #>  [473,] 0.6045314 0.6086948 0.6161821 #>  [474,] 0.6178535 0.6265817 0.6299388 #>  [475,] 1.4563943 1.4668533 1.4956531 #>  [476,] 0.4759897 0.5278541 0.5323207 #>  [477,] 0.5904797 0.5921010 0.6182972 #>  [478,] 0.7475949 0.7595601 0.7750158 #>  [479,] 0.8676342 0.9958579 1.0082914 #>  [480,] 0.9988466 1.0379648 1.0873266 #>  [481,] 0.6811404 0.7125915 0.7438543 #>  [482,] 0.7233252 0.7258189 0.7496445 #>  [483,] 0.8908971 0.9220001 0.9393187 #>  [484,] 0.8402377 0.8782716 0.8924074 #>  [485,] 0.8752551 0.9683506 0.9777102 #>  [486,] 0.9860885 1.0097891 1.0138331 #>  [487,] 0.6715531 0.6862316 0.6922482 #>  [488,] 1.2949801 1.3199758 1.3314084 #>  [489,] 1.0834790 1.1111410 1.1434177 #>  [490,] 0.7012192 0.7035310 0.7197476 #>  [491,] 0.8863247 0.9151983 0.9861853 #>  [492,] 1.7159364 1.7248158 1.7670427 #>  [493,] 0.8374759 0.9264355 0.9493804 #>  [494,] 1.3369391 1.3572066 1.3602157 #>  [495,] 1.3663135 1.3747328 1.3915746 #>  [496,] 0.9388876 0.9787855 0.9818573 #>  [497,] 0.9633728 0.9716273 1.0105809 #>  [498,] 1.2406684 1.2583409 1.3507659 #>  [499,] 0.8820550 1.0146170 1.0150288 #>  [500,] 0.9055686 0.9680445 0.9941518 #>  [501,] 2.4145756 2.4420108 2.4464436 #>  [502,] 0.5520771 0.5745183 0.5826584 #>  [503,] 0.8337882 0.8505912 0.8526129 #>  [504,] 0.6882318 0.6964999 0.7367348 #>  [505,] 0.9813650 0.9874835 1.0472607 #>  [506,] 0.6814462 0.7060224 0.7076732 #>  [507,] 0.4816955 0.4847935 0.4864367 #>  [508,] 0.5691907 0.5770479 0.5780491 #>  [509,] 1.6335442 1.6385179 1.6535956 #>  [510,] 1.3528960 1.3563794 1.3611355 #>  [511,] 0.6759780 0.7094116 0.7247117 #>  [512,] 1.2926636 1.3023587 1.3749284 #>  [513,] 1.5299030 1.5399956 1.6611706 #>  [514,] 0.6710257 0.6810884 0.6950817 #>  [515,] 0.7584446 0.8062355 0.8130625 #>  [516,] 0.8178128 0.8178424 0.8205612 #>  [517,] 0.8591310 0.8919684 0.9240162 #>  [518,] 0.5025708 0.5418103 0.5693054 #>  [519,] 0.6895236 0.6973202 0.7059582 #>  [520,] 0.5773875 0.5787767 0.6029737 #>  [521,] 0.7146610 0.7643505 0.7878777 #>  [522,] 0.6803957 0.6811404 0.7170140 #>  [523,] 0.6578455 0.6659730 0.6749460 #>  [524,] 0.7388219 0.7477676 0.7486448 #>  [525,] 0.9893545 1.0141225 1.0483922 #>  [526,] 0.6767827 0.7060023 0.7315015 #>  [527,] 1.0208764 1.0257840 1.0330603 #>  [528,] 0.7171179 0.7334094 0.7448059 #>  [529,] 0.8668125 0.9510885 0.9550453 #>  [530,] 1.3518969 1.3648092 1.3849989 #>  [531,] 0.7892308 0.8003594 0.8356967 #>  [532,] 0.8611332 0.8613864 0.9164915 #>  [533,] 0.6250401 0.6367535 0.6517178 #>  [534,] 0.7000426 0.7177860 0.7378278 #>  [535,] 0.7863389 0.8349013 0.8376880 #>  [536,] 0.9794036 1.0058872 1.0216113 #>  [537,] 0.8364121 0.8611271 0.8800067 #>  [538,] 0.5635180 0.6092181 0.6218384 #>  [539,] 0.8904440 0.8921551 0.8932878 #>  [540,] 0.6639791 0.7167615 0.7429688 #>  [541,] 0.6532183 0.6622352 0.6784005 #>  [542,] 1.3483684 1.3507839 1.3894962 #>  [543,] 0.8085228 0.8488790 0.8680777 #>  [544,] 0.5340517 0.5593715 0.6246004 #>  [545,] 0.5689344 0.6011425 0.6378416 #>  [546,] 0.6056311 0.6089128 0.6109068 #>  [547,] 0.7942207 0.8298927 0.8602639 #>  [548,] 0.9145482 0.9155776 0.9157779 #>  [549,] 0.7833891 0.7929947 0.7977212 #>  [550,] 0.8923763 0.8936716 0.8943902 #>  [551,] 0.6252989 0.6302890 0.6325989 #>  [552,] 0.6213495 0.6715206 0.6738913 #>  [553,] 0.5815733 0.6928156 0.7067708 #>  [554,] 0.7766909 0.7895843 0.8063112 #>  [555,] 0.8607480 0.8663636 0.8850935 #>  [556,] 0.6819663 0.7233252 0.7428187 #>  [557,] 0.8135751 0.8167236 0.8241794 #>  [558,] 2.3432253 2.3690277 2.3950798 #>  [559,] 0.7093489 0.7243632 0.7538692 #>  [560,] 0.6790146 0.6813491 0.6987252 #>  [561,] 0.9278684 0.9670014 0.9923017 #>  [562,] 0.6440527 0.6939634 0.6946025 #>  [563,] 0.8178424 0.8214247 0.8249273 #>  [564,] 0.5854172 0.6030661 0.6703721 #>  [565,] 2.2018303 2.2170551 2.2715903 #>  [566,] 0.6740985 0.6961154 0.7107108 #>  [567,] 0.5288156 0.6289047 0.6432439 #>  [568,] 0.6086948 0.6167249 0.6182271 #>  [569,] 0.8899425 0.8907170 0.9248265 #>  [570,] 0.8781574 0.9243470 0.9436126 #>  [571,] 0.6611107 0.6947258 0.7779487 #>  [572,] 0.8544198 0.8607628 0.9113352 #>  [573,] 0.6818945 0.6944958 0.6973268 #>  [574,] 0.6450755 0.7042088 0.7045850 #>  [575,] 0.8500746 0.9282655 1.0189408 #>  [576,] 0.7818339 0.7826114 0.8231869 #>  [577,] 1.2586485 1.2649063 1.4049734 #>  [578,] 0.6757237 0.6791727 0.7117059 #>  [579,] 0.6788451 0.6853032 0.7137189 #>  [580,] 0.6333447 0.6695882 0.6853860 #>  [581,] 0.6198851 0.6315937 0.6712264 #>  [582,] 0.5481736 0.5764813 0.6090256 #>  [583,] 0.6900380 0.6917397 0.7118564 #>  [584,] 0.8031552 0.8159384 0.8325545 #>  [585,] 0.8078439 0.8962927 0.9024955 #>  [586,] 0.7863477 0.8318041 0.8382579 #>  [587,] 0.6263667 0.6662338 0.6693745 #>  [588,] 1.0664086 1.0867883 1.1595318 #>  [589,] 0.7238832 0.7291073 0.7634351 #>  [590,] 1.8472453 1.9284869 1.9455458 #>  [591,] 0.6030661 0.6150027 0.6178535 #>  [592,] 0.7067891 0.7202563 0.7385543 #>  [593,] 0.5766874 0.6071901 0.6722267 #>  [594,] 0.5037597 0.5140889 0.5278857 #>  [595,] 0.6973421 0.7460797 0.7484519 #>  [596,] 0.8587832 0.8776250 0.8925923 #>  [597,] 0.8990254 0.8998505 0.9043764 #>  [598,] 0.6098153 0.6283844 0.6289047 #>  [599,] 1.1384414 1.1628123 1.1670567 #>  [600,] 0.7396622 0.7411347 0.7429837 #>  [601,] 0.6981834 0.7385372 0.7571183 #>  [602,] 0.5697776 0.5925780 0.6079173 #>  [603,] 1.0356459 1.0574077 1.0919283 #>  [604,] 1.1836077 1.2198348 1.2271238 #>  [605,] 0.6046276 0.6299998 0.6461569 #>  [606,] 0.5649939 0.5740247 0.5826055 #>  [607,] 1.1519656 1.1540375 1.1572590 #>  [608,] 0.8675523 0.8853132 0.9111472 #>  [609,] 1.6049527 1.6168954 1.6674373 #>  [610,] 0.9049409 0.9094752 1.0089479 #>  [611,] 0.5936046 0.6057138 0.6595870 #>  [612,] 0.9681270 0.9843482 1.0041864 #>  [613,] 1.2830695 1.3338333 1.3386482 #>  [614,] 0.7772791 0.8072681 0.8344979 #>  [615,] 0.7472657 0.7642566 0.7715074 #>  [616,] 0.8531185 0.8587832 0.8961581 #>  [617,] 0.7300108 0.7336099 0.7580219 #>  [618,] 0.6519833 0.7036290 0.7411941 #>  [619,] 0.9758230 1.0551752 1.0664273 #>  [620,] 0.8801867 0.8923898 0.9039039 #>  [621,] 0.5862132 0.6693059 0.6782872 #>  [622,] 0.6219328 0.6248315 0.6261556 #>  [623,] 0.7478602 0.7580601 0.7706583 #>  [624,] 0.5698945 0.6299090 0.6403390 #>  [625,] 1.0167930 1.0453051 1.1333771 #>  [626,] 0.7392944 0.7548943 0.7563227 #>  [627,] 0.6061947 0.6288226 0.6932874 #>  [628,] 0.5016559 0.5094419 0.5727759 #>  [629,] 1.0443008 1.0609972 1.0629319 #>  [630,] 0.7998817 0.8195488 0.8678657 #>  [631,] 0.5547715 0.6030755 0.6154857 #>  [632,] 0.8144859 0.8281860 0.8697099 #>  [633,] 1.0451144 1.0542669 1.1114114 #>  [634,] 0.6419922 0.6432989 0.6447714 #>  [635,] 0.6742909 0.7286320 0.7541595 #>  [636,] 0.9607071 0.9640626 0.9819342 #>  [637,] 0.9198462 0.9676332 0.9754811 #>  [638,] 1.1200604 1.2439004 1.2668609 #>  [639,] 1.1293918 1.1544637 1.1925736 #>  [640,] 0.8213356 0.8387448 0.8433437 #>  [641,] 0.9677572 0.9888431 1.0394407 #>  [642,] 1.0378200 1.0572936 1.0864902 #>  [643,] 0.5496676 0.5826584 0.5893277 #>  [644,] 0.8202058 0.8503474 0.8628839 #>  [645,] 0.6876549 0.6992767 0.7008368 #>  [646,] 1.0006761 1.0891220 1.1000991 #>  [647,] 0.7692970 0.8176418 0.8722259 #>  [648,] 0.9001376 0.9306692 0.9344276 #>  [649,] 0.4759897 0.5073673 0.5773453 #>  [650,] 1.9382943 1.9416419 2.0260886 #>  [651,] 1.1290313 1.2173869 1.2181288 #>  [652,] 0.6658469 0.6770162 0.6778106 #>  [653,] 0.7356093 0.7722727 0.7758287 #>  [654,] 1.0047432 1.0131991 1.0317723 #>  [655,] 0.5662782 0.5710962 0.5811230 #>  [656,] 0.6184569 0.6220324 0.6290472 #>  [657,] 0.7677005 0.7693379 0.7703628 #>  [658,] 0.5899925 0.6245978 0.6298449 #>  [659,] 0.7469655 0.7567931 0.7701006 #>  [660,] 0.5644498 0.5773875 0.6264687 #>  [661,] 0.5910982 0.6014117 0.6069905 #>  [662,] 0.8325475 0.8360327 0.8718518 #>  [663,] 0.5199536 0.5201948 0.5253829 #>  [664,] 2.0411730 2.0795131 2.1723752 #>  [665,] 0.6398905 0.7198262 0.7426566 #>  [666,] 1.6206125 1.6538794 1.6952439 #>  [667,] 0.7155574 0.7265504 0.7561248 #>  [668,] 0.6236368 0.6674390 0.7730710 #>  [669,] 0.6593693 0.6599681 0.7081862 #>  [670,] 0.9392153 0.9818740 0.9936594 #>  [671,] 0.8417960 0.8581661 0.9167841 #>  [672,] 0.8022114 0.8045830 0.8129684 #>  [673,] 1.0238475 1.0297726 1.0514701 #>  [674,] 0.8379912 0.8492909 0.8665540 #>  [675,] 0.6764425 0.7128808 0.7414976 #>  [676,] 0.9237796 0.9572670 0.9769117 #>  [677,] 0.6259317 0.6287526 0.6306655 #>  [678,] 0.7745990 0.7968260 0.8289013 #>  [679,] 1.1319135 1.1391750 1.1587812 #>  [680,] 0.7995431 0.8797833 0.9001406 #>  [681,] 0.5658163 0.5663868 0.6085266 #>  [682,] 1.1814759 1.2122146 1.2527892 #>  [683,] 0.9574515 0.9917246 1.0476483 #>  [684,] 0.8202589 0.8405467 0.8482936 #>  [685,] 1.0408116 1.0770330 1.0790551 #>  [686,] 1.8179036 1.8340617 1.9116460 #>  [687,] 0.8240114 0.8346796 0.8540282 #>  [688,] 0.7111981 0.7168102 0.7506698 #>  [689,] 0.7062740 0.7083143 0.7332891 #>  [690,] 0.7589517 0.7814489 0.8743718 #>  [691,] 0.7887940 0.8068922 0.8298635 #>  [692,] 0.7042882 0.7073357 0.7086554 #>  [693,] 0.8677932 0.9081009 0.9096423 #>  [694,] 0.9426249 0.9456269 0.9996745 #>  [695,] 0.7261435 0.7369679 0.7431326 #>  [696,] 0.5259880 0.5325244 0.5335413 #>  [697,] 0.9357843 1.0164852 1.1235415 #>  [698,] 0.6602462 0.6971881 0.7130196 #>  [699,] 0.7407388 0.7441478 0.7587615 #>  [700,] 0.5805887 0.6411091 0.6493704 #>  [701,] 0.8441528 0.8526117 0.8743718 #>  [702,] 0.7091045 0.7115284 0.7332891 #>  [703,] 1.4329723 1.4998115 1.5321308 #>  [704,] 0.8716388 0.9324892 0.9406988 #>  [705,] 0.9435541 1.0315119 1.0640330 #>  [706,] 0.6753137 0.7172770 0.7210186 #>  [707,] 0.6354370 0.6485246 0.6687828 #>  [708,] 0.7013456 0.7131056 0.7347693 #>  [709,] 0.7484519 0.7737699 0.7741449 #>  [710,] 0.8423412 0.8555198 0.8749579 #>  [711,] 1.1663112 1.2098689 1.2143511 #>  [712,] 0.9481154 0.9482776 0.9492661 #>  [713,] 0.5139554 0.5386177 0.5543984 #>  [714,] 0.6937074 0.7245582 0.7468176 #>  [715,] 1.4709076 1.4824762 1.4912133 #>  [716,] 0.8951693 0.8961581 0.9878208 #>  [717,] 0.5740756 0.5972898 0.6142427 #>  [718,] 0.9250145 0.9261443 0.9285668 #>  [719,] 0.5785084 0.6069989 0.6116374 #>  [720,] 0.9843897 1.0550667 1.0561660 #>  [721,] 0.5411180 0.5608529 0.5653868 #>  [722,] 0.5295162 0.5340517 0.5555209 #>  [723,] 0.9688074 1.0018221 1.0154645 #>  [724,] 0.6862316 0.7080334 0.7092927 #>  [725,] 0.6652081 0.6720352 0.6917995 #>  [726,] 0.6144660 0.6167648 0.6466886 #>  [727,] 0.8975746 0.9026949 0.9269203 #>  [728,] 0.7297279 0.7441841 0.7579067 #>  [729,] 0.9753392 0.9793578 0.9902628 #>  [730,] 0.6466303 0.6596934 0.6713759 #>  [731,] 0.7510750 0.8031048 0.8497506 #>  [732,] 0.7844187 0.7910788 0.8033215 #>  [733,] 1.1436977 1.2593077 1.2944929 #>  [734,] 1.0233959 1.0988194 1.1192609 #>  [735,] 0.6888786 0.7709872 0.8026905 #>  [736,] 1.1020634 1.1103051 1.1116794 #>  [737,] 0.4875835 0.5037597 0.5218255 #>  [738,] 1.2087302 1.2367852 1.2630820 #>  [739,] 2.1226628 2.1489737 2.1847682 #>  [740,] 0.9699873 0.9936126 0.9981753 #>  [741,] 0.5541666 0.5674918 0.5693480 #>  [742,] 0.5708686 0.5748597 0.5788055 #>  [743,] 0.8565868 0.8744701 0.8796845 #>  [744,] 0.9290540 0.9548992 0.9762425 #>  [745,] 0.4644079 0.5262045 0.5492644 #>  [746,] 1.0158253 1.0370421 1.0656568 #>  [747,] 0.7036279 0.7143330 0.7151035 #>  [748,] 1.2295782 1.2701114 1.3213964 #>  [749,] 0.5693054 0.6197711 0.6784878 #>  [750,] 0.7510750 0.7788458 0.7880611 #>  [751,] 0.7907865 0.8110518 0.8268999 #>  [752,] 1.6528810 1.6852090 1.7012686 #>  [753,] 0.8275630 0.8613339 0.8736702 #>  [754,] 0.6022206 0.6873235 0.6881103 #>  [755,] 0.7941230 0.7957952 0.7978296 #>  [756,] 0.7081964 0.7167148 0.7362297 #>  [757,] 1.2384498 1.2410470 1.3512977 #>  [758,] 0.6404495 0.7010819 0.7160734 #>  [759,] 0.5552198 0.6299090 0.6299998 #>  [760,] 0.8529619 0.8699727 0.8723819 #>  [761,] 1.1095331 1.1378732 1.1933431 #>  [762,] 0.6133128 0.6134790 0.6152627 #>  [763,] 0.5848662 0.5881791 0.5938147 #>  [764,] 1.2015164 1.2033767 1.2357261 #>  [765,] 1.3644598 1.3664599 1.3791541 #>  [766,] 0.9682310 0.9753498 0.9834251 #>  [767,] 0.7501720 0.7553391 0.7784621 #>  [768,] 0.6176954 0.6553638 0.7037984 #>  [769,] 0.9799616 0.9971581 1.0188878 #>  [770,] 0.6067608 0.6166483 0.6215483 #>  [771,] 0.6988536 0.7143979 0.7691937 #>  [772,] 0.6707290 0.7406443 0.7925577 #>  [773,] 0.6920620 0.7192525 0.7378939 #>  [774,] 0.8061181 0.8335395 0.8519922 #>  [775,] 1.2012728 1.2145928 1.2264780 #>  [776,] 0.6036117 0.6045314 0.6074887 #>  [777,] 0.7134724 0.7330610 0.7336099 #>  [778,] 0.7357161 0.7659436 0.7765781 #>  [779,] 1.9690753 1.9715492 1.9898267 #>  [780,] 1.0283219 1.0732000 1.1302308 #>  [781,] 1.2927882 1.2994474 1.3193296 #>  [782,] 0.8892492 0.9349566 0.9609719 #>  [783,] 0.7018778 0.7117218 0.7143797 #>  [784,] 0.9308265 0.9329245 0.9864876 #>  [785,] 0.6700494 0.6884271 0.7247373 #>  [786,] 0.6910984 0.7043720 0.7224982 #>  [787,] 0.8368802 0.8438580 0.8626579 #>  [788,] 0.5811230 0.6050018 0.6342684 #>  [789,] 0.5341757 0.5555209 0.5730101 #>  [790,] 0.8837296 0.8878474 0.9150893 #>  [791,] 0.7885298 0.7951147 0.7955146 #>  [792,] 0.5522140 0.5649189 0.5940605 #>  [793,] 1.5337373 1.5347884 1.5472385 #>  [794,] 0.8744181 0.8762210 0.8950791 #>  [795,] 0.5354529 0.6159843 0.6497799 #>  [796,] 0.5435039 0.5631950 0.5761898 #>  [797,] 0.5904797 0.6074887 0.6143992 #>  [798,] 0.6754314 0.7094825 0.7628576 #>  [799,] 0.5793089 0.5914720 0.6272817 #>  [800,] 0.5851032 0.6079851 0.6545558 #>  [801,] 0.5455918 0.5498394 0.5578871 #>  [802,] 0.5969488 0.6414602 0.6594972 #>  [803,] 0.7023748 0.7029518 0.7169213 #>  [804,] 0.8185188 0.8205612 0.8326591 #>  [805,] 1.1750752 1.1903984 1.1933431 #>  [806,] 1.0302284 1.0537445 1.0748683 #>  [807,] 1.6709016 1.7005440 1.7394570 #>  [808,] 0.8407370 0.8500746 0.8637478 #>  [809,] 0.7008518 0.7150811 0.7800171 #>  [810,] 0.5433768 0.5853286 0.5858126 #>  [811,] 0.8785766 0.8927469 0.9212768 #>  [812,] 0.7942367 0.8017567 0.8151381 #>  [813,] 0.7228474 0.7321719 0.7385597 #>  [814,] 0.9128304 0.9264948 0.9299598 #>  [815,] 1.5803471 1.5953455 1.6277466 #>  [816,] 0.6993452 0.7242203 0.7344657 #>  [817,] 1.6124134 1.6636003 1.6760532 #>  [818,] 0.8376880 0.8426910 0.8453352 #>  [819,] 0.6316854 0.6320838 0.6329795 #>  [820,] 1.1178551 1.1519532 1.1632556 #>  [821,] 0.5833116 0.6029864 0.6135050 #>  [822,] 0.9326344 0.9529245 0.9951438 #>  [823,] 0.6772256 0.6932874 0.7187178 #>  [824,] 0.5820719 0.5912199 0.5958864 #>  [825,] 0.6578455 0.6685950 0.6729128 #>  [826,] 0.5650308 0.5788591 0.5883047 #>  [827,] 0.8792121 0.8806975 0.8816077 #>  [828,] 1.0188981 1.0945970 1.1559622 #>  [829,] 0.6354521 0.6415935 0.6464179 #>  [830,] 0.9306057 0.9731270 0.9804268 #>  [831,] 0.8952237 0.9297569 0.9763403 #>  [832,] 1.0843053 1.0897857 1.1173875 #>  [833,] 0.5930187 0.5939369 0.6069079 #>  [834,] 0.7465824 0.7697630 0.7820416 #>  [835,] 0.4847935 0.4983993 0.5371986 #>  [836,] 0.5418103 0.5454948 0.5471028 #>  [837,] 0.8334105 0.8618845 0.9283201 #>  [838,] 0.9496958 1.0138397 1.0735338 #>  [839,] 0.9777460 1.0175556 1.0292585 #>  [840,] 0.7527413 0.7735569 0.7822611 #>  [841,] 0.9744743 1.0102749 1.0125469 #>  [842,] 0.5128846 0.5187470 0.5232374 #>  [843,] 1.0283224 1.0680810 1.0750131 #>  [844,] 0.9416318 0.9482930 0.9629695 #>  [845,] 1.0277905 1.0347361 1.1459346 #>  [846,] 0.7532099 0.8083029 0.8129840 #>  [847,] 0.6244790 0.6370497 0.6643578 #>  [848,] 0.7263274 0.7298699 0.7523639 #>  [849,] 0.6670763 0.6757237 0.7488167 #>  [850,] 0.7400483 0.7407983 0.7678197 #>  [851,] 0.8328801 0.8593535 0.8706834 #>  [852,] 0.8042118 0.8181203 0.8300385 #>  [853,] 1.3269187 1.3651020 1.3995892 #>  [854,] 1.4041430 1.4212342 1.4334688 #>  [855,] 0.8489212 0.8509315 0.9226693 #>  [856,] 0.6371847 0.6373957 0.6489260 #>  [857,] 0.9479864 1.0184980 1.0239902 #>  [858,] 0.7565456 0.7837856 0.8034945 #>  [859,] 0.7948078 0.7953206 0.8008431 #>  [860,] 0.6458494 0.6610452 0.6853779 #>  [861,] 0.9921289 1.0741951 1.0819476 #>  [862,] 0.7420654 0.7459836 0.7656647 #>  [863,] 0.9134277 0.9463880 0.9774547 #>  [864,] 0.8385498 0.8457286 0.8462907 #>  [865,] 0.6143098 0.6192943 0.6269716 #>  [866,] 0.5851182 0.5949997 0.6690769 #>  [867,] 0.6249000 0.6323681 0.6533374 #>  [868,] 0.6744915 0.6873026 0.6948454 #>  [869,] 0.7422157 0.7559815 0.7563227 #>  [870,] 0.6857204 0.7060388 0.7225791 #>  [871,] 0.6754866 0.7015258 0.7165442 #>  [872,] 0.6624938 0.6659730 0.6665198 #>  [873,] 0.7918862 0.8899351 0.9106117 #>  [874,] 0.9897825 0.9967091 0.9998667 #>  [875,] 0.6674390 0.6709559 0.6722478 #>  [876,] 0.5127744 0.5200857 0.5278857 #>  [877,] 0.7248677 0.7362571 0.7574972 #>  [878,] 0.8650737 0.8673128 0.8876872 #>  [879,] 0.8082818 0.8188058 0.8420042 #>  [880,] 0.5238938 0.5245936 0.6314431 #>  [881,] 0.5546065 0.5552367 0.5658163 #>  [882,] 0.6593763 0.6692368 0.6819575 #>  [883,] 1.1362660 1.1670605 1.1814908 #>  [884,] 0.6274278 0.6516153 0.6589275 #>  [885,] 0.9445222 0.9758457 0.9935428 #>  [886,] 1.0196759 1.0782516 1.1500725 #>  [887,] 0.5611785 0.5721490 0.5730101 #>  [888,] 1.4525418 1.5335511 1.5650556 #>  [889,] 0.7290624 0.7626622 0.7701266 #>  [890,] 0.6575866 0.6631294 0.6709890 #>  [891,] 0.6369631 0.6478044 0.6552745 #>  [892,] 0.5949277 0.6268538 0.6411613 #>  [893,] 0.8987008 0.8996465 0.9122463 #>  [894,] 0.6536885 0.7169877 0.7448199 #>  [895,] 0.8754574 0.8961878 0.9137037 #>  [896,] 0.8990254 0.9600782 0.9845505 #>  [897,] 0.8324243 0.8734084 0.8839719 #>  [898,] 1.6232812 1.6329324 1.6843737 #>  [899,] 0.5307726 0.5541666 0.5542382 #>  [900,] 0.9233367 0.9341166 0.9619989 #>  [901,] 1.1674370 1.2091835 1.2888790 #>  [902,] 0.5935215 0.6133391 0.6145858 #>  [903,] 1.1552582 1.1596754 1.2374547 #>  [904,] 0.6360963 0.6439245 0.6468046 #>  [905,] 1.1296944 1.1306698 1.1445650 #>  [906,] 0.4926394 0.5200857 0.5569929 #>  [907,] 0.7094116 0.7272964 0.7351366 #>  [908,] 0.5967956 0.5984226 0.6065631 #>  [909,] 0.7092927 0.7741783 0.8215954 #>  [910,] 0.5743078 0.5881791 0.6133391 #>  [911,] 0.7960024 0.8147715 0.8201958 #>  [912,] 0.6367922 0.6648602 0.7074269 #>  [913,] 1.1330448 1.1393728 1.2083914 #>  [914,] 1.1261638 1.1363303 1.1381319 #>  [915,] 0.7265642 0.7372435 0.7600814 #>  [916,] 0.5991453 0.6288226 0.6909970 #>  [917,] 0.5936259 0.6167773 0.6328689 #>  [918,] 1.0889671 1.1266647 1.1340280 #>  [919,] 0.8134718 0.8773818 0.8794205 #>  [920,] 0.6634449 0.6847756 0.7128808 #>  [921,] 0.6411091 0.6529900 0.6562525 #>  [922,] 0.9428644 0.9479833 0.9766401 #>  [923,] 0.6546695 0.7623191 0.7831897 #>  [924,] 0.6176913 0.6225913 0.6360304 #>  [925,] 0.8952237 0.8954024 0.9522548 #>  [926,] 0.5354529 0.5418754 0.5586692 #>  [927,] 0.5889366 0.6452530 0.6895276 #>  [928,] 1.2360886 1.2645463 1.4156511 #>  [929,] 0.7045850 0.7102461 0.7254271 #>  [930,] 0.5557009 0.6323681 0.6379043 #>  [931,] 0.6628541 0.7176973 0.7332718 #>  [932,] 0.7830243 0.7958926 0.8087172 #>  [933,] 0.7823336 0.7935952 0.8060961 #>  [934,] 1.2170469 1.3016234 1.3293415 #>  [935,] 0.5882024 0.6785070 0.6851937 #>  [936,] 1.3042448 1.3067202 1.3290534 #>  [937,] 0.5923980 0.7701006 0.7797618 #>  [938,] 0.6801128 0.6920584 0.7143286 #>  [939,] 0.8133878 0.8762922 0.8792833 #>  [940,] 1.4887429 1.5084606 1.5273402 #>  [941,] 0.8393568 0.9422893 0.9868203 #>  [942,] 0.8230795 0.8939918 0.9083788 #>  [943,] 0.4729722 0.4760790 0.5015056 #>  [944,] 0.7457229 0.7612536 0.8136419 #>  [945,] 0.6536390 0.6611107 0.6819575 #>  [946,] 1.2655733 1.3786466 1.4154325 #>  [947,] 0.8477603 0.9001406 0.9536993 #>  [948,] 0.9881205 1.0120315 1.0276484 #>  [949,] 0.7025475 0.7284700 0.8108278 #>  [950,] 0.6722478 0.6789018 0.6876039 #>  [951,] 0.6565390 0.6916976 0.7045401 #>  [952,] 0.7141773 0.7169669 0.7371411 #>  [953,] 0.6559141 0.6639398 0.6669422 #>  [954,] 0.6337316 0.6354521 0.6418716 #>  [955,] 0.6696159 0.6698246 0.6916917 #>  [956,] 0.6075006 0.6443834 0.6680742 #>  [957,] 0.6603293 0.6623050 0.6940481 #>  [958,] 0.6436329 0.6482295 0.6713180 #>  [959,] 0.6036117 0.6117387 0.6139310 #>  [960,] 0.8303042 0.8761815 0.9232052 #>  [961,] 0.5678705 0.5766561 0.5903886 #>  [962,] 1.1215965 1.1605183 1.2426790 #>  [963,] 0.7745578 0.7843597 0.8036236 #>  [964,] 0.7111981 0.7140241 0.7803132 #>  [965,] 1.3762091 1.4262877 1.4529862 #>  [966,] 0.9081192 0.9342811 0.9352012 #>  [967,] 0.7595652 0.7708732 0.7737753 #>  [968,] 1.4909861 1.5724724 1.5742275 #>  [969,] 0.8061181 0.8275757 0.8626899 #>  [970,] 0.9417043 0.9428644 0.9652038 #>  [971,] 0.7672127 0.7708118 0.8045342 #>  [972,] 0.8512705 0.8660131 0.8675326 #>  [973,] 0.6890310 0.7102459 0.7356957 #>  [974,] 0.8293702 0.8737719 0.8771729 #>  [975,] 0.9366361 0.9594017 1.0164096 #>  [976,] 0.6135617 0.6143098 0.6145980 #>  [977,] 0.6100644 0.6560972 0.6944847 #>  [978,] 0.8658190 0.9287271 0.9562004 #>  [979,] 0.8026439 0.8061461 0.8523100 #>  [980,] 0.7544792 0.7700905 0.7944546 #>  [981,] 0.7798431 0.7893466 0.7930837 #>  [982,] 0.7172235 0.7433508 0.7481295 #>  [983,] 0.8697099 0.8845862 0.8919917 #>  [984,] 0.6171722 0.6253003 0.6681443 #>  [985,] 1.0713757 1.0957445 1.1245306 #>  [986,] 0.8691765 0.8912487 0.9218647 #>  [987,] 1.0751697 1.0866799 1.0975572 #>  [988,] 1.1608268 1.1729700 1.1819343 #>  [989,] 0.7698354 0.7771256 0.8079784 #>  [990,] 0.6881899 0.7428363 0.7918862 #>  [991,] 0.5465308 0.5848662 0.6901507 #>  [992,] 0.8033928 0.8417451 0.8513532 #>  [993,] 1.4140997 1.4184929 1.4390561 #>  [994,] 0.9012890 0.9167841 0.9214295 #>  [995,] 0.8027854 0.8349415 0.8488035 #>  [996,] 0.7708018 0.7850795 0.8009255 #>  [997,] 1.5251204 1.5339383 1.5403993 #>  [998,] 1.3328246 1.3609737 1.3649186 #>  [999,] 0.8731058 0.8916354 0.9132031 #> [1000,] 0.8604964 0.8725707 0.9429566 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  992  435  985  238   66  939  919  181  825   995 #>    [2,]  153  154  787  895  289  432  114  784  379   774 #>    [3,]  945   35  553  884  360    7  956  357   86   562 #>    [4,]  556  616  499  964  211  688   89  761  155   805 #>    [5,]   86  553  637  377    7  624  242  751  283     3 #>    [6,]  830  941  940  569  678  256  323  356  199   851 #>    [7,]  956  624  553   86  714    3  945  360  132   232 #>    [8,]  822  604   76  493  740  229  547  514  222   578 #>    [9,]  619  378  531  527  732  975  585  728  549   589 #>   [10,]  266  575  291  863  469  900  268  376  838   638 #>   [11,]  972  153  154  570  157  245  895  121  746   529 #>   [12,]  600  235  911  331  617  468  367  615  134    23 #>   [13,]  464  284  978  495  117   89  706  211  189   702 #>   [14,]  325  555  879  622  812  799  433  672  123   176 #>   [15,]  690  152  420  907  701  492   35  981  657    86 #>   [16,]  140   64  162  164  143  552  230  366  243   167 #>   [17,]  386  502  643  891  413  551  120  567  876   257 #>   [18,]  341  909  533  598  995  340  487  351  724    66 #>   [19,]  488  909   92  340  322  341   18  855  486   183 #>   [20,]  372  856  507  943   72  315  309   22  136   655 #>   [21,]  280   90  689  680  307  778  189  436  702   359 #>   [22,]   72  118  943  309  507  796  856  824   20   470 #>   [23,]  373  327  843  844  676  134  936   12  699   617 #>   [24,]   29  742  122  826  334  847  756  178  382   955 #>   [25,]  921  169  916  344  866  225  991  500  930   700 #>   [26,]  380   93  196  758  452  911  158   78   77   891 #>   [27,]  285  312   69  292   36  223  362  237  661   180 #>   [28,]  440   62   52  226  908  241  677   71  217   878 #>   [29,]  742  122   24  382  331  816  955  847  826   334 #>   [30,]   68  855  461  974  952  735  183  472  614   345 #>   [31,]  893  589  787  531   52   62  595  975  850   908 #>   [32,]  205  835  375  477   79  315  953  151  136   713 #>   [33,]  463  221  179  653  361  479   95  871  938   529 #>   [34,]  971  539 1000  864  870   95  938  685  136   267 #>   [35,]    3  884  562  360  553  690  945  751   86   511 #>   [36,]   69  285  292   98  237  931  912   27  223   661 #>   [37,]   40  756  214  982  178  632  130  334  780   640 #>   [38,]  904  953  437  799  107  622  433  533  669   128 #>   [39,]  719  223  285  777  292  661  795  246  193   362 #>   [40,]   37  214  705  756  982  809  242  780  178   983 #>   [41,]  723  496  661  385   50   36  755  519   98   312 #>   [42,]  204  107  437  290  602  159  460  540  622   401 #>   [43,]   71  878  391  440   62   28  106  914  764   247 #>   [44,]  830  740  493  434  456  941  295  449  766   294 #>   [45,]  793  883  329  780  239  338  442  195  268   384 #>   [46,]  427  458  844  807  794  740   23  373   60   820 #>   [47,]  129   75  245  162  278  918  234   54  972   570 #>   [48,]  221  776  915  361  379  405  168   55  950   359 #>   [49,]  587  438  534  538  168  796  856  545  792    22 #>   [50,]  231  254  524  255   98  280  464  689  397   897 #>   [51,]  818  920  178  990  113  847  982  813  576    91 #>   [52,]   62  908   28  440  217  241   31  589  709   595 #>   [53,]  966   94  335   82  431  454  116  189  469   579 #>   [54,]  408  849  652  554  278  948  230  856  374   572 #>   [55,]  950  776  959  789  801  171  842  582  663   317 #>   [56,]  529   34   95  642 1000  938  354  539  630   245 #>   [57,]  914  347  245  570  642   47  234   56  864   971 #>   [58,]  949  937  601  220  870  462  829  267  862   630 #>   [59,]  434  119  456  528  708  505  949  684  267   277 #>   [60,]  794  218  699  515  373  516  514  763  294   508 #>   [61,]  875  451  579  963  116  865  915  958  335   860 #>   [62,]   52  440   28  908   31  241  217  589  878   709 #>   [63,]  788  797  836  655  546  372  194  518  477   984 #>   [64,]  366  140  552   16  143  243  126  490   85   164 #>   [65,]  628  902  520  763  518  514  836  880  910   186 #>   [66,]  425  181  825  598  533  472  726  182   18   390 #>   [67,]  578  278  938   95  849  141  836  984  880    76 #>   [68,]  952  345  461  735  974  183  156  370   30   567 #>   [69,]   36  237   27  285  170  912  292  180  342   443 #>   [70,]  676  711  820  806  775   78   93  750  843   465 #>   [71,]  391   43   28  677  878  534  587  440   62   792 #>   [72,]   22  309  943  631   20  824  372  507  856   135 #>   [73,]  699  314  877  277  294  917  665  119  508   327 #>   [74,]  519  292  719  755  362  661  557   39  618   285 #>   [75,]  374  641  572   47  948  999   54  960  422   230 #>   [76,]  880  578  141  980  836  858  902   67  822   984 #>   [77,]  932  939  610  452  196  506  891   26  935   158 #>   [78,]   93  617  158  321  777  465  373   26  989   750 #>   [79,]  390   32  954  151  477  833  181  953  643   835 #>   [80,]  498  679   19  488  486   81  416  402   92   712 #>   [81,]  435  561  322  486  612  710    1  238  995   939 #>   [82,]   94  365  933  694  963  431   53  743  363   900 #>   [83,]  263  798  819  796  300  647  526  834   22   206 #>   [84,]  517  281  525  248  378  687  233  549  355   673 #>   [85,]  366  162   64  164   16  490  918  143  302   980 #>   [86,]  553    5    7  714  956    3   35  624  232   360 #>   [87,]  829  566  483  339  862  523   88  182  630   220 #>   [88,]  802  957  924  871  194  463  339  568  630   829 #>   [89,]  443  170  947  211  482    4  706  556  499   603 #>   [90,]  778  280  689  359   21  436  524  399  950   931 #>   [91,]  813  197  818  586  990  535  983   51  674   468 #>   [92,]  488   19   30  855  542  909  183  857  351   487 #>   [93,]   78  617  158   26  321  634  196  380  911   465 #>   [94,]   82  365   53  694  933  963  431  363   61   900 #>   [95,]  938   67  121  245  653  871  278  971   33   129 #>   [96,]  326  680  861  970  922  791   21  654  853   307 #>   [97,]  610  733  841  901  103  932  304   77  723   452 #>   [98,]  254  223  285   36  661  292  931   69   39   795 #>   [99,]  627  618  768  444  109  550  930  237  823   916 #>  [100,]  370  754  183  935  977  345  729  952   68   156 #>  [101,]  284  117  640  453  231  397  611  334  706   332 #>  [102,]  299  450  738  809  945  571  536  831  790     3 #>  [103,]  901   97  733  841  610  913  898  355  723   304 #>  [104,]  287  848  228  236  804  336  960  573  313   374 #>  [105,]  722  190  876  407  257  107  120  602  437   146 #>  [106,]  497  247  471  986  289  532  633  635  874   489 #>  [107,]  437   42  602  290  460   38  204  105  707   190 #>  [108,]  139  714  522  330  212  771  232  377  860   215 #>  [109,]  823  478  627   99  490  973  143  768  444   393 #>  [110,]  946  259  367   12  854  235  191  753  600   844 #>  [111,]  834  693  782  349  633  532  538  819  746    83 #>  [112,]  353  419  629  811  536  563  639  313  667   175 #>  [113,]  920  847  658  178  332   51  146  982  310   762 #>  [114,]  432  436  778  969  774  359  895  784   90   379 #>  [115,]  857  351  176  487  662  879  669   14  485   855 #>  [116,]  875   61  579  189  335  702  451  727  964   668 #>  [117,]  284  640  544  101  445  704  249  978  837   335 #>  [118,]  593  545   22  306  943  961  438  470   72   796 #>  [119,]  456  294  708  434  277  218  699  917   59    73 #>  [120,]  551  190  658   17  876  386  502  105  643   257 #>  [121,]  938  871  129   95  245  856  278  234  534    49 #>  [122,]   29   24  178  334  847  742  756  816  586   813 #>  [123,]  404  672  325   42  205  929  894  540  799   107 #>  [124,]  163  523  506  181  192  829  786  541  954   872 #>  [125,]  369  734  512  674  983  265   40  720  817   632 #>  [126,]  973  143   64  366  552  288  140  671  243   490 #>  [127,]  667  336  520  745  252  573  852  552  515   313 #>  [128,]  559  833  473  217  182  405  350  381  803    38 #>  [129,]  278  162  245  121  938   95  583   67  849   164 #>  [130,]  632  615  756  262  334  753  122  367  596   265 #>  [131,]  500  137  169  659  858  832  736  618  944   296 #>  [132,]  146  297  826  624  227  409  956    7  441   876 #>  [133,]  770  906  594  186  721  508  264  308  457   737 #>  [134,]  844  373  967  617  344  308  264  955  235   331 #>  [135,]  309  631  943  470   72  581  507  810   22   824 #>  [136,]  194  477  655  984  315   20  871  462  797   802 #>  [137,]  131  500  786  659  736  937  944  858  541   169 #>  [138,]  675  821  614  348  645  602  783  574  415   437 #>  [139,]  108  798  216  714  420  152  771  681  701   537 #>  [140,]  552  143  243   64   16  745  520  490  366   252 #>  [141,]  880  980   76  578  490  788  836  910   67   628 #>  [142,]  759  544  730  146  722  297  624  958  956   105 #>  [143,]  140  243  552  973   64   16  823  126  478   109 #>  [144,]  415  411  485  662  138  614  979  675  204   783 #>  [145,]  693  269  647  188  798  253  526   83  263   208 #>  [146,]  722  132  544  142  759  297  876  737  658   826 #>  [147,]  407  737  906  457  696  789  594  713  388   887 #>  [148,]  282  406  491  283  637  705  869  982  576   242 #>  [149,]  503  358  370  381  260  355  951  281  524   324 #>  [150,]  346  762  453  332  977  754  413  371  742   621 #>  [151,]  721  835  713  457  810  594  257   79  205    32 #>  [152,]  681  657  300  216  907  690   15  798  981   389 #>  [153,]  154   11  895    2  379  529  972   33  850   221 #>  [154,]  153   11  895  157    2  391  972  289  570   529 #>  [155,]  616  603  588    4  392  596  185  556  428   396 #>  [156,]  726  345  567  472  935  183  413  598   68   260 #>  [157,]  746   11  972  154  570  224  391  633  934   153 #>  [158,]  321  196  465   93   78  891  251  634   26   380 #>  [159,]  401  792  204  677   42  538  460  290  923   241 #>  [160,]  859  967  994  716  344  867  866  700  428   398 #>  [161,]  692  405  796  460  538  819  168  602  545   105 #>  [162,]   16  129  278  164   85  918  583  849  230    64 #>  [163,]  124  523  506  825  181  992  260   87  192   829 #>  [164,]   16  478  823  162  143  583  490  109  140   141 #>  [165,]  845  986  532  494  247  187  291  782  838   743 #>  [166,]  840  312  392   27  715  170  428  814   69    89 #>  [167,]  606  387  504  521  455  745  961  288  451   243 #>  [168,]  538  796  792   49  405  534  587  241  315    48 #>  [169,]  500  131   25  820  858  244  944  137  921   916 #>  [170,]  443   69  482   89  342  706  912   36  947   556 #>  [171,]  959  950  605   55  317  801  249  702  875   958 #>  [172,]  271  582  568  768  560  399  924  698  926   463 #>  [173,]  960  374  228  903  287  104  997  175  613   804 #>  [174,]  637  200  576  406  305  873  144  148  415   751 #>  [175,]  613  903  804  229  353  515  173  997  667   429 #>  [176,]  857  879  351  433  669  487  585  783  115   799 #>  [177,]  371  193  621  932  453  231  385  254  661   452 #>  [178,]  756  982  122   51  847  113  920  214  334    24 #>  [179,]  653   33  463  479  924  361  221   95  279   938 #>  [180,]  795  237  285   69  706  892  223   27  393   342 #>  [181,]  825  182   66  425  124  163   79  523  260   726 #>  [182,]  181  425  381  128  260  833  825  350  726   324 #>  [183,]  935  567  345  952  754  156  100  413   68   977 #>  [184,]  368  940  419  752   15  356  448  690  475   511 #>  [185,]  396  596  616  761  450  155  293  738  965   603 #>  [186,]  508  133  518  763  546  388  594  890  628   721 #>  [187,]  401  635  986  532  874  471  159  923  204   460 #>  [188,]  572  269  999  263  641  145  234  693   83   274 #>  [189,]  702  482  116  464  861  680  211  280  966   791 #>  [190,]  707  821  120  602  437  105  460  658  107   551 #>  [191,]  367  275  412  636  854  632  600  816  110   262 #>  [192,]  560  557  124  506  541  172  786  271  698   296 #>  [193,]  371  621  452  453  899  611  380   39  223   150 #>  [194,]  802  136  462  797  477  871  829   88  655    63 #>  [195,]  780  705  704  883  282  239  837  769  240   445 #>  [196,]  158  251  891  939   26   77  380  322   93   634 #>  [197,]  813   91  818  983   51  586  636  674  178   990 #>  [198,]  548  272  316  352  987  739  325  896  672   328 #>  [199,]  851  896  684  608  987  417  414  274  941   548 #>  [200,]  576  873  675  415  174  406  637  535  990   409 #>  [201,]  936  416   46  886   23  843  807  295  458   946 #>  [202,]  530  137  250  131  500  296  858  311  169   659 #>  [203,]  747  720  265  327  357  691  571  839  319   536 #>  [204,]   42  401  159  460  107  437  602  540  622   799 #>  [205,]   32  835  375  953  810  151  290  315  656   123 #>  [206,]  773  976  300  438  819  118  681  545  263   306 #>  [207,]   96  179  302  970  509  467  550  279  326   479 #>  [208,]  677  894  656  226  526  587  269  792  290   375 #>  [209,]  806  275  888  412  191  775  561  911  258    70 #>  [210,]  725  418  717  591  649  476  668  213  455   474 #>  [211,]  964    4  791  189   89  482  499  702  556   688 #>  [212,]  330  522  785  730  283  869  645  692  142   297 #>  [213,]  717  476  320  418  556  455  725  892  927   964 #>  [214,]   40  242  809  756   37  982  178  297  624   640 #>  [215,]  701  232  798  420  540  647  929  714  108    86 #>  [216,]  681  564  976  426  860  865  300  714  819   389 #>  [217,]  241  908  803  595  128   52  709  850   28   833 #>  [218,]  294  708   60  699  508  902  119  456  514   794 #>  [219,]  346  611  332  453  977  334  816  150  371   646 #>  [220,]   58  862  601  949  919   87  937  267  988   354 #>  [221,]  361   48  379  359  463   33  583  871  776   915 #>  [222,]    8  613  604  577  175  903  740  225  229   822 #>  [223,]  285   98   39  661  292  795  254   27   36   193 #>  [224,]  746  633  934  157  349  111  648  363  834   782 #>  [225,]  577  697   25  429  671  921  794  916  514   629 #>  [226,]  375   28  677  208  315  792  587  534  217   241 #>  [227,]  580  868  990  535  409  441  132  826  360   945 #>  [228,]  287  104  848  960  374  569  236  256  652   804 #>  [229,]  794  804  515  902  514   65  218   60  628     8 #>  [230,]  824  422  336   16  652  773  374   54  881   745 #>  [231,]  255   50  254  397  101  284  177  464  453   338 #>  [232,]  714  929  215  574  540    7  108  798   86   212 #>  [233,]  566  951  324  248   87  531  549  687  517   523 #>  [234,]  570  587  534  121  972   49  856  188  391   864 #>  [235,]  615  753  331  747  955  600   12  134  265   967 #>  [236,]  256  848  907  104  287  772  573  356  228   678 #>  [237,]  292   69   36  795  285  912  180   27  931   768 #>  [238,]  612    1  995  919  992  905  390  528  465   985 #>  [239,]  883  329  780  588  195  704  117   37  640   978 #>  [240,]  837  704  727  579  445  978  335  431  668   730 #>  [241,]  217  923  792  635   52  908  168   28  538   595 #>  [242,]  297  624  214  785  982  132  809  553  956   283 #>  [243,]  552  140  745  252  143  455  606  973  320   127 #>  [244,]  169  820  500   25  131  766  858  137  427   815 #>  [245,]  129  938  121   95  529  278  642  234  570    11 #>  [246,]  777  750  344  866  719   39  331  991  731   617 #>  [247,]  253  349  106  633  187  934  532   43   71   165 #>  [248,]  281  951  324  517  233  728  355  358  549   260 #>  [249,]  605  544  759  722  146  171  801  310  640   959 #>  [250,]  202  832  131  550  296  748  137  530  500   169 #>  [251,]  322  196  158  634  340  710  486  321   93   911 #>  [252,]  320  243  476  745  261  455  127  649  552   667 #>  [253,]  247  349  145  693  647  633  187  421  401   111 #>  [254,]   98  397  223  899   50  285  621  582  317   706 #>  [255,]  231  338  683  757   50  385  177  464  254   827 #>  [256,]  236  848  356  772  287  907  104  228  960   274 #>  [257,]  713  643  876  457  407  594  721  386  835   105 #>  [258,]  888  682  561  939  610  729  998   77   97    19 #>  [259,]  110  946  458  807  844  629  753  967   46   319 #>  [260,]  825  324  381  728  951  726  182  523  156   472 #>  [261,]  476  320  474  252  927  852  649  388  660   745 #>  [262,]  130  334  632  646  588  219  101  756  623   611 #>  [263,]   83  300  798  999  206  681  819  526   22   824 #>  [264,]  308  955  770  133  580  882  826  571  388   747 #>  [265,]  753  615  747  674  293  235  571  203  130   720 #>  [266,]   10  575  863  291  268  638  376  838  469   808 #>  [267,]  862  462  949  136  620  477   58  803  194   870 #>  [268,]  575  808  484  863  469  298  827  266  838   491 #>  [269,]  145  188  208  417  526  274  677  693  894   647 #>  [270,]  800  917  631  810  749  678  459  581  423   135 #>  [271,]  172  582  842  926  663  899  350  872  741   473 #>  [272,]  352  325  316   14  208  894  548  555  677   540 #>  [273,]  559  774  405  128  503  969  381  549  741   923 #>  [274,]  526  656  417  631  896  199  894   72  269   208 #>  [275,]  623  758  600  816  191  412  611  331  367   911 #>  [276,]  494  614  144  491  783  348  735  662  461   138 #>  [277,]  314  119  528   73  917  321  151  390  721   699 #>  [278,]  129   67  849  162  938   95  245  121   54   578 #>  [279,]  479  529  179  642  394  653   33   56  311   630 #>  [280,]   90  689   21  702  171  189  524  436  778   950 #>  [281,]  248  355  728  673  517  324   84  951  149   260 #>  [282,]  869  148  283  491  846  481  446  195  785   780 #>  [283,]  869  785  212  330  730  481  645  282  297   242 #>  [284,]  464  706  117  101   13  702  171  827  231   397 #>  [285,]  292  223   27   36   98   69   39  661  237   795 #>  [286,]  970  947   50   21  467  443  897  680  170    41 #>  [287,]  228  848  104  960  374  236  569  256  336   652 #>  [288,]  606  167  973  387  143  243  584  654  521   688 #>  [289,]  784  489  774  895  893  471    2  497  106    31 #>  [290,]  507  107  796   42  315  792  656  894  205   375 #>  [291,]  838  900  575  469   10  986  694  845  266   471 #>  [292,]  285  237   36  223   27   39  795   74   69   661 #>  [293,]  753  596  716  615  265  369  235  450  130   747 #>  [294,]  218  119  456  699  708   73  917  508  270   434 #>  [295,]   44  650  664  201  383  449  740  830   46   434 #>  [296,]  192  557  560  339  698  659  618  403  924   736 #>  [297,]  624  242  730  785  146  956  142  132  759   544 #>  [298,]  268  808  735  442  863  952  484  575   68    30 #>  [299,]  102  571  809  811  450  396  261  945  852   418 #>  [300,]  681  263  824  976  206   83  881  216  999   152 #>  [301,]  625  537  648  771  139  599  337  579  925   108 #>  [302,]   85  642  479  918  311  279  179  653  164   162 #>  [303,]  489  694  289   94  900  784   82  365  114   853 #>  [304,]  932  736  719  519   74  557  452  610   97   750 #>  [305,]  174  200  415  979  144  662  411  651  485   410 #>  [306,]  593  118  583  545  438  773  961   22  206   167 #>  [307,]   21  467   90  778  436  114  853  359  432   280 #>  [308,]  264  955  770  388  133  967  571  882  826   134 #>  [309,]  943   72  135  631  372   22  518  749  507    20 #>  [310,]  484  821  658  735  249  190  120  113  952   605 #>  [311,]  653   67   95  938  870  578  642  822  530    76 #>  [312,]   27  362  392  285  731  661  519  496  223   840 #>  [313,]  563  804  573  336  515  127  667  767  104   516 #>  [314,]  277   73  665  917  151  592  119  721  810   400 #>  [315,]   20  136  507  375  833  290   32  797  835   205 #>  [316,]  485  411  555  272  662  325   14  979  352   144 #>  [317,]  842  801  899  696  887  605  663  959  926   171 #>  [318,]  364  619  609  985    9  351  527  425  855   483 #>  [319,]  967  747  852  516  691  811  629  308   60   515 #>  [320,]  476  252  892  261  213  927  439  455  717   418 #>  [321,]  158  465  634  954  528   78  890  891  277    93 #>  [322,]  251  340  486  196  561  939  909  710  341   995 #>  [323,]  104    6  804  563  767  228  287  678  313   997 #>  [324,]  951  260  381  248  728  233  566  182  523   549 #>  [325,]   14  123  272  672  622  894   42  799  812   555 #>  [326,]  680  791  922   96  861  947  970  482  654   443 #>  [327,]  468  886   73   23  699  877  747  203  691   357 #>  [328,]  744  410  979  402  712  672  198  485  679   305 #>  [329,]  239  883  495   13  978  703   45  780  588   195 #>  [330,]  522  212  626  481  692  869  446  283  108   846 #>  [331,]  600   29  235  758  615  742  617  623  246    24 #>  [332,]  847  346  150  334  219  453  977  742  113   762 #>  [333,]  927  887  696  544  737  474  826  146  476   722 #>  [334,]  847  122  332  756  816  742  178  219  632   346 #>  [335,]  966  875  579  116   53  171  727  958   61   827 #>  [336,]  573  881  127  313  824  104  230  591  745   848 #>  [337,]  430  625  301  599  648  424  537  139  389   492 #>  [338,]  683  757  255  827  231  454  464   50  808   284 #>  [339,]  924  630   88  957  698   87  354  829  296   653 #>  [340,]  909  322  341  598   18  251  533  567  939   196 #>  [341,]  909   18  340  724  533  598  995  487  592   402 #>  [342,]  393  439  867  428  556   69  840  170  237   180 #>  [343,]  731  362  496  750  814  519  775  312  715    74 #>  [344,]  866  991  700  246  921  916  777  930  160   867 #>  [345,]  156   68  567  726  952  183  935  370  413   551 #>  [346,]  150  453  332  611  219  762  371  977  742   847 #>  [347,]  685  864  608  971   34  914 1000  539   57   234 #>  [348,]  783  614  799  138  437  707  602  461  622   460 #>  [349,]  633  934  253  111  782  247  693  224  599   532 #>  [350,]  473  741  833  643  568  271  381  872  957   182 #>  [351,]  857  487  176  855  115   18  669  879  598   533 #>  [352,]  272   71  208  269  417  325  440  145  316   548 #>  [353,]  429  671  667  447  175  903  552   64  639   126 #>  [354,]  630  394  339   87   58  220  928  870   88    56 #>  [355,]  281  248  673  149  998  841  728  913  260   324 #>  [356,]  772  459  511  597  256  678  543  236  800   767 #>  [357,]  691  884  882    3  945   35  580  581  571   747 #>  [358,]  969  778  524  149  951  381  436  687  503   399 #>  [359,]  221  361   90  463  778  950   48  568  689    55 #>  [360,]  409  562    3  884   35    7  423  868  574   581 #>  [361,]  221   48  359  379  463  583   33  915  776   950 #>  [362,]  519  312  661   27  719   74  496   39  292   285 #>  [363,]  963  889  895  933  915  834   82  648   94   111 #>  [364,]  318  351  855  857  115  435  619  879  985   609 #>  [365,]   82  743   94  431  828  694  933  537  963   648 #>  [366,]   64   85  140   16  126  552  143  490  164   162 #>  [367,]  615  632  191  130   12  235  753  636  600   275 #>  [368,]  511  543  751  597  562  356  410  873  772    35 #>  [369,]  293  450  265  596  753  125  130  615  185   738 #>  [370,]  100  345  808   68  149  952  754  503  935   183 #>  [371,]  193  453  611  621  346  150  452  177  762   380 #>  [372,]   20  943  309   72  518  856   63  655   22   749 #>  [373,]  844  134  617  989   60   23   78  699  967   921 #>  [374,]  960  287  228  848   75  572  104  569  230   641 #>  [375,]  205   32  953  226  315  290  812  835  136   833 #>  [376,]  525  969  687   10  436  863  784  517  266   358 #>  [377,]  108    5  925  701  869  637  215  283   86   212 #>  [378,]    9  531  619  549  728  233   84  248  687   281 #>  [379,]  221   48  361  850  895  787  168  871  595   153 #>  [380,]  758   26  452  891  742  193  150  196  346   371 #>  [381,]  741  260  951  324  182  350  559  523  726   128 #>  [382,]  634  502  441  742   29  413  762  876  150    17 #>  [383,]  414  505   44  608  851   59  685  941  449   434 #>  [384,]  282  846  793  446  195  942  743  481  780   869 #>  [385,]  177  723   41  255  231   50  646  496  371   661 #>  [386,]   17  643  876  502  257  120  891  663  551   737 #>  [387,]  167  504  521  606  584  288  451  773  455   644 #>  [388,]  763  186  520  147  308  261  508  133  906   696 #>  [389,]  657  426  681  216  976  564  591  422  206   152 #>  [390,]   79  592  995  277  528  151  724  953   66   181 #>  [391,]  534   71  587  677  538  792  570   49   28   878 #>  [392,]  312   27  731  623  840  166  859  646  285   155 #>  [393,]  439  342  892  867  237  556  180  973  700   930 #>  [394,]  354  630  928  339  279   56  781    2  529   233 #>  [395,]  654  670  584  288  521  644  504  387  688   167 #>  [396,]  185  616  299  596  761  450  718  738  418   155 #>  [397,]  254  899  621  317  801  453  762  605  193    98 #>  [398,]  671  885  994  429  439  428  697  160  393   973 #>  [399,]  698  582  524  568  560  172  897  271  689   778 #>  [400,]  996  684  672  592  314  205  917  665  123   277 #>  [401,]  159  204  187   42  460  792  602  540  635   437 #>  [402,]  712  341  679  724  909  486  744  314  410   592 #>  [403,]  897  698  399  560  913  557  524  296  192   358 #>  [404,]  123  672  415  979  574  724  868  423  929   799 #>  [405,]  168  161  559  128   48  923  776  915  707   241 #>  [406,]  576  200  982  148  491   51  442  645  818   174 #>  [407,]  789  147  257  722  737  663  713  470  105   776 #>  [408,]   54  849  554  652  547  760  278  749  372   971 #>  [409,]  360  868  574  227  535  132  990  423  675   873 #>  [410,]  744  651  328  402  679  873  543  979  712   368 #>  [411,]  485  144  316  662  979  415  475  305  421   540 #>  [412,]  636  816  275  911  586  813  219  367  632   334 #>  [413,]  567  502   17  935  150  183  382  762  754   345 #>  [414,]  608  199  941  987  851  896  760  685  417   948 #>  [415,]  675  979  138  404  574  200  144  409  576   614 #>  [416,]  843  936  486   23  710  712  612  886  402   468 #>  [417,]  896  274  269  199  208  987  548  608  526   894 #>  [418,]  725  210  717  476  213  668  320  474  591   649 #>  [419,]  563  536  313  323   15  981  907  236  690   767 #>  [420,]  798  701  215  647  690  139  962  152   15   693 #>  [421,]  475  253  316  411  145  272  352  647  485   693 #>  [422,]  230  387  389  773  206  606  374  504  167   657 #>  [423,]  665  868  800  877  459  581  360  562  884   270 #>  [424,]  240  727  837  301  670  704  579  666  978   625 #>  [425,]   66  182  181  825  620  709  732  726  533   260 #>  [426,]  389  657  216  591  564  681  976  210  881   981 #>  [427,]   46  244  740  222  577  820  807  766  458   794 #>  [428,]  840  814  342  867  885  859  393  398  439   160 #>  [429,]  671  667  398  629  852  225  353  252  697   127 #>  [430,]  337  625  648  301  599  537  224  480  644   828 #>  [431,]  942  846   82  743  365  481  626  579   53   446 #>  [432,]  114  895  379  359  221  361  774  778  436     2 #>  [433,]  622  908  879  176  799   38  904  783  953   348 #>  [434,]  456   59  119  708  766  294  740  493  528   218 #>  [435,]    1  992  985  238   81  939   66   18  995   322 #>  [436,]  778   90  969  524  358  280  454  114   21   273 #>  [437,]  602  107  707  460   42  190   38  204  904   348 #>  [438,]   49  306  545  773  593  118  889  206  796   819 #>  [439,]  393  892  342  556  973  320  213  867  688   180 #>  [440,]   28   62   52  908  555   71  622  433  764   878 #>  [441,]  876  868  382  227  826  457  695  594  502   721 #>  [442,]  491  982  406  113  640  785  310  484  920   282 #>  [443,]  170  482  706   89   69  912  947  702  931    36 #>  [444,]  930   99  910  627  991  916  618  700  768   546 #>  [445,]  704  837  668  790  117  240  725  730  809   418 #>  [446,]  481  626  846  942  330  743  869  431  522   283 #>  [447,]  126  353  398  671  639  429  973  885  288   805 #>  [448,]  886  516  767  691  678  877  327  203  323   458 #>  [449,]  996  400  712  543  744  851  877  830  456   119 #>  [450,]  738  102  299  596  293  369  185  396  265   809 #>  [451,]  865   61  875  504  521  167  958  579  387   860 #>  [452,]  193  932  380  371   26  719   77   39  758   891 #>  [453,]  346  150  762  371  611  621  332  193  977   754 #>  [454,]  827  469  683  436  503  280  966   53  335   484 #>  [455,]  745  961  660  649  717  606  167  243  476   213 #>  [456,]  119  434  294  708  218   59  699  493  830   740 #>  [457,]  721  594  713  810  257  835  151  147  876   906 #>  [458,]  807  886  319  844  516  327   46   60   23   203 #>  [459,]  800  356  423  772  511  597  270  543  562   581 #>  [460,]  602  707  437  107  204   42  190  161  401   159 #>  [461,]  735   68  821  952  974  614  348  345  190   783 #>  [462,]  870  194  829  984  949  937  477  267  136    58 #>  [463,]  924  221  957   33  359  568  361  698   88   179 #>  [464,]  284   13  702  189  706  280  482  443  117    50 #>  [465,]  158  321  528   78  196  944   93  786  710   954 #>  [466,]  395  861  670  424  727  430  644  654  853   584 #>  [467,]  307  897  779   21  403  970  286  524   90   689 #>  [468,]  327   12   91  586  535  990  227  674  955    23 #>  [469,]  454  900  575  291  694  838  827  268  863   484 #>  [470,]  507  135  796   22  407  118  545  309  147   943 #>  [471,]  986  635  532  923  187  497  874  589  774   900 #>  [472,]  156  726  598  345  825   66  567  260  183   935 #>  [473,]  350  741  833  643  128  797  271  776  568   954 #>  [474,]  649  476  261  927  660  333  956  591  210   418 #>  [475,]  752  411  701  421  420  215  368  597  751   511 #>  [476,]  320  261  927  213  474  252  418  649  717   455 #>  [477,]  655  984  136   32  194  462   63  797   79   954 #>  [478,]  823  109  164  143  583  490  788   99  768   140 #>  [479,]  279  529   33  179  653  642   95  938  245   311 #>  [480,]  644  504  521  773  889  206  387  438  972   746 #>  [481,]  446  626  846  942  330  869  283  522  431   212 #>  [482,]  443  702  791  170  706  189  912  556   89   211 #>  [483,]  709  862   87  620  566  803  531  425  595   220 #>  [484,]  808  310  735  827  503  370  952  268  249   821 #>  [485,]  662  411  979  316  144  325   14  415  555   799 #>  [486,]  322  710  251  416  402  712  843  911  612   909 #>  [487,]  669  351  533  341   18  598  176  909  724   857 #>  [488,]   19   92  855  909  351  487   18   30  341   857 #>  [489,]  289  694  784  900  471  774  303  106  895   986 #>  [490,]  980  141  823  109  880  143  478  140  627   164 #>  [491,]  442  282  406  283  869  645  785  148  481   446 #>  [492,]   15  501  152  337  657  962  389  690  419   420 #>  [493,]  941  740  830  547  760  456  434    8  554   708 #>  [494,]  276  838  165  614  348  491  291  986  874   144 #>  [495,]   13  329  464  513  284   89  239  231  338   255 #>  [496,]  362  723  519  661  312   41   74  304   27   719 #>  [497,]  106  874  471  893  986  635   31  289  589   187 #>  [498,]  679   91  197   80  402  651  468  486  813   818 #>  [499,]    4  688  805  791  922  211   89  556  964   947 #>  [500,]  169  131  858  137  944   25  820  921  244   659 #>  [501,]  492  337  430  389  657  641  962  599   15   152 #>  [502,]   17  413  695  386  567  382  120  876  441   643 #>  [503,]  149  370  484  808  358  273  381  454  551   863 #>  [504,]  521  387  167  644  606  773  451  206  306   584 #>  [505,]  685   59  608  760  988  949  267   34  862   864 #>  [506,]  124  872  523  163  560  192  932   77  825   260 #>  [507,]  470   20   22  290  796   72  943  309  835   315 #>  [508,]  186  518  917  810  763  594  721  133  218   457 #>  [509,]  479  853  279  918  529    2  153  207  179    33 #>  [510,]  641  572  188  999  962  145  948  569  269   960 #>  [511,]  562  772  459  356  597  690  884   35  907   360 #>  [512,]  632   37  262  130  588   40  590  125  983   756 #>  [513,]   13  495  211   89  978  922  947  464  189   680 #>  [514,]  902  628  921   65  763  794  218  880  858   910 #>  [515,]  804  516  229  313  127   60  794  667  767   218 #>  [516,]  691  515  767   60  319  313  678  357  563   804 #>  [517,]  248   84  687  281  358  525  969  913  233   951 #>  [518,]  508  186  943  309  520  372  628   65  836   749 #>  [519,]  362   74  661  719  292  496   39  285  312   755 #>  [520,]   65  518  628  763  961  127  388  660  943   745 #>  [521,]  504  387  167  644  584  606  451  288  773   480 #>  [522,]  330  771  692  860  212  108  626  730  481   161 #>  [523,]  124  163  506  260  324  381  350  825  872   182 #>  [524,]  399  778  358   90  897  689  436   50  280   254 #>  [525,]  687  376  969  549  517   84  784  774  378   248 #>  [526,]  894  656  929  274  208  540  631   83   72   290 #>  [527,]  585  619    9  732  975  589  974  176  638   378 #>  [528,]  277  321  465  989  390  119  612   59   79   890 #>  [529,]  479  245   33  938   95  153   56  642  279   121 #>  [530,]  202  311   58  937  870  949  354  630  220   137 #>  [531,]    9   31  566  378  549  787  893  589  233   975 #>  [532,]  986  471  187  635  782  923  111  401  933   159 #>  [533,]  598  669  904   18  724  341  487  909   66   340 #>  [534,]  587  391   49  538  168  792  677  234  226   241 #>  [535,]  990  227  409  873  868   91  360  200   51   818 #>  [536,]  691  357  563  102  811  419  981   35  299   313 #>  [537,]  771  648  301  782  625  365  522  108  139   828 #>  [538,]  792  168   49  587  534  923  796  159  161   677 #>  [539,] 1000   34  864  971  803  226  862  595  267   607 #>  [540,]  929  894   42  204  526  232  123  215  401   290 #>  [541,]  786  829  659  954  462  937  194  192  124   924 #>  [542,]  673   30  100  998  370  472  855  728   68   281 #>  [543,]  597  996  459  356  423  800  511  744  672   877 #>  [544,]  759  142  249  146  730  333  958  722  605   297 #>  [545,]  118  306  593  438  796  819  470   22  865   206 #>  [546,]  910  788   63  186  926  890  518  628  133   663 #>  [547,]  760  554  408  493  822  578  849  984  941   652 #>  [548,]  896  987  851  684  417  199  198  272  325   672 #>  [549,]  687  951  531  324  566  969  525  732  248   728 #>  [550,]  627  832   99  618  768  109  748  444  755   490 #>  [551,]  120   17  386  801  726  741  345  899  643   762 #>  [552,]  140  243   64  143  745   16  252  127  667   606 #>  [553,]   86    3    5    7  956  945  624   35  360   242 #>  [554,]  547  408  760  849  652   54  578  984   67   749 #>  [555,]   14  622  440  433  316  325  783  176  879   799 #>  [556,]  439  688    4  213  342  393  964  180  482   892 #>  [557,]  192  560   74  506  296  304  618  932  736   124 #>  [558,]  509   47  642  918   11  529   57  245  302   479 #>  [559,]  128  273  405  381  707  741  190  551  473   120 #>  [560,]  192  557  698  399  172  271  506  582  523   124 #>  [561,]  939  322  196   26  251  911   77  806  158   258 #>  [562,]  511  360  884   35  459  423  581  772    3   409 #>  [563,]  313  767  573  336  104  804  691  516  236   907 #>  [564,]  216  976  681  865  426  881  860  649  591   660 #>  [565,]  488  115  328   92   80  857  305   19  351   487 #>  [566,]  951  233  324  531  595  787  850  549  182    87 #>  [567,]  413  156  345  726  935  502  183   17  598   551 #>  [568,]  957  741  399  698  172  350  582  473  463   271 #>  [569,]  948  228  960  287  848  374  256    6  274   104 #>  [570,]  234  972  391   11  534  587  245  121  157    49 #>  [571,]  747  580  955  299  264  308  882  945  809   261 #>  [572,]  999  641  188  374  263   75  300  948  274    54 #>  [573,]  336  881  313  824  127  907  981  563  236   104 #>  [574,]  675  409  232  138  360  415  645  132  404   929 #>  [575,]  863  268   10  266  469  291  838  808  484   900 #>  [576,]  200  406  675  637  645  873  174   51  415   409 #>  [577,]  225  697  429  222  671   25  629  175  794   398 #>  [578,]   67   76  880  141  836  822  980  849  984   554 #>  [579,]   61  875  116  860  451  240  771  865  335   958 #>  [580,]  227  826  955  571  882  264  945  770  132   747 #>  [581,]  884  423  135  800  882  459  562  270  907   360 #>  [582,]  271  172  899  741  399  842  872  568   55   801 #>  [583,]  306  593  361  164  438  118   48  478  545   221 #>  [584,]  521  387  606  670  288  504  167  389  426   210 #>  [585,]  527  732  974  176  433  589  619    9  348   783 #>  [586,]  674  813  983  636   91  122  632  178  197   816 #>  [587,]  534   49  677  391  538  792  168  796  208   856 #>  [588,]  155  262  603  130  239  596   37  616  185   756 #>  [589,]   31  908   52  635  732  217  874   62  241   893 #>  [590,]  512  191  262  632  646  588  367  130  636   275 #>  [591,]  649  881  210  745  660  426  606  564  976   474 #>  [592,]  390  724  995  400  151  812  314  953  341    79 #>  [593,]  306  118  545  583  961  438   22  773  943   372 #>  [594,]  721  457  133  906  713  770  257  737  186   876 #>  [595,]  850  787  803  217  566  241  802   31  379   709 #>  [596,]  293  185  396  450  716  753  155  616  130   369 #>  [597,]  543  459  356  772  511  562  929  896  800   526 #>  [598,]  533   18  340  909  472  669  156  341   66   567 #>  [599,]  962  139  625  537  782  301  349  693  648   108 #>  [600,]  331  758  623   12  617  235  731  246  275    29 #>  [601,]  949  937   58  919  220  829  786  462  541   267 #>  [602,]  460  437  707  107  190   42  204  105  138   348 #>  [603,]  155  616  588  761    4   89  392  185  965   428 #>  [604,]    8  822  903  554  547  613  222  578  493   408 #>  [605,]  249  801  171  959  317  722  544   55  759   397 #>  [606,]  167  387  745  455  243  504  591  288  717   649 #>  [607,]  988  539  483 1000  862  709  620   34  505   220 #>  [608,]  685  414  199  347  851  760  417  505  864   684 #>  [609,]  673  619  318  542  728  998  281  378  364   527 #>  [610,]   97  932   77  841  304  939  733  901  452   506 #>  [611,]  346  371  219  453  623  758  742  193  150   380 #>  [612,]  710  238  528  843  995  465  765  322  251   277 #>  [613,]  903  175  997  222  604  173  229  804    8   353 #>  [614,]  783  138  348  461  799  669  821  662  675   735 #>  [615,]  753  235  265  130  331  747  293  955  122   367 #>  [616,]  155    4  603  396  556  185  885  761  596   716 #>  [617,]   93   78  134  373  634  331  600  246  777   158 #>  [618,]   99  768  627  444  550  237  755  292   74   172 #>  [619,]    9  527  728  378  585  732  673  531  425   318 #>  [620,]  862  267  425  709  919  812  483  181   66   390 #>  [621,]  193  899  371  872  397  762  453  150  891   551 #>  [622,]  433  799   38   42  908   14  953  437  204   783 #>  [623,]  758  611  600  731  275  331  392  742  646   312 #>  [624,]  297  956    7  242  730  142  132  553  759   146 #>  [625,]  301  537  648  599  828  430  337  782  771   139 #>  [626,]  481  446  330  942  846  692  522  431  212   869 #>  [627,]   99  550  618  444  109  768  930  237  916   823 #>  [628,]  902   65  763  514  910  518  836  880  520   186 #>  [629,]  319  429  697  994  967  852  225  811  671   160 #>  [630,]  354  339   88  870  653   87   58  924  802   871 #>  [631,]  309   72  749  135  943  656  270   22  824   507 #>  [632,]  130  334  636  262  586  756  674  122  367   983 #>  [633,]  934  349  224  111  247  782  746  532  106   157 #>  [634,]  382  321  891  158  251  441  502  770  133   594 #>  [635,]  923  471  187  241  986  532  159  589  792   538 #>  [636,]  412  586  816  632  813  674  367  983  122   197 #>  [637,]    5  174  576  200  751  377  873  148   86   553 #>  [638,]  838  974  527  291  575  863  266  585  732   874 #>  [639,]  718  885  398  396  994  671  429  447  811   252 #>  [640,]  117  249  544  113  101  759  730  785  704   297 #>  [641,]  999  572   75  188  374  422  263  300  206   960 #>  [642,]  245  479  529  938   95  311   56  279  278   302 #>  [643,]  386   17  257  473  713  663  350  954  502   120 #>  [644,]  480  521  504  451  889  387  773  206  167    61 #>  [645,]  675  785  821  138  212  574  920  658  576   283 #>  [646,]  623  262  219  611  392  312  275  101  371   231 #>  [647,]  693  798  145   83  420  215  540  263  701   526 #>  [648,]  537  625  301  771  834  365  782  363  963   828 #>  [649,]  660  745  591  961  881  455  474  476  210   261 #>  [650,]  765  295  383   44  416  612  905  843  449    81 #>  [651,]  873  679  410  535   91  200  990  734  751   498 #>  [652,]  749  408  849   54  554  372  824  943   72   309 #>  [653,]  179   95   33  311  924  938  630  463  870    88 #>  [654,]  288  395  521  326  504  791  167  387  688   973 #>  [655,]  984  477  836  136   63  372  194  462   20   788 #>  [656,]  526  894  631  208   72  290  507   20  274   205 #>  [657,]  389  426  681  152  981  216  591  300  976   881 #>  [658,]  920  120  821  876  113  146  190  502  310   722 #>  [659,]  541  786  444  137  829  910  858  192  141   937 #>  [660,]  649  961  745  455  881  591  474  476  520   606 #>  [661,]  223  285  519   98   39  292  362   74   36    27 #>  [662,]  485  979  144  614  411  783  316  799   14   669 #>  [663,]  926  842  789  906  737  407  317  271  643   386 #>  [664,]   44  295  997  941  414  493  830    6  383   940 #>  [665,]  423  868  877  917  314  800  810   73  270   151 #>  [666,]  769  925  424  705  195  790  831  301  704   837 #>  [667,]  127  852  252  429  313  552  811  243  336   745 #>  [668,]  725  964  418  717  958  210  445  213  875   451 #>  [669,]  487  799  533  724  904  176  598  783   38   351 #>  [670,]  584  964  395  668  717  688  116  211  521   725 #>  [671,]  429  398  252  667  552  126  243  973  225   994 #>  [672,]  123  404  325  400  979  744  996  592   14   724 #>  [673,]  728  281  355  619  998  542  472  248  609   260 #>  [674,]  586  983  813  734  265   91  632  636  122   615 #>  [675,]  645  138  574  415  576  821  200  409  920   658 #>  [676,]   70  806  843   78   93  820   23  373  617   710 #>  [677,]  792  208  587  159  226  534  538   28  290   894 #>  [678,]  767  270  800  356  236  459  516  581  877   104 #>  [679,]  498  402  651   91  410  535  468  990  712   818 #>  [680,]  861  326  791  189   21   96  922  482  702   947 #>  [681,]  216  976  300  564  426  152  389  881  657   206 #>  [682,]  729  258  100  977  754  888  935  183  998   219 #>  [683,]  757  338  255  454  808  827  863  231  503   484 #>  [684,]  851  400  199  205  996  896  749   32  656   548 #>  [685,]  347  608  505  864  971   34  760  547  414   554 #>  [686,]  448  368  410  651  886  936  449  679  744   328 #>  [687,]  549  969  525  774  358  951  517  248  784   566 #>  [688,]  556  791  439  499    4  973  717  964  213   288 #>  [689,]  931  280   90   21  912  399  524  359  950   702 #>  [690,]   15  511   35  907  562  772  420  152   86   701 #>  [691,]  357  516  767  882  319  884  747  313  563   536 #>  [692,]  522  161  330  212  626  460  105  860  707   933 #>  [693,]  647  145  798  111   83  263  269  188  834   962 #>  [694,]  900   82   94  365  933  489  469  471  291   774 #>  [695,]  502  724  441  151  904  533  658  567  382    17 #>  [696,]  887  333  842  906  926  317  737  927  663   147 #>  [697,]  225  629  398  577  994  429  160  671   25   967 #>  [698,]  399  560  568  957  924  172  463  403  192   339 #>  [699,]   73  294  218   60  119  373  877  277  508   314 #>  [700,]  991  866  930  916  344  892  867  444  921   910 #>  [701,]  215  420  798  377  232  647  108  139   86   690 #>  [702,]  189  482  280  464  171  706  443  116  284   689 #>  [703,]  761  239  185  588  329  603  965  396  155   616 #>  [704,]  837  445  240  195  117  978  640  730  727   705 #>  [705,]  195  769  780   40  790  214  704  148  282   242 #>  [706,]  443  284  180  170  482  702   69  464  254    98 #>  [707,]  602  190  460  437  821  107  348  559  105   120 #>  [708,]  119  456  218  890  294  434  989  514  902   766 #>  [709,]  483  908  803  217   52  620  862  595  425    62 #>  [710,]  612  843  486  251  322  528  158  465   93   995 #>  [711,]   70  815  465  676  820  612  736  775  304   137 #>  [712,]  402  314  744  592  400  486  665  277  996   449 #>  [713,]  257  457  835  721  594  151  643  407  810   147 #>  [714,]  232    7  108   86  216  860  212  564  956   215 #>  [715,]  166  814  840  343  428  312  731  392  362    27 #>  [716,]  994  160  859  293  885  596  967  753  616   428 #>  [717,]  213  210  418  455  725  476  606  668  320   649 #>  [718,]  210  418  725  639  591  717  811  584  396   426 #>  [719,]   39  777  750  519   74  246  362  452  292   661 #>  [720,]  839  734  203  265    3  945  102  357  536    35 #>  [721,]  457  594  713  151  810  835  257  917  133   508 #>  [722,]  737  146  876  105  407  142  605  759  544   789 #>  [723,]   41  496  733  661  519  177  385  304  362   932 #>  [724,]  695  592  533  669  341  904  151  487  799   909 #>  [725,]  418  210  668  717  213  476  591  474  649   964 #>  [726,]  156  567  345  551  472  260   17  182  825   381 #>  [727,]  978  240  837  335  966  116  579  189  211   964 #>  [728,]  324  260  281  951  673  732  248  472  825   619 #>  [729,]  977  682  754  100  219  346  332  935  453   177 #>  [730,]  759  142  297  624  544  212  785  146  283   958 #>  [731,]  312  392  623  246  600  859  362  750  331    27 #>  [732,]  585  589  728  974    9  527  549  433  425   619 #>  [733,]   97  103  723  610  304  932  496  901  841   898 #>  [734,]  674  839  720  983   91  586  265  813  535   873 #>  [735,]  461   68  974  952  821  310  484  345  190   348 #>  [736,]  304  137  557  131  296   74  192  519  901   500 #>  [737,]  906  876  722  147  696  663  826  407  594   887 #>  [738,]  450  102  299  396  185  536  596  811  369   831 #>  [739,]  198  328  548  383  115   14  316  352  272   879 #>  [740,]  766  493  434  456    8  708  794  218   44   229 #>  [741,]  350  473  381  582  568  872  801  899  551   271 #>  [742,]   29   24  346  122  847  382  611  380  758   150 #>  [743,]  365  942  431  446  846  828   82  481  626   845 #>  [744,]  410  672  543  328  996  712  402  979  404   400 #>  [745,]  649  660  243  455  961  606  591  252  881   552 #>  [746,]  157  224  972  111   11  570  363  834  633   188 #>  [747,]  571  955  235  319  264  753  580  308  265   615 #>  [748,]  550  832  627  342  126  109  973  393   99   814 #>  [749,]  631  309  652  943  372  270   72  518   20   135 #>  [750,]  777  246  719  362  758   39   78  731   93   519 #>  [751,]  873   35  360    3  562  553    5  637  839    86 #>  [752,]  475  368  751  411  701  637  421  174  690   420 #>  [753,]  615  235  293  265  747  130  571  596  367   331 #>  [754,]  977  935  150  100  183  413  453  346  567   729 #>  [755,]   74   36  292  618  519  237  931  912   69   661 #>  [756,]  178  214  122   37  982  334   24  847  130   113 #>  [757,]  683  338  255  454  863  231   50  827  808   575 #>  [758,]  380  623  611  600   26  742  331  452  371   346 #>  [759,]  544  142  730  146  958  249  722  297  624   605 #>  [760,]  547  554  408  493  941  984  608  849  864   685 #>  [761,]    4  616  185  603  396  703  155  964  211   805 #>  [762,]  150  453  346  621  413  382  742  371  899   386 #>  [763,]  388  628   65  186  902  520  508  991  910   514 #>  [764,]  440  878   62   52  975   28   43  607  709   908 #>  [765,]  905  612  238  650  919   59  528  710  995   843 #>  [766,]  740  434  708  858  989  456  514  493    8    76 #>  [767,]  678  516  563  691  313  800  270  236  581   884 #>  [768,]   99  618  627  172  444  237  931  912  109   271 #>  [769,]  790  705  925  831    5  553   86  242  283   195 #>  [770,]  264  133  826  308  955  594  906  457  737   441 #>  [771,]  860  522  537  819  834  579  108  963  865   648 #>  [772,]  511  356  459  597  907  256  562  236  690   581 #>  [773,]  206  438  306  504  593  118  387  545  167   976 #>  [774,]  784  273  289  787  687  893  549  969   31   471 #>  [775,]   70  304  750  343  806  820  711  519  676   736 #>  [776,]   55  789   48  950  407  801  663  959  473   797 #>  [777,]  246  719  750   39  866  344   78  991  452   617 #>  [778,]  436   90  524  358  359  969  399  568  280   689 #>  [779,]  467  307  286  897   21  970  403  524  436    96 #>  [780,]  195  883  705  239   37  704   40  282  148   640 #>  [781,]  928  233  339  913  394  517  248  354  403    87 #>  [782,]  537  111  532  349  771  828  648  365  834   633 #>  [783,]  348  614  799  138  622  669  433  437  461   176 #>  [784,]  774  289  893  687  489  525  114  969  787    31 #>  [785,]  283  645  297  212  242  730  869  624  146   920 #>  [786,]  541  829  659  937  954  124  601  192  137   944 #>  [787,]  850  595   31  566  774  379  531  217  549   273 #>  [788,]   63  836  546  910  880  797  141  655  628   518 #>  [789,]  407  776  663   55  926  842  801  147  722   887 #>  [790,]  831  769  445  925  624  553  705  956  809   102 #>  [791,]  326  482  922  680  688  211  499  443  189   947 #>  [792,]  159  538  677  241  168  587  290  534  923   796 #>  [793,]   45  268  883  384  338  827  942  683  575   329 #>  [794,]   60  229  514  218  515  902  763  921  516   740 #>  [795,]  842  237  180  292  223  285   39  926  317   930 #>  [796,]  507   22  168   49  290  545  470  538  161   118 #>  [797,]   63  194  315  788  833  473  136  477  776   546 #>  [798,]  420  647   83  263  215  701  139  693  232   714 #>  [799,]  622  669   38  783  904  433   42  348  437   107 #>  [800,]  270  459  423  877  917  581  678  665  810   631 #>  [801,]  605  317   55  899  959  789  663  741  551   842 #>  [802,]   88  194  871  803  957  833  924  136  473   797 #>  [803,]  217  595  802  850  833  709  128  267  182   315 #>  [804,]  515  313  104  229  127  563  336  667  516   573 #>  [805,]  499    4  885   89  428  688  616  556  603   761 #>  [806,]  676   70  911   93   26  561   78   12  617   710 #>  [807,]  458   46  886  448  259  516  629  319  203   327 #>  [808,]  484  370  863  503  310  268  683  827  575   735 #>  [809,]  214  945  299  624  956  242  571  102  297   756 #>  [810,]  917  457  721  835  508  270  713  151  594   205 #>  [811,]  852  299  667  261  319  313  127  536  252   571 #>  [812,]  953  879   14  375  592  620  622  325  433   205 #>  [813,]  586  197   91  983  674  818   51  178  636   122 #>  [814,]  840  428  867  342  859   27  312  166  393   362 #>  [815,]  711   70  820  676  244  775  736  612  137   765 #>  [816,]  334  122  742   29  332  412  847  636  911   219 #>  [817,]  734  498  983  125  674   91  197  854  651   586 #>  [818,]   51  197  990   91  813  920  200  535  178   576 #>  [819,]  834  545  206  860   83  865  771  438  161   976 #>  [820,]  169   70  500  676  244   25  944  711  775    78 #>  [821,]  190  461  658  138  707  735  645  310  120   602 #>  [822,]  578    8  604   76  547  554   67  311  760   880 #>  [823,]  478  109  143  164  490   99  788  444  627   910 #>  [824,]   72   22  300  309  943  230  881  118  573   135 #>  [825,]  260  181   66  182  163  726  472  523  425   324 #>  [826,]  770  580  737   24  132  441  876  906  146   955 #>  [827,]  454  484  249  335  284  808  683  310  966   605 #>  [828,]  968  365  743  782  537  625  648  845   82   301 #>  [829,]  541  786  462  194  937   58  924  954  124   601 #>  [830,]  941  493  294  456    6  851  678  218  119    44 #>  [831,]  790  769  553   86  956  102  981  925  624   945 #>  [832,]  550  627  131  618   99  748  755  768  916    74 #>  [833,]  473  128  315  350  802  803  797  643  182   194 #>  [834,]  819  111  771   83  889   49  438  538  206   161 #>  [835,]  713   32  205  810  721  457  151  507  257   315 #>  [836,]  655  880  788   63  984  628  141  518  902   372 #>  [837,]  240  704  445  727  978  668  579  117  335   730 #>  [838,]  291  900  986  575  471  469  638  974  626   863 #>  [839,]  720  734    3  751  945  873   35  553  357   203 #>  [840,]  428  814  342  166   27  867   69  312  170   392 #>  [841,]  610   97  901  163  992  355   77  103  932   825 #>  [842,]  926  663  317  795  696  271  899  582  887   789 #>  [843,]  710  612  676   23  416  486  989   78  528   806 #>  [844,]  134  373  967   23   60  617  344  921   25   319 #>  [845,]  165  743  986  968  900  532  828  291  365   782 #>  [846,]  481  942  446  431  626  869  330  743  522   283 #>  [847,]  332  113  334  122  742  346  178  150  920    24 #>  [848,]  287  236  104  228  256  960  374  336  569   824 #>  [849,]  408   54  554  278  652   67  372  856  578   836 #>  [850,]  595  787  803  379  566  217  802  241   88   871 #>  [851,]  199  684  896  987  941  548  996  608  400   414 #>  [852,]  811  667  261  127  252  319  313  320  515   429 #>  [853,]  432  114  307  861   96   21  680   94  509   359 #>  [854,]  946  367  636   12  191  412  110  586  936   674 #>  [855,]  351  598  472  857  487   30   18  176  533   909 #>  [856,]   20   22  372   72  507  943  796  315   49   656 #>  [857,]  115  351  176  487  855  669  879  662  783   585 #>  [858,]   76  500  514  880  980  944  659  921  141   169 #>  [859,]  160  716  867  428  731  344  994  967  814   246 #>  [860,]  865  771  522  819  564  216  958  714  579   142 #>  [861,]  680  189  326  791  116   21   96  702  482   211 #>  [862,]  267  620  220  483   87  949   58  709  919   803 #>  [863,]  575  808  266  503  268   10  683  484  469   370 #>  [864,]  971   34  347  685 1000  539  408  234  856   849 #>  [865,]  860  451  958  564  819   61  545  976  875   216 #>  [866,]  991  344  700  916  930  921  246  867  777   444 #>  [867,]  393  700  916  342  866  814  237  428  930   344 #>  [868,]  665  227  423  409  441  360  535  990  457   877 #>  [869,]  283  481  330  212  785  282  846  446  730   626 #>  [870,]  462   58  949  937  984  194  829  136  630   267 #>  [871,]  802  194   88  136  121   95  797  938   33   924 #>  [872,]  506  899  621  741  582  271  350  193  523   381 #>  [873,]  535  751  200  409  360  651  576  990  415   637 #>  [874,]  497  187  589  986  635  471  975   52  555    62 #>  [875,]   61  116  958  451  865  579  959  668  171   950 #>  [876,]  737  722  257  386  441  120  105  658  906   594 #>  [877,]  665  423  800   73  270  917  868  699  996   314 #>  [878,]  914   71   28   43   62  391 1000  440   52   764 #>  [879,]  176  812  433   14  622  351  669  799  953   908 #>  [880,]  141  836  980   76  578  628  788  910  902    65 #>  [881,]  591  649  573  976  660  336  745  564  824   681 #>  [882,]  580  581  357  264  884  474  571  308  691   945 #>  [883,]  239  780  329  195  640  704   45  442  793   978 #>  [884,]  581   35  562  357    3  360  423  882  511   907 #>  [885,]  994  398  428  716  616  805  160  639  859     4 #>  [886,]  327  448  699  458   23   73  877  516  936    60 #>  [887,]  696  333  317  927  842  737  926  906  147   789 #>  [888,]  258  682  561  610   97  209  998  939  729   733 #>  [889,]  438  963  363  915  644  834   49  545  306   819 #>  [890,]  708  186  546  989  944  508  321  954  477   628 #>  [891,]   17  196  386  380  158  634  413  643  321   502 #>  [892,]  320  439  393  700  696  213  476  180  887   930 #>  [893,]   31  784  774  531  589  497  975  289  549   787 #>  [894,]  526  656  208  540  929  290  677  123   42   205 #>  [895,]  153  379  363  432  289  154   11  889  915   221 #>  [896,]  987  199  851  548  417  274  684  597  996   608 #>  [897,]  403  399  524  931  689  755  467  698   98    36 #>  [898,]  103  913  733  385  723   41  355  403   97   998 #>  [899,]  621  872  582  801  317  397  842  271  741   663 #>  [900,]  694  291  469  838  471  986   82  489  365   933 #>  [901,]   97  841  103  610  736  733  163  992  304   932 #>  [902,]  628   65  514  763  880  836  518  218  910   520 #>  [903,]  613  175  604  173  366   64  804  229  353   997 #>  [904,]   38  953  799  533  669  437  724  107  695   433 #>  [905,]  919  238  985  620  765  995    1  862  220   601 #>  [906,]  737  133  594  663  696  147  926  770  876   457 #>  [907,]  236  772  573  581  981  884  690  511  300   152 #>  [908,]   52  217  433   62  709  589  622  440   28   241 #>  [909,]  341   18  340  598  533  487  322  724  995   251 #>  [910,]  546  444  788  628  930  880  991  141  763   902 #>  [911,]   26  380   93  816  758   12  617  251   29   600 #>  [912,]  931  237   36   69  768  443  170  689  482   292 #>  [913,]  403  517  248  355  781  281  358  103  841   233 #>  [914,]  878  347 1000  570  539   57   43  864  391   234 #>  [915,]  963   48  933  889   61  405  161  545  776   168 #>  [916,]  930  700  991  866  867  444  344  921  627    25 #>  [917,]  810  270  508  800  721  665  457  835  314   277 #>  [918,]  162  129  164   85  245  583  278  654  479    47 #>  [919,]  601  905  238  220  985  620  862  949  181   267 #>  [920,]  113  658   51  132  146  847  178  382  645   675 #>  [921,]  991  866   25  344  514  916  930  700  763   944 #>  [922,]  947  791  326  499  680  482   89  970  443   211 #>  [923,]  635  241  538  792  471  405  159  168  161   217 #>  [924,]   88  957  463  339  698  802  172  194  829   568 #>  [925,]  769  377  869  108  790    5  283  831   86   139 #>  [926,]  663  842  696  906  789  271  546  795  317   887 #>  [927,]  333  476  887  261  320  696  474  213  892   388 #>  [928,]  781  354  394   87  233  220  339  630  483    58 #>  [929,]  540  232  526  894  123  459  656  574   42   290 #>  [930,]  916  700  444  991  866  910  627   99  867   344 #>  [931,]  912  689   36   98  237  768   69  897  292   443 #>  [932,]   77  452  610  304  506  193  371  177  621   872 #>  [933,]  963  915   82  692  363  365  694   94  161    61 #>  [934,]  633  349  224  247  106  157  111  746  253   782 #>  [935,]  754  183  567  413  156  345  100  977  726   150 #>  [936,]  416   23  468  886  327  946   12  201  843   486 #>  [937,]   58  949  601  462  829  786  541  870  659   220 #>  [938,]   95  121  245   67  278  971  871  653  129    33 #>  [939,]  196   77  561  322  992  340  935  251   26   158 #>  [940,]    6  987  356  256  896  323  569  597  543   851 #>  [941,]  830  493  199  851  760  414  547    6  554   456 #>  [942,]  431  846  481  446  626  743  330  522  869   365 #>  [943,]  309   72  372   22  135   20  518  507  631   118 #>  [944,]  989  890  921  786  465  858   78  500  321   659 #>  [945,]    3  956  553  580    7  809   35  624  571   882 #>  [946,]  110  854   12  259  367  936  235   23  753   844 #>  [947,]  922  443  170  970   89  482  791  326  680   286 #>  [948,]  569   54  572  408  274   75  374  417  228   960 #>  [949,]   58  937  601  462  870  267  220  829  862   541 #>  [950,]   55  959  171  776  789  801  359  875   48   842 #>  [951,]  324  381  566  248  233  549  260  728  182   358 #>  [952,]   68  345  183  461  735  567  821  370  413   310 #>  [953,]   38  375  904  812  205   32  622  799  833    79 #>  [954,]  643   79  541  321  350  473  477  546  829   786 #>  [955,]  264  308  770  580  747  571  826   29  235    24 #>  [956,]  624    7  945  297  553  142  474  132    3    86 #>  [957,]   88  568  924  802  698  463  350  473  172   339 #>  [958,]  875  759  865  544  142  668  860  959  451    61 #>  [959,]  171  950   55  605  801  317  789  776  842   887 #>  [960,]  374  287  228  848  569  104  256  236  173   572 #>  [961,]  660  745  455  649  593  118  520  167  306   881 #>  [962,]  420  599  693  647  798  139  701  145  152    15 #>  [963,]  933  915   61  889  363   82  771  579   94   834 #>  [964,]  668  211  213    4  717  556  725  688  418   670 #>  [965,]  185  603  596  588  155  761  616  703  293   396 #>  [966,]   53  335  189  727  978  454  827  464  702   116 #>  [967,]  134  319  160  308  844  344  264  747  235   955 #>  [968,]  828  845  743  365  165  782  625  537  446    82 #>  [969,]  687  358  436  778  525  549  273  774  517   114 #>  [970,]  947  912  286  326  443  931  680  170  922   482 #>  [971,]  864   34  938   95   67 1000  849  278  121   539 #>  [972,]   11  570  746  234   49  157  121  889  153   534 #>  [973,]  143  126  439  109  243  288  393  688  140   552 #>  [974,]  735   68  461  585  348  732  345  783  707   821 #>  [975,]    9   31  589  893   62   52  531  874  908   440 #>  [976,]  564  681  216  881  206  300  118  426  865   649 #>  [977,]  754  150  346  453  729  332  935  100  183   219 #>  [978,]  727  837   13  240  966  117  704  335  211   464 #>  [979,]  662  415  485  404  672  799  669  123  487   144 #>  [980,]  141  490  880   76  578  910  858  788  836   444 #>  [981,]  881  907  657  573  591  426  681  152  564   336 #>  [982,]  178  242  756  214  113   51  406  920   37   785 #>  [983,]  674  813  586  734  197   91  178  632  982   756 #>  [984,]  655  477  136  836  462  194  870   63  372    20 #>  [985,]    1  919  992  435  238  905   66  220  620   181 #>  [986,]  471  532  187  635  874  838  497  900  923   291 #>  [987,]  896  199  548  851  417  414  608    6  274   684 #>  [988,]  607  220  862  505  620  539  483  267   34  1000 #>  [989,]  944  890  708  373  528   78  321  119  921   218 #>  [990,]  535  227   51  409  818   91  868  441  920   873 #>  [991,]  866  700  930  344  916  921  444  910  763   546 #>  [992,]    1  939  163  238  825  181   66  985  435    77 #>  [993,]  769  637  148  705    5  751  839  174   40   925 #>  [994,]  716  885  160  398  859  697  428  629  671   429 #>  [995,]  390   18  592  341  238  909  612  322  251   340 #>  [996,]  400  543  800  449  877  684  665  672  459   270 #>  [997,]  613  173  323  175  903  228  804  104  960   287 #>  [998,]  355  673  841  281  682  542  258  610  100    97 #>  [999,]  572  641  188  263  300  206  773  374   83   824 #> [1000,]  539   34  864  971  226  803  878  595  850    28 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.37440774 0.5196210 0.6317683 0.6323538 0.8849260 0.8892560 0.9006937 #>    [2,] 0.71849076 0.8712022 0.8970041 0.9249884 0.9328638 0.9559555 0.9912308 #>    [3,] 0.33816647 0.3531914 0.4294108 0.5196530 0.5297383 0.5577980 0.6443834 #>    [4,] 0.54020961 0.6153700 0.6328276 0.6360577 0.6708464 0.6854089 0.7296972 #>    [5,] 0.39339787 0.4755666 0.6066615 0.7330094 0.7611787 0.7646775 0.7696904 #>    [6,] 0.81778517 0.8393568 0.8864097 0.8899425 0.8930137 0.9004203 0.9592937 #>    [7,] 0.31336098 0.4734230 0.4790972 0.5125694 0.5484259 0.5577980 0.5839837 #>    [8,] 0.69429370 0.6999343 0.8040632 0.8374759 0.8581814 0.8620620 0.9037422 #>    [9,] 0.49870522 0.5159316 0.5161472 0.6504423 0.7226073 0.7458232 0.8078439 #>   [10,] 0.43286308 0.6523323 0.8222796 0.8646028 0.9897671 1.0654198 1.0962131 #>   [11,] 0.41437972 0.5560717 0.6561674 0.7609491 0.7669037 0.8590798 0.8752580 #>   [12,] 0.67937879 0.7172980 0.7480645 0.7544614 0.8050573 0.8083640 0.8481635 #>   [13,] 0.52070502 0.6684482 0.7688076 0.7823320 0.8670848 0.9316208 0.9584593 #>   [14,] 0.41137800 0.5708362 0.5865694 0.6090094 0.6456530 0.6700576 0.7213540 #>   [15,] 0.59022782 0.7694994 0.8918625 1.0814758 1.1290545 1.1519124 1.1534854 #>   [16,] 0.45092441 0.4958946 0.5104549 0.5122970 0.5530641 0.6073729 0.6617331 #>   [17,] 0.21549985 0.3255899 0.3544750 0.4664532 0.4715509 0.4860027 0.4879230 #>   [18,] 0.28419387 0.3691577 0.5267358 0.5449690 0.5967973 0.5985593 0.6283001 #>   [19,] 0.60423508 0.9040169 0.9165124 1.0119967 1.0878704 1.1063906 1.1405633 #>   [20,] 0.28229287 0.3660425 0.4033861 0.4280612 0.4487782 0.4534048 0.4866329 #>   [21,] 0.53505778 0.5400066 0.6122105 0.7306741 0.7555545 0.8497530 0.8610543 #>   [22,] 0.21870056 0.3441216 0.3792610 0.4279712 0.4352831 0.4734599 0.4760026 #>   [23,] 0.69971236 0.7776224 0.7876056 0.7994573 0.8586295 0.8605815 0.8819863 #>   [24,] 0.38762218 0.4285535 0.4381970 0.5334751 0.6623435 0.6643578 0.6768378 #>   [25,] 0.53268027 0.6801124 0.6909970 0.7254717 0.7283049 0.7764582 0.7892815 #>   [26,] 0.43329051 0.5178387 0.5360601 0.5642680 0.5666451 0.5944099 0.6307465 #>   [27,] 0.30426516 0.3859418 0.4251838 0.4719293 0.5115982 0.5455742 0.5471404 #>   [28,] 0.42629419 0.4520204 0.4723838 0.5216885 0.5984226 0.6227925 0.6259317 #>   [29,] 0.35403636 0.3840472 0.3876222 0.5544435 0.5753758 0.6441560 0.6696159 #>   [30,] 0.70399445 0.8185857 0.8728922 0.8887481 0.9390512 0.9504278 0.9534198 #>   [31,] 0.54620478 0.5678647 0.5794177 0.5859331 0.6016578 0.6631736 0.6973421 #>   [32,] 0.32203562 0.3870360 0.4510068 0.4565310 0.5181098 0.5219980 0.5803326 #>   [33,] 0.59842366 0.6252209 0.6259422 0.6469902 0.6731264 0.6884798 0.6987678 #>   [34,] 0.42295739 0.4799947 0.4822970 0.5100279 0.7521974 0.7531811 0.7617941 #>   [35,] 0.35319143 0.4240218 0.5113439 0.5796505 0.5815733 0.6434926 0.6531255 #>   [36,] 0.28798006 0.3680010 0.4005744 0.4271074 0.4391532 0.4795506 0.4806273 #>   [37,] 0.46960421 0.5704743 0.5713747 0.7433508 0.8263683 0.9032159 0.9188813 #>   [38,] 0.16379892 0.4343415 0.4634704 0.4812532 0.5262166 0.5456857 0.5900957 #>   [39,] 0.32942541 0.3488723 0.4544843 0.4706264 0.4737524 0.5055472 0.5182899 #>   [40,] 0.46960421 0.5094448 0.8000923 0.8405120 0.8940577 0.9118995 0.9520868 #>   [41,] 0.56070439 0.8039226 0.8458749 0.9259973 0.9706053 1.0019942 1.0221179 #>   [42,] 0.26218164 0.3335003 0.4401235 0.4973035 0.5241576 0.5242244 0.5406525 #>   [43,] 0.63571193 0.7382393 0.9638590 1.0666145 1.0770948 1.0874487 1.0945852 #>   [44,] 0.98042680 0.9936126 1.0111360 1.0134749 1.0909802 1.1755655 1.2292283 #>   [45,] 0.96471043 1.1360815 1.2717714 1.5203067 1.5482659 1.7086648 1.7576296 #>   [46,] 0.92897311 1.0798204 1.2356634 1.2538734 1.2887295 1.3175664 1.3497319 #>   [47,] 0.89238862 0.9257327 0.9620712 0.9739201 0.9943237 1.1340280 1.1505984 #>   [48,] 0.44108247 0.4464113 0.4928736 0.5033910 0.5245417 0.5959135 0.6397210 #>   [49,] 0.39469461 0.3966216 0.4374424 0.4706606 0.4847577 0.4929153 0.6373957 #>   [50,] 0.62219362 0.6576409 0.7388219 0.7729828 0.7943559 0.8368663 0.8794120 #>   [51,] 0.30483279 0.4510571 0.5991109 0.6021361 0.6431851 0.6820095 0.6822274 #>   [52,] 0.16342217 0.3812533 0.4723838 0.4917449 0.5672412 0.6012372 0.6016578 #>   [53,] 0.47146486 0.6398191 0.6982818 0.7187265 0.7796118 0.9114307 0.9247849 #>   [54,] 0.32811395 0.4597374 0.5698973 0.6545683 0.7488184 0.7636551 0.8007657 #>   [55,] 0.26351243 0.2898434 0.3279429 0.3904213 0.4334976 0.4823644 0.5486852 #>   [56,] 0.77615810 0.8922126 0.9410711 0.9435230 0.9454779 0.9498508 0.9649450 #>   [57,] 1.01660350 1.0576989 1.0578482 1.0948736 1.1998130 1.2010383 1.2067120 #>   [58,] 0.31354966 0.3359187 0.4454083 0.5013944 0.5523149 0.5649255 0.6207553 #>   [59,] 0.54093924 0.6735608 0.6915943 0.7171179 0.7925492 0.8258154 0.8404956 #>   [60,] 0.39442631 0.5581936 0.6069573 0.6558298 0.6593543 0.6951015 0.7095590 #>   [61,] 0.42184296 0.4722252 0.4810669 0.5213441 0.5457783 0.5978246 0.6324206 #>   [62,] 0.16342217 0.4269498 0.4520204 0.5193114 0.6631736 0.7057671 0.7128491 #>   [63,] 0.22126147 0.3532780 0.4414033 0.4531874 0.4647006 0.5107906 0.5602252 #>   [64,] 0.33416754 0.4265877 0.4359787 0.4958946 0.5433790 0.6881546 0.7001640 #>   [65,] 0.23679109 0.2815989 0.3487280 0.4295142 0.5025708 0.5573627 0.6129167 #>   [66,] 0.44637144 0.5003019 0.5529245 0.6283844 0.6367535 0.6652489 0.7487575 #>   [67,] 0.33537141 0.5092862 0.5898424 0.5930201 0.6001093 0.6728713 0.6872553 #>   [68,] 0.37747986 0.4014896 0.4185361 0.4482289 0.5682722 0.5703633 0.6131069 #>   [69,] 0.28798006 0.3927377 0.4251838 0.4288953 0.4558640 0.4906690 0.5028235 #>   [70,] 0.54611205 0.6926403 0.7215123 0.7658092 0.8311058 0.9560666 1.0400445 #>   [71,] 0.47206866 0.6357119 0.6360646 0.6926937 0.6989833 0.7644924 0.7893722 #>   [72,] 0.21870056 0.2927399 0.2999043 0.3591081 0.4487782 0.4585332 0.4617932 #>   [73,] 0.30035462 0.5001202 0.5593482 0.5631557 0.6212020 0.6350773 0.6398905 #>   [74,] 0.30645224 0.5000964 0.5348828 0.5447165 0.5564983 0.5910982 0.6571445 #>   [75,] 0.73137409 0.7876294 0.7927559 0.9257327 0.9287029 0.9333650 0.9570342 #>   [76,] 0.40150325 0.4310171 0.4984940 0.5758994 0.5810228 0.5926704 0.7203417 #>   [77,] 0.42677834 0.5655940 0.5780670 0.5869566 0.5955668 0.6814462 0.6902135 #>   [78,] 0.24603251 0.4255550 0.5281018 0.6320025 0.6766829 0.6816221 0.7057718 #>   [79,] 0.44042104 0.5181098 0.5632566 0.5853790 0.5921010 0.6301329 0.6573707 #>   [80,] 1.17838407 1.4621528 1.4891457 1.6146337 1.6568477 1.6983617 1.7513378 #>   [81,] 0.97605309 1.0511801 1.0518557 1.0868473 1.1142342 1.1686700 1.1819750 #>   [82,] 0.30897320 0.4068803 0.5589393 0.5719344 0.6460923 0.6503385 0.7187265 #>   [83,] 0.29770340 0.5268685 0.5810016 0.5937661 0.6260777 0.6646483 0.6767827 #>   [84,] 0.73278181 0.8382064 0.8712902 0.9346618 0.9439012 1.1061611 1.2219257 #>   [85,] 0.63396681 0.7252764 0.8155012 0.8245226 0.8380611 0.9923770 0.9993802 #>   [86,] 0.32458341 0.3933979 0.5125694 0.6410320 0.6680742 0.6691817 0.6752053 #>   [87,] 0.66478616 0.7107108 0.7159460 0.7237704 0.7282900 0.7332213 0.7434692 #>   [88,] 0.30996952 0.3251140 0.3526699 0.5128921 0.5429316 0.6395256 0.6586995 #>   [89,] 0.57281868 0.5758453 0.7006440 0.7207689 0.7258189 0.7296972 0.7965332 #>   [90,] 0.39852216 0.4400132 0.4526669 0.5161778 0.5400066 0.5461164 0.6188844 #>   [91,] 0.48933920 0.6051880 0.6382770 0.6502117 0.6693098 0.7108046 0.7692118 #>   [92,] 0.62260206 0.9165124 1.3085745 1.3806910 1.5870406 1.6285594 1.6554045 #>   [93,] 0.24603251 0.3878538 0.4591714 0.5178387 0.6585143 0.6621358 0.6810870 #>   [94,] 0.30897320 0.6290901 0.6398191 0.6496431 0.7823336 0.7843597 0.8580708 #>   [95,] 0.04497083 0.5930201 0.6119075 0.6270330 0.6429569 0.6600823 0.6656487 #>   [96,] 0.62583943 0.7505155 0.9832066 1.0235993 1.0636559 1.1201775 1.1666406 #>   [97,] 0.35144018 0.6382641 0.7079532 0.7095187 0.7659251 0.8091797 0.8513275 #>   [98,] 0.31801358 0.3401989 0.4208660 0.4271074 0.5054884 0.5429898 0.5665091 #>   [99,] 0.21601832 0.3354368 0.3484150 0.3856758 0.5485465 0.5505203 0.5557009 #>  [100,] 0.41366461 0.5126158 0.5594749 0.5739571 0.6100644 0.6774000 0.7450978 #>  [101,] 0.66441475 0.7549090 0.7557675 0.7765707 0.7936885 0.7990604 0.8064913 #>  [102,] 0.46871727 0.5296746 0.6837906 0.7008518 0.7655323 0.8326505 0.8770413 #>  [103,] 0.76556108 0.7659251 0.7682346 0.9744743 1.0745172 1.1330448 1.1399362 #>  [104,] 0.30557984 0.3708418 0.3794128 0.5570809 0.5645912 0.6157789 0.6886539 #>  [105,] 0.42014793 0.4929323 0.5075120 0.5230954 0.5328842 0.5333565 0.5456871 #>  [106,] 0.60144678 0.9305805 0.9306688 0.9501760 0.9659964 1.0453325 1.0542669 #>  [107,] 0.26191941 0.3335003 0.3864874 0.4739008 0.4901712 0.5262166 0.5277461 #>  [108,] 0.53526753 0.5824204 0.5919049 0.6908379 0.6932066 0.6949184 0.7062489 #>  [109,] 0.32366596 0.3816655 0.5062977 0.5485465 0.6035720 0.6073536 0.6347685 #>  [110,] 0.65787838 0.8523714 1.1802698 1.3560210 1.3630859 1.3759184 1.3968075 #>  [111,] 0.50862957 0.6866783 0.7279623 0.7948560 0.8165282 0.8374849 0.8375440 #>  [112,] 1.55852407 1.5673626 1.6632869 1.6701479 1.7246864 1.7747710 1.7934094 #>  [113,] 0.36644829 0.4296335 0.5638167 0.6098110 0.6319255 0.6431851 0.6599731 #>  [114,] 0.27515565 0.7833691 0.7984154 0.8626899 0.8700936 0.8907433 0.9139923 #>  [115,] 0.38214516 0.6842062 0.7184307 0.8236605 0.8753309 0.9271065 0.9900302 #>  [116,] 0.45027271 0.5457783 0.6602727 0.6741195 0.6863318 0.7091045 0.7172088 #>  [117,] 0.56160326 0.6429118 0.7370743 0.7549090 0.7710974 0.7860382 0.7889454 #>  [118,] 0.23376156 0.3276499 0.3441216 0.3508093 0.5015056 0.5053651 0.5176712 #>  [119,] 0.31583768 0.3737276 0.4558761 0.5437083 0.5458634 0.5974658 0.6560051 #>  [120,] 0.34765690 0.3987382 0.4601763 0.4879230 0.5018809 0.5067646 0.5416199 #>  [121,] 0.58701147 0.5952777 0.6049412 0.6119075 0.6268535 0.6821388 0.7100069 #>  [122,] 0.38404719 0.4381970 0.4623692 0.4922980 0.5168948 0.5305939 0.5628925 #>  [123,] 0.35215632 0.3951595 0.5682765 0.5992893 0.6292636 0.6469049 0.6536885 #>  [124,] 0.37061007 0.3711900 0.3871380 0.5807237 0.5986405 0.6415935 0.6531730 #>  [125,] 1.16275048 1.2245416 1.2926636 1.3602846 1.3698820 1.4084729 1.4638888 #>  [126,] 0.50990188 0.6099109 0.7001640 0.7341859 0.7767447 0.7813376 0.7953612 #>  [127,] 0.38172029 0.5355710 0.5596657 0.5633162 0.5823183 0.5929949 0.6202899 #>  [128,] 0.32678210 0.4734693 0.5506425 0.5621268 0.5665520 0.5690209 0.6215555 #>  [129,] 0.32240302 0.5219120 0.5762402 0.6049412 0.6920584 0.7313320 0.7474944 #>  [130,] 0.49883170 0.6053445 0.7167148 0.7190791 0.7574800 0.7613518 0.7938191 #>  [131,] 0.53564742 0.6130721 0.6764559 0.7958312 0.8108554 0.8286614 0.8786131 #>  [132,] 0.42579509 0.5151876 0.5341619 0.5671062 0.5755747 0.5903237 0.6075006 #>  [133,] 0.35147778 0.3636692 0.3647389 0.4423911 0.5608529 0.5691907 0.5779306 #>  [134,] 0.39681078 0.4251424 0.5178433 0.5361624 0.6805308 0.6867334 0.7135838 #>  [135,] 0.30942474 0.4231522 0.4267138 0.5000046 0.5050926 0.5430369 0.5739390 #>  [136,] 0.41118245 0.4267375 0.4318495 0.4339700 0.4768650 0.5465379 0.5586927 #>  [137,] 0.61307211 0.6772350 0.7043720 0.7118153 0.8149391 0.8453201 0.8556896 #>  [138,] 0.43229124 0.5113181 0.5293639 0.5827702 0.5852424 0.5925780 0.6027970 #>  [139,] 0.53526753 0.6705211 0.7233836 0.7638404 0.7897678 0.7912746 0.8126103 #>  [140,] 0.25761193 0.3248417 0.3820281 0.4265877 0.4509244 0.6123456 0.6371633 #>  [141,] 0.21551060 0.2478560 0.4984940 0.5043320 0.5153898 0.5377246 0.5380901 #>  [142,] 0.23215070 0.3977784 0.4000386 0.4393166 0.4936062 0.5116403 0.5226528 #>  [143,] 0.32484169 0.4430272 0.4500779 0.4606841 0.5433790 0.5530641 0.5891766 #>  [144,] 0.70360030 0.7115000 0.7115202 0.7263464 0.7909070 0.8401681 0.8523100 #>  [145,] 0.53097493 0.5426041 0.5660205 0.8089592 0.9680723 0.9860777 1.0241528 #>  [146,] 0.36684834 0.4257951 0.4369957 0.4393166 0.4547368 0.5026818 0.5330085 #>  [147,] 0.34840672 0.4549819 0.4564327 0.5024490 0.5335413 0.5341757 0.5377761 #>  [148,] 0.68439506 0.7249098 0.8863247 0.9094872 0.9198462 0.9435541 0.9756199 #>  [149,] 0.48461201 0.6281582 0.7102363 0.7320435 0.7869123 0.8343406 0.8597976 #>  [150,] 0.27767287 0.2814221 0.2841270 0.4878354 0.4954478 0.4975521 0.5313888 #>  [151,] 0.37046721 0.4650588 0.4816673 0.4861472 0.5433768 0.5727964 0.5752032 #>  [152,] 0.56256667 0.5770576 0.6789019 0.7157721 0.7351366 0.7589517 0.7694994 #>  [153,] 0.54053002 0.5560717 0.5999067 0.7184908 0.7479200 0.7761110 0.8660131 #>  [154,] 0.54053002 0.6561674 0.8307043 0.8541981 0.8712022 0.9810323 0.9903409 #>  [155,] 0.37489759 0.4336603 0.7790019 0.8323242 0.8554640 0.8577206 0.9099627 #>  [156,] 0.30569236 0.3262743 0.3579049 0.3630452 0.4926383 0.5405824 0.6052169 #>  [157,] 0.64667460 0.7669037 0.8257021 0.8541981 0.9243470 0.9655508 1.0201939 #>  [158,] 0.37740552 0.4020145 0.4190839 0.4591714 0.5281018 0.5550570 0.5788570 #>  [159,] 0.33547237 0.3463819 0.4977218 0.5180707 0.5242244 0.5635180 0.5817520 #>  [160,] 0.35829338 0.5718766 0.5747591 0.5779698 0.6522162 0.7144527 0.7876369 #>  [161,] 0.50669338 0.5422210 0.5631950 0.5689447 0.6092181 0.6320838 0.6627306 #>  [162,] 0.51045490 0.5219120 0.5858995 0.5937850 0.7252764 0.8000330 0.8418996 #>  [163,] 0.37061007 0.4042716 0.5416616 0.6091344 0.6365370 0.7418901 0.7538221 #>  [164,] 0.51229703 0.5239113 0.5903342 0.5937850 0.6369687 0.6395027 0.7197476 #>  [165,] 0.54908168 0.9813251 1.1372137 1.1695009 1.2031595 1.2249379 1.2830620 #>  [166,] 0.61272048 0.7611578 0.7883182 0.8482370 0.8973138 0.8973912 0.9098426 #>  [167,] 0.24308049 0.2554877 0.3695717 0.4638763 0.4841923 0.5672204 0.5678705 #>  [168,] 0.38041963 0.4770930 0.4780638 0.4847577 0.5092416 0.5473634 0.5519264 #>  [169,] 0.26265001 0.6764559 0.6801124 0.7182474 0.8034945 0.8243029 0.9143408 #>  [170,] 0.26578713 0.4558640 0.5643588 0.5758453 0.6031906 0.6038029 0.6317046 #>  [171,] 0.17370456 0.4308061 0.4805783 0.4823644 0.5499564 0.5587297 0.6249264 #>  [172,] 0.26941305 0.4017908 0.5415747 0.5470445 0.5757414 0.5872002 0.6124346 #>  [173,] 0.87618145 0.9526264 0.9565228 0.9713093 1.0146814 1.0413455 1.1054185 #>  [174,] 0.61152392 0.7089670 0.7760067 0.9366138 0.9987533 1.0345146 1.0764891 #>  [175,] 0.55117629 0.6955637 0.8672199 0.9175538 1.0857738 1.0870652 1.1226844 #>  [176,] 0.51603535 0.5265768 0.5388508 0.5712551 0.5801553 0.6707166 0.7064780 #>  [177,] 0.57667920 0.6744389 0.7106979 0.7830243 0.8084727 0.8349234 0.8471915 #>  [178,] 0.35086757 0.4558084 0.4623692 0.5991109 0.5998957 0.6098110 0.6568489 #>  [179,] 0.59394151 0.6259422 0.6412760 0.7072447 0.9181475 0.9528680 0.9805333 #>  [180,] 0.45973796 0.5236926 0.5413020 0.5590320 0.5625617 0.5949277 0.6129280 #>  [181,] 0.48466368 0.4966760 0.5003019 0.5597563 0.5807237 0.6365370 0.6573707 #>  [182,] 0.49667604 0.5257725 0.5446453 0.5665520 0.5922374 0.5939369 0.6009061 #>  [183,] 0.44863069 0.4890375 0.4972940 0.5129245 0.5339640 0.5405824 0.5594749 #>  [184,] 1.54969454 1.6058166 1.7903249 1.8486250 1.9415717 1.9861202 1.9921299 #>  [185,] 0.46840057 0.5643122 0.7830058 0.8577187 0.9074240 0.9099627 0.9585011 #>  [186,] 0.21503155 0.4423911 0.4427498 0.4470150 0.4800804 0.4852145 0.5140889 #>  [187,] 0.54488025 0.5484068 0.6032080 0.6201989 0.6812469 0.6997092 0.7071064 #>  [188,] 0.55211975 0.5650773 0.6230229 0.7717706 0.7985339 0.8089592 0.8240324 #>  [189,] 0.38410060 0.6421988 0.6741195 0.6748141 0.7148040 0.7160836 0.7192255 #>  [190,] 0.29678858 0.3855973 0.3987382 0.4023448 0.4417458 0.4929323 0.5541087 #>  [191,] 0.83653302 0.9011914 1.1703316 1.1948539 1.3102195 1.3296849 1.3600533 #>  [192,] 0.25389733 0.3532200 0.5986405 0.6218608 0.6532183 0.6823172 0.6910984 #>  [193,] 0.22947858 0.3398413 0.4375047 0.5370750 0.5849706 0.5936046 0.5978990 #>  [194,] 0.40798941 0.4111824 0.4547087 0.4821675 0.5014282 0.5111314 0.5392919 #>  [195,] 0.42611375 0.5618296 0.6964333 0.8322004 0.9590741 0.9636064 0.9893164 #>  [196,] 0.40201451 0.4776085 0.5035358 0.5344354 0.5360601 0.5955668 0.6228103 #>  [197,] 0.46147713 0.6051880 0.6178127 0.7489781 0.7982087 0.8318041 0.9819342 #>  [198,] 0.90254645 1.1476636 1.2435210 1.2555075 1.2713360 1.2953993 1.2964965 #>  [199,] 0.35295760 0.4725503 0.6273540 0.6553937 0.6742267 0.7099813 0.7272521 #>  [200,] 0.22003989 0.6339161 0.6577880 0.7028651 0.7089670 0.7099221 0.7364444 #>  [201,] 1.30424483 1.3801370 1.6572063 1.6867596 1.7135375 1.7356769 1.7962741 #>  [202,] 0.96348909 1.1220217 1.2021038 1.2176376 1.3685976 1.4039036 1.4407800 #>  [203,] 0.72611264 0.8111915 0.8342606 0.8372628 0.8585798 0.8709668 1.0290069 #>  [204,] 0.26218164 0.3876053 0.4977218 0.5012997 0.5277461 0.5384173 0.5414872 #>  [205,] 0.32203562 0.4016753 0.4300057 0.5546442 0.5858126 0.5875525 0.6082550 #>  [206,] 0.37711935 0.4536032 0.5418304 0.5571568 0.5603790 0.5993868 0.6085266 #>  [207,] 1.29870348 1.4759336 1.5193207 1.6065617 1.6335442 1.6481263 1.6744164 #>  [208,] 0.41828293 0.4505434 0.5149747 0.5504608 0.5652963 0.6662338 0.6896558 #>  [209,] 1.09602517 1.3455591 1.3968001 1.4076033 1.4311583 1.4532473 1.4562446 #>  [210,] 0.23259817 0.2557204 0.3945140 0.4285865 0.5073673 0.5450982 0.5976732 #>  [211,] 0.57035503 0.6708464 0.6737630 0.7192255 0.7207689 0.7496445 0.7887201 #>  [212,] 0.39122971 0.4981192 0.5229825 0.5269430 0.5292013 0.5795555 0.5996315 #>  [213,] 0.35637992 0.4327384 0.4632784 0.4996657 0.5418139 0.5668559 0.5799450 #>  [214,] 0.50944477 0.5110197 0.5355926 0.5386034 0.5713747 0.5859775 0.6705592 #>  [215,] 0.34791594 0.5351012 0.5943828 0.6316720 0.6639791 0.7338786 0.7368381 #>  [216,] 0.27087776 0.2839025 0.3817311 0.5293472 0.5908624 0.6269716 0.6411617 #>  [217,] 0.39744238 0.4157032 0.4207887 0.5008248 0.5621268 0.5672412 0.6119784 #>  [218,] 0.33093201 0.5025979 0.5581936 0.5705094 0.5770479 0.5935215 0.5974658 #>  [219,] 0.47130002 0.4807848 0.5290914 0.6324410 0.6944847 0.7013259 0.7344657 #>  [220,] 0.50139444 0.6117694 0.6213244 0.6379400 0.6655542 0.7627878 0.7797618 #>  [221,] 0.17049041 0.4410825 0.4612374 0.4953889 0.5724994 0.6252209 0.7118564 #>  [222,] 0.95693748 1.1132546 1.1244440 1.1303904 1.2668734 1.3012856 1.3358036 #>  [223,] 0.28983255 0.3401989 0.3488723 0.4446433 0.4599618 0.4971177 0.5089164 #>  [224,] 0.68358791 0.7398657 0.8153097 0.9655508 1.0165439 1.0306387 1.0955916 #>  [225,] 0.52787810 0.6537160 0.7764582 0.8385543 0.8581661 0.9558473 0.9584774 #>  [226,] 0.47700844 0.5216885 0.5275571 0.5504608 0.6699999 0.6742696 0.6864118 #>  [227,] 0.40229399 0.4330564 0.4653143 0.4910223 0.5192757 0.5500262 0.5755747 #>  [228,] 0.16765161 0.3794128 0.3972535 0.4516268 0.5227325 0.5984751 0.7192160 #>  [229,] 0.56725251 0.5680787 0.5804492 0.6965240 0.7132296 0.7339512 0.7397689 #>  [230,] 0.53481399 0.6018809 0.6580955 0.6617331 0.6902225 0.7393891 0.7903442 #>  [231,] 0.56754181 0.6221936 0.7386678 0.7643205 0.7936885 0.8099410 0.8349234 #>  [232,] 0.33706501 0.5086939 0.5351012 0.5672952 0.6229590 0.6575454 0.7062489 #>  [233,] 0.51643360 0.5335565 0.5571488 0.5878117 0.7780923 0.8003594 0.8174984 #>  [234,] 0.38920400 0.6969675 0.7000426 0.7243613 0.7523700 0.7669118 0.7962175 #>  [235,] 0.37712295 0.3991980 0.5946666 0.6124585 0.6698246 0.7125412 0.7172980 #>  [236,] 0.34385430 0.3561176 0.5080554 0.5570809 0.5827833 0.6707290 0.6944958 #>  [237,] 0.35853973 0.3927377 0.4391532 0.4562070 0.4633042 0.4707987 0.5236926 #>  [238,] 0.59462859 0.6323538 0.6356349 0.6532442 0.7442849 0.7569891 0.8079612 #>  [239,] 0.59284156 0.6264562 0.8839687 0.8899777 0.9636064 0.9918935 1.0633670 #>  [240,] 0.24728549 0.5359625 0.5978341 0.6676988 0.7735319 0.7764392 0.7795528 #>  [241,] 0.39744238 0.4338809 0.4520274 0.5868525 0.6012372 0.6065631 0.6152847 #>  [242,] 0.37716013 0.4836585 0.5110197 0.5421546 0.5715196 0.6801882 0.6905674 #>  [243,] 0.28394795 0.3820281 0.3876899 0.3974501 0.4430272 0.5167141 0.5183246 #>  [244,] 0.82430292 0.9597073 0.9680445 1.3547966 1.3548550 1.3607090 1.3921615 #>  [245,] 0.57624017 0.5876477 0.6268535 0.6270330 0.6747779 0.6848974 0.7931200 #>  [246,] 0.31299205 0.5034560 0.5043867 0.5419253 0.5535397 0.5575974 0.7085888 #>  [247,] 0.64262965 0.8921008 0.9305805 0.9339677 1.0069366 1.0193305 1.1414821 #>  [248,] 0.48782602 0.5189966 0.5340295 0.5627590 0.5878117 0.7211326 0.7482774 #>  [249,] 0.29951135 0.4259536 0.4972859 0.6099927 0.6159928 0.6249264 0.6333368 #>  [250,] 1.20210381 1.5519966 1.7618684 1.9120597 1.9633872 2.0200774 2.0272466 #>  [251,] 0.35031851 0.4776085 0.5788570 0.6083226 0.6146147 0.6818975 0.7005643 #>  [252,] 0.32958296 0.3974501 0.4641185 0.4644079 0.4666262 0.5781133 0.5823183 #>  [253,] 0.64262965 0.7900258 0.9860777 0.9909285 1.0919575 1.1173512 1.1255470 #>  [254,] 0.31801358 0.3946047 0.5089164 0.6378590 0.6576409 0.6856637 0.6870499 #>  [255,] 0.56754181 0.6402904 0.7009357 0.7173158 0.7729828 0.9631997 1.0913812 #>  [256,] 0.34385430 0.5192776 0.6300583 0.6377344 0.7117716 0.7386289 0.7809774 #>  [257,] 0.22952545 0.3700009 0.4237522 0.4269215 0.4446646 0.4706503 0.4720348 #>  [258,] 0.44150652 0.8000399 0.9923017 1.1193029 1.2113795 1.2947642 1.3275814 #>  [259,] 0.85237136 1.0701032 1.2366975 1.4143776 1.5372939 1.5401955 1.6497181 #>  [260,] 0.34800816 0.4439292 0.4792568 0.5645975 0.5678585 0.5823287 0.5922374 #>  [261,] 0.35396396 0.4361154 0.4656768 0.4666262 0.5121672 0.5249327 0.5773453 #>  [262,] 0.71907907 0.7288427 0.7508510 0.7767205 0.7890183 0.9310220 0.9435470 #>  [263,] 0.29770340 0.4141110 0.5676076 0.6408758 0.6567339 0.6658709 0.7265516 #>  [264,] 0.19402179 0.2678304 0.3317761 0.5779306 0.5793657 0.5922482 0.6011110 #>  [265,] 0.52654089 0.5694851 0.7143330 0.7409058 0.7444994 0.7695044 0.8202393 #>  [266,] 0.43286308 0.6539635 0.7156137 1.0338277 1.0880982 1.1014870 1.2061600 #>  [267,] 0.36675682 0.5501011 0.6080251 0.6144638 0.6671930 0.6740908 0.6979966 #>  [268,] 0.59586692 0.7958265 0.8402377 0.8576936 0.9461251 0.9771705 1.0383945 #>  [269,] 0.54260412 0.5650773 0.6896558 0.7013672 0.8024806 0.8243659 0.8619546 #>  [270,] 0.22500973 0.4578056 0.5132158 0.5347966 0.5573906 0.5618274 0.5656646 #>  [271,] 0.26941305 0.2701207 0.4742903 0.5017003 0.5199536 0.5307726 0.5483506 #>  [272,] 0.48405150 0.5934796 0.7977922 0.8339237 0.8528246 0.9053046 0.9145482 #>  [273,] 0.50643364 0.6628639 0.7460642 0.7497779 0.7905453 0.8047521 0.8092070 #>  [274,] 0.56440130 0.6220324 0.6527405 0.7055652 0.7417904 0.7430240 0.7638724 #>  [275,] 0.64111107 0.7362176 0.7411347 0.8071888 0.9011914 0.9139025 0.9205592 #>  [276,] 0.48583868 1.1128216 1.1280921 1.2256428 1.2970298 1.3186694 1.3719151 #>  [277,] 0.27111546 0.5458634 0.5522195 0.5631557 0.6328689 0.6480226 0.6719849 #>  [278,] 0.32240302 0.5092862 0.5285431 0.5858995 0.6302899 0.6656487 0.6848974 #>  [279,] 0.54272310 0.9510885 1.0333731 1.0378200 1.0842766 1.0886630 1.1258774 #>  [280,] 0.44001319 0.4482383 0.5350578 0.5680075 0.7093066 0.7229251 0.7477676 #>  [281,] 0.48782602 0.5382450 0.6441751 0.6856915 0.7746998 0.8234598 0.8382064 #>  [282,] 0.63216176 0.6843951 0.7033122 0.7206454 0.8457100 0.8556248 0.9346566 #>  [283,] 0.20119578 0.4330050 0.5292013 0.6444889 0.6596934 0.6674573 0.7008368 #>  [284,] 0.41791948 0.5500002 0.5616033 0.6644147 0.6684482 0.7115284 0.7714425 #>  [285,] 0.28122955 0.2898325 0.3042652 0.3680010 0.4208660 0.4288953 0.4544843 #>  [286,] 0.83117402 0.9536993 1.0759830 1.0794063 1.0797320 1.1290180 1.2017439 #>  [287,] 0.16765161 0.2524951 0.3055798 0.4410636 0.4944418 0.5827833 0.6699247 #>  [288,] 0.56499395 0.6104109 0.6494149 0.6533586 0.6589826 0.6912301 0.7058457 #>  [289,] 0.56128240 0.6060546 0.6891124 0.7835165 0.8987008 0.9107711 0.9328638 #>  [290,] 0.44254775 0.4739008 0.4938839 0.4973035 0.5154688 0.5364357 0.5900000 #>  [291,] 0.43114166 0.5037232 0.7502026 0.8022048 0.8222796 0.9218647 0.9456269 #>  [292,] 0.28122955 0.3585397 0.4005744 0.4599618 0.4719293 0.4737524 0.4941077 #>  [293,] 0.45982563 0.4627462 0.6790274 0.7352688 0.7444994 0.7550201 0.8146329 #>  [294,] 0.33093201 0.3737276 0.4075892 0.4965954 0.5459429 0.6212020 0.6413108 #>  [295,] 1.22922834 1.6228459 1.7320149 1.8213842 1.9268269 2.0307088 2.0696552 #>  [296,] 0.69835149 0.7256993 0.7417198 0.8211896 0.8380895 0.8780206 0.8932582 #>  [297,] 0.24047378 0.3771601 0.4302289 0.4714800 0.5026818 0.5079815 0.5116403 #>  [298,] 0.97717053 1.0341550 1.1530179 1.1615413 1.1964910 1.2109834 1.2236306 #>  [299,] 0.46871727 0.5940345 0.6718302 0.6963547 0.7474774 0.7541661 0.7727392 #>  [300,] 0.40337394 0.4141110 0.4921739 0.4987909 0.5418304 0.6260777 0.6305279 #>  [301,] 0.38832700 0.5591449 0.7470331 0.8280040 0.9345298 1.0007794 1.0097257 #>  [302,] 1.05544757 1.0864902 1.2096848 1.2278592 1.2559593 1.3363969 1.3384323 #>  [303,] 1.05931979 1.4083979 1.5475604 1.5779953 1.5884435 1.6557957 1.7377046 #>  [304,] 0.61747662 0.6944256 0.7058491 0.7141267 0.7232051 0.7310167 0.7342439 #>  [305,] 0.99875331 1.1196969 1.1629325 1.1712476 1.1934590 1.2020231 1.2147471 #>  [306,] 0.16044299 0.3508093 0.3586839 0.3947949 0.4432703 0.5215421 0.5766561 #>  [307,] 0.75555445 0.7985300 0.9673132 1.0086205 1.0165799 1.0217857 1.0825259 #>  [308,] 0.19402179 0.3555067 0.4337352 0.5723201 0.5901790 0.6238143 0.6588093 #>  [309,] 0.15739874 0.2927399 0.3094247 0.3420135 0.4140120 0.4279712 0.4617395 #>  [310,] 0.42526236 0.5833116 0.6245978 0.6534410 0.6637959 0.6728224 0.7151564 #>  [311,] 0.65948086 0.7622319 0.7696701 0.7931384 0.8242023 0.8477518 0.9194493 #>  [312,] 0.38594183 0.4376983 0.4930348 0.6038293 0.6202930 0.6476761 0.6973202 #>  [313,] 0.29619568 0.5594014 0.5688117 0.5864253 0.5870340 0.6421234 0.6713917 #>  [314,] 0.27111546 0.5001202 0.5686945 0.6167773 0.6353030 0.7064299 0.7158896 #>  [315,] 0.45340478 0.4768650 0.4864367 0.4908308 0.4909328 0.5154688 0.5219980 #>  [316,] 0.62039678 0.7758929 0.7894831 0.7977922 0.8005508 0.8373456 0.8664193 #>  [317,] 0.34725973 0.4317180 0.4657972 0.4728753 0.4784125 0.4947778 0.5146067 #>  [318,] 0.66774590 1.0664273 1.2667554 1.2998875 1.3524285 1.3923727 1.4089270 #>  [319,] 0.53683528 0.6458406 0.6819790 0.6968820 0.7221679 0.7954932 0.8013005 #>  [320,] 0.27692957 0.3295830 0.4315167 0.4361154 0.4632784 0.5194180 0.5731871 #>  [321,] 0.37740552 0.5298873 0.5674285 0.6048902 0.6227255 0.6320025 0.6411027 #>  [322,] 0.35031851 0.5399719 0.6108232 0.6269043 0.6609895 0.7051456 0.7055877 #>  [323,] 0.95372941 0.9592937 0.9818004 0.9823114 1.0534956 1.0553641 1.0968400 #>  [324,] 0.18607074 0.4439292 0.5175486 0.5340295 0.5501744 0.5571488 0.5711820 #>  [325,] 0.41137800 0.5682765 0.5934796 0.6069523 0.7628360 0.7758584 0.7772044 #>  [326,] 0.49029828 0.5084776 0.5933649 0.6258394 0.8065527 0.8477603 0.8576452 #>  [327,] 0.67399602 0.6808892 0.7301544 0.7776224 0.7818618 0.7955500 0.8297262 #>  [328,] 0.83159959 0.9046579 1.3424826 1.3942088 1.3985994 1.4262390 1.4263432 #>  [329,] 0.62645619 0.8139930 1.0637702 1.1379397 1.2330201 1.2445042 1.2717714 #>  [330,] 0.34718697 0.3912297 0.4194307 0.4439014 0.5228171 0.5727556 0.6406330 #>  [331,] 0.26035703 0.5753758 0.5946666 0.6105969 0.6638629 0.6697832 0.6705406 #>  [332,] 0.30855503 0.3710229 0.4878354 0.5026781 0.5290914 0.5319935 0.5828565 #>  [333,] 0.32922558 0.3842350 0.4455320 0.5087297 0.5693583 0.5817674 0.6002576 #>  [334,] 0.43580695 0.4922980 0.5026781 0.5831288 0.5879639 0.6053585 0.6735620 #>  [335,] 0.57875264 0.6839511 0.6853032 0.6863318 0.6982818 0.7301646 0.7401596 #>  [336,] 0.23416207 0.4904582 0.5355710 0.5864253 0.5963909 0.6157789 0.6580955 #>  [337,] 0.56117283 0.9724704 1.0097257 1.2080045 1.3264815 1.4421302 1.4433116 #>  [338,] 0.46558168 0.4841030 0.6402904 0.9160282 0.9315429 0.9379916 1.0990903 #>  [339,] 0.56536588 0.6463297 0.6586995 0.6940481 0.7130196 0.7237704 0.7773880 #>  [340,] 0.40700908 0.5399719 0.5425732 0.5478941 0.5985593 0.6146147 0.6517178 #>  [341,] 0.23253009 0.2841939 0.5425732 0.5526583 0.5707032 0.6098153 0.6189824 #>  [342,] 0.33335252 0.4853275 0.5666667 0.5674679 0.5784783 0.5826087 0.5944991 #>  [343,] 0.91191200 0.9235948 0.9993258 1.0262315 1.0356451 1.0573300 1.0660545 #>  [344,] 0.21286690 0.3670160 0.4329317 0.5043867 0.5509312 0.5822610 0.6361994 #>  [345,] 0.32627428 0.4014896 0.4233858 0.4694141 0.4925961 0.4972940 0.5446308 #>  [346,] 0.27767287 0.2783384 0.3710229 0.3929441 0.4713000 0.4934612 0.4958311 #>  [347,] 0.49907726 0.6222739 0.7091526 0.8132572 0.8963111 0.9075966 1.0341483 #>  [348,] 0.21792988 0.5361539 0.5793089 0.5827702 0.5841615 0.5937395 0.6079173 #>  [349,] 0.49561025 0.7515701 0.7900258 0.7948560 0.8526947 0.8921008 0.9249440 #>  [350,] 0.15272180 0.3451188 0.5312809 0.5427308 0.5455492 0.5483506 0.5682192 #>  [351,] 0.50111140 0.5290405 0.5388508 0.5638882 0.6842062 0.6856766 0.7081862 #>  [352,] 0.48405150 0.9997366 1.0063590 1.0186303 1.0258218 1.0370866 1.0842196 #>  [353,] 0.85506147 0.9796234 0.9997460 1.0331354 1.0857738 1.1596754 1.1766655 #>  [354,] 0.33886686 0.7598023 0.7773880 0.8075970 0.8530453 0.8797843 0.9533309 #>  [355,] 0.53824498 0.7482774 0.8041277 0.8343406 0.8527889 0.8808184 0.9057698 #>  [356,] 0.39460346 0.4735638 0.5339004 0.5406958 0.6300583 0.6759686 0.6760014 #>  [357,] 0.36786814 0.4943045 0.5858722 0.6555239 0.6883619 0.7011929 0.7140176 #>  [358,] 0.54467172 0.6008991 0.6133631 0.6281582 0.7045401 0.7285143 0.7305726 #>  [359,] 0.49538891 0.5077185 0.5161778 0.6036898 0.6470808 0.6509040 0.6822214 #>  [360,] 0.33360306 0.3951510 0.5297383 0.5445057 0.5796505 0.6006658 0.6055141 #>  [361,] 0.17049041 0.5033910 0.5077185 0.6048211 0.6167268 0.6264364 0.6731264 #>  [362,] 0.30195725 0.4376983 0.5229335 0.5471404 0.5548141 0.5564983 0.5812133 #>  [363,] 0.60005117 0.6010209 0.6738717 0.7179053 0.8279851 0.8281021 0.8510822 #>  [364,] 0.66774590 1.3163298 1.4704140 1.4948077 1.4982230 1.5405538 1.5528732 #>  [365,] 0.40688031 0.5753531 0.6290901 0.6897839 0.7227850 0.7229793 0.7529551 #>  [366,] 0.33416754 0.6339668 0.7072508 0.7096127 0.7341859 0.7492985 0.7689684 #>  [367,] 0.77150740 0.8281860 0.8365330 0.8415089 0.8481635 0.8571622 0.8613339 #>  [368,] 0.93525318 0.9501049 1.0214541 1.0440251 1.0497149 1.0786428 1.1421249 #>  [369,] 0.75502011 0.8643716 0.8916613 0.8925923 0.9750515 1.1627505 1.1896890 #>  [370,] 0.41366461 0.5810245 0.6492271 0.6670795 0.7102363 0.7141773 0.7190354 #>  [371,] 0.22947858 0.4005975 0.4329269 0.4377666 0.4958311 0.5414789 0.5570704 #>  [372,] 0.28229287 0.3060863 0.4140120 0.4617932 0.4860057 0.4901277 0.5107906 #>  [373,] 0.42234308 0.4251424 0.6440649 0.6532035 0.6593543 0.6997124 0.7057718 #>  [374,] 0.35705946 0.4944418 0.5227325 0.6337435 0.7313741 0.7448075 0.7467064 #>  [375,] 0.43000568 0.4510068 0.4537805 0.4770084 0.4908308 0.6091098 0.6605649 #>  [376,] 0.70550896 0.8658663 1.0162033 1.1059807 1.1066440 1.1351071 1.1641759 #>  [377,] 0.73231115 0.7330094 0.7646062 0.7711267 0.8413085 0.8651759 0.8653694 #>  [378,] 0.51593162 0.6416642 0.7694242 0.8225500 0.8955663 0.9084808 0.9439012 #>  [379,] 0.46123736 0.5245417 0.6048211 0.6248637 0.6372920 0.7045773 0.7268233 #>  [380,] 0.41684967 0.4332905 0.5386192 0.5518292 0.5708686 0.5978990 0.6011880 #>  [381,] 0.47919111 0.4792568 0.4871539 0.5175486 0.5446453 0.5682192 0.6344623 #>  [382,] 0.48667127 0.5048615 0.5272385 0.5503752 0.5544435 0.5757508 0.6004304 #>  [383,] 1.39237913 1.4389659 1.4775812 1.5511146 1.6401882 1.6666768 1.7071872 #>  [384,] 1.11081929 1.1862048 1.2363080 1.3240156 1.3580938 1.3619310 1.3934562 #>  [385,] 0.84719154 0.9257695 0.9259973 0.9631997 1.0528749 1.1507484 1.2607130 #>  [386,] 0.21549985 0.2927903 0.4528098 0.4554006 0.4847586 0.5067646 0.5147386 #>  [387,] 0.25548771 0.2627143 0.3012077 0.3369672 0.5852312 0.6533586 0.6665172 #>  [388,] 0.38313595 0.4852145 0.5667683 0.5705758 0.5723201 0.5816681 0.5817390 #>  [389,] 0.36776757 0.3820516 0.5654415 0.6478635 0.6581621 0.7580703 0.7614613 #>  [390,] 0.44042104 0.4462403 0.4861098 0.6844823 0.6898711 0.6920427 0.7149602 #>  [391,] 0.37755185 0.4720687 0.4748450 0.6676814 0.6830605 0.7232436 0.7517080 #>  [392,] 0.49303475 0.6282661 0.6352669 0.7280407 0.7822611 0.7883182 0.8423544 #>  [393,] 0.24156076 0.3333525 0.4894152 0.4907465 0.6046438 0.6096974 0.6198758 #>  [394,] 0.75980226 0.9182698 1.0389936 1.0786253 1.0842766 1.1125976 1.1204943 #>  [395,] 0.79131716 0.8450893 0.8701179 0.9600946 0.9620011 1.1613341 1.1650136 #>  [396,] 0.46840057 0.6900040 0.7541661 0.7634109 0.8923103 0.9210998 0.9261443 #>  [397,] 0.39460470 0.4769464 0.4993423 0.5605158 0.5964247 0.6108362 0.6189705 #>  [398,] 0.54175410 0.6101697 0.6214295 0.7347792 0.7857347 0.8037321 0.8482199 #>  [399,] 0.42443846 0.4946278 0.4988318 0.4991808 0.5728891 0.5872002 0.6422448 #>  [400,] 0.40589754 0.5994650 0.6405285 0.6597749 0.7341665 0.7384536 0.7440294 #>  [401,] 0.33547237 0.3876053 0.5448803 0.5742499 0.5754628 0.6805831 0.7048972 #>  [402,] 0.52774869 0.7536813 0.7796129 0.8243505 0.8382165 0.8643576 0.9220884 #>  [403,] 0.61366148 0.6602462 0.7427637 0.7735705 0.8246115 0.8442161 0.8613048 #>  [404,] 0.35215632 0.4564511 0.6322821 0.6395455 0.7042088 0.7094070 0.7266282 #>  [405,] 0.50924156 0.5422210 0.5544217 0.5690209 0.5959135 0.6045659 0.6229129 #>  [406,] 0.57640862 0.7099221 0.7166143 0.7249098 0.7888289 0.8557293 0.8600432 #>  [407,] 0.27916916 0.3484067 0.4446646 0.4531318 0.4875835 0.5116676 0.5139554 #>  [408,] 0.32811395 0.3350727 0.3440006 0.4969256 0.6380791 0.6789776 0.7619706 #>  [409,] 0.33360306 0.4789346 0.4905156 0.5192757 0.5432577 0.5903237 0.6025242 #>  [410,] 0.51734179 0.8135626 0.9046579 0.9546533 0.9682437 1.0339429 1.0568210 #>  [411,] 0.51230855 0.7115000 0.7758929 0.7828679 0.9054288 1.0238655 1.1780441 #>  [412,] 0.56052284 0.6773700 0.9139025 0.9216663 1.0707815 1.0758797 1.1157012 #>  [413,] 0.27429430 0.4174707 0.4715509 0.4769901 0.5313888 0.5681010 0.5757508 #>  [414,] 0.65431994 0.7272521 0.7962587 0.8683901 0.8706834 1.0330764 1.0452828 #>  [415,] 0.52130015 0.5345360 0.6173324 0.6322821 0.6335443 0.7028651 0.7036003 #>  [416,] 0.80280506 0.8307399 0.8473081 0.9751862 0.9957300 1.0787663 1.2395073 #>  [417,] 0.63880966 0.6527405 0.7013672 0.7099813 0.7667526 0.7864823 0.8593760 #>  [418,] 0.17091574 0.2557204 0.4154745 0.4707840 0.4996657 0.5305223 0.6249691 #>  [419,] 0.91355647 0.9407524 1.1901579 1.2092175 1.2215077 1.2843890 1.2951655 #>  [420,] 0.44077352 0.4423909 0.6316720 0.6967569 0.7555210 0.7897678 0.7911129 #>  [421,] 1.18129626 1.1820783 1.2192175 1.2663894 1.4015970 1.4078856 1.5088903 #>  [422,] 0.60188092 0.7306779 0.7614894 0.8201824 0.8507603 0.8563820 0.8624440 #>  [423,] 0.37105317 0.4343819 0.4415877 0.4975265 0.4978055 0.5155221 0.6055141 #>  [424,] 1.03306172 1.0416197 1.0467315 1.1375541 1.2039755 1.2894666 1.2903858 #>  [425,] 0.44637144 0.5257725 0.5597563 0.6685950 0.6792135 0.7737699 0.7910788 #>  [426,] 0.38205163 0.4427894 0.5293472 0.5416102 0.5452154 0.5486471 0.6135617 #>  [427,] 0.92897311 1.4607150 1.7194306 1.7638615 1.8088267 1.8113200 1.8456745 #>  [428,] 0.36893463 0.5189327 0.5674679 0.6249000 0.6716065 0.6980939 0.7404938 #>  [429,] 0.31315190 0.6597764 0.7347792 0.8168133 0.8300385 0.8385543 0.8550615 #>  [430,] 0.56117283 0.9280705 1.0769471 1.0922780 1.2842654 1.3766206 1.4703591 #>  [431,] 0.35991731 0.6071260 0.6503385 0.6590381 0.6897839 0.7125915 0.7392944 #>  [432,] 0.27515565 0.6780247 0.7875097 0.8063710 0.8114488 0.8716991 0.8797149 #>  [433,] 0.32404141 0.4805979 0.5681275 0.5712551 0.5734678 0.5900957 0.6468046 #>  [434,] 0.33579434 0.5409392 0.5437083 0.5716376 0.7179293 0.7368908 0.7704097 #>  [435,] 0.51962096 0.8417451 0.8673370 0.9462979 0.9760531 1.0758839 1.1064294 #>  [436,] 0.35551633 0.5461164 0.6081071 0.7107542 0.7305726 0.7630830 0.7731162 #>  [437,] 0.22473774 0.2619194 0.3630418 0.3737517 0.4401235 0.4417458 0.4634704 #>  [438,] 0.39662159 0.4432703 0.4436377 0.4566741 0.5134027 0.5176712 0.5475328 #>  [439,] 0.24156076 0.4339481 0.4853275 0.5150846 0.5453835 0.5731871 0.6445660 #>  [440,] 0.42629419 0.4269498 0.4917449 0.5967956 0.7033093 0.7925975 0.8220188 #>  [441,] 0.47387022 0.4973497 0.5272385 0.5500262 0.5524280 0.5579955 0.5641639 #>  [442,] 0.69234816 0.8231293 0.8600432 0.8741934 0.8783775 0.9141506 0.9162641 #>  [443,] 0.26578713 0.3455166 0.5271173 0.5728187 0.6090574 0.6193783 0.6266733 #>  [444,] 0.30916496 0.3856758 0.4017785 0.4945967 0.5464797 0.5544855 0.5725951 #>  [445,] 0.50248079 0.5973751 0.6198012 0.7106098 0.7710974 0.7735319 0.7790543 #>  [446,] 0.30696916 0.4064382 0.4439416 0.5047480 0.6406330 0.6714506 0.7422157 #>  [447,] 0.94100371 1.0331354 1.0410825 1.0532556 1.1293918 1.1827213 1.2545704 #>  [448,] 0.85654824 1.1190720 1.1199056 1.1775246 1.1937552 1.2525599 1.2540978 #>  [449,] 0.72588120 0.9358353 0.9492661 1.0811068 1.0912420 1.1134560 1.1234979 #>  [450,] 0.49268324 0.5296746 0.7474774 0.7683373 0.8557396 0.8643716 0.9074240 #>  [451,] 0.40730826 0.4722252 0.4829929 0.5956886 0.6168834 0.6456856 0.6482295 #>  [452,] 0.43750473 0.4411643 0.5386192 0.5570704 0.5666451 0.5785084 0.5869566 #>  [453,] 0.27833841 0.2841270 0.3683553 0.4005975 0.4819972 0.5281680 0.5319935 #>  [454,] 0.55997084 0.6393230 0.7498951 0.7731162 0.8337882 0.8384616 0.8678513 #>  [455,] 0.39223456 0.4003260 0.4009120 0.4256820 0.4335879 0.4368795 0.4841923 #>  [456,] 0.31583768 0.3357943 0.4075892 0.4683504 0.6180513 0.6915943 0.7676689 #>  [457,] 0.19718617 0.2507500 0.2952804 0.4110020 0.4269215 0.4505302 0.4861472 #>  [458,] 0.79403055 0.9079105 0.9744997 1.0245793 1.0396396 1.0684175 1.0798204 #>  [459,] 0.41279177 0.4735638 0.4978055 0.5009526 0.5194236 0.5210512 0.5656646 #>  [460,] 0.18365652 0.3565099 0.3737517 0.4901712 0.5012997 0.5406525 0.5541087 #>  [461,] 0.33777507 0.4185361 0.4500143 0.5213931 0.5732926 0.5733587 0.6311623 #>  [462,] 0.34000005 0.4547087 0.4803415 0.4979181 0.4981605 0.5139271 0.5324105 #>  [463,] 0.50958632 0.5724994 0.5762256 0.5984237 0.6036898 0.6167249 0.6167268 #>  [464,] 0.41791948 0.5207050 0.6310681 0.6748141 0.6753137 0.7997849 0.8257319 #>  [465,] 0.41908392 0.5298873 0.6748081 0.6816221 0.7071701 0.7271169 0.7385645 #>  [466,] 1.34494781 1.5233323 1.5635876 1.6090008 1.7593662 1.7745993 1.8503743 #>  [467,] 0.79853002 0.8112394 0.9556263 1.0278128 1.0292884 1.0529251 1.0797320 #>  [468,] 0.67399602 0.8083640 0.8330092 0.8502555 0.8880128 0.8915497 0.9213053 #>  [469,] 0.63932303 0.6410085 0.7169540 0.8022048 0.8101539 0.8853278 0.8998839 #>  [470,] 0.35517167 0.5000046 0.5068350 0.5085941 0.5143304 0.5251669 0.5482755 #>  [471,] 0.36491652 0.3965035 0.5752258 0.6001995 0.6997092 0.7815906 0.8311178 #>  [472,] 0.36304515 0.5643803 0.5915972 0.6311051 0.6366774 0.6652489 0.6658170 #>  [473,] 0.15272180 0.3878751 0.4335768 0.4719275 0.5506425 0.5845838 0.5928785 #>  [474,] 0.43303048 0.4391350 0.4656768 0.5288773 0.5328568 0.5817674 0.5961361 #>  [475,] 0.53830065 1.1780441 1.1802566 1.1812963 1.3166412 1.3192053 1.3597177 #>  [476,] 0.27692957 0.3539640 0.3934326 0.4327384 0.4391350 0.4641185 0.4707840 #>  [477,] 0.30784366 0.4136345 0.4267375 0.4565310 0.5014282 0.5324105 0.5731336 #>  [478,] 0.14874895 0.3816655 0.5239113 0.6164456 0.6900380 0.6975582 0.7122184 #>  [479,] 0.54272310 0.6060152 0.6884798 0.7072447 0.7911542 0.7989374 0.8566173 #>  [480,] 0.43637557 0.7652942 0.7878777 0.8075332 0.8276442 0.9581094 0.9721621 #>  [481,] 0.30696916 0.3199699 0.3438252 0.4263777 0.4439014 0.5274743 0.6674573 #>  [482,] 0.34551656 0.4346415 0.5532540 0.5643588 0.6144827 0.6421988 0.6648602 #>  [483,] 0.50575352 0.7093871 0.7159460 0.7826749 0.8296502 0.8301152 0.8694828 #>  [484,] 0.39196996 0.4252624 0.6739281 0.7272578 0.7433350 0.7891056 0.8303995 #>  [485,] 0.32267120 0.5123086 0.5447285 0.6203968 0.7115202 0.8486390 0.8656488 #>  [486,] 0.61082321 0.6598523 0.7005643 0.8473081 0.8643576 0.9271097 0.9627590 #>  [487,] 0.37131494 0.5290405 0.6032977 0.6206803 0.6283001 0.6460744 0.6707166 #>  [488,] 0.60423508 0.6226021 1.0455526 1.1612867 1.2450324 1.2661239 1.2846899 #>  [489,] 0.60605455 0.7563084 0.8980437 0.9233367 1.0435580 1.0566689 1.0593198 #>  [490,] 0.38529405 0.5153898 0.5944632 0.6035720 0.6498777 0.6666415 0.6975582 #>  [491,] 0.69234816 0.7206454 0.7888289 0.8132450 0.8274062 0.8489513 0.8564503 #>  [492,] 1.15191239 1.3899942 1.4500010 1.4885976 1.5228824 1.5852860 1.6965329 #>  [493,] 0.56315141 0.6642650 0.6965077 0.6999140 0.7645853 0.7683081 0.7897385 #>  [494,] 0.48583868 1.1109211 1.1695009 1.3133883 1.3257371 1.3295063 1.3357156 #>  [495,] 0.78233201 1.0637702 1.1451020 1.2800477 1.3045123 1.3432057 1.3498040 #>  [496,] 0.58121331 0.5842185 0.5934716 0.7158673 0.7288453 0.8039226 0.8781543 #>  [497,] 0.60144678 0.6523766 0.7815906 0.7855782 0.7883097 0.9350030 0.9439458 #>  [498,] 0.58608188 0.9931059 1.1399638 1.1783841 1.2097972 1.2181288 1.2365478 #>  [499,] 0.63282757 0.6682973 0.6743829 0.7578613 0.7671347 0.7887201 0.8602626 #>  [500,] 0.26265001 0.5356474 0.6421611 0.6772350 0.7457229 0.7951561 0.8453708 #>  [501,] 1.38999419 1.5992446 1.8790500 2.3113869 2.3168782 2.3637341 2.3922669 #>  [502,] 0.32558987 0.4174707 0.4371221 0.4554006 0.4772252 0.5048615 0.5416199 #>  [503,] 0.48461201 0.7215688 0.7433350 0.7617940 0.7680742 0.7905453 0.7961259 #>  [504,] 0.22486970 0.2627143 0.3695717 0.4947433 0.5551474 0.5586764 0.5956886 #>  [505,] 0.68271114 0.8258154 0.8675523 0.9214783 0.9267411 0.9584324 0.9606637 #>  [506,] 0.38713800 0.4160170 0.4167471 0.5416616 0.6201974 0.6218608 0.6513026 #>  [507,] 0.35517167 0.4033861 0.4352831 0.4425477 0.4630983 0.4665478 0.4729722 #>  [508,] 0.21503155 0.4364501 0.5066574 0.5068288 0.5470138 0.5629381 0.5653868 #>  [509,] 1.35540675 1.3651020 1.4498864 1.4697750 1.4866551 1.6000226 1.6029319 #>  [510,] 1.12729374 1.1422187 1.1849896 1.2738890 1.2847577 1.2913047 1.3467737 #>  [511,] 0.33004290 0.3838357 0.5194236 0.5339004 0.5774565 0.6389957 0.6516153 #>  [512,] 0.87751687 1.0572218 1.1211695 1.1232132 1.2340452 1.2617497 1.2899045 #>  [513,] 1.26501290 1.2800477 1.3927728 1.4072841 1.4812533 1.4894414 1.5189249 #>  [514,] 0.32349377 0.4353077 0.5567052 0.5573627 0.5938147 0.5940007 0.6354609 #>  [515,] 0.46681568 0.4981513 0.5804492 0.5870340 0.6382426 0.6558298 0.6613072 #>  [516,] 0.48176089 0.4981513 0.6124427 0.6951015 0.6968820 0.7107325 0.7603987 #>  [517,] 0.56275897 0.7327818 0.7415040 0.7746998 0.7948028 0.8078147 0.8275757 #>  [518,] 0.43645014 0.4427498 0.4582420 0.4617395 0.4696348 0.4860057 0.4869942 #>  [519,] 0.30195725 0.3064522 0.4834773 0.5319833 0.5844000 0.5934716 0.6602826 #>  [520,] 0.34872796 0.4696348 0.5094419 0.5328879 0.5508058 0.5596657 0.5667683 #>  [521,] 0.22486970 0.3012077 0.4638763 0.4827970 0.5581506 0.5857969 0.6168834 #>  [522,] 0.34718697 0.4734484 0.4759376 0.4821902 0.4981192 0.5919049 0.6765002 #>  [523,] 0.37119003 0.4042716 0.4167471 0.6327125 0.6424517 0.6451651 0.6544454 #>  [524,] 0.49883178 0.5564145 0.6133631 0.6188844 0.6548673 0.6671413 0.7107542 #>  [525,] 0.51487828 0.7055090 0.7121909 0.7625581 0.8078147 0.8712902 0.9196127 #>  [526,] 0.26233166 0.3301814 0.5477472 0.5644013 0.5652963 0.6095633 0.6419645 #>  [527,] 0.44657063 0.5469588 0.6504423 0.7273693 0.9348490 0.9960069 1.0127452 #>  [528,] 0.55221954 0.6227255 0.6748081 0.6885028 0.6898711 0.6936241 0.6971507 #>  [529,] 0.60601516 0.6747779 0.7274967 0.7710522 0.7746791 0.7761110 0.7761581 #>  [530,] 0.96348909 1.0005127 1.1531303 1.1819835 1.2705730 1.2881013 1.3097788 #>  [531,] 0.51614723 0.5859331 0.6091953 0.6416642 0.6484656 0.7493636 0.7608141 #>  [532,] 0.52734415 0.5752258 0.6201989 0.6509948 0.7475855 0.7848703 0.8374849 #>  [533,] 0.22768949 0.4755288 0.5001598 0.5267358 0.5417933 0.5707032 0.6032977 #>  [534,] 0.17308916 0.3775519 0.4374424 0.4842991 0.5473634 0.5522140 0.5544129 #>  [535,] 0.27366290 0.4910223 0.5432577 0.5697910 0.6618646 0.7108046 0.7424222 #>  [536,] 0.82986354 0.8525027 0.8694440 0.8770413 0.8785766 0.9407524 0.9698302 #>  [537,] 0.50957678 0.5401574 0.5591449 0.5853550 0.6122867 0.8077789 0.8343363 #>  [538,] 0.36353777 0.3804196 0.4706606 0.4781166 0.4842991 0.5207731 0.5435039 #>  [539,] 0.12432811 0.4799947 0.7927098 0.8045342 0.8104586 0.8335825 0.8565542 #>  [540,] 0.39267342 0.5104084 0.5539836 0.5571402 0.6095633 0.6229590 0.6637908 #>  [541,] 0.28212285 0.2891919 0.4649396 0.5648903 0.5664279 0.5829420 0.6284229 #>  [542,] 0.99208071 1.0640377 1.1408177 1.2567472 1.2610097 1.2973438 1.3444573 #>  [543,] 0.48996733 0.5606936 0.5728755 0.6760014 0.7544363 0.7715961 0.7818113 #>  [544,] 0.22723214 0.3977784 0.4259536 0.4369957 0.5030719 0.5087297 0.5148810 #>  [545,] 0.32764986 0.3947949 0.3989610 0.4436377 0.5049733 0.5212736 0.5482755 #>  [546,] 0.38903127 0.4299702 0.4647006 0.4800804 0.5080255 0.5473492 0.6005693 #>  [547,] 0.22075267 0.3000063 0.6380791 0.6999140 0.7695203 0.7772380 0.7839562 #>  [548,] 0.54444892 0.7026799 0.7865930 0.8482936 0.8593760 0.8771458 0.9025465 #>  [549,] 0.41975680 0.5425809 0.6484656 0.6700281 0.6740985 0.7462301 0.7625581 #>  [550,] 0.44410572 0.4786823 0.5505203 0.6208388 0.7245477 0.7528892 0.8241554 #>  [551,] 0.34765690 0.4860027 0.5374429 0.5498394 0.5611247 0.5674918 0.5913260 #>  [552,] 0.25761193 0.2839479 0.4359787 0.4500779 0.5492644 0.6073729 0.6101469 #>  [553,] 0.32458341 0.4294108 0.4755666 0.4790972 0.5430447 0.5497086 0.5698945 #>  [554,] 0.30000634 0.3440006 0.3895970 0.5069029 0.6480851 0.6545683 0.7117059 #>  [555,] 0.57083623 0.6741173 0.7033093 0.7443693 0.7894831 0.7964902 0.8458878 #>  [556,] 0.51508459 0.5199321 0.5402096 0.5418139 0.5784783 0.6096974 0.6549053 #>  [557,] 0.35322004 0.4095795 0.6571445 0.7186039 0.7256993 0.7310167 0.7931390 #>  [558,] 1.73915157 2.0895044 2.1799612 2.2052621 2.2889129 2.3213603 2.3241489 #>  [559,] 0.32678210 0.5064336 0.5544217 0.6344623 0.6354370 0.6742242 0.6952326 #>  [560,] 0.25389733 0.4095795 0.4867599 0.5728891 0.5757414 0.6128420 0.6201974 #>  [561,] 0.57920643 0.6609895 0.7130723 0.7608231 0.8280994 0.8915774 0.9119757 #>  [562,] 0.33004290 0.3951510 0.4803121 0.5113439 0.5922088 0.6058663 0.6105139 #>  [563,] 0.29619568 0.6414745 0.6818945 0.7300882 0.7494630 0.7524761 0.8068922 #>  [564,] 0.28390248 0.3352527 0.4368724 0.4797075 0.5452154 0.5546065 0.5663818 #>  [565,] 1.70387685 1.8756984 1.9238217 1.9351767 2.0168327 2.0358703 2.0389652 #>  [566,] 0.50368519 0.5164336 0.5711820 0.6091953 0.6135240 0.6179733 0.6527461 #>  [567,] 0.27429430 0.3579049 0.4233858 0.4472829 0.4561306 0.4772252 0.4890375 #>  [568,] 0.36176548 0.4923406 0.4991808 0.5343824 0.5415747 0.5455492 0.5481736 #>  [569,] 0.58372918 0.5984751 0.6508299 0.6699247 0.7298699 0.7735197 0.8480297 #>  [570,] 0.38920400 0.6251328 0.7517080 0.7609491 0.7827158 0.8434251 0.8563041 #>  [571,] 0.44136721 0.5160107 0.5731316 0.5940345 0.6567246 0.6588093 0.6591535 #>  [572,] 0.33373156 0.4814404 0.5521197 0.7448075 0.7741427 0.7927559 0.8362222 #>  [573,] 0.23416207 0.4356454 0.5688117 0.5912199 0.5929949 0.5965354 0.6701969 #>  [574,] 0.46386001 0.4905156 0.5672952 0.6115767 0.6319799 0.6335443 0.6418135 #>  [575,] 0.44102183 0.5958669 0.6523323 0.6539635 0.7169540 0.7502026 0.7989667 #>  [576,] 0.22003989 0.5764086 0.5800283 0.6960439 0.6992767 0.7734542 0.7760067 #>  [577,] 0.52787810 0.8656258 1.0886843 1.1303904 1.1652766 1.1992359 1.2040200 #>  [578,] 0.33537141 0.4310171 0.4855791 0.5043320 0.5506841 0.6286606 0.6449115 #>  [579,] 0.48106688 0.6400865 0.6602727 0.6610452 0.6643364 0.6676988 0.6725714 #>  [580,] 0.40229399 0.4831555 0.5020988 0.5160107 0.5657945 0.5793657 0.5832154 #>  [581,] 0.35648607 0.5155221 0.5430369 0.5512025 0.5672378 0.5931377 0.6105139 #>  [582,] 0.27012072 0.4017908 0.4559433 0.4892858 0.4946278 0.5128846 0.5350863 #>  [583,] 0.35868385 0.4425961 0.6264364 0.6395027 0.6446911 0.6611604 0.6894536 #>  [584,] 0.55815062 0.5852312 0.6701959 0.6814269 0.7058457 0.7367348 0.7549490 #>  [585,] 0.44657063 0.4577985 0.7049280 0.7064780 0.7427919 0.7677238 0.7866158 #>  [586,] 0.33284522 0.3968305 0.5929588 0.6385466 0.6502117 0.6619225 0.7842259 #>  [587,] 0.17308916 0.3946946 0.4523318 0.4748450 0.4781166 0.5063630 0.5519264 #>  [588,] 0.77900189 0.7890183 0.8378151 0.8851613 0.8899777 0.9409221 1.0251435 #>  [589,] 0.56786474 0.5713880 0.6050779 0.6742909 0.6922978 0.7159223 0.7236839 #>  [590,] 1.28990446 1.4368071 1.4372491 1.6684753 1.6883546 1.7540976 1.8215611 #>  [591,] 0.34060381 0.3857767 0.4285865 0.4323910 0.5243204 0.5416102 0.5619075 #>  [592,] 0.44624031 0.4964189 0.6007497 0.6597749 0.6793760 0.7046408 0.7064299 #>  [593,] 0.16044299 0.2337616 0.3989610 0.4425961 0.4827286 0.5134027 0.5305207 #>  [594,] 0.23433208 0.2507500 0.3647389 0.3863603 0.4060251 0.4638805 0.4706503 #>  [595,] 0.17597548 0.4429149 0.4458199 0.5008248 0.6135240 0.6417925 0.6768346 #>  [596,] 0.46274619 0.5643122 0.7634109 0.7683373 0.8060857 0.8275630 0.8577206 #>  [597,] 0.48996733 0.5210512 0.5406958 0.5489483 0.5774565 0.7836787 0.8296072 #>  [598,] 0.22768949 0.5449690 0.5478941 0.5777244 0.5915972 0.6030622 0.6073392 #>  [599,] 0.83371889 0.8694239 0.8819580 0.9786088 0.9887986 1.0007794 1.1333100 #>  [600,] 0.26035703 0.5574171 0.6283340 0.6793788 0.6816118 0.7125412 0.7249124 #>  [601,] 0.37701435 0.3873969 0.4454083 0.5852220 0.6213244 0.6464179 0.6551963 #>  [602,] 0.18365652 0.2247377 0.2577553 0.3864874 0.4023448 0.5241576 0.5414872 #>  [603,] 0.43366031 0.6522712 0.8378151 0.8617993 0.8700834 0.9045392 1.0198042 #>  [604,] 0.69993429 0.7284301 0.9402911 1.1137788 1.1158997 1.1169389 1.1244440 #>  [605,] 0.29951135 0.3365124 0.4805783 0.4852801 0.4947778 0.5059454 0.5593715 #>  [606,] 0.24308049 0.3369672 0.4299477 0.4368795 0.5183246 0.5551474 0.5619075 #>  [607,] 0.44525949 0.8932878 0.9821860 1.0011803 1.0103385 1.0981862 1.1486406 #>  [608,] 0.59405249 0.6543199 0.6553937 0.7091526 0.8328801 0.8486597 0.8609763 #>  [609,] 1.02977260 1.2619621 1.2667554 1.4606998 1.5334449 1.5560651 1.5957530 #>  [610,] 0.35144018 0.5686196 0.5780670 0.6654444 0.8031539 0.8919497 0.8937318 #>  [611,] 0.39294411 0.4329269 0.4807848 0.4819972 0.4849148 0.5227979 0.5640177 #>  [612,] 0.46886255 0.5946286 0.6971507 0.7394289 0.7854985 0.8576131 0.9304374 #>  [613,] 0.51490569 0.5511763 0.9546355 1.1132546 1.1169389 1.1330129 1.2553011 #>  [614,] 0.44559324 0.5293639 0.5361539 0.5733587 0.7285486 0.7346014 0.7350405 #>  [615,] 0.33760424 0.3771229 0.5694851 0.6053445 0.6638629 0.7151035 0.7352688 #>  [616,] 0.37489759 0.6153700 0.6522712 0.6900040 0.7691259 0.7830058 0.8490819 #>  [617,] 0.38785383 0.4255550 0.5361624 0.6440649 0.6580717 0.6705406 0.6816118 #>  [618,] 0.33543684 0.3541546 0.4724177 0.5725951 0.6208388 0.6248876 0.6351238 #>  [619,] 0.49870522 0.5469588 0.7579067 0.7694242 0.7866158 0.8033215 0.9437138 #>  [620,] 0.45415534 0.6671930 0.6792135 0.6862691 0.7155112 0.7678281 0.7826749 #>  [621,] 0.33984133 0.4188059 0.4377666 0.4584733 0.4993423 0.5206577 0.5281680 #>  [622,] 0.32404141 0.4348363 0.5456857 0.5670290 0.5897818 0.6090094 0.6204706 #>  [623,] 0.43463282 0.4849148 0.6283340 0.6380633 0.6411111 0.6772921 0.7280407 #>  [624,] 0.24047378 0.2949672 0.4734230 0.4836585 0.4855279 0.5226528 0.5671062 #>  [625,] 0.38832700 0.6122867 0.6906560 0.8819580 0.9070997 0.9280705 0.9724704 #>  [626,] 0.31996990 0.4064382 0.4194307 0.5095882 0.6187073 0.6682280 0.6765002 #>  [627,] 0.21601832 0.4441057 0.4724177 0.4945967 0.5062977 0.5134793 0.5488952 #>  [628,] 0.17402163 0.2367911 0.4004923 0.4353077 0.4847487 0.4869942 0.4950905 #>  [629,] 0.80130051 0.8168133 0.8360590 0.9012890 0.9719824 0.9892314 1.0326790 #>  [630,] 0.33886686 0.6463297 0.6651778 0.7060388 0.7318452 0.7538065 0.7692197 #>  [631,] 0.34201350 0.3591081 0.4149334 0.4231522 0.4760790 0.4992524 0.5132158 #>  [632,] 0.49883170 0.7197396 0.7218012 0.7508510 0.7842259 0.7848501 0.7930338 #>  [633,] 0.40473610 0.4956102 0.7398657 0.8165282 0.9339677 0.9609719 1.0370421 #>  [634,] 0.48667127 0.5674285 0.5851370 0.6052577 0.6083226 0.6202031 0.6234698 #>  [635,] 0.32803844 0.3965035 0.5484068 0.5868525 0.6253015 0.6509948 0.6716849 #>  [636,] 0.56052284 0.6385466 0.6993452 0.7218012 0.7321719 0.8379912 0.8791882 #>  [637,] 0.60666145 0.6115239 0.6960439 0.7364444 0.7907865 0.8651759 0.9106117 #>  [638,] 0.90824995 0.9976108 1.0257840 1.0490677 1.0991771 1.1008939 1.1014870 #>  [639,] 0.74307655 0.9445222 0.9865465 1.0185952 1.0381068 1.0908697 1.1027061 #>  [640,] 0.64291176 0.6669140 0.7011364 0.7486184 0.7557675 0.8058338 0.8103042 #>  [641,] 0.35605581 0.4814404 0.7876294 0.7985339 0.8573493 0.9576553 0.9659746 #>  [642,] 0.79311997 0.7989374 0.8668125 0.8767005 0.8896757 0.9194493 0.9435230 #>  [643,] 0.29279031 0.3544750 0.3700009 0.4719275 0.5045860 0.5201948 0.5427308 #>  [644,] 0.43637557 0.4827970 0.4947433 0.7024931 0.7082306 0.7102383 0.7503552 #>  [645,] 0.38434723 0.4441885 0.5685905 0.5852424 0.5996315 0.6418135 0.6847756 #>  [646,] 0.75806006 0.7767205 0.7881615 0.8075945 0.8449039 0.9816106 0.9991894 #>  [647,] 0.34015775 0.4648615 0.5660205 0.6646483 0.6967569 0.7338786 0.7546331 #>  [648,] 0.54015739 0.6906560 0.7470331 0.7691937 0.8596595 0.8851544 0.8855184 #>  [649,] 0.21401924 0.3291718 0.3406038 0.4113986 0.4169955 0.4256820 0.4330305 #>  [650,] 1.21571383 1.6228459 1.7779071 1.8151949 1.8291248 1.8450162 1.9125968 #>  [651,] 0.73862833 0.7855138 0.8135626 0.9202073 0.9247456 1.0629530 1.1103865 #>  [652,] 0.48695987 0.4969256 0.5372878 0.5698973 0.6480851 0.6495004 0.6571974 #>  [653,] 0.59394151 0.6429569 0.6469902 0.6594809 0.6669274 0.6801128 0.7318452 #>  [654,] 0.71059489 0.7913172 0.8570968 0.9106875 0.9401968 0.9611286 0.9756189 #>  [655,] 0.19780375 0.3078437 0.3579763 0.4318495 0.4531874 0.5124364 0.5570000 #>  [656,] 0.33018138 0.3567649 0.4992524 0.5149747 0.5353460 0.5900000 0.6121609 #>  [657,] 0.36776757 0.4427894 0.5663868 0.5770576 0.6664361 0.7138950 0.7603336 #>  [658,] 0.39142869 0.4601763 0.4863964 0.5127744 0.5638167 0.5713538 0.5737622 #>  [659,] 0.46493959 0.5561894 0.7030695 0.7118153 0.7135524 0.7341962 0.7462063 #>  [660,] 0.21401924 0.2281317 0.3397789 0.4009120 0.4742309 0.5243204 0.5328568 #>  [661,] 0.44464332 0.4574371 0.4834773 0.5054884 0.5055472 0.5161832 0.5229335 #>  [662,] 0.32267120 0.5252603 0.7263464 0.7772791 0.7828679 0.7894459 0.8005508 #>  [663,] 0.23163085 0.3125665 0.3891389 0.4232646 0.4854022 0.5116676 0.5146067 #>  [664,] 1.68507968 1.7320149 1.8154012 1.8993829 1.9175140 1.9931019 2.0122906 #>  [665,] 0.37105317 0.3822649 0.4080247 0.5637485 0.5686945 0.5851032 0.6203053 #>  [666,] 1.26596347 1.2987503 1.3163879 1.3481555 1.4350144 1.4667450 1.5794637 #>  [667,] 0.38172029 0.5221992 0.6277827 0.6597764 0.6713917 0.6715206 0.7095495 #>  [668,] 0.41705624 0.4903407 0.5305223 0.5740756 0.5962643 0.5976732 0.6198012 #>  [669,] 0.37131494 0.4369859 0.4755288 0.5471576 0.5577912 0.5801553 0.6030622 #>  [670,] 0.68142692 0.7803132 0.8450893 0.9206161 0.9284356 0.9300096 0.9300310 #>  [671,] 0.31315190 0.5417541 0.7687094 0.7741071 0.8012836 0.8145714 0.8155763 #>  [672,] 0.39515951 0.4564511 0.6069523 0.6405285 0.7031803 0.7632962 0.7708018 #>  [673,] 0.66039001 0.6856915 0.8041277 0.9437138 0.9860807 0.9920807 1.0049737 #>  [674,] 0.33284522 0.5010170 0.6251130 0.6716530 0.7409058 0.7854566 0.7930338 #>  [675,] 0.38434723 0.4322912 0.4638600 0.5213002 0.5800283 0.6553089 0.6577880 #>  [676,] 0.54611205 0.6339835 0.7537169 0.7589348 0.8409048 0.8528875 0.8586295 #>  [677,] 0.36503326 0.4182829 0.4523318 0.5180707 0.5275571 0.5544129 0.6218384 #>  [678,] 0.24648209 0.5618274 0.5625347 0.6759686 0.7198735 0.7292775 0.7603987 #>  [679,] 0.58608188 0.7796129 0.7855138 0.8454423 0.9682437 1.0820030 1.0851767 #>  [680,] 0.48666539 0.4902983 0.6471791 0.7160836 0.7306741 0.7505155 0.7845608 #>  [681,] 0.27087776 0.3374291 0.4033739 0.4368724 0.5486471 0.5625667 0.5654415 #>  [682,] 0.57372655 0.8000399 0.9717136 0.9758373 1.0200868 1.0596932 1.1610597 #>  [683,] 0.45429280 0.4655817 0.7009357 0.7498951 0.8086566 0.8632858 0.8719987 #>  [684,] 0.46307271 0.5994650 0.6273540 0.7221424 0.7638539 0.7792963 0.8033483 #>  [685,] 0.49907726 0.5940525 0.6827111 0.7004509 0.8277587 0.8280008 0.8723819 #>  [686,] 1.50596458 1.5657095 1.5754641 1.6338610 1.7295999 1.7931603 1.8113775 #>  [687,] 0.41975680 0.4354461 0.5148783 0.7302572 0.7369999 0.7374324 0.7415040 #>  [688,] 0.51993210 0.6507086 0.6613144 0.6682973 0.6854089 0.6890310 0.7054623 #>  [689,] 0.41315968 0.4482383 0.4526669 0.6122105 0.6367922 0.6531001 0.6671413 #>  [690,] 0.59022782 0.6389957 0.6434926 0.7062934 0.7356794 0.7406443 0.7555210 #>  [691,] 0.36786814 0.4817609 0.6667033 0.6692368 0.7221679 0.7474076 0.7715780 #>  [692,] 0.47593764 0.5066934 0.5228171 0.6133590 0.6682280 0.6710433 0.6933420 #>  [693,] 0.34015775 0.5309749 0.6754314 0.6866783 0.7454285 0.8355015 0.8627002 #>  [694,] 0.44287676 0.5719344 0.6496431 0.7229793 0.7558851 0.7563084 0.8101539 #>  [695,] 0.43712215 0.4553386 0.5641639 0.6392469 0.6439245 0.6870271 0.7060563 #>  [696,] 0.14706566 0.4455320 0.4473325 0.4511470 0.4564653 0.4728753 0.4769149 #>  [697,] 0.65371596 0.8360590 0.8482199 0.8656258 0.8673346 0.9124285 0.9252556 #>  [698,] 0.42443846 0.4867599 0.5343824 0.5512543 0.5709348 0.6297882 0.6391369 #>  [699,] 0.30035462 0.4965954 0.5705094 0.6069573 0.6560051 0.7111043 0.7248677 #>  [700,] 0.23566961 0.2962470 0.3037289 0.3804423 0.4329317 0.4957784 0.5218996 #>  [701,] 0.34791594 0.4423909 0.6339192 0.7711267 0.8043722 0.8176418 0.8193722 #>  [702,] 0.38410060 0.4346415 0.5680075 0.6310681 0.6459038 0.6606776 0.6892405 #>  [703,] 0.89461960 1.1036450 1.1944454 1.2430173 1.2445042 1.3393180 1.3762091 #>  [704,] 0.36525783 0.5024808 0.5359625 0.6964333 0.7860382 0.8233114 0.8387448 #>  [705,] 0.56182959 0.5877482 0.7154758 0.8000923 0.8829692 0.9316102 0.9406988 #>  [706,] 0.52711728 0.5500002 0.5625617 0.6038029 0.6144827 0.6606776 0.6733218 #>  [707,] 0.25775535 0.2967886 0.3565099 0.3630418 0.5500049 0.5858786 0.5937395 #>  [708,] 0.45587612 0.4683504 0.5025979 0.5197292 0.5459429 0.5716376 0.5886034 #>  [709,] 0.50575352 0.5658166 0.5931351 0.6119784 0.6813854 0.6862691 0.7420654 #>  [710,] 0.46886255 0.5376504 0.6598523 0.6818975 0.7356749 0.7961273 0.8070495 #>  [711,] 0.69264027 0.7333815 0.9616452 1.1140323 1.1178551 1.1265248 1.1347521 #>  [712,] 0.52774869 0.7639499 0.8649104 0.8873985 0.8907783 0.9271097 0.9462811 #>  [713,] 0.22952545 0.2952804 0.2981954 0.3316853 0.4060251 0.4816673 0.5045860 #>  [714,] 0.33706501 0.5484259 0.5824204 0.6410320 0.6418896 0.6458494 0.6616116 #>  [715,] 0.89731375 1.0537978 1.0872180 1.1281765 1.2874463 1.3430162 1.4573941 #>  [716,] 0.45879487 0.5779698 0.6209997 0.6790274 0.7966283 0.8060857 0.8867858 #>  [717,] 0.35637992 0.3945140 0.4154745 0.4335879 0.4409417 0.5278541 0.5740247 #>  [718,] 0.66195643 0.6783787 0.7290759 0.7430766 0.8105196 0.8730697 0.9213143 #>  [719,] 0.32942541 0.3510939 0.5217597 0.5319833 0.5348828 0.5535397 0.5548141 #>  [720,] 0.28226619 0.7007640 0.8111915 0.8873127 0.9021124 0.9370842 0.9768958 #>  [721,] 0.19718617 0.2343321 0.3316853 0.3704672 0.4115678 0.4458681 0.4720348 #>  [722,] 0.36214779 0.3668483 0.3811909 0.4201479 0.4531318 0.4936062 0.5059454 #>  [723,] 0.56070439 0.5842185 0.7960508 0.8029320 0.8727750 0.9239359 0.9257695 #>  [724,] 0.45533863 0.4964189 0.5417933 0.5471576 0.5526583 0.6159372 0.6252936 #>  [725,] 0.17091574 0.2325982 0.4170562 0.4409417 0.5799450 0.5900520 0.6431570 #>  [726,] 0.30569236 0.4472829 0.4694141 0.5611247 0.5643803 0.5823287 0.6055500 #>  [727,] 0.49841470 0.5978341 0.6058621 0.7401596 0.7509420 0.7776361 0.8039289 #>  [728,] 0.55017438 0.5645975 0.6441751 0.6565390 0.6603900 0.6950564 0.7211326 #>  [729,] 0.56164157 0.5737265 0.6881103 0.7450978 0.7895455 0.9096213 0.9724750 #>  [730,] 0.34414173 0.4000386 0.4302289 0.4855279 0.5030719 0.5269430 0.5926604 #>  [731,] 0.62029301 0.6352669 0.6380633 0.7147159 0.7249124 0.7291427 0.7433481 #>  [732,] 0.45779847 0.6922978 0.6950564 0.7096315 0.7226073 0.7273693 0.7833891 #>  [733,] 0.63826410 0.7682346 0.7960508 0.8937318 1.0084275 1.1145695 1.1332786 #>  [734,] 0.67165298 0.6951862 0.7007640 0.7114757 0.8941862 0.9199336 0.9738467 #>  [735,] 0.33777507 0.4482289 0.5056059 0.5320780 0.5597726 0.6534410 0.6739281 #>  [736,] 0.69442557 0.8149391 0.8167236 0.8786131 0.9513195 0.9557853 0.9811198 #>  [737,] 0.26835689 0.3334680 0.3621478 0.4549819 0.4769149 0.4854022 0.4865940 #>  [738,] 0.49268324 0.6837906 0.9234186 0.9441428 1.0225519 1.1003096 1.1280842 #>  [739,] 1.29539934 1.8722235 1.9284252 2.0010740 2.0750523 2.1162269 2.1169820 #>  [740,] 0.51734193 0.6642650 0.7704097 0.8122535 0.8581814 0.8711888 0.8950791 #>  [741,] 0.34511877 0.3878751 0.4791911 0.4892858 0.4923406 0.4952032 0.5455918 #>  [742,] 0.35403636 0.4285535 0.5277485 0.5305939 0.5498010 0.5503752 0.5640177 #>  [743,] 0.57535311 0.6563266 0.6590381 0.6714506 0.7532099 0.8052437 0.8501118 #>  [744,] 0.51734179 0.7632962 0.8085228 0.8315996 0.8591507 0.8649104 0.9220884 #>  [745,] 0.32917180 0.3397789 0.3876899 0.3922346 0.4001949 0.4299477 0.4323910 #>  [746,] 0.64667460 0.6835879 0.6979654 0.8804967 0.9374665 0.9778351 0.9948617 #>  [747,] 0.44136721 0.5503266 0.6124585 0.6458406 0.6666177 0.6790456 0.6853860 #>  [748,] 0.82415540 0.8868312 1.0763748 1.1582749 1.1680500 1.2156539 1.2208195 #>  [749,] 0.41493342 0.4700809 0.4869599 0.5400945 0.5436498 0.5573906 0.5594085 #>  [750,] 0.46799293 0.5034560 0.5217597 0.6771774 0.7306261 0.7400928 0.7437343 #>  [751,] 0.58434221 0.6646158 0.6969564 0.7237858 0.7355400 0.7586271 0.7755287 #>  [752,] 0.53830065 1.3152491 1.4967682 1.5136034 1.5573514 1.6377122 1.6517498 #>  [753,] 0.33760424 0.3991980 0.4598256 0.5265409 0.6790456 0.7613518 0.8217289 #>  [754,] 0.23008354 0.3640111 0.4975521 0.5126158 0.5339640 0.5841814 0.6017285 #>  [755,] 0.54471650 0.6192503 0.6313910 0.6351238 0.7059582 0.7568730 0.7921023 #>  [756,] 0.35086757 0.5386034 0.5628925 0.5704743 0.5749911 0.5831288 0.6768378 #>  [757,] 0.45429280 0.4841030 0.7173158 1.0579114 1.1550930 1.1706918 1.2055242 #>  [758,] 0.41684967 0.4346328 0.5227979 0.5574171 0.5642680 0.5748597 0.6105969 #>  [759,] 0.22723214 0.2321507 0.3441417 0.4547368 0.4606442 0.4972859 0.5295162 #>  [760,] 0.22075267 0.3895970 0.6789776 0.7645853 0.7901658 0.8013009 0.8486597 #>  [761,] 0.81532947 0.8531185 0.8577187 0.8617993 0.8923103 0.8946196 0.9825679 #>  [762,] 0.28142206 0.3683553 0.4934612 0.5206577 0.5777682 0.6004304 0.6115999 #>  [763,] 0.38313595 0.4004923 0.4295142 0.4470150 0.4973108 0.5328879 0.5470138 #>  [764,] 0.85570464 0.8876872 0.8948302 1.0199801 1.0230997 1.0844723 1.1143924 #>  [765,] 0.92943659 0.9304374 1.0307765 1.2157138 1.2584467 1.2722371 1.3115574 #>  [766,] 0.51734193 0.7179293 0.7347693 0.8160029 0.8686874 0.8732938 0.9418266 #>  [767,] 0.24648209 0.6124427 0.6414745 0.6667033 0.6792825 0.7024752 0.7242682 #>  [768,] 0.34841500 0.3541546 0.5134793 0.5470445 0.6012403 0.6016000 0.6136057 #>  [769,] 0.52454319 0.5877482 0.6497930 0.6978403 0.8646325 0.9219122 0.9685776 #>  [770,] 0.33177611 0.3514778 0.4325350 0.4337352 0.4599327 0.4638805 0.4926394 #>  [771,] 0.46283211 0.4734484 0.5095768 0.6294922 0.6707089 0.6725714 0.6949184 #>  [772,] 0.38383571 0.3946035 0.5009526 0.5489483 0.5762502 0.6377344 0.6440527 #>  [773,] 0.37711935 0.4566741 0.5215421 0.5586764 0.5766874 0.6164888 0.6767031 #>  [774,] 0.38993683 0.6628639 0.6891124 0.7015497 0.7302572 0.7341874 0.7989318 #>  [775,] 0.83110582 0.9107652 0.9549498 1.0660545 1.0960889 1.1519532 1.1663112 #>  [776,] 0.28984342 0.3565893 0.4464113 0.4694526 0.5826878 0.5859595 0.5972087 #>  [777,] 0.31299205 0.3510939 0.4679929 0.4706264 0.5949997 0.6361994 0.6766829 #>  [778,] 0.35551633 0.3985222 0.5564145 0.6008991 0.6470808 0.6550018 0.6857016 #>  [779,] 0.95562635 1.2624698 1.4753414 1.7136959 1.7248187 1.7823646 1.8136329 #>  [780,] 0.42611375 0.6624952 0.7154758 0.8839687 0.9812302 0.9990435 1.0114281 #>  [781,] 0.79814003 0.9909280 1.0555764 1.0578797 1.1204943 1.1938586 1.1983328 #>  [782,] 0.58535499 0.7279623 0.7475855 0.8526947 0.8637983 0.8680231 0.8855184 #>  [783,] 0.21792988 0.4455932 0.4849461 0.6027970 0.6261556 0.6593693 0.6599585 #>  [784,] 0.38993683 0.5612824 0.7160182 0.8346796 0.8980437 0.9196127 0.9264201 #>  [785,] 0.43300503 0.4441885 0.4714800 0.5229825 0.5421546 0.5926604 0.6107581 #>  [786,] 0.28212285 0.4773151 0.5561894 0.5812558 0.6418716 0.6531730 0.6551963 #>  [787,] 0.38701647 0.4429149 0.5794177 0.6179733 0.7015497 0.7045773 0.7493636 #>  [788,] 0.22126147 0.4290754 0.4299702 0.4498610 0.5164665 0.5368604 0.5377246 #>  [789,] 0.27916916 0.3565893 0.3891389 0.3904213 0.4800280 0.5232374 0.5258567 #>  [790,] 0.36237544 0.5245432 0.7106098 0.8368973 0.8374019 0.8462018 0.8829692 #>  [791,] 0.50847764 0.5532540 0.5913410 0.6471791 0.6507086 0.6737630 0.7578613 #>  [792,] 0.34638187 0.3635378 0.3650333 0.4520274 0.4780638 0.5063630 0.5364357 #>  [793,] 0.96471043 1.1238617 1.1670605 1.2363080 1.3438715 1.4656662 1.5202666 #>  [794,] 0.39442631 0.5672525 0.5940007 0.6562407 0.6613072 0.7771895 0.8676490 #>  [795,] 0.44218243 0.4562070 0.4597380 0.4941077 0.4971177 0.5149583 0.5182899 #>  [796,] 0.46309833 0.4734599 0.4770930 0.4929153 0.4938839 0.5049733 0.5068350 #>  [797,] 0.35327797 0.4821675 0.5343740 0.5368604 0.5838635 0.5845838 0.5888128 #>  [798,] 0.44077352 0.4648615 0.5268685 0.5676076 0.5943828 0.6339192 0.6705211 #>  [799,] 0.43483633 0.4369859 0.4812532 0.4849461 0.4924158 0.5734678 0.5745182 #>  [800,] 0.22500973 0.4127918 0.4415877 0.5176093 0.5338640 0.5512025 0.5625347 #>  [801,] 0.33651243 0.4317180 0.4334976 0.4602431 0.4944497 0.5258567 0.5421749 #>  [802,] 0.30996952 0.4079894 0.4082440 0.5007269 0.5075303 0.5519626 0.5956112 #>  [803,] 0.42078874 0.4458199 0.5007269 0.5594309 0.5710308 0.5931351 0.6654464 #>  [804,] 0.46681568 0.5594014 0.5645912 0.5680787 0.7353619 0.7524761 0.7629788 #>  [805,] 0.67438290 0.8576244 0.8710689 1.0787180 1.0813341 1.1490374 1.1719507 #>  [806,] 0.63398347 0.7658092 0.8245560 0.8568136 0.8746828 0.9278684 0.9469909 #>  [807,] 0.79403055 1.2538734 1.3409049 1.3886341 1.4143776 1.6039930 1.6385793 #>  [808,] 0.39196996 0.6492271 0.7006185 0.7617940 0.7707938 0.7958265 0.8086566 #>  [809,] 0.53559259 0.5987499 0.6718302 0.6761828 0.6896680 0.6905674 0.6947258 #>  [810,] 0.21910513 0.4110020 0.4115678 0.4192902 0.5068288 0.5347966 0.5386177 #>  [811,] 0.31452038 0.6963547 0.7095495 0.7133073 0.7954932 0.8097445 0.8705029 #>  [812,] 0.54548829 0.5467555 0.6456530 0.6605649 0.7046408 0.7678281 0.7826580 #>  [813,] 0.39683053 0.4614771 0.4893392 0.5376430 0.6251130 0.6571221 0.7005399 #>  [814,] 0.42103663 0.5189327 0.5921624 0.7932110 0.7953206 0.8013409 0.8744982 #>  [815,] 0.73338145 1.1091642 1.3315277 1.5215019 1.5316756 1.5636798 1.5704113 #>  [816,] 0.58796392 0.6011233 0.6173346 0.6441560 0.6747761 0.6773700 0.6797189 #>  [817,] 1.36065079 1.5137655 1.5193820 1.5240171 1.5498771 1.5958677 1.6121502 #>  [818,] 0.30483279 0.6178127 0.6380806 0.6382770 0.6571221 0.7243450 0.8326125 #>  [819,] 0.40273042 0.5212736 0.5603790 0.5628116 0.5810016 0.5887656 0.6294922 #>  [820,] 0.71824740 0.7215123 0.8453708 0.8528875 0.9597073 0.9738452 1.1058711 #>  [821,] 0.38559728 0.4500143 0.4863964 0.5113181 0.5500049 0.5597726 0.5685905 #>  [822,] 0.62866059 0.6942937 0.7284301 0.7386602 0.7695203 0.8087480 0.8161729 #>  [823,] 0.14874895 0.3236660 0.5891766 0.5903342 0.5944632 0.6515879 0.6564730 #>  [824,] 0.45853317 0.4877218 0.4921739 0.5230083 0.5250451 0.5348140 0.5552367 #>  [825,] 0.34800816 0.4846637 0.5529245 0.6009061 0.6091344 0.6167648 0.6366774 #>  [826,] 0.43253503 0.4831555 0.4865940 0.5334751 0.5341619 0.5524280 0.5628177 #>  [827,] 0.55997084 0.7272578 0.7378849 0.7621492 0.8044038 0.8407370 0.8632858 #>  [828,] 0.68204381 0.7227850 0.8052437 0.8680231 0.8800067 0.9070997 0.9344276 #>  [829,] 0.28919190 0.4773151 0.4803415 0.5392919 0.5550533 0.6207553 0.6225913 #>  [830,] 0.55774317 0.6965077 0.7545314 0.7733977 0.8177852 0.9057978 0.9184425 #>  [831,] 0.36237544 0.6978403 0.7546528 0.7967500 0.8791270 0.8803966 0.8834623 #>  [832,] 0.47868229 0.7783767 0.8286614 0.8366864 0.8746035 0.8868312 0.9465115 #>  [833,] 0.43357679 0.4734693 0.4909328 0.5312809 0.5519626 0.5710308 0.5838635 #>  [834,] 0.40273042 0.5086296 0.6707089 0.6912846 0.7190484 0.7190719 0.7273207 #>  [835,] 0.29819539 0.3870360 0.4016753 0.4192902 0.4458681 0.4505302 0.4650588 #>  [836,] 0.35797635 0.3874699 0.4290754 0.4414033 0.4415019 0.4950905 0.5380901 #>  [837,] 0.24728549 0.3652578 0.5973751 0.6058621 0.6714878 0.7875077 0.8330189 #>  [838,] 0.43114166 0.7145558 0.7729599 0.7989667 0.8771213 0.8853278 0.9082500 #>  [839,] 0.28226619 0.6951862 0.7774018 0.8110518 0.8782227 0.8891517 0.9318547 #>  [840,] 0.36893463 0.4210366 0.5944991 0.6127205 0.6323531 0.6557683 0.7007896 #>  [841,] 0.66544443 0.7079532 0.7227111 0.8612166 0.8741109 0.8808184 0.9161539 #>  [842,] 0.23240441 0.3125665 0.3472597 0.4421824 0.4473325 0.4742903 0.5013366 #>  [843,] 0.53765037 0.7394289 0.7537169 0.7876056 0.8028051 0.9627590 1.0137468 #>  [844,] 0.39681078 0.4223431 0.6354693 0.7994573 0.8189176 0.8444658 0.8649676 #>  [845,] 0.54908168 0.8796845 0.9251165 0.9912498 1.0151577 1.0183992 1.0188981 #>  [846,] 0.34382525 0.3694933 0.4439416 0.6071260 0.6187073 0.6506722 0.6954510 #>  [847,] 0.30855503 0.4296335 0.4358069 0.5168948 0.5498010 0.5910771 0.5998957 #>  [848,] 0.25249506 0.3561176 0.3708418 0.3972535 0.5192776 0.5754905 0.6337435 #>  [849,] 0.33507272 0.4597374 0.5069029 0.5285431 0.5372878 0.6001093 0.6130547 #>  [850,] 0.17597548 0.3870165 0.5594309 0.6248637 0.6527461 0.6582989 0.6609336 #>  [851,] 0.35295760 0.4630727 0.5233075 0.7415390 0.7522670 0.7865930 0.8056994 #>  [852,] 0.31452038 0.5221992 0.5249327 0.6202899 0.6636930 0.6819790 0.7412960 #>  [853,] 1.06356035 1.0736661 1.0825259 1.0962366 1.2298611 1.2869292 1.2916757 #>  [854,] 0.96573690 1.1756648 1.1910772 1.2641272 1.3102195 1.3528209 1.3630859 #>  [855,] 0.56388819 0.6959618 0.7599807 0.7856879 0.8119880 0.8185857 0.8418481 #>  [856,] 0.36604246 0.4760026 0.4901277 0.4980567 0.6008453 0.6148009 0.6341309 #>  [857,] 0.38214516 0.5011114 0.5160354 0.6922482 0.7856879 0.8467618 0.9077031 #>  [858,] 0.59267044 0.6421611 0.6810884 0.7180966 0.7294620 0.7447693 0.7462063 #>  [859,] 0.35829338 0.6209997 0.6765025 0.6980939 0.7291427 0.7454981 0.7605660 #>  [860,] 0.35107872 0.4628321 0.4821902 0.5628116 0.5663818 0.5908624 0.6366756 #>  [861,] 0.48666539 0.7148040 0.8065527 0.8443996 0.8621241 0.9785859 0.9832066 #>  [862,] 0.36675682 0.4541553 0.6117694 0.7093871 0.7282900 0.7284700 0.7376806 #>  [863,] 0.44102183 0.7006185 0.7156137 0.8526129 0.8576936 0.8646028 0.8719987 #>  [864,] 0.25530869 0.5100279 0.6222739 0.7004509 0.7518164 0.7927098 0.8247377 #>  [865,] 0.35107872 0.4073083 0.4727952 0.4797075 0.5887656 0.5978246 0.6011425 #>  [866,] 0.20711353 0.2128669 0.2962470 0.4271706 0.4383742 0.5015894 0.5419253 #>  [867,] 0.49074646 0.5218996 0.5402898 0.5666667 0.5851182 0.5921624 0.6165753 #>  [868,] 0.38226491 0.4330564 0.4343819 0.4789346 0.4973497 0.6238698 0.6618646 #>  [869,] 0.20119578 0.5274743 0.5727556 0.5795555 0.6107581 0.6321618 0.6506722 #>  [870,] 0.34000005 0.5523149 0.5835526 0.5923980 0.6091881 0.6279973 0.6840545 #>  [871,] 0.40824403 0.5111314 0.5128921 0.5586927 0.5952777 0.6600823 0.6684693 #>  [872,] 0.41601699 0.4297828 0.4584733 0.4952032 0.5350863 0.5674021 0.5813493 #>  [873,] 0.56979095 0.5843422 0.6339161 0.6882297 0.7151055 0.7386283 0.7734542 #>  [874,] 0.65237655 0.6812469 0.7236839 0.7454451 0.8110938 0.8311178 0.9366361 #>  [875,] 0.42184296 0.4502727 0.4504206 0.4829929 0.6192943 0.6400865 0.6467567 #>  [876,] 0.33346801 0.3811909 0.4237522 0.4528098 0.4738702 0.5018809 0.5075120 #>  [877,] 0.40802474 0.4975265 0.5176093 0.5593482 0.6650764 0.6870879 0.6948454 #>  [878,] 0.67952156 0.6989833 0.7085963 0.7382393 0.7438888 0.8188065 0.8575808 #>  [879,] 0.52657678 0.5467555 0.5681275 0.5865694 0.7248411 0.7300095 0.7356286 #>  [880,] 0.21551060 0.3874699 0.3986045 0.4015032 0.4855791 0.5016559 0.5164665 #>  [881,] 0.38577668 0.4169955 0.4356454 0.4523469 0.4742309 0.4904582 0.5262045 #>  [882,] 0.56579449 0.5672378 0.5858722 0.5922482 0.6274278 0.6352016 0.6591535 #>  [883,] 0.59284156 0.6624952 0.8139930 0.8322004 0.9945305 1.0395810 1.1360815 #>  [884,] 0.35648607 0.4240218 0.4803121 0.4943045 0.5196530 0.5445057 0.6082788 #>  [885,] 0.53011276 0.6101697 0.6716065 0.7966283 0.8490819 0.8710689 0.9369868 #>  [886,] 0.68088921 0.8565482 0.8652427 0.9079105 0.9379848 0.9565635 0.9650364 #>  [887,] 0.14706566 0.3842350 0.4784125 0.5095337 0.5187470 0.5218255 0.5586692 #>  [888,] 0.44150652 1.0596932 1.2575503 1.3015299 1.3514940 1.3968001 1.4491465 #>  [889,] 0.54753283 0.5853666 0.6010209 0.6263943 0.7082306 0.7190484 0.7254835 #>  [890,] 0.51972920 0.5291272 0.5473492 0.5569819 0.5688599 0.6242691 0.6411027 #>  [891,] 0.46645317 0.5035358 0.5147386 0.5518292 0.5550570 0.5851370 0.6037221 #>  [892,] 0.43151667 0.4339481 0.4894152 0.4957784 0.5787041 0.5879778 0.5921479 #>  [893,] 0.54620478 0.7160182 0.7341874 0.7608141 0.7634351 0.7855782 0.8240498 #>  [894,] 0.26233166 0.3567649 0.4505434 0.5104084 0.5520312 0.6066468 0.6306655 #>  [895,] 0.59990667 0.6372920 0.6738717 0.6780247 0.7835165 0.8307043 0.8752580 #>  [896,] 0.44276402 0.4725503 0.5233075 0.5444489 0.6388097 0.7417904 0.7792963 #>  [897,] 0.61366148 0.6422448 0.6548673 0.6628541 0.7373350 0.8047808 0.8112394 #>  [898,] 1.13993621 1.2238417 1.2944929 1.4138356 1.4223752 1.5587307 1.5715766 #>  [899,] 0.41880586 0.4297828 0.4559433 0.4602431 0.4657972 0.4769464 0.5013366 #>  [900,] 0.44287676 0.5037232 0.6410085 0.7145558 0.8573915 0.8691765 0.8887671 #>  [901,] 0.70951869 0.7227111 0.7655611 0.9049409 1.1103051 1.1436977 1.1671287 #>  [902,] 0.17402163 0.2815989 0.3234938 0.4973108 0.5245936 0.5454948 0.5846517 #>  [903,] 0.51490569 0.6955637 0.9402911 0.9713093 0.9992002 1.0926981 1.1465395 #>  [904,] 0.16379892 0.4782800 0.4924158 0.5001598 0.5577912 0.5829803 0.6159372 #>  [905,] 0.64480070 0.7569891 0.9153377 0.9287700 0.9294366 1.0306542 1.1035669 #>  [906,] 0.26835689 0.3636692 0.3863603 0.4232646 0.4511470 0.4564327 0.4722120 #>  [907,] 0.50805535 0.5762502 0.5965354 0.6315937 0.6394524 0.6589275 0.7062934 #>  [908,] 0.38125326 0.4157032 0.4805979 0.5193114 0.5658166 0.5713880 0.5897818 #>  [909,] 0.23253009 0.3691577 0.4070091 0.5777244 0.6250401 0.6715531 0.7055877 #>  [910,] 0.38903127 0.4017785 0.4498610 0.4847487 0.4936195 0.5238938 0.5465308 #>  [911,] 0.59440990 0.6989068 0.6995980 0.7242203 0.7455946 0.7480645 0.7795465 #>  [912,] 0.29872606 0.4707987 0.4806273 0.4906690 0.6176954 0.6193783 0.6317046 #>  [913,] 0.82461152 0.8591310 0.8731408 0.9164328 1.0578797 1.0834695 1.1278420 #>  [914,] 0.67952156 0.9075966 0.9496742 0.9526848 1.0082962 1.0166035 1.1136135 #>  [915,] 0.44171162 0.4928736 0.5012118 0.6263943 0.6324206 0.6440154 0.6997098 #>  [916,] 0.29134698 0.3804423 0.4118020 0.4271706 0.5402898 0.5544855 0.5822610 #>  [917,] 0.21910513 0.4578056 0.5066574 0.5338640 0.5411180 0.5637485 0.5884009 #>  [918,] 0.80003296 0.8520190 0.8595147 0.9993802 1.0713708 1.0777662 1.0786178 #>  [919,] 0.58522196 0.6448007 0.6532442 0.6655542 0.7092594 0.7155112 0.7459836 #>  [920,] 0.36644829 0.3914287 0.4510571 0.6330261 0.6349593 0.6370497 0.6568489 #>  [921,] 0.43640664 0.5015894 0.5326803 0.5509312 0.5567052 0.5991453 0.6388802 #>  [922,] 0.50561703 0.5913410 0.5933649 0.7671347 0.7845608 0.9111170 0.9142453 #>  [923,] 0.32803844 0.4338809 0.5207731 0.5649189 0.6001995 0.6045659 0.6381594 #>  [924,] 0.35266986 0.3835013 0.5095863 0.5653659 0.5709348 0.5956112 0.6124346 #>  [925,] 0.64979301 0.7646062 0.8164882 0.8276377 0.8368973 0.8421748 0.8771384 #>  [926,] 0.23163085 0.2324044 0.4564653 0.4722120 0.4800280 0.5017003 0.5080255 #>  [927,] 0.32922558 0.3934326 0.5095337 0.5121672 0.5194180 0.5259880 0.5288773 #>  [928,] 0.79814003 0.9533309 1.0389936 1.1709526 1.1749098 1.1781384 1.2001907 #>  [929,] 0.39267342 0.5086939 0.5477472 0.5520312 0.6469049 0.6839461 0.6940983 #>  [930,] 0.29134698 0.3037289 0.3091650 0.3305156 0.4383742 0.4936195 0.5488952 #>  [931,] 0.29872606 0.4131597 0.4795506 0.5665091 0.5997251 0.6136057 0.6261643 #>  [932,] 0.42677834 0.4411643 0.5686196 0.6174766 0.6513026 0.6731724 0.7777964 #>  [933,] 0.39206430 0.5012118 0.5589393 0.7086554 0.7179053 0.7529551 0.7558851 #>  [934,] 0.40473610 0.7515701 0.8153097 1.0193305 1.1129096 1.1454856 1.2042223 #>  [935,] 0.36401105 0.4486307 0.4561306 0.4769901 0.4926383 0.5446308 0.5739571 #>  [936,] 0.83073988 0.8819863 1.0641047 1.0782516 1.0969681 1.1447650 1.2193489 #>  [937,] 0.33591867 0.3466916 0.3873969 0.5139271 0.5550533 0.5812558 0.5829420 #>  [938,] 0.04497083 0.5870115 0.5876477 0.5898424 0.6302899 0.6714246 0.6754866 #>  [939,] 0.53443537 0.5655940 0.5792064 0.7051456 0.7086461 0.7153976 0.8056811 #>  [940,] 0.88640969 1.1744302 1.2819133 1.3042470 1.3137897 1.4205330 1.4232624 #>  [941,] 0.55774317 0.5631514 0.7511748 0.7522670 0.7901658 0.7962587 0.8298927 #>  [942,] 0.35991731 0.3694933 0.4263777 0.5047480 0.5095882 0.6563266 0.7308714 #>  [943,] 0.15739874 0.2999043 0.3060863 0.3792610 0.4267138 0.4280612 0.4582420 #>  [944,] 0.46932208 0.5688599 0.6562525 0.7224982 0.7271169 0.7447693 0.7451598 #>  [945,] 0.33816647 0.5002608 0.5497086 0.5832154 0.5839837 0.5987499 0.6531255 #>  [946,] 0.65787838 0.9657369 0.9883514 1.0701032 1.1374992 1.1447650 1.2451739 #>  [947,] 0.50561703 0.6266733 0.6672829 0.6746814 0.7006440 0.7663563 0.7955146 #>  [948,] 0.58372918 0.7636551 0.8544198 0.9077602 0.9096541 0.9287029 0.9601853 #>  [949,] 0.31354966 0.3466916 0.3770144 0.4981605 0.5835526 0.6080251 0.6379400 #>  [950,] 0.26351243 0.3076413 0.4308061 0.4694526 0.5942378 0.6482221 0.6509040 #>  [951,] 0.18607074 0.4871539 0.5036852 0.5189966 0.5335565 0.5425809 0.5678585 #>  [952,] 0.37747986 0.4925961 0.5129245 0.5213931 0.5320780 0.6816017 0.7071654 #>  [953,] 0.43434151 0.4537805 0.4782800 0.5454883 0.5546442 0.5803326 0.6204706 #>  [954,] 0.54966756 0.5632566 0.5648903 0.6048902 0.6158045 0.6161821 0.6182972 #>  [955,] 0.26783037 0.3555067 0.4599327 0.5020988 0.5503266 0.5731316 0.5883047 #>  [956,] 0.29496717 0.3133610 0.5002608 0.5079815 0.5430447 0.5891322 0.5961361 #>  [957,] 0.32511397 0.3617655 0.3835013 0.5075303 0.5512543 0.5762256 0.5950332 #>  [958,] 0.45042063 0.4606442 0.4727952 0.5148810 0.5263058 0.5962643 0.6366756 #>  [959,] 0.17370456 0.3076413 0.3279429 0.4852801 0.4944497 0.5166436 0.5732934 #>  [960,] 0.35705946 0.4410636 0.4516268 0.5754905 0.6508299 0.6886539 0.8302582 #>  [961,] 0.22813174 0.4001949 0.4003260 0.4113986 0.4827286 0.5053651 0.5508058 #>  [962,] 0.79111290 0.8337189 0.9096423 0.9653220 0.9693479 1.0392179 1.0942301 #>  [963,] 0.39206430 0.4417116 0.5213441 0.5853666 0.6000512 0.6460923 0.6988536 #>  [964,] 0.49034069 0.5703550 0.6110425 0.6360577 0.6465991 0.6549053 0.6917995 #>  [965,] 1.03453276 1.0574077 1.1989866 1.2401557 1.2488760 1.2885182 1.3480125 #>  [966,] 0.47146486 0.5787526 0.7349696 0.7509420 0.8018245 0.8678513 0.8806975 #>  [967,] 0.51784333 0.5368353 0.5718766 0.6238143 0.6354693 0.6705881 0.7379584 #>  [968,] 0.68204381 0.9912498 1.0265272 1.2226328 1.3495796 1.3968221 1.4309520 #>  [969,] 0.43544614 0.5446717 0.6081071 0.6550018 0.7121909 0.7462301 0.8047521 #>  [970,] 0.67468144 0.8115864 0.8311740 0.8576452 0.8817724 0.8970071 0.9092255 #>  [971,] 0.25530869 0.4229574 0.6714246 0.6844769 0.7469655 0.7584307 0.7610679 #>  [972,] 0.41437972 0.6251328 0.6979654 0.7523700 0.8096269 0.8257021 0.8363396 #>  [973,] 0.46068409 0.5099019 0.5453835 0.6073536 0.6115334 0.6494149 0.6606911 #>  [974,] 0.50560586 0.5682722 0.5732926 0.7049280 0.7061830 0.7096315 0.7706464 #>  [975,] 0.74582316 0.7609546 0.8046738 0.8240498 0.8241563 0.8281400 0.8356967 #>  [976,] 0.33525273 0.3374291 0.3817311 0.4523469 0.4536032 0.4987909 0.6120957 #>  [977,] 0.23008354 0.4954478 0.5046153 0.5614417 0.5616416 0.5828565 0.5882024 #>  [978,] 0.49841470 0.6714878 0.7688076 0.7764392 0.8018245 0.8105688 0.8233114 #>  [979,] 0.52526029 0.5345360 0.5447285 0.6395455 0.7031803 0.7376332 0.7483666 #>  [980,] 0.24785601 0.3852941 0.3986045 0.5758994 0.6449115 0.6810014 0.7294620 #>  [981,] 0.63397320 0.6394524 0.6664361 0.6701969 0.6802607 0.7022022 0.7301337 #>  [982,] 0.45580842 0.5715196 0.5749911 0.5859775 0.6681737 0.6822274 0.7166143 #>  [983,] 0.50101698 0.5376430 0.5929588 0.7114757 0.7489781 0.7692118 0.7773591 #>  [984,] 0.19780375 0.4136345 0.4339700 0.4415019 0.4979181 0.6075412 0.6091881 #>  [985,] 0.63176827 0.7092594 0.8033928 0.8673370 0.9140608 0.9153377 1.0441789 #>  [986,] 0.36491652 0.5273441 0.6032080 0.6253015 0.7454451 0.7729599 0.7883097 #>  [987,] 0.44276402 0.6742267 0.7026799 0.7415390 0.7864823 0.8683901 0.9982356 #>  [988,] 0.44525949 0.8690679 0.8875176 0.9267411 1.0588732 1.0614233 1.0699795 #>  [989,] 0.46932208 0.5569819 0.5886034 0.6532035 0.6885028 0.7242253 0.7372330 #>  [990,] 0.27366290 0.4653143 0.6021361 0.6025242 0.6380806 0.6693098 0.6744915 #>  [991,] 0.20711353 0.2356696 0.3305156 0.3670160 0.4118020 0.4364066 0.5464797 #>  [992,] 0.37440774 0.7086461 0.7418901 0.7442849 0.7787907 0.7836854 0.7855291 #>  [993,] 1.04193676 1.0992335 1.1503974 1.1741563 1.2870854 1.3807208 1.4045472 #>  [994,] 0.45879487 0.5301128 0.5747591 0.6214295 0.7605660 0.8673346 0.8709480 #>  [995,] 0.48610978 0.5967973 0.6007497 0.6189824 0.6356349 0.7741783 0.7854985 #>  [996,] 0.40589754 0.5606936 0.6975627 0.7258812 0.7362571 0.7638539 0.7670559 #>  [997,] 0.95463549 1.1054185 1.1069747 1.1304412 1.2374547 1.4004799 1.4737834 #>  [998,] 0.85278886 0.9860807 1.0845824 1.2091892 1.2122146 1.2567472 1.3275814 #>  [999,] 0.33373156 0.3560558 0.6230229 0.6408758 0.6742086 0.7076926 0.8252286 #> [1000,] 0.12432811 0.4822970 0.7518164 0.7584307 0.8035997 0.8186917 0.8575808 #>              [,8]      [,9]     [,10] #>    [1,] 1.0220903 1.0506990 1.0647866 #>    [2,] 1.0159804 1.0628464 1.0808911 #>    [3,] 0.6555239 0.6691817 0.6939634 #>    [4,] 0.8153295 0.8323242 0.8576244 #>    [5,] 0.7755287 0.8105826 0.8419308 #>    [6,] 0.9605567 0.9751774 0.9853637 #>    [7,] 0.6006658 0.6082166 0.6575454 #>    [8,] 0.9434125 0.9569375 0.9573127 #>    [9,] 0.8578887 0.8690163 0.9022197 #>   [10,] 1.1059807 1.1271065 1.2717197 #>   [11,] 0.9275638 0.9374665 0.9629951 #>   [12,] 0.8683344 0.8833672 0.8889993 #>   [13,] 0.9806743 0.9860205 1.0262920 #>   [14,] 0.8045830 0.8120747 0.8122041 #>   [15,] 1.1613124 1.1683864 1.1694879 #>   [16,] 0.7096127 0.7521758 0.7795502 #>   [17,] 0.5288156 0.5698295 0.5967761 #>   [18,] 0.6856766 0.7122816 0.7510326 #>   [19,] 1.1743609 1.2663257 1.2730675 #>   [20,] 0.5036007 0.5465379 0.5710962 #>   [21,] 0.8614368 0.8647220 0.9100972 #>   [22,] 0.4877218 0.5036007 0.5085941 #>   [23,] 0.8889993 0.9078457 0.9205416 #>   [24,] 0.6778038 0.6823220 0.6916917 #>   [25,] 0.7951561 0.9031122 0.9116083 #>   [26,] 0.7183941 0.7444101 0.7563863 #>   [27,] 0.5881498 0.6069905 0.6132131 #>   [28,] 0.6360646 0.6735662 0.7085963 #>   [29,] 0.6846481 0.6876163 0.7291948 #>   [30,] 1.0284256 1.0312844 1.0480669 #>   [31,] 0.7609546 0.7702795 0.8113416 #>   [32,] 0.5915577 0.6097883 0.6270160 #>   [33,] 0.7015258 0.7143286 0.7274967 #>   [34,] 0.8280008 0.8410305 0.8838150 #>   [35,] 0.6646158 0.6752053 0.6759780 #>   [36,] 0.5115982 0.5658013 0.6014117 #>   [37,] 0.9767749 0.9812302 0.9813567 #>   [38,] 0.6544361 0.6599681 0.6723698 #>   [39,] 0.5575974 0.5998258 0.6160434 #>   [40,] 1.0114281 1.0269782 1.0689315 #>   [41,] 1.0221192 1.0405471 1.0802871 #>   [42,] 0.5539836 0.5670290 0.5742499 #>   [43,] 1.1136135 1.1143924 1.1565844 #>   [44,] 1.2811282 1.3083940 1.3553939 #>   [45,] 1.7795953 1.7843617 1.8282038 #>   [46,] 1.3636859 1.3862933 1.4477444 #>   [47,] 1.1656563 1.1768936 1.2009966 #>   [48,] 0.6516211 0.6789018 0.6822214 #>   [49,] 0.6571013 0.6922736 0.7112233 #>   [50,] 0.9127270 0.9160051 0.9327613 #>   [51,] 0.7005399 0.7818339 0.7852307 #>   [52,] 0.6050779 0.6813854 0.7484952 #>   [53,] 0.9623091 0.9637074 0.9640488 #>   [54,] 0.9004985 0.9043681 0.9113352 #>   [55,] 0.5764813 0.5861439 0.6036196 #>   [56,] 0.9721654 0.9896678 1.0213423 #>   [57,] 1.2183686 1.2607060 1.2665570 #>   [58,] 0.6979966 0.7376806 0.7692197 #>   [59,] 0.9177779 0.9393185 0.9394270 #>   [60,] 0.7310089 0.7778650 0.8020409 #>   [61,] 0.6713180 0.7570872 0.7576333 #>   [62,] 0.7238832 0.7438888 0.7741449 #>   [63,] 0.5693800 0.5731336 0.6171722 #>   [64,] 0.8134684 0.8155012 0.8486851 #>   [65,] 0.6314431 0.6620528 0.6695307 #>   [66,] 0.7487702 0.7510326 0.7665815 #>   [67,] 0.7037280 0.7139507 0.7341633 #>   [68,] 0.6670795 0.7039944 0.7103590 #>   [69,] 0.5590320 0.5826087 0.6090574 #>   [70,] 1.0705625 1.0839160 1.1077849 #>   [71,] 0.7925975 0.8267848 0.8600750 #>   [72,] 0.4665478 0.4980567 0.5050926 #>   [73,] 0.6832122 0.7127399 0.7301544 #>   [74,] 0.6706489 0.7036290 0.7122281 #>   [75,] 0.9944253 1.0938387 1.1284889 #>   [76,] 0.7341633 0.7386602 0.7543114 #>   [77,] 0.7444101 0.7878845 0.8116886 #>   [78,] 0.7183941 0.7242253 0.7437343 #>   [79,] 0.6669422 0.6838606 0.7015809 #>   [80,] 1.7852066 1.9035128 1.9593996 #>   [81,] 1.2074716 1.2937300 1.3053031 #>   [82,] 0.8501118 0.8510822 0.8887671 #>   [83,] 0.6912846 0.7224415 0.7439148 #>   [84,] 1.2312541 1.2640422 1.2865493 #>   [85,] 1.0518943 1.0554476 1.0708872 #>   [86,] 0.6896308 0.7412201 0.7649269 #>   [87,] 0.7517473 0.7538065 0.7627878 #>   [88,] 0.6607499 0.6651778 0.6755015 #>   [89,] 0.8049486 0.8602626 0.9045392 #>   [90,] 0.7128878 0.7728106 0.8510530 #>   [91,] 0.7852307 0.7854566 0.8330092 #>   [92,] 1.7256766 1.7263170 1.7344674 #>   [93,] 0.6820320 0.6995980 0.7385645 #>   [94,] 0.9136147 1.0265890 1.0361744 #>   [95,] 0.6844769 0.6987678 0.7313320 #>   [96,] 1.1858038 1.2298611 1.2433319 #>   [97,] 0.9149957 1.1553283 1.1715203 #>   [98,] 0.6350549 0.6468977 0.6569167 #>   [99,] 0.6095392 0.6515879 0.7125169 #>  [100,] 0.7548809 0.7640128 0.7852657 #>  [101,] 0.8339963 0.8746430 0.8802706 #>  [102,] 0.8803966 0.9150893 0.9655447 #>  [103,] 1.3828986 1.3844780 1.4077336 #>  [104,] 0.6973268 0.7098145 0.7467064 #>  [105,] 0.5697776 0.6048633 0.6226070 #>  [106,] 1.0555791 1.0815560 1.0834790 #>  [107,] 0.5333565 0.5858786 0.5920383 #>  [108,] 0.7323111 0.7431155 0.7739945 #>  [109,] 0.6553638 0.7204231 0.7339759 #>  [110,] 1.4211427 1.5612817 1.5691502 #>  [111,] 0.8804201 0.8804967 0.9133936 #>  [112,] 1.8300943 1.8462969 1.8554780 #>  [113,] 0.6681737 0.7201891 0.7234314 #>  [114,] 0.9264201 0.9446354 0.9898591 #>  [115,] 1.0305274 1.0873706 1.1108897 #>  [116,] 0.7776361 0.8285550 0.8445627 #>  [117,] 0.8105688 0.8334105 0.8344281 #>  [118,] 0.5251669 0.5258499 0.5761898 #>  [119,] 0.6680991 0.6735608 0.6832122 #>  [120,] 0.5456871 0.5893277 0.5902274 #>  [121,] 0.7243613 0.7391918 0.7430023 #>  [122,] 0.6011233 0.6619225 0.7385597 #>  [123,] 0.6637908 0.6920283 0.7221301 #>  [124,] 0.6622352 0.6793424 0.6797925 #>  [125,] 1.4978961 1.5240171 1.5591992 #>  [126,] 0.8145714 0.8294044 0.8933134 #>  [127,] 0.6213495 0.6382426 0.6421234 #>  [128,] 0.6497090 0.6654464 0.6723698 #>  [129,] 0.7529188 0.7531056 0.8286505 #>  [130,] 0.8415089 0.8776250 0.8833272 #>  [131,] 0.9066364 0.9705027 0.9867259 #>  [132,] 0.6082166 0.6088717 0.6183626 #>  [133,] 0.5901790 0.5906260 0.6049659 #>  [134,] 0.7160267 0.7525095 0.7664416 #>  [135,] 0.5871855 0.5888006 0.5958864 #>  [136,] 0.5596206 0.5888128 0.5969488 #>  [137,] 0.8632859 0.8702170 0.9241328 #>  [138,] 0.6115767 0.6173324 0.6180640 #>  [139,] 0.8219311 0.8441528 0.8611271 #>  [140,] 0.7012192 0.7072508 0.7099819 #>  [141,] 0.5743078 0.6728713 0.6747774 #>  [142,] 0.5263058 0.5891322 0.6317845 #>  [143,] 0.6099109 0.6164456 0.6347685 #>  [144,] 0.8930163 0.9479502 0.9620478 #>  [145,] 1.0256061 1.0524403 1.0587543 #>  [146,] 0.5566784 0.5713538 0.5788591 #>  [147,] 0.5543984 0.5705758 0.5721490 #>  [148,] 0.9795626 1.0067947 1.0458673 #>  [149,] 0.8637182 0.9008321 0.9043360 #>  [150,] 0.5414789 0.5788055 0.5862132 #>  [151,] 0.5853790 0.5875525 0.5915577 #>  [152,] 0.7714320 0.7798431 0.7872667 #>  [153,] 0.9014666 0.9705633 0.9777831 #>  [154,] 1.0157654 1.0779330 1.0913184 #>  [155,] 0.9316542 0.9658182 0.9670866 #>  [156,] 0.6073392 0.6131069 0.6592461 #>  [157,] 1.1114114 1.1454856 1.1555352 #>  [158,] 0.6052577 0.6307465 0.7290489 #>  [159,] 0.6285511 0.6381594 0.6443042 #>  [160,] 0.7880060 0.8260032 0.8534824 #>  [161,] 0.6633763 0.6657410 0.6797596 #>  [162,] 0.8476128 0.8624028 0.8771263 #>  [163,] 0.7845580 0.8266930 0.8318053 #>  [164,] 0.7392637 0.7512895 0.8111425 #>  [165,] 1.2922349 1.3063313 1.3084353 #>  [166,] 0.9128304 0.9454870 1.0354152 #>  [167,] 0.6104109 0.6456856 0.6493743 #>  [168,] 0.6152847 0.6210218 0.6397210 #>  [169,] 0.9241328 0.9419218 1.1478319 #>  [170,] 0.6543718 0.6672829 0.7638711 #>  [171,] 0.6459038 0.6709559 0.6813143 #>  [172,] 0.6297882 0.6436494 0.6455486 #>  [173,] 1.1226844 1.1330129 1.2040133 #>  [174,] 1.0910784 1.1286312 1.1740047 #>  [175,] 1.1304412 1.1901069 1.1943255 #>  [176,] 0.7143797 0.7184307 0.7481196 #>  [177,] 0.8513361 0.8603842 0.8674875 #>  [178,] 0.6705592 0.6735620 0.6778038 #>  [179,] 1.0194385 1.0333731 1.0398635 #>  [180,] 0.6132131 0.6198758 0.6648093 #>  [181,] 0.6900043 0.7318831 0.7641128 #>  [182,] 0.6079576 0.6144660 0.6170095 #>  [183,] 0.5681010 0.5703633 0.6560972 #>  [184,] 2.0221354 2.0532234 2.0724232 #>  [185,] 1.0225519 1.0345328 1.0356459 #>  [186,] 0.5291272 0.5727759 0.5803860 #>  [187,] 0.8187429 0.8696613 0.8934775 #>  [188,] 0.8677932 0.8900682 0.9412017 #>  [189,] 0.7229251 0.7349696 0.7951147 #>  [190,] 0.5737622 0.5920383 0.6537043 #>  [191,] 1.3769688 1.3968075 1.4065190 #>  [192,] 0.6929701 0.6971881 0.6983515 #>  [193,] 0.5998258 0.6034515 0.6136679 #>  [194,] 0.5429316 0.5570000 0.5602252 #>  [195,] 1.0188878 1.0793454 1.0858714 #>  [196,] 0.6269043 0.6810870 0.6868403 #>  [197,] 1.0075614 1.0431346 1.0821745 #>  [198,] 1.3594604 1.4146364 1.4263432 #>  [199,] 0.7430240 0.7511748 0.8771458 #>  [200,] 0.7863389 0.8066169 0.8143462 #>  [201,] 1.8213842 1.8912685 1.9962653 #>  [202,] 1.4548162 1.4980519 1.4988507 #>  [203,] 1.0292585 1.0564403 1.0715925 #>  [204,] 0.5571402 0.6248315 0.6380658 #>  [205,] 0.6196099 0.6290472 0.6292636 #>  [206,] 0.6378416 0.6567339 0.6771992 #>  [207,] 1.6953200 1.7081563 1.7206302 #>  [208,] 0.7497781 0.7546189 0.7557900 #>  [209,] 1.5233936 1.5288099 1.5962986 #>  [210,] 0.6239921 0.6247975 0.6265817 #>  [211,] 0.7915838 0.8227246 0.8271605 #>  [212,] 0.6133590 0.6334791 0.6504994 #>  [213,] 0.5879778 0.5889366 0.6110425 #>  [214,] 0.7508885 0.8324732 0.8941450 #>  [215,] 0.7468176 0.7739945 0.8493845 #>  [216,] 0.6418896 0.6420441 0.6478635 #>  [217,] 0.6582989 0.6735662 0.7013804 #>  [218,] 0.6180513 0.6354609 0.6562407 #>  [219,] 0.7390813 0.7445928 0.7881615 #>  [220,] 0.8158097 0.8690679 0.8797843 #>  [221,] 0.7647663 0.7783410 0.7837751 #>  [222,] 1.3820083 1.3966081 1.4695749 #>  [223,] 0.5455742 0.5658013 0.6034515 #>  [224,] 1.1583985 1.2959913 1.3045000 #>  [225,] 0.9930158 1.0073708 1.0326790 #>  [226,] 0.7177860 0.7245656 0.7300216 #>  [227,] 0.6152128 0.6768162 0.7500130 #>  [228,] 0.8081437 0.8210160 0.8341311 #>  [229,] 0.8173428 0.8390229 0.8620620 #>  [230,] 0.8007657 0.8012049 0.8112083 #>  [231,] 0.9177369 0.9279086 0.9315429 #>  [232,] 0.7094825 0.7412201 0.7487212 #>  [233,] 0.8801390 0.8919684 0.9048960 #>  [234,] 0.8240324 0.8333244 0.8385498 #>  [235,] 0.7525095 0.7695044 0.7708732 #>  [236,] 0.7133467 0.7192160 0.7198735 #>  [237,] 0.5881498 0.5997251 0.6016000 #>  [238,] 0.8105593 0.9042581 0.9140608 #>  [239,] 1.0796850 1.0905094 1.0981334 #>  [240,] 0.8508098 0.8635917 0.8980599 #>  [241,] 0.6227925 0.6280889 0.6417925 #>  [242,] 0.7067708 0.7184563 0.7377581 #>  [243,] 0.6115334 0.6430333 0.6456477 #>  [244,] 1.4331381 1.4607150 1.5316756 #>  [245,] 0.8501881 0.8563041 0.8590798 #>  [246,] 0.7118094 0.7147159 0.7300108 #>  [247,] 1.1565844 1.1967436 1.2031595 #>  [248,] 0.7812252 0.7929947 0.8109086 #>  [249,] 0.6637959 0.6669140 0.6801039 #>  [250,] 2.0397549 2.0483508 2.0556776 #>  [251,] 0.7355141 0.7445453 0.7960024 #>  [252,] 0.6012655 0.6101469 0.6277827 #>  [253,] 1.1820783 1.1844585 1.1852437 #>  [254,] 0.7059918 0.7131183 0.7172770 #>  [255,] 1.1761711 1.1954909 1.2139322 #>  [256,] 0.8081437 0.8302582 0.8359470 #>  [257,] 0.4847586 0.4983993 0.5328842 #>  [258,] 1.3630821 1.3645951 1.4483778 #>  [259,] 1.6683581 1.6846586 1.6916542 #>  [260,] 0.6327125 0.6592461 0.6797594 #>  [261,] 0.5816681 0.6651170 0.6719349 #>  [262,] 1.0199230 1.0306691 1.0465887 #>  [263,] 0.7328701 0.7366519 0.7488794 #>  [264,] 0.6567246 0.6632021 0.6666177 #>  [265,] 0.8342606 0.8833272 0.8873127 #>  [266,] 1.2187290 1.2362250 1.3522488 #>  [267,] 0.7023748 0.7102512 0.7225791 #>  [268,] 1.0880982 1.0941461 1.0960332 #>  [269,] 0.8627002 0.8743276 0.8751708 #>  [270,] 0.6198851 0.6314126 0.6475378 #>  [271,] 0.5674021 0.5693480 0.5928785 #>  [272,] 0.9341928 0.9833019 0.9973478 #>  [273,] 0.8096329 0.8292255 0.8555027 #>  [274,] 0.7891404 0.8243659 0.8278745 #>  [275,] 0.9317763 0.9409960 0.9466711 #>  [276,] 1.3790276 1.3802968 1.4076604 #>  [277,] 0.6844823 0.7143535 0.7407388 #>  [278,] 0.7100069 0.7488184 0.7600098 #>  [279,] 1.1506401 1.1908013 1.2663376 #>  [280,] 0.7630830 0.7659436 0.7761110 #>  [281,] 0.8431615 0.8637182 0.9226522 #>  [282,] 0.9590741 1.0251275 1.0283219 #>  [283,] 0.7033122 0.7052669 0.7377581 #>  [284,] 0.8044038 0.8099410 0.8531779 #>  [285,] 0.4574371 0.4633042 0.5149583 #>  [286,] 1.2142199 1.2325390 1.2486723 #>  [287,] 0.7117716 0.7845475 0.8023944 #>  [288,] 0.7105949 0.7146610 0.7506698 #>  [289,] 0.9633728 0.9659964 1.0147951 #>  [290,] 0.6066468 0.6082550 0.6091098 #>  [291,] 1.0277905 1.0338277 1.0357108 #>  [292,] 0.5000964 0.5028235 0.5161832 #>  [293,] 0.8557396 0.8838206 0.9363732 #>  [294,] 0.7162112 0.7261345 0.7368908 #>  [295,] 2.1098008 2.1263382 2.1662556 #>  [296,] 0.9174849 0.9391519 0.9513195 #>  [297,] 0.5151876 0.5552198 0.6246004 #>  [298,] 1.2236423 1.2574848 1.2584744 #>  [299,] 0.8009335 0.8341694 0.8629700 #>  [300,] 0.6411617 0.6742086 0.6789019 #>  [301,] 1.0222484 1.0651726 1.0824499 #>  [302,] 1.4780679 1.4931978 1.4998941 #>  [303,] 1.7793757 1.8106507 1.8345273 #>  [304,] 0.8031539 0.8513275 0.8791171 #>  [305,] 1.2292597 1.2357294 1.2826214 #>  [306,] 0.6505470 0.6771992 0.6788451 #>  [307,] 1.1818239 1.1945705 1.2083771 #>  [308,] 0.6593763 0.6723912 0.6867334 #>  [309,] 0.4700809 0.4816955 0.4866329 #>  [310,] 0.7201891 0.7371411 0.7627039 #>  [311,] 0.9326344 1.0005127 1.0038540 #>  [312,] 0.7288453 0.7482867 0.7527413 #>  [313,] 0.6792825 0.7098145 0.7107325 #>  [314,] 0.7188043 0.7305566 0.7341665 #>  [315,] 0.5343740 0.5371986 0.6196099 #>  [316,] 1.0993493 1.1180550 1.1213501 #>  [317,] 0.5166436 0.5418754 0.5499564 #>  [318,] 1.4359835 1.4469369 1.4834774 #>  [319,] 0.8046689 0.8057893 0.8264896 #>  [320,] 0.5838682 0.5972898 0.6249691 #>  [321,] 0.6478044 0.6480226 0.6585143 #>  [322,] 0.7356749 0.7797624 0.8027854 #>  [323,] 1.0977021 1.1011990 1.1069747 #>  [324,] 0.6170095 0.6424517 0.6700281 #>  [325,] 0.7829631 0.7942367 0.7964902 #>  [326,] 0.8682310 0.9106875 1.0473610 #>  [327,] 0.8372628 0.8838178 0.9024265 #>  [328,] 1.4275131 1.5188548 1.5214910 #>  [329,] 1.2825670 1.3081612 1.3743889 #>  [330,] 0.6444889 0.6908379 0.6954510 #>  [331,] 0.6772921 0.7085888 0.7115589 #>  [332,] 0.6055590 0.6319255 0.6535943 #>  [333,] 0.6089178 0.6171698 0.6420984 #>  [334,] 0.7013259 0.7197396 0.7201731 #>  [335,] 0.7554972 0.7570872 0.7621492 #>  [336,] 0.6903874 0.7099542 0.7263274 #>  [337,] 1.4731754 1.4770385 1.4885976 #>  [338,] 1.1171090 1.1343383 1.1866288 #>  [339,] 0.7904959 0.8211896 0.8407411 #>  [340,] 0.6571768 0.7153976 0.7344173 #>  [341,] 0.6206803 0.7202563 0.7536813 #>  [342,] 0.6031906 0.6348537 0.6648093 #>  [343,] 1.0684635 1.1281765 1.2701446 #>  [344,] 0.6379043 0.6522162 0.6533374 #>  [345,] 0.5810245 0.5867504 0.5913260 #>  [346,] 0.5046153 0.5277485 0.5910771 #>  [347,] 1.0505311 1.0576989 1.0992925 #>  [348,] 0.6311623 0.6560215 0.6822626 #>  [349,] 1.0165439 1.1333100 1.1340170 #>  [350,] 0.5813493 0.5950332 0.6079576 #>  [351,] 0.7300095 0.7602339 0.7629245 #>  [352,] 1.1053641 1.1180550 1.1312491 #>  [353,] 1.1837643 1.1988522 1.2302067 #>  [354,] 0.9533387 0.9564164 0.9649450 #>  [355,] 0.9164328 0.9176535 1.0082143 #>  [356,] 0.7133467 0.7360781 0.7797316 #>  [357,] 0.7177315 0.7849657 0.7935783 #>  [358,] 0.7369999 0.7680742 0.7718746 #>  [359,] 0.6829276 0.7062740 0.7828293 #>  [360,] 0.6238698 0.6319799 0.6712264 #>  [361,] 0.8012627 0.8229591 0.8455997 #>  [362,] 0.6160434 0.6178926 0.6240917 #>  [363,] 0.9001376 0.9136147 0.9147746 #>  [364,] 1.5932991 1.6157023 1.6168954 #>  [365,] 0.8077789 0.8595672 0.8851544 #>  [366,] 0.8105764 0.9519390 0.9627244 #>  [367,] 0.8791882 0.8820581 0.9409960 #>  [368,] 1.1542080 1.2095336 1.2174031 #>  [369,] 1.2001517 1.2151301 1.2367852 #>  [370,] 0.7215688 0.7504660 0.7612260 #>  [371,] 0.5766792 0.6133128 0.6378261 #>  [372,] 0.5124364 0.5342045 0.5436498 #>  [373,] 0.7111043 0.7964800 0.8074443 #>  [374,] 0.7735197 0.7903442 0.8573493 #>  [375,] 0.6717405 0.6987919 0.7056988 #>  [376,] 1.1960716 1.2061600 1.2549521 #>  [377,] 0.9120929 0.9420186 1.0101190 #>  [378,] 0.9728332 0.9873418 0.9990933 #>  [379,] 0.7385341 0.7460797 0.7479200 #>  [380,] 0.6228103 0.6252471 0.6378261 #>  [381,] 0.6451651 0.6466886 0.6497090 #>  [382,] 0.6164454 0.6313534 0.6431640 #>  [383,] 1.7215563 1.7413460 1.7505421 #>  [384,] 1.4146987 1.4767661 1.5423798 #>  [385,] 1.2790766 1.3318983 1.3342449 #>  [386,] 0.5253829 0.5374429 0.5478135 #>  [387,] 0.6767031 0.6980473 0.7102383 #>  [388,] 0.6058627 0.6468854 0.6582067 #>  [389,] 0.7614894 0.7666488 0.7872667 #>  [390,] 0.7636327 0.7665815 0.7671899 #>  [391,] 0.7542396 0.7742806 0.8188065 #>  [392,] 0.8449039 0.8477306 0.8554640 #>  [393,] 0.6606911 0.6652344 0.7106932 #>  [394,] 1.1621956 1.1644541 1.1986978 #>  [395,] 1.1677274 1.2597720 1.2879303 #>  [396,] 0.9441428 0.9562852 0.9670866 #>  [397,] 0.6461569 0.6517059 0.6642091 #>  [398,] 0.8534824 0.8593124 0.9181514 #>  [399,] 0.6507469 0.6531001 0.6857016 #>  [400,] 0.7627499 0.8010999 0.8162060 #>  [401,] 0.7167615 0.7590209 0.7663757 #>  [402,] 0.9385822 0.9546533 0.9735454 #>  [403,] 0.9174849 0.9597572 0.9760358 #>  [404,] 0.7314190 0.7399096 0.7420626 #>  [405,] 0.6440154 0.6769841 0.6813038 #>  [406,] 0.9042870 0.9199815 0.9366138 #>  [407,] 0.5143304 0.5230954 0.5826878 #>  [408,] 0.7751121 0.8150130 0.8160969 #>  [409,] 0.6680155 0.6764425 0.6882297 #>  [410,] 1.0683585 1.0714703 1.1421249 #>  [411,] 1.2147471 1.2663894 1.2727458 #>  [412,] 1.1390125 1.1560421 1.1667422 #>  [413,] 0.5777682 0.5841814 0.5867504 #>  [414,] 1.0770330 1.1461043 1.1826790 #>  [415,] 0.7190763 0.7826114 0.8346353 #>  [416,] 1.2734965 1.3180883 1.3209671 #>  [417,] 0.8609763 0.8951846 0.9389049 #>  [418,] 0.6299388 0.6377190 0.6472083 #>  [419,] 1.3202222 1.3234820 1.3480002 #>  [420,] 0.7911226 0.8918625 0.9113162 #>  [421,] 1.5099517 1.5879799 1.6275022 #>  [422,] 0.8648793 0.8801506 0.8962246 #>  [423,] 0.6058663 0.6082788 0.6314126 #>  [424,] 1.3163879 1.3328708 1.3662731 #>  [425,] 0.7955620 0.7975097 0.8114964 #>  [426,] 0.6418109 0.6934614 0.7022022 #>  [427,] 1.8529715 1.9275538 1.9412448 #>  [428,] 0.8037321 0.8180881 0.8260032 #>  [429,] 0.8748160 0.9124285 0.9167675 #>  [430,] 1.4781769 1.5195083 1.5757886 #>  [431,] 0.7765806 0.7796118 0.7852608 #>  [432,] 0.9012644 0.9333909 0.9559555 #>  [433,] 0.6599585 0.6928193 0.6981878 #>  [434,] 0.7897385 0.8571447 0.8957822 #>  [435,] 1.1936272 1.2030167 1.2407876 #>  [436,] 0.7833691 0.8614368 0.8945441 #>  [437,] 0.5384173 0.5829803 0.5841615 #>  [438,] 0.5571568 0.6174222 0.6316854 #>  [439,] 0.6609872 0.6613144 0.7115270 #>  [440,] 0.8451830 0.8557046 0.8650737 #>  [441,] 0.5728784 0.5745183 0.5839120 #>  [442,] 1.0467757 1.0550746 1.0574801 #>  [443,] 0.6892405 0.7332718 0.7333728 #>  [444,] 0.5805887 0.6012403 0.6268490 #>  [445,] 0.7912182 0.8435330 0.8641570 #>  [446,] 0.7852608 0.8762724 0.9075501 #>  [447,] 1.3676645 1.3747721 1.4162996 #>  [448,] 1.2725432 1.2803105 1.2833201 #>  [449,] 1.1295200 1.2154808 1.2187803 #>  [450,] 0.9210998 0.9405099 1.0160491 #>  [451,] 0.6643364 0.6665172 0.6964813 #>  [452,] 0.6314404 0.6404495 0.6684119 #>  [453,] 0.5370750 0.5614417 0.6017285 #>  [454,] 0.9114307 0.9131999 0.9218992 #>  [455,] 0.5167141 0.5323207 0.5668559 #>  [456,] 0.7683081 0.7733977 0.8122535 #>  [457,] 0.5024490 0.5412091 0.5569929 #>  [458,] 1.0857416 1.1236817 1.1830759 #>  [459,] 0.5728755 0.5922088 0.5931377 #>  [460,] 0.5689447 0.5754628 0.5817520 #>  [461,] 0.6513352 0.7065268 0.7117218 #>  [462,] 0.5501011 0.5596206 0.5649255 #>  [463,] 0.6391369 0.6395256 0.6412760 #>  [464,] 0.8306194 0.8751047 0.8794120 #>  [465,] 0.7393981 0.8423412 0.8437964 #>  [466,] 1.8836910 1.9095367 1.9135119 #>  [467,] 1.1950243 1.2333716 1.2435436 #>  [468,] 0.9667808 0.9857054 0.9916732 #>  [469,] 0.9461251 0.9463880 0.9540307 #>  [470,] 0.5763679 0.5815961 0.5851288 #>  [471,] 0.8321809 0.8519922 0.8573915 #>  [472,] 0.6797594 0.6974174 0.7011072 #>  [473,] 0.6045314 0.6086948 0.6161821 #>  [474,] 0.6178535 0.6265817 0.6299388 #>  [475,] 1.4563943 1.4668533 1.4956531 #>  [476,] 0.4759897 0.5278541 0.5323207 #>  [477,] 0.5904797 0.5921010 0.6182972 #>  [478,] 0.7475949 0.7595601 0.7750158 #>  [479,] 0.8676342 0.9958579 1.0082914 #>  [480,] 0.9988466 1.0379648 1.0873266 #>  [481,] 0.6811404 0.7125915 0.7438543 #>  [482,] 0.7233252 0.7258189 0.7496445 #>  [483,] 0.8908971 0.9220001 0.9393187 #>  [484,] 0.8402377 0.8782716 0.8924074 #>  [485,] 0.8752551 0.9683506 0.9777102 #>  [486,] 0.9860885 1.0097891 1.0138331 #>  [487,] 0.6715531 0.6862316 0.6922482 #>  [488,] 1.2949801 1.3199758 1.3314084 #>  [489,] 1.0834790 1.1111410 1.1434177 #>  [490,] 0.7012192 0.7035310 0.7197476 #>  [491,] 0.8863247 0.9151983 0.9861853 #>  [492,] 1.7159364 1.7248158 1.7670427 #>  [493,] 0.8374759 0.9264355 0.9493804 #>  [494,] 1.3369391 1.3572066 1.3602157 #>  [495,] 1.3663135 1.3747328 1.3915746 #>  [496,] 0.9388876 0.9787855 0.9818573 #>  [497,] 0.9633728 0.9716273 1.0105809 #>  [498,] 1.2406684 1.2583409 1.3507659 #>  [499,] 0.8820550 1.0146170 1.0150288 #>  [500,] 0.9055686 0.9680445 0.9941518 #>  [501,] 2.4145756 2.4420108 2.4464436 #>  [502,] 0.5520771 0.5745183 0.5826584 #>  [503,] 0.8337882 0.8505912 0.8526129 #>  [504,] 0.6882318 0.6964999 0.7367348 #>  [505,] 0.9813650 0.9874835 1.0472607 #>  [506,] 0.6814462 0.7060224 0.7076732 #>  [507,] 0.4816955 0.4847935 0.4864367 #>  [508,] 0.5691907 0.5770479 0.5780491 #>  [509,] 1.6335442 1.6385179 1.6535956 #>  [510,] 1.3528960 1.3563794 1.3611355 #>  [511,] 0.6759780 0.7094116 0.7247117 #>  [512,] 1.2926636 1.3023587 1.3749284 #>  [513,] 1.5299030 1.5399956 1.6611706 #>  [514,] 0.6710257 0.6810884 0.6950817 #>  [515,] 0.7584446 0.8062355 0.8130625 #>  [516,] 0.8178128 0.8178424 0.8205612 #>  [517,] 0.8591310 0.8919684 0.9240162 #>  [518,] 0.5025708 0.5418103 0.5693054 #>  [519,] 0.6895236 0.6973202 0.7059582 #>  [520,] 0.5773875 0.5787767 0.6029737 #>  [521,] 0.7146610 0.7643505 0.7878777 #>  [522,] 0.6803957 0.6811404 0.7170140 #>  [523,] 0.6578455 0.6659730 0.6749460 #>  [524,] 0.7388219 0.7477676 0.7486448 #>  [525,] 0.9893545 1.0141225 1.0483922 #>  [526,] 0.6767827 0.7060023 0.7315015 #>  [527,] 1.0208764 1.0257840 1.0330603 #>  [528,] 0.7171179 0.7334094 0.7448059 #>  [529,] 0.8668125 0.9510885 0.9550453 #>  [530,] 1.3518969 1.3648092 1.3849989 #>  [531,] 0.7892308 0.8003594 0.8356967 #>  [532,] 0.8611332 0.8613864 0.9164915 #>  [533,] 0.6250401 0.6367535 0.6517178 #>  [534,] 0.7000426 0.7177860 0.7378278 #>  [535,] 0.7863389 0.8349013 0.8376880 #>  [536,] 0.9794036 1.0058872 1.0216113 #>  [537,] 0.8364121 0.8611271 0.8800067 #>  [538,] 0.5635180 0.6092181 0.6218384 #>  [539,] 0.8904440 0.8921551 0.8932878 #>  [540,] 0.6639791 0.7167615 0.7429688 #>  [541,] 0.6532183 0.6622352 0.6784005 #>  [542,] 1.3483684 1.3507839 1.3894962 #>  [543,] 0.8085228 0.8488790 0.8680777 #>  [544,] 0.5340517 0.5593715 0.6246004 #>  [545,] 0.5689344 0.6011425 0.6378416 #>  [546,] 0.6056311 0.6089128 0.6109068 #>  [547,] 0.7942207 0.8298927 0.8602639 #>  [548,] 0.9145482 0.9155776 0.9157779 #>  [549,] 0.7833891 0.7929947 0.7977212 #>  [550,] 0.8923763 0.8936716 0.8943902 #>  [551,] 0.6252989 0.6302890 0.6325989 #>  [552,] 0.6213495 0.6715206 0.6738913 #>  [553,] 0.5815733 0.6928156 0.7067708 #>  [554,] 0.7766909 0.7895843 0.8063112 #>  [555,] 0.8607480 0.8663636 0.8850935 #>  [556,] 0.6819663 0.7233252 0.7428187 #>  [557,] 0.8135751 0.8167236 0.8241794 #>  [558,] 2.3432253 2.3690277 2.3950798 #>  [559,] 0.7093489 0.7243632 0.7538692 #>  [560,] 0.6790146 0.6813491 0.6987252 #>  [561,] 0.9278684 0.9670014 0.9923017 #>  [562,] 0.6440527 0.6939634 0.6946025 #>  [563,] 0.8178424 0.8214247 0.8249273 #>  [564,] 0.5854172 0.6030661 0.6703721 #>  [565,] 2.2018303 2.2170551 2.2715903 #>  [566,] 0.6740985 0.6961154 0.7107108 #>  [567,] 0.5288156 0.6289047 0.6432439 #>  [568,] 0.6086948 0.6167249 0.6182271 #>  [569,] 0.8899425 0.8907170 0.9248265 #>  [570,] 0.8781574 0.9243470 0.9436126 #>  [571,] 0.6611107 0.6947258 0.7779487 #>  [572,] 0.8544198 0.8607628 0.9113352 #>  [573,] 0.6818945 0.6944958 0.6973268 #>  [574,] 0.6450755 0.7042088 0.7045850 #>  [575,] 0.8500746 0.9282655 1.0189408 #>  [576,] 0.7818339 0.7826114 0.8231869 #>  [577,] 1.2586485 1.2649063 1.4049734 #>  [578,] 0.6757237 0.6791727 0.7117059 #>  [579,] 0.6788451 0.6853032 0.7137189 #>  [580,] 0.6333447 0.6695882 0.6853860 #>  [581,] 0.6198851 0.6315937 0.6712264 #>  [582,] 0.5481736 0.5764813 0.6090256 #>  [583,] 0.6900380 0.6917397 0.7118564 #>  [584,] 0.8031552 0.8159384 0.8325545 #>  [585,] 0.8078439 0.8962927 0.9024955 #>  [586,] 0.7863477 0.8318041 0.8382579 #>  [587,] 0.6263667 0.6662338 0.6693745 #>  [588,] 1.0664086 1.0867883 1.1595318 #>  [589,] 0.7238832 0.7291073 0.7634351 #>  [590,] 1.8472453 1.9284869 1.9455458 #>  [591,] 0.6030661 0.6150027 0.6178535 #>  [592,] 0.7067891 0.7202563 0.7385543 #>  [593,] 0.5766874 0.6071901 0.6722267 #>  [594,] 0.5037597 0.5140889 0.5278857 #>  [595,] 0.6973421 0.7460797 0.7484519 #>  [596,] 0.8587832 0.8776250 0.8925923 #>  [597,] 0.8990254 0.8998505 0.9043764 #>  [598,] 0.6098153 0.6283844 0.6289047 #>  [599,] 1.1384414 1.1628123 1.1670567 #>  [600,] 0.7396622 0.7411347 0.7429837 #>  [601,] 0.6981834 0.7385372 0.7571183 #>  [602,] 0.5697776 0.5925780 0.6079173 #>  [603,] 1.0356459 1.0574077 1.0919283 #>  [604,] 1.1836077 1.2198348 1.2271238 #>  [605,] 0.6046276 0.6299998 0.6461569 #>  [606,] 0.5649939 0.5740247 0.5826055 #>  [607,] 1.1519656 1.1540375 1.1572590 #>  [608,] 0.8675523 0.8853132 0.9111472 #>  [609,] 1.6049527 1.6168954 1.6674373 #>  [610,] 0.9049409 0.9094752 1.0089479 #>  [611,] 0.5936046 0.6057138 0.6595870 #>  [612,] 0.9681270 0.9843482 1.0041864 #>  [613,] 1.2830695 1.3338333 1.3386482 #>  [614,] 0.7772791 0.8072681 0.8344979 #>  [615,] 0.7472657 0.7642566 0.7715074 #>  [616,] 0.8531185 0.8587832 0.8961581 #>  [617,] 0.7300108 0.7336099 0.7580219 #>  [618,] 0.6519833 0.7036290 0.7411941 #>  [619,] 0.9758230 1.0551752 1.0664273 #>  [620,] 0.8801867 0.8923898 0.9039039 #>  [621,] 0.5862132 0.6693059 0.6782872 #>  [622,] 0.6219328 0.6248315 0.6261556 #>  [623,] 0.7478602 0.7580601 0.7706583 #>  [624,] 0.5698945 0.6299090 0.6403390 #>  [625,] 1.0167930 1.0453051 1.1333771 #>  [626,] 0.7392944 0.7548943 0.7563227 #>  [627,] 0.6061947 0.6288226 0.6932874 #>  [628,] 0.5016559 0.5094419 0.5727759 #>  [629,] 1.0443008 1.0609972 1.0629319 #>  [630,] 0.7998817 0.8195488 0.8678657 #>  [631,] 0.5547715 0.6030755 0.6154857 #>  [632,] 0.8144859 0.8281860 0.8697099 #>  [633,] 1.0451144 1.0542669 1.1114114 #>  [634,] 0.6419922 0.6432989 0.6447714 #>  [635,] 0.6742909 0.7286320 0.7541595 #>  [636,] 0.9607071 0.9640626 0.9819342 #>  [637,] 0.9198462 0.9676332 0.9754811 #>  [638,] 1.1200604 1.2439004 1.2668609 #>  [639,] 1.1293918 1.1544637 1.1925736 #>  [640,] 0.8213356 0.8387448 0.8433437 #>  [641,] 0.9677572 0.9888431 1.0394407 #>  [642,] 1.0378200 1.0572936 1.0864902 #>  [643,] 0.5496676 0.5826584 0.5893277 #>  [644,] 0.8202058 0.8503474 0.8628839 #>  [645,] 0.6876549 0.6992767 0.7008368 #>  [646,] 1.0006761 1.0891220 1.1000991 #>  [647,] 0.7692970 0.8176418 0.8722259 #>  [648,] 0.9001376 0.9306692 0.9344276 #>  [649,] 0.4759897 0.5073673 0.5773453 #>  [650,] 1.9382943 1.9416419 2.0260886 #>  [651,] 1.1290313 1.2173869 1.2181288 #>  [652,] 0.6658469 0.6770162 0.6778106 #>  [653,] 0.7356093 0.7722727 0.7758287 #>  [654,] 1.0047432 1.0131991 1.0317723 #>  [655,] 0.5662782 0.5710962 0.5811230 #>  [656,] 0.6184569 0.6220324 0.6290472 #>  [657,] 0.7677005 0.7693379 0.7703628 #>  [658,] 0.5899925 0.6245978 0.6298449 #>  [659,] 0.7469655 0.7567931 0.7701006 #>  [660,] 0.5644498 0.5773875 0.6264687 #>  [661,] 0.5910982 0.6014117 0.6069905 #>  [662,] 0.8325475 0.8360327 0.8718518 #>  [663,] 0.5199536 0.5201948 0.5253829 #>  [664,] 2.0411730 2.0795131 2.1723752 #>  [665,] 0.6398905 0.7198262 0.7426566 #>  [666,] 1.6206125 1.6538794 1.6952439 #>  [667,] 0.7155574 0.7265504 0.7561248 #>  [668,] 0.6236368 0.6674390 0.7730710 #>  [669,] 0.6593693 0.6599681 0.7081862 #>  [670,] 0.9392153 0.9818740 0.9936594 #>  [671,] 0.8417960 0.8581661 0.9167841 #>  [672,] 0.8022114 0.8045830 0.8129684 #>  [673,] 1.0238475 1.0297726 1.0514701 #>  [674,] 0.8379912 0.8492909 0.8665540 #>  [675,] 0.6764425 0.7128808 0.7414976 #>  [676,] 0.9237796 0.9572670 0.9769117 #>  [677,] 0.6259317 0.6287526 0.6306655 #>  [678,] 0.7745990 0.7968260 0.8289013 #>  [679,] 1.1319135 1.1391750 1.1587812 #>  [680,] 0.7995431 0.8797833 0.9001406 #>  [681,] 0.5658163 0.5663868 0.6085266 #>  [682,] 1.1814759 1.2122146 1.2527892 #>  [683,] 0.9574515 0.9917246 1.0476483 #>  [684,] 0.8202589 0.8405467 0.8482936 #>  [685,] 1.0408116 1.0770330 1.0790551 #>  [686,] 1.8179036 1.8340617 1.9116460 #>  [687,] 0.8240114 0.8346796 0.8540282 #>  [688,] 0.7111981 0.7168102 0.7506698 #>  [689,] 0.7062740 0.7083143 0.7332891 #>  [690,] 0.7589517 0.7814489 0.8743718 #>  [691,] 0.7887940 0.8068922 0.8298635 #>  [692,] 0.7042882 0.7073357 0.7086554 #>  [693,] 0.8677932 0.9081009 0.9096423 #>  [694,] 0.9426249 0.9456269 0.9996745 #>  [695,] 0.7261435 0.7369679 0.7431326 #>  [696,] 0.5259880 0.5325244 0.5335413 #>  [697,] 0.9357843 1.0164852 1.1235415 #>  [698,] 0.6602462 0.6971881 0.7130196 #>  [699,] 0.7407388 0.7441478 0.7587615 #>  [700,] 0.5805887 0.6411091 0.6493704 #>  [701,] 0.8441528 0.8526117 0.8743718 #>  [702,] 0.7091045 0.7115284 0.7332891 #>  [703,] 1.4329723 1.4998115 1.5321308 #>  [704,] 0.8716388 0.9324892 0.9406988 #>  [705,] 0.9435541 1.0315119 1.0640330 #>  [706,] 0.6753137 0.7172770 0.7210186 #>  [707,] 0.6354370 0.6485246 0.6687828 #>  [708,] 0.7013456 0.7131056 0.7347693 #>  [709,] 0.7484519 0.7737699 0.7741449 #>  [710,] 0.8423412 0.8555198 0.8749579 #>  [711,] 1.1663112 1.2098689 1.2143511 #>  [712,] 0.9481154 0.9482776 0.9492661 #>  [713,] 0.5139554 0.5386177 0.5543984 #>  [714,] 0.6937074 0.7245582 0.7468176 #>  [715,] 1.4709076 1.4824762 1.4912133 #>  [716,] 0.8951693 0.8961581 0.9878208 #>  [717,] 0.5740756 0.5972898 0.6142427 #>  [718,] 0.9250145 0.9261443 0.9285668 #>  [719,] 0.5785084 0.6069989 0.6116374 #>  [720,] 0.9843897 1.0550667 1.0561660 #>  [721,] 0.5411180 0.5608529 0.5653868 #>  [722,] 0.5295162 0.5340517 0.5555209 #>  [723,] 0.9688074 1.0018221 1.0154645 #>  [724,] 0.6862316 0.7080334 0.7092927 #>  [725,] 0.6652081 0.6720352 0.6917995 #>  [726,] 0.6144660 0.6167648 0.6466886 #>  [727,] 0.8975746 0.9026949 0.9269203 #>  [728,] 0.7297279 0.7441841 0.7579067 #>  [729,] 0.9753392 0.9793578 0.9902628 #>  [730,] 0.6466303 0.6596934 0.6713759 #>  [731,] 0.7510750 0.8031048 0.8497506 #>  [732,] 0.7844187 0.7910788 0.8033215 #>  [733,] 1.1436977 1.2593077 1.2944929 #>  [734,] 1.0233959 1.0988194 1.1192609 #>  [735,] 0.6888786 0.7709872 0.8026905 #>  [736,] 1.1020634 1.1103051 1.1116794 #>  [737,] 0.4875835 0.5037597 0.5218255 #>  [738,] 1.2087302 1.2367852 1.2630820 #>  [739,] 2.1226628 2.1489737 2.1847682 #>  [740,] 0.9699873 0.9936126 0.9981753 #>  [741,] 0.5541666 0.5674918 0.5693480 #>  [742,] 0.5708686 0.5748597 0.5788055 #>  [743,] 0.8565868 0.8744701 0.8796845 #>  [744,] 0.9290540 0.9548992 0.9762425 #>  [745,] 0.4644079 0.5262045 0.5492644 #>  [746,] 1.0158253 1.0370421 1.0656568 #>  [747,] 0.7036279 0.7143330 0.7151035 #>  [748,] 1.2295782 1.2701114 1.3213964 #>  [749,] 0.5693054 0.6197711 0.6784878 #>  [750,] 0.7510750 0.7788458 0.7880611 #>  [751,] 0.7907865 0.8110518 0.8268999 #>  [752,] 1.6528810 1.6852090 1.7012686 #>  [753,] 0.8275630 0.8613339 0.8736702 #>  [754,] 0.6022206 0.6873235 0.6881103 #>  [755,] 0.7941230 0.7957952 0.7978296 #>  [756,] 0.7081964 0.7167148 0.7362297 #>  [757,] 1.2384498 1.2410470 1.3512977 #>  [758,] 0.6404495 0.7010819 0.7160734 #>  [759,] 0.5552198 0.6299090 0.6299998 #>  [760,] 0.8529619 0.8699727 0.8723819 #>  [761,] 1.1095331 1.1378732 1.1933431 #>  [762,] 0.6133128 0.6134790 0.6152627 #>  [763,] 0.5848662 0.5881791 0.5938147 #>  [764,] 1.2015164 1.2033767 1.2357261 #>  [765,] 1.3644598 1.3664599 1.3791541 #>  [766,] 0.9682310 0.9753498 0.9834251 #>  [767,] 0.7501720 0.7553391 0.7784621 #>  [768,] 0.6176954 0.6553638 0.7037984 #>  [769,] 0.9799616 0.9971581 1.0188878 #>  [770,] 0.6067608 0.6166483 0.6215483 #>  [771,] 0.6988536 0.7143979 0.7691937 #>  [772,] 0.6707290 0.7406443 0.7925577 #>  [773,] 0.6920620 0.7192525 0.7378939 #>  [774,] 0.8061181 0.8335395 0.8519922 #>  [775,] 1.2012728 1.2145928 1.2264780 #>  [776,] 0.6036117 0.6045314 0.6074887 #>  [777,] 0.7134724 0.7330610 0.7336099 #>  [778,] 0.7357161 0.7659436 0.7765781 #>  [779,] 1.9690753 1.9715492 1.9898267 #>  [780,] 1.0283219 1.0732000 1.1302308 #>  [781,] 1.2927882 1.2994474 1.3193296 #>  [782,] 0.8892492 0.9349566 0.9609719 #>  [783,] 0.7018778 0.7117218 0.7143797 #>  [784,] 0.9308265 0.9329245 0.9864876 #>  [785,] 0.6700494 0.6884271 0.7247373 #>  [786,] 0.6910984 0.7043720 0.7224982 #>  [787,] 0.8368802 0.8438580 0.8626579 #>  [788,] 0.5811230 0.6050018 0.6342684 #>  [789,] 0.5341757 0.5555209 0.5730101 #>  [790,] 0.8837296 0.8878474 0.9150893 #>  [791,] 0.7885298 0.7951147 0.7955146 #>  [792,] 0.5522140 0.5649189 0.5940605 #>  [793,] 1.5337373 1.5347884 1.5472385 #>  [794,] 0.8744181 0.8762210 0.8950791 #>  [795,] 0.5354529 0.6159843 0.6497799 #>  [796,] 0.5435039 0.5631950 0.5761898 #>  [797,] 0.5904797 0.6074887 0.6143992 #>  [798,] 0.6754314 0.7094825 0.7628576 #>  [799,] 0.5793089 0.5914720 0.6272817 #>  [800,] 0.5851032 0.6079851 0.6545558 #>  [801,] 0.5455918 0.5498394 0.5578871 #>  [802,] 0.5969488 0.6414602 0.6594972 #>  [803,] 0.7023748 0.7029518 0.7169213 #>  [804,] 0.8185188 0.8205612 0.8326591 #>  [805,] 1.1750752 1.1903984 1.1933431 #>  [806,] 1.0302284 1.0537445 1.0748683 #>  [807,] 1.6709016 1.7005440 1.7394570 #>  [808,] 0.8407370 0.8500746 0.8637478 #>  [809,] 0.7008518 0.7150811 0.7800171 #>  [810,] 0.5433768 0.5853286 0.5858126 #>  [811,] 0.8785766 0.8927469 0.9212768 #>  [812,] 0.7942367 0.8017567 0.8151381 #>  [813,] 0.7228474 0.7321719 0.7385597 #>  [814,] 0.9128304 0.9264948 0.9299598 #>  [815,] 1.5803471 1.5953455 1.6277466 #>  [816,] 0.6993452 0.7242203 0.7344657 #>  [817,] 1.6124134 1.6636003 1.6760532 #>  [818,] 0.8376880 0.8426910 0.8453352 #>  [819,] 0.6316854 0.6320838 0.6329795 #>  [820,] 1.1178551 1.1519532 1.1632556 #>  [821,] 0.5833116 0.6029864 0.6135050 #>  [822,] 0.9326344 0.9529245 0.9951438 #>  [823,] 0.6772256 0.6932874 0.7187178 #>  [824,] 0.5820719 0.5912199 0.5958864 #>  [825,] 0.6578455 0.6685950 0.6729128 #>  [826,] 0.5650308 0.5788591 0.5883047 #>  [827,] 0.8792121 0.8806975 0.8816077 #>  [828,] 1.0188981 1.0945970 1.1559622 #>  [829,] 0.6354521 0.6415935 0.6464179 #>  [830,] 0.9306057 0.9731270 0.9804268 #>  [831,] 0.8952237 0.9297569 0.9763403 #>  [832,] 1.0843053 1.0897857 1.1173875 #>  [833,] 0.5930187 0.5939369 0.6069079 #>  [834,] 0.7465824 0.7697630 0.7820416 #>  [835,] 0.4847935 0.4983993 0.5371986 #>  [836,] 0.5418103 0.5454948 0.5471028 #>  [837,] 0.8334105 0.8618845 0.9283201 #>  [838,] 0.9496958 1.0138397 1.0735338 #>  [839,] 0.9777460 1.0175556 1.0292585 #>  [840,] 0.7527413 0.7735569 0.7822611 #>  [841,] 0.9744743 1.0102749 1.0125469 #>  [842,] 0.5128846 0.5187470 0.5232374 #>  [843,] 1.0283224 1.0680810 1.0750131 #>  [844,] 0.9416318 0.9482930 0.9629695 #>  [845,] 1.0277905 1.0347361 1.1459346 #>  [846,] 0.7532099 0.8083029 0.8129840 #>  [847,] 0.6244790 0.6370497 0.6643578 #>  [848,] 0.7263274 0.7298699 0.7523639 #>  [849,] 0.6670763 0.6757237 0.7488167 #>  [850,] 0.7400483 0.7407983 0.7678197 #>  [851,] 0.8328801 0.8593535 0.8706834 #>  [852,] 0.8042118 0.8181203 0.8300385 #>  [853,] 1.3269187 1.3651020 1.3995892 #>  [854,] 1.4041430 1.4212342 1.4334688 #>  [855,] 0.8489212 0.8509315 0.9226693 #>  [856,] 0.6371847 0.6373957 0.6489260 #>  [857,] 0.9479864 1.0184980 1.0239902 #>  [858,] 0.7565456 0.7837856 0.8034945 #>  [859,] 0.7948078 0.7953206 0.8008431 #>  [860,] 0.6458494 0.6610452 0.6853779 #>  [861,] 0.9921289 1.0741951 1.0819476 #>  [862,] 0.7420654 0.7459836 0.7656647 #>  [863,] 0.9134277 0.9463880 0.9774547 #>  [864,] 0.8385498 0.8457286 0.8462907 #>  [865,] 0.6143098 0.6192943 0.6269716 #>  [866,] 0.5851182 0.5949997 0.6690769 #>  [867,] 0.6249000 0.6323681 0.6533374 #>  [868,] 0.6744915 0.6873026 0.6948454 #>  [869,] 0.7422157 0.7559815 0.7563227 #>  [870,] 0.6857204 0.7060388 0.7225791 #>  [871,] 0.6754866 0.7015258 0.7165442 #>  [872,] 0.6624938 0.6659730 0.6665198 #>  [873,] 0.7918862 0.8899351 0.9106117 #>  [874,] 0.9897825 0.9967091 0.9998667 #>  [875,] 0.6674390 0.6709559 0.6722478 #>  [876,] 0.5127744 0.5200857 0.5278857 #>  [877,] 0.7248677 0.7362571 0.7574972 #>  [878,] 0.8650737 0.8673128 0.8876872 #>  [879,] 0.8082818 0.8188058 0.8420042 #>  [880,] 0.5238938 0.5245936 0.6314431 #>  [881,] 0.5546065 0.5552367 0.5658163 #>  [882,] 0.6593763 0.6692368 0.6819575 #>  [883,] 1.1362660 1.1670605 1.1814908 #>  [884,] 0.6274278 0.6516153 0.6589275 #>  [885,] 0.9445222 0.9758457 0.9935428 #>  [886,] 1.0196759 1.0782516 1.1500725 #>  [887,] 0.5611785 0.5721490 0.5730101 #>  [888,] 1.4525418 1.5335511 1.5650556 #>  [889,] 0.7290624 0.7626622 0.7701266 #>  [890,] 0.6575866 0.6631294 0.6709890 #>  [891,] 0.6369631 0.6478044 0.6552745 #>  [892,] 0.5949277 0.6268538 0.6411613 #>  [893,] 0.8987008 0.8996465 0.9122463 #>  [894,] 0.6536885 0.7169877 0.7448199 #>  [895,] 0.8754574 0.8961878 0.9137037 #>  [896,] 0.8990254 0.9600782 0.9845505 #>  [897,] 0.8324243 0.8734084 0.8839719 #>  [898,] 1.6232812 1.6329324 1.6843737 #>  [899,] 0.5307726 0.5541666 0.5542382 #>  [900,] 0.9233367 0.9341166 0.9619989 #>  [901,] 1.1674370 1.2091835 1.2888790 #>  [902,] 0.5935215 0.6133391 0.6145858 #>  [903,] 1.1552582 1.1596754 1.2374547 #>  [904,] 0.6360963 0.6439245 0.6468046 #>  [905,] 1.1296944 1.1306698 1.1445650 #>  [906,] 0.4926394 0.5200857 0.5569929 #>  [907,] 0.7094116 0.7272964 0.7351366 #>  [908,] 0.5967956 0.5984226 0.6065631 #>  [909,] 0.7092927 0.7741783 0.8215954 #>  [910,] 0.5743078 0.5881791 0.6133391 #>  [911,] 0.7960024 0.8147715 0.8201958 #>  [912,] 0.6367922 0.6648602 0.7074269 #>  [913,] 1.1330448 1.1393728 1.2083914 #>  [914,] 1.1261638 1.1363303 1.1381319 #>  [915,] 0.7265642 0.7372435 0.7600814 #>  [916,] 0.5991453 0.6288226 0.6909970 #>  [917,] 0.5936259 0.6167773 0.6328689 #>  [918,] 1.0889671 1.1266647 1.1340280 #>  [919,] 0.8134718 0.8773818 0.8794205 #>  [920,] 0.6634449 0.6847756 0.7128808 #>  [921,] 0.6411091 0.6529900 0.6562525 #>  [922,] 0.9428644 0.9479833 0.9766401 #>  [923,] 0.6546695 0.7623191 0.7831897 #>  [924,] 0.6176913 0.6225913 0.6360304 #>  [925,] 0.8952237 0.8954024 0.9522548 #>  [926,] 0.5354529 0.5418754 0.5586692 #>  [927,] 0.5889366 0.6452530 0.6895276 #>  [928,] 1.2360886 1.2645463 1.4156511 #>  [929,] 0.7045850 0.7102461 0.7254271 #>  [930,] 0.5557009 0.6323681 0.6379043 #>  [931,] 0.6628541 0.7176973 0.7332718 #>  [932,] 0.7830243 0.7958926 0.8087172 #>  [933,] 0.7823336 0.7935952 0.8060961 #>  [934,] 1.2170469 1.3016234 1.3293415 #>  [935,] 0.5882024 0.6785070 0.6851937 #>  [936,] 1.3042448 1.3067202 1.3290534 #>  [937,] 0.5923980 0.7701006 0.7797618 #>  [938,] 0.6801128 0.6920584 0.7143286 #>  [939,] 0.8133878 0.8762922 0.8792833 #>  [940,] 1.4887429 1.5084606 1.5273402 #>  [941,] 0.8393568 0.9422893 0.9868203 #>  [942,] 0.8230795 0.8939918 0.9083788 #>  [943,] 0.4729722 0.4760790 0.5015056 #>  [944,] 0.7457229 0.7612536 0.8136419 #>  [945,] 0.6536390 0.6611107 0.6819575 #>  [946,] 1.2655733 1.3786466 1.4154325 #>  [947,] 0.8477603 0.9001406 0.9536993 #>  [948,] 0.9881205 1.0120315 1.0276484 #>  [949,] 0.7025475 0.7284700 0.8108278 #>  [950,] 0.6722478 0.6789018 0.6876039 #>  [951,] 0.6565390 0.6916976 0.7045401 #>  [952,] 0.7141773 0.7169669 0.7371411 #>  [953,] 0.6559141 0.6639398 0.6669422 #>  [954,] 0.6337316 0.6354521 0.6418716 #>  [955,] 0.6696159 0.6698246 0.6916917 #>  [956,] 0.6075006 0.6443834 0.6680742 #>  [957,] 0.6603293 0.6623050 0.6940481 #>  [958,] 0.6436329 0.6482295 0.6713180 #>  [959,] 0.6036117 0.6117387 0.6139310 #>  [960,] 0.8303042 0.8761815 0.9232052 #>  [961,] 0.5678705 0.5766561 0.5903886 #>  [962,] 1.1215965 1.1605183 1.2426790 #>  [963,] 0.7745578 0.7843597 0.8036236 #>  [964,] 0.7111981 0.7140241 0.7803132 #>  [965,] 1.3762091 1.4262877 1.4529862 #>  [966,] 0.9081192 0.9342811 0.9352012 #>  [967,] 0.7595652 0.7708732 0.7737753 #>  [968,] 1.4909861 1.5724724 1.5742275 #>  [969,] 0.8061181 0.8275757 0.8626899 #>  [970,] 0.9417043 0.9428644 0.9652038 #>  [971,] 0.7672127 0.7708118 0.8045342 #>  [972,] 0.8512705 0.8660131 0.8675326 #>  [973,] 0.6890310 0.7102459 0.7356957 #>  [974,] 0.8293702 0.8737719 0.8771729 #>  [975,] 0.9366361 0.9594017 1.0164096 #>  [976,] 0.6135617 0.6143098 0.6145980 #>  [977,] 0.6100644 0.6560972 0.6944847 #>  [978,] 0.8658190 0.9287271 0.9562004 #>  [979,] 0.8026439 0.8061461 0.8523100 #>  [980,] 0.7544792 0.7700905 0.7944546 #>  [981,] 0.7798431 0.7893466 0.7930837 #>  [982,] 0.7172235 0.7433508 0.7481295 #>  [983,] 0.8697099 0.8845862 0.8919917 #>  [984,] 0.6171722 0.6253003 0.6681443 #>  [985,] 1.0713757 1.0957445 1.1245306 #>  [986,] 0.8691765 0.8912487 0.9218647 #>  [987,] 1.0751697 1.0866799 1.0975572 #>  [988,] 1.1608268 1.1729700 1.1819343 #>  [989,] 0.7698354 0.7771256 0.8079784 #>  [990,] 0.6881899 0.7428363 0.7918862 #>  [991,] 0.5465308 0.5848662 0.6901507 #>  [992,] 0.8033928 0.8417451 0.8513532 #>  [993,] 1.4140997 1.4184929 1.4390561 #>  [994,] 0.9012890 0.9167841 0.9214295 #>  [995,] 0.8027854 0.8349415 0.8488035 #>  [996,] 0.7708018 0.7850795 0.8009255 #>  [997,] 1.5251204 1.5339383 1.5403993 #>  [998,] 1.3328246 1.3609737 1.3649186 #>  [999,] 0.8731058 0.8916354 0.9132031 #> [1000,] 0.8604964 0.8725707 0.9429566 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 0"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 0.003162278"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample    cd45 pstat5  cd34 outcome class  multiclass event time_to_event #>    <chr>    <dbl>  <dbl> <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 16     0.00502 0.101  0.832   0.852 class2 class1         0          8.29 #>  2 67     0.0231  0.704  0.515   3.33  class2 class3         1         13.1  #>  3 56     0.0133  0.0196 0.197  -0.208 class2 class2         1         13.7  #>  4 21     0.247   0.111  0.172   1.92  class2 class1         0         10.0  #>  5 6      0.0996  0.337  0.679   1.65  class2 class1         0         11.3  #>  6 37     0.953   0.381  0.484   7.73  class1 class2         1         12.9  #>  7 43     0.853   0.423  0.128   2.52  class2 class2         1         12.0  #>  8 76     0.592   0.126  0.640   1.87  class2 class3         1          9.05 #>  9 10     0.616   0.478  0.199   1.71  class2 class1         0         11.3  #> 10 73     0.712   0.215  0.367   2.07  class2 class3         1         10.5  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>                cd45      pstat5        cd34 #>   [1,]  0.557496857  0.55254884 -1.38428152 #>   [2,]  0.143171407 -0.77158277 -0.96941346 #>   [3,] -1.502965899  1.57749290  0.43071065 #>   [4,] -1.487689698 -1.05402386  0.26670370 #>   [5,]  0.301986654 -1.41109437  0.62034936 #>   [6,] -1.056499901  0.16076292  1.21403260 #>   [7,]  1.182601035  1.16135604 -1.25154531 #>   [8,]  0.175161417  0.26428063  1.46442058 #>   [9,] -0.176386967  1.20998237 -0.73032910 #>  [10,]  1.361071950 -1.39595395 -0.06137393 #>  [11,] -0.705411677 -0.57942208  0.24049595 #>  [12,] -1.115293290 -0.76255463 -1.04310500 #>  [13,]  1.175452272 -1.22436156 -1.38640227 #>  [14,]  1.163323464  0.93595248 -0.35468719 #>  [15,]  0.740115180 -0.67577632  0.01731844 #>  [16,]  1.601440012 -1.49938411  0.92018807 #>  [17,]  0.240059379 -0.23790043 -0.96933282 #>  [18,] -0.916705090  0.94753440  1.36072730 #>  [19,]  1.618689241 -0.90362707 -0.04163005 #>  [20,]  0.562887422 -0.80338410 -1.07272806 #>  [21,]  0.020818643  0.07529508  0.56738816 #>  [22,] -1.593153944 -0.36883048 -0.23429092 #>  [23,]  1.406199371 -0.02143408  1.26338516 #>  [24,] -1.429128536  0.46864660 -1.58328718 #>  [25,] -0.934904314 -0.63212679  0.49228289 #>  [26,]  1.433305360  0.42283996  1.39473103 #>  [27,]  0.019767484 -1.28450984 -1.55476772 #>  [28,]  0.508009412  0.38076053  1.20257860 #>  [29,] -1.004761203 -0.13291545  1.32921921 #>  [30,]  1.399130241 -1.31633977  0.26874764 #>  [31,]  0.482602659 -1.02751941 -0.50095342 #>  [32,] -0.543356713  1.28087863  1.23478788 #>  [33,] -0.507422484 -1.35009733  1.22676601 #>  [34,]  0.368655653 -0.52200992 -0.15475605 #>  [35,] -0.081804366 -0.31056493 -0.85835736 #>  [36,]  0.037561521  0.60339003  0.28293992 #>  [37,] -1.491887476  1.21099572 -1.12477401 #>  [38,]  0.005129352 -0.33981920  1.34288859 #>  [39,] -1.302914735 -1.67374465  1.06058374 #>  [40,]  1.305653373  0.61042250 -1.49525241 #>  [41,]  0.482143429  0.06664269  0.45823394 #>  [42,] -1.492688729  1.50206999  0.76974567 #>  [43,]  0.617022851  0.40265098  1.36800527 #>  [44,] -0.617457478  0.95260935  0.66416594 #>  [45,] -1.606625323 -1.44734923 -0.88052376 #>  [46,] -0.638064343 -1.31229252 -0.57006223 #>  [47,]  1.090721278  1.66480604 -1.44087462 #>  [48,]  1.486976621  1.31668060 -0.21521681 #>  [49,] -1.468830013  0.77331120 -1.56317205 #>  [50,]  1.455674529  1.44060148  1.11282839 #>  [51,] -0.290803815 -0.05969706 -1.45511364 #>  [52,]  0.733134872 -1.52929026 -0.97373036 #>  [53,]  0.344436164 -1.32132534 -1.09050376 #>  [54,]  0.025103475 -0.87335631 -0.37249570 #>  [55,]  0.005565627  0.47061529 -0.90081899 #>  [56,]  0.088159041  1.36984081  0.30931130 #>  [57,]  1.479750148  1.66158548  0.57718636 #>  [58,]  0.043417799 -1.24565767 -0.64769623 #>  [59,]  0.822253646  0.76005166 -0.69140429 #>  [60,]  0.329282537 -0.65838399 -1.01716064 #>  [61,]  0.071329812  1.25781906  1.31319492 #>  [62,] -0.855197996  0.70530147 -1.31843757 #>  [63,]  0.658248655  0.73338389  1.49260712 #>  [64,]  1.452178644 -0.85450389  0.61899811 #>  [65,] -0.835366335  0.75340630 -0.44970310 #>  [66,]  1.326492491 -1.51463056  1.40166921 #>  [67,]  0.036750337 -0.50928817  1.52348777 #>  [68,] -1.504910611  1.42806769  0.14878131 #>  [69,] -0.821539840 -0.49322190 -0.22241568 #>  [70,] -0.589478093  0.76056918  0.06020416 #>  [71,] -1.500470526  0.84789696  1.18340728 #>  [72,] -1.287270835  0.47255714 -0.38925795 #>  [73,]  0.930305547  1.75773170  1.23534137 #>  [74,]  0.884229017 -0.61870832  0.58878309 #>  [75,] -0.671317579 -1.51476542  0.93921205 #>  [76,] -1.457536947 -0.44484394  1.11904540 #>  [77,] -1.217264634 -0.23667642 -1.27240224 #>  [78,] -1.547997709  0.88847735 -0.47816578 #>  [79,]  0.373987416 -1.68670147 -1.40146429 #>  [80,]  1.594535000 -0.38942638  1.34122937 #>  [81,]  0.707546080  0.76234299  1.44107612 #>  [82,] -0.937221893 -1.28057014 -0.79493906 #>  [83,]  0.359529230  1.48544158  0.54443627 #>  [84,]  1.408014465  0.64311365 -1.48655835 #>  [85,]  0.271926331  0.18442901  0.13738623 #>  [86,]  0.581231249 -0.93864001 -0.66737277 #>  [87,] -0.757940402 -0.38858262 -1.18463333 #>  [88,]  0.642676960 -1.46812212 -0.99615908 #>  [89,] -1.289230186  0.50206737  0.67252825 #>  [90,]  0.361422796  0.33176833  0.49695858 #>  [91,] -0.124556298  1.45847359 -0.42208603 #>  [92,] -1.643635969  1.12659784  0.99615075 #>  [93,] -0.401240219 -0.81190439 -1.56386233 #>  [94,]  1.325629029 -1.58461564 -0.67454196 #>  [95,] -1.609741631 -0.45822804  0.86180774 #>  [96,] -0.299746586  0.51120513  0.79680852 #>  [97,] -0.495243445  0.63245996 -1.05074541 #>  [98,]  1.606864285  0.67175963  0.46781733 #>  [99,]  0.812649785  1.18037103  1.46240172 #> [100,] -0.407814777  0.59991283 -1.34126926"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  5.07911944  1.05678953  2.23934946  4.90880410  3.94374665  6.53658525 #>   [7]  2.57238069  2.92755504  1.93907094  3.77123417  3.82940916  3.26356318 #>  [13]  3.84825760  2.40057374  4.40478254  6.02535041  5.44352997  2.95309313 #>  [19]  3.00570147  5.14461239  4.39227241  2.98797491  6.23613147  2.86382843 #>  [25]  1.65266879 -0.44598386  1.02615166  2.74603837  3.73981858  6.94316675 #>  [31]  2.93417951  3.35549657  2.73999449  1.10539803  1.70830250  3.58635098 #>  [37]  1.28806087  2.81915418  3.13872282  6.20266732  4.37399516  4.97421467 #>  [43]  3.70563582  5.22433880  1.34701982  0.51430319  2.67376327  3.59549867 #>  [49]  5.04825709  3.26804763  2.83442489  2.81225459  3.24932848  4.93538219 #>  [55]  4.16472611  2.76181792  3.88390283  3.39162937  8.17669511  3.63533456 #>  [61]  3.06576604  4.44669588  4.64586848  6.06715629  2.05589047  2.77448895 #>  [67]  3.56069761  3.18679927  1.49435688  4.63091489  2.80400707 -0.08882069 #>  [73]  1.69272079  3.83614544  3.20063962  2.38496150  4.77629459  2.06289074 #>  [79]  3.67755742  4.86142919 -0.03458803  5.14039305  5.25721799 -0.11626374 #>  [85]  0.38867651  4.09989691  3.99624665  2.11558569  2.90413662  4.74220971 #>  [91]  2.43009103  2.66588818  2.77099636  6.15168702  2.77969727  2.99476337 #>  [97]  4.04757098  2.87846362  2.71481505  4.03923739"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38    cd34   cd19 cluster_id .flowsom_metacluster #>      <dbl>   <dbl>   <dbl>  <dbl> <chr>      <chr>                #>  1 -0.252  -0.602  -0.501   0.324 h          1                    #>  2 -0.752  -0.0650  0.604  -0.268 e          5                    #>  3 -0.0158  0.846   1.19   -1.40  i          2                    #>  4 -0.618   0.0271  0.255   0.415 o          2                    #>  5 -1.18    0.184   0.734   0.456 h          1                    #>  6  0.264   1.36   -0.490   0.274 o          2                    #>  7 -1.55    0.855   2.99    0.997 e          5                    #>  8  0.204   1.64    0.0465  0.939 n          1                    #>  9  0.644   0.201  -0.208   0.853 u          1                    #> 10 -0.218   1.30    0.435  -1.42  n          1                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38    cd34   cd19 cluster_id .phenograph_metacluster #>      <dbl>   <dbl>   <dbl>  <dbl> <chr>      <chr>                   #>  1 -0.252  -0.602  -0.501   0.324 h          2                       #>  2 -0.752  -0.0650  0.604  -0.268 e          1                       #>  3 -0.0158  0.846   1.19   -1.40  i          2                       #>  4 -0.618   0.0271  0.255   0.415 o          2                       #>  5 -1.18    0.184   0.734   0.456 h          2                       #>  6  0.264   1.36   -0.490   0.274 o          2                       #>  7 -1.55    0.855   2.99    0.997 e          1                       #>  8  0.204   1.64    0.0465  0.939 n          3                       #>  9  0.644   0.201  -0.208   0.853 u          1                       #> 10 -0.218   1.30    0.435  -1.42  n          3                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 9                      #>  2 7                      #>  3 10                     #>  4 5                      #>  5 7                      #>  6 5                      #>  7 5                      #>  8 5                      #>  9 2                      #> 10 7                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 5                    #>  2 1                    #>  3 2                    #>  4 4                    #>  5 1                    #>  6 1                    #>  7 2                    #>  8 2                    #>  9 7                    #> 10 1                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 2                    #>  2 3                    #>  3 1                    #>  4 2                    #>  5 3                    #>  6 3                    #>  7 1                    #>  8 1                    #>  9 3                    #> 10 3                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 6                         #>  2 4                         #>  3 4                         #>  4 5                         #>  5 10                        #>  6 4                         #>  7 6                         #>  8 6                         #>  9 4                         #> 10 3                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 8                   #>  2 2                   #>  3 8                   #>  4 7                   #>  5 7                   #>  6 5                   #>  7 4                   #>  8 1                   #>  9 5                   #> 10 8                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 1                       #>  2 4                       #>  3 1                       #>  4 3                       #>  5 3                       #>  6 2                       #>  7 4                       #>  8 4                       #>  9 3                       #> 10 1                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1 0.597 #>  2 2.21  #>  3 6.20  #>  4 2.57  #>  5 0.414 #>  6 1.23  #>  7 4.79  #>  8 3.31  #>  9 1.82  #> 10 3.87  #> 11 3.24  #> 12 2.99  #> 13 3.13  #> 14 4.74  #> 15 2.12  #> 16 1.71  #> 17 3.21  #> 18 0.993 #> 19 4.12  #> 20 5.84"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>       cd45   cd38     cd34   cd19   .pc1    .pc2   .pc3   .pc4 #>      <dbl>  <dbl>    <dbl>  <dbl>  <dbl>   <dbl>  <dbl>  <dbl> #>  1  2.13    0.705 -1.16    -1.37  -2.52   1.08    1.42  -0.377 #>  2 -2.16    0.719  0.784   -1.65   1.22   1.68   -0.397  1.87  #>  3  1.30    0.463  0.284    0.665 -0.973 -0.110  -0.212 -1.36  #>  4  0.266  -0.303 -0.681   -1.05  -0.475  0.600   1.34   0.277 #>  5  0.986   1.27   0.810    0.459 -0.971  0.420  -1.03  -1.05  #>  6 -0.0816  2.04  -0.00146 -0.362 -1.17   0.675  -1.04   0.700 #>  7 -0.0698  0.612  1.75    -0.132  0.510  1.16   -1.02  -0.737 #>  8 -0.390   1.50  -0.156    0.269 -0.693 -0.0874 -0.915  0.577 #>  9 -1.32    0.986  0.0330  -0.910  0.206  0.815  -0.341  1.44  #> 10  0.117   0.275 -1.00    -0.487 -0.819  0.0165  0.819  0.519 #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>       cd45   cd38     cd34   cd19 .tsne1 .tsne2 #>      <dbl>  <dbl>    <dbl>  <dbl>  <dbl>  <dbl> #>  1  2.13    0.705 -1.16    -1.37   4.34   1.87  #>  2 -2.16    0.719  0.784   -1.65  -0.889 -4.03  #>  3  1.30    0.463  0.284    0.665  0.463  3.67  #>  4  0.266  -0.303 -0.681   -1.05   2.77   1.60  #>  5  0.986   1.27   0.810    0.459  0.562  4.25  #>  6 -0.0816  2.04  -0.00146 -0.362  2.41  -3.16  #>  7 -0.0698  0.612  1.75    -0.132 -3.58  -2.75  #>  8 -0.390   1.50  -0.156    0.269  2.36  -2.21  #>  9 -1.32    0.986  0.0330  -0.910 -0.201 -3.36  #> 10  0.117   0.275 -1.00    -0.487  2.87   0.441 #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>       cd45   cd38     cd34   cd19 .umap1 .umap2 #>      <dbl>  <dbl>    <dbl>  <dbl>  <dbl>  <dbl> #>  1  2.13    0.705 -1.16    -1.37  -2.29  -0.706 #>  2 -2.16    0.719  0.784   -1.65  -0.666  3.13  #>  3  1.30    0.463  0.284    0.665  0.858 -3.05  #>  4  0.266  -0.303 -0.681   -1.05  -1.79  -2.01  #>  5  0.986   1.27   0.810    0.459  1.45  -3.23  #>  6 -0.0816  2.04  -0.00146 -0.362 -1.91   2.35  #>  7 -0.0698  0.612  1.75    -0.132  2.53  -0.873 #>  8 -0.390   1.50  -0.156    0.269 -1.56   2.07  #>  9 -1.32    0.986  0.0330  -0.910 -0.667  2.86  #> 10  0.117   0.275 -1.00    -0.487 -2.09   0.537 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>      .pc1    .pc2 #>     <dbl>   <dbl> #>  1 -1.18  -0.437  #>  2  0.230 -0.548  #>  3  2.73  -0.128  #>  4  0.772  0.965  #>  5  0.122  1.24   #>  6 -0.878  1.50   #>  7  0.104 -0.543  #>  8  0.295  2.14   #>  9  0.712 -0.784  #> 10  0.723  0.0671 #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1     PC2      PC3     PC4 #>     <dbl>   <dbl>    <dbl>   <dbl> #>  1 -0.735  1.24    1.48    -0.128  #>  2 -1.05  -1.17    0.753    0.296  #>  3  1.32  -1.42    1.41    -1.47   #>  4 -0.454 -0.144  -0.479   -0.0116 #>  5  1.91  -0.175   1.27    -0.345  #>  6  1.01  -0.480   0.184    0.309  #>  7 -0.134 -0.107   0.0852   0.968  #>  8 -0.203  0.748  -0.966    0.658  #>  9 -1.95  -1.78   -1.25    -0.0726 #> 10  1.14   0.0262 -0.00742 -0.297  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  8.08   -7.66 #>  2  2.37   -4.12 #>  3  6.81   -4.01 #>  4 -3.07    4.23 #>  5  3.07    3.35 #>  6 -6.88   -6.09 #>  7 10.3     1.02 #>  8  2.62    4.12 #>  9 -0.307  -2.68 #> 10  0.692  -6.27 #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -6.38  -3.76  #>  2  1.55   0.251 #>  3 -6.33   2.92  #>  4 -0.516 -0.728 #>  5  0.278  5.36  #>  6  5.36   2.85  #>  7 -8.58  -2.40  #>  8 -1.77   4.14  #>  9  3.73  -1.01  #> 10  5.09   1.20  #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>     .umap1 .umap2 #>      <dbl>  <dbl> #>  1 -2.96    1.60  #>  2 -0.206  -2.37  #>  3 -0.635  -0.560 #>  4 -3.37    1.09  #>  5  4.26    0.397 #>  6  3.30    1.62  #>  7 -3.49    0.106 #>  8 -0.0529  1.23  #>  9 -3.13    1.31  #> 10  4.73   -0.264 #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1  .tsne2 #>     <dbl>   <dbl> #>  1   2.75  6.43   #>  2  -2.40 -6.28   #>  3   5.86 -2.11   #>  4   4.77  5.55   #>  5  -6.98 -1.11   #>  6  -7.44 -2.29   #>  7   2.70 -7.05   #>  8   5.13 -6.46   #>  9   2.85  6.16   #> 10  -9.17  0.0725 #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>      UMAP1    UMAP2 #>      <dbl>    <dbl> #>  1  0.184  -2.79    #>  2  1.51    1.19    #>  3 -0.476  -0.746   #>  4  1.90   -2.91    #>  5 -0.0406  2.33    #>  6  1.92   -2.74    #>  7 -0.471   2.95    #>  8  1.71    2.39    #>  9 -3.73    0.00121 #> 10 -2.18   -2.45    #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.5   #>  2          0     #>  3          0.167 #>  4          0     #>  5          0.167 #>  6          0.333 #>  7          0.333 #>  8          0     #>  9          0.333 #> 10          0.5   #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            1   #>  2            1   #>  3            1   #>  4            0.5 #>  5            1   #>  6            0.3 #>  7            1   #>  8            1   #>  9            1   #> 10            0.5 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/35]> Bootstrap01 #>  2 <split [100/35]> Bootstrap02 #>  3 <split [100/33]> Bootstrap03 #>  4 <split [100/41]> Bootstrap04 #>  5 <split [100/40]> Bootstrap05 #>  6 <split [100/40]> Bootstrap06 #>  7 <split [100/36]> Bootstrap07 #>  8 <split [100/34]> Bootstrap08 #>  9 <split [100/41]> Bootstrap09 #> 10 <split [100/34]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)      3.35   #> 2 pstat5           1.09   #> 3 cd45             0.710  #> 4 cd34            -0.0956  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0.25 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 2 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5      -0.0588     #> 2 (Intercept)  0.00000102  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 0 × 2 #> # ℹ 2 variables: feature <chr>, coefficient <dbl>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38    cd34    cd19 .upsample_cluster #>     <dbl>  <dbl>   <dbl>   <dbl> <chr>             #>  1  0.391  0.908 -0.584  -0.281  b                 #>  2  0.805 -1.23   0.799  -0.472  b                 #>  3  0.943  0.371 -0.575   0.928  b                 #>  4 -0.631 -1.17  -0.0679 -0.0230 a                 #>  5 -0.189 -0.638  2.32   -0.734  b                 #>  6 -0.701  0.263 -0.179   0.972  a                 #>  7 -0.422  0.707  1.03   -2.52   a                 #>  8 -0.453  0.614  0.806   2.03   a                 #>  9 -1.67   1.09  -0.390  -0.473  a                 #> 10 -1.17  -1.38   0.599   0.635  b                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38    cd34    cd19 .upsample_cluster #>     <dbl>  <dbl>   <dbl>   <dbl> <chr>             #>  1  0.391  0.908 -0.584  -0.281  a                 #>  2  0.805 -1.23   0.799  -0.472  a                 #>  3  0.943  0.371 -0.575   0.928  a                 #>  4 -0.631 -1.17  -0.0679 -0.0230 a                 #>  5 -0.189 -0.638  2.32   -0.734  b                 #>  6 -0.701  0.263 -0.179   0.972  b                 #>  7 -0.422  0.707  1.03   -2.52   a                 #>  8 -0.453  0.614  0.806   2.03   b                 #>  9 -1.67   1.09  -0.390  -0.473  a                 #> 10 -1.17  -1.38   0.599   0.635  a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 a                 #>  4 b                 #>  5 a                 #>  6 a                 #>  7 a                 #>  8 a                 #>  9 a                 #> 10 a                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 b                 #>  4 b                 #>  5 a                 #>  6 a                 #>  7 b                 #>  8 a                 #>  9 a                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 a                 #>  3 a                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 a                 #>  8 a                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
