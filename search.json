[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.35     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.9        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.3.0        bslib_0.6.2       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.3              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [89] tidyselect_1.2.1              Biostrings_2.70.3             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] readr_2.1.5                   blob_1.2.4                    #> [119] bitops_1.0-7                  listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1   8.29  -12.7 #> 2   3.25  -13.3 #> 3  -7.65  -34.4 #> 4  -5.42  -15.5 #> 5   5.81  -15.1 #> 6  -4.45  -22.0 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  -4.24 -15.6  #>  2   1.09 -16.3  #>  3  11.1  -35.3  #>  4  11.4  -18.1  #>  5  -3.30 -18.8  #>  6   9.70 -23.3  #>  7   2.69 -17.5  #>  8   9.05 -28.6  #>  9   9.14 -20.0  #> 10  -1.65  -9.70 #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -8.59  -5.45  #>  2 -7.92  -4.35  #>  3 -2.82  -0.442 #>  4 -3.05   1.41  #>  5 -8.81  -5.37  #>  6 -0.586  2.34  #>  7 -9.04  -5.14  #>  8 -2.27   0.287 #>  9 -6.36  -0.283 #> 10 -7.26  -6.05  #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         stringr_1.5.1       #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [22] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [25] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [28] tweenr_2.0.3        irlba_2.3.5.1       parallel_4.3.3      #>  [31] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [34] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [37] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [40] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [43] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [46] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [49] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [52] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [55] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [58] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [61] Rtsne_0.17          future_1.33.1       desc_1.4.3          #>  [64] survival_3.5-8      polyclip_1.10-6     embed_1.1.4         #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [73] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [76] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [79] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [82] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [85] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [88] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [91] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [94] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [97] lava_1.8.0          uwot_0.1.16         gtable_0.3.4        #> [100] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [103] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [106] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [109] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.2         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.2     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.3        timechange_0.3.0    tidyselect_1.2.1    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [94] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.3              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 philentropy_0.8.0             #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     emdist_0.3-3                  #>  [89] RProtoBufLib_2.14.1           tidyselect_1.2.1              #>  [91] Biostrings_2.70.3             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   ggplot2_3.5.0                 #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  scales_1.3.0                  #> [127] prodlim_2023.08.28            purrr_1.0.2                   #> [129] crayon_1.5.2                  rlang_1.1.3                   #> [131] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.1       bslib_0.6.2         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.2     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.3        #>  [49] timechange_0.3.0    tidyselect_1.2.1    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.1     tidyr_1.3.1         RProtoBufLib_2.14.1 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.9          #> [103] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  130.  3.23   1.08 #> 2  230. -0.992 10.5  #> 3  292.  4.25   1.07 #> 4  431. -0.573 13.1  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.3              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  tidyr_1.3.1                   #>  [73] data.table_1.15.2             hms_1.1.3                     #>  [75] tidygraph_1.3.1               utf8_1.2.4                    #>  [77] XVector_0.42.0                ggrepel_0.9.5                 #>  [79] BiocVersion_3.18.1            foreach_1.5.2                 #>  [81] pillar_1.9.0                  stringr_1.5.1                 #>  [83] RcppHNSW_0.6.0                later_1.3.2                   #>  [85] splines_4.3.3                 tweenr_2.0.3                  #>  [87] lattice_0.22-5                survival_3.5-8                #>  [89] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [91] tidyselect_1.2.1              Biostrings_2.70.3             #>  [93] knitr_1.45                    gridExtra_2.3                 #>  [95] xfun_0.42                     graphlayouts_1.1.1            #>  [97] hardhat_1.3.1                 timeDate_4032.109             #>  [99] stringi_1.8.3                 yaml_2.3.8                    #> [101] evaluate_0.23                 codetools_0.2-19              #> [103] ggraph_2.2.1                  tibble_3.2.1                  #> [105] BiocManager_1.30.22           cli_3.6.2                     #> [107] rpart_4.1.23                  xtable_1.8-4                  #> [109] systemfonts_1.0.6             munsell_0.5.0                 #> [111] jquerylib_0.1.4               Rcpp_1.0.12                   #> [113] globals_0.16.3                png_0.1-8                     #> [115] parallel_4.3.3                ellipsis_0.3.2                #> [117] pkgdown_2.0.7                 gower_1.0.1                   #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  ggridges_0.5.6                #> [127] scales_1.3.0                  prodlim_2023.08.28            #> [129] purrr_1.0.2                   crayon_1.5.2                  #> [131] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [97] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T, Davis K, Nolan G (2024). tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis. doi:10.18129/B9.bioc.tidytof, https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.3, http://www.bioconductor.org/packages/tidytof. Keyes, J. T, Koladiya, Abhishek, Lo, Yu-Chen, Nolan, P. G, Davis, L. K (2023). “tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis.” Bioinformatics Advances, 3(1). doi:10.1093/bioadv/vbad071, https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984.","code":"@Manual{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {Timothy Keyes and Kara Davis and Garry Nolan},   year = {2024},   url = {http://www.bioconductor.org/packages/tidytof},   note = {https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.3},   doi = {10.18129/B9.bioc.tidytof}, } @Article{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {{Keyes} and Timothy J. and {Koladiya} and {Abhishek} and {Lo} and {Yu-Chen} and {Nolan} and Garry P. and {Davis} and Kara L.},   year = {2023},   journal = {Bioinformatics Advances},   volume = {3},   number = {1},   doi = {10.1093/bioadv/vbad071},   url = {https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"See documentation object's original package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"# See examples in each object's original package NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `{cluster_col}_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_{cluster_name}\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 18              #>  2 9               #>  3 4               #>  4 8               #>  5 8               #>  6 19              #>  7 19              #>  8 15              #>  9 20              #> 10 19              #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 17              #>  2 17              #>  3 14              #>  4 18              #>  5 18              #>  6 4               #>  7 4               #>  8 8               #>  9 10              #> 10 4               #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 8                   #>  2 11                  #>  3 1                   #>  4 2                   #>  5 5                   #>  6 6                   #>  7 2                   #>  8 3                   #>  9 10                  #> 10 2                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 13                  #>  2 5                   #>  3 14                  #>  4 4                   #>  5 1                   #>  6 1                   #>  7 2                   #>  8 3                   #>  9 3                   #> 10 7                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>       cd45    cd38   cd34   cd19 cluster_id #>      <dbl>   <dbl>  <dbl>  <dbl> <chr>      #>  1 -0.417  -0.855   1.16  -0.347 n          #>  2  0.224   2.11    1.35   0.121 r          #>  3 -2.25   -2.44   -0.100 -1.46  f          #>  4 -0.540   0.0877 -0.326  0.220 w          #>  5  0.108  -0.0184  0.644  0.836 o          #>  6 -0.436  -0.0671  0.765  1.16  a          #>  7 -0.0216  0.554  -0.330 -0.404 p          #>  8 -1.23    0.521   1.20   1.43  p          #>  9  0.528  -2.25   -0.658 -0.764 x          #> 10 -0.157  -0.625  -0.694  0.101 q          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>        cd45   cd38   cd34    cd19 cluster_id #>       <dbl>  <dbl>  <dbl>   <dbl> <chr>      #>  1 -0.202   -1.30   0.945  1.20   i          #>  2 -1.97     0.313 -1.12  -0.105  w          #>  3 -0.614    1.43   0.530  0.219  i          #>  4 -0.907    0.823  0.249  0.0425 a          #>  5 -0.0517  -0.822  0.954 -0.335  r          #>  6  1.45     0.749  0.161  0.702  v          #>  7  0.171    1.20  -1.09  -0.134  p          #>  8  0.00567 -1.82  -0.810 -1.01   e          #>  9  0.503   -0.373 -0.494  0.342  r          #> 10 -0.409    0.174 -0.393 -0.155  d          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 104 × 5 #>        cd45    cd38   cd34   cd19 cluster_id #>       <dbl>   <dbl>  <dbl>  <dbl> <chr>      #>  1  1.75    -1.14    0.247  1.68  m          #>  2  0.224    2.11    1.35   0.121 r          #>  3 -2.25    -2.44   -0.100 -1.46  f          #>  4 -0.115   -1.02   -0.537 -0.926 p          #>  5  1.86     1.09   -1.07  -0.803 s          #>  6  0.00101 -0.777  -2.06   1.77  o          #>  7 -1.20     1.35   -0.228 -1.31  y          #>  8  0.274   -0.597  -1.02   1.98  m          #>  9  0.692    0.951   0.347  0.129 n          #> 10 -1.18    -0.0734  0.846 -0.866 u          #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>      cd45    cd38     cd34    cd19 cluster_id #>     <dbl>   <dbl>    <dbl>   <dbl> <chr>      #>  1 -1.07  -0.284  -0.00465  0.0257 c          #>  2 -1.31   0.0857  0.627    2.08   d          #>  3 -0.714 -0.102   1.53     1.44   r          #>  4 -1.05  -0.457  -0.885    0.732  i          #>  5 -1.87   0.157   0.111   -0.260  o          #>  6  1.55   0.238  -0.624   -0.375  y          #>  7 -1.33  -0.409   0.782    0.0550 g          #>  8  0.984  1.02    1.17     1.38   m          #>  9  1.36  -0.700   1.98     0.949  r          #> 10  0.555 -0.157   0.318   -0.450  n          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>      cd45    cd38   cd34    cd19 cluster_id #>     <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1 -1.31   0.0857  0.627  2.08   d          #>  2 -0.714 -0.102   1.53   1.44   r          #>  3 -1.05  -0.457  -0.885  0.732  i          #>  4 -1.87   0.157   0.111 -0.260  o          #>  5  1.55   0.238  -0.624 -0.375  y          #>  6 -1.33  -0.409   0.782  0.0550 g          #>  7 -1.22  -0.298   1.68  -1.37   e          #>  8  0.236 -0.523   1.39   1.15   x          #>  9 -0.576  0.127  -0.295 -0.216  k          #> 10  1.36  -0.700   1.98   0.949  r          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 523 × 4 #>       cd45   cd38    cd34   cd19 #>      <dbl>  <dbl>   <dbl>  <dbl> #>  1  0.261  -1.25   0.0175 -3.22  #>  2  0.0378 -0.144  0.331   0.971 #>  3  1.66    0.341  0.457   0.371 #>  4 -1.42   -0.390  0.373  -0.213 #>  5 -1.56    0.840 -0.293   1.25  #>  6  1.09    0.275  1.37   -0.253 #>  7 -0.122   1.11   0.966   1.97  #>  8  2.02    0.927  0.534   1.11  #>  9  0.0511  0.317 -0.164  -1.19  #> 10  0.949  -0.105  1.09   -0.629 #> # ℹ 513 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 190 × 4 #>      cd45    cd38    cd34   cd19 #>     <dbl>   <dbl>   <dbl>  <dbl> #>  1 -1.56   0.840  -0.293   1.25  #>  2 -0.495 -1.22   -1.03    1.01  #>  3  0.243  0.128  -0.219   1.20  #>  4 -0.479  0.397  -0.0562 -0.130 #>  5  0.904 -1.03    0.989   1.22  #>  6  0.741  1.67    0.187   1.09  #>  7 -1.65  -0.744   0.119  -1.23  #>  8 -2.03  -0.0468 -0.218   0.975 #>  9 -0.265 -1.30    0.454  -1.46  #> 10 -2.69   0.960   0.122   0.220 #> # ℹ 180 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 193 × 4 #>       cd45    cd38    cd34    cd19 #>      <dbl>   <dbl>   <dbl>   <dbl> #>  1 -1.16   -1.61    0.0406 -0.0110 #>  2 -0.640   1.42   -1.43    0.491  #>  3 -0.479   0.397  -0.0562 -0.130  #>  4  1.23   -0.135  -1.87   -0.781  #>  5 -0.825  -0.447   0.523   0.896  #>  6  1.79    0.0539  0.125  -0.418  #>  7  0.613   1.57    2.12   -0.655  #>  8  0.0221  1.01    0.886   0.387  #>  9  0.193   1.04   -0.188   0.142  #> 10 -0.146   0.0550 -0.478   0.902  #> # ℹ 183 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>      cd45    cd38   cd34   cd19 cluster_id #>     <dbl>   <dbl>  <dbl>  <dbl> <chr>      #>  1  0.224 -0.670   1.39  -0.803 c          #>  2 -0.679  0.323  -0.192 -1.10  e          #>  3 -0.725 -0.0650  1.48  -1.02  z          #>  4  0.483  1.04   -0.529 -0.287 d          #>  5 -0.752  0.167   0.482 -0.506 w          #>  6 -0.442  1.57   -1.05   1.58  j          #>  7 -0.794 -1.28   -1.54   1.11  n          #>  8 -1.95   0.110  -0.776 -0.955 q          #>  9  0.434  0.131   0.889  0.176 g          #> 10  0.499  0.535  -0.873  0.442 d          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 87 × 5 #>       cd45   cd38   cd34    cd19 cluster_id #>      <dbl>  <dbl>  <dbl>   <dbl> <chr>      #>  1  0.164   1.03  -0.481  1.85   a          #>  2 -0.140  -0.214  0.140 -0.508  a          #>  3 -0.0697  2.13   1.51   0.258  a          #>  4  0.996   0.548  0.197  0.0865 b          #>  5 -0.575   0.261  0.783 -2.24   b          #>  6  0.0865 -1.11  -0.321 -1.42   b          #>  7 -0.278  -1.18  -0.177 -3.19   c          #>  8 -1.40    0.218 -0.218  1.04   c          #>  9 -2.93    0.567  0.218  1.20   c          #> 10 -2.03    0.848 -0.520 -0.858  c          #> # ℹ 77 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>      cd45    cd38    cd34    cd19 .spade_density #>     <dbl>   <dbl>   <dbl>   <dbl>          <dbl> #>  1  1.12   0.812   0.553  -0.427               1 #>  2 -1.24  -0.662  -0.942  -0.0750              1 #>  3 -2.39  -1.69   -0.0896  0.276               1 #>  4  0.234  0.0430 -0.212  -0.919               1 #>  5 -0.260  0.261   0.967   1.54                1 #>  6 -0.259 -0.825  -0.249  -0.220               1 #>  7  0.414 -1.43    0.396  -0.225               1 #>  8  0.671 -0.500  -1.62    0.692               1 #>  9 -0.181  0.361   0.629  -0.221               1 #> 10  0.842  1.54   -1.22   -1.11                1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38    cd34    cd19 .spade_density #>     <dbl>   <dbl>   <dbl>   <dbl>          <dbl> #>  1  1.12   0.812   0.553  -0.427             1   #>  2 -1.24  -0.662  -0.942  -0.0750            1   #>  3 -2.39  -1.69   -0.0896  0.276             0.1 #>  4  0.234  0.0430 -0.212  -0.919             1   #>  5 -0.260  0.261   0.967   1.54              0.9 #>  6 -0.259 -0.825  -0.249  -0.220             1   #>  7  0.414 -1.43    0.396  -0.225             1   #>  8  0.671 -0.500  -1.62    0.692             0.9 #>  9 -0.181  0.361   0.629  -0.221             1   #> 10  0.842  1.54   -1.22   -1.11              0.3 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby        -0.268     -0.918      0.224        0.0449      -0.344 #> 2 mario         0.341      0.0834    -0.00143      0.146        0.129 #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45    -0.268  #>  2 kirby   a          cd38    -0.918  #>  3 kirby   a          cd34     0.224  #>  4 kirby   a          cd19     0.0449 #>  5 kirby   b          cd45    -0.344  #>  6 kirby   b          cd38    -0.225  #>  7 kirby   b          cd34    -0.0407 #>  8 kirby   b          cd19    -0.552  #>  9 kirby   c          cd45    -0.0238 #> 10 kirby   c          cd38    -0.169  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@p_emd` `stim_cd38@p_emd` `stim_cd34@p_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                17.8              6.97              9.05 #> 2 kirby                NA               NA                NA    #> # ℹ 101 more variables: `stim_cd19@p_emd` <dbl>, `stim_cd45@k_emd` <dbl>, #> #   `stim_cd38@k_emd` <dbl>, `stim_cd34@k_emd` <dbl>, `stim_cd19@k_emd` <dbl>, #> #   `stim_cd45@x_emd` <dbl>, `stim_cd38@x_emd` <dbl>, `stim_cd34@x_emd` <dbl>, #> #   `stim_cd19@x_emd` <dbl>, `stim_cd45@t_emd` <dbl>, `stim_cd38@t_emd` <dbl>, #> #   `stim_cd34@t_emd` <dbl>, `stim_cd19@t_emd` <dbl>, `stim_cd45@j_emd` <dbl>, #> #   `stim_cd38@j_emd` <dbl>, `stim_cd34@j_emd` <dbl>, `stim_cd19@j_emd` <dbl>, #> #   `stim_cd45@e_emd` <dbl>, `stim_cd38@e_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 p          cd45   stim        12.7  #>  2 p          cd38   stim         6.91 #>  3 p          cd34   stim         8.49 #>  4 p          cd19   stim        10.5  #>  5 k          cd45   stim        10.3  #>  6 k          cd38   stim        13.4  #>  7 k          cd34   stim         6.76 #>  8 k          cd19   stim         8.93 #>  9 x          cd45   stim        14.7  #> 10 x          cd38   stim         5.16 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0414   0.0352   0.0228   0.0497   0.0290   0.0311   0.0497 #> 2 mario     0.0426   0.0542   0.0387   0.0348   0.0406   0.0445   0.0445 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0414   0.0352   0.0228   0.0497   0.0290   0.0311   0.0497 #> 2 mario     0.0426   0.0542   0.0387   0.0348   0.0406   0.0445   0.0445 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@l_jsd` `stim_cd38@l_jsd` `stim_cd34@l_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby              NA                NA                NA     #> 2 mario               0.916             0.916             0.916 #> # ℹ 101 more variables: `stim_cd19@l_jsd` <dbl>, `stim_cd45@z_jsd` <dbl>, #> #   `stim_cd38@z_jsd` <dbl>, `stim_cd34@z_jsd` <dbl>, `stim_cd19@z_jsd` <dbl>, #> #   `stim_cd45@o_jsd` <dbl>, `stim_cd38@o_jsd` <dbl>, `stim_cd34@o_jsd` <dbl>, #> #   `stim_cd19@o_jsd` <dbl>, `stim_cd45@y_jsd` <dbl>, `stim_cd38@y_jsd` <dbl>, #> #   `stim_cd34@y_jsd` <dbl>, `stim_cd19@y_jsd` <dbl>, `stim_cd45@i_jsd` <dbl>, #> #   `stim_cd38@i_jsd` <dbl>, `stim_cd34@i_jsd` <dbl>, `stim_cd19@i_jsd` <dbl>, #> #   `stim_cd45@q_jsd` <dbl>, `stim_cd38@q_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 l          cd45   stim        0.779 #>  2 l          cd38   stim        0.748 #>  3 l          cd34   stim        0.863 #>  4 l          cd19   stim        0.663 #>  5 z          cd45   stim        0.846 #>  6 z          cd38   stim        0.846 #>  7 z          cd34   stim        0.728 #>  8 z          cd19   stim        0.692 #>  9 o          cd45   stim        0.920 #> 10 o          cd38   stim        0.705 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0305   0.0382   0.0420   0.0286   0.0363   0.0286   0.0439 #> 2 mario     0.0294   0.0378   0.0420   0.0294   0.0630   0.0294   0.0441 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0305 #>  2 kirby   b          0.0382 #>  3 kirby   c          0.0420 #>  4 kirby   d          0.0286 #>  5 kirby   e          0.0363 #>  6 kirby   f          0.0286 #>  7 kirby   g          0.0439 #>  8 kirby   h          0.0363 #>  9 kirby   i          0.0420 #> 10 kirby   j          0.0363 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby               0.125              0.0417             0.0417 #> 2 mario               0.0714             0.0714             0.143  #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0.125  #>  2 kirby   a          cd38    0.0417 #>  3 kirby   a          cd34    0.0417 #>  4 kirby   a          cd19    0.0417 #>  5 kirby   b          cd45    0      #>  6 kirby   b          cd38    0      #>  7 kirby   b          cd34    0.235  #>  8 kirby   b          cd19    0      #>  9 kirby   c          cd45    0.0667 #> 10 kirby   c          cd38    0      #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  692  787  813  710  851  570  407  367  996   253 #>    [2,]  509  985  926  136  573  329  857  819  134   126 #>    [3,]   42  539  296  393  895  454  488  317  804   715 #>    [4,]  848  472  817  461  415   79  891  432  975   532 #>    [5,]   54  114  928  391  327  426  463  660  983   527 #>    [6,]  973  807  654  184  135  281  719  821   80   800 #>    [7,]  497  939  319   15  363  105  200  863  990   275 #>    [8,]  913  990  344  607  795  951  939  694  543    87 #>    [9,]  434   64   56  410  141   86  370  523  904   914 #>   [10,]  813    1  195  692  851  367  710  787  935   276 #>   [11,]  923  741  356  135   67  635  834  727  732   127 #>   [12,]  527  598  327  119  711  325  769  476  193   291 #>   [13,]  459  945  905   87  634  778  803  264  863   466 #>   [14,]  333  113  582  232  829  814  320  112  755   490 #>   [15,]  832  200  363  115  775  831  497  809  318     7 #>   [16,]  961  452  241  849  651  382  594   48  761   841 #>   [17,]  451  536  752  192  635  923  741  346   80   621 #>   [18,]  901  266  885  978  636  614  628  843  280   189 #>   [19,]  896  560  919  486  564  820  146  297  455   817 #>   [20,]  477  546  149  282   38  942  519  123  846   387 #>   [21,]  998  440  181  993  493  670  567  882  920   303 #>   [22,]  749  296  860  322  393  284  733  618    3    42 #>   [23,]  967   24  547  409  107  172  382  944  841   412 #>   [24,]   23  967  382  409  547  938  107  245  841   761 #>   [25,]  343  524  585  216  360  869  215  753  518   637 #>   [26,]  192   73  529  221  346   17  894  635  564   451 #>   [27,]  534  734  143  168  910  962  638  852  750   441 #>   [28,]  328   97  810  855  776  371  774  188  628   978 #>   [29,]  480  918  350  668  925  586  299  194  187   792 #>   [30,]  205  621  578  510  137  869  637  536  542   244 #>   [31,]  494  976  989  852  722  762  701  655  986   393 #>   [32,]  879  386  204  613  362  311  400  383  899   659 #>   [33,]  806  269  572  244  751  597  931  433  305    98 #>   [34,]  689  374  180  860  183  830  827   22  236   912 #>   [35,]  178   56   64  439   41  410  326  924    9   141 #>   [36,]   84  233  568  960  212  435  768  546  943   587 #>   [37,]   93  267  836  548  207  247  102  748  377   550 #>   [38,]  639  633  994  789  596  351  282  435  377   460 #>   [39,]  240  272  209  651  551  796  575  841  804   822 #>   [40,]  212  740  351  324  435  789  102  207  548   748 #>   [41,]  916  714  791  326  825  239  141   56  447   883 #>   [42,]    3  296  317  454  895  715  867  539  940   553 #>   [43,]  307  920  152  179  559  812  882   21  447   681 #>   [44,]  826  520  526  101  617  226  398  187  194   353 #>   [45,]  842  495  627  758  321  387  656  149  332   590 #>   [46,]  791  781  159  990  449  831  913  341  484   523 #>   [47,]  784  639  658  837  994  789  868  790   38   640 #>   [48,]  897  382  890  452  268  352  887  594   16    24 #>   [49,]  691  724  103  286  231  289  144  670  911    52 #>   [50,]  521  780  366  181  515   70  854  968  944   213 #>   [51,]  995  110  735  941  708  388   81  130  746   531 #>   [52,]  911  144  103  507  330  993  920  807  135   834 #>   [53,]  420  642  718  658  837   76  959  384  929   121 #>   [54,]    5  928  391  463  660  114  327  426  906   598 #>   [55,]  581  235  964  838  871  589  462  489  624   478 #>   [56,]   64  428   86  410  341  141  473  916  326   370 #>   [57,]  100  360  349  448  139  656  753  503  854   160 #>   [58,]  217  965  644  554  132  588  298  894  158    78 #>   [59,]  229  880  205  254  299  353  925  862  137   650 #>   [60,]  737  364  798  439  882  263  248  429  114   825 #>   [61,]  304  858  949  704  117  132  615  794  894   559 #>   [62,]  187  350  355  674  657  182  194  416   44   299 #>   [63,]  732  821  759  407  710  865  127   11   67   719 #>   [64,]   56   86  410  473  428  434    9  765  934   904 #>   [65,]  372  933  126  380  811  753  819  596  667   503 #>   [66,]  113  889  738  333  186  679  373  157  458   755 #>   [67,]  127   11  741  680  732  923  727  999  892   356 #>   [68,]  338  157  128  566  274  612  358  163  717   616 #>   [69,]  762  273  750  852  534  505  172   27  651   382 #>   [70,]  249  521  715  999  892  684  135  940   50   542 #>   [71,]  203  574  986  900  739  424  591  972  989   580 #>   [72,]  394  506  877  575  427  209  662  133  743   154 #>   [73,]  192   26  221  988  346  164  828  615   17   894 #>   [74,]  122  768  504  568  588  261  942  464   90   943 #>   [75,]  528  793  376  589  964  454  706  317  283   478 #>   [76,]  420  151  823  676  642  336  237  601  718   171 #>   [77,]  611  800  898  538  609  884  818  499  162   947 #>   [78,]   95  554  808  571   12  769  476  158  411   217 #>   [79,]  817  248  153    4  472  825  146  919  432   239 #>   [80,]  578  752  485  314  821  487  281  621  999   741 #>   [81,]   88  500   51  499  388  995  110  167  145   953 #>   [82,]  263  173  429   14  875  560  737  476  700    60 #>   [83,]  504  298   74  588  399  965  443  305  464   158 #>   [84,]  568   36  402  943  233  212  646  740  960   768 #>   [85,]  517  977  908  720  693  126  799  475  339   390 #>   [86,]  934  449  765   56   64  473  166  246  428   906 #>   [87,]  634   13  945  459  863  775  468  701  131   905 #>   [88,]   81  953   51  145  499  708  500  995  167   110 #>   [89,]  377  809  380  971  293  267  508   67  442   832 #>   [90,]  122  425  942  704  464  842  311  546  747   914 #>   [91,]  827  887  505  724  860  897  691   49  103   432 #>   [92,]  835  288  623  214  687  936  264  466  535   166 #>   [93,]   37  267  548  207  550  621  748  836  247   102 #>   [94,]  147  644  217  814  946  388  716  500   82   529 #>   [95,]   78  571  808  158  554  946  305  814  769   175 #>   [96,]  226  218   23  815  109  738  185  967  841    24 #>   [97,]  855  315  260  188  977   28  799  475   85   790 #>   [98,]  847  518  139  360  753  381  773  869  503   811 #>   [99,]  389  533  423  341  671  111  883  629  785   428 #>  [100,]  349  295  160  968   57  856  515  854  933   169 #>  [101,]  398  174  226   44  921  617  826  979  520   526 #>  [102,]  351  748  836  482  462   37  548  324   93   207 #>  [103,]  144  691  911   52   49  284  993  724  289   231 #>  [104,]  688  401  932  886  603  453  726  723  531   659 #>  [105,]  727  275  319  922  127  812  759  732   67   685 #>  [106,]  597  502  806  982  941  244  690  751  403   287 #>  [107,]  409  412  593  944  967  766  366  670  196    23 #>  [108,]  747  265  519  773  346  530  971  397  164    98 #>  [109,]  622  185  226  626  243  839  165  245  979   398 #>  [110,]  167  735  661  898  941  287  723  453  726   728 #>  [111,]  423   99  671  533  629  389  364  142  593   670 #>  [112,]  487  314  198  333  991  232  213  569  281   826 #>  [113,]  333  755   66   14  700  889  157  997  396   320 #>  [114,]  798    5   54  983  928  598  660  439  391   426 #>  [115,]  383  200  675  140  613  318   15  395  565   832 #>  [116,]  665  595  620  889  526  738  408  617  101   979 #>  [117,]  681  152  559  704  745  141  949  326  641   447 #>  [118,]  375  323  874  820  486  458  438  220  456   507 #>  [119,]   12  704  598  949  711  193  132  399  794   410 #>  [120,]  170  405  699  150  581  255  805  744  992   513 #>  [121,]  496  959  658  782  868   47  790  457  837   501 #>  [122,]   90  768  942   74  222  546  443  261  425   464 #>  [123,]  134  926  535  387  933  509  149  561  136   442 #>  [124,]  357  140  675  115  832  694  347  477  994   565 #>  [125,]  291  909  346  773  747  360  637  510  181   527 #>  [126,]   65  596  667  134  926  819  509  390  693   252 #>  [127,]   67  727  732  923  451  741   11  680   63   356 #>  [128,]  612  730  262  338  606  358   68  815  717   218 #>  [129,]  760  913  694  543  736  357    8  831  853   781 #>  [130,]  483  886  603  531  176  453  746  401  164   104 #>  [131,]  701  468   87  986  634  989  591  180  913   857 #>  [132,]  794  949  894  988  119  554  559  704   61   965 #>  [133,]  506  584  209  240  539  161  796  394  575   992 #>  [134,]  926  596  123  509  460  126  667   65  535   933 #>  [135,]  249  807   11  834  521  567  741   70  923   356 #>  [136,]  329  509    2  819  926  905  867  466  573   264 #>  [137,]  205  403  138  199   30  215  244  625  695   869 #>  [138,]  137  403  302  205  199  482  462   30  548   489 #>  [139,]  518  753  847   98  360  372  878  503  381    57 #>  [140,]  347  124  115  675  395  357  383  832  342    15 #>  [141,]  326  370  523  447  152  117  983  608  428   641 #>  [142,]  742  111  533  239  286   99  364  423  883   629 #>  [143,]  962   27  910  168  734  774  961  638  334   534 #>  [144,]  911   52  103  691  993  196  330  507  300   289 #>  [145,]  777  499  167  162  110  884  735  764  697   728 #>  [146,]  486  896   19  919  817  820  987  461  323   560 #>  [147,]  455  529  707  654  829   94  564  388  582   297 #>  [148,]  912  492  513  540  438  456  238  927  818   699 #>  [149,]  387  758  503  627  123   20  495  519   45   332 #>  [150,]  771  699  538  170  120  201  294  581  947   650 #>  [151,]  335  823  470   76  234  981  676  211  764   864 #>  [152,]  745  117  484  681  447  141  303  559  608   983 #>  [153,]  307  354  248  472   79  560  564  825  817    43 #>  [154,]  586  877  918  743  277  394  369  584  606   194 #>  [155,]  512  375  700  514  118  458  373  874  820   490 #>  [156,]  252  235  695  390  693  542  626  277  871   957 #>  [157,]  358  755  338  566   68  717  274  396   66   113 #>  [158,]  305  965  554  433   95  931  269   33  572   399 #>  [159,]  990  533  286   46  289  344  724   87  939   785 #>  [160,]  349  856  100  295  535  933  169  515  667   647 #>  [161,]  830  797  133  992  539  838  506  240  209   672 #>  [162,]  499  777  903  167  717  609  145   77  898   110 #>  [163,]  616  757   68  310  966  338  594  937  566    96 #>  [164,]  265  536  550  451  192  346  108  621   17   127 #>  [165,]  258  308  647  622  856  169  626  109  334   295 #>  [166,]  645  561  449  608  627  303  370  387  332   641 #>  [167,]  110  735  499  898  145  162  287  661  728   777 #>  [168,]  638  910   27  852  551  143  534  734  816   958 #>  [169,]  647  295  349  522  856  541  160  206  100   174 #>  [170,]  120  699  150  805  255  581  744  992  405   478 #>  [171,]  225  404  237  676  601  720  446  336  824    76 #>  [172,]  547  841  804   23  651  272  796  196  750   551 #>  [173,]  476   82  875   14  263  703  333  213  660    78 #>  [174,]  921  398  968  101  366  295  780  226  169   515 #>  [175,]  257  571  343  769  617  327  271  569   25   788 #>  [176,]  453  661  603  726  130  388  723  886  552   192 #>  [177,]  309  183  619  331  450  367  501  528  525   236 #>  [178,]  924  410  598  511  904  439  473   35   12   870 #>  [179,]  882  297  582  529  567  998  232  440  920   564 #>  [180,]  951  131  701  634   87  863  945  363  183    31 #>  [181,]  998  440  567  521   21  356   50  993  635   741 #>  [182,]  674  657  194  187  258  626  185   62  277   252 #>  [183,]  619  528  367  283  177  376   75  540  454   363 #>  [184,]  996  719  821  834    6  549  865  947  570   922 #>  [185,]  243  109  626  182  194  258   44  622  226   668 #>  [186,]  679  938  409  967  227  738  300  107  213   889 #>  [187,]   62  194  350  668  182  674  657   44  299   355 #>  [188,]  958  977   97  260  799  475  392  908  816   673 #>  [189,]  630  788  202  881  713  620  885  408  984   280 #>  [190,]  610  290  664   71  579  986  197  558  989   414 #>  [191,]  270  731  228  306  963  903  833  862  763   162 #>  [192,]   26   17   73  346  451  164  635  536  176   529 #>  [193,]  590  426  370  598  656  410  641  448  527   928 #>  [194,]  187  668  182  918  185   62  674  350   44   657 #>  [195,]  813  692  406  276   10  851    1  367  688   570 #>  [196,]  547  107  944  144  412  469  780   23  967    42 #>  [197,]  664  449  698  417  558  414   86  166  709    92 #>  [198,]  213  569  520  617  526  826  112  257  738   398 #>  [199,]  302  625  137  674  215  138  657  403  693   653 #>  [200,]  115   15  383  613  363  832  293  809  318   759 #>  [201,]  485  771  666  538  224  650  294  150   80   821 #>  [202,]  620  630  788  189  355  984  216  408  175   881 #>  [203,]  591  709  986  972  989  574  985  739  857   900 #>  [204,]  362  613  318  292   32  383  395  659  879   115 #>  [205,]  137   30  403   59  138  229  244  254  637   869 #>  [206,]  522  316  169  463  421  345  647  541  906   349 #>  [207,]  431  748   93  324  740   37  548  550  102    40 #>  [208,]  687  816  488  722  632  908  622  750  534   557 #>  [209,]  575  240  394  133  506  272  796   39  369    72 #>  [210,]  539  488  838  632    3  589  390  850  871   895 #>  [211,]  470  237  502  351  234  789  482  548  981   955 #>  [212,]   40  740  435  324  351  789  282  960  548   207 #>  [213,]  198  232   50  112  738  333  366  569  186   520 #>  [214,]  623  535  493  856  933   92  667  687  288   944 #>  [215,]  625  524  585  753  137  199  957  695  674   869 #>  [216,]  524  585   25  952  647  541  343  355  984   215 #>  [217,]  644  894  554   58  946  132  814  965   78    26 #>  [218,]  815  262  991  684  730  606  566  553  584   358 #>  [219,]  444  729  783  720  653  378  517  199  625   657 #>  [220,]  456  238  815  947  330  118  218  262  507   566 #>  [221,]   26  716   73  192  858  894  603  529  886   564 #>  [222,]  122  768  942  546  930  736   90  425   20    74 #>  [223,]  949  794   61  894  132  354  307  559  153   326 #>  [224,]  201  294  771  485  728  666  253  489  462   650 #>  [225,]  171  720  404  824  237  517  676  799  537   624 #>  [226,]  398  101  826   96  109  174   44  526  780   738 #>  [227,]  766  593  409  186  107  670  679  514  364   512 #>  [228,]  306  862  270  353  191  274  731  595  299   271 #>  [229,]   59  833  287  205  925  880  254  731  969   403 #>  [230,]  365  866  516  776  544  592  328  371  696   628 #>  [231,]  284  754  939   49  724  103  911  289  459   415 #>  [232,]  213  582  112  179  181  998  487  909  198    50 #>  [233,]   36  943  400   84  960  568  942  311  828   483 #>  [234,]  489  864  462  465  138  302  361  748  682   224 #>  [235,]  156  871  666  462  964   55  542  624  224   277 #>  [236,]  619  450  177  367  912  430  954   34  183   540 #>  [237,]  824  470  211  517  171  219  720  302  601   225 #>  [238,]  456  618  749  220  322  330  822  438  374   912 #>  [239,]  825  714  883  286  785  742  916  142   99   533 #>  [240,]  209  272  796   39  804  133  394  161  575   539 #>  [241,]  802   16  849  631  651   39  910  551  369   452 #>  [242,]  576  384  915  259  974  653  219  359  337   444 #>  [243,]  185  369  109  877  849  626  796  622  272   761 #>  [244,]  403  572  137  205   30  637  931   98   33   869 #>  [245,]  839  761  979  961  109  467   24  921   23   334 #>  [246,]  936  441  345  934  414  835  544  471  765    92 #>  [247,]  381  548  955  267  847  482   37   93  550   380 #>  [248,]  817  882  560  514  919  920  564  297  179    43 #>  [249,]  135   70  807  521  834   11  684  507  892   999 #>  [250,]  981  844  335  697  465  708  151  845  941   234 #>  [251,]  279  452  116  163  713  408  631  665  594   620 #>  [252,]  156  693  390  626  277  695  126  624  674   235 #>  [253,]  964  793  836  294  224  748  462  710   75   865 #>  [254,]   59  487  637  205  510  880  229   80   30   536 #>  [255,]  805  744  170  525  581  935  873  699  120   478 #>  [256,]  649  742  767  533  558  290 1000  414  600   344 #>  [257,]  617  175  569  520  198  271  571  526  101   343 #>  [258,]  165  182  657  185  626  647  308  843  674   984 #>  [259,]  583  915  786  878  339  381  219  444  952   242 #>  [260,]  977  712   97  799  315  855  188  225  673   404 #>  [261,]  702  583  768  546  359  646  122  269  786   568 #>  [262,]  730  606  218  128  612  815  584  650  991   358 #>  [263,]  429   82  560  737  512  297  179  514   60   173 #>  [264,]  803  778  288  905  466  469  422  136  867   493 #>  [265,]  108  550  164  267  971  621   93   37  380   847 #>  [266,]  636  885  378  614  984  729  978   18  337   576 #>  [267,]   37   93  380  377  247  621  680  550  265   548 #>  [268,]  352  679  938  452   24  594  186  382  889   779 #>  [269,]   33  773   98  747  108  711  399  158  360   847 #>  [270,]  191  228  445  306  963  872  903  731  862   763 #>  [271,]  355  569  353  617  520  257  343  416   25   306 #>  [272,]  796  804  369  240  841   39  209  551  394   172 #>  [273,]   69  750  547  172  593   24  412  107   23   671 #>  [274,]  717  358  862  338  880  353  157  299   68   228 #>  [275,]  105  727  922  759  732  685   63  319   11   127 #>  [276,]  195  406  813  652  367  692   10  619  935   805 #>  [277,]  624  626  252  156  182  235  606  674  194   584 #>  [278,]  416  956  677  305  355  481  271  572  599   343 #>  [279,]  408  631  713  668  251  614  620  243  185   194 #>  [280,]  189  337  788  901  888  885   18  881  630   481 #>  [281,]  314  807   80  684  487    6  507  991  249   485 #>  [282,]  565  477  675  971   20  546   38  994  212    89 #>  [283,]  573  454  528   75  793  317  293  508  329   706 #>  [284,]  231  322  733  911  459   22  754  103  945   939 #>  [285,]  824  462   55  390  838  489  525  234  864   662 #>  [286,]  724   49  883  159  239  231  785  691  289   533 #>  [287,]  735  229  941  833  690  205  731  110  931   254 #>  [288,]  623  264  466  803   92  687  214  778  422   905 #>  [289,]  469  691  670   49  264  778  423   21  724   803 #>  [290,]  610  190  256  767  649  414  491  664  558   579 #>  [291,]  125  773  747  590  527  360   57  332  641   711 #>  [292,]  204  419  318  406  795  545  951  362  613   395 #>  [293,]  793  865  706  787  732  892  508  710   63    89 #>  [294,]  224  201  570  253  771  719  821  485  728   996 #>  [295,]  349  856  968  100  160  169  515  647  174   921 #>  [296,]  454   42  317  867    3  539   75  733   22   940 #>  [297,]  582  560  179  490  564  320  973  529  896   455 #>  [298,]  588  464  828   74  965  988   83  943   58   504 #>  [299,]  925  862  353   59  880  350  229   44   62   187 #>  [300,]  993  458  997  514  107  967  440  507  409   144 #>  [301,]  552  555  814  254  829   17  931  946  536   176 #>  [302,]  199  138  137  674  693  482  955  462  403   156 #>  [303,]  745  641  983  561  645  332  608  426  493   928 #>  [304,]  858   61  615  311  828  400  899  386  221   894 #>  [305,]  158   33  572  278  343  769   95  806  433   931 #>  [306,]  228  353  862  731  833  880  229  191  271   569 #>  [307,]   43  559  153  564  894  179  529   26  248   949 #>  [308,]  334  843  774  165  978  258  467  839  908   557 #>  [309,]  177  331  859  161  838  830  528  183  850   662 #>  [310,]  594  373  757  163  890  566  452   66  616   268 #>  [311,]  615  400  899  828   90  861  304  876  942   858 #>  [312,]  888  772  421  881  511  779  189  206  713   345 #>  [313,]  178  119  924  399  443  410  794    9   12   511 #>  [314,]  281  487  112   80  991  807  249   70  135   684 #>  [315,]  790  475  977  784   97   85  260  517  658   959 #>  [316,]  522  206  467  471  169  421  345  541  557   856 #>  [317,]  940  454   42  706  296  867  508  715   75   329 #>  [318,]  383  395  613  115  363   15  200  140  543   951 #>  [319,]  727  105  809   67    7  275  922  127  497   442 #>  [320,]  490  997  874  582  333  297  829  458  755   314 #>  [321,]  495  758   45  656  149  448  387  418  842   436 #>  [322,]  284  733   22  749  911  238  330   52  103   144 #>  [323,]  486  820  438  118  549  896  818  947  455   611 #>  [324,]  207   40  351  102   37  212  748  740  836    93 #>  [325,]  711  590  448  527  193  291  495   12  758   399 #>  [326,]  141  447  559  949  117  983  439  152  370   428 #>  [327,]  527  463   54    5  660   12  476  175  391   114 #>  [328,]  628   28  579  544  776  774  721  900  516   901 #>  [329,]  819  136  508  867  509  940    2  317  926   573 #>  [330,]  507  684   52  911  549  553  807  144  834   947 #>  [331,]  501  309  177  605  496  602  347  121  959   457 #>  [332,]  641  627  656  397  387  842  561  303  519   645 #>  [333,]   14  113  997  112  320  755  213   66  738   232 #>  [334,]  308  843  774  839  165  978  467  258  962   245 #>  [335,]  151  981  697  250  764  234  682  470  823   844 #>  [336,]  601  823  783  718  470  171   76  676  653   237 #>  [337,]  576  481  984  885  378  266  242  359  788   952 #>  [338,]   68  128  566  358  274  157  612  717  730   218 #>  [339,]  878  460  436  633  259  444  517  596  372   219 #>  [340,]  987   19  472  147  896  461  146  455  820   560 #>  [341,]  389   99  428  916  608  883  714  785  533   671 #>  [342,]  347  675  140  395  479  639  124  994  587   115 #>  [343,]   25  585  271  175  216  524  360  257  355   909 #>  [344,]  607  159  648  990    8   46  556  913   87   939 #>  [345,]  765  934  246  936  906  835  772  206  316   522 #>  [346,]  451  192  536  635   17  125  747  108  923   741 #>  [347,]  140  639  342  675  124  115  395   38  283   994 #>  [348,]  840  438  756  456  220  513  238  118  822   492 #>  [349,]  100  160  295  856  169  968   57  515  647   933 #>  [350,]  187   62  299  668  194  925  562  416  379   355 #>  [351,]  102   40  482  548  324  789  748   37  836   212 #>  [352,]  268  938  679  779  186   24   48  660  703   889 #>  [353,]  862  299  569  271  520  306   59  880  826   617 #>  [354,]  980  153  223   60  429  737  307  263  439   825 #>  [355,]   62  271  585  416  524  216  617   25  187   520 #>  [356,]  567  923  635  741  812   11  998  181  451   135 #>  [357,]  694  124  832  543  140   15  775  831  913   857 #>  [358,]  717  274  338  157  128  566  997  991  218   262 #>  [359,]  915  259  583  261  242  952  576  337  418    33 #>  [360,]  518   98  139  773   57  753  869   25  847   291 #>  [361,]  682  864  489  771   55  581  234  697  728   224 #>  [362,]  204  659   32  613  386  705  292  532    7   318 #>  [363,]  863   15  318  200    7  945  115  634  832   383 #>  [364,]  737   60  227  111  670  703  686  798  593   766 #>  [365,]  230  866  853  776  846  371  516  640  696   424 #>  [366,]  780  944  412  921  409  174   50  968  107   515 #>  [367,]  619  183    1  540  478  813  406  570  692   376 #>  [368,]  556  607    8  648  344  795  204  362  848   990 #>  [369,]  877  394  243  272  796  804  551  849  209   575 #>  [370,]  641  141  193  983  166  303  608  426  332   645 #>  [371,]  696  776  436  339  460  810  424  633  974   900 #>  [372,]  878  753   65  139  518  381  847  215  596   933 #>  [373,]  458  310  566  594   66  967  186   23  382   679 #>  [374,]  618  689  749  238  822  830   22  912  827   860 #>  [375,]  118  155  458  512  874  514   52  300  820   486 #>  [376,]  478  589  528   75  539  964  540  793  454   992 #>  [377,]   89  267  380  508   37  596  836   65  293    93 #>  [378,]  444  984  729  219  885  258  266  657  576   541 #>  [379,]  562  599  917  350  416  187   62  783  792   668 #>  [380,]  811  503  267  377  680  847   65   89  247   621 #>  [381,]  847  247  786  878   98  139  955  518  372   669 #>  [382,]   24   23  547  841  651  967  172  594  373   273 #>  [383,]  613  115  318  200  395  675   15  851  565   140 #>  [384,]  929  242  915  718  583  259  974  646  786   653 #>  [385,]  450  457  501  602  479   10  276  619  195   873 #>  [386,]   32  311  400  362  899  304  879  615  204   858 #>  [387,]  627  149  332  656   45  561  123  842  397   758 #>  [388,]  500  176  707  552  453  555  661  110  898   726 #>  [389,]   99  671  341  423  428  608  533  629  883   111 #>  [390,]  252  693  156  824  126  210  235  517  624   462 #>  [391,]   54    5  660  463  412  928  921  366  944   906 #>  [392,]  655  976  816  850  972  475  859  632  958   188 #>  [393,]    3  722   42  296   22  454  867  488  539   632 #>  [394,]  877   72  209  369  575  796  506  240  133   272 #>  [395,]  318  543  140  115  383  951  363  342  613    15 #>  [396,]  157  755  113  903  609  717  274  358   68   333 #>  [397,]  519  332  503  530  561  627  641  387  645   303 #>  [398,]  174  101  968  226  921  780  295  366  515   520 #>  [399,]  711  325  269  158  119  965  590  773  988   464 #>  [400,]  311  828  233  615  858  304  386   32  943    90 #>  [401,]  531  104  453  723  886  688  726  130  603   661 #>  [402,]  751  568  502  646  669   84  943  106  806   786 #>  [403,]  137  138  205  244  969  982  199   30  229   302 #>  [404,]  171  225  537  799  260  636  676  601  720   336 #>  [405,]  120  743  581  506  170  584  586  730  133   992 #>  [406,]  195  545  367  276  692  619  813  851    1   787 #>  [407,]  710  759  787   63  719  821  732  996  865   570 #>  [408,]  620  713  279  665  202  668  116  630  189   595 #>  [409,]  107  967  412  944  366  186   23  593  780    24 #>  [410,]  598  193  370  924  326  141  178  904   56   983 #>  [411,]  769  808   78  305   95  571  175  158   12   399 #>  [412,]  944  366  107  780  409  391  921  967  593   214 #>  [413,]  597  690  806  433  956  970  677  572  931   305 #>  [414,]  558  936  441  246  698  649  197  664  534   544 #>  [415,]  919  685  817  461  532  754  922  231  975   920 #>  [416,]   62  355  350  271  833  562  925  677  229   353 #>  [417,]  591  893  709  574  468  857  664  698  197   203 #>  [418,]  952  436  541  448  321  495   57  216  160   349 #>  [419,]  292  795  406  450  951  545  619  891  236   276 #>  [420,]  642  837   76  211  237  718   53  789  658   470 #>  [421,]  888  522  206  316  772  345  467  839  169   628 #>  [422,]  778  803  750  264  288  494  722  466   13   905 #>  [423,]  671   99  389  111  533  629  289  341  670   778 #>  [424,]  580  574  784  900  846  371  739  893  640   460 #>  [425,]  914   90  523  899  781  627  736  842  704   942 #>  [426,]  928  906  656  303  983  193   54  332    5   641 #>  [427,]   72  506  662  743  712  838  446  797  161   394 #>  [428,]  608  341  389  983  447  928  370  141   99    56 #>  [429,]  263   82   60  560  512  737  248  155  514   700 #>  [430,]  797  830  954  161  672  374  992  236  492   912 #>  [431,]  207  748  407  710   93  324  465  294   37   253 #>  [432,]  754  848  231  286  724  939   49  284    4   817 #>  [433,]  690  931  597  572  806   33  552  158  106   413 #>  [434,]    9   64  523   56  141  914  370   86  425   410 #>  [435,]  212  789   40  994  639   38  324  351  587   282 #>  [436,]  418  696  339  541  952  321  371  878  557   471 #>  [437,]  917  336  379  823  601  676  562  599  783   537 #>  [438,]  456  323  118  486  238  220  348  148  818   549 #>  [439,]  798  114  737  326   60  447  598  983  559   364 #>  [440,]  993  998  181   21  567  920  521  882  356   135 #>  [441,]  936  246  414  534  467  544  698  835  471   345 #>  [442,]  493  469  809  561  819  136  905  940  466   329 #>  [443,]  122   74  399  261   90  768  464  495  758   711 #>  [444,]  378  219  729  984  625  657  339  878  783   952 #>  [445,]  725  270  872  678  228  792  595  191  599   116 #>  [446,]  782  171  712  225  427  676  260  662  285   496 #>  [447,]  983  326  152  428  608  141  883  785  484   559 #>  [448,]  656   57  590  495  325  193  426  321  758   527 #>  [449,]  166  197   86  608  645  389   92  341  835   428 #>  [450,]  619  177  236  367  501  183  385  331  602   406 #>  [451,]  923  635  741   17  127   11  752  356  621   536 #>  [452,]  594  268  310   16  890   48  382  352   24   163 #>  [453,]  723  661  726  176  531  707  401  886  603   104 #>  [454,]  296  317   42  573  283  867   75  528  539     3 #>  [455,]  973  490  654  820  896    6  611  297  320   800 #>  [456,]  220  238  438  330  947  513  118  618  749   323 #>  [457,]  602  501  121  331  605  496  959  782  385   868 #>  [458,]  997  874  300  320  373  375  566  118  490   218 #>  [459,]  945   13  863   87  905  634  284  733  778   867 #>  [460,]  633  596  134  339  926   38  784  126  509   893 #>  [461,]  975  415  919  683  817  472  486   19  891   848 #>  [462,]  482  489  102  748  235  836  964  138  253   224 #>  [463,]   54  391  906  327  206    5  426  100  921   527 #>  [464,]  588  988   90  704  965  399  298  828   74   132 #>  [465,]  748  728  431  489  234  207  102  224  697   462 #>  [466,]  905  264  288  803  778  136  775  469  442    13 #>  [467,]  522  316  839  245  774  441  557  334  308   856 #>  [468,]  701  131  591  634   87  857  417  986  775   989 #>  [469,]  264  442  493  867  289  905  803  940  466   196 #>  [470,]  653  211  237  982  823  969  302  783  601   151 #>  [471,]  835  316  544  557   92  246  516  721  441   936 #>  [472,]  817  461    4   19  532  705  415  919  153   564 #>  [473,]  765  934  345  906  904   86   54  686  924   928 #>  [474,]  505   31  600 1000  860  827   34  762  852   689 #>  [475,]  315  972  977  908  580   85  859  850  739   784 #>  [476,]  173  327  660   12  213  175  114    5   78   527 #>  [477,]  282   20  971  565  546   89  942  675  876   124 #>  [478,]  376  589  992   75  528  540  581  964  525    55 #>  [479,]  587  643  342   10  960  868  435  501  675   347 #>  [480,]   29  918  586  612  128  792   68  577  966   338 #>  [481,]  576  337  278  202  984  788  242  917  189   266 #>  [482,]  955  102  548  462  247  351  138   37   93   748 #>  [483,]  130  943  164  886  531  401  603  176  746   740 #>  [484,]  785  714  152  883  745  608  447  916  341   791 #>  [485,]  201  666   80  224  650  578  752  771  821   294 #>  [486,]  323  896  820  919  118  146   19  438  549   375 #>  [487,]  314  112  254  991   80  281  510  578   50    70 #>  [488,]  804  632  622    3  796  210  208  626   42   272 #>  [489,]  234  864  462  224  138  361  748   55  465   728 #>  [490,]  320  874  997  455  297  582  820  755  458   829 #>  [491,]  246  544  934   86  414  936  765  767  516   441 #>  [492,]  513  148  912  456  238  374  618  170  822   699 #>  [493,]  442  214  469   21  303  561  264  535  933   645 #>  [494,]  709   31  989  722  422  986  203  701  778   591 #>  [495,]  758  321   45  656  590  842  448  149  387   332 #>  [496,]  959  121  782  790  658  837  331   47  501   784 #>  [497,]    7  990  831   15  319  939  832  775  809   484 #>  [498,]  907  746  995   51  483  844  130  943   84   604 #>  [499,]  162  167  145  777  898  110  500   77  903   609 #>  [500,]  388  898  707  609  499  110  555  167  829   162 #>  [501,]  331  177  602  457  873  450  496  121  347   525 #>  [502,]  669  982  106  786  402  751  403  548  806   646 #>  [503,]  380  811  519  397  139  847  933  149  854   753 #>  [504,]  751   74  402  568  261  768   84  269  943   806 #>  [505,]  860  762  852   69   22  827  750  651  172   393 #>  [506,]  133   72  209  575  394  161  405  743  584   427 #>  [507,]  807  330  549  684   52  249  135  281  834   947 #>  [508,]  706  940  819  329  317  892  793  999  377   293 #>  [509,]  926    2  136  329  134  819  985  126  123   573 #>  [510,]  637  869  578   30  909  811  621  536  680   254 #>  [511,]  924  870  904  888  881  178  598  463   54   473 #>  [512,]  155  514  375  227  186  700  300  882  458   297 #>  [513,]  492  148  456  699  170  912  220  120  438   238 #>  [514,]  882  512  993  300  297  375  179  227  440   920 #>  [515,]  968  295  780  854  100  957  349  856   50   160 #>  [516,]  866  544  471  628  776  934  321   86  230   436 #>  [517,]  720  824  693   85  219  390  252  339  237   977 #>  [518,]  139   98  753  847  360  869  381  878  372   503 #>  [519,]  397  503  747  332  530  108  380  627  149   811 #>  [520,]  826  617  569  526   44  198  353  271  257   398 #>  [521,]   70  249  181   50  135  440  999  741  998   356 #>  [522,]  316  206  169  467  839  421  647  856  541   295 #>  [523,]  914  141  781  791  425  370  645  152  608   484 #>  [524,]  585  215   25  216  625  753  952  518  957   869 #>  [525,]  873  581  255  805  478  992  838   55  376   285 #>  [526,]  826  738  617  520   44  198  569  595  889   226 #>  [527,]  327   12  291  325  193  463   54  426  448     5 #>  [528,]   75  376  589  283  454  793  478  964  183   573 #>  [529,]  582   26  564  179  297  192  973  654  232   635 #>  [530,]  397  971  519  127  876  745  108   67  747   809 #>  [531,]  886  401  453  603  130  104  176  723  726   661 #>  [532,]  705  415  685  564  105  275  812  932  727   919 #>  [533,]   99  423  389  111  671  341  629  742  159   883 #>  [534,]   27  750  852  441  208  734  762  422  638    69 #>  [535,]  933  667  623  214  160  123  687  856  100    65 #>  [536,]  621   17  752  451  637  510   30  578  346   254 #>  [537,]  404  225  676  743  171  427  673   72  154   446 #>  [538,]  201  771  150  485  650  947  294  800  666   281 #>  [539,]    3  589  210   42  296  454  376  133  553   161 #>  [540,]  912  478  376   75  367  183  996  528  148   589 #>  [541,]  647  169  418  952  216  349  160  522  206   295 #>  [542,]  999  578  892  680  695  666  235   30  156    70 #>  [543,]  395  760  357  951  694  913  140  318  124    15 #>  [544,]  471  698  516  246  441  628  936  579  664   721 #>  [545,]  406  891  683  363    7  922  733  863  939   754 #>  [546,]  942   20  282  477  702  768  265  108  261   971 #>  [547,]  172   23  967  196   24  841  382  107  409   766 #>  [548,]  247   93  482   37  550  351  102  740  748   267 #>  [549,]  947  507  807    6  184  330  323  973  281   834 #>  [550,]  265  548   93  247  267  740   37  207  621   164 #>  [551,]  910  638  849  804  272  369  841  796   39   632 #>  [552,]  301  946  814  176  931  388  690  433  555   644 #>  [553,]  895  871  684  715  589   42  330  666  317   539 #>  [554,]  965   78  158  988   95  217  132   73   26   814 #>  [555,]  829  654  301  707  609  661  726  254   17   898 #>  [556,]  607  648  344  368    8  990  939  159  791   497 #>  [557,]  687  721  667  623  856  471  160  467  316   908 #>  [558,]  414  422  494  197  698  649  664  778  709   936 #>  [559,]  681  949  117  326  152  447   43  307  798   983 #>  [560,]  297   19  896  564  248  263  582  179  820   490 #>  [561,]  645  627  166  303  332  397  387  745  641   442 #>  [562,]  599  379  350  416  917  925  677   62  187   299 #>  [563,]  168  655  392  188  638  910  958  734   27   143 #>  [564,]  529  297  560  179   19  973  582  812  532   307 #>  [565,]  282  675  876  971  477  861  115   89  383   200 #>  [566,]  338  157  358  458  815   68  218  757  128   373 #>  [567,]  356  635  923  812  998  181  741  440   11   135 #>  [568,]   84  402  768  646   36  943  546   74  212   751 #>  [569,]  520  617  198  271  353  826  257  526  112    44 #>  [570,]  996  294  692    1  719  407  787  184  710   865 #>  [571,]  175  257   95  678  271  569  343  769  617    78 #>  [572,]  931  690  244  806   33  433  597  637  287   403 #>  [573,]  283  454    2  859  329  136  850  509  528   296 #>  [574,]  900  203  591  417  893  709  580  424  985   972 #>  [575,]  209  394  937  506   72  369  240  133  272   877 #>  [576,]  242  337  378  481  984  444  259  729  974   219 #>  [577,]  743  480  405  361  777   29  764  682  120   586 #>  [578,]   80  621  680  999  510  542   30  752  741   892 #>  [579,]  698  900  664  721  544  709  574  203  328   972 #>  [580,]  739  784  424  857  574  985  475  972  591   203 #>  [581,]   55  525  992  478  838  170  255  405  805   361 #>  [582,]  297  320  529  232  179  490  829  973   14   654 #>  [583,]  702  259  261  786  915  646  359  929  381   669 #>  [584,]  606  730  133  262  815  586  871  553  277   218 #>  [585,]  524   25  215  216  625  355  343  952  753   518 #>  [586,]  154  743  606  584  730  918  277  624  128   612 #>  [587,]  479  960  435  643  342   40  324  212  868   675 #>  [588,]  464  988  965  298  828   74  399   73  269    90 #>  [589,]  376   75  528  539  478  871  964  553  454   838 #>  [590,]  193  842  758  656  325  448  495  291  641   332 #>  [591,]  203  857  709  417  468  701  985  986  574   739 #>  [592,]  696  901  516  230  810  280  628  866  436   337 #>  [593,]  766  670  107  227  409  412  691  993  944   967 #>  [594,]  310  452  373  382  890  757  268   96  163   841 #>  [595,]  617  526  116  520  826  569   44  257  665   353 #>  [596,]  134  460  126  633   65  926  377  372  955   509 #>  [597,]  806  690  433  106  572  413  931   33  751   982 #>  [598,]  410   12  193   54  114  527  928  983  798   119 #>  [599,]  562  379  917  416  350  792  677  872  228   925 #>  [600,] 1000  770  474  344  860   31  724  159  432   505 #>  [601,]  336  823  783  470  676  171  237  653  219    76 #>  [602,]  457  501  331  605  450  342  121  868  479   177 #>  [603,]  886  130  176  531  104  453  192  401  726   221 #>  [604,]  844  970  981  335  956  151  982  677  106   250 #>  [605,]  331  602  309  177  457  501  954  496  712   121 #>  [606,]  262  730  584  586  991  128  218  650  277   815 #>  [607,]  556  648  344  990    8  791   46  159  781   497 #>  [608,]  428  303  645  166  983  389  745  341  447   370 #>  [609,]  829  555   77  717  755  898  162  490  358   500 #>  [610,]  190  290  664  579  197  414  698  558   71   491 #>  [611,]  800   77  818  455  898  707  947  549  323     6 #>  [612,]  128  730  262  338  606  358   68  586  717   815 #>  [613,]  383  318  115  200   15  861  851  395  565   876 #>  [614,]  636  978  266  843  799  258  378  308  334   729 #>  [615,]  311  858  828  861  304  400  876  530   73   899 #>  [616,]  757  163  966  937   68  566  338  730  128   815 #>  [617,]  520  569  257  526  826  198  271   44  595   101 #>  [618,]  749  238  374  822   22  456  539  240  322   689 #>  [619,]  367  183  450  177  236  406  540    1  478   912 #>  [620,]  408  665  202  116  713  595  630  189  101   355 #>  [621,]  680  578   30  536  752  510  999   93  267   451 #>  [622,]  626  109  488  165  252  208  515  856  804   185 #>  [623,]  687  667  288  535  214   92  933  856  557   819 #>  [624,]  277  235  252  156  626   55  390  606  674   584 #>  [625,]  215  199  585  524  137  674  878  753  444   653 #>  [626,]  622  252  277  182  109  185  156  957  165   488 #>  [627,]  387  332  561  842   45  645  641  914  397   149 #>  [628,]  544  316  471  328  516  436  776  774  421   522 #>  [629,]  671  423  389  111   99  936  533  428  473   246 #>  [630,]  202  189  984  788  885  647  216  541  169   101 #>  [631,]  279  713  251  241  802  614  408  849   16   334 #>  [632,]  488  850  210  816  208  804  722  908  393   859 #>  [633,]  460  596   38  339  784  134  639  955  381   702 #>  [634,]   87  775   13  945  701  863  468  459  905   131 #>  [635,]  923  356  741  567  451   11  812   17  127   135 #>  [636,]  614  266  799  978  729  378  843  404  885   720 #>  [637,]  909  510  869  254   30  536  244  360  205   578 #>  [638,]  910  168  551   27  852  816  534  750  762   849 #>  [639,]   38  347  994  435   47  789  351  675  633   784 #>  [640,]  994  846  633   47   38  460   20  639  424   784 #>  [641,]  332  303  370  842  627  561  645  656  397   745 #>  [642,]  420   76  837  211   53  151  789  237  718   470 #>  [643,]  479  587  342  879  960   32  675  383  868   435 #>  [644,]  946  217  552  814   58  301  554  763   26    94 #>  [645,]  561  166  303  627  745  608  332  641  914   397 #>  [646,]  786  669  702  402  502  789  212  568  583   381 #>  [647,]  169  541  295  349  160  856  165  216  968   174 #>  [648,]  607  556  344  791   46  714  239  916  781   159 #>  [649,]  414  558  629  533  423  936  111  671  256   246 #>  [650,]  666  201  771  485  880  224  606  262  991   235 #>  [651,]  841   39  172  382  551  272  849  547  804   796 #>  [652,]  276  950  744  805  255  236  935  195  148   406 #>  [653,]  783  470  199  219  625  982  403  302  969   444 #>  [654,]  707    6  973  555  829  455  726   17  800   582 #>  [655,]  392  976  816  972  722  850  852   31  908   475 #>  [656,]  332  448  387  590  426   57  495  758  641    45 #>  [657,]  674  182  187   62  199  258  194  783  625   444 #>  [658,]  959  837   47  790  121  496  784  315  782   868 #>  [659,]  688  104  613  759  275  851  362  705  105   861 #>  [660,]  391   54    5  779  327  114  463  703  476   938 #>  [661,]  723  726  453  707  110  176  898  752  735   555 #>  [662,]  838  712   72  210  427  285  161  977  859   390 #>  [663,]  927  840  827  492  348  822  148  689  374   513 #>  [664,]  698  197  417  579  709  574  900  558  203   414 #>  [665,]  116  620  595  979  101  408  889  526  617   713 #>  [666,]  485  201  650  871  235  224  542   80  771   684 #>  [667,]  623  687  535  933  819  126  856  160  557   134 #>  [668,]  194  187  918  350   62  182  185   44   29   657 #>  [669,]  786  502  646  381  247  548  982  915  244   550 #>  [670,]  593  766  107  993  882   21  289  440  412   227 #>  [671,]  423  389  629   99  111  533  341   92  289   428 #>  [672,]  830  797  161  240  209  374  430   39  392   575 #>  [673,]  260  188  712  958   72  537  427  977  394   877 #>  [674,]  657  182  199   62  187  215  625  194  302   252 #>  [675,]  565  115  124  140  282  383  347  639  477   342 #>  [676,]  823  171  601   76  225  151  336  446  537   404 #>  [677,]  416  833  731  278  413  982  956  597  970   562 #>  [678,]  571  725  872  445  175  595  875  257  808   228 #>  [679,]  938  186  268  227  409   66  889  967  352    24 #>  [680,]  999  621  578  892   67  741  542  811  380   127 #>  [681,]  117  559  152  745  983  949  303  641  447   291 #>  [682,]  361  697  864  489  234  581  728  764  465    55 #>  [683,]  891  975  545  461  848  406  415  754  685   919 #>  [684,]  553  895  715   70  330  507  249  281  218   871 #>  [685,]  922  415  275  105  834  727  919  973  812   184 #>  [686,]  473  703  364  629  660  772  765  111  391    54 #>  [687,]  623  667  557  288  535  856  214  208   92   160 #>  [688,]  104  659  401  932  692  705  195  531  759   407 #>  [689,]  374   34  860  827   22  618  322  912  749   238 #>  [690,]  931  433  572  597  287  806  413  106  552   244 #>  [691,]  103   49  289  724  144  593  670  911  766   196 #>  [692,]  813    1  570  851  407  787  195  710  996    10 #>  [693,]  252  390  517  156  824  126  720  955  302   199 #>  [694,]  357  913  831  832  124   15  543  775  634   468 #>  [695,]  957  156  542  869  215  137  753  252  510    65 #>  [696,]  371  436  339  776  810  974  418  321  460   583 #>  [697,]  682  728  361  465  335  234  489  764  250   864 #>  [698,]  664  709  579  197  417  544  721  900  414   574 #>  [699,]  170  150  120  947  805  255  478  513  538   570 #>  [700,]  113  755  155  512  490  333  320  874  820    14 #>  [701,]  131  468  591  989  986  634  857   87  203   494 #>  [702,]  583  261  646  786  546  381  633   20  259   669 #>  [703,]  660  686  364  798  737  114  439  476  173    54 #>  [704,]  117  949  141  119   90  988  681  641  464   559 #>  [705,]  532  932  688  659  104  472  716  221  603   461 #>  [706,]  793  892  940  317  508  293   75  999  865   964 #>  [707,]  726  654  723  898  661  800  453  555  388   932 #>  [708,]  697  250  401  941  728  110  531  935  735   145 #>  [709,]  203  591  985  494  417  698  574  972  900   986 #>  [710,]  407  787  759  851    1   63  865  732  996   293 #>  [711,]  325  399  590  291  773  527   12  360  119   269 #>  [712,]  662  260  427  977  446   72  782  392  673   309 #>  [713,]  408  620  189  665  279  630  116  202  979   761 #>  [714,]  916  785  883  484  341  791  825  447  239    99 #>  [715,]  895   70  684  871   42  553  317  940  706     3 #>  [716,]  221  894   26  705  564  858  147  532  529   307 #>  [717,]  274  358  880  862  338  157  128  612  609   162 #>  [718,]  336  384  601   76  420  242  823  470  237   974 #>  [719,]  821  184  407  996   63  570  294    6  732   710 #>  [720,]  517  824  693  219  225   85  657  729  799   252 #>  [721,]  557  908  687  774  698  900  709  471  208   816 #>  [722,]  393  816  976  850  208  494  985  750  632   422 #>  [723,]  726  661  453  707  898  176  719  752  800   654 #>  [724,]   49  691  286  231  289  103  284  159  754   144 #>  [725,]  445  678  116  872  595  620  665  792  571   270 #>  [726,]  723  661  453  707  654  176  752  719  898   821 #>  [727,]  105  275  127  319   67   11  812  732  922   923 #>  [728,]  224  771  294  465  941  489  735  201  697   485 #>  [729,]  378  444  219  720  974  636  517  799  783   984 #>  [730,]  262  128  612  815  606  584  218  586  338   566 #>  [731,]  833  229  306  191  287  925  862  228  677   416 #>  [732,]   63  759  127   67  821   11  407  727  865   710 #>  [733,]  284  296  911  322  867  922  834  459  317   454 #>  [734,]   27  534  143  962  168  441  852  414  638    69 #>  [735,]  110  941  287  167  728  661  229  833  731   723 #>  [736,]  425  781  899  694  914  831  853  222  129   879 #>  [737,]   60  364  798  439  114  882  263  703  227   447 #>  [738,]  526  889  826  198  226   66  213  186  520   617 #>  [739,]  580  857  591  203  985  972  701  574    2   986 #>  [740,]   40  212  207  548  550  324  351   93   37   748 #>  [741,]  923  635  356   11  451   67  567  680  127   999 #>  [742,]  142  533  111   99  239  286  423  883  341   649 #>  [743,]  586  154  405  506   72  584  966  427  624   877 #>  [744,]  255  805  950  170  120  699  873  525  935   581 #>  [745,]  152  303  645  561  641  608  530  397  117   484 #>  [746,]  130  907  483  498  995  886  531  603   51   176 #>  [747,]  108  773  519  291  346  125  397  530  332   842 #>  [748,]  102  836  207  465  462   93  431   37  548   351 #>  [749,]  618   22  238  330  322    3  296   42  539   144 #>  [750,]  422  762  534  852  273  208   69  722  803   172 #>  [751,]  402  806   33  502  597  106  669  504  915   982 #>  [752,]   80   17  578  621  536  451  821  485  680   741 #>  [753,]  139  518  372  869  878   98  215  847  360   811 #>  [754,]  231  284  432  415  322  975  848  919   49   939 #>  [755,]  113  157  490  320  997  333  874  700  396   358 #>  [756,]  801  348  323  438  840  513  118  820   77   456 #>  [757,]  616  163  937  566  815  310  594  338  730    68 #>  [758,]  495  842  321   45  590  149  656  387  332   448 #>  [759,]  407  732  710   63  275  787  865  851  727   105 #>  [760,]  543  129  913  694  395  357  795  951  124   131 #>  [761,]  979  245  839  109  961   24  243  849  185   226 #>  [762,]  852  750   69  505  422  534  638   31  393   494 #>  [763,]  963  191  946  270  413  552  644  731  814   306 #>  [764,]  969  361  777  335  925  697  864  682  145   151 #>  [765,]  473  934  345  904   86  906  246  772  936   870 #>  [766,]  593  227  107  670  409  967  691  547  412    23 #>  [767,]  491  649  256  414   64  629  246  290  765    86 #>  [768,]  122  261  568   74  546  942  222  702   84    36 #>  [769,]  411  175   12  343  711  571  325  305   78   527 #>  [770,]  600 1000  432  344    8  368  939  990  474    34 #>  [771,]  201  150  224  538  650  294  485  728  666   361 #>  [772,]  345  421  765  888  473  934  206  246  312   522 #>  [773,]  747  360  291   98  108  269  125  518  847   519 #>  [774,]  308  843  334  962  467  721  978  908  557   165 #>  [775,]  832  634  905  809  466   87   15   13  136   357 #>  [776,]  371  900  696  866  574  516  436  544  424   893 #>  [777,]  162  145  499  167  903  764  717  612  925   110 #>  [778,]  803  422  264  905   13  466  288  469  459   289 #>  [779,]  660  938  921  979  391  174  352  101  881   679 #>  [780,]  366  944  412  515  921  968   50  174  398   295 #>  [781,]  899  791  523  831   46  914  425  484  736   497 #>  [782,]  959  496  121  446  790  285  837  658  712   331 #>  [783,]  653  219  657  601  444  199  336  470  674   625 #>  [784,]   47  790  580  633  460  315  424  639  658    38 #>  [785,]  883  484  714  447  916  341   99  825  608   389 #>  [786,]  669  381  646  259  247  502  847  915  702   955 #>  [787,]  710  865  407  851    1  996  759  293  570   692 #>  [788,]  881  202  189  630  216  175  984  355  257   769 #>  [789,]  435   40  351  639   38  212  646  837  211    47 #>  [790,]  959  315  784  496  658  837  782  824   47   517 #>  [791,]  916  781  523  714   46  484  341  785  141   883 #>  [792,]  599   29  562  350  480  379  445  668  228   595 #>  [793,]  706   75  964  253  293  865  508  892  528   317 #>  [794,]  132  949  119  704   61  223  988  894  464   559 #>  [795,]  951    8  760  543  292  204  395  419  913   318 #>  [796,]  272  804  369  240  488  394  841  209  133     3 #>  [797,]  830  430  161  672  954  506  992  309  209   427 #>  [798,]  114  439  737   60  983  559    5  598  447    54 #>  [799,]  977  720  636   85  978  729  517  843  260   614 #>  [800,]  611    6  707  898  538  654  719  455   77   723 #>  [801,]  756  840  348  987  438  323  146  820  927   486 #>  [802,]  241  631  575  849  937   16  369  966   39   673 #>  [803,]  264  778  422  288  905  466  469   13  136   867 #>  [804,]  796  272  488  172  841  240    3  369  551   632 #>  [805,]  255  170  744  525  935  699  581  478  120   873 #>  [806,]  597   33  751  572  106  433  690  244  982   931 #>  [807,]  135  507  249    6  281  973  834  549  314   684 #>  [808,]   78   95  411  571  678  769  554  946  875   158 #>  [809,]  832   89  442  319  775  200   15  971   67   876 #>  [810,]  696  371  974   28  776  436  948  339  328   592 #>  [811,]  380  503  854  869  510  753  680   65  847   999 #>  [812,]  356  567  635  923  727   11  920  741  105   127 #>  [813,]  692    1  195   10  851  570  787  710  367   407 #>  [814,]  946  301  552  829   14  555  644  529  582    95 #>  [815,]  218  730  262  584  606  566  128  220   96   757 #>  [816,]  908  632  208  722  655  958  850  910  976   721 #>  [817,]  919  415  248   19  461  146  472   79  896   754 #>  [818,]  611  947  800  323  699  549   77  438  184   884 #>  [819,]  329  508  136  940  667  509   65  867  126   933 #>  [820,]  896  323  486  455  490  118  874   19  375   320 #>  [821,]  719   63  184  732  407  996  752   80  485     6 #>  [822,]  618  238  374  749   39  456  827  240  220   348 #>  [823,]  601  336  151  470  676   76  783  237  653   171 #>  [824,]  517  693  390  720  285  237  302  252  955   790 #>  [825,]  239  714  883  785  916  286   43  484  447    60 #>  [826,]  520  526   44  617  569  198  226  738  991   398 #>  [827,]  689  860  374  822  505  618   91  663  238    22 #>  [828,]  400  615  311   73  858  588  464  304  221   233 #>  [829,]  555  654  609  582  320  301  490  814   14   455 #>  [830,]  672  161  797  430  374  240  309  209  539   992 #>  [831,]  694  832  497   15  781  899  775  357  809   913 #>  [832,]  809   15  775  357  831  200  115  124   89   694 #>  [833,]  731  229  287  925  306   59  416  862  969   677 #>  [834,]  135  922   11  184  249  807  865  892  996   507 #>  [835,]   92  906  471  936  345  623  214  288  246   166 #>  [836,]  102  253  748   37   93  462  964  793  377   293 #>  [837,]  658  790  420  789   47  959  496  237  211   784 #>  [838,]  210  589  662   55  992  581  539  161  376   525 #>  [839,]  245  979  761  467  522  334  109  169  165   647 #>  [840,]  927  348  438  663  801  148  456  756  827   238 #>  [841,]  172  272  651  804  796  547   23  551  382   849 #>  [842,]   45  758  627  332  641  590  495  387  656   519 #>  [843,]  308  978  334  774  165  258  885  799  839   467 #>  [844,]  604  250  981  335  995   51  708  845  953   941 #>  [845,]  250  844  335  981  708  907  642  604  697   151 #>  [846,]  893  640   20  460  853  424  417  574  123   134 #>  [847,]   98  518  139  381  247  753  503  380  811   360 #>  [848,]  891    4  975  683  754  415  432  461  545   817 #>  [849,]  551  243  369  841  910  651  961  761  272   245 #>  [850,]  859  632  976  573  722  210    2  393  816   454 #>  [851,]  787  710    1  692  759  407  813  383  865   200 #>  [852,]  762  750  534  638  722  168   27   31  494   422 #>  [853,]  846  640  736  893  424  124  129  357  694   994 #>  [854,]  811  515  933  869  100  503   50  521  753   510 #>  [855,]   97  260  188  799   28  315  977  636  404   475 #>  [856,]  295  160  349  100  169  515  214  667  687   968 #>  [857,]  591  739  985  701    2  468  580  203  417   509 #>  [858,]  304  615   61  221  828  311  894   73  716    26 #>  [859,]  850  573  976    2  210  632  985  722  454   283 #>  [860,]   22  505  689  827  284  374  749   31  322   762 #>  [861,]  876  971  565  127  105  759  530  727  200    67 #>  [862,]  299  353  880  925  274  306   59  228  717   229 #>  [863,]  945  459  363  634   87  939   13   15  733     7 #>  [864,]  489  234  361  302  462   55  682  138  624   235 #>  [865,]  996  787  293  793  710  706  732   63  407   834 #>  [866,]  516  776  321   45  230  893  846  471  544   387 #>  [867,]  317  940  296  329   42  454  469  136  819   706 #>  [868,]  121   47  342  658  435  587  496  789  639   479 #>  [869,]  510  637  753  811  518  360  695   98   30   854 #>  [870,]  904  448  924  193  511  906  934  765  410   325 #>  [871,]  895  553  715  235  666  589  964  684  156   542 #>  [872,]  678  445  270  599  228  571  963  191  725   278 #>  [873,]  525  255  805  581  285  501  744  682  838    55 #>  [874,]  997  458  490  320  118  755  820  507  281   375 #>  [875,]  173  113   14  678   82  889  333  476  571    66 #>  [876,]  861  971  565  127  530  809  200   67   89   727 #>  [877,]  394  369  154   72  243  796  277  575  272   209 #>  [878,]  372  139  753  381  518  339  847   65  625   215 #>  [879,]   32  675  565  613  383  115  124  282  477   736 #>  [880,]   59  862  299  650  229  353  254  717  991   925 #>  [881,]  788  189  175  630  888  202  779  511  257   327 #>  [882,]  514  993  440  179  920  670   21  998  248   181 #>  [883,]  785  714  484   99  341  447  916  389  825   608 #>  [884,]  935  898   77  611  800  538  145  150  818   499 #>  [885,]  378  630  541  984  266  978  843  647  258   444 #>  [886,]  603  531  130  104  176  453  401  483  726   723 #>  [887,]  890  897  651  505   91  382  822   48  594    39 #>  [888,]  421  206  772  522  316  511  881  312  345   870 #>  [889,]  738  526   66  186  333  198  938  679  213   595 #>  [890,]  887  594  897  310  382  452   48  651  373   757 #>  [891,]  683  848  975  545  461  754  415  406    4     7 #>  [892,]  999  706  680  940  542  508   70   11   67   793 #>  [893,]  846  417  574  123  857  134  591  926  460   985 #>  [894,]  132   26  221  307  217  949   73   61  988   858 #>  [895,]  715  553  871  684   42    3  317   70  589   539 #>  [896,]   19  820  486  455  919  560  297  146  323   490 #>  [897,]  887   48  890  382   91  594  373  310  452   651 #>  [898,]  707  661  110  723  800  167  500  726  611    77 #>  [899,]  781  831  425  311  523  615  497  914  791   736 #>  [900,]  574  203  579  972  709  698  721  776  424   664 #>  [901,]   18  628  885  280  266  978  888  421  328   592 #>  [902,]  818  884  611  987   77  800  340  652  801   276 #>  [903,]  162  777  717  191  499  396  270  274  228   862 #>  [904,]  870  924  765  934  473  511  410   86  906   193 #>  [905,]  466  264   13  803  778  775  469  136  459   288 #>  [906,]  426  928  835  463   54  345  391  765  934   656 #>  [907,]  498  746  483  130  995  844   51  531  943    84 #>  [908,]  816   85  721  208  632  557  475  958  774   850 #>  [909,]  637  125  510  869  254  360  536   25  232   291 #>  [910,]  638  168  551   27  849  816  958  143  852   534 #>  [911,]  144   52  103  330  733  993  284  507  834   322 #>  [912,]  540  148  492  992  478  374  513  376  238   699 #>  [913,]  694    8  357  543  831  131  129  990  468    87 #>  [914,]  523  627  425  645  561  370  166  641  842    45 #>  [915,]  259  786  669  242  583  359  502   33  751   653 #>  [916,]  714  341  791  785  883  484  447  428   41   141 #>  [917,]  379  599  562  416  677  278  350  437  481   792 #>  [918,]  194  668  586  606  154   29   44  185  187   299 #>  [919,]  415  817  486   19  896  685  461  248  920   146 #>  [920,]  440  993  567  812  882   52  356   21  135   179 #>  [921,]  174  366  780  398  968  944  412  295  101   391 #>  [922,]  685  275  834  727  105  865   11  319  184   732 #>  [923,]  741  635  356   11  451  567  127  812   67   135 #>  [924,]  904  178  511  870  410  473  765  598  934   193 #>  [925,]  299  862  229   59  833  350  880  353  969   416 #>  [926,]  509    2  134  136  123  985  329  126  819   596 #>  [927,]  840  663  148  438  827  348  492  689  513   975 #>  [928,]  426  983   54  906    5  303  114  391  463   193 #>  [929,]  384  646  583  402  915  568  702  261  786   259 #>  [930,]  222  640  768  994   36  853  546  568  702   435 #>  [931,]  572  690  433  244  597  287  637  536  301   552 #>  [932,]  104  707  688  726  800  723  685  705  654   719 #>  [933,]  535   65  667  854  160  503  214  100  623   819 #>  [934,]  765   86  345  246  473  904  906  936  835   471 #>  [935,]  805  255  884  294  570  813  150  692  699   170 #>  [936,]  246  441  835  345  414   92  629  934  471   765 #>  [937,]  575  966  757  209  272  616  369  796  394   133 #>  [938,]  679  186  409  268   24  779  967  889  352   227 #>  [939,]  990    7  231  863  497  945  459  284  363    87 #>  [940,]  317  706  508  867  892  329  819  715   70   999 #>  [941,]  735  287  728  110  106  167  981  661  229   403 #>  [942,]  546   90  477  122  108   20  282  971  265   768 #>  [943,]  483  233   84  402  164  265  568  550  740   751 #>  [944,]  412  366  780  107  409  921  967  196   50   214 #>  [945,]  459  863   13   87  634  905  939  775  363   733 #>  [946,]  814  552  644  301   95  388  763  555  554   217 #>  [947,]  549  184  507  330  538  699  220  800  456     6 #>  [948,]  810   53  974   28  855  371   97  696  658   718 #>  [949,]  559  132  117  326  681  704  794  119   61   141 #>  [950,]  744  255  805  652  120  170  935  873  699   682 #>  [951,]  180  543  395  363  318  795  863  131  634    15 #>  [952,]  418  541  216  524  878  139  585  518  753   436 #>  [953,]  145   88  764  335  844   51  708  697   81   777 #>  [954,]  797  430  830  309  177  236  161  605  427   712 #>  [955,]  482  247  381  548  693  372  199  302  878   596 #>  [956,]  806  413  278  597  677  751  982  915   33   305 #>  [957,]  695  515  215  968  869  398  524  156  626    44 #>  [958,]  188  816  908  910  308  774  632  551  334   977 #>  [959,]  496  782  121  790  658  837   47  784  315   331 #>  [960,]  587  212   40  324  435  740  207   36  233   565 #>  [961,]  245  761  849  839   27   24   16  143  273   841 #>  [962,]  143  774   27  467  334  308  734  534  910   441 #>  [963,]  763  191  270  731  970  413  872  677  833   228 #>  [964,]  253  793   75  589  871  235  836  706  528   462 #>  [965,]  554  158  988  588  464  399   58  132   73   217 #>  [966,]  937  616  586  154  743  163  575  757  730   405 #>  [967,]   23  409  107   24  547  944  412  366  186   780 #>  [968,]  515  295  398  174  100  349  780  366  921   957 #>  [969,]  403  229  138  925  205  302  833  982  137   653 #>  [970,]  413  677  963  597  956  604  995  731  833    51 #>  [971,]  876  530  861  565  477   89  282  265  127   809 #>  [972,]  203  475  655  976  709  739  985  900  574   580 #>  [973,]    6  807  654  135  455  582  297   11  567   834 #>  [974,]  729  259  696  339  242  219  444  378  576   810 #>  [975,]  461  683  891  848  754  415  919  486  817   545 #>  [976,]  655  850  722  859  392  972   31  816  985   494 #>  [977,]   85  315  260  799  475  517  908  720  188   662 #>  [978,]  843  308  334  614  774  636  799  885  258   165 #>  [979,]  761  839  245  101  921  174  109  226  398    24 #>  [980,]  354   60  429  737  364  142  439  825  263   239 #>  [981,]  250  335  106  941  465  211  502  982  234   151 #>  [982,]  502  403  106  653  470  669  806  244  969   597 #>  [983,]  928  303  447  608  426  114  428  370    5   641 #>  [984,]  378  444  630  216  885  258  585  657  355   541 #>  [985,]    2  709  926  509  857  591  203  136  722   739 #>  [986,]  989  203  701  591  131  494  468  709  857   972 #>  [987,]  340  146   19  896  461  820  486  323  801   455 #>  [988,]  464  588  132  965   73  554  704  747  346   119 #>  [989,]  986  701  203  494  591  131   31  468  709   972 #>  [990,]  939  497  159   87  863  945    7  459  634   913 #>  [991,]  487  314  218  826  281  606  112  880  684   650 #>  [992,]  478  581  838  376  161  589  525  133  539   170 #>  [993,]  440  300  882  920   21  670  181  998  144    52 #>  [994,]  639  435  640   38  282  675   47  124  789   342 #>  [995,]   51  941  735  110  746  130  597  106  176   690 #>  [996,]  865  184  570  719  787  407  821  710  834   793 #>  [997,]  458  874  320  490  333  300  112  755  314   281 #>  [998,]  181  440  567   21  356  521  993  635  923    50 #>  [999,]  892  680  578  542   70  741   67  706  621   521 #> [1000,]  600  770  474  256   91  860  505   31  344   762 #>  #> $neighbor_distances #>              [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.4135262 0.4164093 0.4518846 0.4580720 0.4822256 0.4938254 0.5704704 #>    [2,] 0.2562815 0.3357208 0.3370734 0.3810690 0.4927788 0.4979382 0.6004487 #>    [3,] 0.2417840 0.4137192 0.4601082 0.4633285 0.4943338 0.5479883 0.5504038 #>    [4,] 0.7882348 1.0054148 1.0492781 1.2127351 1.2193471 1.2359583 1.2378821 #>    [5,] 0.4291275 0.4612383 0.4784529 0.4993307 0.5976617 0.6064604 0.6260415 #>    [6,] 0.3410693 0.4562456 0.4606252 0.5255280 0.5617132 0.5725957 0.5790781 #>    [7,] 0.4761274 0.5487716 0.6008691 0.6594356 0.6937620 0.6947768 0.7150791 #>    [8,] 0.7076517 0.9008440 0.9994460 1.0446967 1.0837892 1.1143377 1.1574315 #>    [9,] 0.4534126 1.0726935 1.2131670 1.3614086 1.4250351 1.4485803 1.4504508 #>   [10,] 0.4642686 0.6874602 0.7176434 0.7532149 0.8160122 0.9947950 1.0281243 #>   [11,] 0.2736718 0.2743106 0.3606717 0.3722694 0.3878326 0.3936948 0.4096787 #>   [12,] 0.5627052 0.6001610 0.6993605 0.7072822 0.7706943 0.8062502 0.8128482 #>   [13,] 0.2880667 0.3333742 0.4106022 0.4244197 0.4728161 0.4818542 0.5583002 #>   [14,] 0.4740805 0.6801021 0.6873977 0.7446482 0.7657718 0.7672030 0.7735476 #>   [15,] 0.3852264 0.4541455 0.4576836 0.5628880 0.6077687 0.6225975 0.6319855 #>   [16,] 0.9415687 1.0038815 1.0939862 1.0966461 1.1036557 1.2612177 1.2783915 #>   [17,] 0.3497946 0.4187939 0.4356923 0.4853643 0.4855674 0.5482838 0.5700761 #>   [18,] 0.5235877 1.0017931 1.0424157 1.1620575 1.2215228 1.3306787 1.3840388 #>   [19,] 0.3485024 0.5621656 0.6314357 0.7167543 0.7186137 0.7249182 0.7641886 #>   [20,] 0.4309992 0.5993202 0.6022131 0.6111534 0.7442785 0.7679036 0.7865962 #>   [21,] 0.3832345 0.4015926 0.4318839 0.5355099 0.5462654 0.5900449 0.6212872 #>   [22,] 0.4924951 0.6044792 0.6098943 0.6240780 0.6484381 0.6676623 0.6982135 #>   [23,] 0.2243837 0.3343868 0.3952473 0.5230312 0.5591751 0.6140498 0.6205196 #>   [24,] 0.3343868 0.4214357 0.4787867 0.5795274 0.6151425 0.6515538 0.7052083 #>   [25,] 0.3311262 0.3737846 0.3846624 0.4810258 0.5268440 0.6159349 0.6227194 #>   [26,] 0.4491886 0.5190143 0.5553460 0.5921536 0.7698564 0.8101129 0.8416462 #>   [27,] 0.4626404 0.5959667 0.6000873 0.6115942 0.6298841 0.6421061 0.6516060 #>   [28,] 0.8956037 1.0435732 1.0890405 1.1851866 1.2464821 1.2932086 1.3056652 #>   [29,] 0.4906986 0.6699884 0.7837255 0.8022351 0.8054592 0.8075105 0.8229040 #>   [30,] 0.3880181 0.3925415 0.4315286 0.4442818 0.4585077 0.5182299 0.5252812 #>   [31,] 0.6132197 0.7406523 0.7650332 0.8130068 0.8316814 0.9225450 0.9446816 #>   [32,] 0.7137842 0.7734356 0.9829470 1.1132414 1.1174624 1.1599025 1.2432890 #>   [33,] 0.4828355 0.5106689 0.5766428 0.6578815 0.6668747 0.7616239 0.7754358 #>   [34,] 0.5767200 0.9504254 1.0636279 1.1000283 1.1715719 1.1739572 1.2047747 #>   [35,] 1.2612306 1.2955909 1.3176897 1.3392442 1.4190330 1.4566753 1.4758023 #>   [36,] 0.6200325 0.7567471 0.7982956 0.9949161 1.0550736 1.0872699 1.1025820 #>   [37,] 0.1562197 0.2205039 0.4553881 0.4626712 0.5068882 0.5162979 0.5174399 #>   [38,] 0.4096667 0.5238685 0.6311037 0.6484999 0.6487017 0.6539289 0.6706169 #>   [39,] 0.5509121 0.5925062 0.6423987 0.6636887 0.7289075 0.7609346 0.7890444 #>   [40,] 0.3233393 0.4321428 0.4588671 0.4886622 0.5255782 0.5428951 0.6842269 #>   [41,] 0.8166128 0.9638840 1.0807700 1.1541053 1.1949342 1.2260085 1.2794022 #>   [42,] 0.2417840 0.3327628 0.3356477 0.4164892 0.4349769 0.4494881 0.4578050 #>   [43,] 0.6476785 0.7300139 0.7301015 0.7393742 0.7408329 0.7539587 0.7680181 #>   [44,] 0.3236677 0.4293714 0.5093577 0.5437178 0.5444425 0.5647359 0.5966142 #>   [45,] 0.4013398 0.4669493 0.4733687 0.4817209 0.4985707 0.5014299 0.5634902 #>   [46,] 0.7095227 0.7461550 0.8607517 0.9706299 0.9719182 0.9726006 0.9772474 #>   [47,] 0.5925412 0.6317795 0.6865996 0.7822435 0.8021837 0.8347894 0.8498695 #>   [48,] 0.8260375 1.0275764 1.0901283 1.1171227 1.1457154 1.2210911 1.2385262 #>   [49,] 0.4699923 0.5116332 0.5238062 0.6270197 0.6292263 0.6538028 0.7812151 #>   [50,] 0.4250194 0.4615023 0.5031391 0.5087678 0.5151957 0.5381844 0.5445416 #>   [51,] 0.2775309 1.0608652 1.0886526 1.1043282 1.1403534 1.1642489 1.1841786 #>   [52,] 0.2980282 0.3305764 0.4523994 0.4984680 0.5124016 0.6001722 0.6221500 #>   [53,] 1.1385919 1.2900154 1.4874499 1.4901497 1.5046958 1.6319332 1.7917216 #>   [54,] 0.4291275 0.4536714 0.4598514 0.4655745 0.5155092 0.5290168 0.5669784 #>   [55,] 0.3978781 0.5354077 0.5942766 0.5963510 0.6343572 0.6421813 0.6649307 #>   [56,] 0.3425523 0.7296722 0.7904378 0.8900019 0.9002944 0.9406133 0.9570680 #>   [57,] 0.4155446 0.4774438 0.4901999 0.5170386 0.5249453 0.5350074 0.5697890 #>   [58,] 0.9415003 0.9912848 1.1331851 1.2938772 1.4194379 1.4397755 1.4786203 #>   [59,] 0.3259343 0.3818180 0.4316908 0.4819024 0.4925252 0.5349175 0.5524714 #>   [60,] 0.2662746 0.6741101 0.7907778 0.8481930 0.9574157 0.9633209 0.9976594 #>   [61,] 0.6360092 0.7556416 0.8883390 0.9169025 0.9508571 0.9887184 0.9999763 #>   [62,] 0.2759752 0.4235129 0.4669600 0.5026875 0.5835431 0.5861179 0.5959296 #>   [63,] 0.1053399 0.3732293 0.3803319 0.3917867 0.4584325 0.5022766 0.5056985 #>   [64,] 0.3425523 0.8016506 1.0120272 1.0264852 1.0280424 1.0369971 1.0726935 #>   [65,] 0.3536524 0.4228859 0.4458910 0.5279857 0.5303154 0.5308188 0.5353298 #>   [66,] 0.5843524 0.5947541 0.6286655 0.7161994 0.7642161 0.7823867 0.7916545 #>   [67,] 0.2127999 0.3878326 0.4104659 0.4173236 0.4315286 0.4422799 0.4445131 #>   [68,] 0.3052542 0.6321275 0.6435527 0.6705939 0.7423435 0.7538667 0.7676700 #>   [69,] 0.5999850 0.6568117 0.7011940 0.8557775 0.8577136 0.9595692 0.9666155 #>   [70,] 0.2998139 0.3180998 0.3972498 0.4543706 0.4719692 0.4785129 0.5031124 #>   [71,] 0.8786645 0.8935561 0.9201532 0.9300199 1.0190628 1.0230844 1.0358124 #>   [72,] 0.4301278 0.4617709 0.5694271 0.6830868 0.6945542 0.6963187 0.7308951 #>   [73,] 0.5098080 0.5190143 0.6844166 0.7327323 0.7590328 0.8696237 0.9135404 #>   [74,] 0.7642617 0.7793941 0.9065718 0.9750516 1.0425298 1.0548806 1.0573827 #>   [75,] 0.2616838 0.3099523 0.3318257 0.4028080 0.4537256 0.4689921 0.4722561 #>   [76,] 0.8515879 0.8651275 0.8931862 0.9508330 1.0052826 1.0056013 1.0161222 #>   [77,] 0.5667552 0.7142331 0.7501005 0.7551399 0.7606515 0.8223402 0.8824545 #>   [78,] 0.5740317 0.7002333 0.7151458 0.9554671 0.9640090 0.9700838 0.9758848 #>   [79,] 0.9541851 1.1307841 1.2045141 1.2359583 1.3253265 1.3612226 1.3665762 #>   [80,] 0.3013858 0.3505337 0.3895203 0.4914228 0.5267347 0.5324231 0.5416663 #>   [81,] 0.7241610 1.1320709 1.1841786 1.2211169 1.4246598 1.4264480 1.4515285 #>   [82,] 0.6744084 0.8740847 0.9321388 1.2059087 1.2460112 1.3098256 1.3373012 #>   [83,] 1.3056975 1.4435083 1.6173149 1.6575989 1.6630472 1.7118396 1.7809904 #>   [84,] 0.4274242 0.6200325 0.7448610 0.8060953 0.8773426 0.8967576 0.9780047 #>   [85,] 0.5232716 0.6274481 0.6277373 0.6942933 0.7009676 0.7492628 0.7583702 #>   [86,] 0.4822342 0.6328792 0.6661896 0.7904378 0.8016506 0.8104974 0.8274352 #>   [87,] 0.2914631 0.4244197 0.4480881 0.5256378 0.5834741 0.5980662 0.6059930 #>   [88,] 0.7241610 1.2204487 1.2666216 1.3619996 1.3937403 1.3961423 1.5105319 #>   [89,] 0.3265655 0.4662847 0.5529375 0.5663875 0.5664335 0.5665230 0.6161408 #>   [90,] 0.6177029 0.6903455 0.7157513 0.8032102 0.8338283 0.9243217 0.9731846 #>   [91,] 1.1237581 1.2006337 1.2122778 1.2160150 1.2583795 1.3004160 1.4166956 #>   [92,] 0.2801377 0.4270478 0.5158467 0.5589667 0.6384175 0.6508292 0.6887782 #>   [93,] 0.1562197 0.2802539 0.4197521 0.4669757 0.4877234 0.4958552 0.5084518 #>   [94,] 0.9932829 1.2683039 1.4523624 1.4630061 1.4881991 1.5376193 1.5588870 #>   [95,] 0.5740317 0.6907237 0.7582631 0.8266939 0.8509170 0.8716801 0.9482028 #>   [96,] 0.5332551 0.7004206 0.7114079 0.7146187 0.7461208 0.7521483 0.7607955 #>   [97,] 0.4105300 0.8270726 0.9014110 0.9395911 0.9706944 1.0435732 1.0514852 #>   [98,] 0.2124219 0.2186445 0.3445172 0.4016329 0.4787311 0.4987701 0.5114435 #>   [99,] 0.3280085 0.3582446 0.4185033 0.4568222 0.5010213 0.5324019 0.5850366 #>  [100,] 0.1571661 0.3270607 0.3297749 0.4152959 0.4155446 0.4394434 0.4580318 #>  [101,] 0.2739325 0.3809649 0.4841949 0.5437178 0.5598850 0.5759087 0.5909632 #>  [102,] 0.2996124 0.3339395 0.3844833 0.4353951 0.4817672 0.5174399 0.5288210 #>  [103,] 0.3320144 0.4270915 0.4489724 0.4523994 0.5238062 0.7183704 0.7482213 #>  [104,] 0.5199243 0.5474814 0.6015021 0.6750002 0.7032852 0.7385655 0.7484588 #>  [105,] 0.2126666 0.2493681 0.4471116 0.4937531 0.5813783 0.5828444 0.5903206 #>  [106,] 0.5419905 0.5822079 0.5864139 0.6363900 0.6930033 0.7455654 0.7519386 #>  [107,] 0.2666600 0.3281947 0.3619748 0.3796002 0.4202768 0.4856680 0.5136110 #>  [108,] 0.3639847 0.3871541 0.5125243 0.5605496 0.6158616 0.6359263 0.6527205 #>  [109,] 0.4119780 0.5241731 0.5338553 0.5406000 0.6055802 0.6454900 0.6541286 #>  [110,] 0.3138712 0.3169376 0.5639420 0.6111445 0.6707567 0.6897751 0.7333901 #>  [111,] 0.4470085 0.5324019 0.5626414 0.5926014 0.6102623 0.7162092 0.8251008 #>  [112,] 0.3764155 0.4406940 0.5632216 0.5772628 0.6072182 0.6177780 0.6230867 #>  [113,] 0.5190582 0.5480682 0.5843524 0.6801021 0.7109512 0.8336948 0.8514350 #>  [114,] 0.3823685 0.4612383 0.5290168 0.5543619 0.5844332 0.6751672 0.7041751 #>  [115,] 0.3001888 0.4484685 0.4561176 0.4897710 0.5088910 0.5442525 0.5628880 #>  [116,] 0.3551558 0.7245206 0.7868111 0.8720892 0.9696472 1.0130370 1.0285213 #>  [117,] 0.3504076 0.4080805 0.4702059 0.5934633 0.6343287 0.6462851 0.6563538 #>  [118,] 0.4036560 0.5852113 0.5892437 0.6075354 0.6658440 0.6682632 0.7187059 #>  [119,] 0.7072822 0.7936557 0.8296461 0.8314887 0.8377960 0.8514944 0.8657509 #>  [120,] 0.3063874 0.5338996 0.5522705 0.5912894 0.7474931 0.7842216 0.7865370 #>  [121,] 0.4043541 0.4711634 0.7673382 0.7719437 0.8086823 0.9029788 0.9706023 #>  [122,] 0.6177029 0.6960585 0.7485267 0.7642617 0.8026730 0.9076117 0.9172140 #>  [123,] 0.4319182 0.4883972 0.5311404 0.5338494 0.5714113 0.5846369 0.6012636 #>  [124,] 0.4383293 0.4878459 0.5164387 0.6660976 0.6780518 0.7047720 0.7258564 #>  [125,] 0.3391542 0.4386292 0.5924349 0.6019411 0.6134247 0.6400310 0.6746848 #>  [126,] 0.4458910 0.4961469 0.5199104 0.5265334 0.5377278 0.5461781 0.5632634 #>  [127,] 0.2127999 0.4177365 0.4273248 0.4308748 0.4372331 0.4395468 0.4537299 #>  [128,] 0.1697641 0.3708620 0.4827002 0.5037656 0.5929496 0.6346981 0.6435527 #>  [129,] 0.8362561 0.8418727 0.9396298 1.0977557 1.1660918 1.1859439 1.2205160 #>  [130,] 0.3949158 0.5201856 0.5970816 0.6584859 0.6600040 0.8016199 0.8370871 #>  [131,] 0.3726157 0.4594279 0.6503906 0.6693788 0.6746643 0.6810093 0.7895809 #>  [132,] 0.5830046 0.6350297 0.7052237 0.7250215 0.8657509 0.8944138 0.9628218 #>  [133,] 0.4554826 0.5130768 0.5418031 0.5992723 0.6217976 0.6343636 0.6452653 #>  [134,] 0.3424898 0.4314329 0.4319182 0.4824674 0.5031186 0.5265334 0.5613060 #>  [135,] 0.2199036 0.2659000 0.3722694 0.3814877 0.4754374 0.4781263 0.4882898 #>  [136,] 0.2639793 0.3790206 0.3810690 0.3842816 0.4540897 0.5234403 0.5319840 #>  [137,] 0.3007172 0.3882606 0.3891797 0.4511295 0.4585077 0.4899825 0.5018221 #>  [138,] 0.3891797 0.4003394 0.4093087 0.4510614 0.4989316 0.5394937 0.5654279 #>  [139,] 0.1953825 0.2581276 0.3349301 0.3445172 0.4202771 0.4215198 0.4317165 #>  [140,] 0.4007418 0.4878459 0.4897710 0.5349754 0.5784557 0.6615394 0.7460146 #>  [141,] 0.4472194 0.4553296 0.5748453 0.6313138 0.6315250 0.6462851 0.7005078 #>  [142,] 0.4383920 0.8683177 1.0143848 1.0697831 1.0766055 1.0877618 1.1367527 #>  [143,] 0.3426322 0.6000873 0.8188785 0.8570448 0.8648781 0.9063361 0.9562367 #>  [144,] 0.2454466 0.3305764 0.3320144 0.5796216 0.5828690 0.5829722 0.6152581 #>  [145,] 0.6176849 0.6571260 0.6640692 0.8492827 0.9078621 0.9593884 0.9805610 #>  [146,] 0.7062103 0.7082198 0.7641886 0.8451212 0.8551457 0.8795054 0.9470179 #>  [147,] 0.8999411 0.9217838 0.9390820 0.9402478 0.9527692 0.9932829 1.0170127 #>  [148,] 0.5435531 0.6555649 0.7158553 0.8156964 0.8782123 0.9542597 0.9745501 #>  [149,] 0.3652411 0.5227214 0.5370673 0.5805778 0.6012636 0.6022131 0.6117674 #>  [150,] 0.4401061 0.4652960 0.5176574 0.5332888 0.5912894 0.6126145 0.7351420 #>  [151,] 0.4192962 0.7583930 0.8249106 0.8651275 0.9524089 0.9605344 1.0045340 #>  [152,] 0.3599027 0.4080805 0.5565640 0.5596752 0.5727677 0.6315250 0.6447966 #>  [153,] 0.8239665 1.0974455 1.1210698 1.1972454 1.2045141 1.2147620 1.2229926 #>  [154,] 0.4159788 0.4817015 0.6653983 0.6849641 0.7279046 0.7342181 0.7482923 #>  [155,] 0.4071333 0.6440975 0.7699234 0.8256817 0.9071700 0.9481633 0.9855625 #>  [156,] 0.2921631 0.4097287 0.4115992 0.4588515 0.5234100 0.5466795 0.5737518 #>  [157,] 0.5381888 0.5586869 0.5892326 0.6183072 0.6321275 0.6782478 0.7015653 #>  [158,] 0.5973952 0.6834605 0.7174115 0.7844804 0.8266939 0.8510199 0.8543216 #>  [159,] 0.6723279 0.8361119 0.8597237 0.8607517 0.8655687 0.8742488 0.8821152 #>  [160,] 0.2219355 0.2779481 0.3297749 0.3333719 0.4900127 0.4938741 0.5034575 #>  [161,] 0.4426456 0.5938974 0.6343636 0.6381163 0.6384964 0.6674331 0.6891083 #>  [162,] 0.3922067 0.5142108 0.5894584 0.7374662 0.8174749 0.8258687 0.8492827 #>  [163,] 0.4923794 0.6200645 0.8248604 0.9067738 0.9284766 0.9455365 0.9658443 #>  [164,] 0.5086477 0.6193849 0.6598612 0.6732775 0.6769747 0.6932742 0.6951027 #>  [165,] 0.4244538 0.5676154 0.5718502 0.6002915 0.6123300 0.6314941 0.6444403 #>  [166,] 0.3809388 0.4494273 0.4666871 0.5170595 0.5863099 0.6014534 0.6050856 #>  [167,] 0.3138712 0.4343075 0.6407605 0.6521085 0.6640692 0.7374662 0.7840988 #>  [168,] 0.2991401 0.3585358 0.6115942 0.7870639 0.8220765 0.8570448 0.9135242 #>  [169,] 0.2213794 0.3575766 0.4352549 0.4495114 0.4505674 0.4852212 0.5034575 #>  [170,] 0.3063874 0.3314204 0.5332888 0.5553909 0.5881297 0.7086013 0.7363126 #>  [171,] 0.5109527 0.6448157 0.7923513 0.8112725 0.8751129 0.9265160 0.9668022 #>  [172,] 0.3759131 0.4305782 0.5182537 0.6140498 0.6665510 0.6875744 0.7161876 #>  [173,] 0.6061652 0.8740847 0.9036300 1.0105252 1.0106599 1.0465485 1.1428232 #>  [174,] 0.2341677 0.2431837 0.3747059 0.3809649 0.4724823 0.4731748 0.4861801 #>  [175,] 0.4321952 0.5213234 0.6478552 0.7294704 0.7634323 0.7938671 0.7978528 #>  [176,] 0.5082435 0.5958109 0.6145326 0.6163193 0.6600040 0.6661207 0.6815340 #>  [177,] 0.4702031 0.7109817 0.7146164 0.7451424 0.8479874 0.8806523 0.9228788 #>  [178,] 0.6423322 0.8596714 0.9093060 1.0302979 1.1278758 1.1492008 1.1535875 #>  [179,] 0.5502789 0.5713538 0.5765767 0.5800260 0.6062569 0.6444751 0.6589163 #>  [180,] 0.6674427 0.7967038 0.8033406 0.8596144 0.8980795 0.8986613 0.9893902 #>  [181,] 0.1251699 0.3431534 0.3947171 0.4006243 0.4318839 0.4576481 0.5087678 #>  [182,] 0.3335011 0.3887750 0.4437013 0.4942311 0.5017656 0.5076715 0.5704381 #>  [183,] 0.6015168 0.6064487 0.6447194 0.7105145 0.7109817 0.7254453 0.7283798 #>  [184,] 0.3339860 0.3448947 0.4201332 0.4625115 0.5255280 0.5313648 0.5424157 #>  [185,] 0.4515596 0.5241731 0.5452802 0.5704381 0.5938335 0.6895519 0.7082388 #>  [186,] 0.3980350 0.4677499 0.5194676 0.6126425 0.6523388 0.6848514 0.7028124 #>  [187,] 0.2759752 0.3471941 0.3713080 0.4638494 0.4942311 0.5218788 0.5535432 #>  [188,] 0.6356572 0.8773944 0.9395911 1.0006800 1.0369745 1.0380372 1.0408452 #>  [189,] 0.6562236 0.7030044 0.7270595 0.9223827 0.9257247 0.9441020 0.9908215 #>  [190,] 0.5601551 1.0093497 1.6447732 1.7167646 1.7935694 1.8468092 1.9679866 #>  [191,] 0.4662444 0.6797020 0.6820040 0.7185745 0.8178872 0.8562923 0.9138492 #>  [192,] 0.4491886 0.4853643 0.5098080 0.5572828 0.6006179 0.6769747 0.7206221 #>  [193,] 0.4512719 0.5333814 0.5616769 0.6172515 0.6260809 0.6263504 0.6284860 #>  [194,] 0.3471941 0.3602460 0.4437013 0.5416772 0.5938335 0.5959296 0.5994383 #>  [195,] 0.4589743 0.5937317 0.5946351 0.6681181 0.7176434 0.7898325 0.8316870 #>  [196,] 0.5403141 0.5450080 0.5578409 0.5829722 0.6192608 0.6528019 0.6704220 #>  [197,] 0.5809340 0.5971391 0.6825113 0.7151635 0.8042336 0.8565075 0.9733889 #>  [198,] 0.2956679 0.4251142 0.4482817 0.5142382 0.5231681 0.5260477 0.5632216 #>  [199,] 0.3118759 0.3784374 0.4511295 0.4740814 0.4903546 0.4989316 0.5912650 #>  [200,] 0.4484685 0.4541455 0.4796803 0.5229429 0.5879116 0.5958383 0.6181543 #>  [201,] 0.2989964 0.3348730 0.3589196 0.4033779 0.4177386 0.4450827 0.4718952 #>  [202,] 0.6141887 0.6358657 0.6359739 0.7270595 0.7477617 0.8769414 0.9287948 #>  [203,] 0.3607994 0.4123550 0.4703898 0.5102964 0.5670495 0.5697230 0.6182873 #>  [204,] 0.7865726 0.8681196 0.8742734 0.8757049 0.9829470 1.0431670 1.1573773 #>  [205,] 0.3007172 0.3880181 0.4042238 0.4316908 0.4510614 0.4745855 0.5129873 #>  [206,] 0.3460634 0.4038662 0.5255085 0.5769288 0.6492937 0.6670392 0.6981202 #>  [207,] 0.3442101 0.4617125 0.4669757 0.4701144 0.4845719 0.5068882 0.5810528 #>  [208,] 0.5780221 0.5800381 0.5880242 0.6249072 0.6477337 0.6656635 0.6836806 #>  [209,] 0.3618233 0.3630595 0.4527525 0.5418031 0.5796300 0.6085480 0.6265638 #>  [210,] 0.4965659 0.5600268 0.5638145 0.5721606 0.6084340 0.6088373 0.6311809 #>  [211,] 0.5802231 0.6850101 0.8146218 0.8165197 0.8225144 0.8260052 0.8562505 #>  [212,] 0.3233393 0.4341824 0.4873355 0.5902830 0.6457296 0.6550524 0.7332966 #>  [213,] 0.2956679 0.5597078 0.5897088 0.6230867 0.6828748 0.6880631 0.6895700 #>  [214,] 0.4307607 0.4399143 0.4620874 0.5129748 0.5367148 0.5589667 0.5652132 #>  [215,] 0.2750581 0.3199466 0.3911048 0.4790633 0.4899825 0.4903546 0.5156362 #>  [216,] 0.4143870 0.4203005 0.4810258 0.5401200 0.5764552 0.6044879 0.6531814 #>  [217,] 0.8138490 0.8847649 0.8898739 0.9415003 1.0998110 1.1093429 1.1254496 #>  [218,] 0.3234918 0.4747028 0.5305693 0.5545897 0.5670797 0.5946830 0.6894500 #>  [219,] 0.4039615 0.5058535 0.6159064 0.6283901 0.6303021 0.6697382 0.6739166 #>  [220,] 0.3218932 0.5878971 0.6927671 0.7145369 0.7223695 0.7391452 0.7403153 #>  [221,] 0.5921536 0.6583074 0.6844166 0.7847599 0.8403036 0.8734922 0.8890388 #>  [222,] 0.8026730 0.8899348 1.0892912 1.1104392 1.1253054 1.1395019 1.1531648 #>  [223,] 1.0317406 1.0517889 1.0630678 1.0664502 1.1319398 1.1606540 1.2008886 #>  [224,] 0.4177386 0.4314167 0.4458852 0.4492563 0.4966817 0.5085496 0.5167058 #>  [225,] 0.5109527 0.6832693 0.7536926 0.8265094 0.9035923 0.9289425 0.9682766 #>  [226,] 0.4282011 0.4841949 0.5265417 0.5332551 0.5338553 0.5627164 0.5647359 #>  [227,] 0.3768753 0.5195674 0.6306894 0.6523388 0.6635077 0.6770366 0.7398363 #>  [228,] 0.5081120 0.5704526 0.6188954 0.6299776 0.6820040 0.7691764 0.7971026 #>  [229,] 0.3259343 0.3943838 0.4408640 0.4745855 0.5422523 0.5635197 0.5868147 #>  [230,] 0.8477029 0.9906182 1.1004262 1.1952574 1.4815776 1.5242224 1.5400798 #>  [231,] 0.4448912 0.5683315 0.6025930 0.6292263 0.6858223 0.7776315 0.7991615 #>  [232,] 0.5597078 0.5631789 0.6177780 0.6589163 0.6708284 0.6824223 0.6982904 #>  [233,] 0.7567471 0.7845920 0.8316158 0.8773426 1.0066074 1.0735460 1.0968069 #>  [234,] 0.2606045 0.3482067 0.6115254 0.6882739 0.7045890 0.7200459 0.7462963 #>  [235,] 0.4097287 0.4429751 0.4739026 0.5106559 0.5216043 0.5354077 0.5365497 #>  [236,] 0.8599350 0.8870444 0.9646881 1.0883992 1.0910131 1.1096619 1.2290237 #>  [237,] 0.6315625 0.6628841 0.6850101 0.7883574 0.7923513 0.7976282 0.7985196 #>  [238,] 0.3815127 0.4266848 0.4949191 0.5878971 0.7147235 0.7174732 0.7180295 #>  [239,] 0.4803953 0.7979126 0.8104330 0.8757670 0.8854835 0.9712453 1.0205419 #>  [240,] 0.3630595 0.5008848 0.5039633 0.5509121 0.5670838 0.5992723 0.6520588 #>  [241,] 0.6552567 1.0939862 1.2837710 1.5180604 1.5413758 1.5854162 1.5881028 #>  [242,] 0.5473630 0.7136324 0.7344519 0.8087928 0.9233866 0.9448996 1.0089057 #>  [243,] 0.4515596 0.4731651 0.6055802 0.6194397 0.6745133 0.7493161 0.7538691 #>  [244,] 0.4497609 0.4546533 0.5018221 0.5129873 0.5605462 0.5935618 0.6238384 #>  [245,] 0.3895050 0.4174363 0.5815840 0.5824329 0.6607596 0.6844379 0.7206090 #>  [246,] 0.2537811 0.5098448 0.5835078 0.6100800 0.6573539 0.6835674 0.7194708 #>  [247,] 0.3623904 0.3962631 0.4322539 0.4620379 0.4646330 0.4690315 0.5162979 #>  [248,] 0.7366617 0.7470345 0.7567551 0.8000404 0.8028413 0.8639474 0.9099827 #>  [249,] 0.2199036 0.2998139 0.3468902 0.3519166 0.4711374 0.4930074 0.5110921 #>  [250,] 0.7078894 0.9292354 0.9341814 0.9610054 0.9667498 1.0160068 1.2178131 #>  [251,] 1.2134147 1.3324296 1.3513079 1.3526454 1.4705634 1.4761861 1.4817486 #>  [252,] 0.2921631 0.3368398 0.3843751 0.4945547 0.5750443 0.5867752 0.6154553 #>  [253,] 0.3153035 0.3966177 0.4298896 0.4930032 0.5167058 0.5874680 0.5887785 #>  [254,] 0.4819024 0.4950835 0.5005773 0.5534737 0.5552267 0.5780654 0.5868147 #>  [255,] 0.1113919 0.5218122 0.5881297 0.6197973 0.7236682 0.7302658 0.7391400 #>  [256,] 1.1392710 1.5015857 1.5773453 1.5869115 1.6231690 1.6512417 1.7113568 #>  [257,] 0.3489624 0.4321952 0.4956681 0.5597944 0.5798359 0.6128520 0.6671403 #>  [258,] 0.4244538 0.5017656 0.6161380 0.6895519 0.6941775 0.7048792 0.7139140 #>  [259,] 0.5284236 0.5799680 0.5829555 0.7430271 0.7444694 0.7619064 0.7805513 #>  [260,] 0.6732057 0.7469213 0.9014110 0.9536116 0.9634707 0.9955488 1.0006800 #>  [261,] 0.6030362 0.6230817 0.7041834 0.8954496 0.8967256 0.9518010 0.9554768 #>  [262,] 0.3255484 0.4569092 0.4747028 0.4827002 0.5123543 0.5163456 0.5474090 #>  [263,] 0.5742595 0.6744084 0.8110190 0.8969396 0.9133471 0.9297650 0.9405660 #>  [264,] 0.1826120 0.3572738 0.3810015 0.3991571 0.4015631 0.4060242 0.5021497 #>  [265,] 0.3871541 0.3969316 0.5086477 0.5577259 0.6228068 0.6561159 0.6617539 #>  [266,] 0.7348102 0.7487227 0.7490524 0.8026091 0.8714497 0.9203454 1.0001273 #>  [267,] 0.2205039 0.2802539 0.4214794 0.4572978 0.4620379 0.5138243 0.5276139 #>  [268,] 0.5961876 0.6265907 0.6475355 0.8488360 0.8769512 0.9258185 0.9552585 #>  [269,] 0.5106689 0.5739148 0.7744630 0.7970595 0.7995646 0.8382210 0.8534474 #>  [270,] 0.4662444 0.6188954 0.8457550 0.9183296 0.9488499 0.9521113 0.9683779 #>  [271,] 0.4717647 0.4739168 0.4949041 0.5278123 0.5588218 0.6128520 0.6187925 #>  [272,] 0.2084596 0.3409218 0.4769755 0.5008848 0.5058783 0.5925062 0.6085480 #>  [273,] 0.6568117 0.6810029 0.7637963 0.7931073 0.8097563 0.8193329 0.8271600 #>  [274,] 0.3613733 0.4985686 0.5105869 0.5864516 0.6675016 0.6978092 0.7015653 #>  [275,] 0.2493681 0.3217388 0.3925668 0.4226920 0.5208564 0.5482485 0.5894166 #>  [276,] 0.6681181 0.8324728 0.8994521 0.9808304 1.0365500 1.0426337 1.0851486 #>  [277,] 0.2067751 0.4963191 0.5750443 0.5863160 0.5983803 0.6080618 0.6228830 #>  [278,] 0.8135262 0.8360571 0.8657834 0.8863635 0.9910864 1.0198413 1.0612270 #>  [279,] 0.8592655 1.0227210 1.0927985 1.1667920 1.2134147 1.2255001 1.3567145 #>  [280,] 1.1585856 1.1766514 1.1845853 1.2208541 1.3413812 1.3845559 1.4240757 #>  [281,] 0.2640761 0.4589775 0.5416663 0.5429251 0.5431829 0.5725957 0.5736610 #>  [282,] 0.3764369 0.3920450 0.5596959 0.5825871 0.6111534 0.6564331 0.6706169 #>  [283,] 0.3254118 0.4494426 0.4677838 0.5100109 0.5666222 0.5897937 0.5964494 #>  [284,] 0.4448912 0.5116395 0.5606328 0.6493078 0.6609395 0.6676623 0.6823676 #>  [285,] 0.6235712 0.6838823 0.7463102 0.7637820 0.7840428 0.8142888 0.8231489 #>  [286,] 0.6056577 0.6270197 0.8520916 0.8597237 0.8757670 0.8780884 0.9033164 #>  [287,] 0.4340155 0.4408640 0.5054064 0.5371492 0.6228671 0.6651803 0.6836261 #>  [288,] 0.3518274 0.3810015 0.4121957 0.4228516 0.4270478 0.5075491 0.5832748 #>  [289,] 0.5072439 0.5115378 0.6373922 0.6538028 0.6721999 0.7087414 0.7131088 #>  [290,] 1.0089832 1.0093497 1.6512417 1.9762617 2.1040156 2.1056979 2.1150231 #>  [291,] 0.3391542 0.4780416 0.5246408 0.5671278 0.5750946 0.5786255 0.6216858 #>  [292,] 0.8757049 0.9130893 1.1009669 1.1679038 1.2216131 1.2451432 1.2846944 #>  [293,] 0.4079279 0.4355070 0.4372489 0.5417861 0.5426939 0.5427502 0.5531993 #>  [294,] 0.4314167 0.4718952 0.4745192 0.4930032 0.5594881 0.5689416 0.5995350 #>  [295,] 0.2572909 0.2676381 0.3157401 0.3270607 0.3333719 0.3575766 0.3760932 #>  [296,] 0.2199395 0.3327628 0.3545185 0.4374564 0.4601082 0.5200230 0.5572635 #>  [297,] 0.3885040 0.5455886 0.5713538 0.5773018 0.6004637 0.6287157 0.6443303 #>  [298,] 0.7848294 1.0407837 1.1635841 1.1841477 1.2352213 1.4331789 1.4435083 #>  [299,] 0.3428230 0.3525313 0.4263886 0.4925252 0.5200291 0.5508694 0.6640526 #>  [300,] 0.4838997 0.5703703 0.5790676 0.6224867 0.6342861 0.6483664 0.6502113 #>  [301,] 0.4122874 0.5153891 0.5544399 0.6654541 0.6824385 0.6927163 0.7057450 #>  [302,] 0.3118759 0.4093087 0.5932468 0.6056662 0.6191656 0.6219256 0.6295060 #>  [303,] 0.3834029 0.4204325 0.4490532 0.4519956 0.4521712 0.4766048 0.4934717 #>  [304,] 0.4117004 0.6360092 0.8526801 1.0074236 1.1022411 1.1766058 1.2383962 #>  [305,] 0.5973952 0.7799664 0.8380140 0.8863635 0.8960559 0.9313402 0.9482028 #>  [306,] 0.5081120 0.5241808 0.5243193 0.6168592 0.6452508 0.7000938 0.7091193 #>  [307,] 0.6476785 0.7975791 0.8239665 0.8622808 0.8795284 0.8808158 0.9928399 #>  [308,] 0.2331969 0.2661462 0.4526355 0.5676154 0.5955365 0.7139140 0.7665827 #>  [309,] 0.4702031 0.7149807 0.8295621 0.8537522 0.8664183 0.8789158 0.9113630 #>  [310,] 0.5142712 0.7143269 0.7755237 0.9067738 0.9111171 0.9477749 0.9538526 #>  [311,] 0.5172792 0.6236874 0.8487416 0.8999660 0.9731846 0.9828619 1.0074236 #>  [312,] 0.9685728 1.0746012 1.1617882 1.3417030 1.4118675 1.4967831 1.6166494 #>  [313,] 1.7026236 1.7615025 1.8115975 1.9042561 1.9243551 1.9283423 1.9294923 #>  [314,] 0.2640761 0.2994323 0.4406940 0.4914228 0.5116266 0.5116795 0.5681643 #>  [315,] 0.5949562 0.6354994 0.6583361 0.7690322 0.8270726 0.8395446 0.9634707 #>  [316,] 0.2775697 0.4038662 0.5677097 0.5933595 0.6269105 0.6662341 0.6838331 #>  [317,] 0.3062447 0.3245311 0.3356477 0.3357322 0.3545185 0.3768769 0.4231477 #>  [318,] 0.4155830 0.4721131 0.4820995 0.5442525 0.5740956 0.6489639 0.6498022 #>  [319,] 0.4276626 0.4471116 0.5655261 0.5779278 0.6008691 0.6233400 0.6255669 #>  [320,] 0.2497108 0.3769251 0.4165383 0.5031038 0.6006887 0.6287157 0.6334168 #>  [321,] 0.2466502 0.4582758 0.4985707 0.6218671 0.6484157 0.6644568 0.6942572 #>  [322,] 0.5116395 0.6147374 0.6240780 0.6601669 0.6803970 0.7147235 0.7194869 #>  [323,] 0.4602819 0.5026129 0.5689899 0.5852113 0.6229789 0.7184105 0.7479362 #>  [324,] 0.4701144 0.4886622 0.5243079 0.5510603 0.5600160 0.5902830 0.5945404 #>  [325,] 0.3495144 0.5216372 0.6089716 0.6175907 0.7316042 0.7521237 0.7925561 #>  [326,] 0.4472194 0.5458388 0.6106687 0.6610684 0.7121262 0.7433465 0.7690824 #>  [327,] 0.3926288 0.5551719 0.5669784 0.5976617 0.6844859 0.6993605 0.6994619 #>  [328,] 0.8851783 0.8956037 1.0393599 1.0648563 1.1211087 1.3162950 1.3163354 #>  [329,] 0.1874870 0.2639793 0.3733287 0.4457930 0.4522917 0.4644086 0.4979382 #>  [330,] 0.3226538 0.4848906 0.5124016 0.5655362 0.5665967 0.5726624 0.5932489 #>  [331,] 0.6053737 0.7149807 0.7451424 0.8059130 0.9105958 0.9557813 1.0060863 #>  [332,] 0.2875904 0.4053210 0.4064159 0.4088435 0.4310972 0.4526802 0.4581435 #>  [333,] 0.4740805 0.5190582 0.5689065 0.5772628 0.6006887 0.6706124 0.6880631 #>  [334,] 0.2331969 0.3781033 0.5424332 0.6396585 0.6638672 0.6797951 0.7263292 #>  [335,] 0.4192962 0.8167749 0.8581711 0.9341814 0.9468521 1.0251823 1.0565338 #>  [336,] 0.2513093 0.4869735 0.7968346 0.8442702 0.9336577 1.0013555 1.0056013 #>  [337,] 0.5821892 0.8529215 0.9863945 0.9917429 1.0030147 1.0094166 1.0275230 #>  [338,] 0.3052542 0.5037656 0.5175896 0.5354285 0.5864516 0.5892326 0.6565112 #>  [339,] 0.5836669 0.6711264 0.6857129 0.7018688 0.7444694 0.7489598 0.7526821 #>  [340,] 0.8179345 1.3702329 1.3956936 1.4190551 1.5468279 1.5558764 1.6032071 #>  [341,] 0.3781653 0.4568222 0.4941627 0.5772068 0.5818712 0.6195791 0.6577424 #>  [342,] 0.6537581 0.7463883 0.7497546 0.8023172 0.8289068 0.8301629 0.8668216 #>  [343,] 0.3311262 0.6023550 0.6187925 0.6478552 0.6531814 0.6693811 0.6868593 #>  [344,] 0.7688623 0.8742488 0.9360641 0.9712920 0.9994460 1.0244394 1.0348992 #>  [345,] 0.5344343 0.5368738 0.5835078 0.5948336 0.6256794 0.6514302 0.6578229 #>  [346,] 0.5439748 0.5572828 0.5737396 0.5755912 0.5793390 0.5924349 0.5959592 #>  [347,] 0.4007418 0.5560317 0.6537581 0.6638007 0.7258564 0.7928661 0.8532602 #>  [348,] 0.7505151 0.8549597 0.8807600 0.8839921 0.9890819 1.0091681 1.0435267 #>  [349,] 0.1571661 0.2219355 0.2572909 0.3593473 0.4352549 0.4412299 0.4901999 #>  [350,] 0.3713080 0.4235129 0.5508694 0.5788443 0.6051685 0.6257514 0.6583466 #>  [351,] 0.2996124 0.4588671 0.5146824 0.5166976 0.5243079 0.5548189 0.5614305 #>  [352,] 0.5961876 0.8088653 0.8289298 0.8990320 1.1871913 1.2185194 1.2210911 #>  [353,] 0.3564549 0.4263886 0.4750999 0.4949041 0.4980486 0.5241808 0.5349175 #>  [354,] 1.0872537 1.0974455 1.1606540 1.2344059 1.3876755 1.4231223 1.4286069 #>  [355,] 0.4669600 0.4717647 0.5225249 0.6376599 0.6681850 0.6789312 0.6930728 #>  [356,] 0.1711273 0.2017364 0.2105118 0.2730954 0.3442571 0.3606717 0.4437286 #>  [357,] 0.3522048 0.4383293 0.5817333 0.6553864 0.6615394 0.6805938 0.6859919 #>  [358,] 0.3721158 0.4985686 0.5354285 0.5381888 0.6346981 0.6413582 0.6747714 #>  [359,] 0.7851290 0.8207347 0.8306381 0.8967256 1.0102808 1.0314215 1.0855465 #>  [360,] 0.3348329 0.4016329 0.4202771 0.4247733 0.4774438 0.4908610 0.4916802 #>  [361,] 0.4498139 0.5367063 0.6271592 0.6897811 0.7315408 0.7424410 0.7462963 #>  [362,] 0.7865726 0.9608157 1.1174624 1.2037095 1.2071710 1.2996129 1.3200207 #>  [363,] 0.4412094 0.4576836 0.5740956 0.5879116 0.6937620 0.7028481 0.7340256 #>  [364,] 0.5815396 0.6741101 0.7702699 0.8251008 0.8791834 0.8845093 0.9056975 #>  [365,] 0.8477029 1.1607808 1.4341445 1.4372597 1.5232922 1.5595742 1.6153321 #>  [366,] 0.1444199 0.2147057 0.2964660 0.3763506 0.4718190 0.4724823 0.5031391 #>  [367,] 0.3124816 0.6447194 0.6740971 0.7543755 0.7730446 0.7905675 0.8043164 #>  [368,] 1.0538053 1.2736849 1.3305608 1.4911662 1.6796001 1.7359295 1.7955694 #>  [369,] 0.4362067 0.4558135 0.4731651 0.4769755 0.5006439 0.6346440 0.6712888 #>  [370,] 0.4417147 0.4553296 0.5616769 0.6010482 0.6050856 0.6059664 0.6343537 #>  [371,] 0.4812631 0.5895551 0.8126626 0.8259296 0.8712876 0.8836388 0.9371263 #>  [372,] 0.2570604 0.3327387 0.3536524 0.4215198 0.5493427 0.5501019 0.5750531 #>  [373,] 0.6427611 0.7143269 0.7721591 0.7785696 0.7916545 0.7967812 0.8169162 #>  [374,] 0.4637771 0.5365163 0.7688521 0.7752888 0.8052273 0.8078020 0.8407978 #>  [375,] 0.4036560 0.6440975 0.6584974 0.6794487 0.7157654 0.7226002 0.7495462 #>  [376,] 0.2784699 0.2947907 0.2968328 0.3318257 0.5824518 0.5904808 0.6029548 #>  [377,] 0.3265655 0.4572978 0.4950582 0.5240632 0.5433714 0.5865573 0.5911516 #>  [378,] 0.3469414 0.4227134 0.4779012 0.6697382 0.6979404 0.7469986 0.7490524 #>  [379,] 0.3694662 0.5227128 0.5563806 0.7229418 0.8585724 0.9508038 0.9566499 #>  [380,] 0.2205418 0.3610222 0.4214794 0.4950582 0.5026919 0.5055272 0.5279857 #>  [381,] 0.3424853 0.3623904 0.4111557 0.4764689 0.4987701 0.5085010 0.5176588 #>  [382,] 0.4787867 0.6205196 0.6255389 0.6837591 0.7075745 0.7296096 0.7517523 #>  [383,] 0.2766520 0.3001888 0.4155830 0.4796803 0.6279236 0.6569985 0.6895028 #>  [384,] 0.6380556 0.7136324 0.8567197 0.9511454 0.9564728 0.9679114 1.0755713 #>  [385,] 1.1336616 1.3598234 1.3775565 1.4445621 1.4475370 1.4926822 1.5768301 #>  [386,] 0.7734356 1.1328119 1.2015376 1.2071710 1.2326972 1.2392403 1.2854884 #>  [387,] 0.3213774 0.3652411 0.4310972 0.4655661 0.5014299 0.5033294 0.5338494 #>  [388,] 0.6098933 0.6661207 0.7496285 0.7553941 0.7986761 0.7988833 0.8309120 #>  [389,] 0.3280085 0.3752953 0.3781653 0.4394088 0.5218172 0.5693460 0.5871071 #>  [390,] 0.3843751 0.3871070 0.4588515 0.5548477 0.5715566 0.6311809 0.6388483 #>  [391,] 0.4598514 0.4993307 0.5082676 0.5267160 0.5338369 0.6067554 0.6352914 #>  [392,] 0.4807627 0.6904138 0.8666974 0.9281373 0.9666349 0.9739914 1.0021709 #>  [393,] 0.4633285 0.5656778 0.5723285 0.6214191 0.6484381 0.6949518 0.7027695 #>  [394,] 0.3650620 0.4301278 0.4527525 0.4558135 0.5080473 0.6149214 0.6154784 #>  [395,] 0.4721131 0.5590880 0.5784557 0.5801501 0.6279236 0.7743265 0.7960029 #>  [396,] 0.7121892 0.7195611 0.9020730 0.9482466 0.9553001 0.9882174 1.0344171 #>  [397,] 0.2152512 0.4088435 0.4351559 0.4612920 0.4713679 0.5398678 0.5684092 #>  [398,] 0.2431837 0.2739325 0.3636055 0.4282011 0.4485030 0.5435767 0.5598461 #>  [399,] 0.5507593 0.8222723 0.8534474 0.8940343 0.8981490 0.9717410 1.0254950 #>  [400,] 0.6236874 0.6272002 0.8316158 0.9025229 1.1695899 1.1766058 1.2015376 #>  [401,] 0.4827825 0.5474814 0.6055480 0.7208659 0.7215747 0.7305756 0.8090760 #>  [402,] 0.4581918 0.6284543 0.6496646 0.6906099 0.7141823 0.7448610 0.8483757 #>  [403,] 0.3882606 0.4003394 0.4042238 0.4497609 0.5388352 0.5843067 0.5920540 #>  [404,] 0.6448157 0.7536926 0.9802931 1.0412963 1.0764753 1.1272177 1.1374898 #>  [405,] 0.5338996 0.6877684 0.7382313 0.7444935 0.7737937 0.7749953 0.8151459 #>  [406,] 0.5946351 0.7642193 0.8043164 0.8324728 0.8327347 0.8662033 0.8707932 #>  [407,] 0.2262048 0.3571502 0.3882072 0.3917867 0.4269251 0.4492124 0.4637310 #>  [408,] 0.5205839 0.6415667 0.8592655 0.8972432 0.9370055 0.9528897 1.0285213 #>  [409,] 0.2666600 0.3462259 0.3912701 0.4431271 0.4718190 0.5194676 0.5230312 #>  [410,] 0.5287387 0.6263504 0.7653176 0.7890001 0.8231798 0.8579841 0.8596714 #>  [411,] 0.6374408 1.0415524 1.0649606 1.0654017 1.1075192 1.1566853 1.2113418 #>  [412,] 0.1483997 0.2964660 0.3281947 0.3544090 0.3912701 0.5338369 0.5528021 #>  [413,] 0.6007638 0.7488742 0.8031835 0.8181047 0.8349864 0.8678280 0.8761598 #>  [414,] 0.5356923 0.6347421 0.6560337 0.6573539 0.7698410 0.7869336 0.8565075 #>  [415,] 0.4119993 0.5480810 0.6267967 0.7597113 0.7970039 0.8123156 0.8248693 #>  [416,] 0.6265189 0.6376599 0.6652490 0.6731947 0.6754429 0.6864874 0.6953452 #>  [417,] 0.4800523 0.4998328 0.5869208 0.6206001 0.6662965 0.6743245 0.6948830 #>  [418,] 0.3704491 0.4353189 0.4964357 0.7022318 0.7183529 0.7810734 0.8005378 #>  [419,] 0.9130893 1.4049359 1.4119261 1.4509008 1.5047031 1.5477961 1.6038719 #>  [420,] 0.5394878 0.7549989 0.8515879 0.9669571 1.0466238 1.1256733 1.1385919 #>  [421,] 0.4642933 0.6256762 0.6492937 0.6662341 0.7083924 0.7529897 0.8171385 #>  [422,] 0.3126879 0.3432534 0.4844371 0.5021497 0.5940030 0.6478216 0.7153814 #>  [423,] 0.2178416 0.4185033 0.4394088 0.4470085 0.5016408 0.5372938 0.7131088 #>  [424,] 0.6295275 0.7191952 0.8039289 0.8176458 0.9227858 0.9371263 0.9449355 #>  [425,] 0.5252446 0.6903455 0.6906528 0.8061907 0.8626267 0.8649314 0.8865712 #>  [426,] 0.2792638 0.4157556 0.5193437 0.5200122 0.5287617 0.5333814 0.5792556 #>  [427,] 0.6945542 0.7883685 0.8034189 0.9054421 0.9142305 1.0049564 1.0579507 #>  [428,] 0.4600799 0.4941627 0.5218172 0.5688316 0.5740294 0.7012153 0.7149622 #>  [429,] 0.5742595 0.9321388 1.0092975 1.0246657 1.0378048 1.0528445 1.1050755 #>  [430,] 0.5012335 0.7587487 0.8423746 0.9490423 0.9650572 1.0927180 1.1023811 #>  [431,] 0.3442101 0.5211989 0.5889357 0.5964394 0.6281531 0.6570715 0.6611589 #>  [432,] 0.8082328 0.9783249 1.0073136 1.0205865 1.1064185 1.1478876 1.2428928 #>  [433,] 0.3940069 0.4588362 0.5239362 0.5940738 0.6088722 0.7761283 0.7761762 #>  [434,] 0.4534126 1.0369971 1.0569947 1.0786293 1.1099051 1.1229004 1.1274600 #>  [435,] 0.4873355 0.5117290 0.5255782 0.6010068 0.6152202 0.7093686 0.7481712 #>  [436,] 0.4353189 0.5805710 0.6857129 0.7204157 0.7215293 0.7467309 0.8126626 #>  [437,] 1.2497752 1.2576318 1.2610325 1.2918894 1.3075422 1.4755878 1.4982571 #>  [438,] 0.5610902 0.5689899 0.7187059 0.7229791 0.7468014 0.8119144 0.8549597 #>  [439,] 0.5362531 0.7488187 0.7675419 0.7690824 0.8481930 0.8581503 0.8896023 #>  [440,] 0.2479372 0.3379360 0.3431534 0.4015926 0.4139840 0.4603668 0.4968342 #>  [441,] 0.4518217 0.5098448 0.6560337 0.6717767 0.7184534 0.7581074 0.7969011 #>  [442,] 0.4154304 0.4710014 0.5375424 0.5903543 0.6121681 0.6130889 0.6169053 #>  [443,] 0.9172140 1.1260541 1.1292042 1.1574430 1.2340228 1.2918354 1.3353744 #>  [444,] 0.3469414 0.4039615 0.5032637 0.5808813 0.6430017 0.6639371 0.7489598 #>  [445,] 0.7256906 0.8457550 0.9409548 0.9528252 0.9714679 1.0568413 1.0907273 #>  [446,] 0.7815974 0.9668022 1.0106046 1.0357936 1.0579507 1.1173265 1.1331815 #>  [447,] 0.5027664 0.5458388 0.5727677 0.5740294 0.5836126 0.6313138 0.6403316 #>  [448,] 0.4197199 0.5170386 0.5290386 0.5821900 0.6089716 0.6284889 0.6414996 #>  [449,] 0.4666871 0.5971391 0.6328792 0.7185784 0.7622339 0.7920481 0.7949032 #>  [450,] 0.6698419 0.8479874 0.8870444 0.9128998 0.9725572 1.1000530 1.1336616 #>  [451,] 0.3119767 0.3251332 0.3420110 0.3497946 0.4372331 0.4770162 0.4894600 #>  [452,] 0.6601876 0.8488360 0.9538526 1.0038815 1.0798312 1.1171227 1.1363969 #>  [453,] 0.2906642 0.3480003 0.3518192 0.5082435 0.5772551 0.5991600 0.6055480 #>  [454,] 0.2199395 0.3245311 0.4164892 0.4390508 0.4494426 0.4647473 0.4689921 #>  [455,] 0.5618673 0.5627312 0.5706524 0.5824014 0.6264373 0.6434955 0.6805507 #>  [456,] 0.3218932 0.3815127 0.5610902 0.7245689 0.7272245 0.7429378 0.7586986 #>  [457,] 0.8437962 0.9519414 0.9742031 1.0928535 1.1149277 1.1567066 1.2879472 #>  [458,] 0.3022679 0.3705540 0.5703703 0.6379025 0.6427611 0.6584974 0.6629885 #>  [459,] 0.1516637 0.2880667 0.4372013 0.5256378 0.5805939 0.5932144 0.6609395 #>  [460,] 0.3306562 0.4424737 0.5031186 0.6711264 0.7231496 0.7296123 0.7639935 #>  [461,] 0.4701511 0.7597113 0.7861569 0.8240850 0.8471259 0.9239663 0.9298937 #>  [462,] 0.4511219 0.4715919 0.4817672 0.5032770 0.5106559 0.5324210 0.5612890 #>  [463,] 0.4655745 0.5267160 0.5488030 0.5551719 0.5769288 0.6260415 0.6328554 #>  [464,] 0.3479518 0.6341295 0.8338283 0.8899912 0.9406224 1.0356781 1.0407837 #>  [465,] 0.4845327 0.6561072 0.6611589 0.6763553 0.6882739 0.7016336 0.7255282 #>  [466,] 0.2822553 0.4015631 0.4121957 0.4755218 0.5281400 0.5784289 0.5973783 #>  [467,] 0.4881874 0.5677097 0.5908107 0.6844379 0.6925500 0.7184534 0.7189885 #>  [468,] 0.4034391 0.4594279 0.5072813 0.5849368 0.6059930 0.6164502 0.6662965 #>  [469,] 0.4060242 0.4710014 0.4741639 0.4978126 0.5072439 0.5081117 0.5517097 #>  [470,] 0.5430772 0.5802231 0.6628841 0.6877467 0.7696924 0.7894414 0.8135431 #>  [471,] 0.5575150 0.5933595 0.6228975 0.6768107 0.7491564 0.7763072 0.7922945 #>  [472,] 0.8960344 0.9239663 1.0054148 1.0181440 1.0747644 1.1095406 1.1399571 #>  [473,] 0.3110745 0.6487909 0.7529326 0.7699000 0.7818447 0.8104974 0.8511910 #>  [474,] 1.3283233 1.3499838 1.3554320 1.3565350 1.4083409 1.4909420 1.5379752 #>  [475,] 0.6354994 0.6460401 0.6902393 0.7372283 0.7749723 0.8053991 0.8231018 #>  [476,] 0.6061652 0.6994619 0.7942224 0.8491758 0.8940535 0.9359491 0.9521935 #>  [477,] 0.3920450 0.4309992 0.5169144 0.5511310 0.6928435 0.7133906 0.7351868 #>  [478,] 0.2784699 0.4397730 0.5251448 0.5333964 0.5338453 0.6006737 0.6136711 #>  [479,] 0.5621991 0.7380243 0.8289068 1.1157166 1.1436593 1.1517729 1.2178710 #>  [480,] 0.4906986 0.8826200 0.9491058 0.9617849 0.9775624 0.9936132 1.0052448 #>  [481,] 0.8256896 0.8529215 1.0198413 1.0942367 1.1611642 1.2102388 1.2334866 #>  [482,] 0.2715188 0.4353951 0.4442320 0.4511219 0.4690315 0.5146824 0.5394937 #>  [483,] 0.3949158 0.7777896 0.8271833 0.8468654 0.9203458 0.9275093 0.9302578 #>  [484,] 0.3847131 0.5456329 0.5565640 0.5572237 0.6486475 0.6516147 0.6526808 #>  [485,] 0.2989964 0.3343215 0.3895203 0.4492563 0.4759766 0.5178804 0.5479139 #>  [486,] 0.4602819 0.4767431 0.5466896 0.5685891 0.6658440 0.7062103 0.7167543 #>  [487,] 0.2994323 0.3764155 0.4950835 0.5028142 0.5324231 0.5431829 0.5790846 #>  [488,] 0.4101326 0.4145308 0.4262969 0.5504038 0.5518062 0.5600268 0.5880242 #>  [489,] 0.2606045 0.3271948 0.4715919 0.5644370 0.6267381 0.6271592 0.6742520 #>  [490,] 0.2497108 0.4091100 0.5197607 0.5627312 0.5773018 0.5888745 0.5920745 #>  [491,] 1.0755045 1.1229988 1.1475454 1.2079359 1.2207330 1.3033224 1.3112135 #>  [492,] 0.4812167 0.6555649 0.7524096 0.9349990 0.9437623 0.9914288 1.0290641 #>  [493,] 0.4154304 0.4620874 0.4741639 0.5462654 0.5513565 0.6007925 0.6121713 #>  [494,] 0.5775067 0.6132197 0.6156232 0.6402302 0.6478216 0.6875796 0.7005903 #>  [495,] 0.2381427 0.2466502 0.4669493 0.5422606 0.5558993 0.5701851 0.5821900 #>  [496,] 0.2261799 0.4043541 0.4675681 0.6482628 0.7710551 0.8597552 0.9105958 #>  [497,] 0.4761274 0.5644306 0.5851460 0.6319855 0.6620309 0.6684510 0.7360710 #>  [498,] 0.8672851 1.0606472 1.5314587 1.6675846 1.6736266 1.7040650 1.7353930 #>  [499,] 0.3922067 0.6407605 0.6571260 0.6579930 0.7668827 0.8532111 0.8585379 #>  [500,] 0.6098933 0.6975344 0.8459930 0.8468186 0.8585379 0.8922663 0.9062131 #>  [501,] 0.6053737 0.9228788 0.9381927 0.9519414 0.9531269 0.9725572 0.9786024 #>  [502,] 0.3654383 0.4367016 0.5822079 0.6491822 0.6496646 0.7072696 0.7317978 #>  [503,] 0.3610222 0.3627970 0.3931155 0.4351559 0.4829974 0.4884964 0.4957854 #>  [504,] 0.8443921 0.9065718 0.9509285 1.0112202 1.2286854 1.2439925 1.2458560 #>  [505,] 0.6575188 0.6727162 0.9237126 0.9595692 1.0412325 1.0438448 1.0440553 #>  [506,] 0.4554826 0.4617709 0.5796300 0.5833629 0.6154784 0.6891083 0.7444935 #>  [507,] 0.3194513 0.3226538 0.4060305 0.4918744 0.4984680 0.5159417 0.5162413 #>  [508,] 0.3400546 0.3528206 0.3729650 0.3733287 0.4231477 0.4514583 0.5014862 #>  [509,] 0.1513933 0.2562815 0.3790206 0.4522917 0.4824674 0.5218481 0.5344561 #>  [510,] 0.3255037 0.3377905 0.3802623 0.4442818 0.4566303 0.4760082 0.4824845 #>  [511,] 0.7015621 0.7780194 0.8203674 0.9442843 1.0163482 1.0302979 1.0601633 #>  [512,] 0.4071333 0.4687092 0.6794487 0.7980645 0.8411138 0.8523472 0.8729844 #>  [513,] 0.4812167 0.7158553 0.7429378 0.7937811 0.8650411 0.8679100 0.8838919 #>  [514,] 0.4432931 0.4687092 0.6163178 0.6224867 0.7180597 0.7226002 0.7419483 #>  [515,] 0.2740866 0.3760932 0.4289456 0.4483602 0.4580318 0.4896321 0.4911487 #>  [516,] 0.6421101 0.7130678 0.7922945 0.8946249 0.9123959 1.0049571 1.0826545 #>  [517,] 0.3382783 0.4439274 0.4502408 0.5232716 0.6739166 0.6784618 0.7234309 #>  [518,] 0.1953825 0.2186445 0.3210725 0.3211265 0.3348329 0.4684212 0.5293122 #>  [519,] 0.2152512 0.3931155 0.4863816 0.4876135 0.4912181 0.5125243 0.5839884 #>  [520,] 0.2693225 0.2759467 0.2813038 0.4262569 0.4293714 0.4482817 0.4980486 #>  [521,] 0.3180998 0.3519166 0.4006243 0.4250194 0.4754374 0.4968342 0.4979559 #>  [522,] 0.2775697 0.3460634 0.4495114 0.4881874 0.6206305 0.6256762 0.6322739 #>  [523,] 0.4192847 0.5748453 0.6800585 0.6848995 0.6906528 0.7250813 0.7376818 #>  [524,] 0.1945529 0.3199466 0.3737846 0.4143870 0.4807835 0.5118307 0.5879115 #>  [525,] 0.4516977 0.4914268 0.6197973 0.6333033 0.6511886 0.6816563 0.6912840 #>  [526,] 0.2948712 0.3388367 0.4163980 0.4262569 0.5093577 0.5231681 0.5246248 #>  [527,] 0.3926288 0.5627052 0.5750946 0.6175907 0.6435848 0.6513006 0.6514018 #>  [528,] 0.2616838 0.2968328 0.4265245 0.4677838 0.4959733 0.5096321 0.5338453 #>  [529,] 0.5294152 0.5553460 0.5574063 0.5800260 0.6477714 0.7664854 0.7730065 #>  [530,] 0.4612920 0.4701818 0.4912181 0.5923151 0.6119605 0.6142220 0.6359263 #>  [531,] 0.4761276 0.4827825 0.5772551 0.6284877 0.6584859 0.7733952 0.8246394 #>  [532,] 0.7410780 0.7970039 0.8143584 0.8574424 0.8585360 0.9002276 0.9324881 #>  [533,] 0.3582446 0.5016408 0.5871071 0.5926014 0.6564377 0.6851974 0.7578729 #>  [534,] 0.4626404 0.5101005 0.6392841 0.6717767 0.7297266 0.7872788 0.7918219 #>  [535,] 0.2064529 0.3486985 0.3752893 0.4399143 0.4900127 0.5311404 0.5469580 #>  [536,] 0.4131840 0.4187939 0.4618706 0.5196643 0.5285520 0.5335125 0.5363612 #>  [537,] 0.9802931 1.0085945 1.1190492 1.1580529 1.2127276 1.2797914 1.3401562 #>  [538,] 0.4033779 0.4515065 0.5176574 0.6029565 0.6562975 0.6570734 0.6624874 #>  [539,] 0.4137192 0.4303545 0.4965659 0.5147746 0.5200230 0.5466556 0.5824518 #>  [540,] 0.4268754 0.6006737 0.6029548 0.7481381 0.7543755 0.7884927 0.7925636 #>  [541,] 0.4173145 0.4852212 0.4964357 0.5187948 0.6044879 0.6179884 0.6214815 #>  [542,] 0.3716238 0.3921353 0.4497257 0.4621338 0.4675087 0.5183140 0.5365497 #>  [543,] 0.5590880 0.6217383 0.6553864 0.7030717 0.7123741 0.8027314 0.8424176 #>  [544,] 0.6228975 0.7092944 0.7130678 0.7194708 0.7581074 0.7709307 0.8867620 #>  [545,] 0.7642193 0.7677822 0.8004643 0.9358616 0.9525112 1.0061492 1.0075980 #>  [546,] 0.3616921 0.5993202 0.6564331 0.6928435 0.7312445 0.7861820 0.8731272 #>  [547,] 0.3759131 0.3952473 0.5161238 0.5403141 0.6151425 0.6219895 0.6255389 #>  [548,] 0.3962631 0.4197521 0.4442320 0.4626712 0.4645939 0.5166976 0.5288210 #>  [549,] 0.3748384 0.4060305 0.4983098 0.5149257 0.5313648 0.5665967 0.6229789 #>  [550,] 0.3969316 0.4645939 0.4877234 0.5347159 0.5382760 0.5494369 0.5521181 #>  [551,] 0.5074217 0.5600278 0.5725333 0.6349184 0.6414394 0.6712888 0.6805933 #>  [552,] 0.4122874 0.5342877 0.6387866 0.7071514 0.7147263 0.7553941 0.7616290 #>  [553,] 0.3136811 0.3591291 0.3648767 0.4611182 0.5065820 0.5590342 0.5726624 #>  [554,] 0.6569941 0.7002333 0.7174115 0.7838621 0.8509170 0.8898739 0.8944138 #>  [555,] 0.3175065 0.5153154 0.5153891 0.6770356 0.6888630 0.7164118 0.7619629 #>  [556,] 0.4076845 0.6407231 1.0348992 1.0538053 1.2188385 1.2262795 1.3964081 #>  [557,] 0.4276538 0.4722133 0.5453428 0.6061247 0.6547983 0.6768107 0.6884184 #>  [558,] 0.5356923 0.7928753 0.8005597 0.8042336 0.8293937 0.8581012 0.8855284 #>  [559,] 0.4250885 0.4336200 0.4702059 0.6106687 0.6573586 0.6672689 0.7408329 #>  [560,] 0.5455886 0.5621656 0.6639677 0.6752203 0.7567551 0.8110190 0.8886921 #>  [561,] 0.1795974 0.4273660 0.4494273 0.4519956 0.4581435 0.4713679 0.5033294 #>  [562,] 0.3676796 0.3694662 0.6583466 0.6864874 0.6961601 0.8013158 0.9097180 #>  [563,] 1.4130102 1.5253083 1.5741346 1.6285533 1.6514207 1.6728393 1.7517043 #>  [564,] 0.5574063 0.6004637 0.6752203 0.6839199 0.7186137 0.7517288 0.7961145 #>  [565,] 0.3764369 0.4490654 0.4959349 0.5116634 0.5511310 0.6000083 0.6294703 #>  [566,] 0.5175896 0.6183072 0.6413582 0.6629885 0.6667443 0.6705939 0.6894500 #>  [567,] 0.1711273 0.3224492 0.3483525 0.3568845 0.3617838 0.3947171 0.4116469 #>  [568,] 0.4274242 0.6284543 0.7226148 0.7918031 0.7982956 0.9098522 0.9500044 #>  [569,] 0.2813038 0.3202046 0.4251142 0.4739168 0.4750999 0.4796208 0.4956681 #>  [570,] 0.3817453 0.4745192 0.4865239 0.4938254 0.5316909 0.5358078 0.5460535 #>  [571,] 0.5213234 0.6671403 0.6907237 0.7807750 0.8002246 0.8477643 0.8693754 #>  [572,] 0.3177721 0.4296143 0.4546533 0.5724691 0.5766428 0.5940738 0.5950222 #>  [573,] 0.3254118 0.4390508 0.4927788 0.5200093 0.5463215 0.5835757 0.5948946 #>  [574,] 0.3471981 0.5697230 0.6079791 0.6206001 0.6293203 0.6368735 0.6969799 #>  [575,] 0.3618233 0.5080473 0.5110231 0.5833629 0.6830868 0.6984203 0.7033000 #>  [576,] 0.5473630 0.5821892 0.8154416 0.8256896 0.8632318 0.8916923 0.9762529 #>  [577,] 1.0565900 1.0598180 1.0696603 1.1159874 1.1477836 1.2144027 1.2178457 #>  [578,] 0.3013858 0.3437007 0.3446236 0.3703159 0.3802623 0.3921353 0.4315286 #>  [579,] 0.6808040 0.6924019 0.7545476 0.9014678 0.9246875 0.9547031 0.9559583 #>  [580,] 0.4087023 0.6143769 0.6295275 0.6432214 0.6969799 0.7281374 0.7749723 #>  [581,] 0.3978781 0.4914268 0.5908219 0.6136711 0.6298587 0.7086013 0.7236682 #>  [582,] 0.3885040 0.5031038 0.5294152 0.5631789 0.5765767 0.5888745 0.6269651 #>  [583,] 0.4873565 0.5284236 0.6230817 0.6930433 0.7673950 0.8042291 0.8306381 #>  [584,] 0.4737772 0.4852336 0.5130768 0.5474090 0.5883350 0.5895203 0.6515466 #>  [585,] 0.1945529 0.3846624 0.3911048 0.4203005 0.4695127 0.5225249 0.6023550 #>  [586,] 0.4159788 0.5267384 0.5525904 0.5895203 0.6201108 0.6413890 0.7417023 #>  [587,] 0.5621991 0.6691271 0.7960226 0.9141678 0.9280779 0.9761577 1.0082943 #>  [588,] 0.3479518 0.6894690 0.7362107 0.7848294 1.0022181 1.0425298 1.0649437 #>  [589,] 0.2947907 0.4028080 0.4265245 0.4303545 0.4397730 0.4555925 0.4888760 #>  [590,] 0.4512719 0.4864941 0.4963933 0.5192732 0.5216372 0.5290386 0.5558993 #>  [591,] 0.3607994 0.3939682 0.4723156 0.4800523 0.5072813 0.5178909 0.5514851 #>  [592,] 1.4273659 1.4694657 1.4931552 1.5242224 1.5260870 1.6104921 1.6146658 #>  [593,] 0.2453596 0.3064548 0.3619748 0.5195674 0.5420985 0.6029503 0.6626235 #>  [594,] 0.5142712 0.6601876 0.7785696 0.8147735 0.8179520 0.8262543 0.9258185 #>  [595,] 0.5448312 0.5720096 0.7245206 0.7293066 0.7309279 0.7346810 0.7413853 #>  [596,] 0.4314329 0.4424737 0.4961469 0.4968533 0.5418305 0.5798258 0.5865573 #>  [597,] 0.3234841 0.4477415 0.5239362 0.5419905 0.5950222 0.6007638 0.6775990 #>  [598,] 0.5287387 0.6001610 0.6172515 0.6365450 0.6751672 0.7099407 0.7795961 #>  [599,] 0.3676796 0.5227128 0.5668504 0.7880567 0.8350859 0.9338876 0.9800287 #>  [600,] 0.6749461 0.8623178 1.3554320 1.4687477 1.4992067 1.5863691 1.6560705 #>  [601,] 0.2513093 0.4172473 0.6570155 0.8213007 0.8750817 0.8751129 0.8958579 #>  [602,] 0.8437962 0.9381927 0.9557813 1.0182307 1.2027533 1.2079910 1.2098481 #>  [603,] 0.1902383 0.5970816 0.6145326 0.6284877 0.7032852 0.7116184 0.8247509 #>  [604,] 0.9088701 1.2168789 1.4924075 1.5358723 1.5868582 1.6552825 1.6561885 #>  [605,] 0.8059130 1.0182307 1.0308273 1.1090504 1.1149277 1.2438616 1.3152878 #>  [606,] 0.4569092 0.4579367 0.4737772 0.5525904 0.5909176 0.5929496 0.5946830 #>  [607,] 0.4076845 0.4951845 0.7688623 1.0246594 1.0446967 1.1197402 1.1243395 #>  [608,] 0.4600799 0.4934717 0.5086732 0.5170595 0.5280241 0.5693460 0.5813680 #>  [609,] 0.5881734 0.6888630 0.7606515 0.7816567 0.7828281 0.7829968 0.8258687 #>  [610,] 0.5601551 1.0089832 1.2689869 1.4751145 1.5462686 1.5810618 1.6227747 #>  [611,] 0.2838058 0.5667552 0.6032944 0.6805507 0.7471525 0.7540830 0.7692032 #>  [612,] 0.1697641 0.4116713 0.5123543 0.6565112 0.6648494 0.7422066 0.7538667 #>  [613,] 0.2766520 0.4820995 0.5088910 0.5229429 0.7125201 0.8081058 0.8085126 #>  [614,] 0.6451323 0.7184485 0.8026091 0.9291269 0.9872640 1.0930219 1.1160368 #>  [615,] 0.5172792 0.6848048 0.8302620 0.8356429 0.8526801 0.9025229 0.9078253 #>  [616,] 0.4210529 0.4923794 0.7131462 0.7427053 0.8294252 0.8740610 0.9057520 #>  [617,] 0.2759467 0.3202046 0.3489624 0.4163980 0.4416485 0.5142382 0.5278123 #>  [618,] 0.3787054 0.4266848 0.4637771 0.6422649 0.7026800 0.7804088 0.7915065 #>  [619,] 0.3124816 0.6015168 0.6698419 0.7146164 0.8599350 0.8662033 0.8795654 #>  [620,] 0.5205839 0.6020591 0.6141887 0.7868111 0.8112118 0.8610307 0.9414390 #>  [621,] 0.2974010 0.3437007 0.3925415 0.4131840 0.4539556 0.4824845 0.4914033 #>  [622,] 0.3665075 0.4119780 0.4262969 0.6002915 0.6789116 0.6836806 0.6866317 #>  [623,] 0.2491209 0.2931128 0.3518274 0.3752893 0.4307607 0.5158467 0.5467389 #>  [624,] 0.2067751 0.5582569 0.6249212 0.6268518 0.6778804 0.6846204 0.6962268 #>  [625,] 0.2750581 0.3784374 0.4695127 0.4807835 0.5175572 0.5678014 0.6102430 #>  [626,] 0.3665075 0.4945547 0.4963191 0.5076715 0.5406000 0.5452802 0.5737518 #>  [627,] 0.3213774 0.4053210 0.4273660 0.4454994 0.4733687 0.4794664 0.4917165 #>  [628,] 0.7709307 0.8087371 0.8217941 0.8851783 0.8946249 0.9936201 0.9997447 #>  [629,] 0.4387226 0.5372938 0.5952104 0.6102623 0.6771985 0.7404293 0.7578729 #>  [630,] 0.6358657 0.6562236 0.6584688 0.7077313 0.7086190 0.7111517 0.7381117 #>  [631,] 1.0227210 1.4808613 1.4817486 1.5180604 1.5745202 1.6471270 1.6613145 #>  [632,] 0.4145308 0.5477304 0.5721606 0.5795257 0.6477337 0.6548663 0.7134267 #>  [633,] 0.3306562 0.4968533 0.5238685 0.7018688 0.7128017 0.7614559 0.7790615 #>  [634,] 0.2914631 0.4488400 0.4728161 0.4905940 0.5539938 0.5796259 0.5849368 #>  [635,] 0.1379702 0.2105118 0.2341000 0.3224492 0.3251332 0.3936948 0.4239375 #>  [636,] 0.6451323 0.7348102 0.7505323 0.7831294 0.8030479 0.9797989 1.0630169 #>  [637,] 0.3090277 0.3255037 0.3567862 0.5005773 0.5252812 0.5285520 0.5935618 #>  [638,] 0.2470519 0.2991401 0.5600278 0.6516060 0.6623799 0.8411692 0.8507924 #>  [639,] 0.4096667 0.5560317 0.5660470 0.6152202 0.6317795 0.6434513 0.7050490 #>  [640,] 0.6187304 0.6408324 0.8692727 0.8743651 0.9050567 0.9132109 0.9248696 #>  [641,] 0.2875904 0.4204325 0.4417147 0.4548303 0.4917165 0.5468730 0.5574880 #>  [642,] 0.5394878 1.0052826 1.1580820 1.2165050 1.2900154 1.4255659 1.4293168 #>  [643,] 0.7380243 0.9141678 1.0844054 1.2382117 1.3624969 1.4381560 1.4535766 #>  [644,] 0.6141368 0.8138490 0.8698377 0.8896762 1.1331851 1.1708983 1.1797592 #>  [645,] 0.1795974 0.3809388 0.4521712 0.4794664 0.4805731 0.5086732 0.5564418 #>  [646,] 0.5533531 0.5767448 0.6290033 0.6906099 0.7524070 0.7639443 0.7731054 #>  [647,] 0.2213794 0.4173145 0.4313025 0.5013116 0.5552544 0.5663406 0.5718502 #>  [648,] 0.4951845 0.6407231 0.9360641 1.1192343 1.2902966 1.3178522 1.3404180 #>  [649,] 0.7869336 0.8581012 0.8948957 0.9019051 1.0559661 1.0682843 1.1090795 #>  [650,] 0.4124584 0.4450827 0.4725139 0.4759766 0.5531432 0.5985621 0.5987407 #>  [651,] 0.5085578 0.6636887 0.6665510 0.7075745 0.7425669 0.7821193 0.8159214 #>  [652,] 0.9808304 1.2008713 1.2623623 1.4674445 1.4860651 1.5325802 1.5829165 #>  [653,] 0.5047104 0.5430772 0.6243799 0.6303021 0.6549016 0.6689775 0.7197942 #>  [654,] 0.4600592 0.4606252 0.4979449 0.5153154 0.5384151 0.5706524 0.5801488 #>  [655,] 0.4807627 0.5191509 0.6453397 0.6964767 0.7872079 0.9049099 0.9340928 #>  [656,] 0.4064159 0.4197199 0.4655661 0.5192732 0.5193437 0.5350074 0.5422606 #>  [657,] 0.2894974 0.3887750 0.5535432 0.5835431 0.5912650 0.6161380 0.6417127 #>  [658,] 0.6144585 0.6482948 0.6865996 0.7465437 0.7673382 0.7710551 0.8390568 #>  [659,] 0.6217462 0.8226266 0.8672501 0.8922744 0.9007713 0.9415717 0.9608157 #>  [660,] 0.5082676 0.5155092 0.6281673 0.6541399 0.6844859 0.7041751 0.7176055 #>  [661,] 0.2188662 0.2633925 0.3480003 0.5506717 0.5639420 0.5958109 0.6000449 #>  [662,] 0.5782895 0.6722499 0.7308951 0.7679422 0.8034189 0.8378758 0.8895943 #>  [663,] 0.8987024 1.0788385 1.1799653 1.4394791 1.5217874 1.5534015 1.5624757 #>  [664,] 0.4285564 0.5809340 0.6948830 0.7545476 0.7673588 0.8183631 0.8436812 #>  [665,] 0.3551558 0.6020591 0.7459305 0.8729096 0.8822510 0.8972432 0.9080593 #>  [666,] 0.3343215 0.3589196 0.4124584 0.4499099 0.4739026 0.5085496 0.5183140 #>  [667,] 0.2931128 0.3108371 0.3486985 0.4355955 0.5117244 0.5199104 0.5319777 #>  [668,] 0.3602460 0.4638494 0.5500300 0.5788443 0.7213109 0.7359712 0.7393357 #>  [669,] 0.3110503 0.3654383 0.5767448 0.5848090 0.6136564 0.6515479 0.7000127 #>  [670,] 0.3064548 0.5100934 0.5147359 0.5391871 0.5854680 0.5900449 0.6373922 #>  [671,] 0.2178416 0.3752953 0.4387226 0.5010213 0.5626414 0.6564377 0.7506221 #>  [672,] 0.4356132 0.6739531 0.7258280 0.7882824 0.8477541 0.9393665 0.9650572 #>  [673,] 1.0722725 1.1010097 1.1624717 1.1717644 1.2344077 1.3401562 1.3429557 #>  [674,] 0.2894974 0.3335011 0.4740814 0.5026875 0.5218788 0.5231561 0.5678014 #>  [675,] 0.4490654 0.4561176 0.5164387 0.5349754 0.5596959 0.6569985 0.6638007 #>  [676,] 0.7982722 0.8112725 0.8750817 0.9508330 0.9682766 1.0045340 1.0082881 #>  [677,] 0.7389644 0.7534253 0.8287835 0.8657834 0.8761598 0.8796622 0.8915225 #>  [678,] 0.7807750 0.8145668 0.9301462 0.9528252 1.0968705 1.1316257 1.1684780 #>  [679,] 0.3527131 0.3980350 0.6265907 0.7398363 0.7583641 0.7823867 0.7941689 #>  [680,] 0.2222932 0.2974010 0.3446236 0.3637426 0.4173236 0.4295104 0.4621338 #>  [681,] 0.3504076 0.4250885 0.5596752 0.6552821 0.6834705 0.6918451 0.7243603 #>  [682,] 0.4498139 0.5394745 0.7101575 0.7905377 0.7912015 0.9172451 0.9649472 #>  [683,] 0.4101565 0.6000408 0.8004643 0.8240850 0.8630802 1.0527439 1.1664127 #>  [684,] 0.3648767 0.4244611 0.4323169 0.4785129 0.4848906 0.4918744 0.5110921 #>  [685,] 0.3851943 0.5480810 0.5482485 0.6448563 0.6597987 0.6755561 0.6869172 #>  [686,] 0.8629755 0.8666780 0.9056975 0.9897650 1.0648113 1.0919325 1.0934960 #>  [687,] 0.2491209 0.3108371 0.4276538 0.5075491 0.5469580 0.5476763 0.5778746 #>  [688,] 0.5199243 0.6217462 0.7305756 0.7564509 0.9065373 0.9760547 1.0093745 #>  [689,] 0.5365163 0.5767200 0.7621088 0.7653146 0.8320946 0.8596582 0.8862517 #>  [690,] 0.3288424 0.3940069 0.4296143 0.4477415 0.6228671 0.6413321 0.7488742 #>  [691,] 0.4270915 0.4699923 0.5115378 0.5265330 0.5796216 0.6626235 0.6876301 #>  [692,] 0.3131082 0.4135262 0.4865239 0.5543687 0.5819255 0.5901983 0.5937317 #>  [693,] 0.3368398 0.3871070 0.4502408 0.5234100 0.5408483 0.5772118 0.5996609 #>  [694,] 0.3522048 0.5203655 0.5436297 0.6855937 0.7047720 0.7122323 0.7123741 #>  [695,] 0.3055313 0.4115992 0.4675087 0.5125975 0.5230520 0.5350350 0.5746814 #>  [696,] 0.4812631 0.5805710 0.8105931 0.8269546 0.8729156 0.9058193 0.9187201 #>  [697,] 0.5394745 0.7458774 0.7620329 0.7932045 0.8581711 0.8786900 0.9002011 #>  [698,] 0.4285564 0.5874314 0.6808040 0.6825113 0.7038499 0.7092944 0.7471645 #>  [699,] 0.3314204 0.4652960 0.5522705 0.6997040 0.7204230 0.7835950 0.7880859 #>  [700,] 0.7109512 0.7194933 0.7699234 0.8523472 0.8525175 0.9724110 0.9900134 #>  [701,] 0.3726157 0.4034391 0.5178909 0.5344963 0.5462945 0.5539938 0.5589891 #>  [702,] 0.4873565 0.6030362 0.6290033 0.6782859 0.7312445 0.7583666 0.8301851 #>  [703,] 0.7703098 0.8666780 0.8845093 0.9186774 0.9389065 0.9691295 0.9921577 #>  [704,] 0.5934633 0.7543083 0.7918019 0.7936557 0.8032102 0.8145492 0.8194104 #>  [705,] 0.7410780 0.8787514 0.9760547 0.9988950 1.0432479 1.1095406 1.1395413 #>  [706,] 0.2975174 0.3107426 0.3238399 0.3357322 0.3400546 0.4372489 0.4722561 #>  [707,] 0.4420475 0.4600592 0.4958677 0.5473298 0.5506717 0.5983366 0.5991600 #>  [708,] 1.0008048 1.0160068 1.0177972 1.0462404 1.0527622 1.1020415 1.1171852 #>  [709,] 0.4123550 0.4723156 0.5185874 0.5775067 0.5869208 0.5874314 0.6368735 #>  [710,] 0.2262048 0.2395906 0.3799912 0.4493088 0.4580720 0.4584325 0.4683752 #>  [711,] 0.3495144 0.5507593 0.6094884 0.6743966 0.6933514 0.7263129 0.7706943 #>  [712,] 0.6722499 0.7469213 0.9142305 0.9493010 1.0106046 1.1178949 1.1231042 #>  [713,] 0.6415667 0.8112118 0.9257247 0.9718507 1.0927985 1.1079479 1.1752148 #>  [714,] 0.3292637 0.3887225 0.4319104 0.5456329 0.6577424 0.6995920 0.7081953 #>  [715,] 0.2439420 0.3972498 0.4323169 0.4390465 0.4494881 0.4611182 0.4617533 #>  [716,] 0.6583074 1.1008367 1.1055488 1.1395413 1.1549931 1.1604910 1.2171499 #>  [717,] 0.3613733 0.3721158 0.5997831 0.6180113 0.6755733 0.6782478 0.7057280 #>  [718,] 0.8442702 0.9511454 1.0311437 1.0475451 1.1256733 1.1398825 1.1656800 #>  [719,] 0.2350765 0.3448947 0.4269251 0.4464470 0.5261102 0.5316909 0.5689416 #>  [720,] 0.3382783 0.5624171 0.5996609 0.6283901 0.6832693 0.6942933 0.6965875 #>  [721,] 0.4722133 0.6494698 0.6993605 0.7083079 0.7471645 0.7778101 0.7807349 #>  [722,] 0.5656778 0.6022050 0.6043351 0.6189907 0.6249072 0.6402302 0.6592223 #>  [723,] 0.1756748 0.2188662 0.2906642 0.4958677 0.6224914 0.6815340 0.6988852 #>  [724,] 0.5116332 0.5265330 0.6056577 0.6858223 0.7463445 0.7529023 0.7807365 #>  [725,] 0.7256906 0.8145668 1.1783933 1.2326504 1.2596579 1.2800522 1.3212610 #>  [726,] 0.1756748 0.2633925 0.3518192 0.4420475 0.5801488 0.6163193 0.6225496 #>  [727,] 0.2126666 0.3217388 0.4177365 0.4276626 0.4445131 0.4445350 0.4675332 #>  [728,] 0.4966817 0.5804593 0.6357067 0.6561072 0.6639506 0.6822400 0.6980523 #>  [729,] 0.4779012 0.5032637 0.5058535 0.7069455 0.7651423 0.8030479 0.8256414 #>  [730,] 0.3255484 0.3708620 0.4116713 0.4255024 0.4579367 0.4852336 0.5670797 #>  [731,] 0.2568057 0.6096679 0.6168592 0.6797020 0.6836261 0.6960587 0.7625682 #>  [732,] 0.1053399 0.3721016 0.4273248 0.4315286 0.4451559 0.4509297 0.4637310 #>  [733,] 0.5606328 0.5852337 0.5903593 0.6147374 0.6185066 0.6597153 0.6686805 #>  [734,] 0.5959667 0.7872788 0.8648781 0.9328006 0.9399384 0.9861202 1.0797011 #>  [735,] 0.3169376 0.4040704 0.4340155 0.4343075 0.6980523 0.6989823 0.7578083 #>  [736,] 0.8865712 0.9402197 1.0540563 1.0862872 1.0984029 1.1015940 1.1323886 #>  [737,] 0.2662746 0.5815396 0.5894188 0.7675419 0.8296777 0.8442661 0.8969396 #>  [738,] 0.3388367 0.4199393 0.5464678 0.6006683 0.6115534 0.6286655 0.6828748 #>  [739,] 0.4087023 0.5009580 0.6430287 0.6572034 0.6955028 0.7110594 0.7575203 #>  [740,] 0.4321428 0.4341824 0.4845719 0.5303572 0.5494369 0.6090261 0.6578099 #>  [741,] 0.1276525 0.2341000 0.2730954 0.2743106 0.3420110 0.4104659 0.4116469 #>  [742,] 0.4383920 0.7733831 0.9079794 0.9490733 0.9712453 0.9965755 1.1513390 #>  [743,] 0.5267384 0.6849641 0.6877684 0.7662820 0.7709150 0.8782630 0.8933974 #>  [744,] 0.5218122 0.5786941 0.6178904 0.7363126 0.7978153 0.9959008 1.0065738 #>  [745,] 0.3599027 0.3834029 0.4805731 0.5260648 0.5762792 0.5813680 0.6142220 #>  [746,] 0.8370871 0.9510173 0.9811541 1.0606472 1.1069434 1.1163588 1.1779457 #>  [747,] 0.3639847 0.3984576 0.4863816 0.5246408 0.5959592 0.6134247 0.6223092 #>  [748,] 0.3339395 0.4517937 0.4617125 0.4845327 0.5032770 0.5084518 0.5211989 #>  [749,] 0.3787054 0.4924951 0.4949191 0.6579639 0.6601669 0.6619032 0.7063157 #>  [750,] 0.4844371 0.4880590 0.5101005 0.5269856 0.6810029 0.6961549 0.7011940 #>  [751,] 0.4581918 0.5212387 0.6668747 0.7072696 0.7762757 0.7860133 0.8172302 #>  [752,] 0.3505337 0.4356923 0.4399845 0.4539556 0.4618706 0.4894600 0.5083793 #>  [753,] 0.2581276 0.3210725 0.3327387 0.3763290 0.4522027 0.4787311 0.4790633 #>  [754,] 0.5683315 0.6823676 0.8082328 0.8123156 0.8422369 0.8550138 0.8919418 #>  [755,] 0.5480682 0.5586869 0.6299362 0.6505538 0.6636627 0.6706124 0.6710631 #>  [756,] 0.6970039 0.8807600 1.2019961 1.2207945 1.2754429 1.2892438 1.3293811 #>  [757,] 0.4210529 0.6200645 0.7035861 0.7246312 0.7741867 0.7755237 0.8262543 #>  [758,] 0.2381427 0.4233503 0.4582758 0.4817209 0.4963933 0.5227214 0.5534048 #>  [759,] 0.3571502 0.3721016 0.3799912 0.3803319 0.4226920 0.4803561 0.5472410 #>  [760,] 0.6217383 0.8362561 1.0439542 1.0550429 1.0860294 1.0900997 1.1458608 #>  [761,] 0.3458780 0.4174363 0.5268012 0.7035724 0.7339034 0.7457070 0.7913584 #>  [762,] 0.3979765 0.4880590 0.5999850 0.6727162 0.7460196 0.7918219 0.9192768 #>  [763,] 0.6997959 0.9806775 1.0013962 1.1749265 1.2381991 1.2436966 1.2513013 #>  [764,] 0.8202107 0.8472847 0.9144112 0.9468521 0.9501205 0.9516706 0.9673021 #>  [765,] 0.3110745 0.3608656 0.5344343 0.6607205 0.6661896 0.6897921 0.7920755 #>  [766,] 0.2453596 0.3768753 0.4856680 0.5100934 0.5884292 0.6963808 0.7111705 #>  [767,] 1.3261127 1.4156640 1.5773453 1.8042373 1.8730389 1.8920525 1.9064165 #>  [768,] 0.6960585 0.7041834 0.7226148 0.7793941 0.7861820 0.8871951 0.8899348 #>  [769,] 0.6374408 0.7294704 0.8128482 0.8614007 0.8736359 0.8880393 0.8984983 #>  [770,] 0.8623178 1.2870260 1.5642794 1.5985368 1.6490160 1.9229080 1.9327162 #>  [771,] 0.3348730 0.4401061 0.4458852 0.4515065 0.4725139 0.5594881 0.5674737 #>  [772,] 0.6578229 0.7083924 0.8026652 0.8097904 0.9010558 0.9897011 0.9901472 #>  [773,] 0.3984576 0.4247733 0.4780416 0.5114435 0.5605496 0.5739148 0.6019411 #>  [774,] 0.4526355 0.5307067 0.5424332 0.6266055 0.6925500 0.7083079 0.7297467 #>  [775,] 0.4223576 0.4488400 0.4828852 0.5856566 0.5973783 0.5980662 0.6077687 #>  [776,] 0.5895551 0.8049784 0.8269546 0.8567409 0.8860132 0.9123959 0.9569612 #>  [777,] 0.5142108 0.6176849 0.6579930 0.7962841 0.8186202 0.9144112 1.0353234 #>  [778,] 0.2376831 0.3126879 0.3572738 0.4711848 0.4818542 0.5281400 0.5858164 #>  [779,] 0.6541399 0.6750244 0.7814085 0.8567060 0.8872311 0.8952516 0.8990320 #>  [780,] 0.1444199 0.2255546 0.3544090 0.4289456 0.4354272 0.4449278 0.4615023 #>  [781,] 0.5708953 0.6156220 0.6800585 0.6952724 0.7461550 0.8267125 0.8626267 #>  [782,] 0.4562528 0.4675681 0.7719437 0.7815974 0.7930378 0.9989728 1.0275928 #>  [783,] 0.5047104 0.6159064 0.6516801 0.6570155 0.7682973 0.7904439 0.7968346 #>  [784,] 0.5925412 0.5964435 0.6143769 0.7128017 0.7639935 0.7690322 0.8039289 #>  [785,] 0.1910779 0.3847131 0.3887225 0.6503614 0.6517182 0.6600567 0.7052722 #>  [786,] 0.3110503 0.4111557 0.5533531 0.5829555 0.6033861 0.6491822 0.6606580 #>  [787,] 0.2395906 0.3701772 0.3882072 0.4159085 0.4164093 0.4496883 0.4803561 #>  [788,] 0.6120648 0.6359739 0.7030044 0.7077313 0.8783713 0.8998216 1.0720871 #>  [789,] 0.5117290 0.5428951 0.5548189 0.6434513 0.6484999 0.6550524 0.7639443 #>  [790,] 0.5905170 0.5949562 0.5964435 0.6482628 0.7465437 0.7533525 0.7930378 #>  [791,] 0.5843235 0.6156220 0.6848995 0.6995920 0.7095227 0.7937989 0.8867003 #>  [792,] 0.9338876 0.9609884 0.9818079 0.9927308 0.9936132 1.0449216 1.0568413 #>  [793,] 0.2975174 0.3099523 0.3467165 0.3966177 0.4079279 0.4358947 0.5014862 #>  [794,] 0.5830046 0.7594607 0.9074261 0.9569173 1.0039204 1.0517889 1.1137207 #>  [795,] 0.9601446 1.0837892 1.1458608 1.1659820 1.2216131 1.3619159 1.3892491 #>  [796,] 0.2084596 0.2459724 0.5006439 0.5039633 0.5518062 0.6149214 0.6159863 #>  [797,] 0.4671841 0.5012335 0.5938974 0.6739531 0.8227304 0.9518261 0.9719461 #>  [798,] 0.3823685 0.5362531 0.5894188 0.7907778 0.7922607 0.8058392 0.8143794 #>  [799,] 0.6747185 0.7451610 0.7505323 0.7583702 0.8051029 0.8606825 0.8752074 #>  [800,] 0.2838058 0.5978052 0.5983366 0.6504422 0.6637431 0.6831417 0.6889155 #>  [801,] 0.6970039 1.1726212 1.2040119 1.2134427 1.3773918 1.3970538 1.4281047 #>  [802,] 0.6552567 1.5745202 1.5899039 1.6010639 1.6491330 1.6860428 1.6991957 #>  [803,] 0.1826120 0.2376831 0.3432534 0.4228516 0.4507569 0.4755218 0.5517097 #>  [804,] 0.2459724 0.3409218 0.4101326 0.5182537 0.5434056 0.5670838 0.5749716 #>  [805,] 0.1113919 0.5553909 0.5786941 0.6333033 0.7181224 0.7204230 0.7387563 #>  [806,] 0.3234841 0.4828355 0.5212387 0.5724691 0.5864139 0.6088722 0.6413321 #>  [807,] 0.2659000 0.3194513 0.3468902 0.4562456 0.4589775 0.4935795 0.4981944 #>  [808,] 0.7151458 0.7582631 1.0415524 1.0583727 1.1854683 1.2773946 1.3106859 #>  [809,] 0.3745243 0.4662847 0.5375424 0.5655261 0.5856566 0.6211211 0.6357867 #>  [810,] 0.8729156 0.8836388 1.0459596 1.0890405 1.1858843 1.4051586 1.4091006 #>  [811,] 0.2205418 0.3627970 0.4036893 0.4381331 0.4760082 0.4960234 0.4963439 #>  [812,] 0.3442571 0.3568845 0.4239375 0.4321943 0.4675332 0.4839231 0.5387106 #>  [813,] 0.3131082 0.4518846 0.4589743 0.4642686 0.6168375 0.7151718 0.7685468 #>  [814,] 0.4493405 0.5544399 0.6387866 0.7639675 0.7672030 0.7958773 0.8896762 #>  [815,] 0.3234918 0.4255024 0.5163456 0.5883350 0.6344793 0.6667443 0.6773092 #>  [816,] 0.4467089 0.5795257 0.5800381 0.6022050 0.6453397 0.6815893 0.7596701 #>  [817,] 0.5403399 0.6267967 0.7366617 0.8216590 0.8471259 0.8551457 0.8960344 #>  [818,] 0.6032944 0.7422383 0.7441348 0.7479362 0.8433714 0.8754808 0.8824545 #>  [819,] 0.1874870 0.3729650 0.3842816 0.4704471 0.5117244 0.5218481 0.5353298 #>  [820,] 0.4000258 0.5026129 0.5466896 0.5824014 0.5920745 0.6075354 0.6805680 #>  [821,] 0.2350765 0.3732293 0.4201332 0.4451559 0.4492124 0.5079862 0.5083793 #>  [822,] 0.6422649 0.7180295 0.8052273 0.8615794 0.8640384 0.9576967 0.9826480 #>  [823,] 0.4172473 0.4869735 0.7583930 0.7696924 0.7982722 0.8931862 0.9140443 #>  [824,] 0.4439274 0.5408483 0.5548477 0.5624171 0.6235712 0.6315625 0.7112544 #>  [825,] 0.4803953 0.7081953 0.7174605 0.7481203 0.9815464 0.9944576 1.0000567 #>  [826,] 0.2693225 0.2948712 0.3236677 0.4416485 0.4796208 0.5260477 0.5265417 #>  [827,] 0.7653146 0.8543876 0.8687719 0.9826480 1.0438448 1.0828241 1.1237581 #>  [828,] 0.6272002 0.8302620 0.8999660 0.9135404 0.9364959 1.0022181 1.0577247 #>  [829,] 0.3175065 0.5384151 0.5881734 0.6269651 0.6334168 0.6824385 0.7236642 #>  [830,] 0.4356132 0.4426456 0.4671841 0.7587487 0.8078020 0.8619900 0.8789158 #>  [831,] 0.5436297 0.5840957 0.5851460 0.6225975 0.6952724 0.7187806 0.7422593 #>  [832,] 0.3745243 0.3852264 0.4223576 0.5817333 0.5840957 0.5958383 0.6415541 #>  [833,] 0.2568057 0.3943838 0.5371492 0.5883061 0.6452508 0.6704066 0.6754429 #>  [834,] 0.3814877 0.4094771 0.4096787 0.4625115 0.4711374 0.4981944 0.5320749 #>  [835,] 0.2801377 0.5468244 0.5575150 0.5815324 0.6514302 0.6531102 0.6625671 #>  [836,] 0.3844833 0.4298896 0.4517937 0.4553881 0.5197329 0.5324210 0.5388848 #>  [837,] 0.6482948 0.7533525 0.7549989 0.7776724 0.7822435 0.7850544 0.8597552 #>  [838,] 0.5638145 0.5779420 0.5782895 0.5963510 0.5972470 0.6298587 0.6613912 #>  [839,] 0.3895050 0.5236210 0.5268012 0.5908107 0.6206305 0.6396585 0.6454900 #>  [840,] 0.6303804 0.7505151 0.9356950 1.0788385 1.1726212 1.2457061 1.2602986 #>  [841,] 0.4305782 0.5058783 0.5085578 0.5434056 0.6159863 0.6219895 0.6515207 #>  [842,] 0.4013398 0.4233503 0.4454994 0.4526802 0.4548303 0.4864941 0.5701851 #>  [843,] 0.2661462 0.3449602 0.3781033 0.5307067 0.6899380 0.7166795 0.8797547 #>  [844,] 0.9088701 0.9292354 0.9759375 1.1551573 1.2858186 1.3464878 1.3527623 #>  [845,] 1.2533470 1.3654294 1.8449911 1.8510100 1.8741688 1.9003501 1.9709019 #>  [846,] 0.4824686 0.6408324 0.7958293 0.8359448 0.9007979 0.9227858 0.9283601 #>  [847,] 0.2124219 0.3211265 0.3349301 0.3424853 0.4646330 0.4843723 0.4884964 #>  [848,] 0.5453040 0.7882348 0.8371093 0.8630802 0.8919418 0.9692862 0.9783249 #>  [849,] 0.5725333 0.6745133 0.6884697 0.7003760 0.7633193 0.8159214 0.8312113 #>  [850,] 0.2095975 0.5477304 0.5743031 0.5948946 0.6189907 0.6480825 0.7377097 #>  [851,] 0.4159085 0.4493088 0.4822256 0.5543687 0.5735637 0.5893829 0.6168375 #>  [852,] 0.3979765 0.5269856 0.6392841 0.6623799 0.7590293 0.7870639 0.8099079 #>  [853,] 0.9007979 0.9975932 1.1323886 1.2189486 1.2772438 1.2838156 1.3020896 #>  [854,] 0.4036893 0.4483602 0.4488667 0.5296256 0.5355482 0.5384162 0.5445416 #>  [855,] 0.4105300 0.9955488 1.1180345 1.1659805 1.1851866 1.1853210 1.2431031 #>  [856,] 0.2676381 0.2779481 0.3593473 0.4394434 0.4505674 0.4948995 0.5129748 #>  [857,] 0.3939682 0.5009580 0.5376681 0.5589891 0.6004487 0.6164502 0.6432214 #>  [858,] 0.4117004 0.6848048 0.7556416 0.8403036 0.9364959 1.0224736 1.0485065 #>  [859,] 0.2095975 0.5200093 0.6382037 0.6807644 0.7194450 0.7318895 0.7632997 #>  [860,] 0.6098943 0.6575188 0.7621088 0.8543876 0.9220819 0.9326402 0.9356589 #>  [861,] 0.1814185 0.5091132 0.6000083 0.6068485 0.6967736 0.6969976 0.7158370 #>  [862,] 0.3525313 0.3564549 0.4217086 0.4775663 0.5105869 0.5243193 0.5576780 #>  [863,] 0.3065162 0.4372013 0.4412094 0.5796259 0.5834741 0.6093088 0.6254152 #>  [864,] 0.3271948 0.3482067 0.5367063 0.6900276 0.6939338 0.7079453 0.7101575 #>  [865,] 0.3122377 0.3701772 0.4355070 0.4358947 0.4683752 0.4889203 0.5011375 #>  [866,] 0.6421101 0.8567409 0.9597038 0.9727799 0.9906182 1.0406561 1.0697924 #>  [867,] 0.3768769 0.3778905 0.4374564 0.4457930 0.4578050 0.4647473 0.4978126 #>  [868,] 0.8086823 0.8498695 1.0070244 1.0843350 1.0894538 1.1045381 1.1113171 #>  [869,] 0.3377905 0.3567862 0.3763290 0.4381331 0.4684212 0.4916802 0.5125975 #>  [870,] 0.4090125 0.7292907 0.7606077 0.7743846 0.7780194 0.8663279 0.8736920 #>  [871,] 0.3406297 0.3591291 0.4390465 0.4429751 0.4499099 0.4555925 0.4928816 #>  [872,] 0.9301462 0.9409548 0.9521113 0.9980918 1.0426271 1.1492977 1.1813515 #>  [873,] 0.4516977 0.7391400 0.7977642 0.8484588 0.9406065 0.9531269 1.0065738 #>  [874,] 0.3265959 0.3705540 0.4091100 0.4165383 0.5892437 0.6710631 0.6805680 #>  [875,] 0.9036300 1.0218721 1.1044351 1.1684780 1.2460112 1.2474809 1.2822055 #>  [876,] 0.1814185 0.3537786 0.4959349 0.5858995 0.6119605 0.6678425 0.6811997 #>  [877,] 0.3650620 0.4362067 0.4817015 0.5694271 0.6194397 0.7049215 0.7670940 #>  [878,] 0.2570604 0.4317165 0.4522027 0.4764689 0.5433354 0.5836669 0.5932351 #>  [879,] 0.7137842 1.0051387 1.0071162 1.0516578 1.1055220 1.1116341 1.1217151 #>  [880,] 0.3818180 0.4217086 0.5200291 0.5531432 0.5635197 0.5753661 0.5780654 #>  [881,] 0.6120648 0.9223827 0.9357023 0.9538281 0.9626252 0.9652125 0.9748544 #>  [882,] 0.4432931 0.5023341 0.5293161 0.5502789 0.5601090 0.5854680 0.6280344 #>  [883,] 0.1910779 0.4319104 0.5572237 0.5850366 0.6195791 0.6403316 0.6692054 #>  [884,] 0.7629952 0.7909317 0.8223402 0.8907187 0.8989783 0.9346835 0.9593884 #>  [885,] 0.6979404 0.7086190 0.7158210 0.7224574 0.7487227 0.8710913 0.8797547 #>  [886,] 0.1902383 0.4761276 0.5201856 0.6750002 0.6886704 0.6960090 0.7215747 #>  [887,] 0.6691239 0.7922199 1.0934028 1.1478932 1.2006337 1.2173029 1.2248638 #>  [888,] 0.4642933 0.7472176 0.8097904 0.8962149 0.9335747 0.9442843 0.9626252 #>  [889,] 0.4199393 0.5800502 0.5947541 0.7549305 0.7606095 0.7607832 0.7920471 #>  [890,] 0.6691239 0.8179520 0.8295154 0.9111171 1.0715793 1.0798312 1.0901283 #>  [891,] 0.4101565 0.5453040 0.7354510 0.7677822 0.9976234 1.0748615 1.1592504 #>  [892,] 0.1905028 0.3107426 0.3637426 0.4157900 0.4497257 0.4514583 0.4719692 #>  [893,] 0.4824686 0.4998328 0.6293203 0.7157668 0.7381936 0.7386604 0.7710290 #>  [894,] 0.7052237 0.8416462 0.8734922 0.8795284 0.8847649 0.9583457 0.9678039 #>  [895,] 0.2439420 0.3136811 0.3406297 0.4244611 0.4349769 0.4943338 0.5533954 #>  [896,] 0.3485024 0.4000258 0.4767431 0.6264373 0.6392803 0.6639677 0.6871397 #>  [897,] 0.7922199 0.8260375 0.8295154 1.2870494 1.3004160 1.4376746 1.4921047 #>  [898,] 0.5473298 0.6000449 0.6111445 0.6224914 0.6504422 0.6521085 0.6975344 #>  [899,] 0.5708953 0.7187806 0.8061907 0.8487416 0.9362044 0.9769455 0.9992932 #>  [900,] 0.3471981 0.6865928 0.6924019 0.7202666 0.7259984 0.7511619 0.7778101 #>  [901,] 0.5235877 1.0576414 1.0700878 1.2208541 1.3368452 1.3548590 1.3706246 #>  [902,] 1.3495400 1.3704217 1.5209879 1.5446630 1.6153575 1.7125254 1.7356300 #>  [903,] 0.5894584 0.8186202 0.8543188 0.8562923 0.9209631 0.9482466 0.9683779 #>  [904,] 0.4090125 0.5234286 0.6607205 0.6836783 0.7818447 0.8203674 0.8648473 #>  [905,] 0.2822553 0.3991571 0.4106022 0.4507569 0.4711848 0.4828852 0.5081117 #>  [906,] 0.4157556 0.4637680 0.5468244 0.5488030 0.6018753 0.6256794 0.6531599 #>  [907,] 0.8672851 0.9510173 1.1752899 1.3050553 1.4158981 1.4610460 1.5020877 #>  [908,] 0.4467089 0.6277373 0.6494698 0.6656635 0.7148509 0.7341279 0.7372283 #>  [909,] 0.3090277 0.4386292 0.4566303 0.5440828 0.6333540 0.6386947 0.6422668 #>  [910,] 0.2470519 0.3585358 0.5074217 0.6298841 0.7633193 0.7966318 0.8081866 #>  [911,] 0.2454466 0.2980282 0.4489724 0.5655362 0.5903593 0.6433622 0.6493078 #>  [912,] 0.4268754 0.5435531 0.7524096 0.7756931 0.8064762 0.8420481 0.8679100 #>  [913,] 0.5203655 0.7076517 0.7603962 0.8027314 0.8230088 0.8341189 0.8418727 #>  [914,] 0.4192847 0.5050551 0.5252446 0.5893656 0.6836547 0.7038322 0.7062268 #>  [915,] 0.5799680 0.6709364 0.7006535 0.7344519 0.7673950 0.7851290 0.8002527 #>  [916,] 0.3292637 0.5772068 0.5843235 0.6517182 0.6692054 0.7122361 0.7538528 #>  [917,] 0.5563806 0.5668504 0.6961601 1.1405015 1.1528275 1.2061415 1.2110267 #>  [918,] 0.5416772 0.5500300 0.6413890 0.6530393 0.6653983 0.6699884 0.7600194 #>  [919,] 0.4119993 0.5403399 0.5685891 0.6314357 0.6392803 0.6869172 0.7861569 #>  [920,] 0.4603668 0.5123596 0.5214776 0.5387106 0.5601090 0.6221500 0.6496916 #>  [921,] 0.2341677 0.3763506 0.4354272 0.4485030 0.5199247 0.5259395 0.5528021 #>  [922,] 0.3851943 0.3925668 0.4094771 0.4755807 0.4937531 0.5780049 0.6122809 #>  [923,] 0.1276525 0.1379702 0.2017364 0.2736718 0.3119767 0.3483525 0.4308748 #>  [924,] 0.5234286 0.6423322 0.7015621 0.7606077 0.7890001 0.8741665 0.9253969 #>  [925,] 0.3428230 0.4775663 0.5422523 0.5524714 0.5883061 0.6257514 0.6313736 #>  [926,] 0.1513933 0.3370734 0.3424898 0.4540897 0.4883972 0.5327650 0.5362119 #>  [927,] 0.6303804 0.8987024 1.0218371 1.1294962 1.2143174 1.2575035 1.2628852 #>  [928,] 0.2792638 0.3721347 0.4536714 0.4637680 0.4784529 0.5551798 0.5844332 #>  [929,] 0.6380556 0.8486313 0.9059898 1.0571402 1.0574068 1.0727561 1.0768938 #>  [930,] 1.1253054 1.3110738 1.3681290 1.4176546 1.4587979 1.5485280 1.6810297 #>  [931,] 0.3177721 0.3288424 0.4588362 0.6238384 0.6775990 0.6921524 0.6937743 #>  [932,] 0.6015021 0.7515653 0.7564509 0.8007850 0.8240412 0.8579864 0.8711588 #>  [933,] 0.2064529 0.4228859 0.4355955 0.4488667 0.4938741 0.4957854 0.5367148 #>  [934,] 0.3608656 0.4822342 0.5368738 0.6100800 0.6487909 0.6836783 0.6971550 #>  [935,] 0.7181224 0.7302658 0.7629952 0.7792381 0.7916295 0.8431905 0.8437163 #>  [936,] 0.2537811 0.4518217 0.5815324 0.5948336 0.6347421 0.6508292 0.7404293 #>  [937,] 0.5110231 0.6686812 0.7035861 0.7212474 0.7264385 0.7427053 0.7622269 #>  [938,] 0.3527131 0.4677499 0.5921682 0.6475355 0.6515538 0.6750244 0.7007599 #>  [939,] 0.4483376 0.5487716 0.6025930 0.6093088 0.6684510 0.6834476 0.7229696 #>  [940,] 0.3062447 0.3238399 0.3528206 0.3778905 0.4157900 0.4644086 0.4704471 #>  [941,] 0.4040704 0.5054064 0.6639506 0.6707567 0.6930033 0.8042611 0.8533458 #>  [942,] 0.3616921 0.7157513 0.7351868 0.7485267 0.7663148 0.7679036 0.8032887 #>  [943,] 0.7777896 0.7845920 0.8060953 0.8483757 0.8675092 0.9045178 0.9098522 #>  [944,] 0.1483997 0.2147057 0.2255546 0.3796002 0.4431271 0.5259395 0.5545578 #>  [945,] 0.1516637 0.3065162 0.3333742 0.4480881 0.4905940 0.6164958 0.6834476 #>  [946,] 0.4493405 0.5342877 0.6141368 0.7172441 0.8716801 0.9811676 1.0013962 #>  [947,] 0.3748384 0.5515796 0.6316161 0.6488467 0.6570734 0.6997040 0.7145369 #>  [948,] 1.4091006 1.9163253 1.9995601 2.0946502 2.1319645 2.1535787 2.1990035 #>  [949,] 0.4336200 0.6350297 0.6563538 0.6610684 0.6918451 0.7543083 0.7594607 #>  [950,] 0.6178904 1.1149127 1.1781834 1.2008713 1.2516836 1.2752612 1.4548826 #>  [951,] 0.6674427 0.7030717 0.7743265 0.8348918 0.8714656 0.9601446 0.9868390 #>  [952,] 0.3704491 0.5187948 0.5401200 0.5879115 0.6534276 0.6540720 0.6544994 #>  [953,] 1.1944841 1.2204487 1.3612158 1.3743604 1.3826844 1.4294939 1.4341551 #>  [954,] 0.8227304 0.8423746 1.1625853 1.1734981 1.2029630 1.2290237 1.2917139 #>  [955,] 0.2715188 0.4322539 0.5176588 0.5796393 0.6028140 0.6198504 0.6273351 #>  [956,] 0.8124302 0.8349864 0.8360571 0.8878811 0.8915225 0.9287993 1.0145755 #>  [957,] 0.3055313 0.4896321 0.5156362 0.5317512 0.5887114 0.6190467 0.6191235 #>  [958,] 0.6356572 0.6815893 0.7716930 0.8081866 0.8937819 0.9037643 0.9066656 #>  [959,] 0.2261799 0.4562528 0.4711634 0.5905170 0.6144585 0.7850544 0.9305900 #>  [960,] 0.6691271 0.7436116 0.7979285 0.8161228 0.8575212 0.8642000 0.9746848 #>  [961,] 0.5824329 0.7339034 0.8312113 0.8833945 0.9346282 0.9348134 0.9415687 #>  [962,] 0.3426322 0.6266055 0.6421061 0.7948077 0.8294981 0.9093888 0.9328006 #>  [963,] 0.6997959 0.8178872 0.9488499 1.0363273 1.0557119 1.1221364 1.1813515 #>  [964,] 0.3153035 0.3467165 0.4537256 0.4888760 0.4928816 0.5216043 0.5388848 #>  [965,] 0.6569941 0.6834605 0.7293154 0.7362107 0.9406224 0.9717410 0.9912848 #>  [966,] 0.6686812 0.7131462 0.8224408 0.8439409 0.8933974 0.9284766 0.9310134 #>  [967,] 0.2243837 0.3462259 0.4202768 0.4214357 0.5161238 0.5545578 0.5781997 #>  [968,] 0.2740866 0.3157401 0.3636055 0.3747059 0.4152959 0.4412299 0.4449278 #>  [969,] 0.5388352 0.6474672 0.6603736 0.6735621 0.7167634 0.7215831 0.7530169 #>  [970,] 0.8678280 0.9012350 1.0557119 1.1662577 1.1964269 1.2168789 1.2512905 #>  [971,] 0.3537786 0.4701818 0.5091132 0.5116634 0.5169144 0.5663875 0.5825871 #>  [972,] 0.5102964 0.6460401 0.6964767 0.7025178 0.7094732 0.7110594 0.7160832 #>  [973,] 0.3410693 0.4935795 0.4979449 0.5481554 0.5618673 0.6297446 0.6443303 #>  [974,] 0.7651423 0.8889771 0.9058193 0.9076290 0.9233866 0.9376433 0.9622705 #>  [975,] 0.4701511 0.6000408 0.7354510 0.8371093 0.8550138 0.8719133 0.9417572 #>  [976,] 0.5191509 0.5743031 0.6043351 0.6382037 0.6904138 0.7025178 0.7406523 #>  [977,] 0.6274481 0.6583361 0.6732057 0.6747185 0.6902393 0.8205204 0.8388072 #>  [978,] 0.3449602 0.5955365 0.6797951 0.7184485 0.7297467 0.7831294 0.8051029 #>  [979,] 0.3458780 0.5236210 0.5815840 0.5941544 0.6654353 0.6785001 0.6835633 #>  [980,] 1.0872537 1.1511971 1.2859876 1.3426357 1.4317450 1.5389164 1.6283956 #>  [981,] 0.7078894 0.8167749 0.8465183 0.8533458 0.8653264 0.8723900 0.9126897 #>  [982,] 0.4367016 0.5843067 0.6363900 0.6689775 0.6877467 0.7000127 0.7385555 #>  [983,] 0.3721347 0.4490532 0.5027664 0.5280241 0.5287617 0.5543619 0.5688316 #>  [984,] 0.4227134 0.5808813 0.6584688 0.7144231 0.7224574 0.7367251 0.7745538 #>  [985,] 0.3357208 0.5185874 0.5327650 0.5344561 0.5376681 0.5514851 0.6182873 #>  [986,] 0.2200498 0.4703898 0.5462945 0.5649062 0.6693788 0.6875796 0.6877090 #>  [987,] 0.8179345 0.9470179 0.9474322 0.9901485 1.0331393 1.0515016 1.0753964 #>  [988,] 0.6341295 0.6894690 0.7250215 0.7293154 0.7327323 0.7838621 0.8145492 #>  [989,] 0.2200498 0.5344963 0.5670495 0.6156232 0.6796713 0.6810093 0.7650332 #>  [990,] 0.4483376 0.5644306 0.6723279 0.6869947 0.7435727 0.7502796 0.7517306 #>  [991,] 0.5028142 0.5116266 0.5305693 0.5626756 0.5782885 0.5909176 0.6072182 #>  [992,] 0.5251448 0.5908219 0.5972470 0.6219830 0.6381163 0.6776106 0.6816563 #>  [993,] 0.2479372 0.4838997 0.5023341 0.5123596 0.5355099 0.5391871 0.5603335 #>  [994,] 0.5660470 0.6010068 0.6187304 0.6311037 0.7221879 0.7587874 0.8021837 #>  [995,] 0.2775309 1.0163862 1.0680103 1.1018072 1.1069434 1.1073602 1.1495005 #>  [996,] 0.3122377 0.3339860 0.3817453 0.4464470 0.4496883 0.4721414 0.5079862 #>  [997,] 0.3022679 0.3265959 0.3769251 0.5197607 0.5689065 0.5790676 0.6476447 #>  [998,] 0.1251699 0.3379360 0.3617838 0.3832345 0.4437286 0.5083490 0.5712563 #>  [999,] 0.1905028 0.2222932 0.3703159 0.3716238 0.4543706 0.4672781 0.4698679 #> [1000,] 0.6749461 1.2870260 1.3565350 1.7113568 1.7490999 1.8377270 1.8529754 #>              [,8]      [,9]     [,10] #>    [1,] 0.6740971 0.6770137 0.6811064 #>    [2,] 0.6036514 0.6571662 0.6641100 #>    [3,] 0.5624480 0.5749716 0.5978497 #>    [4,] 1.2997215 1.3056101 1.3551524 #>    [5,] 0.6281673 0.6504026 0.6897616 #>    [6,] 0.5813061 0.5951120 0.5978052 #>    [7,] 0.7338649 0.7517306 0.8026119 #>    [8,] 1.1646954 1.1742085 1.1867714 #>    [9,] 1.4797638 1.5493078 1.5582416 #>   [10,] 1.0439749 1.0566766 1.0851486 #>   [11,] 0.4445350 0.4509297 0.4537299 #>   [12,] 0.8491758 0.8523757 0.8911687 #>   [13,] 0.6223365 0.6254152 0.6498480 #>   [14,] 0.8079955 0.8355557 0.8765054 #>   [15,] 0.6357867 0.6489639 0.6594356 #>   [16,] 1.2879962 1.3333767 1.3419609 #>   [17,] 0.5793390 0.6348592 0.6451939 #>   [18,] 1.4032474 1.4240757 1.4650278 #>   [19,] 0.7659790 0.7791408 0.8216590 #>   [20,] 0.7923800 0.7958293 0.7986824 #>   [21,] 0.6280344 0.6553956 0.6602380 #>   [22,] 0.7026800 0.7600934 0.7602193 #>   [23,] 0.6297874 0.6515207 0.6650648 #>   [24,] 0.7206090 0.7278431 0.7457070 #>   [25,] 0.6652134 0.6676110 0.6800069 #>   [26,] 0.9087443 0.9102652 0.9363658 #>   [27,] 0.8099079 0.8506357 0.9015685 #>   [28,] 1.3074232 1.3301884 1.3337322 #>   [29,] 0.8419350 0.9376619 0.9609884 #>   [30,] 0.5363612 0.5423681 0.5605462 #>   [31,] 0.9500651 0.9619624 0.9641631 #>   [32,] 1.2950382 1.3250957 1.3519140 #>   [33,] 0.7761283 0.7799664 0.7843200 #>   [34,] 1.2061223 1.2302259 1.2351476 #>   [35,] 1.6419563 1.7119885 1.7493813 #>   [36,] 1.1698458 1.1768838 1.2564139 #>   [37,] 0.5390802 0.5433714 0.5521181 #>   [38,] 0.7093686 0.7193883 0.7296123 #>   [39,] 0.8142709 0.8172049 0.8640384 #>   [40,] 0.6858254 0.7040136 0.7916902 #>   [41,] 1.2868861 1.3291545 1.3366144 #>   [42,] 0.5147746 0.5343429 0.5590342 #>   [43,] 0.7754837 0.7986843 0.8120547 #>   [44,] 0.6394342 0.6414266 0.6447016 #>   [45,] 0.6335733 0.6443073 0.6858918 #>   [46,] 0.9930753 0.9951481 1.0067829 #>   [47,] 0.8650630 0.8740097 0.8743651 #>   [48,] 1.2710427 1.2879962 1.3379102 #>   [49,] 0.8176113 0.8176649 0.8458198 #>   [50,] 0.5673434 0.5748597 0.5897088 #>   [51,] 1.2224460 1.2243906 1.2348148 #>   [52,] 0.6535681 0.6880195 0.6941595 #>   [53,] 1.8376594 1.9006213 1.9124233 #>   [54,] 0.5792556 0.6018753 0.6365450 #>   [55,] 0.6761200 0.6846204 0.6922690 #>   [56,] 0.9669834 0.9883891 1.0140480 #>   [57,] 0.5792004 0.5967637 0.5986334 #>   [58,] 1.4806099 1.5182275 1.5377068 #>   [59,] 0.5576780 0.6341640 0.6660478 #>   [60,] 1.0092975 1.0537629 1.0684064 #>   [61,] 1.0039204 1.0106619 1.0145899 #>   [62,] 0.6265189 0.6569726 0.6708725 #>   [63,] 0.5114373 0.5141821 0.5261102 #>   [64,] 1.0776904 1.1121809 1.1331056 #>   [65,] 0.5418305 0.5715776 0.5770966 #>   [66,] 0.8031478 0.8327910 0.8336319 #>   [67,] 0.4698679 0.4868886 0.5092317 #>   [68,] 0.8248604 0.8249128 0.8294252 #>   [69,] 0.9735690 0.9974673 1.0289185 #>   [70,] 0.5219582 0.5381844 0.5471452 #>   [71,] 1.0361724 1.0796750 1.1146826 #>   [72,] 0.7400194 0.7709150 0.7923710 #>   [73,] 0.9485799 0.9554987 0.9678039 #>   [74,] 1.0583037 1.0929318 1.1008591 #>   [75,] 0.4900953 0.5100109 0.5333964 #>   [76,] 1.0232525 1.0475451 1.0618926 #>   [77,] 0.9039126 0.9270722 0.9360126 #>   [78,] 1.0306744 1.0649606 1.1358527 #>   [79,] 1.4622039 1.4734940 1.4777783 #>   [80,] 0.5615450 0.5632023 0.5649497 #>   [81,] 1.4629990 1.4672795 1.4710904 #>   [82,] 1.3737440 1.4037182 1.4114475 #>   [83,] 1.8596657 1.8602580 1.8643132 #>   [84,] 1.0008809 1.0466332 1.0859806 #>   [85,] 0.8053991 0.8059871 0.8200271 #>   [86,] 0.8340782 0.8353719 0.8759092 #>   [87,] 0.6336290 0.6503906 0.6570034 #>   [88,] 1.5415029 1.5870162 1.5913272 #>   [89,] 0.6354315 0.6762527 0.6852537 #>   [90,] 1.0406362 1.0559984 1.0613277 #>   [91,] 1.4532473 1.4581618 1.5351302 #>   [92,] 0.7000450 0.7141410 0.7350156 #>   [93,] 0.5197329 0.5293593 0.5655833 #>   [94,] 1.5774297 1.6480631 1.6780281 #>   [95,] 0.9550524 1.0108811 1.0785306 #>   [96,] 0.7805246 0.7900931 0.8329149 #>   [97,] 1.1280503 1.3100802 1.3658614 #>   [98,] 0.5157445 0.5821361 0.5885158 #>   [99,] 0.6771985 0.7052722 0.7254265 #>  [100,] 0.5355482 0.5432537 0.5577726 #>  [101,] 0.5941544 0.5976077 0.6081332 #>  [102,] 0.5510603 0.5655833 0.6456317 #>  [103,] 0.7529023 0.7583560 0.7776315 #>  [104,] 0.7723839 0.7733952 0.8226266 #>  [105,] 0.6100848 0.6305628 0.6448563 #>  [106,] 0.7860133 0.8001644 0.8030811 #>  [107,] 0.5147359 0.5450080 0.5591751 #>  [108,] 0.6933830 0.6951027 0.7000176 #>  [109,] 0.6607596 0.6835633 0.6846047 #>  [110,] 0.7636519 0.8196138 0.8326646 #>  [111,] 0.8683177 0.8890622 0.8924762 #>  [112,] 0.6318157 0.6451575 0.6469912 #>  [113,] 0.8654569 0.9020730 0.9171356 #>  [114,] 0.7488187 0.7502045 0.7992083 #>  [115,] 0.5801501 0.6294703 0.6415541 #>  [116,] 1.0957242 1.1104651 1.1109776 #>  [117,] 0.7121262 0.7253852 0.7618896 #>  [118,] 0.7391452 0.7586986 0.7741481 #>  [119,] 0.8981490 0.9074261 0.9127105 #>  [120,] 0.7978153 0.8537152 0.8903252 #>  [121,] 0.9742031 0.9801376 1.0045890 #>  [122,] 0.9554768 1.1030369 1.1406548 #>  [123,] 0.6013271 0.6440676 0.6636976 #>  [124,] 0.7773250 0.8201776 0.8211581 #>  [125,] 0.7263525 0.7268321 0.7354322 #>  [126,] 0.5715566 0.5772118 0.6154553 #>  [127,] 0.5035918 0.5056985 0.5273969 #>  [128,] 0.6773092 0.7057280 0.7264187 #>  [129,] 1.2903784 1.3020896 1.4150381 #>  [130,] 0.8376481 0.8764760 0.9850073 #>  [131,] 0.7967038 0.8341189 0.8387619 #>  [132,] 0.9636410 0.9887184 0.9961724 #>  [133,] 0.6550277 0.7087271 0.7140520 #>  [134,] 0.6059262 0.6214058 0.6401875 #>  [135,] 0.5031124 0.5036670 0.5048421 #>  [136,] 0.5784289 0.5835757 0.6015728 #>  [137,] 0.5175572 0.5350350 0.5467161 #>  [138,] 0.5731913 0.6214604 0.6267381 #>  [139,] 0.4829974 0.5085010 0.5249453 #>  [140,] 0.7494768 0.7497546 0.7811601 #>  [141,] 0.7053837 0.7197152 0.7319364 #>  [142,] 1.2411947 1.2722358 1.3523379 #>  [143,] 0.9804585 1.0040829 1.0195103 #>  [144,] 0.6958523 0.7000899 0.7570171 #>  [145,] 0.9924999 0.9931917 0.9967905 #>  [146,] 1.0200637 1.0284339 1.0686240 #>  [147,] 1.0224934 1.0394036 1.0451420 #>  [148,] 1.0218371 1.0230765 1.0344834 #>  [149,] 0.6144588 0.6335733 0.6383940 #>  [150,] 0.7742246 0.7956524 0.7976625 #>  [151,] 1.0111926 1.0347499 1.0575950 #>  [152,] 0.6573586 0.6893872 0.7215745 #>  [153,] 1.2859155 1.2874646 1.3058617 #>  [154,] 0.7514752 0.7773579 0.7823926 #>  [155,] 1.0159429 1.0313080 1.0425852 #>  [156,] 0.5863160 0.6114878 0.6213689 #>  [157,] 0.7121892 0.8031478 0.8514350 #>  [158,] 0.8667281 0.8923572 0.8940343 #>  [159,] 0.8875589 0.8890340 0.8939275 #>  [160,] 0.5224575 0.5323751 0.5552544 #>  [161,] 0.6967158 0.7131764 0.7258280 #>  [162,] 0.9270722 0.9421330 0.9893405 #>  [163,] 0.9773546 1.0226928 1.1142609 #>  [164,] 0.7235349 0.7324535 0.8092469 #>  [165,] 0.6541286 0.6638672 0.6764288 #>  [166,] 0.6294113 0.6623737 0.6720596 #>  [167,] 0.7895933 0.7929282 0.7962841 #>  [168,] 0.9399384 0.9647398 1.0244317 #>  [169,] 0.5255085 0.5577726 0.5634747 #>  [170,] 0.7647386 0.7737937 0.7761983 #>  [171,] 1.0013555 1.0122654 1.0618926 #>  [172,] 0.7193250 0.7473949 0.7514080 #>  [173,] 1.1527823 1.1590783 1.1623741 #>  [174,] 0.5627164 0.5634747 0.5907177 #>  [175,] 0.8502133 0.8541590 0.8998216 #>  [176,] 0.6886704 0.7071514 0.7394684 #>  [177,] 0.9244704 0.9540578 0.9646881 #>  [178,] 1.2612306 1.2773988 1.2917134 #>  [179,] 0.6628859 0.6720853 0.6839199 #>  [180,] 0.9959258 1.0135774 1.0304225 #>  [181,] 0.5603335 0.5920109 0.5951323 #>  [182,] 0.5861179 0.5983803 0.6623759 #>  [183,] 0.7884927 0.8448071 0.8529940 #>  [184,] 0.5515796 0.5779438 0.6258349 #>  [185,] 0.7205709 0.7212749 0.7393357 #>  [186,] 0.7179670 0.7287594 0.7549305 #>  [187,] 0.6394342 0.6822642 0.7021163 #>  [188,] 1.0485566 1.0688242 1.1010097 #>  [189,] 1.0488170 1.0949168 1.1585856 #>  [190,] 1.9712631 1.9801167 2.0030749 #>  [191,] 0.9780714 0.9806775 1.0869047 #>  [192,] 0.7353906 0.7394684 0.7664854 #>  [193,] 0.6284889 0.6435848 0.6818539 #>  [194,] 0.6051685 0.6414266 0.6417127 #>  [195,] 0.9039952 1.0093745 1.0270259 #>  [196,] 0.6706164 0.6728899 0.6907104 #>  [197,] 0.9897728 0.9997273 1.0099613 #>  [198,] 0.5798359 0.6006683 0.6071592 #>  [199,] 0.5920540 0.6243521 0.6243799 #>  [200,] 0.6211211 0.6498022 0.6662712 #>  [201,] 0.6126145 0.6441135 0.6600049 #>  [202,] 0.9370055 0.9594497 0.9652125 #>  [203,] 0.6572034 0.6686551 0.6865928 #>  [204,] 1.1671385 1.2523263 1.2549921 #>  [205,] 0.5534737 0.6286707 0.6577155 #>  [206,] 0.7015569 0.7216616 0.7390913 #>  [207,] 0.6269265 0.6456317 0.6858254 #>  [208,] 0.6961549 0.7297266 0.7634726 #>  [209,] 0.6423987 0.6912560 0.6963187 #>  [210,] 0.6480825 0.6589106 0.6781102 #>  [211,] 0.8698392 0.8723900 0.8782885 #>  [212,] 0.7436116 0.7672555 0.7706999 #>  [213,] 0.7002675 0.7287594 0.7367389 #>  [214,] 0.5778746 0.5832748 0.5838537 #>  [215,] 0.5230520 0.5231561 0.5660759 #>  [216,] 0.6789312 0.7144231 0.7151904 #>  [217,] 1.1285860 1.1358527 1.1425567 #>  [218,] 0.6963067 0.6963759 0.6999007 #>  [219,] 0.6901446 0.7101177 0.7143418 #>  [220,] 0.7511312 0.7996471 0.8013268 #>  [221,] 0.9761985 1.0568444 1.0711077 #>  [222,] 1.2553866 1.3239136 1.3425540 #>  [223,] 1.2430833 1.3442516 1.3960684 #>  [224,] 0.5644370 0.5936616 0.5985621 #>  [225,] 0.9873803 1.0085945 1.0176643 #>  [226,] 0.6015866 0.6075625 0.6115534 #>  [227,] 0.7445617 0.7702699 0.7980645 #>  [228,] 0.7985213 0.8224597 0.8545531 #>  [229,] 0.6096679 0.6474672 0.6502811 #>  [230,] 1.5611841 1.6134226 1.6652671 #>  [231,] 0.8327961 0.8462177 0.8468630 #>  [232,] 0.7014400 0.7093695 0.7287064 #>  [233,] 1.1135133 1.1273393 1.1610261 #>  [234,] 0.7553565 0.7912015 0.8056753 #>  [235,] 0.5582569 0.6037456 0.6080618 #>  [236,] 1.2302259 1.2604367 1.3075030 #>  [237,] 0.8178535 0.8958579 0.9035923 #>  [238,] 0.7468014 0.7752888 0.8879426 #>  [239,] 1.0697831 1.1294118 1.1985005 #>  [240,] 0.6967158 0.7033000 0.7291102 #>  [241,] 1.5974681 1.6324268 1.6594985 #>  [242,] 1.0102808 1.0275230 1.0707942 #>  [243,] 0.7625119 0.7771513 0.7913584 #>  [244,] 0.6308644 0.6578815 0.6625155 #>  [245,] 0.8241827 0.8293869 0.8390614 #>  [246,] 0.7763072 0.7920755 0.8172190 #>  [247,] 0.5293593 0.5347159 0.5749783 #>  [248,] 0.9133699 0.9182744 0.9273713 #>  [249,] 0.5159417 0.5302941 0.5546600 #>  [250,] 1.2533470 1.2894189 1.2894966 #>  [251,] 1.5311069 1.6303568 1.6954618 #>  [252,] 0.6249212 0.6252253 0.6419097 #>  [253,] 0.5914183 0.5978876 0.6241917 #>  [254,] 0.5956547 0.6064263 0.6143719 #>  [255,] 0.7835950 0.7842216 0.8313312 #>  [256,] 1.7180518 1.8023899 1.8147769 #>  [257,] 0.6853761 0.6963762 0.7094653 #>  [258,] 0.7166795 0.7268813 0.7367251 #>  [259,] 0.7906805 0.8075637 0.8087928 #>  [260,] 1.0345937 1.0722725 1.0764753 #>  [261,] 0.9558150 0.9732834 1.0152341 #>  [262,] 0.6210317 0.6865573 0.7076709 #>  [263,] 0.9466538 0.9633209 1.0106599 #>  [264,] 0.6015728 0.6085039 0.6121713 #>  [265,] 0.6735879 0.6901566 0.7093633 #>  [266,] 1.0017931 1.0094166 1.0335463 #>  [267,] 0.5382760 0.5577259 0.5642427 #>  [268,] 0.9776929 1.0252656 1.0276359 #>  [269,] 0.8543216 0.8578308 0.9026638 #>  [270,] 1.0059663 1.1165414 1.1749265 #>  [271,] 0.6731947 0.6930682 0.7239836 #>  [272,] 0.6414394 0.6690684 0.6875744 #>  [273,] 0.8303549 0.8577432 0.8615168 #>  [274,] 0.7036173 0.7423435 0.7691764 #>  [275,] 0.6233400 0.6554990 0.6626006 #>  [276,] 1.1097088 1.1530921 1.1917955 #>  [277,] 0.6414671 0.6521658 0.6895316 #>  [278,] 1.0630778 1.1194113 1.1197423 #>  [279,] 1.3623381 1.3642093 1.4364212 #>  [280,] 1.4307391 1.5136969 1.5879245 #>  [281,] 0.5782885 0.6200471 0.6329849 #>  [282,] 0.7221879 0.7332966 0.7467379 #>  [283,] 0.6087055 0.6099494 0.6230355 #>  [284,] 0.7183704 0.7366082 0.7484605 #>  [285,] 0.8248231 0.8263362 0.8378758 #>  [286,] 0.9193484 0.9401688 0.9799552 #>  [287,] 0.6897751 0.6921524 0.7100498 #>  [288,] 0.5858164 0.5940030 0.6000262 #>  [289,] 0.7303445 0.7463445 0.7520933 #>  [290,] 2.1475733 2.2078635 2.2680886 #>  [291,] 0.6523769 0.6735739 0.6743966 #>  [292,] 1.3200207 1.3379724 1.3402667 #>  [293,] 0.5640749 0.5642649 0.5664335 #>  [294,] 0.6019511 0.6357067 0.6455681 #>  [295,] 0.4313025 0.4731748 0.5585802 #>  [296,] 0.5852337 0.6044792 0.6096797 #>  [297,] 0.6477714 0.6871397 0.6881835 #>  [298,] 1.4477374 1.4786203 1.4946399 #>  [299,] 0.6703095 0.6708725 0.6822642 #>  [300,] 0.6715927 0.6935292 0.7000899 #>  [301,] 0.7172441 0.7806159 0.8179751 #>  [302,] 0.6412131 0.6559603 0.6777512 #>  [303,] 0.5200122 0.5513565 0.5551798 #>  [304,] 1.2392403 1.2466245 1.2891211 #>  [305,] 0.9553069 0.9799656 0.9847216 #>  [306,] 0.7185745 0.7239836 0.7321066 #>  [307,] 1.0157379 1.0284375 1.0401610 #>  [308,] 0.7807429 0.8182865 0.8748974 #>  [309,] 0.9166983 0.9168490 0.9513107 #>  [310,] 1.0377353 1.0555302 1.1087265 #>  [311,] 1.0114158 1.0204814 1.0224736 #>  [312,] 1.6357839 1.6449268 1.6495083 #>  [313,] 1.9907433 2.0480350 2.0771763 #>  [314,] 0.5983894 0.6160302 0.6228810 #>  [315,] 0.9784895 0.9993568 1.0184831 #>  [316,] 0.7079879 0.7332622 0.7465466 #>  [317,] 0.4617533 0.4900953 0.5034223 #>  [318,] 0.8326228 0.8670263 0.8714656 #>  [319,] 0.6545669 0.6620309 0.6795253 #>  [320,] 0.6379025 0.6505538 0.6697260 #>  [321,] 0.7183529 0.7424701 0.7467309 #>  [322,] 0.7410710 0.7831474 0.7870404 #>  [323,] 0.7666215 0.7708720 0.7818305 #>  [324,] 0.6090261 0.6176719 0.6473760 #>  [325,] 0.8062502 0.8068787 0.8222723 #>  [326,] 0.7820728 0.7916560 0.7991187 #>  [327,] 0.7938671 0.8187847 0.8269872 #>  [328,] 1.3249159 1.3543008 1.3999565 #>  [329,] 0.5034223 0.5362119 0.5463215 #>  [330,] 0.6152581 0.6395300 0.6488467 #>  [331,] 1.0403944 1.0889376 1.0928535 #>  [332,] 0.4766048 0.4876135 0.5564418 #>  [333,] 0.7161994 0.7203881 0.7487258 #>  [334,] 0.7904139 0.8294981 0.8390614 #>  [335,] 1.1044289 1.1266429 1.1551573 #>  [336,] 1.0082881 1.0218855 1.0391753 #>  [337,] 1.0884354 1.1540753 1.1726819 #>  [338,] 0.6755733 0.7348842 0.7735815 #>  [339,] 0.7642323 0.7724072 0.7796930 #>  [340,] 1.6497553 1.6607176 1.6772722 #>  [341,] 0.6600567 0.6851974 0.7506221 #>  [342,] 0.8754677 0.9280779 0.9506828 #>  [343,] 0.7094653 0.7393704 0.7486497 #>  [344,] 1.1931708 1.2977114 1.3048966 #>  [345,] 0.6670392 0.6838331 0.7333229 #>  [346,] 0.6158616 0.6381888 0.6631856 #>  [347,] 0.8658066 0.8825791 0.9334201 #>  [348,] 1.0446561 1.0663852 1.1236781 #>  [349,] 0.4911487 0.5013116 0.5874329 #>  [350,] 0.6652490 0.7229418 0.7403904 #>  [351,] 0.6066525 0.6268616 0.6457296 #>  [352,] 1.2523319 1.2694706 1.2702228 #>  [353,] 0.5753661 0.5818226 0.5962500 #>  [354,] 1.5366084 1.5381703 1.5409899 #>  [355,] 0.6987370 0.7021163 0.7323569 #>  [356,] 0.4576481 0.4937908 0.5048421 #>  [357,] 0.7523505 0.7603962 0.7683306 #>  [358,] 0.6880295 0.6999007 0.7076709 #>  [359,] 1.0884354 1.1123358 1.1373259 #>  [360,] 0.5268440 0.5601997 0.5786255 #>  [361,] 0.7620329 0.7981435 0.8206594 #>  [362,] 1.3332193 1.3813686 1.4102868 #>  [363,] 0.7560764 0.7738159 0.7755489 #>  [364,] 0.9275001 0.9275255 0.9329642 #>  [365,] 1.6677163 1.6924239 1.6957283 #>  [366,] 0.5123825 0.5136110 0.5525147 #>  [367,] 0.8190827 0.8252799 0.8292907 #>  [368,] 1.8323473 1.8458314 1.8681168 #>  [369,] 0.6884697 0.6912560 0.6984203 #>  [370,] 0.6558860 0.6604318 0.6767455 #>  [371,] 1.0240401 1.1228484 1.1353679 #>  [372,] 0.5915290 0.5949253 0.6162602 #>  [373,] 0.8544813 0.8651583 0.8652365 #>  [374,] 0.8420481 0.8687719 0.9326402 #>  [375,] 0.7818152 0.7960874 0.8173233 #>  [376,] 0.6075339 0.6206432 0.6219830 #>  [377,] 0.5965490 0.6194783 0.6559931 #>  [378,] 0.7938464 0.8154416 0.8716114 #>  [379,] 0.9767309 1.0449216 1.0675547 #>  [380,] 0.5529375 0.5749783 0.5820637 #>  [381,] 0.5293122 0.5501019 0.5848090 #>  [382,] 0.8147735 0.8651583 0.8932454 #>  [383,] 0.6936068 0.7427408 0.7460146 #>  [384,] 1.1226166 1.1335946 1.1808643 #>  [385,] 1.6698558 1.7002278 1.7371338 #>  [386,] 1.3919945 1.4294781 1.4466927 #>  [387,] 0.5830837 0.5873946 0.6087746 #>  [388,] 0.8693368 0.8916417 0.8986595 #>  [389,] 0.5952104 0.7140426 0.7162092 #>  [390,] 0.6784618 0.6962268 0.7091976 #>  [391,] 0.6405903 0.6445590 0.6531599 #>  [392,] 1.0106973 1.0182057 1.0408452 #>  [393,] 0.7074701 0.7166102 0.7240775 #>  [394,] 0.6520588 0.6550277 0.6690684 #>  [395,] 0.8023172 0.8120781 0.8205520 #>  [396,] 1.0712832 1.1696968 1.1924575 #>  [397,] 0.5873946 0.6083510 0.6130372 #>  [398,] 0.5598659 0.5623762 0.5634576 #>  [399,] 1.0279378 1.0317233 1.0356781 #>  [400,] 1.2432890 1.2784311 1.2851081 #>  [401,] 0.8376481 0.8475494 0.8688254 #>  [402,] 0.8625823 0.8791251 0.9166993 #>  [403,] 0.6400525 0.6502811 0.6559603 #>  [404,] 1.1506212 1.1688195 1.2307664 #>  [405,] 0.8189396 0.8460650 0.8569417 #>  [406,] 0.9462676 1.0240654 1.0499316 #>  [407,] 0.4721414 0.5099505 0.5358078 #>  [408,] 1.0434813 1.0488170 1.1880335 #>  [409,] 0.5420985 0.5760755 0.5795274 #>  [410,] 0.8648473 0.8900019 0.8999843 #>  [411,] 1.2738216 1.2875364 1.2961224 #>  [412,] 0.5781997 0.6029503 0.6188427 #>  [413,] 0.9745362 1.0305276 1.0622162 #>  [414,] 0.8999230 0.9367091 0.9592403 #>  [415,] 0.8468630 0.8719133 0.8771702 #>  [416,] 0.7389644 0.7474628 0.7588678 #>  [417,] 0.7038499 0.7151635 0.7214026 #>  [418,] 0.8047562 0.8202847 0.8224817 #>  [419,] 1.6489462 1.6617022 1.7224445 #>  [420,] 1.2156127 1.2186029 1.2499874 #>  [421,] 0.9304196 1.0044667 1.0183713 #>  [422,] 0.7245385 0.7294079 0.7373264 #>  [423,] 0.7695344 0.8437664 0.8710751 #>  [424,] 0.9631092 0.9648604 0.9747783 #>  [425,] 0.9147095 0.9536442 0.9907383 #>  [426,] 0.6060978 0.6064604 0.6111412 #>  [427,] 1.0967911 1.1021653 1.1130981 #>  [428,] 0.7197152 0.7254265 0.7296722 #>  [429,] 1.1757616 1.2177726 1.2572477 #>  [430,] 1.1096619 1.1669068 1.2026441 #>  [431,] 0.6737915 0.6842472 0.7120548 #>  [432,] 1.2575435 1.2997215 1.3035353 #>  [433,] 0.7844804 0.8151904 0.8181047 #>  [434,] 1.2254642 1.2355092 1.2704636 #>  [435,] 0.7576779 0.7960226 0.8052162 #>  [436,] 0.8828317 0.8838795 0.8940683 #>  [437,] 1.6351757 1.6459257 1.7392208 #>  [438,] 0.8782123 0.8996891 0.9065941 #>  [439,] 0.9577446 0.9711921 0.9712652 #>  [440,] 0.5293161 0.5509765 0.5783821 #>  [441,] 0.8012829 0.8075323 0.8283609 #>  [442,] 0.6302352 0.6344730 0.6379345 #>  [443,] 1.3984668 1.4052120 1.4245319 #>  [444,] 0.7679757 0.7682973 0.7743335 #>  [445,] 1.2894491 1.3107953 1.3230449 #>  [446,] 1.1459827 1.1566553 1.2260170 #>  [447,] 0.6503614 0.6526808 0.6672689 #>  [448,] 0.6644568 0.6699144 0.6822786 #>  [449,] 0.7959752 0.8071620 0.8418024 #>  [450,] 1.1960906 1.2027533 1.2737392 #>  [451,] 0.4937908 0.5157112 0.5196643 #>  [452,] 1.2774819 1.3002063 1.3060829 #>  [453,] 0.6960090 0.7116184 0.7385655 #>  [454,] 0.4959733 0.5466556 0.5479883 #>  [455,] 0.6881835 0.6891305 0.6956205 #>  [456,] 0.7804088 0.8117017 0.8275063 #>  [457,] 1.3031524 1.3598234 1.4173563 #>  [458,] 0.6682632 0.7057631 0.7259818 #>  [459,] 0.6751090 0.6760615 0.6840912 #>  [460,] 0.8064814 0.8299759 0.8334658 #>  [461,] 0.9572034 0.9976234 1.0049376 #>  [462,] 0.5654279 0.5887785 0.5936616 #>  [463,] 0.6366629 0.6385174 0.6513006 #>  [464,] 1.0577247 1.0583037 1.0595306 #>  [465,] 0.7721861 0.7932045 0.8120990 #>  [466,] 0.6165451 0.6344730 0.6498480 #>  [467,] 0.7263292 0.7665827 0.7793675 #>  [468,] 0.6877090 0.7319841 0.7727281 #>  [469,] 0.6139517 0.6165451 0.6528019 #>  [470,] 0.8189859 0.8213007 0.8249106 #>  [471,] 0.8049059 0.8075323 0.8214488 #>  [472,] 1.1566550 1.1972454 1.2108741 #>  [473,] 0.8629755 0.8741665 0.8979344 #>  [474,] 1.5945317 1.6104997 1.6298064 #>  [475,] 0.8918219 0.9069870 0.9268086 #>  [476,] 0.9746297 0.9758848 0.9780681 #>  [477,] 0.7399664 0.7496591 0.7773250 #>  [478,] 0.6469069 0.6511886 0.6922690 #>  [479,] 1.2260910 1.2537667 1.2762053 #>  [480,] 1.0598180 1.0885110 1.1086636 #>  [481,] 1.2662635 1.2677301 1.2991563 #>  [482,] 0.5952416 0.6043497 0.6149641 #>  [483,] 0.9327261 0.9811541 0.9921082 #>  [484,] 0.7122361 0.7701084 0.7937989 #>  [485,] 0.5674737 0.5679906 0.6019511 #>  [486,] 0.7229791 0.7730924 0.8173233 #>  [487,] 0.6014071 0.6060699 0.6283374 #>  [488,] 0.6585310 0.6979002 0.7063626 #>  [489,] 0.6761200 0.6763553 0.6822400 #>  [490,] 0.6299362 0.7057631 0.7236642 #>  [491,] 1.3261127 1.3474891 1.4150631 #>  [492,] 1.0866368 1.0935297 1.1035088 #>  [493,] 0.6174138 0.6536525 0.6726740 #>  [494,] 0.7274610 0.7410150 0.7457004 #>  [495,] 0.6117674 0.6667286 0.7435654 #>  [496,] 0.9212527 0.9786024 1.0048829 #>  [497,] 0.7409107 0.7851471 0.8522448 #>  [498,] 1.7877688 1.8789889 1.9263202 #>  [499,] 0.9039126 0.9209631 0.9430848 #>  [500,] 0.9752563 1.0153891 1.0409827 #>  [501,] 1.0045890 1.0425383 1.0974666 #>  [502,] 0.7382351 0.7478621 0.7524070 #>  [503,] 0.5370673 0.5384162 0.5497671 #>  [504,] 1.2671622 1.2707437 1.2799988 #>  [505,] 1.0544822 1.1010119 1.1055659 #>  [506,] 0.7662820 0.7663988 0.7883685 #>  [507,] 0.5736610 0.5931511 0.6316161 #>  [508,] 0.5225079 0.5240632 0.5531993 #>  [509,] 0.5632634 0.5846369 0.5953211 #>  [510,] 0.5335125 0.5358143 0.5552267 #>  [511,] 1.1002686 1.1036561 1.1177668 #>  [512,] 0.8850500 0.8851997 0.9057768 #>  [513,] 0.8903252 0.9311803 0.9415152 #>  [514,] 0.7445617 0.7500226 0.7795107 #>  [515,] 0.4948995 0.5151957 0.5224575 #>  [516,] 1.1000418 1.1004262 1.1056109 #>  [517,] 0.7526821 0.7883574 0.8205204 #>  [518,] 0.5433354 0.5493427 0.5979523 #>  [519,] 0.6032811 0.6144588 0.6278436 #>  [520,] 0.5588218 0.5597944 0.5634576 #>  [521,] 0.4982513 0.5083490 0.5272313 #>  [522,] 0.6500178 0.6937999 0.7098680 #>  [523,] 0.7418385 0.7898908 0.8241075 #>  [524,] 0.6076541 0.6191235 0.6197032 #>  [525,] 0.7071616 0.7950516 0.8231489 #>  [526,] 0.5720096 0.5800502 0.6015866 #>  [527,] 0.6737993 0.6822786 0.6897616 #>  [528,] 0.5579832 0.6064487 0.6298919 #>  [529,] 0.7731717 0.7956692 0.8188434 #>  [530,] 0.6528403 0.6609101 0.6867771 #>  [531,] 0.8286580 0.8916736 0.9201633 #>  [532,] 0.9503504 0.9848671 1.0372650 #>  [533,] 0.7733831 0.8361119 0.8428034 #>  [534,] 0.8150494 0.8507924 0.8577136 #>  [535,] 0.5690459 0.5711629 0.5816633 #>  [536,] 0.5711286 0.5737396 0.6143719 #>  [537,] 1.3514590 1.3626582 1.3943806 #>  [538,] 0.6637431 0.7242642 0.7391007 #>  [539,] 0.6217976 0.6222720 0.6384964 #>  [540,] 0.8013628 0.8156964 0.8189712 #>  [541,] 0.6937999 0.7015569 0.7050721 #>  [542,] 0.5423681 0.5466795 0.5471452 #>  [543,] 0.8670263 0.8695431 0.9482869 #>  [544,] 0.9246875 0.9371316 0.9571172 #>  [545,] 1.0146421 1.0305739 1.0468073 #>  [546,] 0.8822997 0.8954496 0.8994706 #>  [547,] 0.6524765 0.7562995 0.7601007 #>  [548,] 0.5303572 0.5531344 0.5642427 #>  [549,] 0.6407941 0.6582362 0.6737283 #>  [550,] 0.6269265 0.6432654 0.6598612 #>  [551,] 0.7212958 0.7289075 0.7339082 #>  [552,] 0.7761762 0.7945573 0.8698377 #>  [553,] 0.6097375 0.6176376 0.6222720 #>  [554,] 0.9911499 1.0107553 1.0292097 #>  [555,] 0.7720669 0.7766028 0.7936805 #>  [556,] 1.4164814 1.4203633 1.4303281 #>  [557,] 0.7189885 0.7332622 0.7341279 #>  [558,] 0.9015300 0.9063176 0.9299129 #>  [559,] 0.7975791 0.8058392 0.8277008 #>  [560,] 0.9115649 0.9352407 0.9480958 #>  [561,] 0.5260648 0.5468730 0.5903543 #>  [562,] 0.9447181 0.9755432 0.9806002 #>  [563,] 1.7887886 1.8307276 1.8340704 #>  [564,] 0.8188701 0.8574424 0.8622808 #>  [565,] 0.7204107 0.7427408 0.7664451 #>  [566,] 0.7246312 0.7296785 0.7721591 #>  [567,] 0.4139840 0.4577286 0.4781263 #>  [568,] 0.9750516 1.0053733 1.0101177 #>  [569,] 0.5246248 0.6318157 0.6862177 #>  [570,] 0.5779438 0.5921065 0.6376291 #>  [571,] 0.8880393 0.8915159 0.9554671 #>  [572,] 0.7052063 0.7701267 0.7832384 #>  [573,] 0.5953211 0.6298919 0.6394703 #>  [574,] 0.7191952 0.7550589 0.7715702 #>  [575,] 0.7087271 0.7574397 0.7697273 #>  [576,] 0.9855813 0.9898365 1.0190259 #>  [577,] 1.2213877 1.2360832 1.2596836 #>  [578,] 0.4399845 0.5103290 0.5125952 #>  [579,] 1.0281695 1.0393599 1.0804686 #>  [580,] 0.7991124 0.8087902 0.8282318 #>  [581,] 0.7382313 0.7387563 0.7424410 #>  [582,] 0.6297446 0.6873977 0.7081239 #>  [583,] 0.9059898 0.9065933 0.9378117 #>  [584,] 0.6700708 0.6895316 0.6963759 #>  [585,] 0.6544994 0.6646115 0.6928965 #>  [586,] 0.7495972 0.7619849 0.7703986 #>  [587,] 1.0374425 1.1045381 1.1157371 #>  [588,] 1.0835629 1.1161430 1.1189349 #>  [589,] 0.5065820 0.5748056 0.5779420 #>  [590,] 0.5671278 0.5843705 0.5900409 #>  [591,] 0.5649062 0.6079791 0.6430287 #>  [592,] 1.7044742 1.7132810 1.7563328 #>  [593,] 0.6822246 0.6946891 0.7048402 #>  [594,] 0.9637840 0.9658443 0.9768670 #>  [595,] 0.7414338 0.7459305 0.7462512 #>  [596,] 0.5949253 0.6369361 0.6419089 #>  [597,] 0.7616239 0.7762757 0.7962055 #>  [598,] 0.8150133 0.8185247 0.8296461 #>  [599,] 0.9980918 1.0051777 1.0353950 #>  [600,] 1.6598804 1.6628142 1.7287900 #>  [601,] 0.9164183 1.0141016 1.0232525 #>  [602,] 1.3450318 1.3678138 1.3732023 #>  [603,] 0.8475494 0.8606873 0.8890388 #>  [604,] 1.6779836 1.7059503 1.7134367 #>  [605,] 1.4117356 1.4334874 1.4510920 #>  [606,] 0.5987407 0.6228830 0.6344793 #>  [607,] 1.1827906 1.2253083 1.2462383 #>  [608,] 0.5818712 0.5836126 0.6343537 #>  [609,] 0.8446362 0.8456750 0.8468186 #>  [610,] 1.6481003 1.6864937 1.7427143 #>  [611,] 0.7700688 0.7818305 0.7983630 #>  [612,] 0.7703986 0.7736912 0.7774647 #>  [613,] 0.8120781 0.8189361 0.8312066 #>  [614,] 1.1306928 1.1458107 1.1526812 #>  [615,] 0.9115994 0.9485799 0.9769455 #>  [616,] 0.9381716 0.9402699 0.9470726 #>  [617,] 0.5444425 0.5448312 0.5759087 #>  [618,] 0.8137690 0.8260564 0.8596582 #>  [619,] 0.9553585 0.9752561 0.9815563 #>  [620,] 0.9441020 1.1021808 1.1057329 #>  [621,] 0.4958552 0.5138243 0.5157112 #>  [622,] 0.6927437 0.6946542 0.7205709 #>  [623,] 0.5952034 0.6061247 0.6157756 #>  [624,] 0.6996360 0.7148177 0.7161651 #>  [625,] 0.6250222 0.6430017 0.6549016 #>  [626,] 0.6434236 0.6444403 0.6585310 #>  [627,] 0.5050551 0.5398678 0.5805778 #>  [628,] 1.0031925 1.0183713 1.0314158 #>  [629,] 0.8711672 0.8773276 0.8873599 #>  [630,] 0.8019373 0.8445842 0.9123958 #>  [631,] 1.8119894 1.8835457 1.9396939 #>  [632,] 0.7148509 0.7240775 0.7318895 #>  [633,] 0.7969880 0.8047974 0.8301851 #>  [634,] 0.5932144 0.6164867 0.6746643 #>  [635,] 0.4855674 0.5287359 0.5593504 #>  [636,] 1.1272177 1.1457025 1.1943972 #>  [637,] 0.6077546 0.6286707 0.6507163 #>  [638,] 0.9094819 0.9192768 0.9197709 #>  [639,] 0.7345497 0.7790615 0.8243313 #>  [640,] 0.9412118 0.9648604 0.9692086 #>  [641,] 0.5623051 0.5684092 0.5762792 #>  [642,] 1.4681979 1.4772849 1.5331359 #>  [643,] 1.4804427 1.4854152 1.5109796 #>  [644,] 1.2513013 1.2516077 1.2683039 #>  [645,] 0.5574880 0.5893656 0.6083510 #>  [646,] 0.7918031 0.8042291 0.8265996 #>  [647,] 0.5764552 0.6038906 0.6041492 #>  [648,] 1.3799622 1.4111116 1.4132165 #>  [649,] 1.1105608 1.1392710 1.1434146 #>  [650,] 0.6210317 0.6387941 0.6432602 #>  [651,] 0.8645298 0.8933362 0.9561236 #>  [652,] 1.6405925 1.6644822 1.6659622 #>  [653,] 0.7549401 0.7778662 0.8441841 #>  [654,] 0.6816479 0.6831417 0.7081239 #>  [655,] 0.9500651 0.9775420 0.9873276 #>  [656,] 0.5534048 0.5623051 0.5634902 #>  [657,] 0.6516801 0.6604759 0.6639371 #>  [658,] 0.9993568 1.0326307 1.0843350 #>  [659,] 0.9988950 1.0121786 1.0399668 #>  [660,] 0.7703098 0.7942224 0.8238010 #>  [661,] 0.6423875 0.6989823 0.7164118 #>  [662,] 0.8993509 0.9024024 0.9192110 #>  [663,] 1.5894242 1.5907938 1.7702593 #>  [664,] 0.8855284 0.8941080 0.8999230 #>  [665,] 0.9316940 0.9685046 0.9718507 #>  [666,] 0.5799124 0.5935348 0.5977326 #>  [667,] 0.5323751 0.5453428 0.5613060 #>  [668,] 0.7787011 0.8022351 0.8831326 #>  [669,] 0.7006535 0.7035715 0.7081523 #>  [670,] 0.6662673 0.6723265 0.6770366 #>  [671,] 0.7523364 0.7739766 0.7950544 #>  [672,] 0.9692686 1.0893500 1.1134396 #>  [673,] 1.3532472 1.3570552 1.4053415 #>  [674,] 0.5994383 0.6056662 0.6252253 #>  [675,] 0.7345497 0.7399664 0.7463883 #>  [676,] 1.1173265 1.1190492 1.1374898 #>  [677,] 0.8934569 0.9012350 0.9097180 #>  [678,] 1.1753518 1.1854683 1.2375427 #>  [679,] 0.8256337 0.8289298 0.8392493 #>  [680,] 0.4963439 0.5026919 0.5035918 #>  [681,] 0.7350856 0.7598298 0.7763379 #>  [682,] 0.9786052 0.9966688 0.9971177 #>  [683,] 1.2011171 1.2728644 1.3764404 #>  [684,] 0.5429251 0.5545897 0.5595816 #>  [685,] 0.7291645 0.7454184 0.7608943 #>  [686,] 1.1112910 1.1186101 1.1949020 #>  [687,] 0.5780221 0.6384175 0.6637998 #>  [688,] 1.0175564 1.0218903 1.0295306 #>  [689,] 0.9881273 1.0047321 1.0543030 #>  [690,] 0.7519386 0.7616290 0.7720948 #>  [691,] 0.7004920 0.7111705 0.8122808 #>  [692,] 0.6046515 0.7230369 0.7532149 #>  [693,] 0.6028140 0.6191656 0.6243521 #>  [694,] 0.7727796 0.9015468 0.9348566 #>  [695,] 0.5867752 0.6009522 0.6119022 #>  [696,] 1.0558123 1.1146521 1.1181563 #>  [697,] 0.9516706 0.9610054 0.9659696 #>  [698,] 0.7511619 0.7698410 0.7804331 #>  [699,] 0.7937811 0.7982610 0.8278643 #>  [700,] 1.0090072 1.0275977 1.0291881 #>  [701,] 0.6336290 0.6982252 0.7274610 #>  [702,] 0.8465692 0.8479652 0.8992138 #>  [703,] 1.0227392 1.0465485 1.0837904 #>  [704,] 0.8876881 0.8899912 0.9001194 #>  [705,] 1.2116695 1.2388372 1.2607401 #>  [706,] 0.4833880 0.4889203 0.5501246 #>  [707,] 0.6770356 0.7496285 0.7515653 #>  [708,] 1.1207683 1.1268219 1.1272964 #>  [709,] 0.7094732 0.7259984 0.7459760 #>  [710,] 0.5153742 0.5265849 0.5640749 #>  [711,] 0.8327878 0.8377960 0.8382210 #>  [712,] 1.1298190 1.1624717 1.1883081 #>  [713,] 1.1825797 1.2219971 1.2922392 #>  [714,] 0.7158798 0.7979126 0.8524231 #>  [715,] 0.4753342 0.5699200 0.5978497 #>  [716,] 1.2174403 1.2526057 1.2574323 #>  [717,] 0.7736912 0.7816567 0.8174749 #>  [718,] 1.2614775 1.2624836 1.3026987 #>  [719,] 0.5790781 0.5934848 0.6230584 #>  [720,] 0.7069455 0.7451610 0.7586316 #>  [721,] 0.8049059 0.8081318 0.8218224 #>  [722,] 0.7047268 0.7134267 0.7153814 #>  [723,] 0.7136564 0.7154463 0.7167615 #>  [724,] 0.8821152 0.9851828 0.9898013 #>  [725,] 1.4973250 1.5055879 1.5074530 #>  [726,] 0.6804902 0.7005061 0.7156117 #>  [727,] 0.4702287 0.4755807 0.5660138 #>  [728,] 0.7189811 0.7458774 0.7604854 #>  [729,] 0.8606825 0.8609109 0.8780849 #>  [730,] 0.6201108 0.7348842 0.8063002 #>  [731,] 0.7971026 0.8287835 0.8380124 #>  [732,] 0.4702287 0.5011375 0.5153742 #>  [733,] 0.6751090 0.6774385 0.6959554 #>  [734,] 1.0862932 1.0974693 1.1124870 #>  [735,] 0.8166860 0.8676823 0.8848884 #>  [736,] 1.1395019 1.1660918 1.1671713 #>  [737,] 0.9389065 1.0315313 1.0341932 #>  [738,] 0.6848514 0.7106795 0.7149682 #>  [739,] 0.8152271 0.8178724 0.8586570 #>  [740,] 0.6977684 0.7030635 0.7596422 #>  [741,] 0.4295104 0.4395468 0.4672781 #>  [742,] 1.1764391 1.2583164 1.2625014 #>  [743,] 0.9054421 0.9326516 0.9462342 #>  [744,] 1.0121885 1.0359936 1.0508424 #>  [745,] 0.6184919 0.6343287 0.6486475 #>  [746,] 1.1992232 1.2243906 1.3146118 #>  [747,] 0.6609101 0.7089257 0.7128922 #>  [748,] 0.5390802 0.5531344 0.5614305 #>  [749,] 0.7186936 0.7615309 0.7646441 #>  [750,] 0.7047268 0.7371474 0.7473949 #>  [751,] 0.8443921 0.8540574 0.9058215 #>  [752,] 0.5479139 0.6064436 0.6132014 #>  [753,] 0.4843723 0.4908610 0.4960234 #>  [754,] 0.9175817 0.9473811 0.9498482 #>  [755,] 0.7194933 0.7195611 0.7553676 #>  [756,] 1.3430901 1.3734360 1.3793773 #>  [757,] 0.9301489 0.9542629 0.9600027 #>  [758,] 0.6087746 0.6145149 0.6699144 #>  [759,] 0.5735637 0.5801977 0.5903206 #>  [760,] 1.1497266 1.2630349 1.3112759 #>  [761,] 0.8476151 0.8637655 0.8751482 #>  [762,] 0.9225450 0.9422236 0.9491438 #>  [763,] 1.3187241 1.3763214 1.3792486 #>  [764,] 0.9786052 0.9924999 1.0347499 #>  [765,] 0.8026652 0.8665776 0.9003124 #>  [766,] 0.7601007 0.7706812 0.8089691 #>  [767,] 1.9762617 2.0045975 2.0060393 #>  [768,] 0.9227394 1.0859806 1.1025820 #>  [769,] 0.9313402 0.9700838 0.9779838 #>  [770,] 1.9328368 1.9667889 1.9693843 #>  [771,] 0.5804593 0.5935348 0.6897811 #>  [772,] 1.0564699 1.0746012 1.0810852 #>  [773,] 0.6104719 0.6439773 0.6742732 #>  [774,] 0.7926146 0.8085573 0.8949064 #>  [775,] 0.6529351 0.6774890 0.6859919 #>  [776,] 0.9863828 0.9918592 0.9992758 #>  [777,] 1.0875642 1.1018770 1.1076177 #>  [778,] 0.6566688 0.6760615 0.7087414 #>  [779,] 0.9739828 0.9748544 0.9752524 #>  [780,] 0.4861801 0.5435767 0.5596023 #>  [781,] 0.9388441 0.9402197 0.9791148 #>  [782,] 1.0326307 1.1231042 1.1571880 #>  [783,] 0.8189859 0.8211737 0.8368884 #>  [784,] 0.8243313 0.8390568 0.9247774 #>  [785,] 0.7481203 0.7696750 0.7826425 #>  [786,] 0.6709364 0.6782859 0.6841622 #>  [787,] 0.5417861 0.5460535 0.5901983 #>  [788,] 1.1039762 1.1105234 1.1204667 #>  [789,] 0.7776724 0.8260052 0.8347894 #>  [790,] 0.8020139 0.8650630 0.8962985 #>  [791,] 0.9281894 1.0346790 1.0399336 #>  [792,] 1.0760824 1.1010217 1.1294485 #>  [793,] 0.5085464 0.5096321 0.5129134 #>  [794,] 1.1646601 1.1673940 1.1867692 #>  [795,] 1.4049359 1.4093849 1.4423521 #>  [796,] 0.6265638 0.6452653 0.6924617 #>  [797,] 1.0145244 1.0158734 1.0967911 #>  [798,] 0.8185247 0.8391055 0.8811947 #>  [799,] 0.8980678 0.9536116 0.9872640 #>  [800,] 0.6956205 0.7142331 0.7154463 #>  [801,] 1.4986314 1.5596232 1.5684209 #>  [802,] 1.7234990 1.7411334 1.7773259 #>  [803,] 0.5583002 0.6509759 0.6521298 #>  [804,] 0.6346440 0.6349184 0.6548663 #>  [805,] 0.7632637 0.7865370 0.7977642 #>  [806,] 0.7338878 0.7385555 0.7391808 #>  [807,] 0.4983098 0.5116795 0.5726955 #>  [808,] 1.3391239 1.4058879 1.4272980 #>  [809,] 0.6397044 0.6546539 0.6678425 #>  [810,] 1.4189278 1.4905328 1.5260870 #>  [811,] 0.5303154 0.5402932 0.5497499 #>  [812,] 0.5462132 0.5828444 0.6074956 #>  [813,] 0.7852029 0.7905675 0.8227385 #>  [814,] 0.9025711 0.9394209 0.9550524 #>  [815,] 0.6927671 0.7146187 0.7741867 #>  [816,] 0.7966318 0.8079022 0.8218224 #>  [817,] 0.9541851 0.9740469 0.9799561 #>  [818,] 0.8996891 1.0099439 1.0160282 #>  [819,] 0.5399085 0.5461781 0.5541546 #>  [820,] 0.7249182 0.7960874 0.8114160 #>  [821,] 0.5267347 0.5679906 0.5813061 #>  [822,] 1.0168511 1.0508422 1.0663852 #>  [823,] 1.0295130 1.0307547 1.1058261 #>  [824,] 0.7613308 0.7863384 0.8020139 #>  [825,] 1.0068565 1.0557658 1.0684064 #>  [826,] 0.5464678 0.5626756 0.5706140 #>  [827,] 1.1799653 1.1971004 1.2016552 #>  [828,] 1.1022411 1.1190746 1.1273393 #>  [829,] 0.7639675 0.7657718 0.7694799 #>  [830,] 0.9317077 0.9371216 0.9588737 #>  [831,] 0.7523505 0.7889890 0.8230088 #>  [832,] 0.6780518 0.6852537 0.6855937 #>  [833,] 0.7322569 0.7530169 0.7534253 #>  [834,] 0.5512355 0.5866890 0.5931511 #>  [835,] 0.6758856 0.6835674 0.7335183 #>  [836,] 0.5613415 0.5911516 0.6031398 #>  [837,] 0.9290874 0.9460622 0.9699885 #>  [838,] 0.6674331 0.6779479 0.6912840 #>  [839,] 0.6572681 0.7271249 0.7341129 #>  [840,] 1.2754429 1.2970895 1.2972886 #>  [841,] 0.6805933 0.6837591 0.7003760 #>  [842,] 0.5830837 0.5836743 0.6412796 #>  [843,] 0.8980678 0.9143696 0.9241070 #>  [844,] 1.3654294 1.3826844 1.4273520 #>  [845,] 1.9936546 2.0406656 2.1144161 #>  [846,] 0.9443695 0.9687581 0.9723858 #>  [847,] 0.5055272 0.5402932 0.5601997 #>  [848,] 1.0049376 1.0560075 1.1184743 #>  [849,] 0.8476151 0.8527386 0.8600213 #>  [850,] 0.7531812 0.7596701 0.7704794 #>  [851,] 0.6936068 0.7606115 0.7672962 #>  [852,] 0.8130068 0.8184205 0.8283721 #>  [853,] 1.3116879 1.3574740 1.3849126 #>  [854,] 0.5503475 0.5608624 0.5612362 #>  [855,] 1.3958355 1.4686948 1.5181040 #>  [856,] 0.5319777 0.5476763 0.5543569 #>  [857,] 0.6686551 0.6743245 0.6853341 #>  [858,] 1.0808560 1.1604910 1.1659482 #>  [859,] 0.7651684 0.7880570 0.7922905 #>  [860,] 0.9725067 0.9851378 0.9887335 #>  [861,] 0.7201208 0.7269573 0.7527327 #>  [862,] 0.5704526 0.6180113 0.6634455 #>  [863,] 0.6908484 0.7096246 0.7338649 #>  [864,] 0.7818558 0.8012700 0.8094890 #>  [865,] 0.5022766 0.5099505 0.5320749 #>  [866,] 1.0874530 1.1389198 1.1563700 #>  [867,] 0.5319840 0.5399085 0.5951732 #>  [868,] 1.1416205 1.1495588 1.1517729 #>  [869,] 0.5157445 0.5182299 0.5296256 #>  [870,] 0.9003124 0.9313188 0.9459597 #>  [871,] 0.5595816 0.6114878 0.6265805 #>  [872,] 1.2260773 1.2326504 1.2443762 #>  [873,] 1.0185893 1.0526573 1.0632839 #>  [874,] 0.6981398 0.7104337 0.7157654 #>  [875,] 1.3088725 1.3657213 1.3952959 #>  [876,] 0.6969713 0.7294061 0.7460844 #>  [877,] 0.7697273 0.7888190 0.7924303 #>  [878,] 0.5949715 0.6102430 0.6260455 #>  [879,] 1.1337432 1.1482130 1.1671713 #>  [880,] 0.5997831 0.6106163 0.6313736 #>  [881,] 1.0163482 1.1077787 1.1606579 #>  [882,] 0.6961224 0.7470345 0.7658128 #>  [883,] 0.7140426 0.7174605 0.8045776 #>  [884,] 0.9983352 1.0160282 1.0283580 #>  [885,] 0.9295686 0.9468710 0.9597919 #>  [886,] 0.8468654 0.9034590 0.9314285 #>  [887,] 1.2385262 1.3432552 1.3551601 #>  [888,] 0.9685728 0.9908087 1.1342410 #>  [889,] 0.7941689 0.8073704 0.8095942 #>  [890,] 1.1247709 1.1600616 1.2547292 #>  [891,] 1.2323339 1.2378821 1.3538084 #>  [892,] 0.4860924 0.4868886 0.5085464 #>  [893,] 0.7833450 0.8334658 0.8587520 #>  [894,] 1.0106619 1.0384459 1.0485065 #>  [895,] 0.6041143 0.6145498 0.6411923 #>  [896,] 0.7082198 0.7184105 0.7684617 #>  [897,] 1.4949542 1.5551720 1.5606740 #>  [898,] 0.7005061 0.7471525 0.7501005 #>  [899,] 1.0065906 1.0520879 1.0540563 #>  [900,] 0.8049784 0.8176458 0.8436812 #>  [901,] 1.3953327 1.3999565 1.4694657 #>  [902,] 1.7439610 1.7966509 1.8504107 #>  [903,] 0.9889404 1.0264214 1.0617021 #>  [904,] 0.8990633 0.9360658 0.9601854 #>  [905,] 0.5234403 0.5805939 0.6000262 #>  [906,] 0.6897921 0.6971550 0.7020986 #>  [907,] 1.5289775 1.5514454 1.6017089 #>  [908,] 0.7716930 0.7926146 0.8154212 #>  [909,] 0.6953720 0.7014400 0.7113381 #>  [910,] 0.8188785 0.8635085 0.9031312 #>  [911,] 0.6622762 0.6741279 0.6803970 #>  [912,] 0.8695807 0.8879426 0.8895699 #>  [913,] 0.8706641 0.8863607 0.8996139 #>  [914,] 0.7079259 0.7316240 0.7557482 #>  [915,] 0.8167217 0.8540574 0.8562824 #>  [916,] 0.8038732 0.8166128 0.8330287 #>  [917,] 1.2497752 1.2662635 1.2771400 #>  [918,] 0.7804643 0.7903540 0.7938937 #>  [919,] 0.8028413 0.8302052 0.8451212 #>  [920,] 0.6553956 0.6554971 0.6720853 #>  [921,] 0.5585802 0.5598850 0.6352914 #>  [922,] 0.6255669 0.6258349 0.6536227 #>  [923,] 0.4321943 0.4422799 0.5036670 #>  [924,] 0.9542443 1.1028002 1.1292654 #>  [925,] 0.6366121 0.6735621 0.6953452 #>  [926,] 0.5377278 0.5610376 0.5798258 #>  [927,] 1.3616632 1.4150824 1.4178468 #>  [928,] 0.6067554 0.6756034 0.6818539 #>  [929,] 1.1311115 1.1433741 1.1972733 #>  [930,] 1.6845952 1.7003932 1.7108523 #>  [931,] 0.6970945 0.7057450 0.7147263 #>  [932,] 0.8787514 0.8836606 0.9205579 #>  [933,] 0.5432537 0.5467389 0.5541546 #>  [934,] 0.7470305 0.7594164 0.8438245 #>  [935,] 0.8453142 0.8652661 0.9158886 #>  [936,] 0.7470305 0.8214488 0.8665776 #>  [937,] 0.8056139 0.8112330 0.8315091 #>  [938,] 0.7920471 0.8088653 0.8096874 #>  [939,] 0.7484605 0.8485011 0.8696486 #>  [940,] 0.4753342 0.5219582 0.5299068 #>  [941,] 0.8610044 0.8628510 0.9113044 #>  [942,] 0.8413834 0.8636115 0.8871951 #>  [943,] 0.9351393 0.9557306 1.0104826 #>  [944,] 0.5578409 0.5748597 0.5838537 #>  [945,] 0.6884407 0.7028481 0.7031826 #>  [946,] 1.0360265 1.0691307 1.0998110 #>  [947,] 0.7178248 0.7272245 0.7285627 #>  [948,] 2.2032127 2.3723440 2.3877183 #>  [949,] 0.8314887 0.8883390 0.9259397 #>  [950,] 1.4683562 1.5100690 1.5519817 #>  [951,] 1.0682838 1.0786310 1.0850363 #>  [952,] 0.7036523 0.7196621 0.7215293 #>  [953,] 1.4628900 1.4710904 1.5209242 #>  [954,] 1.3152878 1.3216606 1.3753870 #>  [955,] 0.6295060 0.6310776 0.6369361 #>  [956,] 1.0197948 1.0591632 1.1176452 #>  [957,] 0.6213689 0.6434236 0.6484918 #>  [958,] 0.9505009 0.9669593 0.9841767 #>  [959,] 0.9845126 1.0184831 1.0889376 #>  [960,] 0.9949161 1.0066074 1.0426910 #>  [961,] 0.9562367 0.9751485 0.9834486 #>  [962,] 0.9383019 0.9664837 0.9709412 #>  [963,] 1.2376532 1.2455263 1.3062638 #>  [964,] 0.5501246 0.5579832 0.5612890 #>  [965,] 0.9961724 1.0480837 1.1285860 #>  [966,] 1.0007753 1.0147934 1.0832897 #>  [967,] 0.5926234 0.6126425 0.6350259 #>  [968,] 0.5123825 0.5199247 0.5317512 #>  [969,] 0.7687746 0.7735425 0.7778662 #>  [970,] 1.2709714 1.3323185 1.3566527 #>  [971,] 0.6228068 0.6365078 0.6397044 #>  [972,] 0.7202666 0.7715702 0.7991124 #>  [973,] 0.6810402 0.6881527 0.7068259 #>  [974,] 0.9854226 0.9898365 1.0459596 #>  [975,] 1.0056529 1.0155459 1.0493916 #>  [976,] 0.8079022 0.8418044 0.8442718 #>  [977,] 0.8658115 0.8773944 0.8993509 #>  [978,] 0.8710913 0.9184850 0.9931177 #>  [979,] 0.7054618 0.7451879 0.8015927 #>  [980,] 1.6612242 1.6717990 1.6809321 #>  [981,] 0.9174768 0.9517556 0.9605344 #>  [982,] 0.7506253 0.7687746 0.7962055 #>  [983,] 0.6010482 0.6504026 0.6673600 #>  [984,] 0.7759116 0.7991075 0.8140148 #>  [985,] 0.6330024 0.6592223 0.6955028 #>  [986,] 0.7459760 0.8511924 0.8523084 #>  [987,] 1.1150206 1.2134427 1.2295808 #>  [988,] 0.8475961 0.9195081 0.9325896 #>  [989,] 0.7727281 0.8130121 0.8488755 #>  [990,] 0.8106580 0.8631262 0.8706641 #>  [991,] 0.6106163 0.6375908 0.6387941 #>  [992,] 0.7140520 0.7537211 0.7647386 #>  [993,] 0.5712563 0.5828690 0.6001722 #>  [994,] 0.8201776 0.8589938 0.8754677 #>  [995,] 1.1581223 1.1582276 1.1693043 #>  [996,] 0.5265849 0.5866890 0.6045114 #>  [997,] 0.6636627 0.6718082 0.6741463 #>  [998,] 0.5864066 0.6168310 0.6247461 #>  [999,] 0.4833880 0.4914033 0.4979559 #> [1000,] 1.9854924 1.9922099 2.0041363 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  692  787  813  710  851  570  407  367  996   253 #>    [2,]  509  985  926  136  573  329  857  819  134   126 #>    [3,]   42  539  296  393  895  454  488  317  804   715 #>    [4,]  848  472  817  461  415   79  891  432  975   532 #>    [5,]   54  114  928  391  327  426  463  660  983   527 #>    [6,]  973  807  654  184  135  281  719  821   80   800 #>    [7,]  497  939  319   15  363  105  200  863  990   275 #>    [8,]  913  990  344  607  795  951  939  694  543    87 #>    [9,]  434   64   56  410  141   86  370  523  904   914 #>   [10,]  813    1  195  692  851  367  710  787  935   276 #>   [11,]  923  741  356  135   67  635  834  727  732   127 #>   [12,]  527  598  327  119  711  325  769  476  193   291 #>   [13,]  459  945  905   87  634  778  803  264  863   466 #>   [14,]  333  113  582  232  829  814  320  112  755   490 #>   [15,]  832  200  363  115  775  831  497  809  318     7 #>   [16,]  961  452  241  849  651  382  594   48  761   841 #>   [17,]  451  536  752  192  635  923  741  346   80   621 #>   [18,]  901  266  885  978  636  614  628  843  280   189 #>   [19,]  896  560  919  486  564  820  146  297  455   817 #>   [20,]  477  546  149  282   38  942  519  123  846   387 #>   [21,]  998  440  181  993  493  670  567  882  920   303 #>   [22,]  749  296  860  322  393  284  733  618    3    42 #>   [23,]  967   24  547  409  107  172  382  944  841   412 #>   [24,]   23  967  382  409  547  938  107  245  841   761 #>   [25,]  343  524  585  216  360  869  215  753  518   637 #>   [26,]  192   73  529  221  346   17  894  635  564   451 #>   [27,]  534  734  143  168  910  962  638  852  750   441 #>   [28,]  328   97  810  855  776  371  774  188  628   978 #>   [29,]  480  918  350  668  925  586  299  194  187   792 #>   [30,]  205  621  578  510  137  869  637  536  542   244 #>   [31,]  494  976  989  852  722  762  701  655  986   393 #>   [32,]  879  386  204  613  362  311  400  383  899   659 #>   [33,]  806  269  572  244  751  597  931  433  305    98 #>   [34,]  689  374  180  860  183  830  827   22  236   912 #>   [35,]  178   56   64  439   41  410  326  924    9   141 #>   [36,]   84  233  568  960  212  435  768  546  943   587 #>   [37,]   93  267  836  548  207  247  102  748  377   550 #>   [38,]  639  633  994  789  596  351  282  435  377   460 #>   [39,]  240  272  209  651  551  796  575  841  804   822 #>   [40,]  212  740  351  324  435  789  102  207  548   748 #>   [41,]  916  714  791  326  825  239  141   56  447   883 #>   [42,]    3  296  317  454  895  715  867  539  940   553 #>   [43,]  307  920  152  179  559  812  882   21  447   681 #>   [44,]  826  520  526  101  617  226  398  187  194   353 #>   [45,]  842  495  627  758  321  387  656  149  332   590 #>   [46,]  791  781  159  990  449  831  913  341  484   523 #>   [47,]  784  639  658  837  994  789  868  790   38   640 #>   [48,]  897  382  890  452  268  352  887  594   16    24 #>   [49,]  691  724  103  286  231  289  144  670  911    52 #>   [50,]  521  780  366  181  515   70  854  968  944   213 #>   [51,]  995  110  735  941  708  388   81  130  746   531 #>   [52,]  911  144  103  507  330  993  920  807  135   834 #>   [53,]  420  642  718  658  837   76  959  384  929   121 #>   [54,]    5  928  391  463  660  114  327  426  906   598 #>   [55,]  581  235  964  838  871  589  462  489  624   478 #>   [56,]   64  428   86  410  341  141  473  916  326   370 #>   [57,]  100  360  349  448  139  656  753  503  854   160 #>   [58,]  217  965  644  554  132  588  298  894  158    78 #>   [59,]  229  880  205  254  299  353  925  862  137   650 #>   [60,]  737  364  798  439  882  263  248  429  114   825 #>   [61,]  304  858  949  704  117  132  615  794  894   559 #>   [62,]  187  350  355  674  657  182  194  416   44   299 #>   [63,]  732  821  759  407  710  865  127   11   67   719 #>   [64,]   56   86  410  473  428  434    9  765  934   904 #>   [65,]  372  933  126  380  811  753  819  596  667   503 #>   [66,]  113  889  738  333  186  679  373  157  458   755 #>   [67,]  127   11  741  680  732  923  727  999  892   356 #>   [68,]  338  157  128  566  274  612  358  163  717   616 #>   [69,]  762  273  750  852  534  505  172   27  651   382 #>   [70,]  249  521  715  999  892  684  135  940   50   542 #>   [71,]  203  574  986  900  739  424  591  972  989   580 #>   [72,]  394  506  877  575  427  209  662  133  743   154 #>   [73,]  192   26  221  988  346  164  828  615   17   894 #>   [74,]  122  768  504  568  588  261  942  464   90   943 #>   [75,]  528  793  376  589  964  454  706  317  283   478 #>   [76,]  420  151  823  676  642  336  237  601  718   171 #>   [77,]  611  800  898  538  609  884  818  499  162   947 #>   [78,]   95  554  808  571   12  769  476  158  411   217 #>   [79,]  817  248  153    4  472  825  146  919  432   239 #>   [80,]  578  752  485  314  821  487  281  621  999   741 #>   [81,]   88  500   51  499  388  995  110  167  145   953 #>   [82,]  263  173  429   14  875  560  737  476  700    60 #>   [83,]  504  298   74  588  399  965  443  305  464   158 #>   [84,]  568   36  402  943  233  212  646  740  960   768 #>   [85,]  517  977  908  720  693  126  799  475  339   390 #>   [86,]  934  449  765   56   64  473  166  246  428   906 #>   [87,]  634   13  945  459  863  775  468  701  131   905 #>   [88,]   81  953   51  145  499  708  500  995  167   110 #>   [89,]  377  809  380  971  293  267  508   67  442   832 #>   [90,]  122  425  942  704  464  842  311  546  747   914 #>   [91,]  827  887  505  724  860  897  691   49  103   432 #>   [92,]  835  288  623  214  687  936  264  466  535   166 #>   [93,]   37  267  548  207  550  621  748  836  247   102 #>   [94,]  147  644  217  814  946  388  716  500   82   529 #>   [95,]   78  571  808  158  554  946  305  814  769   175 #>   [96,]  226  218   23  815  109  738  185  967  841    24 #>   [97,]  855  315  260  188  977   28  799  475   85   790 #>   [98,]  847  518  139  360  753  381  773  869  503   811 #>   [99,]  389  533  423  341  671  111  883  629  785   428 #>  [100,]  349  295  160  968   57  856  515  854  933   169 #>  [101,]  398  174  226   44  921  617  826  979  520   526 #>  [102,]  351  748  836  482  462   37  548  324   93   207 #>  [103,]  144  691  911   52   49  284  993  724  289   231 #>  [104,]  688  401  932  886  603  453  726  723  531   659 #>  [105,]  727  275  319  922  127  812  759  732   67   685 #>  [106,]  597  502  806  982  941  244  690  751  403   287 #>  [107,]  409  412  593  944  967  766  366  670  196    23 #>  [108,]  747  265  519  773  346  530  971  397  164    98 #>  [109,]  622  185  226  626  243  839  165  245  979   398 #>  [110,]  167  735  661  898  941  287  723  453  726   728 #>  [111,]  423   99  671  533  629  389  364  142  593   670 #>  [112,]  487  314  198  333  991  232  213  569  281   826 #>  [113,]  333  755   66   14  700  889  157  997  396   320 #>  [114,]  798    5   54  983  928  598  660  439  391   426 #>  [115,]  383  200  675  140  613  318   15  395  565   832 #>  [116,]  665  595  620  889  526  738  408  617  101   979 #>  [117,]  681  152  559  704  745  141  949  326  641   447 #>  [118,]  375  323  874  820  486  458  438  220  456   507 #>  [119,]   12  704  598  949  711  193  132  399  794   410 #>  [120,]  170  405  699  150  581  255  805  744  992   513 #>  [121,]  496  959  658  782  868   47  790  457  837   501 #>  [122,]   90  768  942   74  222  546  443  261  425   464 #>  [123,]  134  926  535  387  933  509  149  561  136   442 #>  [124,]  357  140  675  115  832  694  347  477  994   565 #>  [125,]  291  909  346  773  747  360  637  510  181   527 #>  [126,]   65  596  667  134  926  819  509  390  693   252 #>  [127,]   67  727  732  923  451  741   11  680   63   356 #>  [128,]  612  730  262  338  606  358   68  815  717   218 #>  [129,]  760  913  694  543  736  357    8  831  853   781 #>  [130,]  483  886  603  531  176  453  746  401  164   104 #>  [131,]  701  468   87  986  634  989  591  180  913   857 #>  [132,]  794  949  894  988  119  554  559  704   61   965 #>  [133,]  506  584  209  240  539  161  796  394  575   992 #>  [134,]  926  596  123  509  460  126  667   65  535   933 #>  [135,]  249  807   11  834  521  567  741   70  923   356 #>  [136,]  329  509    2  819  926  905  867  466  573   264 #>  [137,]  205  403  138  199   30  215  244  625  695   869 #>  [138,]  137  403  302  205  199  482  462   30  548   489 #>  [139,]  518  753  847   98  360  372  878  503  381    57 #>  [140,]  347  124  115  675  395  357  383  832  342    15 #>  [141,]  326  370  523  447  152  117  983  608  428   641 #>  [142,]  742  111  533  239  286   99  364  423  883   629 #>  [143,]  962   27  910  168  734  774  961  638  334   534 #>  [144,]  911   52  103  691  993  196  330  507  300   289 #>  [145,]  777  499  167  162  110  884  735  764  697   728 #>  [146,]  486  896   19  919  817  820  987  461  323   560 #>  [147,]  455  529  707  654  829   94  564  388  582   297 #>  [148,]  912  492  513  540  438  456  238  927  818   699 #>  [149,]  387  758  503  627  123   20  495  519   45   332 #>  [150,]  771  699  538  170  120  201  294  581  947   650 #>  [151,]  335  823  470   76  234  981  676  211  764   864 #>  [152,]  745  117  484  681  447  141  303  559  608   983 #>  [153,]  307  354  248  472   79  560  564  825  817    43 #>  [154,]  586  877  918  743  277  394  369  584  606   194 #>  [155,]  512  375  700  514  118  458  373  874  820   490 #>  [156,]  252  235  695  390  693  542  626  277  871   957 #>  [157,]  358  755  338  566   68  717  274  396   66   113 #>  [158,]  305  965  554  433   95  931  269   33  572   399 #>  [159,]  990  533  286   46  289  344  724   87  939   785 #>  [160,]  349  856  100  295  535  933  169  515  667   647 #>  [161,]  830  797  133  992  539  838  506  240  209   672 #>  [162,]  499  777  903  167  717  609  145   77  898   110 #>  [163,]  616  757   68  310  966  338  594  937  566    96 #>  [164,]  265  536  550  451  192  346  108  621   17   127 #>  [165,]  258  308  647  622  856  169  626  109  334   295 #>  [166,]  645  561  449  608  627  303  370  387  332   641 #>  [167,]  110  735  499  898  145  162  287  661  728   777 #>  [168,]  638  910   27  852  551  143  534  734  816   958 #>  [169,]  647  295  349  522  856  541  160  206  100   174 #>  [170,]  120  699  150  805  255  581  744  992  405   478 #>  [171,]  225  404  237  676  601  720  446  336  824    76 #>  [172,]  547  841  804   23  651  272  796  196  750   551 #>  [173,]  476   82  875   14  263  703  333  213  660    78 #>  [174,]  921  398  968  101  366  295  780  226  169   515 #>  [175,]  257  571  343  769  617  327  271  569   25   788 #>  [176,]  453  661  603  726  130  388  723  886  552   192 #>  [177,]  309  183  619  331  450  367  501  528  525   236 #>  [178,]  924  410  598  511  904  439  473   35   12   870 #>  [179,]  882  297  582  529  567  998  232  440  920   564 #>  [180,]  951  131  701  634   87  863  945  363  183    31 #>  [181,]  998  440  567  521   21  356   50  993  635   741 #>  [182,]  674  657  194  187  258  626  185   62  277   252 #>  [183,]  619  528  367  283  177  376   75  540  454   363 #>  [184,]  996  719  821  834    6  549  865  947  570   922 #>  [185,]  243  109  626  182  194  258   44  622  226   668 #>  [186,]  679  938  409  967  227  738  300  107  213   889 #>  [187,]   62  194  350  668  182  674  657   44  299   355 #>  [188,]  958  977   97  260  799  475  392  908  816   673 #>  [189,]  630  788  202  881  713  620  885  408  984   280 #>  [190,]  610  290  664   71  579  986  197  558  989   414 #>  [191,]  270  731  228  306  963  903  833  862  763   162 #>  [192,]   26   17   73  346  451  164  635  536  176   529 #>  [193,]  590  426  370  598  656  410  641  448  527   928 #>  [194,]  187  668  182  918  185   62  674  350   44   657 #>  [195,]  813  692  406  276   10  851    1  367  688   570 #>  [196,]  547  107  944  144  412  469  780   23  967    42 #>  [197,]  664  449  698  417  558  414   86  166  709    92 #>  [198,]  213  569  520  617  526  826  112  257  738   398 #>  [199,]  302  625  137  674  215  138  657  403  693   653 #>  [200,]  115   15  383  613  363  832  293  809  318   759 #>  [201,]  485  771  666  538  224  650  294  150   80   821 #>  [202,]  620  630  788  189  355  984  216  408  175   881 #>  [203,]  591  709  986  972  989  574  985  739  857   900 #>  [204,]  362  613  318  292   32  383  395  659  879   115 #>  [205,]  137   30  403   59  138  229  244  254  637   869 #>  [206,]  522  316  169  463  421  345  647  541  906   349 #>  [207,]  431  748   93  324  740   37  548  550  102    40 #>  [208,]  687  816  488  722  632  908  622  750  534   557 #>  [209,]  575  240  394  133  506  272  796   39  369    72 #>  [210,]  539  488  838  632    3  589  390  850  871   895 #>  [211,]  470  237  502  351  234  789  482  548  981   955 #>  [212,]   40  740  435  324  351  789  282  960  548   207 #>  [213,]  198  232   50  112  738  333  366  569  186   520 #>  [214,]  623  535  493  856  933   92  667  687  288   944 #>  [215,]  625  524  585  753  137  199  957  695  674   869 #>  [216,]  524  585   25  952  647  541  343  355  984   215 #>  [217,]  644  894  554   58  946  132  814  965   78    26 #>  [218,]  815  262  991  684  730  606  566  553  584   358 #>  [219,]  444  729  783  720  653  378  517  199  625   657 #>  [220,]  456  238  815  947  330  118  218  262  507   566 #>  [221,]   26  716   73  192  858  894  603  529  886   564 #>  [222,]  122  768  942  546  930  736   90  425   20    74 #>  [223,]  949  794   61  894  132  354  307  559  153   326 #>  [224,]  201  294  771  485  728  666  253  489  462   650 #>  [225,]  171  720  404  824  237  517  676  799  537   624 #>  [226,]  398  101  826   96  109  174   44  526  780   738 #>  [227,]  766  593  409  186  107  670  679  514  364   512 #>  [228,]  306  862  270  353  191  274  731  595  299   271 #>  [229,]   59  833  287  205  925  880  254  731  969   403 #>  [230,]  365  866  516  776  544  592  328  371  696   628 #>  [231,]  284  754  939   49  724  103  911  289  459   415 #>  [232,]  213  582  112  179  181  998  487  909  198    50 #>  [233,]   36  943  400   84  960  568  942  311  828   483 #>  [234,]  489  864  462  465  138  302  361  748  682   224 #>  [235,]  156  871  666  462  964   55  542  624  224   277 #>  [236,]  619  450  177  367  912  430  954   34  183   540 #>  [237,]  824  470  211  517  171  219  720  302  601   225 #>  [238,]  456  618  749  220  322  330  822  438  374   912 #>  [239,]  825  714  883  286  785  742  916  142   99   533 #>  [240,]  209  272  796   39  804  133  394  161  575   539 #>  [241,]  802   16  849  631  651   39  910  551  369   452 #>  [242,]  576  384  915  259  974  653  219  359  337   444 #>  [243,]  185  369  109  877  849  626  796  622  272   761 #>  [244,]  403  572  137  205   30  637  931   98   33   869 #>  [245,]  839  761  979  961  109  467   24  921   23   334 #>  [246,]  936  441  345  934  414  835  544  471  765    92 #>  [247,]  381  548  955  267  847  482   37   93  550   380 #>  [248,]  817  882  560  514  919  920  564  297  179    43 #>  [249,]  135   70  807  521  834   11  684  507  892   999 #>  [250,]  981  844  335  697  465  708  151  845  941   234 #>  [251,]  279  452  116  163  713  408  631  665  594   620 #>  [252,]  156  693  390  626  277  695  126  624  674   235 #>  [253,]  964  793  836  294  224  748  462  710   75   865 #>  [254,]   59  487  637  205  510  880  229   80   30   536 #>  [255,]  805  744  170  525  581  935  873  699  120   478 #>  [256,]  649  742  767  533  558  290 1000  414  600   344 #>  [257,]  617  175  569  520  198  271  571  526  101   343 #>  [258,]  165  182  657  185  626  647  308  843  674   984 #>  [259,]  583  915  786  878  339  381  219  444  952   242 #>  [260,]  977  712   97  799  315  855  188  225  673   404 #>  [261,]  702  583  768  546  359  646  122  269  786   568 #>  [262,]  730  606  218  128  612  815  584  650  991   358 #>  [263,]  429   82  560  737  512  297  179  514   60   173 #>  [264,]  803  778  288  905  466  469  422  136  867   493 #>  [265,]  108  550  164  267  971  621   93   37  380   847 #>  [266,]  636  885  378  614  984  729  978   18  337   576 #>  [267,]   37   93  380  377  247  621  680  550  265   548 #>  [268,]  352  679  938  452   24  594  186  382  889   779 #>  [269,]   33  773   98  747  108  711  399  158  360   847 #>  [270,]  191  228  445  306  963  872  903  731  862   763 #>  [271,]  355  569  353  617  520  257  343  416   25   306 #>  [272,]  796  804  369  240  841   39  209  551  394   172 #>  [273,]   69  750  547  172  593   24  412  107   23   671 #>  [274,]  717  358  862  338  880  353  157  299   68   228 #>  [275,]  105  727  922  759  732  685   63  319   11   127 #>  [276,]  195  406  813  652  367  692   10  619  935   805 #>  [277,]  624  626  252  156  182  235  606  674  194   584 #>  [278,]  416  956  677  305  355  481  271  572  599   343 #>  [279,]  408  631  713  668  251  614  620  243  185   194 #>  [280,]  189  337  788  901  888  885   18  881  630   481 #>  [281,]  314  807   80  684  487    6  507  991  249   485 #>  [282,]  565  477  675  971   20  546   38  994  212    89 #>  [283,]  573  454  528   75  793  317  293  508  329   706 #>  [284,]  231  322  733  911  459   22  754  103  945   939 #>  [285,]  824  462   55  390  838  489  525  234  864   662 #>  [286,]  724   49  883  159  239  231  785  691  289   533 #>  [287,]  735  229  941  833  690  205  731  110  931   254 #>  [288,]  623  264  466  803   92  687  214  778  422   905 #>  [289,]  469  691  670   49  264  778  423   21  724   803 #>  [290,]  610  190  256  767  649  414  491  664  558   579 #>  [291,]  125  773  747  590  527  360   57  332  641   711 #>  [292,]  204  419  318  406  795  545  951  362  613   395 #>  [293,]  793  865  706  787  732  892  508  710   63    89 #>  [294,]  224  201  570  253  771  719  821  485  728   996 #>  [295,]  349  856  968  100  160  169  515  647  174   921 #>  [296,]  454   42  317  867    3  539   75  733   22   940 #>  [297,]  582  560  179  490  564  320  973  529  896   455 #>  [298,]  588  464  828   74  965  988   83  943   58   504 #>  [299,]  925  862  353   59  880  350  229   44   62   187 #>  [300,]  993  458  997  514  107  967  440  507  409   144 #>  [301,]  552  555  814  254  829   17  931  946  536   176 #>  [302,]  199  138  137  674  693  482  955  462  403   156 #>  [303,]  745  641  983  561  645  332  608  426  493   928 #>  [304,]  858   61  615  311  828  400  899  386  221   894 #>  [305,]  158   33  572  278  343  769   95  806  433   931 #>  [306,]  228  353  862  731  833  880  229  191  271   569 #>  [307,]   43  559  153  564  894  179  529   26  248   949 #>  [308,]  334  843  774  165  978  258  467  839  908   557 #>  [309,]  177  331  859  161  838  830  528  183  850   662 #>  [310,]  594  373  757  163  890  566  452   66  616   268 #>  [311,]  615  400  899  828   90  861  304  876  942   858 #>  [312,]  888  772  421  881  511  779  189  206  713   345 #>  [313,]  178  119  924  399  443  410  794    9   12   511 #>  [314,]  281  487  112   80  991  807  249   70  135   684 #>  [315,]  790  475  977  784   97   85  260  517  658   959 #>  [316,]  522  206  467  471  169  421  345  541  557   856 #>  [317,]  940  454   42  706  296  867  508  715   75   329 #>  [318,]  383  395  613  115  363   15  200  140  543   951 #>  [319,]  727  105  809   67    7  275  922  127  497   442 #>  [320,]  490  997  874  582  333  297  829  458  755   314 #>  [321,]  495  758   45  656  149  448  387  418  842   436 #>  [322,]  284  733   22  749  911  238  330   52  103   144 #>  [323,]  486  820  438  118  549  896  818  947  455   611 #>  [324,]  207   40  351  102   37  212  748  740  836    93 #>  [325,]  711  590  448  527  193  291  495   12  758   399 #>  [326,]  141  447  559  949  117  983  439  152  370   428 #>  [327,]  527  463   54    5  660   12  476  175  391   114 #>  [328,]  628   28  579  544  776  774  721  900  516   901 #>  [329,]  819  136  508  867  509  940    2  317  926   573 #>  [330,]  507  684   52  911  549  553  807  144  834   947 #>  [331,]  501  309  177  605  496  602  347  121  959   457 #>  [332,]  641  627  656  397  387  842  561  303  519   645 #>  [333,]   14  113  997  112  320  755  213   66  738   232 #>  [334,]  308  843  774  839  165  978  467  258  962   245 #>  [335,]  151  981  697  250  764  234  682  470  823   844 #>  [336,]  601  823  783  718  470  171   76  676  653   237 #>  [337,]  576  481  984  885  378  266  242  359  788   952 #>  [338,]   68  128  566  358  274  157  612  717  730   218 #>  [339,]  878  460  436  633  259  444  517  596  372   219 #>  [340,]  987   19  472  147  896  461  146  455  820   560 #>  [341,]  389   99  428  916  608  883  714  785  533   671 #>  [342,]  347  675  140  395  479  639  124  994  587   115 #>  [343,]   25  585  271  175  216  524  360  257  355   909 #>  [344,]  607  159  648  990    8   46  556  913   87   939 #>  [345,]  765  934  246  936  906  835  772  206  316   522 #>  [346,]  451  192  536  635   17  125  747  108  923   741 #>  [347,]  140  639  342  675  124  115  395   38  283   994 #>  [348,]  840  438  756  456  220  513  238  118  822   492 #>  [349,]  100  160  295  856  169  968   57  515  647   933 #>  [350,]  187   62  299  668  194  925  562  416  379   355 #>  [351,]  102   40  482  548  324  789  748   37  836   212 #>  [352,]  268  938  679  779  186   24   48  660  703   889 #>  [353,]  862  299  569  271  520  306   59  880  826   617 #>  [354,]  980  153  223   60  429  737  307  263  439   825 #>  [355,]   62  271  585  416  524  216  617   25  187   520 #>  [356,]  567  923  635  741  812   11  998  181  451   135 #>  [357,]  694  124  832  543  140   15  775  831  913   857 #>  [358,]  717  274  338  157  128  566  997  991  218   262 #>  [359,]  915  259  583  261  242  952  576  337  418    33 #>  [360,]  518   98  139  773   57  753  869   25  847   291 #>  [361,]  682  864  489  771   55  581  234  697  728   224 #>  [362,]  204  659   32  613  386  705  292  532    7   318 #>  [363,]  863   15  318  200    7  945  115  634  832   383 #>  [364,]  737   60  227  111  670  703  686  798  593   766 #>  [365,]  230  866  853  776  846  371  516  640  696   424 #>  [366,]  780  944  412  921  409  174   50  968  107   515 #>  [367,]  619  183    1  540  478  813  406  570  692   376 #>  [368,]  556  607    8  648  344  795  204  362  848   990 #>  [369,]  877  394  243  272  796  804  551  849  209   575 #>  [370,]  641  141  193  983  166  303  608  426  332   645 #>  [371,]  696  776  436  339  460  810  424  633  974   900 #>  [372,]  878  753   65  139  518  381  847  215  596   933 #>  [373,]  458  310  566  594   66  967  186   23  382   679 #>  [374,]  618  689  749  238  822  830   22  912  827   860 #>  [375,]  118  155  458  512  874  514   52  300  820   486 #>  [376,]  478  589  528   75  539  964  540  793  454   992 #>  [377,]   89  267  380  508   37  596  836   65  293    93 #>  [378,]  444  984  729  219  885  258  266  657  576   541 #>  [379,]  562  599  917  350  416  187   62  783  792   668 #>  [380,]  811  503  267  377  680  847   65   89  247   621 #>  [381,]  847  247  786  878   98  139  955  518  372   669 #>  [382,]   24   23  547  841  651  967  172  594  373   273 #>  [383,]  613  115  318  200  395  675   15  851  565   140 #>  [384,]  929  242  915  718  583  259  974  646  786   653 #>  [385,]  450  457  501  602  479   10  276  619  195   873 #>  [386,]   32  311  400  362  899  304  879  615  204   858 #>  [387,]  627  149  332  656   45  561  123  842  397   758 #>  [388,]  500  176  707  552  453  555  661  110  898   726 #>  [389,]   99  671  341  423  428  608  533  629  883   111 #>  [390,]  252  693  156  824  126  210  235  517  624   462 #>  [391,]   54    5  660  463  412  928  921  366  944   906 #>  [392,]  655  976  816  850  972  475  859  632  958   188 #>  [393,]    3  722   42  296   22  454  867  488  539   632 #>  [394,]  877   72  209  369  575  796  506  240  133   272 #>  [395,]  318  543  140  115  383  951  363  342  613    15 #>  [396,]  157  755  113  903  609  717  274  358   68   333 #>  [397,]  519  332  503  530  561  627  641  387  645   303 #>  [398,]  174  101  968  226  921  780  295  366  515   520 #>  [399,]  711  325  269  158  119  965  590  773  988   464 #>  [400,]  311  828  233  615  858  304  386   32  943    90 #>  [401,]  531  104  453  723  886  688  726  130  603   661 #>  [402,]  751  568  502  646  669   84  943  106  806   786 #>  [403,]  137  138  205  244  969  982  199   30  229   302 #>  [404,]  171  225  537  799  260  636  676  601  720   336 #>  [405,]  120  743  581  506  170  584  586  730  133   992 #>  [406,]  195  545  367  276  692  619  813  851    1   787 #>  [407,]  710  759  787   63  719  821  732  996  865   570 #>  [408,]  620  713  279  665  202  668  116  630  189   595 #>  [409,]  107  967  412  944  366  186   23  593  780    24 #>  [410,]  598  193  370  924  326  141  178  904   56   983 #>  [411,]  769  808   78  305   95  571  175  158   12   399 #>  [412,]  944  366  107  780  409  391  921  967  593   214 #>  [413,]  597  690  806  433  956  970  677  572  931   305 #>  [414,]  558  936  441  246  698  649  197  664  534   544 #>  [415,]  919  685  817  461  532  754  922  231  975   920 #>  [416,]   62  355  350  271  833  562  925  677  229   353 #>  [417,]  591  893  709  574  468  857  664  698  197   203 #>  [418,]  952  436  541  448  321  495   57  216  160   349 #>  [419,]  292  795  406  450  951  545  619  891  236   276 #>  [420,]  642  837   76  211  237  718   53  789  658   470 #>  [421,]  888  522  206  316  772  345  467  839  169   628 #>  [422,]  778  803  750  264  288  494  722  466   13   905 #>  [423,]  671   99  389  111  533  629  289  341  670   778 #>  [424,]  580  574  784  900  846  371  739  893  640   460 #>  [425,]  914   90  523  899  781  627  736  842  704   942 #>  [426,]  928  906  656  303  983  193   54  332    5   641 #>  [427,]   72  506  662  743  712  838  446  797  161   394 #>  [428,]  608  341  389  983  447  928  370  141   99    56 #>  [429,]  263   82   60  560  512  737  248  155  514   700 #>  [430,]  797  830  954  161  672  374  992  236  492   912 #>  [431,]  207  748  407  710   93  324  465  294   37   253 #>  [432,]  754  848  231  286  724  939   49  284    4   817 #>  [433,]  690  931  597  572  806   33  552  158  106   413 #>  [434,]    9   64  523   56  141  914  370   86  425   410 #>  [435,]  212  789   40  994  639   38  324  351  587   282 #>  [436,]  418  696  339  541  952  321  371  878  557   471 #>  [437,]  917  336  379  823  601  676  562  599  783   537 #>  [438,]  456  323  118  486  238  220  348  148  818   549 #>  [439,]  798  114  737  326   60  447  598  983  559   364 #>  [440,]  993  998  181   21  567  920  521  882  356   135 #>  [441,]  936  246  414  534  467  544  698  835  471   345 #>  [442,]  493  469  809  561  819  136  905  940  466   329 #>  [443,]  122   74  399  261   90  768  464  495  758   711 #>  [444,]  378  219  729  984  625  657  339  878  783   952 #>  [445,]  725  270  872  678  228  792  595  191  599   116 #>  [446,]  782  171  712  225  427  676  260  662  285   496 #>  [447,]  983  326  152  428  608  141  883  785  484   559 #>  [448,]  656   57  590  495  325  193  426  321  758   527 #>  [449,]  166  197   86  608  645  389   92  341  835   428 #>  [450,]  619  177  236  367  501  183  385  331  602   406 #>  [451,]  923  635  741   17  127   11  752  356  621   536 #>  [452,]  594  268  310   16  890   48  382  352   24   163 #>  [453,]  723  661  726  176  531  707  401  886  603   104 #>  [454,]  296  317   42  573  283  867   75  528  539     3 #>  [455,]  973  490  654  820  896    6  611  297  320   800 #>  [456,]  220  238  438  330  947  513  118  618  749   323 #>  [457,]  602  501  121  331  605  496  959  782  385   868 #>  [458,]  997  874  300  320  373  375  566  118  490   218 #>  [459,]  945   13  863   87  905  634  284  733  778   867 #>  [460,]  633  596  134  339  926   38  784  126  509   893 #>  [461,]  975  415  919  683  817  472  486   19  891   848 #>  [462,]  482  489  102  748  235  836  964  138  253   224 #>  [463,]   54  391  906  327  206    5  426  100  921   527 #>  [464,]  588  988   90  704  965  399  298  828   74   132 #>  [465,]  748  728  431  489  234  207  102  224  697   462 #>  [466,]  905  264  288  803  778  136  775  469  442    13 #>  [467,]  522  316  839  245  774  441  557  334  308   856 #>  [468,]  701  131  591  634   87  857  417  986  775   989 #>  [469,]  264  442  493  867  289  905  803  940  466   196 #>  [470,]  653  211  237  982  823  969  302  783  601   151 #>  [471,]  835  316  544  557   92  246  516  721  441   936 #>  [472,]  817  461    4   19  532  705  415  919  153   564 #>  [473,]  765  934  345  906  904   86   54  686  924   928 #>  [474,]  505   31  600 1000  860  827   34  762  852   689 #>  [475,]  315  972  977  908  580   85  859  850  739   784 #>  [476,]  173  327  660   12  213  175  114    5   78   527 #>  [477,]  282   20  971  565  546   89  942  675  876   124 #>  [478,]  376  589  992   75  528  540  581  964  525    55 #>  [479,]  587  643  342   10  960  868  435  501  675   347 #>  [480,]   29  918  586  612  128  792   68  577  966   338 #>  [481,]  576  337  278  202  984  788  242  917  189   266 #>  [482,]  955  102  548  462  247  351  138   37   93   748 #>  [483,]  130  943  164  886  531  401  603  176  746   740 #>  [484,]  785  714  152  883  745  608  447  916  341   791 #>  [485,]  201  666   80  224  650  578  752  771  821   294 #>  [486,]  323  896  820  919  118  146   19  438  549   375 #>  [487,]  314  112  254  991   80  281  510  578   50    70 #>  [488,]  804  632  622    3  796  210  208  626   42   272 #>  [489,]  234  864  462  224  138  361  748   55  465   728 #>  [490,]  320  874  997  455  297  582  820  755  458   829 #>  [491,]  246  544  934   86  414  936  765  767  516   441 #>  [492,]  513  148  912  456  238  374  618  170  822   699 #>  [493,]  442  214  469   21  303  561  264  535  933   645 #>  [494,]  709   31  989  722  422  986  203  701  778   591 #>  [495,]  758  321   45  656  590  842  448  149  387   332 #>  [496,]  959  121  782  790  658  837  331   47  501   784 #>  [497,]    7  990  831   15  319  939  832  775  809   484 #>  [498,]  907  746  995   51  483  844  130  943   84   604 #>  [499,]  162  167  145  777  898  110  500   77  903   609 #>  [500,]  388  898  707  609  499  110  555  167  829   162 #>  [501,]  331  177  602  457  873  450  496  121  347   525 #>  [502,]  669  982  106  786  402  751  403  548  806   646 #>  [503,]  380  811  519  397  139  847  933  149  854   753 #>  [504,]  751   74  402  568  261  768   84  269  943   806 #>  [505,]  860  762  852   69   22  827  750  651  172   393 #>  [506,]  133   72  209  575  394  161  405  743  584   427 #>  [507,]  807  330  549  684   52  249  135  281  834   947 #>  [508,]  706  940  819  329  317  892  793  999  377   293 #>  [509,]  926    2  136  329  134  819  985  126  123   573 #>  [510,]  637  869  578   30  909  811  621  536  680   254 #>  [511,]  924  870  904  888  881  178  598  463   54   473 #>  [512,]  155  514  375  227  186  700  300  882  458   297 #>  [513,]  492  148  456  699  170  912  220  120  438   238 #>  [514,]  882  512  993  300  297  375  179  227  440   920 #>  [515,]  968  295  780  854  100  957  349  856   50   160 #>  [516,]  866  544  471  628  776  934  321   86  230   436 #>  [517,]  720  824  693   85  219  390  252  339  237   977 #>  [518,]  139   98  753  847  360  869  381  878  372   503 #>  [519,]  397  503  747  332  530  108  380  627  149   811 #>  [520,]  826  617  569  526   44  198  353  271  257   398 #>  [521,]   70  249  181   50  135  440  999  741  998   356 #>  [522,]  316  206  169  467  839  421  647  856  541   295 #>  [523,]  914  141  781  791  425  370  645  152  608   484 #>  [524,]  585  215   25  216  625  753  952  518  957   869 #>  [525,]  873  581  255  805  478  992  838   55  376   285 #>  [526,]  826  738  617  520   44  198  569  595  889   226 #>  [527,]  327   12  291  325  193  463   54  426  448     5 #>  [528,]   75  376  589  283  454  793  478  964  183   573 #>  [529,]  582   26  564  179  297  192  973  654  232   635 #>  [530,]  397  971  519  127  876  745  108   67  747   809 #>  [531,]  886  401  453  603  130  104  176  723  726   661 #>  [532,]  705  415  685  564  105  275  812  932  727   919 #>  [533,]   99  423  389  111  671  341  629  742  159   883 #>  [534,]   27  750  852  441  208  734  762  422  638    69 #>  [535,]  933  667  623  214  160  123  687  856  100    65 #>  [536,]  621   17  752  451  637  510   30  578  346   254 #>  [537,]  404  225  676  743  171  427  673   72  154   446 #>  [538,]  201  771  150  485  650  947  294  800  666   281 #>  [539,]    3  589  210   42  296  454  376  133  553   161 #>  [540,]  912  478  376   75  367  183  996  528  148   589 #>  [541,]  647  169  418  952  216  349  160  522  206   295 #>  [542,]  999  578  892  680  695  666  235   30  156    70 #>  [543,]  395  760  357  951  694  913  140  318  124    15 #>  [544,]  471  698  516  246  441  628  936  579  664   721 #>  [545,]  406  891  683  363    7  922  733  863  939   754 #>  [546,]  942   20  282  477  702  768  265  108  261   971 #>  [547,]  172   23  967  196   24  841  382  107  409   766 #>  [548,]  247   93  482   37  550  351  102  740  748   267 #>  [549,]  947  507  807    6  184  330  323  973  281   834 #>  [550,]  265  548   93  247  267  740   37  207  621   164 #>  [551,]  910  638  849  804  272  369  841  796   39   632 #>  [552,]  301  946  814  176  931  388  690  433  555   644 #>  [553,]  895  871  684  715  589   42  330  666  317   539 #>  [554,]  965   78  158  988   95  217  132   73   26   814 #>  [555,]  829  654  301  707  609  661  726  254   17   898 #>  [556,]  607  648  344  368    8  990  939  159  791   497 #>  [557,]  687  721  667  623  856  471  160  467  316   908 #>  [558,]  414  422  494  197  698  649  664  778  709   936 #>  [559,]  681  949  117  326  152  447   43  307  798   983 #>  [560,]  297   19  896  564  248  263  582  179  820   490 #>  [561,]  645  627  166  303  332  397  387  745  641   442 #>  [562,]  599  379  350  416  917  925  677   62  187   299 #>  [563,]  168  655  392  188  638  910  958  734   27   143 #>  [564,]  529  297  560  179   19  973  582  812  532   307 #>  [565,]  282  675  876  971  477  861  115   89  383   200 #>  [566,]  338  157  358  458  815   68  218  757  128   373 #>  [567,]  356  635  923  812  998  181  741  440   11   135 #>  [568,]   84  402  768  646   36  943  546   74  212   751 #>  [569,]  520  617  198  271  353  826  257  526  112    44 #>  [570,]  996  294  692    1  719  407  787  184  710   865 #>  [571,]  175  257   95  678  271  569  343  769  617    78 #>  [572,]  931  690  244  806   33  433  597  637  287   403 #>  [573,]  283  454    2  859  329  136  850  509  528   296 #>  [574,]  900  203  591  417  893  709  580  424  985   972 #>  [575,]  209  394  937  506   72  369  240  133  272   877 #>  [576,]  242  337  378  481  984  444  259  729  974   219 #>  [577,]  743  480  405  361  777   29  764  682  120   586 #>  [578,]   80  621  680  999  510  542   30  752  741   892 #>  [579,]  698  900  664  721  544  709  574  203  328   972 #>  [580,]  739  784  424  857  574  985  475  972  591   203 #>  [581,]   55  525  992  478  838  170  255  405  805   361 #>  [582,]  297  320  529  232  179  490  829  973   14   654 #>  [583,]  702  259  261  786  915  646  359  929  381   669 #>  [584,]  606  730  133  262  815  586  871  553  277   218 #>  [585,]  524   25  215  216  625  355  343  952  753   518 #>  [586,]  154  743  606  584  730  918  277  624  128   612 #>  [587,]  479  960  435  643  342   40  324  212  868   675 #>  [588,]  464  988  965  298  828   74  399   73  269    90 #>  [589,]  376   75  528  539  478  871  964  553  454   838 #>  [590,]  193  842  758  656  325  448  495  291  641   332 #>  [591,]  203  857  709  417  468  701  985  986  574   739 #>  [592,]  696  901  516  230  810  280  628  866  436   337 #>  [593,]  766  670  107  227  409  412  691  993  944   967 #>  [594,]  310  452  373  382  890  757  268   96  163   841 #>  [595,]  617  526  116  520  826  569   44  257  665   353 #>  [596,]  134  460  126  633   65  926  377  372  955   509 #>  [597,]  806  690  433  106  572  413  931   33  751   982 #>  [598,]  410   12  193   54  114  527  928  983  798   119 #>  [599,]  562  379  917  416  350  792  677  872  228   925 #>  [600,] 1000  770  474  344  860   31  724  159  432   505 #>  [601,]  336  823  783  470  676  171  237  653  219    76 #>  [602,]  457  501  331  605  450  342  121  868  479   177 #>  [603,]  886  130  176  531  104  453  192  401  726   221 #>  [604,]  844  970  981  335  956  151  982  677  106   250 #>  [605,]  331  602  309  177  457  501  954  496  712   121 #>  [606,]  262  730  584  586  991  128  218  650  277   815 #>  [607,]  556  648  344  990    8  791   46  159  781   497 #>  [608,]  428  303  645  166  983  389  745  341  447   370 #>  [609,]  829  555   77  717  755  898  162  490  358   500 #>  [610,]  190  290  664  579  197  414  698  558   71   491 #>  [611,]  800   77  818  455  898  707  947  549  323     6 #>  [612,]  128  730  262  338  606  358   68  586  717   815 #>  [613,]  383  318  115  200   15  861  851  395  565   876 #>  [614,]  636  978  266  843  799  258  378  308  334   729 #>  [615,]  311  858  828  861  304  400  876  530   73   899 #>  [616,]  757  163  966  937   68  566  338  730  128   815 #>  [617,]  520  569  257  526  826  198  271   44  595   101 #>  [618,]  749  238  374  822   22  456  539  240  322   689 #>  [619,]  367  183  450  177  236  406  540    1  478   912 #>  [620,]  408  665  202  116  713  595  630  189  101   355 #>  [621,]  680  578   30  536  752  510  999   93  267   451 #>  [622,]  626  109  488  165  252  208  515  856  804   185 #>  [623,]  687  667  288  535  214   92  933  856  557   819 #>  [624,]  277  235  252  156  626   55  390  606  674   584 #>  [625,]  215  199  585  524  137  674  878  753  444   653 #>  [626,]  622  252  277  182  109  185  156  957  165   488 #>  [627,]  387  332  561  842   45  645  641  914  397   149 #>  [628,]  544  316  471  328  516  436  776  774  421   522 #>  [629,]  671  423  389  111   99  936  533  428  473   246 #>  [630,]  202  189  984  788  885  647  216  541  169   101 #>  [631,]  279  713  251  241  802  614  408  849   16   334 #>  [632,]  488  850  210  816  208  804  722  908  393   859 #>  [633,]  460  596   38  339  784  134  639  955  381   702 #>  [634,]   87  775   13  945  701  863  468  459  905   131 #>  [635,]  923  356  741  567  451   11  812   17  127   135 #>  [636,]  614  266  799  978  729  378  843  404  885   720 #>  [637,]  909  510  869  254   30  536  244  360  205   578 #>  [638,]  910  168  551   27  852  816  534  750  762   849 #>  [639,]   38  347  994  435   47  789  351  675  633   784 #>  [640,]  994  846  633   47   38  460   20  639  424   784 #>  [641,]  332  303  370  842  627  561  645  656  397   745 #>  [642,]  420   76  837  211   53  151  789  237  718   470 #>  [643,]  479  587  342  879  960   32  675  383  868   435 #>  [644,]  946  217  552  814   58  301  554  763   26    94 #>  [645,]  561  166  303  627  745  608  332  641  914   397 #>  [646,]  786  669  702  402  502  789  212  568  583   381 #>  [647,]  169  541  295  349  160  856  165  216  968   174 #>  [648,]  607  556  344  791   46  714  239  916  781   159 #>  [649,]  414  558  629  533  423  936  111  671  256   246 #>  [650,]  666  201  771  485  880  224  606  262  991   235 #>  [651,]  841   39  172  382  551  272  849  547  804   796 #>  [652,]  276  950  744  805  255  236  935  195  148   406 #>  [653,]  783  470  199  219  625  982  403  302  969   444 #>  [654,]  707    6  973  555  829  455  726   17  800   582 #>  [655,]  392  976  816  972  722  850  852   31  908   475 #>  [656,]  332  448  387  590  426   57  495  758  641    45 #>  [657,]  674  182  187   62  199  258  194  783  625   444 #>  [658,]  959  837   47  790  121  496  784  315  782   868 #>  [659,]  688  104  613  759  275  851  362  705  105   861 #>  [660,]  391   54    5  779  327  114  463  703  476   938 #>  [661,]  723  726  453  707  110  176  898  752  735   555 #>  [662,]  838  712   72  210  427  285  161  977  859   390 #>  [663,]  927  840  827  492  348  822  148  689  374   513 #>  [664,]  698  197  417  579  709  574  900  558  203   414 #>  [665,]  116  620  595  979  101  408  889  526  617   713 #>  [666,]  485  201  650  871  235  224  542   80  771   684 #>  [667,]  623  687  535  933  819  126  856  160  557   134 #>  [668,]  194  187  918  350   62  182  185   44   29   657 #>  [669,]  786  502  646  381  247  548  982  915  244   550 #>  [670,]  593  766  107  993  882   21  289  440  412   227 #>  [671,]  423  389  629   99  111  533  341   92  289   428 #>  [672,]  830  797  161  240  209  374  430   39  392   575 #>  [673,]  260  188  712  958   72  537  427  977  394   877 #>  [674,]  657  182  199   62  187  215  625  194  302   252 #>  [675,]  565  115  124  140  282  383  347  639  477   342 #>  [676,]  823  171  601   76  225  151  336  446  537   404 #>  [677,]  416  833  731  278  413  982  956  597  970   562 #>  [678,]  571  725  872  445  175  595  875  257  808   228 #>  [679,]  938  186  268  227  409   66  889  967  352    24 #>  [680,]  999  621  578  892   67  741  542  811  380   127 #>  [681,]  117  559  152  745  983  949  303  641  447   291 #>  [682,]  361  697  864  489  234  581  728  764  465    55 #>  [683,]  891  975  545  461  848  406  415  754  685   919 #>  [684,]  553  895  715   70  330  507  249  281  218   871 #>  [685,]  922  415  275  105  834  727  919  973  812   184 #>  [686,]  473  703  364  629  660  772  765  111  391    54 #>  [687,]  623  667  557  288  535  856  214  208   92   160 #>  [688,]  104  659  401  932  692  705  195  531  759   407 #>  [689,]  374   34  860  827   22  618  322  912  749   238 #>  [690,]  931  433  572  597  287  806  413  106  552   244 #>  [691,]  103   49  289  724  144  593  670  911  766   196 #>  [692,]  813    1  570  851  407  787  195  710  996    10 #>  [693,]  252  390  517  156  824  126  720  955  302   199 #>  [694,]  357  913  831  832  124   15  543  775  634   468 #>  [695,]  957  156  542  869  215  137  753  252  510    65 #>  [696,]  371  436  339  776  810  974  418  321  460   583 #>  [697,]  682  728  361  465  335  234  489  764  250   864 #>  [698,]  664  709  579  197  417  544  721  900  414   574 #>  [699,]  170  150  120  947  805  255  478  513  538   570 #>  [700,]  113  755  155  512  490  333  320  874  820    14 #>  [701,]  131  468  591  989  986  634  857   87  203   494 #>  [702,]  583  261  646  786  546  381  633   20  259   669 #>  [703,]  660  686  364  798  737  114  439  476  173    54 #>  [704,]  117  949  141  119   90  988  681  641  464   559 #>  [705,]  532  932  688  659  104  472  716  221  603   461 #>  [706,]  793  892  940  317  508  293   75  999  865   964 #>  [707,]  726  654  723  898  661  800  453  555  388   932 #>  [708,]  697  250  401  941  728  110  531  935  735   145 #>  [709,]  203  591  985  494  417  698  574  972  900   986 #>  [710,]  407  787  759  851    1   63  865  732  996   293 #>  [711,]  325  399  590  291  773  527   12  360  119   269 #>  [712,]  662  260  427  977  446   72  782  392  673   309 #>  [713,]  408  620  189  665  279  630  116  202  979   761 #>  [714,]  916  785  883  484  341  791  825  447  239    99 #>  [715,]  895   70  684  871   42  553  317  940  706     3 #>  [716,]  221  894   26  705  564  858  147  532  529   307 #>  [717,]  274  358  880  862  338  157  128  612  609   162 #>  [718,]  336  384  601   76  420  242  823  470  237   974 #>  [719,]  821  184  407  996   63  570  294    6  732   710 #>  [720,]  517  824  693  219  225   85  657  729  799   252 #>  [721,]  557  908  687  774  698  900  709  471  208   816 #>  [722,]  393  816  976  850  208  494  985  750  632   422 #>  [723,]  726  661  453  707  898  176  719  752  800   654 #>  [724,]   49  691  286  231  289  103  284  159  754   144 #>  [725,]  445  678  116  872  595  620  665  792  571   270 #>  [726,]  723  661  453  707  654  176  752  719  898   821 #>  [727,]  105  275  127  319   67   11  812  732  922   923 #>  [728,]  224  771  294  465  941  489  735  201  697   485 #>  [729,]  378  444  219  720  974  636  517  799  783   984 #>  [730,]  262  128  612  815  606  584  218  586  338   566 #>  [731,]  833  229  306  191  287  925  862  228  677   416 #>  [732,]   63  759  127   67  821   11  407  727  865   710 #>  [733,]  284  296  911  322  867  922  834  459  317   454 #>  [734,]   27  534  143  962  168  441  852  414  638    69 #>  [735,]  110  941  287  167  728  661  229  833  731   723 #>  [736,]  425  781  899  694  914  831  853  222  129   879 #>  [737,]   60  364  798  439  114  882  263  703  227   447 #>  [738,]  526  889  826  198  226   66  213  186  520   617 #>  [739,]  580  857  591  203  985  972  701  574    2   986 #>  [740,]   40  212  207  548  550  324  351   93   37   748 #>  [741,]  923  635  356   11  451   67  567  680  127   999 #>  [742,]  142  533  111   99  239  286  423  883  341   649 #>  [743,]  586  154  405  506   72  584  966  427  624   877 #>  [744,]  255  805  950  170  120  699  873  525  935   581 #>  [745,]  152  303  645  561  641  608  530  397  117   484 #>  [746,]  130  907  483  498  995  886  531  603   51   176 #>  [747,]  108  773  519  291  346  125  397  530  332   842 #>  [748,]  102  836  207  465  462   93  431   37  548   351 #>  [749,]  618   22  238  330  322    3  296   42  539   144 #>  [750,]  422  762  534  852  273  208   69  722  803   172 #>  [751,]  402  806   33  502  597  106  669  504  915   982 #>  [752,]   80   17  578  621  536  451  821  485  680   741 #>  [753,]  139  518  372  869  878   98  215  847  360   811 #>  [754,]  231  284  432  415  322  975  848  919   49   939 #>  [755,]  113  157  490  320  997  333  874  700  396   358 #>  [756,]  801  348  323  438  840  513  118  820   77   456 #>  [757,]  616  163  937  566  815  310  594  338  730    68 #>  [758,]  495  842  321   45  590  149  656  387  332   448 #>  [759,]  407  732  710   63  275  787  865  851  727   105 #>  [760,]  543  129  913  694  395  357  795  951  124   131 #>  [761,]  979  245  839  109  961   24  243  849  185   226 #>  [762,]  852  750   69  505  422  534  638   31  393   494 #>  [763,]  963  191  946  270  413  552  644  731  814   306 #>  [764,]  969  361  777  335  925  697  864  682  145   151 #>  [765,]  473  934  345  904   86  906  246  772  936   870 #>  [766,]  593  227  107  670  409  967  691  547  412    23 #>  [767,]  491  649  256  414   64  629  246  290  765    86 #>  [768,]  122  261  568   74  546  942  222  702   84    36 #>  [769,]  411  175   12  343  711  571  325  305   78   527 #>  [770,]  600 1000  432  344    8  368  939  990  474    34 #>  [771,]  201  150  224  538  650  294  485  728  666   361 #>  [772,]  345  421  765  888  473  934  206  246  312   522 #>  [773,]  747  360  291   98  108  269  125  518  847   519 #>  [774,]  308  843  334  962  467  721  978  908  557   165 #>  [775,]  832  634  905  809  466   87   15   13  136   357 #>  [776,]  371  900  696  866  574  516  436  544  424   893 #>  [777,]  162  145  499  167  903  764  717  612  925   110 #>  [778,]  803  422  264  905   13  466  288  469  459   289 #>  [779,]  660  938  921  979  391  174  352  101  881   679 #>  [780,]  366  944  412  515  921  968   50  174  398   295 #>  [781,]  899  791  523  831   46  914  425  484  736   497 #>  [782,]  959  496  121  446  790  285  837  658  712   331 #>  [783,]  653  219  657  601  444  199  336  470  674   625 #>  [784,]   47  790  580  633  460  315  424  639  658    38 #>  [785,]  883  484  714  447  916  341   99  825  608   389 #>  [786,]  669  381  646  259  247  502  847  915  702   955 #>  [787,]  710  865  407  851    1  996  759  293  570   692 #>  [788,]  881  202  189  630  216  175  984  355  257   769 #>  [789,]  435   40  351  639   38  212  646  837  211    47 #>  [790,]  959  315  784  496  658  837  782  824   47   517 #>  [791,]  916  781  523  714   46  484  341  785  141   883 #>  [792,]  599   29  562  350  480  379  445  668  228   595 #>  [793,]  706   75  964  253  293  865  508  892  528   317 #>  [794,]  132  949  119  704   61  223  988  894  464   559 #>  [795,]  951    8  760  543  292  204  395  419  913   318 #>  [796,]  272  804  369  240  488  394  841  209  133     3 #>  [797,]  830  430  161  672  954  506  992  309  209   427 #>  [798,]  114  439  737   60  983  559    5  598  447    54 #>  [799,]  977  720  636   85  978  729  517  843  260   614 #>  [800,]  611    6  707  898  538  654  719  455   77   723 #>  [801,]  756  840  348  987  438  323  146  820  927   486 #>  [802,]  241  631  575  849  937   16  369  966   39   673 #>  [803,]  264  778  422  288  905  466  469   13  136   867 #>  [804,]  796  272  488  172  841  240    3  369  551   632 #>  [805,]  255  170  744  525  935  699  581  478  120   873 #>  [806,]  597   33  751  572  106  433  690  244  982   931 #>  [807,]  135  507  249    6  281  973  834  549  314   684 #>  [808,]   78   95  411  571  678  769  554  946  875   158 #>  [809,]  832   89  442  319  775  200   15  971   67   876 #>  [810,]  696  371  974   28  776  436  948  339  328   592 #>  [811,]  380  503  854  869  510  753  680   65  847   999 #>  [812,]  356  567  635  923  727   11  920  741  105   127 #>  [813,]  692    1  195   10  851  570  787  710  367   407 #>  [814,]  946  301  552  829   14  555  644  529  582    95 #>  [815,]  218  730  262  584  606  566  128  220   96   757 #>  [816,]  908  632  208  722  655  958  850  910  976   721 #>  [817,]  919  415  248   19  461  146  472   79  896   754 #>  [818,]  611  947  800  323  699  549   77  438  184   884 #>  [819,]  329  508  136  940  667  509   65  867  126   933 #>  [820,]  896  323  486  455  490  118  874   19  375   320 #>  [821,]  719   63  184  732  407  996  752   80  485     6 #>  [822,]  618  238  374  749   39  456  827  240  220   348 #>  [823,]  601  336  151  470  676   76  783  237  653   171 #>  [824,]  517  693  390  720  285  237  302  252  955   790 #>  [825,]  239  714  883  785  916  286   43  484  447    60 #>  [826,]  520  526   44  617  569  198  226  738  991   398 #>  [827,]  689  860  374  822  505  618   91  663  238    22 #>  [828,]  400  615  311   73  858  588  464  304  221   233 #>  [829,]  555  654  609  582  320  301  490  814   14   455 #>  [830,]  672  161  797  430  374  240  309  209  539   992 #>  [831,]  694  832  497   15  781  899  775  357  809   913 #>  [832,]  809   15  775  357  831  200  115  124   89   694 #>  [833,]  731  229  287  925  306   59  416  862  969   677 #>  [834,]  135  922   11  184  249  807  865  892  996   507 #>  [835,]   92  906  471  936  345  623  214  288  246   166 #>  [836,]  102  253  748   37   93  462  964  793  377   293 #>  [837,]  658  790  420  789   47  959  496  237  211   784 #>  [838,]  210  589  662   55  992  581  539  161  376   525 #>  [839,]  245  979  761  467  522  334  109  169  165   647 #>  [840,]  927  348  438  663  801  148  456  756  827   238 #>  [841,]  172  272  651  804  796  547   23  551  382   849 #>  [842,]   45  758  627  332  641  590  495  387  656   519 #>  [843,]  308  978  334  774  165  258  885  799  839   467 #>  [844,]  604  250  981  335  995   51  708  845  953   941 #>  [845,]  250  844  335  981  708  907  642  604  697   151 #>  [846,]  893  640   20  460  853  424  417  574  123   134 #>  [847,]   98  518  139  381  247  753  503  380  811   360 #>  [848,]  891    4  975  683  754  415  432  461  545   817 #>  [849,]  551  243  369  841  910  651  961  761  272   245 #>  [850,]  859  632  976  573  722  210    2  393  816   454 #>  [851,]  787  710    1  692  759  407  813  383  865   200 #>  [852,]  762  750  534  638  722  168   27   31  494   422 #>  [853,]  846  640  736  893  424  124  129  357  694   994 #>  [854,]  811  515  933  869  100  503   50  521  753   510 #>  [855,]   97  260  188  799   28  315  977  636  404   475 #>  [856,]  295  160  349  100  169  515  214  667  687   968 #>  [857,]  591  739  985  701    2  468  580  203  417   509 #>  [858,]  304  615   61  221  828  311  894   73  716    26 #>  [859,]  850  573  976    2  210  632  985  722  454   283 #>  [860,]   22  505  689  827  284  374  749   31  322   762 #>  [861,]  876  971  565  127  105  759  530  727  200    67 #>  [862,]  299  353  880  925  274  306   59  228  717   229 #>  [863,]  945  459  363  634   87  939   13   15  733     7 #>  [864,]  489  234  361  302  462   55  682  138  624   235 #>  [865,]  996  787  293  793  710  706  732   63  407   834 #>  [866,]  516  776  321   45  230  893  846  471  544   387 #>  [867,]  317  940  296  329   42  454  469  136  819   706 #>  [868,]  121   47  342  658  435  587  496  789  639   479 #>  [869,]  510  637  753  811  518  360  695   98   30   854 #>  [870,]  904  448  924  193  511  906  934  765  410   325 #>  [871,]  895  553  715  235  666  589  964  684  156   542 #>  [872,]  678  445  270  599  228  571  963  191  725   278 #>  [873,]  525  255  805  581  285  501  744  682  838    55 #>  [874,]  997  458  490  320  118  755  820  507  281   375 #>  [875,]  173  113   14  678   82  889  333  476  571    66 #>  [876,]  861  971  565  127  530  809  200   67   89   727 #>  [877,]  394  369  154   72  243  796  277  575  272   209 #>  [878,]  372  139  753  381  518  339  847   65  625   215 #>  [879,]   32  675  565  613  383  115  124  282  477   736 #>  [880,]   59  862  299  650  229  353  254  717  991   925 #>  [881,]  788  189  175  630  888  202  779  511  257   327 #>  [882,]  514  993  440  179  920  670   21  998  248   181 #>  [883,]  785  714  484   99  341  447  916  389  825   608 #>  [884,]  935  898   77  611  800  538  145  150  818   499 #>  [885,]  378  630  541  984  266  978  843  647  258   444 #>  [886,]  603  531  130  104  176  453  401  483  726   723 #>  [887,]  890  897  651  505   91  382  822   48  594    39 #>  [888,]  421  206  772  522  316  511  881  312  345   870 #>  [889,]  738  526   66  186  333  198  938  679  213   595 #>  [890,]  887  594  897  310  382  452   48  651  373   757 #>  [891,]  683  848  975  545  461  754  415  406    4     7 #>  [892,]  999  706  680  940  542  508   70   11   67   793 #>  [893,]  846  417  574  123  857  134  591  926  460   985 #>  [894,]  132   26  221  307  217  949   73   61  988   858 #>  [895,]  715  553  871  684   42    3  317   70  589   539 #>  [896,]   19  820  486  455  919  560  297  146  323   490 #>  [897,]  887   48  890  382   91  594  373  310  452   651 #>  [898,]  707  661  110  723  800  167  500  726  611    77 #>  [899,]  781  831  425  311  523  615  497  914  791   736 #>  [900,]  574  203  579  972  709  698  721  776  424   664 #>  [901,]   18  628  885  280  266  978  888  421  328   592 #>  [902,]  818  884  611  987   77  800  340  652  801   276 #>  [903,]  162  777  717  191  499  396  270  274  228   862 #>  [904,]  870  924  765  934  473  511  410   86  906   193 #>  [905,]  466  264   13  803  778  775  469  136  459   288 #>  [906,]  426  928  835  463   54  345  391  765  934   656 #>  [907,]  498  746  483  130  995  844   51  531  943    84 #>  [908,]  816   85  721  208  632  557  475  958  774   850 #>  [909,]  637  125  510  869  254  360  536   25  232   291 #>  [910,]  638  168  551   27  849  816  958  143  852   534 #>  [911,]  144   52  103  330  733  993  284  507  834   322 #>  [912,]  540  148  492  992  478  374  513  376  238   699 #>  [913,]  694    8  357  543  831  131  129  990  468    87 #>  [914,]  523  627  425  645  561  370  166  641  842    45 #>  [915,]  259  786  669  242  583  359  502   33  751   653 #>  [916,]  714  341  791  785  883  484  447  428   41   141 #>  [917,]  379  599  562  416  677  278  350  437  481   792 #>  [918,]  194  668  586  606  154   29   44  185  187   299 #>  [919,]  415  817  486   19  896  685  461  248  920   146 #>  [920,]  440  993  567  812  882   52  356   21  135   179 #>  [921,]  174  366  780  398  968  944  412  295  101   391 #>  [922,]  685  275  834  727  105  865   11  319  184   732 #>  [923,]  741  635  356   11  451  567  127  812   67   135 #>  [924,]  904  178  511  870  410  473  765  598  934   193 #>  [925,]  299  862  229   59  833  350  880  353  969   416 #>  [926,]  509    2  134  136  123  985  329  126  819   596 #>  [927,]  840  663  148  438  827  348  492  689  513   975 #>  [928,]  426  983   54  906    5  303  114  391  463   193 #>  [929,]  384  646  583  402  915  568  702  261  786   259 #>  [930,]  222  640  768  994   36  853  546  568  702   435 #>  [931,]  572  690  433  244  597  287  637  536  301   552 #>  [932,]  104  707  688  726  800  723  685  705  654   719 #>  [933,]  535   65  667  854  160  503  214  100  623   819 #>  [934,]  765   86  345  246  473  904  906  936  835   471 #>  [935,]  805  255  884  294  570  813  150  692  699   170 #>  [936,]  246  441  835  345  414   92  629  934  471   765 #>  [937,]  575  966  757  209  272  616  369  796  394   133 #>  [938,]  679  186  409  268   24  779  967  889  352   227 #>  [939,]  990    7  231  863  497  945  459  284  363    87 #>  [940,]  317  706  508  867  892  329  819  715   70   999 #>  [941,]  735  287  728  110  106  167  981  661  229   403 #>  [942,]  546   90  477  122  108   20  282  971  265   768 #>  [943,]  483  233   84  402  164  265  568  550  740   751 #>  [944,]  412  366  780  107  409  921  967  196   50   214 #>  [945,]  459  863   13   87  634  905  939  775  363   733 #>  [946,]  814  552  644  301   95  388  763  555  554   217 #>  [947,]  549  184  507  330  538  699  220  800  456     6 #>  [948,]  810   53  974   28  855  371   97  696  658   718 #>  [949,]  559  132  117  326  681  704  794  119   61   141 #>  [950,]  744  255  805  652  120  170  935  873  699   682 #>  [951,]  180  543  395  363  318  795  863  131  634    15 #>  [952,]  418  541  216  524  878  139  585  518  753   436 #>  [953,]  145   88  764  335  844   51  708  697   81   777 #>  [954,]  797  430  830  309  177  236  161  605  427   712 #>  [955,]  482  247  381  548  693  372  199  302  878   596 #>  [956,]  806  413  278  597  677  751  982  915   33   305 #>  [957,]  695  515  215  968  869  398  524  156  626    44 #>  [958,]  188  816  908  910  308  774  632  551  334   977 #>  [959,]  496  782  121  790  658  837   47  784  315   331 #>  [960,]  587  212   40  324  435  740  207   36  233   565 #>  [961,]  245  761  849  839   27   24   16  143  273   841 #>  [962,]  143  774   27  467  334  308  734  534  910   441 #>  [963,]  763  191  270  731  970  413  872  677  833   228 #>  [964,]  253  793   75  589  871  235  836  706  528   462 #>  [965,]  554  158  988  588  464  399   58  132   73   217 #>  [966,]  937  616  586  154  743  163  575  757  730   405 #>  [967,]   23  409  107   24  547  944  412  366  186   780 #>  [968,]  515  295  398  174  100  349  780  366  921   957 #>  [969,]  403  229  138  925  205  302  833  982  137   653 #>  [970,]  413  677  963  597  956  604  995  731  833    51 #>  [971,]  876  530  861  565  477   89  282  265  127   809 #>  [972,]  203  475  655  976  709  739  985  900  574   580 #>  [973,]    6  807  654  135  455  582  297   11  567   834 #>  [974,]  729  259  696  339  242  219  444  378  576   810 #>  [975,]  461  683  891  848  754  415  919  486  817   545 #>  [976,]  655  850  722  859  392  972   31  816  985   494 #>  [977,]   85  315  260  799  475  517  908  720  188   662 #>  [978,]  843  308  334  614  774  636  799  885  258   165 #>  [979,]  761  839  245  101  921  174  109  226  398    24 #>  [980,]  354   60  429  737  364  142  439  825  263   239 #>  [981,]  250  335  106  941  465  211  502  982  234   151 #>  [982,]  502  403  106  653  470  669  806  244  969   597 #>  [983,]  928  303  447  608  426  114  428  370    5   641 #>  [984,]  378  444  630  216  885  258  585  657  355   541 #>  [985,]    2  709  926  509  857  591  203  136  722   739 #>  [986,]  989  203  701  591  131  494  468  709  857   972 #>  [987,]  340  146   19  896  461  820  486  323  801   455 #>  [988,]  464  588  132  965   73  554  704  747  346   119 #>  [989,]  986  701  203  494  591  131   31  468  709   972 #>  [990,]  939  497  159   87  863  945    7  459  634   913 #>  [991,]  487  314  218  826  281  606  112  880  684   650 #>  [992,]  478  581  838  376  161  589  525  133  539   170 #>  [993,]  440  300  882  920   21  670  181  998  144    52 #>  [994,]  639  435  640   38  282  675   47  124  789   342 #>  [995,]   51  941  735  110  746  130  597  106  176   690 #>  [996,]  865  184  570  719  787  407  821  710  834   793 #>  [997,]  458  874  320  490  333  300  112  755  314   281 #>  [998,]  181  440  567   21  356  521  993  635  923    50 #>  [999,]  892  680  578  542   70  741   67  706  621   521 #> [1000,]  600  770  474  256   91  860  505   31  344   762 #>  #> $neighbor_distances #>              [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.4135262 0.4164093 0.4518846 0.4580720 0.4822256 0.4938254 0.5704704 #>    [2,] 0.2562815 0.3357208 0.3370734 0.3810690 0.4927788 0.4979382 0.6004487 #>    [3,] 0.2417840 0.4137192 0.4601082 0.4633285 0.4943338 0.5479883 0.5504038 #>    [4,] 0.7882348 1.0054148 1.0492781 1.2127351 1.2193471 1.2359583 1.2378821 #>    [5,] 0.4291275 0.4612383 0.4784529 0.4993307 0.5976617 0.6064604 0.6260415 #>    [6,] 0.3410693 0.4562456 0.4606252 0.5255280 0.5617132 0.5725957 0.5790781 #>    [7,] 0.4761274 0.5487716 0.6008691 0.6594356 0.6937620 0.6947768 0.7150791 #>    [8,] 0.7076517 0.9008440 0.9994460 1.0446967 1.0837892 1.1143377 1.1574315 #>    [9,] 0.4534126 1.0726935 1.2131670 1.3614086 1.4250351 1.4485803 1.4504508 #>   [10,] 0.4642686 0.6874602 0.7176434 0.7532149 0.8160122 0.9947950 1.0281243 #>   [11,] 0.2736718 0.2743106 0.3606717 0.3722694 0.3878326 0.3936948 0.4096787 #>   [12,] 0.5627052 0.6001610 0.6993605 0.7072822 0.7706943 0.8062502 0.8128482 #>   [13,] 0.2880667 0.3333742 0.4106022 0.4244197 0.4728161 0.4818542 0.5583002 #>   [14,] 0.4740805 0.6801021 0.6873977 0.7446482 0.7657718 0.7672030 0.7735476 #>   [15,] 0.3852264 0.4541455 0.4576836 0.5628880 0.6077687 0.6225975 0.6319855 #>   [16,] 0.9415687 1.0038815 1.0939862 1.0966461 1.1036557 1.2612177 1.2783915 #>   [17,] 0.3497946 0.4187939 0.4356923 0.4853643 0.4855674 0.5482838 0.5700761 #>   [18,] 0.5235877 1.0017931 1.0424157 1.1620575 1.2215228 1.3306787 1.3840388 #>   [19,] 0.3485024 0.5621656 0.6314357 0.7167543 0.7186137 0.7249182 0.7641886 #>   [20,] 0.4309992 0.5993202 0.6022131 0.6111534 0.7442785 0.7679036 0.7865962 #>   [21,] 0.3832345 0.4015926 0.4318839 0.5355099 0.5462654 0.5900449 0.6212872 #>   [22,] 0.4924951 0.6044792 0.6098943 0.6240780 0.6484381 0.6676623 0.6982135 #>   [23,] 0.2243837 0.3343868 0.3952473 0.5230312 0.5591751 0.6140498 0.6205196 #>   [24,] 0.3343868 0.4214357 0.4787867 0.5795274 0.6151425 0.6515538 0.7052083 #>   [25,] 0.3311262 0.3737846 0.3846624 0.4810258 0.5268440 0.6159349 0.6227194 #>   [26,] 0.4491886 0.5190143 0.5553460 0.5921536 0.7698564 0.8101129 0.8416462 #>   [27,] 0.4626404 0.5959667 0.6000873 0.6115942 0.6298841 0.6421061 0.6516060 #>   [28,] 0.8956037 1.0435732 1.0890405 1.1851866 1.2464821 1.2932086 1.3056652 #>   [29,] 0.4906986 0.6699884 0.7837255 0.8022351 0.8054592 0.8075105 0.8229040 #>   [30,] 0.3880181 0.3925415 0.4315286 0.4442818 0.4585077 0.5182299 0.5252812 #>   [31,] 0.6132197 0.7406523 0.7650332 0.8130068 0.8316814 0.9225450 0.9446816 #>   [32,] 0.7137842 0.7734356 0.9829470 1.1132414 1.1174624 1.1599025 1.2432890 #>   [33,] 0.4828355 0.5106689 0.5766428 0.6578815 0.6668747 0.7616239 0.7754358 #>   [34,] 0.5767200 0.9504254 1.0636279 1.1000283 1.1715719 1.1739572 1.2047747 #>   [35,] 1.2612306 1.2955909 1.3176897 1.3392442 1.4190330 1.4566753 1.4758023 #>   [36,] 0.6200325 0.7567471 0.7982956 0.9949161 1.0550736 1.0872699 1.1025820 #>   [37,] 0.1562197 0.2205039 0.4553881 0.4626712 0.5068882 0.5162979 0.5174399 #>   [38,] 0.4096667 0.5238685 0.6311037 0.6484999 0.6487017 0.6539289 0.6706169 #>   [39,] 0.5509121 0.5925062 0.6423987 0.6636887 0.7289075 0.7609346 0.7890444 #>   [40,] 0.3233393 0.4321428 0.4588671 0.4886622 0.5255782 0.5428951 0.6842269 #>   [41,] 0.8166128 0.9638840 1.0807700 1.1541053 1.1949342 1.2260085 1.2794022 #>   [42,] 0.2417840 0.3327628 0.3356477 0.4164892 0.4349769 0.4494881 0.4578050 #>   [43,] 0.6476785 0.7300139 0.7301015 0.7393742 0.7408329 0.7539587 0.7680181 #>   [44,] 0.3236677 0.4293714 0.5093577 0.5437178 0.5444425 0.5647359 0.5966142 #>   [45,] 0.4013398 0.4669493 0.4733687 0.4817209 0.4985707 0.5014299 0.5634902 #>   [46,] 0.7095227 0.7461550 0.8607517 0.9706299 0.9719182 0.9726006 0.9772474 #>   [47,] 0.5925412 0.6317795 0.6865996 0.7822435 0.8021837 0.8347894 0.8498695 #>   [48,] 0.8260375 1.0275764 1.0901283 1.1171227 1.1457154 1.2210911 1.2385262 #>   [49,] 0.4699923 0.5116332 0.5238062 0.6270197 0.6292263 0.6538028 0.7812151 #>   [50,] 0.4250194 0.4615023 0.5031391 0.5087678 0.5151957 0.5381844 0.5445416 #>   [51,] 0.2775309 1.0608652 1.0886526 1.1043282 1.1403534 1.1642489 1.1841786 #>   [52,] 0.2980282 0.3305764 0.4523994 0.4984680 0.5124016 0.6001722 0.6221500 #>   [53,] 1.1385919 1.2900154 1.4874499 1.4901497 1.5046958 1.6319332 1.7917216 #>   [54,] 0.4291275 0.4536714 0.4598514 0.4655745 0.5155092 0.5290168 0.5669784 #>   [55,] 0.3978781 0.5354077 0.5942766 0.5963510 0.6343572 0.6421813 0.6649307 #>   [56,] 0.3425523 0.7296722 0.7904378 0.8900019 0.9002944 0.9406133 0.9570680 #>   [57,] 0.4155446 0.4774438 0.4901999 0.5170386 0.5249453 0.5350074 0.5697890 #>   [58,] 0.9415003 0.9912848 1.1331851 1.2938772 1.4194379 1.4397755 1.4786203 #>   [59,] 0.3259343 0.3818180 0.4316908 0.4819024 0.4925252 0.5349175 0.5524714 #>   [60,] 0.2662746 0.6741101 0.7907778 0.8481930 0.9574157 0.9633209 0.9976594 #>   [61,] 0.6360092 0.7556416 0.8883390 0.9169025 0.9508571 0.9887184 0.9999763 #>   [62,] 0.2759752 0.4235129 0.4669600 0.5026875 0.5835431 0.5861179 0.5959296 #>   [63,] 0.1053399 0.3732293 0.3803319 0.3917867 0.4584325 0.5022766 0.5056985 #>   [64,] 0.3425523 0.8016506 1.0120272 1.0264852 1.0280424 1.0369971 1.0726935 #>   [65,] 0.3536524 0.4228859 0.4458910 0.5279857 0.5303154 0.5308188 0.5353298 #>   [66,] 0.5843524 0.5947541 0.6286655 0.7161994 0.7642161 0.7823867 0.7916545 #>   [67,] 0.2127999 0.3878326 0.4104659 0.4173236 0.4315286 0.4422799 0.4445131 #>   [68,] 0.3052542 0.6321275 0.6435527 0.6705939 0.7423435 0.7538667 0.7676700 #>   [69,] 0.5999850 0.6568117 0.7011940 0.8557775 0.8577136 0.9595692 0.9666155 #>   [70,] 0.2998139 0.3180998 0.3972498 0.4543706 0.4719692 0.4785129 0.5031124 #>   [71,] 0.8786645 0.8935561 0.9201532 0.9300199 1.0190628 1.0230844 1.0358124 #>   [72,] 0.4301278 0.4617709 0.5694271 0.6830868 0.6945542 0.6963187 0.7308951 #>   [73,] 0.5098080 0.5190143 0.6844166 0.7327323 0.7590328 0.8696237 0.9135404 #>   [74,] 0.7642617 0.7793941 0.9065718 0.9750516 1.0425298 1.0548806 1.0573827 #>   [75,] 0.2616838 0.3099523 0.3318257 0.4028080 0.4537256 0.4689921 0.4722561 #>   [76,] 0.8515879 0.8651275 0.8931862 0.9508330 1.0052826 1.0056013 1.0161222 #>   [77,] 0.5667552 0.7142331 0.7501005 0.7551399 0.7606515 0.8223402 0.8824545 #>   [78,] 0.5740317 0.7002333 0.7151458 0.9554671 0.9640090 0.9700838 0.9758848 #>   [79,] 0.9541851 1.1307841 1.2045141 1.2359583 1.3253265 1.3612226 1.3665762 #>   [80,] 0.3013858 0.3505337 0.3895203 0.4914228 0.5267347 0.5324231 0.5416663 #>   [81,] 0.7241610 1.1320709 1.1841786 1.2211169 1.4246598 1.4264480 1.4515285 #>   [82,] 0.6744084 0.8740847 0.9321388 1.2059087 1.2460112 1.3098256 1.3373012 #>   [83,] 1.3056975 1.4435083 1.6173149 1.6575989 1.6630472 1.7118396 1.7809904 #>   [84,] 0.4274242 0.6200325 0.7448610 0.8060953 0.8773426 0.8967576 0.9780047 #>   [85,] 0.5232716 0.6274481 0.6277373 0.6942933 0.7009676 0.7492628 0.7583702 #>   [86,] 0.4822342 0.6328792 0.6661896 0.7904378 0.8016506 0.8104974 0.8274352 #>   [87,] 0.2914631 0.4244197 0.4480881 0.5256378 0.5834741 0.5980662 0.6059930 #>   [88,] 0.7241610 1.2204487 1.2666216 1.3619996 1.3937403 1.3961423 1.5105319 #>   [89,] 0.3265655 0.4662847 0.5529375 0.5663875 0.5664335 0.5665230 0.6161408 #>   [90,] 0.6177029 0.6903455 0.7157513 0.8032102 0.8338283 0.9243217 0.9731846 #>   [91,] 1.1237581 1.2006337 1.2122778 1.2160150 1.2583795 1.3004160 1.4166956 #>   [92,] 0.2801377 0.4270478 0.5158467 0.5589667 0.6384175 0.6508292 0.6887782 #>   [93,] 0.1562197 0.2802539 0.4197521 0.4669757 0.4877234 0.4958552 0.5084518 #>   [94,] 0.9932829 1.2683039 1.4523624 1.4630061 1.4881991 1.5376193 1.5588870 #>   [95,] 0.5740317 0.6907237 0.7582631 0.8266939 0.8509170 0.8716801 0.9482028 #>   [96,] 0.5332551 0.7004206 0.7114079 0.7146187 0.7461208 0.7521483 0.7607955 #>   [97,] 0.4105300 0.8270726 0.9014110 0.9395911 0.9706944 1.0435732 1.0514852 #>   [98,] 0.2124219 0.2186445 0.3445172 0.4016329 0.4787311 0.4987701 0.5114435 #>   [99,] 0.3280085 0.3582446 0.4185033 0.4568222 0.5010213 0.5324019 0.5850366 #>  [100,] 0.1571661 0.3270607 0.3297749 0.4152959 0.4155446 0.4394434 0.4580318 #>  [101,] 0.2739325 0.3809649 0.4841949 0.5437178 0.5598850 0.5759087 0.5909632 #>  [102,] 0.2996124 0.3339395 0.3844833 0.4353951 0.4817672 0.5174399 0.5288210 #>  [103,] 0.3320144 0.4270915 0.4489724 0.4523994 0.5238062 0.7183704 0.7482213 #>  [104,] 0.5199243 0.5474814 0.6015021 0.6750002 0.7032852 0.7385655 0.7484588 #>  [105,] 0.2126666 0.2493681 0.4471116 0.4937531 0.5813783 0.5828444 0.5903206 #>  [106,] 0.5419905 0.5822079 0.5864139 0.6363900 0.6930033 0.7455654 0.7519386 #>  [107,] 0.2666600 0.3281947 0.3619748 0.3796002 0.4202768 0.4856680 0.5136110 #>  [108,] 0.3639847 0.3871541 0.5125243 0.5605496 0.6158616 0.6359263 0.6527205 #>  [109,] 0.4119780 0.5241731 0.5338553 0.5406000 0.6055802 0.6454900 0.6541286 #>  [110,] 0.3138712 0.3169376 0.5639420 0.6111445 0.6707567 0.6897751 0.7333901 #>  [111,] 0.4470085 0.5324019 0.5626414 0.5926014 0.6102623 0.7162092 0.8251008 #>  [112,] 0.3764155 0.4406940 0.5632216 0.5772628 0.6072182 0.6177780 0.6230867 #>  [113,] 0.5190582 0.5480682 0.5843524 0.6801021 0.7109512 0.8336948 0.8514350 #>  [114,] 0.3823685 0.4612383 0.5290168 0.5543619 0.5844332 0.6751672 0.7041751 #>  [115,] 0.3001888 0.4484685 0.4561176 0.4897710 0.5088910 0.5442525 0.5628880 #>  [116,] 0.3551558 0.7245206 0.7868111 0.8720892 0.9696472 1.0130370 1.0285213 #>  [117,] 0.3504076 0.4080805 0.4702059 0.5934633 0.6343287 0.6462851 0.6563538 #>  [118,] 0.4036560 0.5852113 0.5892437 0.6075354 0.6658440 0.6682632 0.7187059 #>  [119,] 0.7072822 0.7936557 0.8296461 0.8314887 0.8377960 0.8514944 0.8657509 #>  [120,] 0.3063874 0.5338996 0.5522705 0.5912894 0.7474931 0.7842216 0.7865370 #>  [121,] 0.4043541 0.4711634 0.7673382 0.7719437 0.8086823 0.9029788 0.9706023 #>  [122,] 0.6177029 0.6960585 0.7485267 0.7642617 0.8026730 0.9076117 0.9172140 #>  [123,] 0.4319182 0.4883972 0.5311404 0.5338494 0.5714113 0.5846369 0.6012636 #>  [124,] 0.4383293 0.4878459 0.5164387 0.6660976 0.6780518 0.7047720 0.7258564 #>  [125,] 0.3391542 0.4386292 0.5924349 0.6019411 0.6134247 0.6400310 0.6746848 #>  [126,] 0.4458910 0.4961469 0.5199104 0.5265334 0.5377278 0.5461781 0.5632634 #>  [127,] 0.2127999 0.4177365 0.4273248 0.4308748 0.4372331 0.4395468 0.4537299 #>  [128,] 0.1697641 0.3708620 0.4827002 0.5037656 0.5929496 0.6346981 0.6435527 #>  [129,] 0.8362561 0.8418727 0.9396298 1.0977557 1.1660918 1.1859439 1.2205160 #>  [130,] 0.3949158 0.5201856 0.5970816 0.6584859 0.6600040 0.8016199 0.8370871 #>  [131,] 0.3726157 0.4594279 0.6503906 0.6693788 0.6746643 0.6810093 0.7895809 #>  [132,] 0.5830046 0.6350297 0.7052237 0.7250215 0.8657509 0.8944138 0.9628218 #>  [133,] 0.4554826 0.5130768 0.5418031 0.5992723 0.6217976 0.6343636 0.6452653 #>  [134,] 0.3424898 0.4314329 0.4319182 0.4824674 0.5031186 0.5265334 0.5613060 #>  [135,] 0.2199036 0.2659000 0.3722694 0.3814877 0.4754374 0.4781263 0.4882898 #>  [136,] 0.2639793 0.3790206 0.3810690 0.3842816 0.4540897 0.5234403 0.5319840 #>  [137,] 0.3007172 0.3882606 0.3891797 0.4511295 0.4585077 0.4899825 0.5018221 #>  [138,] 0.3891797 0.4003394 0.4093087 0.4510614 0.4989316 0.5394937 0.5654279 #>  [139,] 0.1953825 0.2581276 0.3349301 0.3445172 0.4202771 0.4215198 0.4317165 #>  [140,] 0.4007418 0.4878459 0.4897710 0.5349754 0.5784557 0.6615394 0.7460146 #>  [141,] 0.4472194 0.4553296 0.5748453 0.6313138 0.6315250 0.6462851 0.7005078 #>  [142,] 0.4383920 0.8683177 1.0143848 1.0697831 1.0766055 1.0877618 1.1367527 #>  [143,] 0.3426322 0.6000873 0.8188785 0.8570448 0.8648781 0.9063361 0.9562367 #>  [144,] 0.2454466 0.3305764 0.3320144 0.5796216 0.5828690 0.5829722 0.6152581 #>  [145,] 0.6176849 0.6571260 0.6640692 0.8492827 0.9078621 0.9593884 0.9805610 #>  [146,] 0.7062103 0.7082198 0.7641886 0.8451212 0.8551457 0.8795054 0.9470179 #>  [147,] 0.8999411 0.9217838 0.9390820 0.9402478 0.9527692 0.9932829 1.0170127 #>  [148,] 0.5435531 0.6555649 0.7158553 0.8156964 0.8782123 0.9542597 0.9745501 #>  [149,] 0.3652411 0.5227214 0.5370673 0.5805778 0.6012636 0.6022131 0.6117674 #>  [150,] 0.4401061 0.4652960 0.5176574 0.5332888 0.5912894 0.6126145 0.7351420 #>  [151,] 0.4192962 0.7583930 0.8249106 0.8651275 0.9524089 0.9605344 1.0045340 #>  [152,] 0.3599027 0.4080805 0.5565640 0.5596752 0.5727677 0.6315250 0.6447966 #>  [153,] 0.8239665 1.0974455 1.1210698 1.1972454 1.2045141 1.2147620 1.2229926 #>  [154,] 0.4159788 0.4817015 0.6653983 0.6849641 0.7279046 0.7342181 0.7482923 #>  [155,] 0.4071333 0.6440975 0.7699234 0.8256817 0.9071700 0.9481633 0.9855625 #>  [156,] 0.2921631 0.4097287 0.4115992 0.4588515 0.5234100 0.5466795 0.5737518 #>  [157,] 0.5381888 0.5586869 0.5892326 0.6183072 0.6321275 0.6782478 0.7015653 #>  [158,] 0.5973952 0.6834605 0.7174115 0.7844804 0.8266939 0.8510199 0.8543216 #>  [159,] 0.6723279 0.8361119 0.8597237 0.8607517 0.8655687 0.8742488 0.8821152 #>  [160,] 0.2219355 0.2779481 0.3297749 0.3333719 0.4900127 0.4938741 0.5034575 #>  [161,] 0.4426456 0.5938974 0.6343636 0.6381163 0.6384964 0.6674331 0.6891083 #>  [162,] 0.3922067 0.5142108 0.5894584 0.7374662 0.8174749 0.8258687 0.8492827 #>  [163,] 0.4923794 0.6200645 0.8248604 0.9067738 0.9284766 0.9455365 0.9658443 #>  [164,] 0.5086477 0.6193849 0.6598612 0.6732775 0.6769747 0.6932742 0.6951027 #>  [165,] 0.4244538 0.5676154 0.5718502 0.6002915 0.6123300 0.6314941 0.6444403 #>  [166,] 0.3809388 0.4494273 0.4666871 0.5170595 0.5863099 0.6014534 0.6050856 #>  [167,] 0.3138712 0.4343075 0.6407605 0.6521085 0.6640692 0.7374662 0.7840988 #>  [168,] 0.2991401 0.3585358 0.6115942 0.7870639 0.8220765 0.8570448 0.9135242 #>  [169,] 0.2213794 0.3575766 0.4352549 0.4495114 0.4505674 0.4852212 0.5034575 #>  [170,] 0.3063874 0.3314204 0.5332888 0.5553909 0.5881297 0.7086013 0.7363126 #>  [171,] 0.5109527 0.6448157 0.7923513 0.8112725 0.8751129 0.9265160 0.9668022 #>  [172,] 0.3759131 0.4305782 0.5182537 0.6140498 0.6665510 0.6875744 0.7161876 #>  [173,] 0.6061652 0.8740847 0.9036300 1.0105252 1.0106599 1.0465485 1.1428232 #>  [174,] 0.2341677 0.2431837 0.3747059 0.3809649 0.4724823 0.4731748 0.4861801 #>  [175,] 0.4321952 0.5213234 0.6478552 0.7294704 0.7634323 0.7938671 0.7978528 #>  [176,] 0.5082435 0.5958109 0.6145326 0.6163193 0.6600040 0.6661207 0.6815340 #>  [177,] 0.4702031 0.7109817 0.7146164 0.7451424 0.8479874 0.8806523 0.9228788 #>  [178,] 0.6423322 0.8596714 0.9093060 1.0302979 1.1278758 1.1492008 1.1535875 #>  [179,] 0.5502789 0.5713538 0.5765767 0.5800260 0.6062569 0.6444751 0.6589163 #>  [180,] 0.6674427 0.7967038 0.8033406 0.8596144 0.8980795 0.8986613 0.9893902 #>  [181,] 0.1251699 0.3431534 0.3947171 0.4006243 0.4318839 0.4576481 0.5087678 #>  [182,] 0.3335011 0.3887750 0.4437013 0.4942311 0.5017656 0.5076715 0.5704381 #>  [183,] 0.6015168 0.6064487 0.6447194 0.7105145 0.7109817 0.7254453 0.7283798 #>  [184,] 0.3339860 0.3448947 0.4201332 0.4625115 0.5255280 0.5313648 0.5424157 #>  [185,] 0.4515596 0.5241731 0.5452802 0.5704381 0.5938335 0.6895519 0.7082388 #>  [186,] 0.3980350 0.4677499 0.5194676 0.6126425 0.6523388 0.6848514 0.7028124 #>  [187,] 0.2759752 0.3471941 0.3713080 0.4638494 0.4942311 0.5218788 0.5535432 #>  [188,] 0.6356572 0.8773944 0.9395911 1.0006800 1.0369745 1.0380372 1.0408452 #>  [189,] 0.6562236 0.7030044 0.7270595 0.9223827 0.9257247 0.9441020 0.9908215 #>  [190,] 0.5601551 1.0093497 1.6447732 1.7167646 1.7935694 1.8468092 1.9679866 #>  [191,] 0.4662444 0.6797020 0.6820040 0.7185745 0.8178872 0.8562923 0.9138492 #>  [192,] 0.4491886 0.4853643 0.5098080 0.5572828 0.6006179 0.6769747 0.7206221 #>  [193,] 0.4512719 0.5333814 0.5616769 0.6172515 0.6260809 0.6263504 0.6284860 #>  [194,] 0.3471941 0.3602460 0.4437013 0.5416772 0.5938335 0.5959296 0.5994383 #>  [195,] 0.4589743 0.5937317 0.5946351 0.6681181 0.7176434 0.7898325 0.8316870 #>  [196,] 0.5403141 0.5450080 0.5578409 0.5829722 0.6192608 0.6528019 0.6704220 #>  [197,] 0.5809340 0.5971391 0.6825113 0.7151635 0.8042336 0.8565075 0.9733889 #>  [198,] 0.2956679 0.4251142 0.4482817 0.5142382 0.5231681 0.5260477 0.5632216 #>  [199,] 0.3118759 0.3784374 0.4511295 0.4740814 0.4903546 0.4989316 0.5912650 #>  [200,] 0.4484685 0.4541455 0.4796803 0.5229429 0.5879116 0.5958383 0.6181543 #>  [201,] 0.2989964 0.3348730 0.3589196 0.4033779 0.4177386 0.4450827 0.4718952 #>  [202,] 0.6141887 0.6358657 0.6359739 0.7270595 0.7477617 0.8769414 0.9287948 #>  [203,] 0.3607994 0.4123550 0.4703898 0.5102964 0.5670495 0.5697230 0.6182873 #>  [204,] 0.7865726 0.8681196 0.8742734 0.8757049 0.9829470 1.0431670 1.1573773 #>  [205,] 0.3007172 0.3880181 0.4042238 0.4316908 0.4510614 0.4745855 0.5129873 #>  [206,] 0.3460634 0.4038662 0.5255085 0.5769288 0.6492937 0.6670392 0.6981202 #>  [207,] 0.3442101 0.4617125 0.4669757 0.4701144 0.4845719 0.5068882 0.5810528 #>  [208,] 0.5780221 0.5800381 0.5880242 0.6249072 0.6477337 0.6656635 0.6836806 #>  [209,] 0.3618233 0.3630595 0.4527525 0.5418031 0.5796300 0.6085480 0.6265638 #>  [210,] 0.4965659 0.5600268 0.5638145 0.5721606 0.6084340 0.6088373 0.6311809 #>  [211,] 0.5802231 0.6850101 0.8146218 0.8165197 0.8225144 0.8260052 0.8562505 #>  [212,] 0.3233393 0.4341824 0.4873355 0.5902830 0.6457296 0.6550524 0.7332966 #>  [213,] 0.2956679 0.5597078 0.5897088 0.6230867 0.6828748 0.6880631 0.6895700 #>  [214,] 0.4307607 0.4399143 0.4620874 0.5129748 0.5367148 0.5589667 0.5652132 #>  [215,] 0.2750581 0.3199466 0.3911048 0.4790633 0.4899825 0.4903546 0.5156362 #>  [216,] 0.4143870 0.4203005 0.4810258 0.5401200 0.5764552 0.6044879 0.6531814 #>  [217,] 0.8138490 0.8847649 0.8898739 0.9415003 1.0998110 1.1093429 1.1254496 #>  [218,] 0.3234918 0.4747028 0.5305693 0.5545897 0.5670797 0.5946830 0.6894500 #>  [219,] 0.4039615 0.5058535 0.6159064 0.6283901 0.6303021 0.6697382 0.6739166 #>  [220,] 0.3218932 0.5878971 0.6927671 0.7145369 0.7223695 0.7391452 0.7403153 #>  [221,] 0.5921536 0.6583074 0.6844166 0.7847599 0.8403036 0.8734922 0.8890388 #>  [222,] 0.8026730 0.8899348 1.0892912 1.1104392 1.1253054 1.1395019 1.1531648 #>  [223,] 1.0317406 1.0517889 1.0630678 1.0664502 1.1319398 1.1606540 1.2008886 #>  [224,] 0.4177386 0.4314167 0.4458852 0.4492563 0.4966817 0.5085496 0.5167058 #>  [225,] 0.5109527 0.6832693 0.7536926 0.8265094 0.9035923 0.9289425 0.9682766 #>  [226,] 0.4282011 0.4841949 0.5265417 0.5332551 0.5338553 0.5627164 0.5647359 #>  [227,] 0.3768753 0.5195674 0.6306894 0.6523388 0.6635077 0.6770366 0.7398363 #>  [228,] 0.5081120 0.5704526 0.6188954 0.6299776 0.6820040 0.7691764 0.7971026 #>  [229,] 0.3259343 0.3943838 0.4408640 0.4745855 0.5422523 0.5635197 0.5868147 #>  [230,] 0.8477029 0.9906182 1.1004262 1.1952574 1.4815776 1.5242224 1.5400798 #>  [231,] 0.4448912 0.5683315 0.6025930 0.6292263 0.6858223 0.7776315 0.7991615 #>  [232,] 0.5597078 0.5631789 0.6177780 0.6589163 0.6708284 0.6824223 0.6982904 #>  [233,] 0.7567471 0.7845920 0.8316158 0.8773426 1.0066074 1.0735460 1.0968069 #>  [234,] 0.2606045 0.3482067 0.6115254 0.6882739 0.7045890 0.7200459 0.7462963 #>  [235,] 0.4097287 0.4429751 0.4739026 0.5106559 0.5216043 0.5354077 0.5365497 #>  [236,] 0.8599350 0.8870444 0.9646881 1.0883992 1.0910131 1.1096619 1.2290237 #>  [237,] 0.6315625 0.6628841 0.6850101 0.7883574 0.7923513 0.7976282 0.7985196 #>  [238,] 0.3815127 0.4266848 0.4949191 0.5878971 0.7147235 0.7174732 0.7180295 #>  [239,] 0.4803953 0.7979126 0.8104330 0.8757670 0.8854835 0.9712453 1.0205419 #>  [240,] 0.3630595 0.5008848 0.5039633 0.5509121 0.5670838 0.5992723 0.6520588 #>  [241,] 0.6552567 1.0939862 1.2837710 1.5180604 1.5413758 1.5854162 1.5881028 #>  [242,] 0.5473630 0.7136324 0.7344519 0.8087928 0.9233866 0.9448996 1.0089057 #>  [243,] 0.4515596 0.4731651 0.6055802 0.6194397 0.6745133 0.7493161 0.7538691 #>  [244,] 0.4497609 0.4546533 0.5018221 0.5129873 0.5605462 0.5935618 0.6238384 #>  [245,] 0.3895050 0.4174363 0.5815840 0.5824329 0.6607596 0.6844379 0.7206090 #>  [246,] 0.2537811 0.5098448 0.5835078 0.6100800 0.6573539 0.6835674 0.7194708 #>  [247,] 0.3623904 0.3962631 0.4322539 0.4620379 0.4646330 0.4690315 0.5162979 #>  [248,] 0.7366617 0.7470345 0.7567551 0.8000404 0.8028413 0.8639474 0.9099827 #>  [249,] 0.2199036 0.2998139 0.3468902 0.3519166 0.4711374 0.4930074 0.5110921 #>  [250,] 0.7078894 0.9292354 0.9341814 0.9610054 0.9667498 1.0160068 1.2178131 #>  [251,] 1.2134147 1.3324296 1.3513079 1.3526454 1.4705634 1.4761861 1.4817486 #>  [252,] 0.2921631 0.3368398 0.3843751 0.4945547 0.5750443 0.5867752 0.6154553 #>  [253,] 0.3153035 0.3966177 0.4298896 0.4930032 0.5167058 0.5874680 0.5887785 #>  [254,] 0.4819024 0.4950835 0.5005773 0.5534737 0.5552267 0.5780654 0.5868147 #>  [255,] 0.1113919 0.5218122 0.5881297 0.6197973 0.7236682 0.7302658 0.7391400 #>  [256,] 1.1392710 1.5015857 1.5773453 1.5869115 1.6231690 1.6512417 1.7113568 #>  [257,] 0.3489624 0.4321952 0.4956681 0.5597944 0.5798359 0.6128520 0.6671403 #>  [258,] 0.4244538 0.5017656 0.6161380 0.6895519 0.6941775 0.7048792 0.7139140 #>  [259,] 0.5284236 0.5799680 0.5829555 0.7430271 0.7444694 0.7619064 0.7805513 #>  [260,] 0.6732057 0.7469213 0.9014110 0.9536116 0.9634707 0.9955488 1.0006800 #>  [261,] 0.6030362 0.6230817 0.7041834 0.8954496 0.8967256 0.9518010 0.9554768 #>  [262,] 0.3255484 0.4569092 0.4747028 0.4827002 0.5123543 0.5163456 0.5474090 #>  [263,] 0.5742595 0.6744084 0.8110190 0.8969396 0.9133471 0.9297650 0.9405660 #>  [264,] 0.1826120 0.3572738 0.3810015 0.3991571 0.4015631 0.4060242 0.5021497 #>  [265,] 0.3871541 0.3969316 0.5086477 0.5577259 0.6228068 0.6561159 0.6617539 #>  [266,] 0.7348102 0.7487227 0.7490524 0.8026091 0.8714497 0.9203454 1.0001273 #>  [267,] 0.2205039 0.2802539 0.4214794 0.4572978 0.4620379 0.5138243 0.5276139 #>  [268,] 0.5961876 0.6265907 0.6475355 0.8488360 0.8769512 0.9258185 0.9552585 #>  [269,] 0.5106689 0.5739148 0.7744630 0.7970595 0.7995646 0.8382210 0.8534474 #>  [270,] 0.4662444 0.6188954 0.8457550 0.9183296 0.9488499 0.9521113 0.9683779 #>  [271,] 0.4717647 0.4739168 0.4949041 0.5278123 0.5588218 0.6128520 0.6187925 #>  [272,] 0.2084596 0.3409218 0.4769755 0.5008848 0.5058783 0.5925062 0.6085480 #>  [273,] 0.6568117 0.6810029 0.7637963 0.7931073 0.8097563 0.8193329 0.8271600 #>  [274,] 0.3613733 0.4985686 0.5105869 0.5864516 0.6675016 0.6978092 0.7015653 #>  [275,] 0.2493681 0.3217388 0.3925668 0.4226920 0.5208564 0.5482485 0.5894166 #>  [276,] 0.6681181 0.8324728 0.8994521 0.9808304 1.0365500 1.0426337 1.0851486 #>  [277,] 0.2067751 0.4963191 0.5750443 0.5863160 0.5983803 0.6080618 0.6228830 #>  [278,] 0.8135262 0.8360571 0.8657834 0.8863635 0.9910864 1.0198413 1.0612270 #>  [279,] 0.8592655 1.0227210 1.0927985 1.1667920 1.2134147 1.2255001 1.3567145 #>  [280,] 1.1585856 1.1766514 1.1845853 1.2208541 1.3413812 1.3845559 1.4240757 #>  [281,] 0.2640761 0.4589775 0.5416663 0.5429251 0.5431829 0.5725957 0.5736610 #>  [282,] 0.3764369 0.3920450 0.5596959 0.5825871 0.6111534 0.6564331 0.6706169 #>  [283,] 0.3254118 0.4494426 0.4677838 0.5100109 0.5666222 0.5897937 0.5964494 #>  [284,] 0.4448912 0.5116395 0.5606328 0.6493078 0.6609395 0.6676623 0.6823676 #>  [285,] 0.6235712 0.6838823 0.7463102 0.7637820 0.7840428 0.8142888 0.8231489 #>  [286,] 0.6056577 0.6270197 0.8520916 0.8597237 0.8757670 0.8780884 0.9033164 #>  [287,] 0.4340155 0.4408640 0.5054064 0.5371492 0.6228671 0.6651803 0.6836261 #>  [288,] 0.3518274 0.3810015 0.4121957 0.4228516 0.4270478 0.5075491 0.5832748 #>  [289,] 0.5072439 0.5115378 0.6373922 0.6538028 0.6721999 0.7087414 0.7131088 #>  [290,] 1.0089832 1.0093497 1.6512417 1.9762617 2.1040156 2.1056979 2.1150231 #>  [291,] 0.3391542 0.4780416 0.5246408 0.5671278 0.5750946 0.5786255 0.6216858 #>  [292,] 0.8757049 0.9130893 1.1009669 1.1679038 1.2216131 1.2451432 1.2846944 #>  [293,] 0.4079279 0.4355070 0.4372489 0.5417861 0.5426939 0.5427502 0.5531993 #>  [294,] 0.4314167 0.4718952 0.4745192 0.4930032 0.5594881 0.5689416 0.5995350 #>  [295,] 0.2572909 0.2676381 0.3157401 0.3270607 0.3333719 0.3575766 0.3760932 #>  [296,] 0.2199395 0.3327628 0.3545185 0.4374564 0.4601082 0.5200230 0.5572635 #>  [297,] 0.3885040 0.5455886 0.5713538 0.5773018 0.6004637 0.6287157 0.6443303 #>  [298,] 0.7848294 1.0407837 1.1635841 1.1841477 1.2352213 1.4331789 1.4435083 #>  [299,] 0.3428230 0.3525313 0.4263886 0.4925252 0.5200291 0.5508694 0.6640526 #>  [300,] 0.4838997 0.5703703 0.5790676 0.6224867 0.6342861 0.6483664 0.6502113 #>  [301,] 0.4122874 0.5153891 0.5544399 0.6654541 0.6824385 0.6927163 0.7057450 #>  [302,] 0.3118759 0.4093087 0.5932468 0.6056662 0.6191656 0.6219256 0.6295060 #>  [303,] 0.3834029 0.4204325 0.4490532 0.4519956 0.4521712 0.4766048 0.4934717 #>  [304,] 0.4117004 0.6360092 0.8526801 1.0074236 1.1022411 1.1766058 1.2383962 #>  [305,] 0.5973952 0.7799664 0.8380140 0.8863635 0.8960559 0.9313402 0.9482028 #>  [306,] 0.5081120 0.5241808 0.5243193 0.6168592 0.6452508 0.7000938 0.7091193 #>  [307,] 0.6476785 0.7975791 0.8239665 0.8622808 0.8795284 0.8808158 0.9928399 #>  [308,] 0.2331969 0.2661462 0.4526355 0.5676154 0.5955365 0.7139140 0.7665827 #>  [309,] 0.4702031 0.7149807 0.8295621 0.8537522 0.8664183 0.8789158 0.9113630 #>  [310,] 0.5142712 0.7143269 0.7755237 0.9067738 0.9111171 0.9477749 0.9538526 #>  [311,] 0.5172792 0.6236874 0.8487416 0.8999660 0.9731846 0.9828619 1.0074236 #>  [312,] 0.9685728 1.0746012 1.1617882 1.3417030 1.4118675 1.4967831 1.6166494 #>  [313,] 1.7026236 1.7615025 1.8115975 1.9042561 1.9243551 1.9283423 1.9294923 #>  [314,] 0.2640761 0.2994323 0.4406940 0.4914228 0.5116266 0.5116795 0.5681643 #>  [315,] 0.5949562 0.6354994 0.6583361 0.7690322 0.8270726 0.8395446 0.9634707 #>  [316,] 0.2775697 0.4038662 0.5677097 0.5933595 0.6269105 0.6662341 0.6838331 #>  [317,] 0.3062447 0.3245311 0.3356477 0.3357322 0.3545185 0.3768769 0.4231477 #>  [318,] 0.4155830 0.4721131 0.4820995 0.5442525 0.5740956 0.6489639 0.6498022 #>  [319,] 0.4276626 0.4471116 0.5655261 0.5779278 0.6008691 0.6233400 0.6255669 #>  [320,] 0.2497108 0.3769251 0.4165383 0.5031038 0.6006887 0.6287157 0.6334168 #>  [321,] 0.2466502 0.4582758 0.4985707 0.6218671 0.6484157 0.6644568 0.6942572 #>  [322,] 0.5116395 0.6147374 0.6240780 0.6601669 0.6803970 0.7147235 0.7194869 #>  [323,] 0.4602819 0.5026129 0.5689899 0.5852113 0.6229789 0.7184105 0.7479362 #>  [324,] 0.4701144 0.4886622 0.5243079 0.5510603 0.5600160 0.5902830 0.5945404 #>  [325,] 0.3495144 0.5216372 0.6089716 0.6175907 0.7316042 0.7521237 0.7925561 #>  [326,] 0.4472194 0.5458388 0.6106687 0.6610684 0.7121262 0.7433465 0.7690824 #>  [327,] 0.3926288 0.5551719 0.5669784 0.5976617 0.6844859 0.6993605 0.6994619 #>  [328,] 0.8851783 0.8956037 1.0393599 1.0648563 1.1211087 1.3162950 1.3163354 #>  [329,] 0.1874870 0.2639793 0.3733287 0.4457930 0.4522917 0.4644086 0.4979382 #>  [330,] 0.3226538 0.4848906 0.5124016 0.5655362 0.5665967 0.5726624 0.5932489 #>  [331,] 0.6053737 0.7149807 0.7451424 0.8059130 0.9105958 0.9557813 1.0060863 #>  [332,] 0.2875904 0.4053210 0.4064159 0.4088435 0.4310972 0.4526802 0.4581435 #>  [333,] 0.4740805 0.5190582 0.5689065 0.5772628 0.6006887 0.6706124 0.6880631 #>  [334,] 0.2331969 0.3781033 0.5424332 0.6396585 0.6638672 0.6797951 0.7263292 #>  [335,] 0.4192962 0.8167749 0.8581711 0.9341814 0.9468521 1.0251823 1.0565338 #>  [336,] 0.2513093 0.4869735 0.7968346 0.8442702 0.9336577 1.0013555 1.0056013 #>  [337,] 0.5821892 0.8529215 0.9863945 0.9917429 1.0030147 1.0094166 1.0275230 #>  [338,] 0.3052542 0.5037656 0.5175896 0.5354285 0.5864516 0.5892326 0.6565112 #>  [339,] 0.5836669 0.6711264 0.6857129 0.7018688 0.7444694 0.7489598 0.7526821 #>  [340,] 0.8179345 1.3702329 1.3956936 1.4190551 1.5468279 1.5558764 1.6032071 #>  [341,] 0.3781653 0.4568222 0.4941627 0.5772068 0.5818712 0.6195791 0.6577424 #>  [342,] 0.6537581 0.7463883 0.7497546 0.8023172 0.8289068 0.8301629 0.8668216 #>  [343,] 0.3311262 0.6023550 0.6187925 0.6478552 0.6531814 0.6693811 0.6868593 #>  [344,] 0.7688623 0.8742488 0.9360641 0.9712920 0.9994460 1.0244394 1.0348992 #>  [345,] 0.5344343 0.5368738 0.5835078 0.5948336 0.6256794 0.6514302 0.6578229 #>  [346,] 0.5439748 0.5572828 0.5737396 0.5755912 0.5793390 0.5924349 0.5959592 #>  [347,] 0.4007418 0.5560317 0.6537581 0.6638007 0.7258564 0.7928661 0.8532602 #>  [348,] 0.7505151 0.8549597 0.8807600 0.8839921 0.9890819 1.0091681 1.0435267 #>  [349,] 0.1571661 0.2219355 0.2572909 0.3593473 0.4352549 0.4412299 0.4901999 #>  [350,] 0.3713080 0.4235129 0.5508694 0.5788443 0.6051685 0.6257514 0.6583466 #>  [351,] 0.2996124 0.4588671 0.5146824 0.5166976 0.5243079 0.5548189 0.5614305 #>  [352,] 0.5961876 0.8088653 0.8289298 0.8990320 1.1871913 1.2185194 1.2210911 #>  [353,] 0.3564549 0.4263886 0.4750999 0.4949041 0.4980486 0.5241808 0.5349175 #>  [354,] 1.0872537 1.0974455 1.1606540 1.2344059 1.3876755 1.4231223 1.4286069 #>  [355,] 0.4669600 0.4717647 0.5225249 0.6376599 0.6681850 0.6789312 0.6930728 #>  [356,] 0.1711273 0.2017364 0.2105118 0.2730954 0.3442571 0.3606717 0.4437286 #>  [357,] 0.3522048 0.4383293 0.5817333 0.6553864 0.6615394 0.6805938 0.6859919 #>  [358,] 0.3721158 0.4985686 0.5354285 0.5381888 0.6346981 0.6413582 0.6747714 #>  [359,] 0.7851290 0.8207347 0.8306381 0.8967256 1.0102808 1.0314215 1.0855465 #>  [360,] 0.3348329 0.4016329 0.4202771 0.4247733 0.4774438 0.4908610 0.4916802 #>  [361,] 0.4498139 0.5367063 0.6271592 0.6897811 0.7315408 0.7424410 0.7462963 #>  [362,] 0.7865726 0.9608157 1.1174624 1.2037095 1.2071710 1.2996129 1.3200207 #>  [363,] 0.4412094 0.4576836 0.5740956 0.5879116 0.6937620 0.7028481 0.7340256 #>  [364,] 0.5815396 0.6741101 0.7702699 0.8251008 0.8791834 0.8845093 0.9056975 #>  [365,] 0.8477029 1.1607808 1.4341445 1.4372597 1.5232922 1.5595742 1.6153321 #>  [366,] 0.1444199 0.2147057 0.2964660 0.3763506 0.4718190 0.4724823 0.5031391 #>  [367,] 0.3124816 0.6447194 0.6740971 0.7543755 0.7730446 0.7905675 0.8043164 #>  [368,] 1.0538053 1.2736849 1.3305608 1.4911662 1.6796001 1.7359295 1.7955694 #>  [369,] 0.4362067 0.4558135 0.4731651 0.4769755 0.5006439 0.6346440 0.6712888 #>  [370,] 0.4417147 0.4553296 0.5616769 0.6010482 0.6050856 0.6059664 0.6343537 #>  [371,] 0.4812631 0.5895551 0.8126626 0.8259296 0.8712876 0.8836388 0.9371263 #>  [372,] 0.2570604 0.3327387 0.3536524 0.4215198 0.5493427 0.5501019 0.5750531 #>  [373,] 0.6427611 0.7143269 0.7721591 0.7785696 0.7916545 0.7967812 0.8169162 #>  [374,] 0.4637771 0.5365163 0.7688521 0.7752888 0.8052273 0.8078020 0.8407978 #>  [375,] 0.4036560 0.6440975 0.6584974 0.6794487 0.7157654 0.7226002 0.7495462 #>  [376,] 0.2784699 0.2947907 0.2968328 0.3318257 0.5824518 0.5904808 0.6029548 #>  [377,] 0.3265655 0.4572978 0.4950582 0.5240632 0.5433714 0.5865573 0.5911516 #>  [378,] 0.3469414 0.4227134 0.4779012 0.6697382 0.6979404 0.7469986 0.7490524 #>  [379,] 0.3694662 0.5227128 0.5563806 0.7229418 0.8585724 0.9508038 0.9566499 #>  [380,] 0.2205418 0.3610222 0.4214794 0.4950582 0.5026919 0.5055272 0.5279857 #>  [381,] 0.3424853 0.3623904 0.4111557 0.4764689 0.4987701 0.5085010 0.5176588 #>  [382,] 0.4787867 0.6205196 0.6255389 0.6837591 0.7075745 0.7296096 0.7517523 #>  [383,] 0.2766520 0.3001888 0.4155830 0.4796803 0.6279236 0.6569985 0.6895028 #>  [384,] 0.6380556 0.7136324 0.8567197 0.9511454 0.9564728 0.9679114 1.0755713 #>  [385,] 1.1336616 1.3598234 1.3775565 1.4445621 1.4475370 1.4926822 1.5768301 #>  [386,] 0.7734356 1.1328119 1.2015376 1.2071710 1.2326972 1.2392403 1.2854884 #>  [387,] 0.3213774 0.3652411 0.4310972 0.4655661 0.5014299 0.5033294 0.5338494 #>  [388,] 0.6098933 0.6661207 0.7496285 0.7553941 0.7986761 0.7988833 0.8309120 #>  [389,] 0.3280085 0.3752953 0.3781653 0.4394088 0.5218172 0.5693460 0.5871071 #>  [390,] 0.3843751 0.3871070 0.4588515 0.5548477 0.5715566 0.6311809 0.6388483 #>  [391,] 0.4598514 0.4993307 0.5082676 0.5267160 0.5338369 0.6067554 0.6352914 #>  [392,] 0.4807627 0.6904138 0.8666974 0.9281373 0.9666349 0.9739914 1.0021709 #>  [393,] 0.4633285 0.5656778 0.5723285 0.6214191 0.6484381 0.6949518 0.7027695 #>  [394,] 0.3650620 0.4301278 0.4527525 0.4558135 0.5080473 0.6149214 0.6154784 #>  [395,] 0.4721131 0.5590880 0.5784557 0.5801501 0.6279236 0.7743265 0.7960029 #>  [396,] 0.7121892 0.7195611 0.9020730 0.9482466 0.9553001 0.9882174 1.0344171 #>  [397,] 0.2152512 0.4088435 0.4351559 0.4612920 0.4713679 0.5398678 0.5684092 #>  [398,] 0.2431837 0.2739325 0.3636055 0.4282011 0.4485030 0.5435767 0.5598461 #>  [399,] 0.5507593 0.8222723 0.8534474 0.8940343 0.8981490 0.9717410 1.0254950 #>  [400,] 0.6236874 0.6272002 0.8316158 0.9025229 1.1695899 1.1766058 1.2015376 #>  [401,] 0.4827825 0.5474814 0.6055480 0.7208659 0.7215747 0.7305756 0.8090760 #>  [402,] 0.4581918 0.6284543 0.6496646 0.6906099 0.7141823 0.7448610 0.8483757 #>  [403,] 0.3882606 0.4003394 0.4042238 0.4497609 0.5388352 0.5843067 0.5920540 #>  [404,] 0.6448157 0.7536926 0.9802931 1.0412963 1.0764753 1.1272177 1.1374898 #>  [405,] 0.5338996 0.6877684 0.7382313 0.7444935 0.7737937 0.7749953 0.8151459 #>  [406,] 0.5946351 0.7642193 0.8043164 0.8324728 0.8327347 0.8662033 0.8707932 #>  [407,] 0.2262048 0.3571502 0.3882072 0.3917867 0.4269251 0.4492124 0.4637310 #>  [408,] 0.5205839 0.6415667 0.8592655 0.8972432 0.9370055 0.9528897 1.0285213 #>  [409,] 0.2666600 0.3462259 0.3912701 0.4431271 0.4718190 0.5194676 0.5230312 #>  [410,] 0.5287387 0.6263504 0.7653176 0.7890001 0.8231798 0.8579841 0.8596714 #>  [411,] 0.6374408 1.0415524 1.0649606 1.0654017 1.1075192 1.1566853 1.2113418 #>  [412,] 0.1483997 0.2964660 0.3281947 0.3544090 0.3912701 0.5338369 0.5528021 #>  [413,] 0.6007638 0.7488742 0.8031835 0.8181047 0.8349864 0.8678280 0.8761598 #>  [414,] 0.5356923 0.6347421 0.6560337 0.6573539 0.7698410 0.7869336 0.8565075 #>  [415,] 0.4119993 0.5480810 0.6267967 0.7597113 0.7970039 0.8123156 0.8248693 #>  [416,] 0.6265189 0.6376599 0.6652490 0.6731947 0.6754429 0.6864874 0.6953452 #>  [417,] 0.4800523 0.4998328 0.5869208 0.6206001 0.6662965 0.6743245 0.6948830 #>  [418,] 0.3704491 0.4353189 0.4964357 0.7022318 0.7183529 0.7810734 0.8005378 #>  [419,] 0.9130893 1.4049359 1.4119261 1.4509008 1.5047031 1.5477961 1.6038719 #>  [420,] 0.5394878 0.7549989 0.8515879 0.9669571 1.0466238 1.1256733 1.1385919 #>  [421,] 0.4642933 0.6256762 0.6492937 0.6662341 0.7083924 0.7529897 0.8171385 #>  [422,] 0.3126879 0.3432534 0.4844371 0.5021497 0.5940030 0.6478216 0.7153814 #>  [423,] 0.2178416 0.4185033 0.4394088 0.4470085 0.5016408 0.5372938 0.7131088 #>  [424,] 0.6295275 0.7191952 0.8039289 0.8176458 0.9227858 0.9371263 0.9449355 #>  [425,] 0.5252446 0.6903455 0.6906528 0.8061907 0.8626267 0.8649314 0.8865712 #>  [426,] 0.2792638 0.4157556 0.5193437 0.5200122 0.5287617 0.5333814 0.5792556 #>  [427,] 0.6945542 0.7883685 0.8034189 0.9054421 0.9142305 1.0049564 1.0579507 #>  [428,] 0.4600799 0.4941627 0.5218172 0.5688316 0.5740294 0.7012153 0.7149622 #>  [429,] 0.5742595 0.9321388 1.0092975 1.0246657 1.0378048 1.0528445 1.1050755 #>  [430,] 0.5012335 0.7587487 0.8423746 0.9490423 0.9650572 1.0927180 1.1023811 #>  [431,] 0.3442101 0.5211989 0.5889357 0.5964394 0.6281531 0.6570715 0.6611589 #>  [432,] 0.8082328 0.9783249 1.0073136 1.0205865 1.1064185 1.1478876 1.2428928 #>  [433,] 0.3940069 0.4588362 0.5239362 0.5940738 0.6088722 0.7761283 0.7761762 #>  [434,] 0.4534126 1.0369971 1.0569947 1.0786293 1.1099051 1.1229004 1.1274600 #>  [435,] 0.4873355 0.5117290 0.5255782 0.6010068 0.6152202 0.7093686 0.7481712 #>  [436,] 0.4353189 0.5805710 0.6857129 0.7204157 0.7215293 0.7467309 0.8126626 #>  [437,] 1.2497752 1.2576318 1.2610325 1.2918894 1.3075422 1.4755878 1.4982571 #>  [438,] 0.5610902 0.5689899 0.7187059 0.7229791 0.7468014 0.8119144 0.8549597 #>  [439,] 0.5362531 0.7488187 0.7675419 0.7690824 0.8481930 0.8581503 0.8896023 #>  [440,] 0.2479372 0.3379360 0.3431534 0.4015926 0.4139840 0.4603668 0.4968342 #>  [441,] 0.4518217 0.5098448 0.6560337 0.6717767 0.7184534 0.7581074 0.7969011 #>  [442,] 0.4154304 0.4710014 0.5375424 0.5903543 0.6121681 0.6130889 0.6169053 #>  [443,] 0.9172140 1.1260541 1.1292042 1.1574430 1.2340228 1.2918354 1.3353744 #>  [444,] 0.3469414 0.4039615 0.5032637 0.5808813 0.6430017 0.6639371 0.7489598 #>  [445,] 0.7256906 0.8457550 0.9409548 0.9528252 0.9714679 1.0568413 1.0907273 #>  [446,] 0.7815974 0.9668022 1.0106046 1.0357936 1.0579507 1.1173265 1.1331815 #>  [447,] 0.5027664 0.5458388 0.5727677 0.5740294 0.5836126 0.6313138 0.6403316 #>  [448,] 0.4197199 0.5170386 0.5290386 0.5821900 0.6089716 0.6284889 0.6414996 #>  [449,] 0.4666871 0.5971391 0.6328792 0.7185784 0.7622339 0.7920481 0.7949032 #>  [450,] 0.6698419 0.8479874 0.8870444 0.9128998 0.9725572 1.1000530 1.1336616 #>  [451,] 0.3119767 0.3251332 0.3420110 0.3497946 0.4372331 0.4770162 0.4894600 #>  [452,] 0.6601876 0.8488360 0.9538526 1.0038815 1.0798312 1.1171227 1.1363969 #>  [453,] 0.2906642 0.3480003 0.3518192 0.5082435 0.5772551 0.5991600 0.6055480 #>  [454,] 0.2199395 0.3245311 0.4164892 0.4390508 0.4494426 0.4647473 0.4689921 #>  [455,] 0.5618673 0.5627312 0.5706524 0.5824014 0.6264373 0.6434955 0.6805507 #>  [456,] 0.3218932 0.3815127 0.5610902 0.7245689 0.7272245 0.7429378 0.7586986 #>  [457,] 0.8437962 0.9519414 0.9742031 1.0928535 1.1149277 1.1567066 1.2879472 #>  [458,] 0.3022679 0.3705540 0.5703703 0.6379025 0.6427611 0.6584974 0.6629885 #>  [459,] 0.1516637 0.2880667 0.4372013 0.5256378 0.5805939 0.5932144 0.6609395 #>  [460,] 0.3306562 0.4424737 0.5031186 0.6711264 0.7231496 0.7296123 0.7639935 #>  [461,] 0.4701511 0.7597113 0.7861569 0.8240850 0.8471259 0.9239663 0.9298937 #>  [462,] 0.4511219 0.4715919 0.4817672 0.5032770 0.5106559 0.5324210 0.5612890 #>  [463,] 0.4655745 0.5267160 0.5488030 0.5551719 0.5769288 0.6260415 0.6328554 #>  [464,] 0.3479518 0.6341295 0.8338283 0.8899912 0.9406224 1.0356781 1.0407837 #>  [465,] 0.4845327 0.6561072 0.6611589 0.6763553 0.6882739 0.7016336 0.7255282 #>  [466,] 0.2822553 0.4015631 0.4121957 0.4755218 0.5281400 0.5784289 0.5973783 #>  [467,] 0.4881874 0.5677097 0.5908107 0.6844379 0.6925500 0.7184534 0.7189885 #>  [468,] 0.4034391 0.4594279 0.5072813 0.5849368 0.6059930 0.6164502 0.6662965 #>  [469,] 0.4060242 0.4710014 0.4741639 0.4978126 0.5072439 0.5081117 0.5517097 #>  [470,] 0.5430772 0.5802231 0.6628841 0.6877467 0.7696924 0.7894414 0.8135431 #>  [471,] 0.5575150 0.5933595 0.6228975 0.6768107 0.7491564 0.7763072 0.7922945 #>  [472,] 0.8960344 0.9239663 1.0054148 1.0181440 1.0747644 1.1095406 1.1399571 #>  [473,] 0.3110745 0.6487909 0.7529326 0.7699000 0.7818447 0.8104974 0.8511910 #>  [474,] 1.3283233 1.3499838 1.3554320 1.3565350 1.4083409 1.4909420 1.5379752 #>  [475,] 0.6354994 0.6460401 0.6902393 0.7372283 0.7749723 0.8053991 0.8231018 #>  [476,] 0.6061652 0.6994619 0.7942224 0.8491758 0.8940535 0.9359491 0.9521935 #>  [477,] 0.3920450 0.4309992 0.5169144 0.5511310 0.6928435 0.7133906 0.7351868 #>  [478,] 0.2784699 0.4397730 0.5251448 0.5333964 0.5338453 0.6006737 0.6136711 #>  [479,] 0.5621991 0.7380243 0.8289068 1.1157166 1.1436593 1.1517729 1.2178710 #>  [480,] 0.4906986 0.8826200 0.9491058 0.9617849 0.9775624 0.9936132 1.0052448 #>  [481,] 0.8256896 0.8529215 1.0198413 1.0942367 1.1611642 1.2102388 1.2334866 #>  [482,] 0.2715188 0.4353951 0.4442320 0.4511219 0.4690315 0.5146824 0.5394937 #>  [483,] 0.3949158 0.7777896 0.8271833 0.8468654 0.9203458 0.9275093 0.9302578 #>  [484,] 0.3847131 0.5456329 0.5565640 0.5572237 0.6486475 0.6516147 0.6526808 #>  [485,] 0.2989964 0.3343215 0.3895203 0.4492563 0.4759766 0.5178804 0.5479139 #>  [486,] 0.4602819 0.4767431 0.5466896 0.5685891 0.6658440 0.7062103 0.7167543 #>  [487,] 0.2994323 0.3764155 0.4950835 0.5028142 0.5324231 0.5431829 0.5790846 #>  [488,] 0.4101326 0.4145308 0.4262969 0.5504038 0.5518062 0.5600268 0.5880242 #>  [489,] 0.2606045 0.3271948 0.4715919 0.5644370 0.6267381 0.6271592 0.6742520 #>  [490,] 0.2497108 0.4091100 0.5197607 0.5627312 0.5773018 0.5888745 0.5920745 #>  [491,] 1.0755045 1.1229988 1.1475454 1.2079359 1.2207330 1.3033224 1.3112135 #>  [492,] 0.4812167 0.6555649 0.7524096 0.9349990 0.9437623 0.9914288 1.0290641 #>  [493,] 0.4154304 0.4620874 0.4741639 0.5462654 0.5513565 0.6007925 0.6121713 #>  [494,] 0.5775067 0.6132197 0.6156232 0.6402302 0.6478216 0.6875796 0.7005903 #>  [495,] 0.2381427 0.2466502 0.4669493 0.5422606 0.5558993 0.5701851 0.5821900 #>  [496,] 0.2261799 0.4043541 0.4675681 0.6482628 0.7710551 0.8597552 0.9105958 #>  [497,] 0.4761274 0.5644306 0.5851460 0.6319855 0.6620309 0.6684510 0.7360710 #>  [498,] 0.8672851 1.0606472 1.5314587 1.6675846 1.6736266 1.7040650 1.7353930 #>  [499,] 0.3922067 0.6407605 0.6571260 0.6579930 0.7668827 0.8532111 0.8585379 #>  [500,] 0.6098933 0.6975344 0.8459930 0.8468186 0.8585379 0.8922663 0.9062131 #>  [501,] 0.6053737 0.9228788 0.9381927 0.9519414 0.9531269 0.9725572 0.9786024 #>  [502,] 0.3654383 0.4367016 0.5822079 0.6491822 0.6496646 0.7072696 0.7317978 #>  [503,] 0.3610222 0.3627970 0.3931155 0.4351559 0.4829974 0.4884964 0.4957854 #>  [504,] 0.8443921 0.9065718 0.9509285 1.0112202 1.2286854 1.2439925 1.2458560 #>  [505,] 0.6575188 0.6727162 0.9237126 0.9595692 1.0412325 1.0438448 1.0440553 #>  [506,] 0.4554826 0.4617709 0.5796300 0.5833629 0.6154784 0.6891083 0.7444935 #>  [507,] 0.3194513 0.3226538 0.4060305 0.4918744 0.4984680 0.5159417 0.5162413 #>  [508,] 0.3400546 0.3528206 0.3729650 0.3733287 0.4231477 0.4514583 0.5014862 #>  [509,] 0.1513933 0.2562815 0.3790206 0.4522917 0.4824674 0.5218481 0.5344561 #>  [510,] 0.3255037 0.3377905 0.3802623 0.4442818 0.4566303 0.4760082 0.4824845 #>  [511,] 0.7015621 0.7780194 0.8203674 0.9442843 1.0163482 1.0302979 1.0601633 #>  [512,] 0.4071333 0.4687092 0.6794487 0.7980645 0.8411138 0.8523472 0.8729844 #>  [513,] 0.4812167 0.7158553 0.7429378 0.7937811 0.8650411 0.8679100 0.8838919 #>  [514,] 0.4432931 0.4687092 0.6163178 0.6224867 0.7180597 0.7226002 0.7419483 #>  [515,] 0.2740866 0.3760932 0.4289456 0.4483602 0.4580318 0.4896321 0.4911487 #>  [516,] 0.6421101 0.7130678 0.7922945 0.8946249 0.9123959 1.0049571 1.0826545 #>  [517,] 0.3382783 0.4439274 0.4502408 0.5232716 0.6739166 0.6784618 0.7234309 #>  [518,] 0.1953825 0.2186445 0.3210725 0.3211265 0.3348329 0.4684212 0.5293122 #>  [519,] 0.2152512 0.3931155 0.4863816 0.4876135 0.4912181 0.5125243 0.5839884 #>  [520,] 0.2693225 0.2759467 0.2813038 0.4262569 0.4293714 0.4482817 0.4980486 #>  [521,] 0.3180998 0.3519166 0.4006243 0.4250194 0.4754374 0.4968342 0.4979559 #>  [522,] 0.2775697 0.3460634 0.4495114 0.4881874 0.6206305 0.6256762 0.6322739 #>  [523,] 0.4192847 0.5748453 0.6800585 0.6848995 0.6906528 0.7250813 0.7376818 #>  [524,] 0.1945529 0.3199466 0.3737846 0.4143870 0.4807835 0.5118307 0.5879115 #>  [525,] 0.4516977 0.4914268 0.6197973 0.6333033 0.6511886 0.6816563 0.6912840 #>  [526,] 0.2948712 0.3388367 0.4163980 0.4262569 0.5093577 0.5231681 0.5246248 #>  [527,] 0.3926288 0.5627052 0.5750946 0.6175907 0.6435848 0.6513006 0.6514018 #>  [528,] 0.2616838 0.2968328 0.4265245 0.4677838 0.4959733 0.5096321 0.5338453 #>  [529,] 0.5294152 0.5553460 0.5574063 0.5800260 0.6477714 0.7664854 0.7730065 #>  [530,] 0.4612920 0.4701818 0.4912181 0.5923151 0.6119605 0.6142220 0.6359263 #>  [531,] 0.4761276 0.4827825 0.5772551 0.6284877 0.6584859 0.7733952 0.8246394 #>  [532,] 0.7410780 0.7970039 0.8143584 0.8574424 0.8585360 0.9002276 0.9324881 #>  [533,] 0.3582446 0.5016408 0.5871071 0.5926014 0.6564377 0.6851974 0.7578729 #>  [534,] 0.4626404 0.5101005 0.6392841 0.6717767 0.7297266 0.7872788 0.7918219 #>  [535,] 0.2064529 0.3486985 0.3752893 0.4399143 0.4900127 0.5311404 0.5469580 #>  [536,] 0.4131840 0.4187939 0.4618706 0.5196643 0.5285520 0.5335125 0.5363612 #>  [537,] 0.9802931 1.0085945 1.1190492 1.1580529 1.2127276 1.2797914 1.3401562 #>  [538,] 0.4033779 0.4515065 0.5176574 0.6029565 0.6562975 0.6570734 0.6624874 #>  [539,] 0.4137192 0.4303545 0.4965659 0.5147746 0.5200230 0.5466556 0.5824518 #>  [540,] 0.4268754 0.6006737 0.6029548 0.7481381 0.7543755 0.7884927 0.7925636 #>  [541,] 0.4173145 0.4852212 0.4964357 0.5187948 0.6044879 0.6179884 0.6214815 #>  [542,] 0.3716238 0.3921353 0.4497257 0.4621338 0.4675087 0.5183140 0.5365497 #>  [543,] 0.5590880 0.6217383 0.6553864 0.7030717 0.7123741 0.8027314 0.8424176 #>  [544,] 0.6228975 0.7092944 0.7130678 0.7194708 0.7581074 0.7709307 0.8867620 #>  [545,] 0.7642193 0.7677822 0.8004643 0.9358616 0.9525112 1.0061492 1.0075980 #>  [546,] 0.3616921 0.5993202 0.6564331 0.6928435 0.7312445 0.7861820 0.8731272 #>  [547,] 0.3759131 0.3952473 0.5161238 0.5403141 0.6151425 0.6219895 0.6255389 #>  [548,] 0.3962631 0.4197521 0.4442320 0.4626712 0.4645939 0.5166976 0.5288210 #>  [549,] 0.3748384 0.4060305 0.4983098 0.5149257 0.5313648 0.5665967 0.6229789 #>  [550,] 0.3969316 0.4645939 0.4877234 0.5347159 0.5382760 0.5494369 0.5521181 #>  [551,] 0.5074217 0.5600278 0.5725333 0.6349184 0.6414394 0.6712888 0.6805933 #>  [552,] 0.4122874 0.5342877 0.6387866 0.7071514 0.7147263 0.7553941 0.7616290 #>  [553,] 0.3136811 0.3591291 0.3648767 0.4611182 0.5065820 0.5590342 0.5726624 #>  [554,] 0.6569941 0.7002333 0.7174115 0.7838621 0.8509170 0.8898739 0.8944138 #>  [555,] 0.3175065 0.5153154 0.5153891 0.6770356 0.6888630 0.7164118 0.7619629 #>  [556,] 0.4076845 0.6407231 1.0348992 1.0538053 1.2188385 1.2262795 1.3964081 #>  [557,] 0.4276538 0.4722133 0.5453428 0.6061247 0.6547983 0.6768107 0.6884184 #>  [558,] 0.5356923 0.7928753 0.8005597 0.8042336 0.8293937 0.8581012 0.8855284 #>  [559,] 0.4250885 0.4336200 0.4702059 0.6106687 0.6573586 0.6672689 0.7408329 #>  [560,] 0.5455886 0.5621656 0.6639677 0.6752203 0.7567551 0.8110190 0.8886921 #>  [561,] 0.1795974 0.4273660 0.4494273 0.4519956 0.4581435 0.4713679 0.5033294 #>  [562,] 0.3676796 0.3694662 0.6583466 0.6864874 0.6961601 0.8013158 0.9097180 #>  [563,] 1.4130102 1.5253083 1.5741346 1.6285533 1.6514207 1.6728393 1.7517043 #>  [564,] 0.5574063 0.6004637 0.6752203 0.6839199 0.7186137 0.7517288 0.7961145 #>  [565,] 0.3764369 0.4490654 0.4959349 0.5116634 0.5511310 0.6000083 0.6294703 #>  [566,] 0.5175896 0.6183072 0.6413582 0.6629885 0.6667443 0.6705939 0.6894500 #>  [567,] 0.1711273 0.3224492 0.3483525 0.3568845 0.3617838 0.3947171 0.4116469 #>  [568,] 0.4274242 0.6284543 0.7226148 0.7918031 0.7982956 0.9098522 0.9500044 #>  [569,] 0.2813038 0.3202046 0.4251142 0.4739168 0.4750999 0.4796208 0.4956681 #>  [570,] 0.3817453 0.4745192 0.4865239 0.4938254 0.5316909 0.5358078 0.5460535 #>  [571,] 0.5213234 0.6671403 0.6907237 0.7807750 0.8002246 0.8477643 0.8693754 #>  [572,] 0.3177721 0.4296143 0.4546533 0.5724691 0.5766428 0.5940738 0.5950222 #>  [573,] 0.3254118 0.4390508 0.4927788 0.5200093 0.5463215 0.5835757 0.5948946 #>  [574,] 0.3471981 0.5697230 0.6079791 0.6206001 0.6293203 0.6368735 0.6969799 #>  [575,] 0.3618233 0.5080473 0.5110231 0.5833629 0.6830868 0.6984203 0.7033000 #>  [576,] 0.5473630 0.5821892 0.8154416 0.8256896 0.8632318 0.8916923 0.9762529 #>  [577,] 1.0565900 1.0598180 1.0696603 1.1159874 1.1477836 1.2144027 1.2178457 #>  [578,] 0.3013858 0.3437007 0.3446236 0.3703159 0.3802623 0.3921353 0.4315286 #>  [579,] 0.6808040 0.6924019 0.7545476 0.9014678 0.9246875 0.9547031 0.9559583 #>  [580,] 0.4087023 0.6143769 0.6295275 0.6432214 0.6969799 0.7281374 0.7749723 #>  [581,] 0.3978781 0.4914268 0.5908219 0.6136711 0.6298587 0.7086013 0.7236682 #>  [582,] 0.3885040 0.5031038 0.5294152 0.5631789 0.5765767 0.5888745 0.6269651 #>  [583,] 0.4873565 0.5284236 0.6230817 0.6930433 0.7673950 0.8042291 0.8306381 #>  [584,] 0.4737772 0.4852336 0.5130768 0.5474090 0.5883350 0.5895203 0.6515466 #>  [585,] 0.1945529 0.3846624 0.3911048 0.4203005 0.4695127 0.5225249 0.6023550 #>  [586,] 0.4159788 0.5267384 0.5525904 0.5895203 0.6201108 0.6413890 0.7417023 #>  [587,] 0.5621991 0.6691271 0.7960226 0.9141678 0.9280779 0.9761577 1.0082943 #>  [588,] 0.3479518 0.6894690 0.7362107 0.7848294 1.0022181 1.0425298 1.0649437 #>  [589,] 0.2947907 0.4028080 0.4265245 0.4303545 0.4397730 0.4555925 0.4888760 #>  [590,] 0.4512719 0.4864941 0.4963933 0.5192732 0.5216372 0.5290386 0.5558993 #>  [591,] 0.3607994 0.3939682 0.4723156 0.4800523 0.5072813 0.5178909 0.5514851 #>  [592,] 1.4273659 1.4694657 1.4931552 1.5242224 1.5260870 1.6104921 1.6146658 #>  [593,] 0.2453596 0.3064548 0.3619748 0.5195674 0.5420985 0.6029503 0.6626235 #>  [594,] 0.5142712 0.6601876 0.7785696 0.8147735 0.8179520 0.8262543 0.9258185 #>  [595,] 0.5448312 0.5720096 0.7245206 0.7293066 0.7309279 0.7346810 0.7413853 #>  [596,] 0.4314329 0.4424737 0.4961469 0.4968533 0.5418305 0.5798258 0.5865573 #>  [597,] 0.3234841 0.4477415 0.5239362 0.5419905 0.5950222 0.6007638 0.6775990 #>  [598,] 0.5287387 0.6001610 0.6172515 0.6365450 0.6751672 0.7099407 0.7795961 #>  [599,] 0.3676796 0.5227128 0.5668504 0.7880567 0.8350859 0.9338876 0.9800287 #>  [600,] 0.6749461 0.8623178 1.3554320 1.4687477 1.4992067 1.5863691 1.6560705 #>  [601,] 0.2513093 0.4172473 0.6570155 0.8213007 0.8750817 0.8751129 0.8958579 #>  [602,] 0.8437962 0.9381927 0.9557813 1.0182307 1.2027533 1.2079910 1.2098481 #>  [603,] 0.1902383 0.5970816 0.6145326 0.6284877 0.7032852 0.7116184 0.8247509 #>  [604,] 0.9088701 1.2168789 1.4924075 1.5358723 1.5868582 1.6552825 1.6561885 #>  [605,] 0.8059130 1.0182307 1.0308273 1.1090504 1.1149277 1.2438616 1.3152878 #>  [606,] 0.4569092 0.4579367 0.4737772 0.5525904 0.5909176 0.5929496 0.5946830 #>  [607,] 0.4076845 0.4951845 0.7688623 1.0246594 1.0446967 1.1197402 1.1243395 #>  [608,] 0.4600799 0.4934717 0.5086732 0.5170595 0.5280241 0.5693460 0.5813680 #>  [609,] 0.5881734 0.6888630 0.7606515 0.7816567 0.7828281 0.7829968 0.8258687 #>  [610,] 0.5601551 1.0089832 1.2689869 1.4751145 1.5462686 1.5810618 1.6227747 #>  [611,] 0.2838058 0.5667552 0.6032944 0.6805507 0.7471525 0.7540830 0.7692032 #>  [612,] 0.1697641 0.4116713 0.5123543 0.6565112 0.6648494 0.7422066 0.7538667 #>  [613,] 0.2766520 0.4820995 0.5088910 0.5229429 0.7125201 0.8081058 0.8085126 #>  [614,] 0.6451323 0.7184485 0.8026091 0.9291269 0.9872640 1.0930219 1.1160368 #>  [615,] 0.5172792 0.6848048 0.8302620 0.8356429 0.8526801 0.9025229 0.9078253 #>  [616,] 0.4210529 0.4923794 0.7131462 0.7427053 0.8294252 0.8740610 0.9057520 #>  [617,] 0.2759467 0.3202046 0.3489624 0.4163980 0.4416485 0.5142382 0.5278123 #>  [618,] 0.3787054 0.4266848 0.4637771 0.6422649 0.7026800 0.7804088 0.7915065 #>  [619,] 0.3124816 0.6015168 0.6698419 0.7146164 0.8599350 0.8662033 0.8795654 #>  [620,] 0.5205839 0.6020591 0.6141887 0.7868111 0.8112118 0.8610307 0.9414390 #>  [621,] 0.2974010 0.3437007 0.3925415 0.4131840 0.4539556 0.4824845 0.4914033 #>  [622,] 0.3665075 0.4119780 0.4262969 0.6002915 0.6789116 0.6836806 0.6866317 #>  [623,] 0.2491209 0.2931128 0.3518274 0.3752893 0.4307607 0.5158467 0.5467389 #>  [624,] 0.2067751 0.5582569 0.6249212 0.6268518 0.6778804 0.6846204 0.6962268 #>  [625,] 0.2750581 0.3784374 0.4695127 0.4807835 0.5175572 0.5678014 0.6102430 #>  [626,] 0.3665075 0.4945547 0.4963191 0.5076715 0.5406000 0.5452802 0.5737518 #>  [627,] 0.3213774 0.4053210 0.4273660 0.4454994 0.4733687 0.4794664 0.4917165 #>  [628,] 0.7709307 0.8087371 0.8217941 0.8851783 0.8946249 0.9936201 0.9997447 #>  [629,] 0.4387226 0.5372938 0.5952104 0.6102623 0.6771985 0.7404293 0.7578729 #>  [630,] 0.6358657 0.6562236 0.6584688 0.7077313 0.7086190 0.7111517 0.7381117 #>  [631,] 1.0227210 1.4808613 1.4817486 1.5180604 1.5745202 1.6471270 1.6613145 #>  [632,] 0.4145308 0.5477304 0.5721606 0.5795257 0.6477337 0.6548663 0.7134267 #>  [633,] 0.3306562 0.4968533 0.5238685 0.7018688 0.7128017 0.7614559 0.7790615 #>  [634,] 0.2914631 0.4488400 0.4728161 0.4905940 0.5539938 0.5796259 0.5849368 #>  [635,] 0.1379702 0.2105118 0.2341000 0.3224492 0.3251332 0.3936948 0.4239375 #>  [636,] 0.6451323 0.7348102 0.7505323 0.7831294 0.8030479 0.9797989 1.0630169 #>  [637,] 0.3090277 0.3255037 0.3567862 0.5005773 0.5252812 0.5285520 0.5935618 #>  [638,] 0.2470519 0.2991401 0.5600278 0.6516060 0.6623799 0.8411692 0.8507924 #>  [639,] 0.4096667 0.5560317 0.5660470 0.6152202 0.6317795 0.6434513 0.7050490 #>  [640,] 0.6187304 0.6408324 0.8692727 0.8743651 0.9050567 0.9132109 0.9248696 #>  [641,] 0.2875904 0.4204325 0.4417147 0.4548303 0.4917165 0.5468730 0.5574880 #>  [642,] 0.5394878 1.0052826 1.1580820 1.2165050 1.2900154 1.4255659 1.4293168 #>  [643,] 0.7380243 0.9141678 1.0844054 1.2382117 1.3624969 1.4381560 1.4535766 #>  [644,] 0.6141368 0.8138490 0.8698377 0.8896762 1.1331851 1.1708983 1.1797592 #>  [645,] 0.1795974 0.3809388 0.4521712 0.4794664 0.4805731 0.5086732 0.5564418 #>  [646,] 0.5533531 0.5767448 0.6290033 0.6906099 0.7524070 0.7639443 0.7731054 #>  [647,] 0.2213794 0.4173145 0.4313025 0.5013116 0.5552544 0.5663406 0.5718502 #>  [648,] 0.4951845 0.6407231 0.9360641 1.1192343 1.2902966 1.3178522 1.3404180 #>  [649,] 0.7869336 0.8581012 0.8948957 0.9019051 1.0559661 1.0682843 1.1090795 #>  [650,] 0.4124584 0.4450827 0.4725139 0.4759766 0.5531432 0.5985621 0.5987407 #>  [651,] 0.5085578 0.6636887 0.6665510 0.7075745 0.7425669 0.7821193 0.8159214 #>  [652,] 0.9808304 1.2008713 1.2623623 1.4674445 1.4860651 1.5325802 1.5829165 #>  [653,] 0.5047104 0.5430772 0.6243799 0.6303021 0.6549016 0.6689775 0.7197942 #>  [654,] 0.4600592 0.4606252 0.4979449 0.5153154 0.5384151 0.5706524 0.5801488 #>  [655,] 0.4807627 0.5191509 0.6453397 0.6964767 0.7872079 0.9049099 0.9340928 #>  [656,] 0.4064159 0.4197199 0.4655661 0.5192732 0.5193437 0.5350074 0.5422606 #>  [657,] 0.2894974 0.3887750 0.5535432 0.5835431 0.5912650 0.6161380 0.6417127 #>  [658,] 0.6144585 0.6482948 0.6865996 0.7465437 0.7673382 0.7710551 0.8390568 #>  [659,] 0.6217462 0.8226266 0.8672501 0.8922744 0.9007713 0.9415717 0.9608157 #>  [660,] 0.5082676 0.5155092 0.6281673 0.6541399 0.6844859 0.7041751 0.7176055 #>  [661,] 0.2188662 0.2633925 0.3480003 0.5506717 0.5639420 0.5958109 0.6000449 #>  [662,] 0.5782895 0.6722499 0.7308951 0.7679422 0.8034189 0.8378758 0.8895943 #>  [663,] 0.8987024 1.0788385 1.1799653 1.4394791 1.5217874 1.5534015 1.5624757 #>  [664,] 0.4285564 0.5809340 0.6948830 0.7545476 0.7673588 0.8183631 0.8436812 #>  [665,] 0.3551558 0.6020591 0.7459305 0.8729096 0.8822510 0.8972432 0.9080593 #>  [666,] 0.3343215 0.3589196 0.4124584 0.4499099 0.4739026 0.5085496 0.5183140 #>  [667,] 0.2931128 0.3108371 0.3486985 0.4355955 0.5117244 0.5199104 0.5319777 #>  [668,] 0.3602460 0.4638494 0.5500300 0.5788443 0.7213109 0.7359712 0.7393357 #>  [669,] 0.3110503 0.3654383 0.5767448 0.5848090 0.6136564 0.6515479 0.7000127 #>  [670,] 0.3064548 0.5100934 0.5147359 0.5391871 0.5854680 0.5900449 0.6373922 #>  [671,] 0.2178416 0.3752953 0.4387226 0.5010213 0.5626414 0.6564377 0.7506221 #>  [672,] 0.4356132 0.6739531 0.7258280 0.7882824 0.8477541 0.9393665 0.9650572 #>  [673,] 1.0722725 1.1010097 1.1624717 1.1717644 1.2344077 1.3401562 1.3429557 #>  [674,] 0.2894974 0.3335011 0.4740814 0.5026875 0.5218788 0.5231561 0.5678014 #>  [675,] 0.4490654 0.4561176 0.5164387 0.5349754 0.5596959 0.6569985 0.6638007 #>  [676,] 0.7982722 0.8112725 0.8750817 0.9508330 0.9682766 1.0045340 1.0082881 #>  [677,] 0.7389644 0.7534253 0.8287835 0.8657834 0.8761598 0.8796622 0.8915225 #>  [678,] 0.7807750 0.8145668 0.9301462 0.9528252 1.0968705 1.1316257 1.1684780 #>  [679,] 0.3527131 0.3980350 0.6265907 0.7398363 0.7583641 0.7823867 0.7941689 #>  [680,] 0.2222932 0.2974010 0.3446236 0.3637426 0.4173236 0.4295104 0.4621338 #>  [681,] 0.3504076 0.4250885 0.5596752 0.6552821 0.6834705 0.6918451 0.7243603 #>  [682,] 0.4498139 0.5394745 0.7101575 0.7905377 0.7912015 0.9172451 0.9649472 #>  [683,] 0.4101565 0.6000408 0.8004643 0.8240850 0.8630802 1.0527439 1.1664127 #>  [684,] 0.3648767 0.4244611 0.4323169 0.4785129 0.4848906 0.4918744 0.5110921 #>  [685,] 0.3851943 0.5480810 0.5482485 0.6448563 0.6597987 0.6755561 0.6869172 #>  [686,] 0.8629755 0.8666780 0.9056975 0.9897650 1.0648113 1.0919325 1.0934960 #>  [687,] 0.2491209 0.3108371 0.4276538 0.5075491 0.5469580 0.5476763 0.5778746 #>  [688,] 0.5199243 0.6217462 0.7305756 0.7564509 0.9065373 0.9760547 1.0093745 #>  [689,] 0.5365163 0.5767200 0.7621088 0.7653146 0.8320946 0.8596582 0.8862517 #>  [690,] 0.3288424 0.3940069 0.4296143 0.4477415 0.6228671 0.6413321 0.7488742 #>  [691,] 0.4270915 0.4699923 0.5115378 0.5265330 0.5796216 0.6626235 0.6876301 #>  [692,] 0.3131082 0.4135262 0.4865239 0.5543687 0.5819255 0.5901983 0.5937317 #>  [693,] 0.3368398 0.3871070 0.4502408 0.5234100 0.5408483 0.5772118 0.5996609 #>  [694,] 0.3522048 0.5203655 0.5436297 0.6855937 0.7047720 0.7122323 0.7123741 #>  [695,] 0.3055313 0.4115992 0.4675087 0.5125975 0.5230520 0.5350350 0.5746814 #>  [696,] 0.4812631 0.5805710 0.8105931 0.8269546 0.8729156 0.9058193 0.9187201 #>  [697,] 0.5394745 0.7458774 0.7620329 0.7932045 0.8581711 0.8786900 0.9002011 #>  [698,] 0.4285564 0.5874314 0.6808040 0.6825113 0.7038499 0.7092944 0.7471645 #>  [699,] 0.3314204 0.4652960 0.5522705 0.6997040 0.7204230 0.7835950 0.7880859 #>  [700,] 0.7109512 0.7194933 0.7699234 0.8523472 0.8525175 0.9724110 0.9900134 #>  [701,] 0.3726157 0.4034391 0.5178909 0.5344963 0.5462945 0.5539938 0.5589891 #>  [702,] 0.4873565 0.6030362 0.6290033 0.6782859 0.7312445 0.7583666 0.8301851 #>  [703,] 0.7703098 0.8666780 0.8845093 0.9186774 0.9389065 0.9691295 0.9921577 #>  [704,] 0.5934633 0.7543083 0.7918019 0.7936557 0.8032102 0.8145492 0.8194104 #>  [705,] 0.7410780 0.8787514 0.9760547 0.9988950 1.0432479 1.1095406 1.1395413 #>  [706,] 0.2975174 0.3107426 0.3238399 0.3357322 0.3400546 0.4372489 0.4722561 #>  [707,] 0.4420475 0.4600592 0.4958677 0.5473298 0.5506717 0.5983366 0.5991600 #>  [708,] 1.0008048 1.0160068 1.0177972 1.0462404 1.0527622 1.1020415 1.1171852 #>  [709,] 0.4123550 0.4723156 0.5185874 0.5775067 0.5869208 0.5874314 0.6368735 #>  [710,] 0.2262048 0.2395906 0.3799912 0.4493088 0.4580720 0.4584325 0.4683752 #>  [711,] 0.3495144 0.5507593 0.6094884 0.6743966 0.6933514 0.7263129 0.7706943 #>  [712,] 0.6722499 0.7469213 0.9142305 0.9493010 1.0106046 1.1178949 1.1231042 #>  [713,] 0.6415667 0.8112118 0.9257247 0.9718507 1.0927985 1.1079479 1.1752148 #>  [714,] 0.3292637 0.3887225 0.4319104 0.5456329 0.6577424 0.6995920 0.7081953 #>  [715,] 0.2439420 0.3972498 0.4323169 0.4390465 0.4494881 0.4611182 0.4617533 #>  [716,] 0.6583074 1.1008367 1.1055488 1.1395413 1.1549931 1.1604910 1.2171499 #>  [717,] 0.3613733 0.3721158 0.5997831 0.6180113 0.6755733 0.6782478 0.7057280 #>  [718,] 0.8442702 0.9511454 1.0311437 1.0475451 1.1256733 1.1398825 1.1656800 #>  [719,] 0.2350765 0.3448947 0.4269251 0.4464470 0.5261102 0.5316909 0.5689416 #>  [720,] 0.3382783 0.5624171 0.5996609 0.6283901 0.6832693 0.6942933 0.6965875 #>  [721,] 0.4722133 0.6494698 0.6993605 0.7083079 0.7471645 0.7778101 0.7807349 #>  [722,] 0.5656778 0.6022050 0.6043351 0.6189907 0.6249072 0.6402302 0.6592223 #>  [723,] 0.1756748 0.2188662 0.2906642 0.4958677 0.6224914 0.6815340 0.6988852 #>  [724,] 0.5116332 0.5265330 0.6056577 0.6858223 0.7463445 0.7529023 0.7807365 #>  [725,] 0.7256906 0.8145668 1.1783933 1.2326504 1.2596579 1.2800522 1.3212610 #>  [726,] 0.1756748 0.2633925 0.3518192 0.4420475 0.5801488 0.6163193 0.6225496 #>  [727,] 0.2126666 0.3217388 0.4177365 0.4276626 0.4445131 0.4445350 0.4675332 #>  [728,] 0.4966817 0.5804593 0.6357067 0.6561072 0.6639506 0.6822400 0.6980523 #>  [729,] 0.4779012 0.5032637 0.5058535 0.7069455 0.7651423 0.8030479 0.8256414 #>  [730,] 0.3255484 0.3708620 0.4116713 0.4255024 0.4579367 0.4852336 0.5670797 #>  [731,] 0.2568057 0.6096679 0.6168592 0.6797020 0.6836261 0.6960587 0.7625682 #>  [732,] 0.1053399 0.3721016 0.4273248 0.4315286 0.4451559 0.4509297 0.4637310 #>  [733,] 0.5606328 0.5852337 0.5903593 0.6147374 0.6185066 0.6597153 0.6686805 #>  [734,] 0.5959667 0.7872788 0.8648781 0.9328006 0.9399384 0.9861202 1.0797011 #>  [735,] 0.3169376 0.4040704 0.4340155 0.4343075 0.6980523 0.6989823 0.7578083 #>  [736,] 0.8865712 0.9402197 1.0540563 1.0862872 1.0984029 1.1015940 1.1323886 #>  [737,] 0.2662746 0.5815396 0.5894188 0.7675419 0.8296777 0.8442661 0.8969396 #>  [738,] 0.3388367 0.4199393 0.5464678 0.6006683 0.6115534 0.6286655 0.6828748 #>  [739,] 0.4087023 0.5009580 0.6430287 0.6572034 0.6955028 0.7110594 0.7575203 #>  [740,] 0.4321428 0.4341824 0.4845719 0.5303572 0.5494369 0.6090261 0.6578099 #>  [741,] 0.1276525 0.2341000 0.2730954 0.2743106 0.3420110 0.4104659 0.4116469 #>  [742,] 0.4383920 0.7733831 0.9079794 0.9490733 0.9712453 0.9965755 1.1513390 #>  [743,] 0.5267384 0.6849641 0.6877684 0.7662820 0.7709150 0.8782630 0.8933974 #>  [744,] 0.5218122 0.5786941 0.6178904 0.7363126 0.7978153 0.9959008 1.0065738 #>  [745,] 0.3599027 0.3834029 0.4805731 0.5260648 0.5762792 0.5813680 0.6142220 #>  [746,] 0.8370871 0.9510173 0.9811541 1.0606472 1.1069434 1.1163588 1.1779457 #>  [747,] 0.3639847 0.3984576 0.4863816 0.5246408 0.5959592 0.6134247 0.6223092 #>  [748,] 0.3339395 0.4517937 0.4617125 0.4845327 0.5032770 0.5084518 0.5211989 #>  [749,] 0.3787054 0.4924951 0.4949191 0.6579639 0.6601669 0.6619032 0.7063157 #>  [750,] 0.4844371 0.4880590 0.5101005 0.5269856 0.6810029 0.6961549 0.7011940 #>  [751,] 0.4581918 0.5212387 0.6668747 0.7072696 0.7762757 0.7860133 0.8172302 #>  [752,] 0.3505337 0.4356923 0.4399845 0.4539556 0.4618706 0.4894600 0.5083793 #>  [753,] 0.2581276 0.3210725 0.3327387 0.3763290 0.4522027 0.4787311 0.4790633 #>  [754,] 0.5683315 0.6823676 0.8082328 0.8123156 0.8422369 0.8550138 0.8919418 #>  [755,] 0.5480682 0.5586869 0.6299362 0.6505538 0.6636627 0.6706124 0.6710631 #>  [756,] 0.6970039 0.8807600 1.2019961 1.2207945 1.2754429 1.2892438 1.3293811 #>  [757,] 0.4210529 0.6200645 0.7035861 0.7246312 0.7741867 0.7755237 0.8262543 #>  [758,] 0.2381427 0.4233503 0.4582758 0.4817209 0.4963933 0.5227214 0.5534048 #>  [759,] 0.3571502 0.3721016 0.3799912 0.3803319 0.4226920 0.4803561 0.5472410 #>  [760,] 0.6217383 0.8362561 1.0439542 1.0550429 1.0860294 1.0900997 1.1458608 #>  [761,] 0.3458780 0.4174363 0.5268012 0.7035724 0.7339034 0.7457070 0.7913584 #>  [762,] 0.3979765 0.4880590 0.5999850 0.6727162 0.7460196 0.7918219 0.9192768 #>  [763,] 0.6997959 0.9806775 1.0013962 1.1749265 1.2381991 1.2436966 1.2513013 #>  [764,] 0.8202107 0.8472847 0.9144112 0.9468521 0.9501205 0.9516706 0.9673021 #>  [765,] 0.3110745 0.3608656 0.5344343 0.6607205 0.6661896 0.6897921 0.7920755 #>  [766,] 0.2453596 0.3768753 0.4856680 0.5100934 0.5884292 0.6963808 0.7111705 #>  [767,] 1.3261127 1.4156640 1.5773453 1.8042373 1.8730389 1.8920525 1.9064165 #>  [768,] 0.6960585 0.7041834 0.7226148 0.7793941 0.7861820 0.8871951 0.8899348 #>  [769,] 0.6374408 0.7294704 0.8128482 0.8614007 0.8736359 0.8880393 0.8984983 #>  [770,] 0.8623178 1.2870260 1.5642794 1.5985368 1.6490160 1.9229080 1.9327162 #>  [771,] 0.3348730 0.4401061 0.4458852 0.4515065 0.4725139 0.5594881 0.5674737 #>  [772,] 0.6578229 0.7083924 0.8026652 0.8097904 0.9010558 0.9897011 0.9901472 #>  [773,] 0.3984576 0.4247733 0.4780416 0.5114435 0.5605496 0.5739148 0.6019411 #>  [774,] 0.4526355 0.5307067 0.5424332 0.6266055 0.6925500 0.7083079 0.7297467 #>  [775,] 0.4223576 0.4488400 0.4828852 0.5856566 0.5973783 0.5980662 0.6077687 #>  [776,] 0.5895551 0.8049784 0.8269546 0.8567409 0.8860132 0.9123959 0.9569612 #>  [777,] 0.5142108 0.6176849 0.6579930 0.7962841 0.8186202 0.9144112 1.0353234 #>  [778,] 0.2376831 0.3126879 0.3572738 0.4711848 0.4818542 0.5281400 0.5858164 #>  [779,] 0.6541399 0.6750244 0.7814085 0.8567060 0.8872311 0.8952516 0.8990320 #>  [780,] 0.1444199 0.2255546 0.3544090 0.4289456 0.4354272 0.4449278 0.4615023 #>  [781,] 0.5708953 0.6156220 0.6800585 0.6952724 0.7461550 0.8267125 0.8626267 #>  [782,] 0.4562528 0.4675681 0.7719437 0.7815974 0.7930378 0.9989728 1.0275928 #>  [783,] 0.5047104 0.6159064 0.6516801 0.6570155 0.7682973 0.7904439 0.7968346 #>  [784,] 0.5925412 0.5964435 0.6143769 0.7128017 0.7639935 0.7690322 0.8039289 #>  [785,] 0.1910779 0.3847131 0.3887225 0.6503614 0.6517182 0.6600567 0.7052722 #>  [786,] 0.3110503 0.4111557 0.5533531 0.5829555 0.6033861 0.6491822 0.6606580 #>  [787,] 0.2395906 0.3701772 0.3882072 0.4159085 0.4164093 0.4496883 0.4803561 #>  [788,] 0.6120648 0.6359739 0.7030044 0.7077313 0.8783713 0.8998216 1.0720871 #>  [789,] 0.5117290 0.5428951 0.5548189 0.6434513 0.6484999 0.6550524 0.7639443 #>  [790,] 0.5905170 0.5949562 0.5964435 0.6482628 0.7465437 0.7533525 0.7930378 #>  [791,] 0.5843235 0.6156220 0.6848995 0.6995920 0.7095227 0.7937989 0.8867003 #>  [792,] 0.9338876 0.9609884 0.9818079 0.9927308 0.9936132 1.0449216 1.0568413 #>  [793,] 0.2975174 0.3099523 0.3467165 0.3966177 0.4079279 0.4358947 0.5014862 #>  [794,] 0.5830046 0.7594607 0.9074261 0.9569173 1.0039204 1.0517889 1.1137207 #>  [795,] 0.9601446 1.0837892 1.1458608 1.1659820 1.2216131 1.3619159 1.3892491 #>  [796,] 0.2084596 0.2459724 0.5006439 0.5039633 0.5518062 0.6149214 0.6159863 #>  [797,] 0.4671841 0.5012335 0.5938974 0.6739531 0.8227304 0.9518261 0.9719461 #>  [798,] 0.3823685 0.5362531 0.5894188 0.7907778 0.7922607 0.8058392 0.8143794 #>  [799,] 0.6747185 0.7451610 0.7505323 0.7583702 0.8051029 0.8606825 0.8752074 #>  [800,] 0.2838058 0.5978052 0.5983366 0.6504422 0.6637431 0.6831417 0.6889155 #>  [801,] 0.6970039 1.1726212 1.2040119 1.2134427 1.3773918 1.3970538 1.4281047 #>  [802,] 0.6552567 1.5745202 1.5899039 1.6010639 1.6491330 1.6860428 1.6991957 #>  [803,] 0.1826120 0.2376831 0.3432534 0.4228516 0.4507569 0.4755218 0.5517097 #>  [804,] 0.2459724 0.3409218 0.4101326 0.5182537 0.5434056 0.5670838 0.5749716 #>  [805,] 0.1113919 0.5553909 0.5786941 0.6333033 0.7181224 0.7204230 0.7387563 #>  [806,] 0.3234841 0.4828355 0.5212387 0.5724691 0.5864139 0.6088722 0.6413321 #>  [807,] 0.2659000 0.3194513 0.3468902 0.4562456 0.4589775 0.4935795 0.4981944 #>  [808,] 0.7151458 0.7582631 1.0415524 1.0583727 1.1854683 1.2773946 1.3106859 #>  [809,] 0.3745243 0.4662847 0.5375424 0.5655261 0.5856566 0.6211211 0.6357867 #>  [810,] 0.8729156 0.8836388 1.0459596 1.0890405 1.1858843 1.4051586 1.4091006 #>  [811,] 0.2205418 0.3627970 0.4036893 0.4381331 0.4760082 0.4960234 0.4963439 #>  [812,] 0.3442571 0.3568845 0.4239375 0.4321943 0.4675332 0.4839231 0.5387106 #>  [813,] 0.3131082 0.4518846 0.4589743 0.4642686 0.6168375 0.7151718 0.7685468 #>  [814,] 0.4493405 0.5544399 0.6387866 0.7639675 0.7672030 0.7958773 0.8896762 #>  [815,] 0.3234918 0.4255024 0.5163456 0.5883350 0.6344793 0.6667443 0.6773092 #>  [816,] 0.4467089 0.5795257 0.5800381 0.6022050 0.6453397 0.6815893 0.7596701 #>  [817,] 0.5403399 0.6267967 0.7366617 0.8216590 0.8471259 0.8551457 0.8960344 #>  [818,] 0.6032944 0.7422383 0.7441348 0.7479362 0.8433714 0.8754808 0.8824545 #>  [819,] 0.1874870 0.3729650 0.3842816 0.4704471 0.5117244 0.5218481 0.5353298 #>  [820,] 0.4000258 0.5026129 0.5466896 0.5824014 0.5920745 0.6075354 0.6805680 #>  [821,] 0.2350765 0.3732293 0.4201332 0.4451559 0.4492124 0.5079862 0.5083793 #>  [822,] 0.6422649 0.7180295 0.8052273 0.8615794 0.8640384 0.9576967 0.9826480 #>  [823,] 0.4172473 0.4869735 0.7583930 0.7696924 0.7982722 0.8931862 0.9140443 #>  [824,] 0.4439274 0.5408483 0.5548477 0.5624171 0.6235712 0.6315625 0.7112544 #>  [825,] 0.4803953 0.7081953 0.7174605 0.7481203 0.9815464 0.9944576 1.0000567 #>  [826,] 0.2693225 0.2948712 0.3236677 0.4416485 0.4796208 0.5260477 0.5265417 #>  [827,] 0.7653146 0.8543876 0.8687719 0.9826480 1.0438448 1.0828241 1.1237581 #>  [828,] 0.6272002 0.8302620 0.8999660 0.9135404 0.9364959 1.0022181 1.0577247 #>  [829,] 0.3175065 0.5384151 0.5881734 0.6269651 0.6334168 0.6824385 0.7236642 #>  [830,] 0.4356132 0.4426456 0.4671841 0.7587487 0.8078020 0.8619900 0.8789158 #>  [831,] 0.5436297 0.5840957 0.5851460 0.6225975 0.6952724 0.7187806 0.7422593 #>  [832,] 0.3745243 0.3852264 0.4223576 0.5817333 0.5840957 0.5958383 0.6415541 #>  [833,] 0.2568057 0.3943838 0.5371492 0.5883061 0.6452508 0.6704066 0.6754429 #>  [834,] 0.3814877 0.4094771 0.4096787 0.4625115 0.4711374 0.4981944 0.5320749 #>  [835,] 0.2801377 0.5468244 0.5575150 0.5815324 0.6514302 0.6531102 0.6625671 #>  [836,] 0.3844833 0.4298896 0.4517937 0.4553881 0.5197329 0.5324210 0.5388848 #>  [837,] 0.6482948 0.7533525 0.7549989 0.7776724 0.7822435 0.7850544 0.8597552 #>  [838,] 0.5638145 0.5779420 0.5782895 0.5963510 0.5972470 0.6298587 0.6613912 #>  [839,] 0.3895050 0.5236210 0.5268012 0.5908107 0.6206305 0.6396585 0.6454900 #>  [840,] 0.6303804 0.7505151 0.9356950 1.0788385 1.1726212 1.2457061 1.2602986 #>  [841,] 0.4305782 0.5058783 0.5085578 0.5434056 0.6159863 0.6219895 0.6515207 #>  [842,] 0.4013398 0.4233503 0.4454994 0.4526802 0.4548303 0.4864941 0.5701851 #>  [843,] 0.2661462 0.3449602 0.3781033 0.5307067 0.6899380 0.7166795 0.8797547 #>  [844,] 0.9088701 0.9292354 0.9759375 1.1551573 1.2858186 1.3464878 1.3527623 #>  [845,] 1.2533470 1.3654294 1.8449911 1.8510100 1.8741688 1.9003501 1.9709019 #>  [846,] 0.4824686 0.6408324 0.7958293 0.8359448 0.9007979 0.9227858 0.9283601 #>  [847,] 0.2124219 0.3211265 0.3349301 0.3424853 0.4646330 0.4843723 0.4884964 #>  [848,] 0.5453040 0.7882348 0.8371093 0.8630802 0.8919418 0.9692862 0.9783249 #>  [849,] 0.5725333 0.6745133 0.6884697 0.7003760 0.7633193 0.8159214 0.8312113 #>  [850,] 0.2095975 0.5477304 0.5743031 0.5948946 0.6189907 0.6480825 0.7377097 #>  [851,] 0.4159085 0.4493088 0.4822256 0.5543687 0.5735637 0.5893829 0.6168375 #>  [852,] 0.3979765 0.5269856 0.6392841 0.6623799 0.7590293 0.7870639 0.8099079 #>  [853,] 0.9007979 0.9975932 1.1323886 1.2189486 1.2772438 1.2838156 1.3020896 #>  [854,] 0.4036893 0.4483602 0.4488667 0.5296256 0.5355482 0.5384162 0.5445416 #>  [855,] 0.4105300 0.9955488 1.1180345 1.1659805 1.1851866 1.1853210 1.2431031 #>  [856,] 0.2676381 0.2779481 0.3593473 0.4394434 0.4505674 0.4948995 0.5129748 #>  [857,] 0.3939682 0.5009580 0.5376681 0.5589891 0.6004487 0.6164502 0.6432214 #>  [858,] 0.4117004 0.6848048 0.7556416 0.8403036 0.9364959 1.0224736 1.0485065 #>  [859,] 0.2095975 0.5200093 0.6382037 0.6807644 0.7194450 0.7318895 0.7632997 #>  [860,] 0.6098943 0.6575188 0.7621088 0.8543876 0.9220819 0.9326402 0.9356589 #>  [861,] 0.1814185 0.5091132 0.6000083 0.6068485 0.6967736 0.6969976 0.7158370 #>  [862,] 0.3525313 0.3564549 0.4217086 0.4775663 0.5105869 0.5243193 0.5576780 #>  [863,] 0.3065162 0.4372013 0.4412094 0.5796259 0.5834741 0.6093088 0.6254152 #>  [864,] 0.3271948 0.3482067 0.5367063 0.6900276 0.6939338 0.7079453 0.7101575 #>  [865,] 0.3122377 0.3701772 0.4355070 0.4358947 0.4683752 0.4889203 0.5011375 #>  [866,] 0.6421101 0.8567409 0.9597038 0.9727799 0.9906182 1.0406561 1.0697924 #>  [867,] 0.3768769 0.3778905 0.4374564 0.4457930 0.4578050 0.4647473 0.4978126 #>  [868,] 0.8086823 0.8498695 1.0070244 1.0843350 1.0894538 1.1045381 1.1113171 #>  [869,] 0.3377905 0.3567862 0.3763290 0.4381331 0.4684212 0.4916802 0.5125975 #>  [870,] 0.4090125 0.7292907 0.7606077 0.7743846 0.7780194 0.8663279 0.8736920 #>  [871,] 0.3406297 0.3591291 0.4390465 0.4429751 0.4499099 0.4555925 0.4928816 #>  [872,] 0.9301462 0.9409548 0.9521113 0.9980918 1.0426271 1.1492977 1.1813515 #>  [873,] 0.4516977 0.7391400 0.7977642 0.8484588 0.9406065 0.9531269 1.0065738 #>  [874,] 0.3265959 0.3705540 0.4091100 0.4165383 0.5892437 0.6710631 0.6805680 #>  [875,] 0.9036300 1.0218721 1.1044351 1.1684780 1.2460112 1.2474809 1.2822055 #>  [876,] 0.1814185 0.3537786 0.4959349 0.5858995 0.6119605 0.6678425 0.6811997 #>  [877,] 0.3650620 0.4362067 0.4817015 0.5694271 0.6194397 0.7049215 0.7670940 #>  [878,] 0.2570604 0.4317165 0.4522027 0.4764689 0.5433354 0.5836669 0.5932351 #>  [879,] 0.7137842 1.0051387 1.0071162 1.0516578 1.1055220 1.1116341 1.1217151 #>  [880,] 0.3818180 0.4217086 0.5200291 0.5531432 0.5635197 0.5753661 0.5780654 #>  [881,] 0.6120648 0.9223827 0.9357023 0.9538281 0.9626252 0.9652125 0.9748544 #>  [882,] 0.4432931 0.5023341 0.5293161 0.5502789 0.5601090 0.5854680 0.6280344 #>  [883,] 0.1910779 0.4319104 0.5572237 0.5850366 0.6195791 0.6403316 0.6692054 #>  [884,] 0.7629952 0.7909317 0.8223402 0.8907187 0.8989783 0.9346835 0.9593884 #>  [885,] 0.6979404 0.7086190 0.7158210 0.7224574 0.7487227 0.8710913 0.8797547 #>  [886,] 0.1902383 0.4761276 0.5201856 0.6750002 0.6886704 0.6960090 0.7215747 #>  [887,] 0.6691239 0.7922199 1.0934028 1.1478932 1.2006337 1.2173029 1.2248638 #>  [888,] 0.4642933 0.7472176 0.8097904 0.8962149 0.9335747 0.9442843 0.9626252 #>  [889,] 0.4199393 0.5800502 0.5947541 0.7549305 0.7606095 0.7607832 0.7920471 #>  [890,] 0.6691239 0.8179520 0.8295154 0.9111171 1.0715793 1.0798312 1.0901283 #>  [891,] 0.4101565 0.5453040 0.7354510 0.7677822 0.9976234 1.0748615 1.1592504 #>  [892,] 0.1905028 0.3107426 0.3637426 0.4157900 0.4497257 0.4514583 0.4719692 #>  [893,] 0.4824686 0.4998328 0.6293203 0.7157668 0.7381936 0.7386604 0.7710290 #>  [894,] 0.7052237 0.8416462 0.8734922 0.8795284 0.8847649 0.9583457 0.9678039 #>  [895,] 0.2439420 0.3136811 0.3406297 0.4244611 0.4349769 0.4943338 0.5533954 #>  [896,] 0.3485024 0.4000258 0.4767431 0.6264373 0.6392803 0.6639677 0.6871397 #>  [897,] 0.7922199 0.8260375 0.8295154 1.2870494 1.3004160 1.4376746 1.4921047 #>  [898,] 0.5473298 0.6000449 0.6111445 0.6224914 0.6504422 0.6521085 0.6975344 #>  [899,] 0.5708953 0.7187806 0.8061907 0.8487416 0.9362044 0.9769455 0.9992932 #>  [900,] 0.3471981 0.6865928 0.6924019 0.7202666 0.7259984 0.7511619 0.7778101 #>  [901,] 0.5235877 1.0576414 1.0700878 1.2208541 1.3368452 1.3548590 1.3706246 #>  [902,] 1.3495400 1.3704217 1.5209879 1.5446630 1.6153575 1.7125254 1.7356300 #>  [903,] 0.5894584 0.8186202 0.8543188 0.8562923 0.9209631 0.9482466 0.9683779 #>  [904,] 0.4090125 0.5234286 0.6607205 0.6836783 0.7818447 0.8203674 0.8648473 #>  [905,] 0.2822553 0.3991571 0.4106022 0.4507569 0.4711848 0.4828852 0.5081117 #>  [906,] 0.4157556 0.4637680 0.5468244 0.5488030 0.6018753 0.6256794 0.6531599 #>  [907,] 0.8672851 0.9510173 1.1752899 1.3050553 1.4158981 1.4610460 1.5020877 #>  [908,] 0.4467089 0.6277373 0.6494698 0.6656635 0.7148509 0.7341279 0.7372283 #>  [909,] 0.3090277 0.4386292 0.4566303 0.5440828 0.6333540 0.6386947 0.6422668 #>  [910,] 0.2470519 0.3585358 0.5074217 0.6298841 0.7633193 0.7966318 0.8081866 #>  [911,] 0.2454466 0.2980282 0.4489724 0.5655362 0.5903593 0.6433622 0.6493078 #>  [912,] 0.4268754 0.5435531 0.7524096 0.7756931 0.8064762 0.8420481 0.8679100 #>  [913,] 0.5203655 0.7076517 0.7603962 0.8027314 0.8230088 0.8341189 0.8418727 #>  [914,] 0.4192847 0.5050551 0.5252446 0.5893656 0.6836547 0.7038322 0.7062268 #>  [915,] 0.5799680 0.6709364 0.7006535 0.7344519 0.7673950 0.7851290 0.8002527 #>  [916,] 0.3292637 0.5772068 0.5843235 0.6517182 0.6692054 0.7122361 0.7538528 #>  [917,] 0.5563806 0.5668504 0.6961601 1.1405015 1.1528275 1.2061415 1.2110267 #>  [918,] 0.5416772 0.5500300 0.6413890 0.6530393 0.6653983 0.6699884 0.7600194 #>  [919,] 0.4119993 0.5403399 0.5685891 0.6314357 0.6392803 0.6869172 0.7861569 #>  [920,] 0.4603668 0.5123596 0.5214776 0.5387106 0.5601090 0.6221500 0.6496916 #>  [921,] 0.2341677 0.3763506 0.4354272 0.4485030 0.5199247 0.5259395 0.5528021 #>  [922,] 0.3851943 0.3925668 0.4094771 0.4755807 0.4937531 0.5780049 0.6122809 #>  [923,] 0.1276525 0.1379702 0.2017364 0.2736718 0.3119767 0.3483525 0.4308748 #>  [924,] 0.5234286 0.6423322 0.7015621 0.7606077 0.7890001 0.8741665 0.9253969 #>  [925,] 0.3428230 0.4775663 0.5422523 0.5524714 0.5883061 0.6257514 0.6313736 #>  [926,] 0.1513933 0.3370734 0.3424898 0.4540897 0.4883972 0.5327650 0.5362119 #>  [927,] 0.6303804 0.8987024 1.0218371 1.1294962 1.2143174 1.2575035 1.2628852 #>  [928,] 0.2792638 0.3721347 0.4536714 0.4637680 0.4784529 0.5551798 0.5844332 #>  [929,] 0.6380556 0.8486313 0.9059898 1.0571402 1.0574068 1.0727561 1.0768938 #>  [930,] 1.1253054 1.3110738 1.3681290 1.4176546 1.4587979 1.5485280 1.6810297 #>  [931,] 0.3177721 0.3288424 0.4588362 0.6238384 0.6775990 0.6921524 0.6937743 #>  [932,] 0.6015021 0.7515653 0.7564509 0.8007850 0.8240412 0.8579864 0.8711588 #>  [933,] 0.2064529 0.4228859 0.4355955 0.4488667 0.4938741 0.4957854 0.5367148 #>  [934,] 0.3608656 0.4822342 0.5368738 0.6100800 0.6487909 0.6836783 0.6971550 #>  [935,] 0.7181224 0.7302658 0.7629952 0.7792381 0.7916295 0.8431905 0.8437163 #>  [936,] 0.2537811 0.4518217 0.5815324 0.5948336 0.6347421 0.6508292 0.7404293 #>  [937,] 0.5110231 0.6686812 0.7035861 0.7212474 0.7264385 0.7427053 0.7622269 #>  [938,] 0.3527131 0.4677499 0.5921682 0.6475355 0.6515538 0.6750244 0.7007599 #>  [939,] 0.4483376 0.5487716 0.6025930 0.6093088 0.6684510 0.6834476 0.7229696 #>  [940,] 0.3062447 0.3238399 0.3528206 0.3778905 0.4157900 0.4644086 0.4704471 #>  [941,] 0.4040704 0.5054064 0.6639506 0.6707567 0.6930033 0.8042611 0.8533458 #>  [942,] 0.3616921 0.7157513 0.7351868 0.7485267 0.7663148 0.7679036 0.8032887 #>  [943,] 0.7777896 0.7845920 0.8060953 0.8483757 0.8675092 0.9045178 0.9098522 #>  [944,] 0.1483997 0.2147057 0.2255546 0.3796002 0.4431271 0.5259395 0.5545578 #>  [945,] 0.1516637 0.3065162 0.3333742 0.4480881 0.4905940 0.6164958 0.6834476 #>  [946,] 0.4493405 0.5342877 0.6141368 0.7172441 0.8716801 0.9811676 1.0013962 #>  [947,] 0.3748384 0.5515796 0.6316161 0.6488467 0.6570734 0.6997040 0.7145369 #>  [948,] 1.4091006 1.9163253 1.9995601 2.0946502 2.1319645 2.1535787 2.1990035 #>  [949,] 0.4336200 0.6350297 0.6563538 0.6610684 0.6918451 0.7543083 0.7594607 #>  [950,] 0.6178904 1.1149127 1.1781834 1.2008713 1.2516836 1.2752612 1.4548826 #>  [951,] 0.6674427 0.7030717 0.7743265 0.8348918 0.8714656 0.9601446 0.9868390 #>  [952,] 0.3704491 0.5187948 0.5401200 0.5879115 0.6534276 0.6540720 0.6544994 #>  [953,] 1.1944841 1.2204487 1.3612158 1.3743604 1.3826844 1.4294939 1.4341551 #>  [954,] 0.8227304 0.8423746 1.1625853 1.1734981 1.2029630 1.2290237 1.2917139 #>  [955,] 0.2715188 0.4322539 0.5176588 0.5796393 0.6028140 0.6198504 0.6273351 #>  [956,] 0.8124302 0.8349864 0.8360571 0.8878811 0.8915225 0.9287993 1.0145755 #>  [957,] 0.3055313 0.4896321 0.5156362 0.5317512 0.5887114 0.6190467 0.6191235 #>  [958,] 0.6356572 0.6815893 0.7716930 0.8081866 0.8937819 0.9037643 0.9066656 #>  [959,] 0.2261799 0.4562528 0.4711634 0.5905170 0.6144585 0.7850544 0.9305900 #>  [960,] 0.6691271 0.7436116 0.7979285 0.8161228 0.8575212 0.8642000 0.9746848 #>  [961,] 0.5824329 0.7339034 0.8312113 0.8833945 0.9346282 0.9348134 0.9415687 #>  [962,] 0.3426322 0.6266055 0.6421061 0.7948077 0.8294981 0.9093888 0.9328006 #>  [963,] 0.6997959 0.8178872 0.9488499 1.0363273 1.0557119 1.1221364 1.1813515 #>  [964,] 0.3153035 0.3467165 0.4537256 0.4888760 0.4928816 0.5216043 0.5388848 #>  [965,] 0.6569941 0.6834605 0.7293154 0.7362107 0.9406224 0.9717410 0.9912848 #>  [966,] 0.6686812 0.7131462 0.8224408 0.8439409 0.8933974 0.9284766 0.9310134 #>  [967,] 0.2243837 0.3462259 0.4202768 0.4214357 0.5161238 0.5545578 0.5781997 #>  [968,] 0.2740866 0.3157401 0.3636055 0.3747059 0.4152959 0.4412299 0.4449278 #>  [969,] 0.5388352 0.6474672 0.6603736 0.6735621 0.7167634 0.7215831 0.7530169 #>  [970,] 0.8678280 0.9012350 1.0557119 1.1662577 1.1964269 1.2168789 1.2512905 #>  [971,] 0.3537786 0.4701818 0.5091132 0.5116634 0.5169144 0.5663875 0.5825871 #>  [972,] 0.5102964 0.6460401 0.6964767 0.7025178 0.7094732 0.7110594 0.7160832 #>  [973,] 0.3410693 0.4935795 0.4979449 0.5481554 0.5618673 0.6297446 0.6443303 #>  [974,] 0.7651423 0.8889771 0.9058193 0.9076290 0.9233866 0.9376433 0.9622705 #>  [975,] 0.4701511 0.6000408 0.7354510 0.8371093 0.8550138 0.8719133 0.9417572 #>  [976,] 0.5191509 0.5743031 0.6043351 0.6382037 0.6904138 0.7025178 0.7406523 #>  [977,] 0.6274481 0.6583361 0.6732057 0.6747185 0.6902393 0.8205204 0.8388072 #>  [978,] 0.3449602 0.5955365 0.6797951 0.7184485 0.7297467 0.7831294 0.8051029 #>  [979,] 0.3458780 0.5236210 0.5815840 0.5941544 0.6654353 0.6785001 0.6835633 #>  [980,] 1.0872537 1.1511971 1.2859876 1.3426357 1.4317450 1.5389164 1.6283956 #>  [981,] 0.7078894 0.8167749 0.8465183 0.8533458 0.8653264 0.8723900 0.9126897 #>  [982,] 0.4367016 0.5843067 0.6363900 0.6689775 0.6877467 0.7000127 0.7385555 #>  [983,] 0.3721347 0.4490532 0.5027664 0.5280241 0.5287617 0.5543619 0.5688316 #>  [984,] 0.4227134 0.5808813 0.6584688 0.7144231 0.7224574 0.7367251 0.7745538 #>  [985,] 0.3357208 0.5185874 0.5327650 0.5344561 0.5376681 0.5514851 0.6182873 #>  [986,] 0.2200498 0.4703898 0.5462945 0.5649062 0.6693788 0.6875796 0.6877090 #>  [987,] 0.8179345 0.9470179 0.9474322 0.9901485 1.0331393 1.0515016 1.0753964 #>  [988,] 0.6341295 0.6894690 0.7250215 0.7293154 0.7327323 0.7838621 0.8145492 #>  [989,] 0.2200498 0.5344963 0.5670495 0.6156232 0.6796713 0.6810093 0.7650332 #>  [990,] 0.4483376 0.5644306 0.6723279 0.6869947 0.7435727 0.7502796 0.7517306 #>  [991,] 0.5028142 0.5116266 0.5305693 0.5626756 0.5782885 0.5909176 0.6072182 #>  [992,] 0.5251448 0.5908219 0.5972470 0.6219830 0.6381163 0.6776106 0.6816563 #>  [993,] 0.2479372 0.4838997 0.5023341 0.5123596 0.5355099 0.5391871 0.5603335 #>  [994,] 0.5660470 0.6010068 0.6187304 0.6311037 0.7221879 0.7587874 0.8021837 #>  [995,] 0.2775309 1.0163862 1.0680103 1.1018072 1.1069434 1.1073602 1.1495005 #>  [996,] 0.3122377 0.3339860 0.3817453 0.4464470 0.4496883 0.4721414 0.5079862 #>  [997,] 0.3022679 0.3265959 0.3769251 0.5197607 0.5689065 0.5790676 0.6476447 #>  [998,] 0.1251699 0.3379360 0.3617838 0.3832345 0.4437286 0.5083490 0.5712563 #>  [999,] 0.1905028 0.2222932 0.3703159 0.3716238 0.4543706 0.4672781 0.4698679 #> [1000,] 0.6749461 1.2870260 1.3565350 1.7113568 1.7490999 1.8377270 1.8529754 #>              [,8]      [,9]     [,10] #>    [1,] 0.6740971 0.6770137 0.6811064 #>    [2,] 0.6036514 0.6571662 0.6641100 #>    [3,] 0.5624480 0.5749716 0.5978497 #>    [4,] 1.2997215 1.3056101 1.3551524 #>    [5,] 0.6281673 0.6504026 0.6897616 #>    [6,] 0.5813061 0.5951120 0.5978052 #>    [7,] 0.7338649 0.7517306 0.8026119 #>    [8,] 1.1646954 1.1742085 1.1867714 #>    [9,] 1.4797638 1.5493078 1.5582416 #>   [10,] 1.0439749 1.0566766 1.0851486 #>   [11,] 0.4445350 0.4509297 0.4537299 #>   [12,] 0.8491758 0.8523757 0.8911687 #>   [13,] 0.6223365 0.6254152 0.6498480 #>   [14,] 0.8079955 0.8355557 0.8765054 #>   [15,] 0.6357867 0.6489639 0.6594356 #>   [16,] 1.2879962 1.3333767 1.3419609 #>   [17,] 0.5793390 0.6348592 0.6451939 #>   [18,] 1.4032474 1.4240757 1.4650278 #>   [19,] 0.7659790 0.7791408 0.8216590 #>   [20,] 0.7923800 0.7958293 0.7986824 #>   [21,] 0.6280344 0.6553956 0.6602380 #>   [22,] 0.7026800 0.7600934 0.7602193 #>   [23,] 0.6297874 0.6515207 0.6650648 #>   [24,] 0.7206090 0.7278431 0.7457070 #>   [25,] 0.6652134 0.6676110 0.6800069 #>   [26,] 0.9087443 0.9102652 0.9363658 #>   [27,] 0.8099079 0.8506357 0.9015685 #>   [28,] 1.3074232 1.3301884 1.3337322 #>   [29,] 0.8419350 0.9376619 0.9609884 #>   [30,] 0.5363612 0.5423681 0.5605462 #>   [31,] 0.9500651 0.9619624 0.9641631 #>   [32,] 1.2950382 1.3250957 1.3519140 #>   [33,] 0.7761283 0.7799664 0.7843200 #>   [34,] 1.2061223 1.2302259 1.2351476 #>   [35,] 1.6419563 1.7119885 1.7493813 #>   [36,] 1.1698458 1.1768838 1.2564139 #>   [37,] 0.5390802 0.5433714 0.5521181 #>   [38,] 0.7093686 0.7193883 0.7296123 #>   [39,] 0.8142709 0.8172049 0.8640384 #>   [40,] 0.6858254 0.7040136 0.7916902 #>   [41,] 1.2868861 1.3291545 1.3366144 #>   [42,] 0.5147746 0.5343429 0.5590342 #>   [43,] 0.7754837 0.7986843 0.8120547 #>   [44,] 0.6394342 0.6414266 0.6447016 #>   [45,] 0.6335733 0.6443073 0.6858918 #>   [46,] 0.9930753 0.9951481 1.0067829 #>   [47,] 0.8650630 0.8740097 0.8743651 #>   [48,] 1.2710427 1.2879962 1.3379102 #>   [49,] 0.8176113 0.8176649 0.8458198 #>   [50,] 0.5673434 0.5748597 0.5897088 #>   [51,] 1.2224460 1.2243906 1.2348148 #>   [52,] 0.6535681 0.6880195 0.6941595 #>   [53,] 1.8376594 1.9006213 1.9124233 #>   [54,] 0.5792556 0.6018753 0.6365450 #>   [55,] 0.6761200 0.6846204 0.6922690 #>   [56,] 0.9669834 0.9883891 1.0140480 #>   [57,] 0.5792004 0.5967637 0.5986334 #>   [58,] 1.4806099 1.5182275 1.5377068 #>   [59,] 0.5576780 0.6341640 0.6660478 #>   [60,] 1.0092975 1.0537629 1.0684064 #>   [61,] 1.0039204 1.0106619 1.0145899 #>   [62,] 0.6265189 0.6569726 0.6708725 #>   [63,] 0.5114373 0.5141821 0.5261102 #>   [64,] 1.0776904 1.1121809 1.1331056 #>   [65,] 0.5418305 0.5715776 0.5770966 #>   [66,] 0.8031478 0.8327910 0.8336319 #>   [67,] 0.4698679 0.4868886 0.5092317 #>   [68,] 0.8248604 0.8249128 0.8294252 #>   [69,] 0.9735690 0.9974673 1.0289185 #>   [70,] 0.5219582 0.5381844 0.5471452 #>   [71,] 1.0361724 1.0796750 1.1146826 #>   [72,] 0.7400194 0.7709150 0.7923710 #>   [73,] 0.9485799 0.9554987 0.9678039 #>   [74,] 1.0583037 1.0929318 1.1008591 #>   [75,] 0.4900953 0.5100109 0.5333964 #>   [76,] 1.0232525 1.0475451 1.0618926 #>   [77,] 0.9039126 0.9270722 0.9360126 #>   [78,] 1.0306744 1.0649606 1.1358527 #>   [79,] 1.4622039 1.4734940 1.4777783 #>   [80,] 0.5615450 0.5632023 0.5649497 #>   [81,] 1.4629990 1.4672795 1.4710904 #>   [82,] 1.3737440 1.4037182 1.4114475 #>   [83,] 1.8596657 1.8602580 1.8643132 #>   [84,] 1.0008809 1.0466332 1.0859806 #>   [85,] 0.8053991 0.8059871 0.8200271 #>   [86,] 0.8340782 0.8353719 0.8759092 #>   [87,] 0.6336290 0.6503906 0.6570034 #>   [88,] 1.5415029 1.5870162 1.5913272 #>   [89,] 0.6354315 0.6762527 0.6852537 #>   [90,] 1.0406362 1.0559984 1.0613277 #>   [91,] 1.4532473 1.4581618 1.5351302 #>   [92,] 0.7000450 0.7141410 0.7350156 #>   [93,] 0.5197329 0.5293593 0.5655833 #>   [94,] 1.5774297 1.6480631 1.6780281 #>   [95,] 0.9550524 1.0108811 1.0785306 #>   [96,] 0.7805246 0.7900931 0.8329149 #>   [97,] 1.1280503 1.3100802 1.3658614 #>   [98,] 0.5157445 0.5821361 0.5885158 #>   [99,] 0.6771985 0.7052722 0.7254265 #>  [100,] 0.5355482 0.5432537 0.5577726 #>  [101,] 0.5941544 0.5976077 0.6081332 #>  [102,] 0.5510603 0.5655833 0.6456317 #>  [103,] 0.7529023 0.7583560 0.7776315 #>  [104,] 0.7723839 0.7733952 0.8226266 #>  [105,] 0.6100848 0.6305628 0.6448563 #>  [106,] 0.7860133 0.8001644 0.8030811 #>  [107,] 0.5147359 0.5450080 0.5591751 #>  [108,] 0.6933830 0.6951027 0.7000176 #>  [109,] 0.6607596 0.6835633 0.6846047 #>  [110,] 0.7636519 0.8196138 0.8326646 #>  [111,] 0.8683177 0.8890622 0.8924762 #>  [112,] 0.6318157 0.6451575 0.6469912 #>  [113,] 0.8654569 0.9020730 0.9171356 #>  [114,] 0.7488187 0.7502045 0.7992083 #>  [115,] 0.5801501 0.6294703 0.6415541 #>  [116,] 1.0957242 1.1104651 1.1109776 #>  [117,] 0.7121262 0.7253852 0.7618896 #>  [118,] 0.7391452 0.7586986 0.7741481 #>  [119,] 0.8981490 0.9074261 0.9127105 #>  [120,] 0.7978153 0.8537152 0.8903252 #>  [121,] 0.9742031 0.9801376 1.0045890 #>  [122,] 0.9554768 1.1030369 1.1406548 #>  [123,] 0.6013271 0.6440676 0.6636976 #>  [124,] 0.7773250 0.8201776 0.8211581 #>  [125,] 0.7263525 0.7268321 0.7354322 #>  [126,] 0.5715566 0.5772118 0.6154553 #>  [127,] 0.5035918 0.5056985 0.5273969 #>  [128,] 0.6773092 0.7057280 0.7264187 #>  [129,] 1.2903784 1.3020896 1.4150381 #>  [130,] 0.8376481 0.8764760 0.9850073 #>  [131,] 0.7967038 0.8341189 0.8387619 #>  [132,] 0.9636410 0.9887184 0.9961724 #>  [133,] 0.6550277 0.7087271 0.7140520 #>  [134,] 0.6059262 0.6214058 0.6401875 #>  [135,] 0.5031124 0.5036670 0.5048421 #>  [136,] 0.5784289 0.5835757 0.6015728 #>  [137,] 0.5175572 0.5350350 0.5467161 #>  [138,] 0.5731913 0.6214604 0.6267381 #>  [139,] 0.4829974 0.5085010 0.5249453 #>  [140,] 0.7494768 0.7497546 0.7811601 #>  [141,] 0.7053837 0.7197152 0.7319364 #>  [142,] 1.2411947 1.2722358 1.3523379 #>  [143,] 0.9804585 1.0040829 1.0195103 #>  [144,] 0.6958523 0.7000899 0.7570171 #>  [145,] 0.9924999 0.9931917 0.9967905 #>  [146,] 1.0200637 1.0284339 1.0686240 #>  [147,] 1.0224934 1.0394036 1.0451420 #>  [148,] 1.0218371 1.0230765 1.0344834 #>  [149,] 0.6144588 0.6335733 0.6383940 #>  [150,] 0.7742246 0.7956524 0.7976625 #>  [151,] 1.0111926 1.0347499 1.0575950 #>  [152,] 0.6573586 0.6893872 0.7215745 #>  [153,] 1.2859155 1.2874646 1.3058617 #>  [154,] 0.7514752 0.7773579 0.7823926 #>  [155,] 1.0159429 1.0313080 1.0425852 #>  [156,] 0.5863160 0.6114878 0.6213689 #>  [157,] 0.7121892 0.8031478 0.8514350 #>  [158,] 0.8667281 0.8923572 0.8940343 #>  [159,] 0.8875589 0.8890340 0.8939275 #>  [160,] 0.5224575 0.5323751 0.5552544 #>  [161,] 0.6967158 0.7131764 0.7258280 #>  [162,] 0.9270722 0.9421330 0.9893405 #>  [163,] 0.9773546 1.0226928 1.1142609 #>  [164,] 0.7235349 0.7324535 0.8092469 #>  [165,] 0.6541286 0.6638672 0.6764288 #>  [166,] 0.6294113 0.6623737 0.6720596 #>  [167,] 0.7895933 0.7929282 0.7962841 #>  [168,] 0.9399384 0.9647398 1.0244317 #>  [169,] 0.5255085 0.5577726 0.5634747 #>  [170,] 0.7647386 0.7737937 0.7761983 #>  [171,] 1.0013555 1.0122654 1.0618926 #>  [172,] 0.7193250 0.7473949 0.7514080 #>  [173,] 1.1527823 1.1590783 1.1623741 #>  [174,] 0.5627164 0.5634747 0.5907177 #>  [175,] 0.8502133 0.8541590 0.8998216 #>  [176,] 0.6886704 0.7071514 0.7394684 #>  [177,] 0.9244704 0.9540578 0.9646881 #>  [178,] 1.2612306 1.2773988 1.2917134 #>  [179,] 0.6628859 0.6720853 0.6839199 #>  [180,] 0.9959258 1.0135774 1.0304225 #>  [181,] 0.5603335 0.5920109 0.5951323 #>  [182,] 0.5861179 0.5983803 0.6623759 #>  [183,] 0.7884927 0.8448071 0.8529940 #>  [184,] 0.5515796 0.5779438 0.6258349 #>  [185,] 0.7205709 0.7212749 0.7393357 #>  [186,] 0.7179670 0.7287594 0.7549305 #>  [187,] 0.6394342 0.6822642 0.7021163 #>  [188,] 1.0485566 1.0688242 1.1010097 #>  [189,] 1.0488170 1.0949168 1.1585856 #>  [190,] 1.9712631 1.9801167 2.0030749 #>  [191,] 0.9780714 0.9806775 1.0869047 #>  [192,] 0.7353906 0.7394684 0.7664854 #>  [193,] 0.6284889 0.6435848 0.6818539 #>  [194,] 0.6051685 0.6414266 0.6417127 #>  [195,] 0.9039952 1.0093745 1.0270259 #>  [196,] 0.6706164 0.6728899 0.6907104 #>  [197,] 0.9897728 0.9997273 1.0099613 #>  [198,] 0.5798359 0.6006683 0.6071592 #>  [199,] 0.5920540 0.6243521 0.6243799 #>  [200,] 0.6211211 0.6498022 0.6662712 #>  [201,] 0.6126145 0.6441135 0.6600049 #>  [202,] 0.9370055 0.9594497 0.9652125 #>  [203,] 0.6572034 0.6686551 0.6865928 #>  [204,] 1.1671385 1.2523263 1.2549921 #>  [205,] 0.5534737 0.6286707 0.6577155 #>  [206,] 0.7015569 0.7216616 0.7390913 #>  [207,] 0.6269265 0.6456317 0.6858254 #>  [208,] 0.6961549 0.7297266 0.7634726 #>  [209,] 0.6423987 0.6912560 0.6963187 #>  [210,] 0.6480825 0.6589106 0.6781102 #>  [211,] 0.8698392 0.8723900 0.8782885 #>  [212,] 0.7436116 0.7672555 0.7706999 #>  [213,] 0.7002675 0.7287594 0.7367389 #>  [214,] 0.5778746 0.5832748 0.5838537 #>  [215,] 0.5230520 0.5231561 0.5660759 #>  [216,] 0.6789312 0.7144231 0.7151904 #>  [217,] 1.1285860 1.1358527 1.1425567 #>  [218,] 0.6963067 0.6963759 0.6999007 #>  [219,] 0.6901446 0.7101177 0.7143418 #>  [220,] 0.7511312 0.7996471 0.8013268 #>  [221,] 0.9761985 1.0568444 1.0711077 #>  [222,] 1.2553866 1.3239136 1.3425540 #>  [223,] 1.2430833 1.3442516 1.3960684 #>  [224,] 0.5644370 0.5936616 0.5985621 #>  [225,] 0.9873803 1.0085945 1.0176643 #>  [226,] 0.6015866 0.6075625 0.6115534 #>  [227,] 0.7445617 0.7702699 0.7980645 #>  [228,] 0.7985213 0.8224597 0.8545531 #>  [229,] 0.6096679 0.6474672 0.6502811 #>  [230,] 1.5611841 1.6134226 1.6652671 #>  [231,] 0.8327961 0.8462177 0.8468630 #>  [232,] 0.7014400 0.7093695 0.7287064 #>  [233,] 1.1135133 1.1273393 1.1610261 #>  [234,] 0.7553565 0.7912015 0.8056753 #>  [235,] 0.5582569 0.6037456 0.6080618 #>  [236,] 1.2302259 1.2604367 1.3075030 #>  [237,] 0.8178535 0.8958579 0.9035923 #>  [238,] 0.7468014 0.7752888 0.8879426 #>  [239,] 1.0697831 1.1294118 1.1985005 #>  [240,] 0.6967158 0.7033000 0.7291102 #>  [241,] 1.5974681 1.6324268 1.6594985 #>  [242,] 1.0102808 1.0275230 1.0707942 #>  [243,] 0.7625119 0.7771513 0.7913584 #>  [244,] 0.6308644 0.6578815 0.6625155 #>  [245,] 0.8241827 0.8293869 0.8390614 #>  [246,] 0.7763072 0.7920755 0.8172190 #>  [247,] 0.5293593 0.5347159 0.5749783 #>  [248,] 0.9133699 0.9182744 0.9273713 #>  [249,] 0.5159417 0.5302941 0.5546600 #>  [250,] 1.2533470 1.2894189 1.2894966 #>  [251,] 1.5311069 1.6303568 1.6954618 #>  [252,] 0.6249212 0.6252253 0.6419097 #>  [253,] 0.5914183 0.5978876 0.6241917 #>  [254,] 0.5956547 0.6064263 0.6143719 #>  [255,] 0.7835950 0.7842216 0.8313312 #>  [256,] 1.7180518 1.8023899 1.8147769 #>  [257,] 0.6853761 0.6963762 0.7094653 #>  [258,] 0.7166795 0.7268813 0.7367251 #>  [259,] 0.7906805 0.8075637 0.8087928 #>  [260,] 1.0345937 1.0722725 1.0764753 #>  [261,] 0.9558150 0.9732834 1.0152341 #>  [262,] 0.6210317 0.6865573 0.7076709 #>  [263,] 0.9466538 0.9633209 1.0106599 #>  [264,] 0.6015728 0.6085039 0.6121713 #>  [265,] 0.6735879 0.6901566 0.7093633 #>  [266,] 1.0017931 1.0094166 1.0335463 #>  [267,] 0.5382760 0.5577259 0.5642427 #>  [268,] 0.9776929 1.0252656 1.0276359 #>  [269,] 0.8543216 0.8578308 0.9026638 #>  [270,] 1.0059663 1.1165414 1.1749265 #>  [271,] 0.6731947 0.6930682 0.7239836 #>  [272,] 0.6414394 0.6690684 0.6875744 #>  [273,] 0.8303549 0.8577432 0.8615168 #>  [274,] 0.7036173 0.7423435 0.7691764 #>  [275,] 0.6233400 0.6554990 0.6626006 #>  [276,] 1.1097088 1.1530921 1.1917955 #>  [277,] 0.6414671 0.6521658 0.6895316 #>  [278,] 1.0630778 1.1194113 1.1197423 #>  [279,] 1.3623381 1.3642093 1.4364212 #>  [280,] 1.4307391 1.5136969 1.5879245 #>  [281,] 0.5782885 0.6200471 0.6329849 #>  [282,] 0.7221879 0.7332966 0.7467379 #>  [283,] 0.6087055 0.6099494 0.6230355 #>  [284,] 0.7183704 0.7366082 0.7484605 #>  [285,] 0.8248231 0.8263362 0.8378758 #>  [286,] 0.9193484 0.9401688 0.9799552 #>  [287,] 0.6897751 0.6921524 0.7100498 #>  [288,] 0.5858164 0.5940030 0.6000262 #>  [289,] 0.7303445 0.7463445 0.7520933 #>  [290,] 2.1475733 2.2078635 2.2680886 #>  [291,] 0.6523769 0.6735739 0.6743966 #>  [292,] 1.3200207 1.3379724 1.3402667 #>  [293,] 0.5640749 0.5642649 0.5664335 #>  [294,] 0.6019511 0.6357067 0.6455681 #>  [295,] 0.4313025 0.4731748 0.5585802 #>  [296,] 0.5852337 0.6044792 0.6096797 #>  [297,] 0.6477714 0.6871397 0.6881835 #>  [298,] 1.4477374 1.4786203 1.4946399 #>  [299,] 0.6703095 0.6708725 0.6822642 #>  [300,] 0.6715927 0.6935292 0.7000899 #>  [301,] 0.7172441 0.7806159 0.8179751 #>  [302,] 0.6412131 0.6559603 0.6777512 #>  [303,] 0.5200122 0.5513565 0.5551798 #>  [304,] 1.2392403 1.2466245 1.2891211 #>  [305,] 0.9553069 0.9799656 0.9847216 #>  [306,] 0.7185745 0.7239836 0.7321066 #>  [307,] 1.0157379 1.0284375 1.0401610 #>  [308,] 0.7807429 0.8182865 0.8748974 #>  [309,] 0.9166983 0.9168490 0.9513107 #>  [310,] 1.0377353 1.0555302 1.1087265 #>  [311,] 1.0114158 1.0204814 1.0224736 #>  [312,] 1.6357839 1.6449268 1.6495083 #>  [313,] 1.9907433 2.0480350 2.0771763 #>  [314,] 0.5983894 0.6160302 0.6228810 #>  [315,] 0.9784895 0.9993568 1.0184831 #>  [316,] 0.7079879 0.7332622 0.7465466 #>  [317,] 0.4617533 0.4900953 0.5034223 #>  [318,] 0.8326228 0.8670263 0.8714656 #>  [319,] 0.6545669 0.6620309 0.6795253 #>  [320,] 0.6379025 0.6505538 0.6697260 #>  [321,] 0.7183529 0.7424701 0.7467309 #>  [322,] 0.7410710 0.7831474 0.7870404 #>  [323,] 0.7666215 0.7708720 0.7818305 #>  [324,] 0.6090261 0.6176719 0.6473760 #>  [325,] 0.8062502 0.8068787 0.8222723 #>  [326,] 0.7820728 0.7916560 0.7991187 #>  [327,] 0.7938671 0.8187847 0.8269872 #>  [328,] 1.3249159 1.3543008 1.3999565 #>  [329,] 0.5034223 0.5362119 0.5463215 #>  [330,] 0.6152581 0.6395300 0.6488467 #>  [331,] 1.0403944 1.0889376 1.0928535 #>  [332,] 0.4766048 0.4876135 0.5564418 #>  [333,] 0.7161994 0.7203881 0.7487258 #>  [334,] 0.7904139 0.8294981 0.8390614 #>  [335,] 1.1044289 1.1266429 1.1551573 #>  [336,] 1.0082881 1.0218855 1.0391753 #>  [337,] 1.0884354 1.1540753 1.1726819 #>  [338,] 0.6755733 0.7348842 0.7735815 #>  [339,] 0.7642323 0.7724072 0.7796930 #>  [340,] 1.6497553 1.6607176 1.6772722 #>  [341,] 0.6600567 0.6851974 0.7506221 #>  [342,] 0.8754677 0.9280779 0.9506828 #>  [343,] 0.7094653 0.7393704 0.7486497 #>  [344,] 1.1931708 1.2977114 1.3048966 #>  [345,] 0.6670392 0.6838331 0.7333229 #>  [346,] 0.6158616 0.6381888 0.6631856 #>  [347,] 0.8658066 0.8825791 0.9334201 #>  [348,] 1.0446561 1.0663852 1.1236781 #>  [349,] 0.4911487 0.5013116 0.5874329 #>  [350,] 0.6652490 0.7229418 0.7403904 #>  [351,] 0.6066525 0.6268616 0.6457296 #>  [352,] 1.2523319 1.2694706 1.2702228 #>  [353,] 0.5753661 0.5818226 0.5962500 #>  [354,] 1.5366084 1.5381703 1.5409899 #>  [355,] 0.6987370 0.7021163 0.7323569 #>  [356,] 0.4576481 0.4937908 0.5048421 #>  [357,] 0.7523505 0.7603962 0.7683306 #>  [358,] 0.6880295 0.6999007 0.7076709 #>  [359,] 1.0884354 1.1123358 1.1373259 #>  [360,] 0.5268440 0.5601997 0.5786255 #>  [361,] 0.7620329 0.7981435 0.8206594 #>  [362,] 1.3332193 1.3813686 1.4102868 #>  [363,] 0.7560764 0.7738159 0.7755489 #>  [364,] 0.9275001 0.9275255 0.9329642 #>  [365,] 1.6677163 1.6924239 1.6957283 #>  [366,] 0.5123825 0.5136110 0.5525147 #>  [367,] 0.8190827 0.8252799 0.8292907 #>  [368,] 1.8323473 1.8458314 1.8681168 #>  [369,] 0.6884697 0.6912560 0.6984203 #>  [370,] 0.6558860 0.6604318 0.6767455 #>  [371,] 1.0240401 1.1228484 1.1353679 #>  [372,] 0.5915290 0.5949253 0.6162602 #>  [373,] 0.8544813 0.8651583 0.8652365 #>  [374,] 0.8420481 0.8687719 0.9326402 #>  [375,] 0.7818152 0.7960874 0.8173233 #>  [376,] 0.6075339 0.6206432 0.6219830 #>  [377,] 0.5965490 0.6194783 0.6559931 #>  [378,] 0.7938464 0.8154416 0.8716114 #>  [379,] 0.9767309 1.0449216 1.0675547 #>  [380,] 0.5529375 0.5749783 0.5820637 #>  [381,] 0.5293122 0.5501019 0.5848090 #>  [382,] 0.8147735 0.8651583 0.8932454 #>  [383,] 0.6936068 0.7427408 0.7460146 #>  [384,] 1.1226166 1.1335946 1.1808643 #>  [385,] 1.6698558 1.7002278 1.7371338 #>  [386,] 1.3919945 1.4294781 1.4466927 #>  [387,] 0.5830837 0.5873946 0.6087746 #>  [388,] 0.8693368 0.8916417 0.8986595 #>  [389,] 0.5952104 0.7140426 0.7162092 #>  [390,] 0.6784618 0.6962268 0.7091976 #>  [391,] 0.6405903 0.6445590 0.6531599 #>  [392,] 1.0106973 1.0182057 1.0408452 #>  [393,] 0.7074701 0.7166102 0.7240775 #>  [394,] 0.6520588 0.6550277 0.6690684 #>  [395,] 0.8023172 0.8120781 0.8205520 #>  [396,] 1.0712832 1.1696968 1.1924575 #>  [397,] 0.5873946 0.6083510 0.6130372 #>  [398,] 0.5598659 0.5623762 0.5634576 #>  [399,] 1.0279378 1.0317233 1.0356781 #>  [400,] 1.2432890 1.2784311 1.2851081 #>  [401,] 0.8376481 0.8475494 0.8688254 #>  [402,] 0.8625823 0.8791251 0.9166993 #>  [403,] 0.6400525 0.6502811 0.6559603 #>  [404,] 1.1506212 1.1688195 1.2307664 #>  [405,] 0.8189396 0.8460650 0.8569417 #>  [406,] 0.9462676 1.0240654 1.0499316 #>  [407,] 0.4721414 0.5099505 0.5358078 #>  [408,] 1.0434813 1.0488170 1.1880335 #>  [409,] 0.5420985 0.5760755 0.5795274 #>  [410,] 0.8648473 0.8900019 0.8999843 #>  [411,] 1.2738216 1.2875364 1.2961224 #>  [412,] 0.5781997 0.6029503 0.6188427 #>  [413,] 0.9745362 1.0305276 1.0622162 #>  [414,] 0.8999230 0.9367091 0.9592403 #>  [415,] 0.8468630 0.8719133 0.8771702 #>  [416,] 0.7389644 0.7474628 0.7588678 #>  [417,] 0.7038499 0.7151635 0.7214026 #>  [418,] 0.8047562 0.8202847 0.8224817 #>  [419,] 1.6489462 1.6617022 1.7224445 #>  [420,] 1.2156127 1.2186029 1.2499874 #>  [421,] 0.9304196 1.0044667 1.0183713 #>  [422,] 0.7245385 0.7294079 0.7373264 #>  [423,] 0.7695344 0.8437664 0.8710751 #>  [424,] 0.9631092 0.9648604 0.9747783 #>  [425,] 0.9147095 0.9536442 0.9907383 #>  [426,] 0.6060978 0.6064604 0.6111412 #>  [427,] 1.0967911 1.1021653 1.1130981 #>  [428,] 0.7197152 0.7254265 0.7296722 #>  [429,] 1.1757616 1.2177726 1.2572477 #>  [430,] 1.1096619 1.1669068 1.2026441 #>  [431,] 0.6737915 0.6842472 0.7120548 #>  [432,] 1.2575435 1.2997215 1.3035353 #>  [433,] 0.7844804 0.8151904 0.8181047 #>  [434,] 1.2254642 1.2355092 1.2704636 #>  [435,] 0.7576779 0.7960226 0.8052162 #>  [436,] 0.8828317 0.8838795 0.8940683 #>  [437,] 1.6351757 1.6459257 1.7392208 #>  [438,] 0.8782123 0.8996891 0.9065941 #>  [439,] 0.9577446 0.9711921 0.9712652 #>  [440,] 0.5293161 0.5509765 0.5783821 #>  [441,] 0.8012829 0.8075323 0.8283609 #>  [442,] 0.6302352 0.6344730 0.6379345 #>  [443,] 1.3984668 1.4052120 1.4245319 #>  [444,] 0.7679757 0.7682973 0.7743335 #>  [445,] 1.2894491 1.3107953 1.3230449 #>  [446,] 1.1459827 1.1566553 1.2260170 #>  [447,] 0.6503614 0.6526808 0.6672689 #>  [448,] 0.6644568 0.6699144 0.6822786 #>  [449,] 0.7959752 0.8071620 0.8418024 #>  [450,] 1.1960906 1.2027533 1.2737392 #>  [451,] 0.4937908 0.5157112 0.5196643 #>  [452,] 1.2774819 1.3002063 1.3060829 #>  [453,] 0.6960090 0.7116184 0.7385655 #>  [454,] 0.4959733 0.5466556 0.5479883 #>  [455,] 0.6881835 0.6891305 0.6956205 #>  [456,] 0.7804088 0.8117017 0.8275063 #>  [457,] 1.3031524 1.3598234 1.4173563 #>  [458,] 0.6682632 0.7057631 0.7259818 #>  [459,] 0.6751090 0.6760615 0.6840912 #>  [460,] 0.8064814 0.8299759 0.8334658 #>  [461,] 0.9572034 0.9976234 1.0049376 #>  [462,] 0.5654279 0.5887785 0.5936616 #>  [463,] 0.6366629 0.6385174 0.6513006 #>  [464,] 1.0577247 1.0583037 1.0595306 #>  [465,] 0.7721861 0.7932045 0.8120990 #>  [466,] 0.6165451 0.6344730 0.6498480 #>  [467,] 0.7263292 0.7665827 0.7793675 #>  [468,] 0.6877090 0.7319841 0.7727281 #>  [469,] 0.6139517 0.6165451 0.6528019 #>  [470,] 0.8189859 0.8213007 0.8249106 #>  [471,] 0.8049059 0.8075323 0.8214488 #>  [472,] 1.1566550 1.1972454 1.2108741 #>  [473,] 0.8629755 0.8741665 0.8979344 #>  [474,] 1.5945317 1.6104997 1.6298064 #>  [475,] 0.8918219 0.9069870 0.9268086 #>  [476,] 0.9746297 0.9758848 0.9780681 #>  [477,] 0.7399664 0.7496591 0.7773250 #>  [478,] 0.6469069 0.6511886 0.6922690 #>  [479,] 1.2260910 1.2537667 1.2762053 #>  [480,] 1.0598180 1.0885110 1.1086636 #>  [481,] 1.2662635 1.2677301 1.2991563 #>  [482,] 0.5952416 0.6043497 0.6149641 #>  [483,] 0.9327261 0.9811541 0.9921082 #>  [484,] 0.7122361 0.7701084 0.7937989 #>  [485,] 0.5674737 0.5679906 0.6019511 #>  [486,] 0.7229791 0.7730924 0.8173233 #>  [487,] 0.6014071 0.6060699 0.6283374 #>  [488,] 0.6585310 0.6979002 0.7063626 #>  [489,] 0.6761200 0.6763553 0.6822400 #>  [490,] 0.6299362 0.7057631 0.7236642 #>  [491,] 1.3261127 1.3474891 1.4150631 #>  [492,] 1.0866368 1.0935297 1.1035088 #>  [493,] 0.6174138 0.6536525 0.6726740 #>  [494,] 0.7274610 0.7410150 0.7457004 #>  [495,] 0.6117674 0.6667286 0.7435654 #>  [496,] 0.9212527 0.9786024 1.0048829 #>  [497,] 0.7409107 0.7851471 0.8522448 #>  [498,] 1.7877688 1.8789889 1.9263202 #>  [499,] 0.9039126 0.9209631 0.9430848 #>  [500,] 0.9752563 1.0153891 1.0409827 #>  [501,] 1.0045890 1.0425383 1.0974666 #>  [502,] 0.7382351 0.7478621 0.7524070 #>  [503,] 0.5370673 0.5384162 0.5497671 #>  [504,] 1.2671622 1.2707437 1.2799988 #>  [505,] 1.0544822 1.1010119 1.1055659 #>  [506,] 0.7662820 0.7663988 0.7883685 #>  [507,] 0.5736610 0.5931511 0.6316161 #>  [508,] 0.5225079 0.5240632 0.5531993 #>  [509,] 0.5632634 0.5846369 0.5953211 #>  [510,] 0.5335125 0.5358143 0.5552267 #>  [511,] 1.1002686 1.1036561 1.1177668 #>  [512,] 0.8850500 0.8851997 0.9057768 #>  [513,] 0.8903252 0.9311803 0.9415152 #>  [514,] 0.7445617 0.7500226 0.7795107 #>  [515,] 0.4948995 0.5151957 0.5224575 #>  [516,] 1.1000418 1.1004262 1.1056109 #>  [517,] 0.7526821 0.7883574 0.8205204 #>  [518,] 0.5433354 0.5493427 0.5979523 #>  [519,] 0.6032811 0.6144588 0.6278436 #>  [520,] 0.5588218 0.5597944 0.5634576 #>  [521,] 0.4982513 0.5083490 0.5272313 #>  [522,] 0.6500178 0.6937999 0.7098680 #>  [523,] 0.7418385 0.7898908 0.8241075 #>  [524,] 0.6076541 0.6191235 0.6197032 #>  [525,] 0.7071616 0.7950516 0.8231489 #>  [526,] 0.5720096 0.5800502 0.6015866 #>  [527,] 0.6737993 0.6822786 0.6897616 #>  [528,] 0.5579832 0.6064487 0.6298919 #>  [529,] 0.7731717 0.7956692 0.8188434 #>  [530,] 0.6528403 0.6609101 0.6867771 #>  [531,] 0.8286580 0.8916736 0.9201633 #>  [532,] 0.9503504 0.9848671 1.0372650 #>  [533,] 0.7733831 0.8361119 0.8428034 #>  [534,] 0.8150494 0.8507924 0.8577136 #>  [535,] 0.5690459 0.5711629 0.5816633 #>  [536,] 0.5711286 0.5737396 0.6143719 #>  [537,] 1.3514590 1.3626582 1.3943806 #>  [538,] 0.6637431 0.7242642 0.7391007 #>  [539,] 0.6217976 0.6222720 0.6384964 #>  [540,] 0.8013628 0.8156964 0.8189712 #>  [541,] 0.6937999 0.7015569 0.7050721 #>  [542,] 0.5423681 0.5466795 0.5471452 #>  [543,] 0.8670263 0.8695431 0.9482869 #>  [544,] 0.9246875 0.9371316 0.9571172 #>  [545,] 1.0146421 1.0305739 1.0468073 #>  [546,] 0.8822997 0.8954496 0.8994706 #>  [547,] 0.6524765 0.7562995 0.7601007 #>  [548,] 0.5303572 0.5531344 0.5642427 #>  [549,] 0.6407941 0.6582362 0.6737283 #>  [550,] 0.6269265 0.6432654 0.6598612 #>  [551,] 0.7212958 0.7289075 0.7339082 #>  [552,] 0.7761762 0.7945573 0.8698377 #>  [553,] 0.6097375 0.6176376 0.6222720 #>  [554,] 0.9911499 1.0107553 1.0292097 #>  [555,] 0.7720669 0.7766028 0.7936805 #>  [556,] 1.4164814 1.4203633 1.4303281 #>  [557,] 0.7189885 0.7332622 0.7341279 #>  [558,] 0.9015300 0.9063176 0.9299129 #>  [559,] 0.7975791 0.8058392 0.8277008 #>  [560,] 0.9115649 0.9352407 0.9480958 #>  [561,] 0.5260648 0.5468730 0.5903543 #>  [562,] 0.9447181 0.9755432 0.9806002 #>  [563,] 1.7887886 1.8307276 1.8340704 #>  [564,] 0.8188701 0.8574424 0.8622808 #>  [565,] 0.7204107 0.7427408 0.7664451 #>  [566,] 0.7246312 0.7296785 0.7721591 #>  [567,] 0.4139840 0.4577286 0.4781263 #>  [568,] 0.9750516 1.0053733 1.0101177 #>  [569,] 0.5246248 0.6318157 0.6862177 #>  [570,] 0.5779438 0.5921065 0.6376291 #>  [571,] 0.8880393 0.8915159 0.9554671 #>  [572,] 0.7052063 0.7701267 0.7832384 #>  [573,] 0.5953211 0.6298919 0.6394703 #>  [574,] 0.7191952 0.7550589 0.7715702 #>  [575,] 0.7087271 0.7574397 0.7697273 #>  [576,] 0.9855813 0.9898365 1.0190259 #>  [577,] 1.2213877 1.2360832 1.2596836 #>  [578,] 0.4399845 0.5103290 0.5125952 #>  [579,] 1.0281695 1.0393599 1.0804686 #>  [580,] 0.7991124 0.8087902 0.8282318 #>  [581,] 0.7382313 0.7387563 0.7424410 #>  [582,] 0.6297446 0.6873977 0.7081239 #>  [583,] 0.9059898 0.9065933 0.9378117 #>  [584,] 0.6700708 0.6895316 0.6963759 #>  [585,] 0.6544994 0.6646115 0.6928965 #>  [586,] 0.7495972 0.7619849 0.7703986 #>  [587,] 1.0374425 1.1045381 1.1157371 #>  [588,] 1.0835629 1.1161430 1.1189349 #>  [589,] 0.5065820 0.5748056 0.5779420 #>  [590,] 0.5671278 0.5843705 0.5900409 #>  [591,] 0.5649062 0.6079791 0.6430287 #>  [592,] 1.7044742 1.7132810 1.7563328 #>  [593,] 0.6822246 0.6946891 0.7048402 #>  [594,] 0.9637840 0.9658443 0.9768670 #>  [595,] 0.7414338 0.7459305 0.7462512 #>  [596,] 0.5949253 0.6369361 0.6419089 #>  [597,] 0.7616239 0.7762757 0.7962055 #>  [598,] 0.8150133 0.8185247 0.8296461 #>  [599,] 0.9980918 1.0051777 1.0353950 #>  [600,] 1.6598804 1.6628142 1.7287900 #>  [601,] 0.9164183 1.0141016 1.0232525 #>  [602,] 1.3450318 1.3678138 1.3732023 #>  [603,] 0.8475494 0.8606873 0.8890388 #>  [604,] 1.6779836 1.7059503 1.7134367 #>  [605,] 1.4117356 1.4334874 1.4510920 #>  [606,] 0.5987407 0.6228830 0.6344793 #>  [607,] 1.1827906 1.2253083 1.2462383 #>  [608,] 0.5818712 0.5836126 0.6343537 #>  [609,] 0.8446362 0.8456750 0.8468186 #>  [610,] 1.6481003 1.6864937 1.7427143 #>  [611,] 0.7700688 0.7818305 0.7983630 #>  [612,] 0.7703986 0.7736912 0.7774647 #>  [613,] 0.8120781 0.8189361 0.8312066 #>  [614,] 1.1306928 1.1458107 1.1526812 #>  [615,] 0.9115994 0.9485799 0.9769455 #>  [616,] 0.9381716 0.9402699 0.9470726 #>  [617,] 0.5444425 0.5448312 0.5759087 #>  [618,] 0.8137690 0.8260564 0.8596582 #>  [619,] 0.9553585 0.9752561 0.9815563 #>  [620,] 0.9441020 1.1021808 1.1057329 #>  [621,] 0.4958552 0.5138243 0.5157112 #>  [622,] 0.6927437 0.6946542 0.7205709 #>  [623,] 0.5952034 0.6061247 0.6157756 #>  [624,] 0.6996360 0.7148177 0.7161651 #>  [625,] 0.6250222 0.6430017 0.6549016 #>  [626,] 0.6434236 0.6444403 0.6585310 #>  [627,] 0.5050551 0.5398678 0.5805778 #>  [628,] 1.0031925 1.0183713 1.0314158 #>  [629,] 0.8711672 0.8773276 0.8873599 #>  [630,] 0.8019373 0.8445842 0.9123958 #>  [631,] 1.8119894 1.8835457 1.9396939 #>  [632,] 0.7148509 0.7240775 0.7318895 #>  [633,] 0.7969880 0.8047974 0.8301851 #>  [634,] 0.5932144 0.6164867 0.6746643 #>  [635,] 0.4855674 0.5287359 0.5593504 #>  [636,] 1.1272177 1.1457025 1.1943972 #>  [637,] 0.6077546 0.6286707 0.6507163 #>  [638,] 0.9094819 0.9192768 0.9197709 #>  [639,] 0.7345497 0.7790615 0.8243313 #>  [640,] 0.9412118 0.9648604 0.9692086 #>  [641,] 0.5623051 0.5684092 0.5762792 #>  [642,] 1.4681979 1.4772849 1.5331359 #>  [643,] 1.4804427 1.4854152 1.5109796 #>  [644,] 1.2513013 1.2516077 1.2683039 #>  [645,] 0.5574880 0.5893656 0.6083510 #>  [646,] 0.7918031 0.8042291 0.8265996 #>  [647,] 0.5764552 0.6038906 0.6041492 #>  [648,] 1.3799622 1.4111116 1.4132165 #>  [649,] 1.1105608 1.1392710 1.1434146 #>  [650,] 0.6210317 0.6387941 0.6432602 #>  [651,] 0.8645298 0.8933362 0.9561236 #>  [652,] 1.6405925 1.6644822 1.6659622 #>  [653,] 0.7549401 0.7778662 0.8441841 #>  [654,] 0.6816479 0.6831417 0.7081239 #>  [655,] 0.9500651 0.9775420 0.9873276 #>  [656,] 0.5534048 0.5623051 0.5634902 #>  [657,] 0.6516801 0.6604759 0.6639371 #>  [658,] 0.9993568 1.0326307 1.0843350 #>  [659,] 0.9988950 1.0121786 1.0399668 #>  [660,] 0.7703098 0.7942224 0.8238010 #>  [661,] 0.6423875 0.6989823 0.7164118 #>  [662,] 0.8993509 0.9024024 0.9192110 #>  [663,] 1.5894242 1.5907938 1.7702593 #>  [664,] 0.8855284 0.8941080 0.8999230 #>  [665,] 0.9316940 0.9685046 0.9718507 #>  [666,] 0.5799124 0.5935348 0.5977326 #>  [667,] 0.5323751 0.5453428 0.5613060 #>  [668,] 0.7787011 0.8022351 0.8831326 #>  [669,] 0.7006535 0.7035715 0.7081523 #>  [670,] 0.6662673 0.6723265 0.6770366 #>  [671,] 0.7523364 0.7739766 0.7950544 #>  [672,] 0.9692686 1.0893500 1.1134396 #>  [673,] 1.3532472 1.3570552 1.4053415 #>  [674,] 0.5994383 0.6056662 0.6252253 #>  [675,] 0.7345497 0.7399664 0.7463883 #>  [676,] 1.1173265 1.1190492 1.1374898 #>  [677,] 0.8934569 0.9012350 0.9097180 #>  [678,] 1.1753518 1.1854683 1.2375427 #>  [679,] 0.8256337 0.8289298 0.8392493 #>  [680,] 0.4963439 0.5026919 0.5035918 #>  [681,] 0.7350856 0.7598298 0.7763379 #>  [682,] 0.9786052 0.9966688 0.9971177 #>  [683,] 1.2011171 1.2728644 1.3764404 #>  [684,] 0.5429251 0.5545897 0.5595816 #>  [685,] 0.7291645 0.7454184 0.7608943 #>  [686,] 1.1112910 1.1186101 1.1949020 #>  [687,] 0.5780221 0.6384175 0.6637998 #>  [688,] 1.0175564 1.0218903 1.0295306 #>  [689,] 0.9881273 1.0047321 1.0543030 #>  [690,] 0.7519386 0.7616290 0.7720948 #>  [691,] 0.7004920 0.7111705 0.8122808 #>  [692,] 0.6046515 0.7230369 0.7532149 #>  [693,] 0.6028140 0.6191656 0.6243521 #>  [694,] 0.7727796 0.9015468 0.9348566 #>  [695,] 0.5867752 0.6009522 0.6119022 #>  [696,] 1.0558123 1.1146521 1.1181563 #>  [697,] 0.9516706 0.9610054 0.9659696 #>  [698,] 0.7511619 0.7698410 0.7804331 #>  [699,] 0.7937811 0.7982610 0.8278643 #>  [700,] 1.0090072 1.0275977 1.0291881 #>  [701,] 0.6336290 0.6982252 0.7274610 #>  [702,] 0.8465692 0.8479652 0.8992138 #>  [703,] 1.0227392 1.0465485 1.0837904 #>  [704,] 0.8876881 0.8899912 0.9001194 #>  [705,] 1.2116695 1.2388372 1.2607401 #>  [706,] 0.4833880 0.4889203 0.5501246 #>  [707,] 0.6770356 0.7496285 0.7515653 #>  [708,] 1.1207683 1.1268219 1.1272964 #>  [709,] 0.7094732 0.7259984 0.7459760 #>  [710,] 0.5153742 0.5265849 0.5640749 #>  [711,] 0.8327878 0.8377960 0.8382210 #>  [712,] 1.1298190 1.1624717 1.1883081 #>  [713,] 1.1825797 1.2219971 1.2922392 #>  [714,] 0.7158798 0.7979126 0.8524231 #>  [715,] 0.4753342 0.5699200 0.5978497 #>  [716,] 1.2174403 1.2526057 1.2574323 #>  [717,] 0.7736912 0.7816567 0.8174749 #>  [718,] 1.2614775 1.2624836 1.3026987 #>  [719,] 0.5790781 0.5934848 0.6230584 #>  [720,] 0.7069455 0.7451610 0.7586316 #>  [721,] 0.8049059 0.8081318 0.8218224 #>  [722,] 0.7047268 0.7134267 0.7153814 #>  [723,] 0.7136564 0.7154463 0.7167615 #>  [724,] 0.8821152 0.9851828 0.9898013 #>  [725,] 1.4973250 1.5055879 1.5074530 #>  [726,] 0.6804902 0.7005061 0.7156117 #>  [727,] 0.4702287 0.4755807 0.5660138 #>  [728,] 0.7189811 0.7458774 0.7604854 #>  [729,] 0.8606825 0.8609109 0.8780849 #>  [730,] 0.6201108 0.7348842 0.8063002 #>  [731,] 0.7971026 0.8287835 0.8380124 #>  [732,] 0.4702287 0.5011375 0.5153742 #>  [733,] 0.6751090 0.6774385 0.6959554 #>  [734,] 1.0862932 1.0974693 1.1124870 #>  [735,] 0.8166860 0.8676823 0.8848884 #>  [736,] 1.1395019 1.1660918 1.1671713 #>  [737,] 0.9389065 1.0315313 1.0341932 #>  [738,] 0.6848514 0.7106795 0.7149682 #>  [739,] 0.8152271 0.8178724 0.8586570 #>  [740,] 0.6977684 0.7030635 0.7596422 #>  [741,] 0.4295104 0.4395468 0.4672781 #>  [742,] 1.1764391 1.2583164 1.2625014 #>  [743,] 0.9054421 0.9326516 0.9462342 #>  [744,] 1.0121885 1.0359936 1.0508424 #>  [745,] 0.6184919 0.6343287 0.6486475 #>  [746,] 1.1992232 1.2243906 1.3146118 #>  [747,] 0.6609101 0.7089257 0.7128922 #>  [748,] 0.5390802 0.5531344 0.5614305 #>  [749,] 0.7186936 0.7615309 0.7646441 #>  [750,] 0.7047268 0.7371474 0.7473949 #>  [751,] 0.8443921 0.8540574 0.9058215 #>  [752,] 0.5479139 0.6064436 0.6132014 #>  [753,] 0.4843723 0.4908610 0.4960234 #>  [754,] 0.9175817 0.9473811 0.9498482 #>  [755,] 0.7194933 0.7195611 0.7553676 #>  [756,] 1.3430901 1.3734360 1.3793773 #>  [757,] 0.9301489 0.9542629 0.9600027 #>  [758,] 0.6087746 0.6145149 0.6699144 #>  [759,] 0.5735637 0.5801977 0.5903206 #>  [760,] 1.1497266 1.2630349 1.3112759 #>  [761,] 0.8476151 0.8637655 0.8751482 #>  [762,] 0.9225450 0.9422236 0.9491438 #>  [763,] 1.3187241 1.3763214 1.3792486 #>  [764,] 0.9786052 0.9924999 1.0347499 #>  [765,] 0.8026652 0.8665776 0.9003124 #>  [766,] 0.7601007 0.7706812 0.8089691 #>  [767,] 1.9762617 2.0045975 2.0060393 #>  [768,] 0.9227394 1.0859806 1.1025820 #>  [769,] 0.9313402 0.9700838 0.9779838 #>  [770,] 1.9328368 1.9667889 1.9693843 #>  [771,] 0.5804593 0.5935348 0.6897811 #>  [772,] 1.0564699 1.0746012 1.0810852 #>  [773,] 0.6104719 0.6439773 0.6742732 #>  [774,] 0.7926146 0.8085573 0.8949064 #>  [775,] 0.6529351 0.6774890 0.6859919 #>  [776,] 0.9863828 0.9918592 0.9992758 #>  [777,] 1.0875642 1.1018770 1.1076177 #>  [778,] 0.6566688 0.6760615 0.7087414 #>  [779,] 0.9739828 0.9748544 0.9752524 #>  [780,] 0.4861801 0.5435767 0.5596023 #>  [781,] 0.9388441 0.9402197 0.9791148 #>  [782,] 1.0326307 1.1231042 1.1571880 #>  [783,] 0.8189859 0.8211737 0.8368884 #>  [784,] 0.8243313 0.8390568 0.9247774 #>  [785,] 0.7481203 0.7696750 0.7826425 #>  [786,] 0.6709364 0.6782859 0.6841622 #>  [787,] 0.5417861 0.5460535 0.5901983 #>  [788,] 1.1039762 1.1105234 1.1204667 #>  [789,] 0.7776724 0.8260052 0.8347894 #>  [790,] 0.8020139 0.8650630 0.8962985 #>  [791,] 0.9281894 1.0346790 1.0399336 #>  [792,] 1.0760824 1.1010217 1.1294485 #>  [793,] 0.5085464 0.5096321 0.5129134 #>  [794,] 1.1646601 1.1673940 1.1867692 #>  [795,] 1.4049359 1.4093849 1.4423521 #>  [796,] 0.6265638 0.6452653 0.6924617 #>  [797,] 1.0145244 1.0158734 1.0967911 #>  [798,] 0.8185247 0.8391055 0.8811947 #>  [799,] 0.8980678 0.9536116 0.9872640 #>  [800,] 0.6956205 0.7142331 0.7154463 #>  [801,] 1.4986314 1.5596232 1.5684209 #>  [802,] 1.7234990 1.7411334 1.7773259 #>  [803,] 0.5583002 0.6509759 0.6521298 #>  [804,] 0.6346440 0.6349184 0.6548663 #>  [805,] 0.7632637 0.7865370 0.7977642 #>  [806,] 0.7338878 0.7385555 0.7391808 #>  [807,] 0.4983098 0.5116795 0.5726955 #>  [808,] 1.3391239 1.4058879 1.4272980 #>  [809,] 0.6397044 0.6546539 0.6678425 #>  [810,] 1.4189278 1.4905328 1.5260870 #>  [811,] 0.5303154 0.5402932 0.5497499 #>  [812,] 0.5462132 0.5828444 0.6074956 #>  [813,] 0.7852029 0.7905675 0.8227385 #>  [814,] 0.9025711 0.9394209 0.9550524 #>  [815,] 0.6927671 0.7146187 0.7741867 #>  [816,] 0.7966318 0.8079022 0.8218224 #>  [817,] 0.9541851 0.9740469 0.9799561 #>  [818,] 0.8996891 1.0099439 1.0160282 #>  [819,] 0.5399085 0.5461781 0.5541546 #>  [820,] 0.7249182 0.7960874 0.8114160 #>  [821,] 0.5267347 0.5679906 0.5813061 #>  [822,] 1.0168511 1.0508422 1.0663852 #>  [823,] 1.0295130 1.0307547 1.1058261 #>  [824,] 0.7613308 0.7863384 0.8020139 #>  [825,] 1.0068565 1.0557658 1.0684064 #>  [826,] 0.5464678 0.5626756 0.5706140 #>  [827,] 1.1799653 1.1971004 1.2016552 #>  [828,] 1.1022411 1.1190746 1.1273393 #>  [829,] 0.7639675 0.7657718 0.7694799 #>  [830,] 0.9317077 0.9371216 0.9588737 #>  [831,] 0.7523505 0.7889890 0.8230088 #>  [832,] 0.6780518 0.6852537 0.6855937 #>  [833,] 0.7322569 0.7530169 0.7534253 #>  [834,] 0.5512355 0.5866890 0.5931511 #>  [835,] 0.6758856 0.6835674 0.7335183 #>  [836,] 0.5613415 0.5911516 0.6031398 #>  [837,] 0.9290874 0.9460622 0.9699885 #>  [838,] 0.6674331 0.6779479 0.6912840 #>  [839,] 0.6572681 0.7271249 0.7341129 #>  [840,] 1.2754429 1.2970895 1.2972886 #>  [841,] 0.6805933 0.6837591 0.7003760 #>  [842,] 0.5830837 0.5836743 0.6412796 #>  [843,] 0.8980678 0.9143696 0.9241070 #>  [844,] 1.3654294 1.3826844 1.4273520 #>  [845,] 1.9936546 2.0406656 2.1144161 #>  [846,] 0.9443695 0.9687581 0.9723858 #>  [847,] 0.5055272 0.5402932 0.5601997 #>  [848,] 1.0049376 1.0560075 1.1184743 #>  [849,] 0.8476151 0.8527386 0.8600213 #>  [850,] 0.7531812 0.7596701 0.7704794 #>  [851,] 0.6936068 0.7606115 0.7672962 #>  [852,] 0.8130068 0.8184205 0.8283721 #>  [853,] 1.3116879 1.3574740 1.3849126 #>  [854,] 0.5503475 0.5608624 0.5612362 #>  [855,] 1.3958355 1.4686948 1.5181040 #>  [856,] 0.5319777 0.5476763 0.5543569 #>  [857,] 0.6686551 0.6743245 0.6853341 #>  [858,] 1.0808560 1.1604910 1.1659482 #>  [859,] 0.7651684 0.7880570 0.7922905 #>  [860,] 0.9725067 0.9851378 0.9887335 #>  [861,] 0.7201208 0.7269573 0.7527327 #>  [862,] 0.5704526 0.6180113 0.6634455 #>  [863,] 0.6908484 0.7096246 0.7338649 #>  [864,] 0.7818558 0.8012700 0.8094890 #>  [865,] 0.5022766 0.5099505 0.5320749 #>  [866,] 1.0874530 1.1389198 1.1563700 #>  [867,] 0.5319840 0.5399085 0.5951732 #>  [868,] 1.1416205 1.1495588 1.1517729 #>  [869,] 0.5157445 0.5182299 0.5296256 #>  [870,] 0.9003124 0.9313188 0.9459597 #>  [871,] 0.5595816 0.6114878 0.6265805 #>  [872,] 1.2260773 1.2326504 1.2443762 #>  [873,] 1.0185893 1.0526573 1.0632839 #>  [874,] 0.6981398 0.7104337 0.7157654 #>  [875,] 1.3088725 1.3657213 1.3952959 #>  [876,] 0.6969713 0.7294061 0.7460844 #>  [877,] 0.7697273 0.7888190 0.7924303 #>  [878,] 0.5949715 0.6102430 0.6260455 #>  [879,] 1.1337432 1.1482130 1.1671713 #>  [880,] 0.5997831 0.6106163 0.6313736 #>  [881,] 1.0163482 1.1077787 1.1606579 #>  [882,] 0.6961224 0.7470345 0.7658128 #>  [883,] 0.7140426 0.7174605 0.8045776 #>  [884,] 0.9983352 1.0160282 1.0283580 #>  [885,] 0.9295686 0.9468710 0.9597919 #>  [886,] 0.8468654 0.9034590 0.9314285 #>  [887,] 1.2385262 1.3432552 1.3551601 #>  [888,] 0.9685728 0.9908087 1.1342410 #>  [889,] 0.7941689 0.8073704 0.8095942 #>  [890,] 1.1247709 1.1600616 1.2547292 #>  [891,] 1.2323339 1.2378821 1.3538084 #>  [892,] 0.4860924 0.4868886 0.5085464 #>  [893,] 0.7833450 0.8334658 0.8587520 #>  [894,] 1.0106619 1.0384459 1.0485065 #>  [895,] 0.6041143 0.6145498 0.6411923 #>  [896,] 0.7082198 0.7184105 0.7684617 #>  [897,] 1.4949542 1.5551720 1.5606740 #>  [898,] 0.7005061 0.7471525 0.7501005 #>  [899,] 1.0065906 1.0520879 1.0540563 #>  [900,] 0.8049784 0.8176458 0.8436812 #>  [901,] 1.3953327 1.3999565 1.4694657 #>  [902,] 1.7439610 1.7966509 1.8504107 #>  [903,] 0.9889404 1.0264214 1.0617021 #>  [904,] 0.8990633 0.9360658 0.9601854 #>  [905,] 0.5234403 0.5805939 0.6000262 #>  [906,] 0.6897921 0.6971550 0.7020986 #>  [907,] 1.5289775 1.5514454 1.6017089 #>  [908,] 0.7716930 0.7926146 0.8154212 #>  [909,] 0.6953720 0.7014400 0.7113381 #>  [910,] 0.8188785 0.8635085 0.9031312 #>  [911,] 0.6622762 0.6741279 0.6803970 #>  [912,] 0.8695807 0.8879426 0.8895699 #>  [913,] 0.8706641 0.8863607 0.8996139 #>  [914,] 0.7079259 0.7316240 0.7557482 #>  [915,] 0.8167217 0.8540574 0.8562824 #>  [916,] 0.8038732 0.8166128 0.8330287 #>  [917,] 1.2497752 1.2662635 1.2771400 #>  [918,] 0.7804643 0.7903540 0.7938937 #>  [919,] 0.8028413 0.8302052 0.8451212 #>  [920,] 0.6553956 0.6554971 0.6720853 #>  [921,] 0.5585802 0.5598850 0.6352914 #>  [922,] 0.6255669 0.6258349 0.6536227 #>  [923,] 0.4321943 0.4422799 0.5036670 #>  [924,] 0.9542443 1.1028002 1.1292654 #>  [925,] 0.6366121 0.6735621 0.6953452 #>  [926,] 0.5377278 0.5610376 0.5798258 #>  [927,] 1.3616632 1.4150824 1.4178468 #>  [928,] 0.6067554 0.6756034 0.6818539 #>  [929,] 1.1311115 1.1433741 1.1972733 #>  [930,] 1.6845952 1.7003932 1.7108523 #>  [931,] 0.6970945 0.7057450 0.7147263 #>  [932,] 0.8787514 0.8836606 0.9205579 #>  [933,] 0.5432537 0.5467389 0.5541546 #>  [934,] 0.7470305 0.7594164 0.8438245 #>  [935,] 0.8453142 0.8652661 0.9158886 #>  [936,] 0.7470305 0.8214488 0.8665776 #>  [937,] 0.8056139 0.8112330 0.8315091 #>  [938,] 0.7920471 0.8088653 0.8096874 #>  [939,] 0.7484605 0.8485011 0.8696486 #>  [940,] 0.4753342 0.5219582 0.5299068 #>  [941,] 0.8610044 0.8628510 0.9113044 #>  [942,] 0.8413834 0.8636115 0.8871951 #>  [943,] 0.9351393 0.9557306 1.0104826 #>  [944,] 0.5578409 0.5748597 0.5838537 #>  [945,] 0.6884407 0.7028481 0.7031826 #>  [946,] 1.0360265 1.0691307 1.0998110 #>  [947,] 0.7178248 0.7272245 0.7285627 #>  [948,] 2.2032127 2.3723440 2.3877183 #>  [949,] 0.8314887 0.8883390 0.9259397 #>  [950,] 1.4683562 1.5100690 1.5519817 #>  [951,] 1.0682838 1.0786310 1.0850363 #>  [952,] 0.7036523 0.7196621 0.7215293 #>  [953,] 1.4628900 1.4710904 1.5209242 #>  [954,] 1.3152878 1.3216606 1.3753870 #>  [955,] 0.6295060 0.6310776 0.6369361 #>  [956,] 1.0197948 1.0591632 1.1176452 #>  [957,] 0.6213689 0.6434236 0.6484918 #>  [958,] 0.9505009 0.9669593 0.9841767 #>  [959,] 0.9845126 1.0184831 1.0889376 #>  [960,] 0.9949161 1.0066074 1.0426910 #>  [961,] 0.9562367 0.9751485 0.9834486 #>  [962,] 0.9383019 0.9664837 0.9709412 #>  [963,] 1.2376532 1.2455263 1.3062638 #>  [964,] 0.5501246 0.5579832 0.5612890 #>  [965,] 0.9961724 1.0480837 1.1285860 #>  [966,] 1.0007753 1.0147934 1.0832897 #>  [967,] 0.5926234 0.6126425 0.6350259 #>  [968,] 0.5123825 0.5199247 0.5317512 #>  [969,] 0.7687746 0.7735425 0.7778662 #>  [970,] 1.2709714 1.3323185 1.3566527 #>  [971,] 0.6228068 0.6365078 0.6397044 #>  [972,] 0.7202666 0.7715702 0.7991124 #>  [973,] 0.6810402 0.6881527 0.7068259 #>  [974,] 0.9854226 0.9898365 1.0459596 #>  [975,] 1.0056529 1.0155459 1.0493916 #>  [976,] 0.8079022 0.8418044 0.8442718 #>  [977,] 0.8658115 0.8773944 0.8993509 #>  [978,] 0.8710913 0.9184850 0.9931177 #>  [979,] 0.7054618 0.7451879 0.8015927 #>  [980,] 1.6612242 1.6717990 1.6809321 #>  [981,] 0.9174768 0.9517556 0.9605344 #>  [982,] 0.7506253 0.7687746 0.7962055 #>  [983,] 0.6010482 0.6504026 0.6673600 #>  [984,] 0.7759116 0.7991075 0.8140148 #>  [985,] 0.6330024 0.6592223 0.6955028 #>  [986,] 0.7459760 0.8511924 0.8523084 #>  [987,] 1.1150206 1.2134427 1.2295808 #>  [988,] 0.8475961 0.9195081 0.9325896 #>  [989,] 0.7727281 0.8130121 0.8488755 #>  [990,] 0.8106580 0.8631262 0.8706641 #>  [991,] 0.6106163 0.6375908 0.6387941 #>  [992,] 0.7140520 0.7537211 0.7647386 #>  [993,] 0.5712563 0.5828690 0.6001722 #>  [994,] 0.8201776 0.8589938 0.8754677 #>  [995,] 1.1581223 1.1582276 1.1693043 #>  [996,] 0.5265849 0.5866890 0.6045114 #>  [997,] 0.6636627 0.6718082 0.6741463 #>  [998,] 0.5864066 0.6168310 0.6247461 #>  [999,] 0.4833880 0.4914033 0.4979559 #> [1000,] 1.9854924 1.9922099 2.0041363 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 0.003162278"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample   cd45 pstat5   cd34 outcome class  multiclass event time_to_event #>    <chr>   <dbl>  <dbl>  <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 95     0.815   0.644 0.537     3.60 class1 class3         1          9.73 #>  2 29     0.129   0.753 0.737     3.92 class1 class1         0         11.8  #>  3 89     0.911   0.490 0.0181    5.67 class1 class3         1          8.04 #>  4 46     0.816   0.276 0.219     3.69 class1 class2         1         15.1  #>  5 49     0.804   0.529 0.0152    4.91 class1 class2         1          6.86 #>  6 35     0.170   0.405 0.431     3.08 class2 class2         1         12.2  #>  7 13     0.250   0.494 0.758     3.88 class1 class1         0         10.8  #>  8 36     0.0445  0.751 0.794     2.09 class2 class2         1          8.36 #>  9 30     0.687   0.749 0.620     3.16 class2 class1         0         12.7  #> 10 2      0.940   0.251 0.426     4.04 class1 class1         0         12.1  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>                cd45       pstat5          cd34 #>   [1,]  0.785074719 -1.245041306 -0.6393733360 #>   [2,]  1.185526584 -0.734002019  1.0485718190 #>   [3,]  0.348709710 -0.866660306  1.3318851207 #>   [4,]  0.793920808  0.464093675 -1.3062336691 #>   [5,] -1.417146839 -0.454769386  0.1276226155 #>   [6,] -0.646165758 -1.145059059 -0.1094621007 #>   [7,]  1.318387406  1.705901725 -0.8047452521 #>   [8,] -1.097019123  0.152433813 -1.4702053072 #>   [9,]  0.323377986 -0.552882272  0.1356992563 #>  [10,]  1.058123708  1.035923466  0.1363916669 #>  [11,] -0.623262132 -0.441595441 -0.3922975032 #>  [12,] -0.782985341  1.050697737 -0.6821550645 #>  [13,]  1.074048538  0.207568912  0.4940254140 #>  [14,]  1.612472896 -1.089562669 -0.6880120147 #>  [15,]  0.947000497 -0.432128565  1.1866237046 #>  [16,] -0.301351247  0.611591408 -0.6774932447 #>  [17,] -1.297974910 -0.837913671  1.5371064424 #>  [18,] -1.192920848  0.292393832 -0.3703679257 #>  [19,]  0.511954810 -1.670505795  0.4168774419 #>  [20,] -0.422990542 -1.577807719  1.5109537024 #>  [21,]  0.129926779 -1.258405101 -0.5227603544 #>  [22,] -0.395063044  1.102037380 -0.4036406234 #>  [23,]  1.390986621 -0.666533736 -0.7290787137 #>  [24,]  1.612678650  0.997119741 -1.2581758742 #>  [25,]  0.930956114 -0.146969993 -1.3106204732 #>  [26,]  1.093831705 -0.983236022 -0.9547333516 #>  [27,] -0.929582402 -0.002025454  1.1406591166 #>  [28,] -1.215277056 -0.550729052  1.7060695155 #>  [29,]  1.209703370  1.533366924 -0.0279208303 #>  [30,]  1.489619190 -1.690900838  0.5915088273 #>  [31,]  0.655866370  1.835233165 -0.0004231238 #>  [32,] -0.055730045 -1.017940610  0.9027261280 #>  [33,]  1.757951376 -0.430587075  1.3217534906 #>  [34,] -0.779174507  0.660759395 -0.3716367954 #>  [35,]  1.606136613  0.055520651 -1.0020651655 #>  [36,]  1.181911317  1.810367981 -0.9013770824 #>  [37,] -0.503922500 -0.765814212  1.3359307747 #>  [38,] -1.490392059 -1.314804831 -0.7473416103 #>  [39,] -0.670112461  0.488801581 -0.2494465235 #>  [40,] -0.244167486 -0.196910208  0.2656785941 #>  [41,]  1.305278970 -0.553642103  0.2424374253 #>  [42,] -1.650788923 -0.415654614 -0.5895803785 #>  [43,] -1.017528640  1.197113991 -1.3779316815 #>  [44,]  1.030581450  0.330976479 -1.5446488934 #>  [45,] -0.160422005  1.714878395 -0.5498724607 #>  [46,] -1.423589692  0.834362262 -1.3413480949 #>  [47,] -0.768590861  0.339720023  0.1015338391 #>  [48,]  1.092942151  0.089650677 -0.3113148715 #>  [49,]  0.453103462  0.869086895 -1.0120457056 #>  [50,] -0.330892370  1.392607403 -0.6550102872 #>  [51,]  0.957558752 -0.605117566  1.5371095763 #>  [52,] -0.869444779 -1.431381729  1.6248855614 #>  [53,] -0.232486606 -1.365934413  1.4736590731 #>  [54,] -0.893553766  0.665433424 -1.3466313567 #>  [55,] -1.210311783 -1.538269325 -0.3991267866 #>  [56,] -1.380822765  0.867555456 -0.9271327918 #>  [57,]  1.204868382  0.704738953 -1.1276601419 #>  [58,] -0.983189142  1.559848529  0.1464359180 #>  [59,]  0.004435065  1.447995660 -0.5995698487 #>  [60,] -0.826257575 -1.705244371 -0.3145955229 #>  [61,]  0.168379563 -1.051874739 -0.3672337491 #>  [62,] -0.389454096  1.317517109 -0.1769738766 #>  [63,] -0.315353102 -0.299848377 -1.0629113294 #>  [64,]  0.728858038  0.468525756  0.6659025096 #>  [65,]  0.114115948 -0.290574545  0.2556690973 #>  [66,] -0.825361145 -0.069661701  1.4274860357 #>  [67,] -0.963710087  0.579349711  1.3874319087 #>  [68,]  1.549878415 -0.610984300 -0.5372242941 #>  [69,]  0.875738157  1.698706888  0.2305634526 #>  [70,] -0.758604644 -1.697109309 -0.6653518787 #>  [71,] -0.024053469  0.507551645  0.8311520505 #>  [72,] -1.131615342  1.149622631 -1.4878018831 #>  [73,] -0.554626356  0.688652212 -0.9260843127 #>  [74,] -1.106431068  1.074434312  1.5368404069 #>  [75,] -0.518813357 -1.135726607 -1.3755910609 #>  [76,]  0.110418012 -1.341689502 -0.1295272936 #>  [77,] -0.942114308 -0.380657068  0.1869738149 #>  [78,]  1.465524387  0.327549968  1.0208836852 #>  [79,] -1.280760576 -0.833058073  1.6983347275 #>  [80,] -0.285295553  0.994221187 -0.6986522921 #>  [81,]  0.426439695 -0.031079944 -0.7940300835 #>  [82,]  0.531482877  0.948301418  0.1387681438 #>  [83,]  1.565472186 -0.177348804  0.7039847267 #>  [84,] -1.361546576  1.146833883 -0.3219515666 #>  [85,]  0.693533748 -0.727810447  1.3501651288 #>  [86,]  0.883414966 -0.290743330  0.6862820177 #>  [87,]  1.371514291  1.724096255  0.6826148807 #>  [88,] -1.415795218  0.812046875  1.1942981535 #>  [89,]  0.290891034 -1.033605814 -1.4285673172 #>  [90,]  1.468067192  0.693656215  1.4335486433 #>  [91,]  1.238332628 -0.267648550  1.5619916612 #>  [92,]  1.119579722  0.849429892  1.5268507938 #>  [93,] -1.176699072 -0.089486693 -0.9935254909 #>  [94,] -1.505799983 -1.079148741  1.1484270855 #>  [95,]  0.191347210 -0.259156348 -1.4764516512 #>  [96,] -1.558393456  1.759550938  0.6035021949 #>  [97,] -0.400134047 -1.588406286 -1.5593654870 #>  [98,] -0.692040680 -0.714737493 -1.4434906862 #>  [99,]  0.170957499 -0.158155735  1.0435460919 #> [100,] -1.011160222 -0.941284560  1.5294067797"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  3.4645604  4.9736429  3.6628919  1.2827835  2.5246393  5.9906527 #>   [7]  3.8102067  6.6560018  0.7965107  4.8093418  2.0041870  4.7230285 #>  [13]  3.6072537  3.4479956  2.3830438  3.9069500  4.6284088  1.5146717 #>  [19]  3.6281321  2.1751527  2.8307336  2.6977398  1.3610202  7.0883312 #>  [25]  0.3488129  3.9914967  4.6066526  4.1260850  5.1651278  0.9162369 #>  [31]  1.8789864  2.1686318  2.0118986  5.3695827  2.3176182  4.1183583 #>  [37]  2.4807724  7.1629529  5.5901934  7.9462941  1.4728426  3.5138029 #>  [43]  4.1643702 -0.8517206  5.1697858  2.8293318  3.0471627  1.7721049 #>  [49]  3.6018382  1.8024050  2.7081785  2.6961465  5.3946758  6.1382833 #>  [55]  5.7000422  0.7803020  2.1332041  2.1674691  1.2245093  2.7574952 #>  [61]  2.0221747  3.6174379  2.3994428  3.9010322  2.6320353  3.1770801 #>  [67]  3.6871275  2.4797914  5.7614755  5.6134177  6.7713534  5.1655213 #>  [73]  3.1651858  5.6219190  5.2094186  4.3485507  3.9185790  1.0551842 #>  [79]  3.9106368  2.9728459  6.7343182  4.3198479  2.5102259  0.9778800 #>  [85]  2.4708251  5.0818655  0.4397696  3.1556408  4.1210451  4.1935447 #>  [91]  3.3720020  2.8999494  0.9418842  3.5247236  3.5655983  2.1154581 #>  [97]  3.8379233  1.5746254  1.1733439  5.0475212"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38     cd34   cd19 cluster_id .flowsom_metacluster #>      <dbl>   <dbl>    <dbl>  <dbl> <chr>      <chr>                #>  1 -0.949   0.944  -0.0587   0.560 w          5                    #>  2  0.0758  0.0820  1.45    -0.460 z          3                    #>  3 -0.304   0.294  -0.853   -1.61  h          5                    #>  4  0.0573  0.273   0.0403  -0.325 h          5                    #>  5  0.491  -0.0129  0.494    0.124 k          1                    #>  6 -0.981   0.0766 -0.00791 -1.44  e          3                    #>  7 -1.51   -0.896  -0.781    0.501 e          3                    #>  8  1.03    0.388  -0.807    1.09  q          5                    #>  9  1.79    0.0850 -1.82    -0.889 f          1                    #> 10 -0.605  -0.907   0.116   -1.31  u          6                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38     cd34   cd19 cluster_id .phenograph_metacluster #>      <dbl>   <dbl>    <dbl>  <dbl> <chr>      <chr>                   #>  1 -0.949   0.944  -0.0587   0.560 w          1                       #>  2  0.0758  0.0820  1.45    -0.460 z          1                       #>  3 -0.304   0.294  -0.853   -1.61  h          5                       #>  4  0.0573  0.273   0.0403  -0.325 h          5                       #>  5  0.491  -0.0129  0.494    0.124 k          2                       #>  6 -0.981   0.0766 -0.00791 -1.44  e          1                       #>  7 -1.51   -0.896  -0.781    0.501 e          1                       #>  8  1.03    0.388  -0.807    1.09  q          1                       #>  9  1.79    0.0850 -1.82    -0.889 f          3                       #> 10 -0.605  -0.907   0.116   -1.31  u          2                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 1                      #>  2 6                      #>  3 2                      #>  4 3                      #>  5 6                      #>  6 9                      #>  7 2                      #>  8 2                      #>  9 6                      #> 10 8                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 1                    #>  2 2                    #>  3 1                    #>  4 2                    #>  5 1                    #>  6 6                    #>  7 5                    #>  8 3                    #>  9 2                    #> 10 4                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 4                    #>  2 1                    #>  3 4                    #>  4 1                    #>  5 4                    #>  6 2                    #>  7 4                    #>  8 2                    #>  9 1                    #> 10 3                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 5                         #>  2 1                         #>  3 9                         #>  4 9                         #>  5 4                         #>  6 3                         #>  7 5                         #>  8 7                         #>  9 1                         #> 10 4                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 9                   #>  2 1                   #>  3 9                   #>  4 5                   #>  5 8                   #>  6 6                   #>  7 10                  #>  8 5                   #>  9 4                   #> 10 9                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 3                       #>  2 4                       #>  3 1                       #>  4 2                       #>  5 1                       #>  6 1                       #>  7 1                       #>  8 2                       #>  9 2                       #> 10 1                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1 1.39  #>  2 3.18  #>  3 2.61  #>  4 3.64  #>  5 2.02  #>  6 3.15  #>  7 4.62  #>  8 3.85  #>  9 4.06  #> 10 3.38  #> 11 2.59  #> 12 3.34  #> 13 2.86  #> 14 4.36  #> 15 2.97  #> 16 3.51  #> 17 5.20  #> 18 0.643 #> 19 1.81  #> 20 4.14"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>       cd45    cd38   cd34    cd19    .pc1    .pc2   .pc3    .pc4 #>      <dbl>   <dbl>  <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl> #>  1  0.767  -0.204   1.94   0.590  -1.41    1.65    0.892  0.654  #>  2  0.606   0.113  -0.631  2.53   -1.69   -0.735  -1.25   1.03   #>  3  0.591   0.842  -0.155 -0.581  -0.418   0.0580  0.219 -1.10   #>  4  0.745   0.346   0.861 -1.31   -0.178   1.22    0.864 -1.05   #>  5 -1.27    0.911  -0.526  0.341  -0.0431 -1.48    0.759  0.104  #>  6  0.107   0.143  -0.528  0.358  -0.250  -0.348  -0.295 -0.0260 #>  7 -0.867   2.47   -0.591 -1.92    0.309  -1.45    1.69  -2.33   #>  8  0.0912 -0.764   0.461 -0.296   0.247   0.895   0.252  0.377  #>  9  1.33   -0.718   1.70  -0.169  -0.851   2.27    0.423  0.205  #> 10 -0.687  -0.0813 -1.01   0.0561  0.571  -0.882  -0.198  0.147  #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>       cd45    cd38   cd34    cd19 .tsne1 .tsne2 #>      <dbl>   <dbl>  <dbl>   <dbl>  <dbl>  <dbl> #>  1  0.767  -0.204   1.94   0.590  -3.79  -0.826 #>  2  0.606   0.113  -0.631  2.53    1.62   4.63  #>  3  0.591   0.842  -0.155 -0.581  -1.29  -0.563 #>  4  0.745   0.346   0.861 -1.31   -2.20  -1.53  #>  5 -1.27    0.911  -0.526  0.341  -0.905  2.22  #>  6  0.107   0.143  -0.528  0.358   0.666  1.49  #>  7 -0.867   2.47   -0.591 -1.92   -3.60   2.04  #>  8  0.0912 -0.764   0.461 -0.296   1.08  -1.54  #>  9  1.33   -0.718   1.70  -0.169  -3.38  -1.56  #> 10 -0.687  -0.0813 -1.01   0.0561  0.475  1.01  #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>       cd45    cd38   cd34    cd19 .umap1 .umap2 #>      <dbl>   <dbl>  <dbl>   <dbl>  <dbl>  <dbl> #>  1  0.767  -0.204   1.94   0.590  -1.82  -2.34  #>  2  0.606   0.113  -0.631  2.53    5.40  -1.76  #>  3  0.591   0.842  -0.155 -0.581  -0.862 -0.984 #>  4  0.745   0.346   0.861 -1.31   -0.251 -1.45  #>  5 -1.27    0.911  -0.526  0.341   2.88   0.275 #>  6  0.107   0.143  -0.528  0.358   3.45   0.877 #>  7 -0.867   2.47   -0.591 -1.92   -2.02  -0.788 #>  8  0.0912 -0.764   0.461 -0.296  -2.45   2.43  #>  9  1.33   -0.718   1.70  -0.169  -0.736 -2.08  #> 10 -0.687  -0.0813 -1.01   0.0561  3.23   1.46  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>       .pc1    .pc2 #>      <dbl>   <dbl> #>  1 -0.368  -2.06   #>  2 -0.356  -0.485  #>  3 -0.0249  1.61   #>  4 -1.64    0.0869 #>  5  0.491   1.02   #>  6  0.435   1.37   #>  7 -1.15   -1.53   #>  8  0.225  -0.331  #>  9 -1.29    0.669  #> 10 -1.45   -0.649  #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1    PC2      PC3    PC4 #>     <dbl>  <dbl>    <dbl>  <dbl> #>  1  0.384 -0.523 -1.04     0.664 #>  2 -1.21   1.94  -0.190    0.889 #>  3  0.302 -0.797  0.620    0.392 #>  4  1.21   0.363  0.391   -0.527 #>  5  0.751  0.591  0.224    1.22  #>  6  0.306 -0.621 -0.671    1.18  #>  7  0.987 -0.283 -0.0629  -1.01  #>  8  1.66   0.121  0.00812 -0.315 #>  9  0.433  0.324  1.26    -2.03  #> 10  0.419 -0.384  0.497    0.316 #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -5.27  -0.221 #>  2 -1.13   3.77  #>  3  5.65  -5.13  #>  4  4.80  -2.97  #>  5 -5.49   2.15  #>  6 -0.119  4.09  #>  7  1.51   3.47  #>  8 -4.64   6.03  #>  9  7.25  -1.87  #> 10 -1.23  -2.85  #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  -6.32 -3.95  #>  2   2.22  4.23  #>  3   5.47 -4.51  #>  4   5.58 -0.203 #>  5  -4.69 -7.87  #>  6  -1.19  4.72  #>  7  -3.17  7.06  #>  8  -3.01 -8.70  #>  9   8.79 -1.23  #> 10   2.41  2.28  #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1  0.556 -0.408 #>  2  2.03  -2.47  #>  3  2.45  -2.50  #>  4 -1.60  -2.25  #>  5  2.72  -3.07  #>  6 -0.224 -2.75  #>  7  3.92  -0.464 #>  8  0.979  3.82  #>  9  3.10  -0.775 #> 10  1.62  -2.54  #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>     .tsne1  .tsne2 #>      <dbl>   <dbl> #>  1  0.528  -1.85   #>  2 -2.74    0.731  #>  3 -4.02   -0.610  #>  4 -2.20    4.53   #>  5 -5.72   -0.0773 #>  6 -2.64    4.09   #>  7 -4.72   -3.66   #>  8  0.0672 -7.57   #>  9 -5.11   -6.11   #> 10 -2.46    2.27   #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>     UMAP1  UMAP2 #>     <dbl>  <dbl> #>  1  2.14   2.90  #>  2  3.36  -1.13  #>  3  0.881  1.86  #>  4  1.98  -3.75  #>  5 -3.51  -1.83  #>  6 -4.80  -1.46  #>  7 -4.79  -0.743 #>  8 -0.195 -1.52  #>  9  0.639 -2.86  #> 10 -0.645  3.98  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            0.2 #>  2            0.5 #>  3            0.1 #>  4            0.1 #>  5            0.2 #>  6            0.2 #>  7            0   #>  8            0   #>  9            0.1 #> 10            0.1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            1   #>  2            0.4 #>  3            1   #>  4            1   #>  5            1   #>  6            1   #>  7            0.2 #>  8            1   #>  9            0.7 #> 10            0.7 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/38]> Bootstrap01 #>  2 <split [100/39]> Bootstrap02 #>  3 <split [100/34]> Bootstrap03 #>  4 <split [100/36]> Bootstrap04 #>  5 <split [100/39]> Bootstrap05 #>  6 <split [100/40]> Bootstrap06 #>  7 <split [100/38]> Bootstrap07 #>  8 <split [100/38]> Bootstrap08 #>  9 <split [100/35]> Bootstrap09 #> 10 <split [100/44]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)      3.42   #> 2 pstat5           1.16   #> 3 cd45             0.714  #> 4 cd34             0.0838  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5        -0.295    #> 2 cd45          -0.110    #> 3 cd34          -0.0373   #> 4 (Intercept)   -0.000444  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 3 × 2 #>   feature coefficient #>   <chr>         <dbl> #> 1 cd45         0.0730 #> 2 pstat5       0.0553 #> 3 cd34        -0.0458"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38   cd34    cd19 .upsample_cluster #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>             #>  1 -0.609  0.557 -1.16   0.816  a                 #>  2 -1.19  -0.383 -1.68   0.0673 a                 #>  3 -1.40   1.47  -0.526  0.898  b                 #>  4  0.389  0.263  0.577  1.95   a                 #>  5 -0.573 -0.221 -0.170 -1.59   b                 #>  6  0.124 -0.228 -0.732  1.90   a                 #>  7 -0.545  0.723 -1.45  -0.547  a                 #>  8  1.24   1.99   0.483 -0.140  b                 #>  9 -1.53  -0.834 -0.775  0.163  a                 #> 10  0.524  0.136 -0.946 -0.376  a                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38   cd34    cd19 .upsample_cluster #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>             #>  1 -0.609  0.557 -1.16   0.816  a                 #>  2 -1.19  -0.383 -1.68   0.0673 a                 #>  3 -1.40   1.47  -0.526  0.898  b                 #>  4  0.389  0.263  0.577  1.95   a                 #>  5 -0.573 -0.221 -0.170 -1.59   b                 #>  6  0.124 -0.228 -0.732  1.90   a                 #>  7 -0.545  0.723 -1.45  -0.547  b                 #>  8  1.24   1.99   0.483 -0.140  a                 #>  9 -1.53  -0.834 -0.775  0.163  a                 #> 10  0.524  0.136 -0.946 -0.376  a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 a                 #>  4 a                 #>  5 a                 #>  6 b                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 a                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 a                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 a                 #>  4 b                 #>  5 a                 #>  6 a                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 a                 #>  4 b                 #>  5 a                 #>  6 b                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0993","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.3","title":"tidytof 0.99.3","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992-1","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Removed unnecessary files caused build fail. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
