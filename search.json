[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.2 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.35     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.9        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.3.0        bslib_0.6.2       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.2              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [89] tidyselect_1.2.1              Biostrings_2.70.3             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] readr_2.1.5                   blob_1.2.4                    #> [119] bitops_1.0-7                  listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1  .tsne2 #>    <dbl>   <dbl> #> 1   8.18 -16.4   #> 2   9.22  -3.40  #> 3  30.5    6.17  #> 4  18.7   -7.71  #> 5  14.3  -15.7   #> 6  21.6   -0.150 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1  .tsne2 #>     <dbl>   <dbl> #>  1  13.2  11.9    #>  2  14.5   8.60   #>  3  34.3   0.170  #>  4  17.2  -0.0317 #>  5  17.7   8.14   #>  6  22.6  -5.05   #>  7  10.0  -2.12   #>  8  28.9  -3.91   #>  9  19.0  -8.41   #> 10   6.22  7.77   #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1  9.18   4.00  #>  2  8.27   3.11  #>  3  3.09   0.388 #>  4  2.84  -1.42  #>  5  9.32   3.72  #>  6  0.180 -2.33  #>  7  9.49   3.27  #>  8  2.00  -0.329 #>  9  4.88  -0.644 #> 10  7.68   5.12  #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.2 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         stringr_1.5.1       #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [22] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [25] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [28] tweenr_2.0.3        irlba_2.3.5.1       parallel_4.3.3      #>  [31] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [34] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [37] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [40] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [43] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [46] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [49] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [52] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [55] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [58] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [61] Rtsne_0.17          future_1.33.1       desc_1.4.3          #>  [64] survival_3.5-8      polyclip_1.10-6     embed_1.1.4         #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [73] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [76] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [79] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [82] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [85] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [88] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [91] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [94] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [97] lava_1.8.0          uwot_0.1.16         gtable_0.3.4        #> [100] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [103] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [106] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [109] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.2 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.2         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.2     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.3        timechange_0.3.0    tidyselect_1.2.1    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [94] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.2              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 philentropy_0.8.0             #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     emdist_0.3-3                  #>  [89] RProtoBufLib_2.14.1           tidyselect_1.2.1              #>  [91] Biostrings_2.70.3             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   ggplot2_3.5.0                 #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  scales_1.3.0                  #> [127] prodlim_2023.08.28            purrr_1.0.2                   #> [129] crayon_1.5.2                  rlang_1.1.3                   #> [131] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.2 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.1       bslib_0.6.2         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.2     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.3        #>  [49] timechange_0.3.0    tidyselect_1.2.1    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.1     tidyr_1.3.1         RProtoBufLib_2.14.1 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.9          #> [103] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34   cd38 #>   <dbl>   <dbl>  <dbl> #> 1  130.  2.42    0.896 #> 2  230. -1.19   11.1   #> 3  293.  5.14    0.954 #> 4  431. -0.0128 13.0   #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.2 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.2              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  tidyr_1.3.1                   #>  [73] data.table_1.15.2             hms_1.1.3                     #>  [75] tidygraph_1.3.1               utf8_1.2.4                    #>  [77] XVector_0.42.0                ggrepel_0.9.5                 #>  [79] BiocVersion_3.18.1            foreach_1.5.2                 #>  [81] pillar_1.9.0                  stringr_1.5.1                 #>  [83] RcppHNSW_0.6.0                later_1.3.2                   #>  [85] splines_4.3.3                 tweenr_2.0.3                  #>  [87] lattice_0.22-5                survival_3.5-8                #>  [89] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [91] tidyselect_1.2.1              Biostrings_2.70.3             #>  [93] knitr_1.45                    gridExtra_2.3                 #>  [95] xfun_0.42                     graphlayouts_1.1.1            #>  [97] hardhat_1.3.1                 timeDate_4032.109             #>  [99] stringi_1.8.3                 yaml_2.3.8                    #> [101] evaluate_0.23                 codetools_0.2-19              #> [103] ggraph_2.2.1                  tibble_3.2.1                  #> [105] BiocManager_1.30.22           cli_3.6.2                     #> [107] rpart_4.1.23                  xtable_1.8-4                  #> [109] systemfonts_1.0.6             munsell_0.5.0                 #> [111] jquerylib_0.1.4               Rcpp_1.0.12                   #> [113] globals_0.16.3                png_0.1-8                     #> [115] parallel_4.3.3                ellipsis_0.3.2                #> [117] pkgdown_2.0.7                 gower_1.0.1                   #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  ggridges_0.5.6                #> [127] scales_1.3.0                  prodlim_2023.08.28            #> [129] purrr_1.0.2                   crayon_1.5.2                  #> [131] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.2 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [97] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.2 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T, Davis K, Nolan G (2024). tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis. doi:10.18129/B9.bioc.tidytof, https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.2, http://www.bioconductor.org/packages/tidytof. Keyes, J. T, Koladiya, Abhishek, Lo, Yu-Chen, Nolan, P. G, Davis, L. K (2023). “tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis.” Bioinformatics Advances, 3(1). doi:10.1093/bioadv/vbad071, https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984.","code":"@Manual{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {Timothy Keyes and Kara Davis and Garry Nolan},   year = {2024},   url = {http://www.bioconductor.org/packages/tidytof},   note = {https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.2},   doi = {10.18129/B9.bioc.tidytof}, } @Article{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {{Keyes} and Timothy J. and {Koladiya} and {Abhishek} and {Lo} and {Yu-Chen} and {Nolan} and Garry P. and {Davis} and Kara L.},   year = {2023},   journal = {Bioinformatics Advances},   volume = {3},   number = {1},   doi = {10.1093/bioadv/vbad071},   url = {https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"See documentation object's original package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"# See examples in each object's original package NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `{cluster_col}_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_{cluster_name}\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 1               #>  2 2               #>  3 17              #>  4 14              #>  5 16              #>  6 6               #>  7 18              #>  8 13              #>  9 15              #> 10 10              #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 11              #>  2 4               #>  3 16              #>  4 18              #>  5 19              #>  6 9               #>  7 19              #>  8 10              #>  9 18              #> 10 18              #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 6                   #>  2 6                   #>  3 10                  #>  4 2                   #>  5 4                   #>  6 6                   #>  7 2                   #>  8 2                   #>  9 2                   #> 10 4                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 6                   #>  2 9                   #>  3 9                   #>  4 1                   #>  5 11                  #>  6 9                   #>  7 1                   #>  8 1                   #>  9 8                   #> 10 3                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>       cd45    cd38   cd34   cd19 cluster_id #>      <dbl>   <dbl>  <dbl>  <dbl> <chr>      #>  1  1.04    0.0513 -0.134 -0.409 w          #>  2  0.621  -0.243  -0.369  1.96  a          #>  3 -1.84    0.123   0.953 -2.22  j          #>  4  1.04    0.163   1.52   0.691 v          #>  5  0.773  -0.327   0.935 -0.421 c          #>  6  0.496   1.34    0.259  0.774 l          #>  7  1.10   -0.394  -1.08  -0.660 i          #>  8  0.933   0.689   0.209 -0.389 l          #>  9 -0.0239 -0.362  -0.470  0.512 v          #> 10  0.393  -0.912   1.17  -0.172 w          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>      cd45   cd38    cd34   cd19 cluster_id #>     <dbl>  <dbl>   <dbl>  <dbl> <chr>      #>  1 -1.92   2.01  -1.43   -0.488 p          #>  2 -1.24   0.849  0.601  -0.535 z          #>  3 -0.308  0.764  1.33    2.83  d          #>  4  0.306 -0.295 -1.66   -0.782 f          #>  5 -0.650  0.126  0.597  -1.55  x          #>  6 -0.900 -2.25   0.708   0.417 p          #>  7 -0.432  0.927  0.222   0.170 q          #>  8  1.10   0.728 -0.0275  0.259 u          #>  9  0.652  0.189  1.54    0.759 l          #> 10 -0.464 -0.794  0.147  -1.86  a          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 117 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1 -0.969  -0.969  0.700  1.52  j          #>  2 -0.290   0.267  1.49   0.579 n          #>  3  0.443   1.85   0.752  0.654 c          #>  4  1.10   -0.394 -1.08  -0.660 i          #>  5  0.0292 -0.718  1.01   0.133 i          #>  6 -1.16   -0.555  0.428 -0.205 d          #>  7 -1.80   -0.663  0.212 -2.07  o          #>  8  1.58   -1.00  -0.296  2.02  w          #>  9 -0.716   0.182  1.35  -0.234 s          #> 10 -0.154   0.532  0.106 -0.553 y          #> # ℹ 107 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1 -0.534  -0.145 -0.441 -0.879 f          #>  2  0.357   0.624  0.728  0.371 d          #>  3 -0.0961 -0.603  0.901 -1.27  h          #>  4 -1.19    0.802  0.831  0.418 u          #>  5 -0.607   0.730  0.239  0.422 e          #>  6  0.186  -1.53   0.811  0.712 d          #>  7 -0.113  -1.12   1.12   0.672 h          #>  8 -0.264  -1.25  -0.637  1.09  j          #>  9 -1.00    1.64   1.63   1.08  j          #> 10  1.29    1.06  -0.427 -0.964 c          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1 -0.940   1.86  -1.71  -0.356 g          #>  2 -0.534  -0.145 -0.441 -0.879 f          #>  3 -0.0961 -0.603  0.901 -1.27  h          #>  4 -0.607   0.730  0.239  0.422 e          #>  5  0.186  -1.53   0.811  0.712 d          #>  6 -0.264  -1.25  -0.637  1.09  j          #>  7  0.762  -0.780 -0.189 -1.18  e          #>  8  0.0646 -0.503  1.06  -0.716 k          #>  9 -0.873  -0.409 -0.208  0.201 d          #> 10 -1.00    1.64   1.63   1.08  j          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 513 × 4 #>      cd45    cd38   cd34   cd19 #>     <dbl>   <dbl>  <dbl>  <dbl> #>  1 -0.285  0.0704 -0.150 -0.590 #>  2 -1.21  -0.631   2.19  -1.39  #>  3 -1.06  -1.25    0.112 -0.366 #>  4  0.152  1.29    0.562  0.945 #>  5 -1.32   0.478  -0.726 -0.916 #>  6  1.46   1.46    0.696 -2.19  #>  7  0.193 -0.270  -1.52  -1.42  #>  8 -0.204 -0.583   0.124 -0.474 #>  9 -1.57   0.320  -1.47   1.47  #> 10 -1.38  -0.438  -0.630 -1.26  #> # ℹ 503 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 187 × 4 #>      cd45    cd38    cd34    cd19 #>     <dbl>   <dbl>   <dbl>   <dbl> #>  1  0.488  0.200  -1.26   -0.0137 #>  2 -1.38  -0.438  -0.630  -1.26   #>  3 -1.41   1.26    0.0965  0.708  #>  4 -0.717 -0.0211 -0.859   0.0695 #>  5 -0.157  1.25   -0.411   0.267  #>  6 -2.46  -0.0429 -1.07    1.69   #>  7  0.404  0.0739  2.00    0.327  #>  8  0.285  0.981   0.804   1.62   #>  9 -0.302 -1.02    1.56    0.698  #> 10  0.320 -1.40   -1.50    0.925  #> # ℹ 177 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 208 × 4 #>      cd45    cd38    cd34    cd19 #>     <dbl>   <dbl>   <dbl>   <dbl> #>  1  1.46   1.46    0.696  -2.19   #>  2 -0.672 -0.516  -0.196   1.04   #>  3  0.423  2.45   -1.62    0.936  #>  4  1.86  -2.28   -0.766   0.643  #>  5 -1.69  -1.10   -0.951  -1.22   #>  6 -0.729  1.84    0.143  -0.297  #>  7 -1.14  -0.379  -1.29   -0.0373 #>  8  0.687 -0.0468 -0.469   0.280  #>  9 -0.346  1.09   -0.604  -1.58   #> 10  1.07  -2.00    0.0471 -0.819  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>       cd45    cd38    cd34    cd19 cluster_id #>      <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1 -0.0395 -0.876   1.29   -0.699  k          #>  2  0.0426 -1.22    0.685  -0.511  c          #>  3 -1.86    0.161   0.536  -0.0633 e          #>  4  0.135   0.0477  0.0472 -0.0753 k          #>  5  1.39   -0.224   0.0885 -0.836  y          #>  6  2.01    1.13    1.77   -0.293  l          #>  7  1.78   -0.703  -0.729   0.412  i          #>  8 -0.721  -0.129  -0.509   1.49   e          #>  9 -0.343   0.637   0.218   1.42   t          #> 10 -1.89   -0.907   1.42   -1.38   k          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 89 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1  1.81   -1.05  -0.433  0.236 a          #>  2  0.272   0.639 -2.08  -0.872 a          #>  3 -0.500   0.347 -1.35  -0.605 a          #>  4  1.07   -1.04   0.779  0.399 b          #>  5  1.60    0.318 -0.665 -1.24  b          #>  6 -0.868  -0.413  0.935  0.319 c          #>  7  0.953   0.557 -0.228 -0.430 c          #>  8 -1.06   -0.185 -1.52  -1.51  c          #>  9  0.285  -0.174  2.02  -0.281 c          #> 10  0.0854 -1.21  -1.17   2.13  d          #> # ℹ 79 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>      cd45   cd38    cd34    cd19 .spade_density #>     <dbl>  <dbl>   <dbl>   <dbl>          <dbl> #>  1 -0.989  0.655 -0.257   0.512               1 #>  2 -0.141  0.518  0.0482 -1.70                1 #>  3 -1.39   0.377 -1.79   -1.21                1 #>  4 -0.220  0.348 -0.884  -1.77                1 #>  5  1.28   0.201  0.321   0.502               1 #>  6  1.66  -0.565 -0.777   0.807               1 #>  7  0.192  0.210 -0.885   0.0412              1 #>  8  0.644  0.523  1.19    0.609               1 #>  9 -0.151 -0.458  1.04   -0.449               1 #> 10 -0.210 -0.710 -1.61    1.15                1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38    cd34    cd19 .spade_density #>     <dbl>  <dbl>   <dbl>   <dbl>          <dbl> #>  1 -0.989  0.655 -0.257   0.512             1   #>  2 -0.141  0.518  0.0482 -1.70              1   #>  3 -1.39   0.377 -1.79   -1.21              0.4 #>  4 -0.220  0.348 -0.884  -1.77              0.6 #>  5  1.28   0.201  0.321   0.502             1   #>  6  1.66  -0.565 -0.777   0.807             0.9 #>  7  0.192  0.210 -0.885   0.0412            1   #>  8  0.644  0.523  1.19    0.609             1   #>  9 -0.151 -0.458  1.04   -0.449             1   #> 10 -0.210 -0.710 -1.61    1.15              0.8 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby         0.151       0.116     -0.0779     -0.115        0.507 #> 2 mario        -0.103       0.147     -0.292       0.0222      -0.416 #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45     0.151  #>  2 kirby   a          cd38     0.116  #>  3 kirby   a          cd34    -0.0779 #>  4 kirby   a          cd19    -0.115  #>  5 kirby   b          cd45     0.507  #>  6 kirby   b          cd38     0.161  #>  7 kirby   b          cd34    -0.0364 #>  8 kirby   b          cd19     0.0318 #>  9 kirby   c          cd45    -0.0181 #> 10 kirby   c          cd38    -0.145  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@l_emd` `stim_cd38@l_emd` `stim_cd34@l_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                  NA                NA                NA #> 2 kirby                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@l_emd` <dbl>, `stim_cd45@m_emd` <dbl>, #> #   `stim_cd38@m_emd` <dbl>, `stim_cd34@m_emd` <dbl>, `stim_cd19@m_emd` <dbl>, #> #   `stim_cd45@a_emd` <dbl>, `stim_cd38@a_emd` <dbl>, `stim_cd34@a_emd` <dbl>, #> #   `stim_cd19@a_emd` <dbl>, `stim_cd45@k_emd` <dbl>, `stim_cd38@k_emd` <dbl>, #> #   `stim_cd34@k_emd` <dbl>, `stim_cd19@k_emd` <dbl>, `stim_cd45@z_emd` <dbl>, #> #   `stim_cd38@z_emd` <dbl>, `stim_cd34@z_emd` <dbl>, `stim_cd19@z_emd` <dbl>, #> #   `stim_cd45@e_emd` <dbl>, `stim_cd38@e_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 l          cd45   stim         5.25 #>  2 l          cd38   stim        10.7  #>  3 l          cd34   stim         5.43 #>  4 l          cd19   stim         4.76 #>  5 m          cd45   stim         9.86 #>  6 m          cd38   stim         8.11 #>  7 m          cd34   stim         5.80 #>  8 m          cd19   stim         4.21 #>  9 a          cd45   stim        22.2  #> 10 a          cd38   stim         7.27 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby      0.04     0.03     0.038    0.05     0.042    0.044    0.03  #> 2 mario      0.042    0.034    0.048    0.036    0.026    0.038    0.044 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby      0.04     0.03     0.038    0.05     0.042    0.044    0.03  #> 2 mario      0.042    0.034    0.048    0.036    0.026    0.038    0.044 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@b_jsd` `stim_cd38@b_jsd` `stim_cd34@b_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                  NA                NA                NA #> 2 kirby                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@b_jsd` <dbl>, `stim_cd45@v_jsd` <dbl>, #> #   `stim_cd38@v_jsd` <dbl>, `stim_cd34@v_jsd` <dbl>, `stim_cd19@v_jsd` <dbl>, #> #   `stim_cd45@j_jsd` <dbl>, `stim_cd38@j_jsd` <dbl>, `stim_cd34@j_jsd` <dbl>, #> #   `stim_cd19@j_jsd` <dbl>, `stim_cd45@f_jsd` <dbl>, `stim_cd38@f_jsd` <dbl>, #> #   `stim_cd34@f_jsd` <dbl>, `stim_cd19@f_jsd` <dbl>, `stim_cd45@u_jsd` <dbl>, #> #   `stim_cd38@u_jsd` <dbl>, `stim_cd34@u_jsd` <dbl>, `stim_cd19@u_jsd` <dbl>, #> #   `stim_cd45@o_jsd` <dbl>, `stim_cd38@o_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation    jsd #>    <chr>      <chr>  <chr>        <dbl> #>  1 b          cd45   stim        NA     #>  2 b          cd38   stim        NA     #>  3 b          cd34   stim        NA     #>  4 b          cd19   stim        NA     #>  5 v          cd45   stim         0.732 #>  6 v          cd38   stim         0.860 #>  7 v          cd34   stim         0.940 #>  8 v          cd19   stim         0.879 #>  9 j          cd45   stim         0.737 #> 10 j          cd38   stim         0.619 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0447   0.0467   0.0311   0.0428   0.0370   0.0486   0.0447 #> 2 mario     0.0535   0.0412   0.0432   0.0370   0.0350   0.0329   0.0432 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0447 #>  2 kirby   b          0.0467 #>  3 kirby   c          0.0311 #>  4 kirby   d          0.0428 #>  5 kirby   e          0.0370 #>  6 kirby   f          0.0486 #>  7 kirby   g          0.0447 #>  8 kirby   h          0.0486 #>  9 kirby   i          0.0214 #> 10 kirby   j          0.0311 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby               0.0417             0.0833               0    #> 2 mario               0.1                0.05                 0.05 #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0.0417 #>  2 kirby   a          cd38    0.0833 #>  3 kirby   a          cd34    0      #>  4 kirby   a          cd19    0.0417 #>  5 kirby   b          cd45    0.0625 #>  6 kirby   b          cd38    0      #>  7 kirby   b          cd34    0      #>  8 kirby   b          cd19    0.125  #>  9 kirby   c          cd45    0.0435 #> 10 kirby   c          cd38    0.0435 #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  452  409  487  334  637  930  129  592  158   114 #>    [2,]   93  282  225  613  356  869  318  891  726   263 #>    [3,]  837  233  822  400  622   81  258  683  130   172 #>    [4,]  266  680  177  184  983  106  563  493  779    59 #>    [5,]  173  176  162  575  696  789  264   30  741   997 #>    [6,]  861  413  926  255  480  414  236  967  878   879 #>    [7,]   89  144  193  622    3  511  172  508  793   672 #>    [8,]  646   35   46  794  253  989  499   27  361   285 #>    [9,]   18  559  854  888  828  934  468  630  455    73 #>   [10,]  363  674  944  778  946  629  243  423  924   246 #>   [11,]  796  753  314  840  556  812  515  318  286   154 #>   [12,]  545  933  961  391  278   72  206   57  134   299 #>   [13,]  746  992  584  632  741  575  224  820   28   427 #>   [14,]  163  657  400  496  822  755   81  330  723   507 #>   [15,]  441  789  685  908  597  696  291  377  768   629 #>   [16,]  188  782  276  916  697  972  920  978  443   560 #>   [17,]  846   44  940  102  903  462  815  738  643   200 #>   [18,]    9  888  559  854  828  305  468  934  185   630 #>   [19,]  975  593  762  329   74  228  610  304   56   627 #>   [20,]  518  604  323   33  329  810  574  100  317   728 #>   [21,]  368  328  715  605  954  439  974  603  562    84 #>   [22,]  792   26  675  590  167  421  503  922  777   191 #>   [23,]  947  361   84  767  261  499   95  989  444   981 #>   [24,]  209  736  101  633  979  180  320  543  106   665 #>   [25,]  855  267  729  240  974  223  954  148  811   923 #>   [26,]  792  421  922  675   22  590  167  214  111   503 #>   [27,]  794  516  332  364  325  285   46  116  389   135 #>   [28,]  776  584  500  160  746  357  535  976  586   805 #>   [29,]  260  213  609  713  681   98  438  275  547   953 #>   [30,]  162  741  911  416  393  712  606  575  997   379 #>   [31,]  996  963  721  230   75  398   34  525  373   964 #>   [32,]  777  191  800  814  787  724  608  451  720   664 #>   [33,]  604   20  637  784  323  592  738  815  378   518 #>   [34,]  398  406  281   36  128  394   50  803   31   735 #>   [35,]    8  989  646  794   46  285  253   65   86    27 #>   [36,]  406  735  137  495  486  476  481  281   50    34 #>   [37,]  360  229  907  893  990  861  690  638  748   254 #>   [38,]  596  661  530  471  453  517  816  547  284   734 #>   [39,]  352  156  370  787  986   82  343  279  720   435 #>   [40,]  307  887  852  689  941  921  923  962  615   969 #>   [41,]  641  305  460  888  671  555  185   18  828   534 #>   [42,]  104  450  995  958  942  700  214  151  415   226 #>   [43,]  467  988  440  982  388  813  677  274  246   697 #>   [44,]  940  531  256  688   17  653  370  359  411   903 #>   [45,]  416  911  411  359  362  268  367  330  610   224 #>   [46,]  794  271  576  499  253  697  982  364  904   991 #>   [47,]   71  477  513  298  466  308  538  667  562   714 #>   [48,]  183  563  493  950  739  121  779  317  986   346 #>   [49,]  713  807  871  178   50  296  573  275  821   455 #>   [50,]  871  296   49  281  406  713  803  464  915   694 #>   [51,]  260  213  348  225  282   29  609  478  430   651 #>   [52,]  219  663  204  666  834  994  250  973  309   127 #>   [53,]  273  203  153  686  294  576  825  709  717   982 #>   [54,]  652  418  581  258  957  369  965  643  848   508 #>   [55,]  639  772  786  513  208  806  138  345  651   890 #>   [56,]  824  703  860  212  650   74  147  745  975   820 #>   [57,]  299  278  880  617  391  933  289  458  961   545 #>   [58,]  892  521  662   88  306  618  826  127  839   481 #>   [59,]  336  184  106   63  177  111  935  799  446   950 #>   [60,]  321  514  520  509    6   96  850  967  480   879 #>   [61,]  425  408  716  838   65  209  570  375   24   665 #>   [62,]  600  841  561  633  966  935  320  567  170   355 #>   [63,]  446  336   59  935  184  320  585  177  199   698 #>   [64,]  770   94  432  107  138  570  131  179  522   519 #>   [65,]  919  838  543  736   23  989  947   24  209   550 #>   [66,]  925  443  578  597  243  276  781  397  573   761 #>   [67,]  565  179  128  373  199  577   34   75  398   390 #>   [68,]  324  207  388  628  254  850  638  374  440   621 #>   [69,]  490  681  136  356  953  999  726  818  225   284 #>   [70,]  312  698  668  714  615  177  101  302  779   385 #>   [71,]   47  477  513  308  562  298  667  139  538   195 #>   [72,]  206  579  545  829  391  134   12  589  887   961 #>   [73,]   80  331  934  252  898  430  489  832  927   993 #>   [74,]  329  728  762  975  523  745  212  739  100   679 #>   [75,]  373  399   31  853  199  398  996  525  876   841 #>   [76,]  348  208  541  651  915  213  333  873  383    51 #>   [77,]  931  422  108  991  210  402  736  576  948   979 #>   [78,]  684  845  840  475  262  115  381  143  293   701 #>   [79,]  906  465  930  740  452  182  704  942  727   659 #>   [80,]  430   73  832  898  927  489  252  282  331   512 #>   [81,]  642  723  750  400  367  909  330  313  755   163 #>   [82,]  370  688  352   39  800  156  720  814  787   433 #>   [83,]  364  689  813  231  560  928  904  923   98   275 #>   [84,]  361  368  444   23  947  499  261  605  767    95 #>   [85,]  501  773  339  448  827  382  411  564  507   366 #>   [86,]  273  456   53  505  294   77  982  203  931   991 #>   [87,]  905  329   74  265  739  523  728  762  568   550 #>   [88,]  618  892  521  934   58   99  497  350  826   165 #>   [89,]    7  760  793  193  144  672   41  235  403   622 #>   [90,]  885  824  287  870  593  765  236  912  771   379 #>   [91,]  619  420  802  146  326  489  763  257  541   249 #>   [92,]  968  929  621  371  181  578  397  436  677   761 #>   [93,]  869    2  726  318  282  225  613  166  356   891 #>   [94,]  432  138  519  522  770  345  241  474   64   890 #>   [95,]  795  386   84  947  983  605  767   23  710   368 #>   [96,]  509  658  515  757  886  419  796  764  190   830 #>   [97,]  901  667  995  184  266  386  799  680  983   336 #>   [98,]  609  438  928  325  260  275   29   83  332   786 #>   [99,]  350  306  618  297  892  826   88  759  250   949 #>  [100,]  679  810  523  518  728  329  745   74  317   762 #>  [101,]  180  320  302  979  633   70  698   24  177   955 #>  [102,]  846  959   17  457  784  738   82   44  200   800 #>  [103,]  142  303  918  798  985  742  534  647  669   305 #>  [104,]   42  942  896  727  995  465  700  415  958   378 #>  [105,]  973  119  373  399  309   67   75  666  492   145 #>  [106,]  983   59  386  799    4  184  336  177  901   111 #>  [107,]  179  616  770  612  383  432  565   67  790   517 #>  [108,]  576  979  180  718  302  991  101   77  955   147 #>  [109,]  166  284  726  898  221  681  547  430  807   174 #>  [110,]  434  558  857  937  810  604  518   12  205   391 #>  [111,]  799   59  336  922  106  544  386  905  983   184 #>  [112,]  516  325  899  955  928  631  364  969  895   504 #>  [113,]  232  819  421  259   26   22  922  792  932   111 #>  [114,]  158  409  526  139  804  683  868  233  129   865 #>  [115,]  143  941   78  407  753  340  438  845  840   356 #>  [116,]  332  562  806  890  639  969  786  308  513   516 #>  [117,]  682  174  951  124  166  498  706  851  252   898 #>  [118,]  626  582  823  877  653  197  539  256  244   155 #>  [119,]  973  234  503  399  373  309  608  666  588   351 #>  [120,]  601  475  763  828  146  461   91  489  293   185 #>  [121,]  986  451  156   48  183  191  346  602  228   751 #>  [122,]  774  735  496  476  159  977  137  394  525    36 #>  [123,]  768  752  685   15  598  198  775  836  722   132 #>  [124,]  498  174  851  447  243  117  781  682  951   785 #>  [125,]  553  161  940  624  413  130  939  531  886   878 #>  [126,]  419  757  658  886  960  811  764  515  289   337 #>  [127,]  204  994  662   58  502  306  892  742  614   987 #>  [128,]   34  383  230  616  577  149  612  464  873    67 #>  [129,]  409  334  655  880  139  487  526  342  158   404 #>  [130,]  624  161  687  939  909  750  886  367  837    81 #>  [131,]  585  538  889  567  446  847  895  667  631   522 #>  [132,]  722  649  629  749    5  849  360  197  997   638 #>  [133,]  719  164  186  606  669  470  162  741  215   691 #>  [134,]   72  545  206  912  765   12  527  829  902   579 #>  [135,]  402  794  516  422  522  734  471  325   27   991 #>  [136,]  530  547  284  681  788  469  442  778  109    29 #>  [137,]  495  476   36  735  406  759  316  387  797   977 #>  [138,]  432   94  772  345  208   55  786  474  913   639 #>  [139,]  409  158  129  655  880  439  334  114  868   299 #>  [140,]  468  554  548  821  431  315  613  295  263   455 #>  [141,]  896  429  704  465  865  104  192  376  452   334 #>  [142,]  985  742  669  470  303  215  798  630  103   918 #>  [143,]  340  617  458  941  753  887  840  811  115   852 #>  [144,]  622  190    7  764  245  403  801  238  960   295 #>  [145,]  170  561  336  935  247  355  111  214   63    62 #>  [146,]  249  601  185  707  272  293  554  797  326   140 #>  [147,]  718  703  188  860  805  962   56  650  212   615 #>  [148,]  231  240  904  389  677  689  648  286  923   314 #>  [149,]  577  826  835  481  732  521  533  306  128   892 #>  [150,]  693  692  701  684  262  874  154  407  196   845 #>  [151,]  492  450  157   42  187  327  463  958 1000   226 #>  [152,]  936  669  630  924  907   18  559  599  305     9 #>  [153,]  294  276  988  978  782  982  377  443  211   274 #>  [154,]  692  845  840   11  796  684  190   78  753   515 #>  [155,]  264  653  359  186  224  173  268  360  162   256 #>  [156,]  992  986  121  627   39  370  881  787  602   551 #>  [157,]  463  327  151  702  492  971  896   42  168   958 #>  [158,]  409  139  114  865  704  334  129  439  452     1 #>  [159,]  735  486  122  970  868  406  537  496  977   394 #>  [160,]  277  776  322  385   28  428  921  805  349   316 #>  [161,]  624  130  687  886  939  125  238  750  413   511 #>  [162,]   30  741  173  264  186    5  575  719  224   164 #>  [163,]   14  657  400  755   81  496  822  330  366   507 #>  [164,]  186  133  719  162  606  470   30  691  669   268 #>  [165,]  447  851  459  201  618  331  350  124  498   872 #>  [166,]  807  109  898  174  726  430  682  781  117   547 #>  [167,]  675  792  503  590  191   26  777  787   32   608 #>  [168,]  487  369  957  463  418  549  727  159  965   958 #>  [169,]  993  612  517  785  201  900  706  221  596   252 #>  [170,]  355  561  247  209  935   24  633  283  841   336 #>  [171,]  644  931  736  656  948   77  210  699  170   203 #>  [172,]  827  462    3  193  448  793  507    7  508   837 #>  [173,]  264  176  162    5  224  186  470  719  575   741 #>  [174,]  682  124  785  117  498  898  166  807  851   706 #>  [175,]  795  368   95   21  192  605   84  344  361   570 #>  [176,]  173    5  696  264  470  162  719  215  186   789 #>  [177,]  698  563  779  831    4  950  184   70   59   668 #>  [178,]  552  442   49  473  573   16  781   66  871   843 #>  [179,]  107   67  616  770  383  702  913  128   34   199 #>  [180,]  979  101  108  955   24  302  543   70  499   444 #>  [181,]  912  968  761   92  765  379  393  397  211   712 #>  [182,]  906  572   79  465  141  704  659  930  452   192 #>  [183,]   48  587  346  881  493  551  121  602  627   317 #>  [184,]   59    4  177  266   63  106  901  336  446   563 #>  [185,]  601  249  707  146  828  468  460  888  797   140 #>  [186,]  164  719  133  162  470  173  264  268  155   669 #>  [187,] 1000  971  700  327  743  450  151  168  957   463 #>  [188,]   16  978  782  276  920  147  718  761  805   560 #>  [189,]  555  833  479  497  755  460  636  707  758   691 #>  [190,]  764  144  960  245  840  515  801  403  288   845 #>  [191,]  777   32  787  800  121  451  814  167  156   675 #>  [192,]  605  659  376  747  424  141  710   97  195   680 #>  [193,]  511    7  827  448  555  755  622  172  691   460 #>  [194,]  802  475  120   91  701  733  489  478  763   472 #>  [195,]  680  424  747  376  655  266  368  139  605     4 #>  [196,]  262  945  381  693  454  684  384  311  692   419 #>  [197,]  997  849  722  823  379  626  717    5  910   825 #>  [198,]  649  988  374  207  768  274  638  946  944   211 #>  [199,]  398  876  600   63   75  585  841  446  935   540 #>  [200,]  738  751  346  451  228  867  587  815  602   551 #>  [201,]  897  785  498  165  851  174  124  998  447   528 #>  [202,]  251  532  938  737  676  482  632  176  789   358 #>  [203,]  656  825   53  717  910  686  644  722  849   836 #>  [204,]  127  994  306  502  219  892  297   58  662   987 #>  [205,]   12  857  579  134   72  391  545  206  830   829 #>  [206,]   72  579  545  391  829  589  134   12  887   961 #>  [207,]  374  638  254  274  988  211   68  621  649   440 #>  [208,]   76  651  213  348  260   55  138  915   51   953 #>  [209,]   24  170  736  633  320  838  935  101  446   931 #>  [210,]  216  948  280  917  952  302  964  405   77   633 #>  [211,]  274  761  397  649  988  181  749  153  374   978 #>  [212,]  739  766  703   74  779   56  860  820  523   679 #>  [213,]  260   29  915   51  900   76  221  609  208   953 #>  [214,]  226  540  958  415   42  995   26  301  336   876 #>  [215,]  696  872  459  719  133  669  470  176  630   985 #>  [216,]  280  210  964  405  483  948  952  908  673   506 #>  [217,]  502  987  808  382  670  773  994  448  127   204 #>  [218,]  591  457  510  433  711  678  959  279   82   352 #>  [219,]  204  614  663  127  250  557  994   52  306   862 #>  [220,]  392  882  607  279  343  678  283  437  222   338 #>  [221,]  900  284  213  109  517  927  898  547   29   252 #>  [222,]  343  265  607  568  580  410  986  574   87   975 #>  [223,]  240  729  648  954  589  829  579  980  206   904 #>  [224,]  264  173  653  162   13  359  416  741   45   256 #>  [225,]    2  282   51   93  430  681  726   29  260   109 #>  [226,]  540  958  214  415  301  876  595  549  492   351 #>  [227,]  521   58  892  618   88  306  826  994  934   350 #>  [228,]  602  587  346  751  323  121  200  881  451   183 #>  [229,]   37  907  360  861  255  936  990  164  413   155 #>  [230,]   31  842  721  996  963  128  528  577  826    34 #>  [231,]  689  148  904  923  389  813   83  240  962   364 #>  [232,]  113  819  932  421  259  111  145   26  922    22 #>  [233,]    3  837  683  822  114  526  965    1  404   310 #>  [234,]  743  119 1000  503  351  608  588  724  492   973 #>  [235,]   96  190  509  403  658  144   89    7  764   419 #>  [236,]  879  926  885  877  893  861  771   90  990   480 #>  [237,]  914  542  705  428  322  313  801  315  909   295 #>  [238,]  801  542  347  764  401  909  548  750  288   914 #>  [239,]  918  534  808  382   41  798  641  760  773   217 #>  [240,]  223  648  729  148  231  904  829  689  954   253 #>  [241,]  519  890  786  345  806  639  116  332   94    27 #>  [242,]  436  560  929  891  578   92  263  887  401   914 #>  [243,]  781  597  925  778   66  124  674  552  807   443 #>  [244,]  711  482  884  653  224  433  264  251  155    82 #>  [245,]  295  960  801  764  683  288  542  190  144   622 #>  [246,]  440  944  946  999  467  274  318  929  374    92 #>  [247,]  355  283  561  935  170  524  841   59  437   633 #>  [248,]  998  270  594  498  483  291  843  785  441   897 #>  [249,]  146  185  601  707  797  326  272  420  554   293 #>  [250,]  306  834  350   99  842  297  826  892  204   577 #>  [251,]  202  938  676  711  482  435  433  358  737   532 #>  [252,]  706  898  682  331  174   73  993  927   80   117 #>  [253,]  648  388  271  240  646  223  904  677  729    46 #>  [254,]  207  374  638  371  621  690  850  929  181   274 #>  [255,]  413  531  861  268  359    6  877  256  653   155 #>  [256,]  653  359  688  224   45  268  416  370   44   411 #>  [257,]   91  533  292  420  839  326  790  619  763   732 #>  [258,]  581  652  418  426  369  965   54  310    3   508 #>  [259,]  338  607  678  410  392  882  568  222  421   580 #>  [260,]  609   29  213  438   51   98  953  915  275   713 #>  [261,]  361  947   84   23  767  729  395  954  444   328 #>  [262,]  381  684  384   78  196  692  340  840  693   407 #>  [263,]  891  288  613  315  548  295  140  242  821   914 #>  [264,]  173  224  162  155  176  186    5  741   30   653 #>  [265,]  222  766   74  739   87  975  343  329  986   550 #>  [266,]  680    4  378  184  342  563  195  424  493   177 #>  [267,]  923  941  389   25  689  231  407  240  148   332 #>  [268,]  359  416   45  186  164  911  531  411  256   155 #>  [269,]  672  760  239  508  793  808  382   89  763   448 #>  [270,]  248  998  598  498  685  124  291  897  785   951 #>  [271,]  904  648  677  962  980  253  589  240  813   231 #>  [272,]  554  293  146  486  970  249  140  333  295   431 #>  [273,]   53   86  153  294  988  456  982  709  203   686 #>  [274,]  211  988  374  649  761  153  467  978  968   246 #>  [275,]  713  296  871  609  928   98   49   83  438    29 #>  [276,]  443  782  377  761  188   16  978  920   66   153 #>  [277,]  160  385  921  571  615  322  776  349  316   387 #>  [278,]   57  391  299  880  933   12  961  545  289   458 #>  [279,]  435  510   39  343  352  220  433  365  437   580 #>  [280,]  216  908  948  952  483  210  964  405  441   377 #>  [281,]  466  394  406  298  668   50   34  398  312   803 #>  [282,]  613  430    2  225  891  263   51  713  166    93 #>  [283,]  524  355  247  437  365  917  950  561  935   841 #>  [284,]  530  109  221  547  681  136   29  166  174   213 #>  [285,]  445   43   27  794  813  290  999   46  467   253 #>  [286,]  356  999  314  389  318  148  231  753  436   929 #>  [287,]  593   90  885  539  824  870  626  771   19   975 #>  [288,]  263  801  295  548  891  914  315  245  237   812 #>  [289,]  811  611  458   57  617  278  340  391  299   143 #>  [290,]  253   25  240  285   27  148  729  389  267   648 #>  [291,]  441  248  908  897  498  483  685  872  594   124 #>  [292,]  790  257  533  420  327  326   91  835  619   971 #>  [293,]  272  146  554  245  249  295  601  707  683   804 #>  [294,]  982  456  153  991  697  782  972  576  377   276 #>  [295,]  245  801  288  554  237  431  315  542  548   914 #>  [296,]  275  970  537  713   50  486  871   49  333   915 #>  [297,]  306   99  892  826  569  759  525  350  618   449 #>  [298,]  466  281  537  477  406  913   47  486  394   970 #>  [299,]   57  278  617  880  933  852  391  961  545   458 #>  [300,]  859   54  643  592  815  957  462  700  846   784 #>  [301,]  595  540  415  876  226  958  867  549  831   774 #>  [302,]  917  101  633   70  952  698  108  312  210   180 #>  [303,]  798  142  918  103  470  669  647  884  742   564 #>  [304,]   19  593  857  323  878  771  939  902  610   780 #>  [305,]   41  641  888   18  671  460  798  691    9   555 #>  [306,]  892   99  826  297  350  250  618  521   58   204 #>  [307,]   40  852  887  921  941  299  571  617  615   969 #>  [308,]  806  513  562  890   71   47  116  477  809   772 #>  [309,]  399  503  119  167  724  608   75  853  373   675 #>  [310,]  804  965  369  581  418  426  258  233  619   114 #>  [311,]  620  196  337  658  509  235  419   96  858   126 #>  [312,]   70  714  615  668  349  466  955  694  385   281 #>  [313,]  705  723  909  642  367  237   81  750  571   542 #>  [314,]  436  556  286  753   11  148  812  811  527   929 #>  [315,]  428  914  316  821  237  263  295  431  140   921 #>  [316,]  387  921  428  315  431  495  571  277  970   322 #>  [317,]  493  342  679  100  518  810  523  563  739   329 #>  [318,]  286  999  246   93  929  356  944  440   11     2 #>  [319,]  640  656  338  882  220  678  550  546  645   203 #>  [320,]  633  101  585  446  841   63  935  538   24   600 #>  [321,]   60  514  412  520  628  341  850  830  757   314 #>  [322,]  428  160  705  237  914  313  277  921  316   776 #>  [323,]  604   20  228  574  518  810   19  329   33   304 #>  [324,]   68  388  445  253  628  440   43  207  677   148 #>  [325,]  516  928  112  863   98  883  631  786  364   969 #>  [326,]  619  420  426  249  707  977  146  839  310    91 #>  [327,]  463  971  157  492  187  168  151  351 1000   743 #>  [328,]  954  611  391  974  747  566  278  439   57   603 #>  [329,]   74  762  728  518  975  100  523   87  745   679 #>  [330,]   81  367  755  551  339  723  881  750  163   903 #>  [331,]  851  934   73  898  252  993  447  165  706   682 #>  [332,]  116  786  639  325  969  516   98  364  438   928 #>  [333,]  486  348  754  541  651  296  537  464   36    76 #>  [334,]  129  487  409  158  452  727  424  637  139   655 #>  [335,]  660  410  568  580  536  338  574  259  959   222 #>  [336,]   59   63  446  184  111  106  935  901  799   983 #>  [337,]  858  658  419  126  837  233    3  960  454   764 #>  [338,]  882  259  607  678  410  550  392  568  580   222 #>  [339,]  903  507  411  330  755  827  366  551  501   881 #>  [340,]  143  458  811  617  289  556  941  840  381   515 #>  [341,]  628  412  480  864  395  780  205   90  885   870 #>  [342,]  493  317  378  129  655  266  637  424  680   334 #>  [343,]  222  607  580  265   39  279  220  986  352   410 #>  [344,]  665  983  901  899  368  538  106  667   84   955 #>  [345,]  786  953  474  639   98  241  325  138  432    55 #>  [346,]  751  587  200  451  228  183  602  738  551   881 #>  [347,]  401  990  238  712  606   30  893  911  634   542 #>  [348,]   76  651  333  541   51  208  915  486  213   478 #>  [349,]  385  615  573  714  277  312  316  160  921    16 #>  [350,]   99  618  306  892  826  842   88  297  165   528 #>  [351,]  588  743  569 1000  234  835  492  608  122   549 #>  [352,]   39  370   82  510  279  343  156  580  582   435 #>  [353,]  564   44  531  255  940  653  256  155  244   688 #>  [354,]  993  169  927  612  706  252  732  900  873    73 #>  [355,]  247  283  561  935  170  841  524  633  917    59 #>  [356,]  286  389  999  231  753  318    2  242  148   813 #>  [357,]  976  500  949  488   28  535  473  776  584   746 #>  [358,]  938  676  737  365  437  488  280  948  435   427 #>  [359,]  268  256  653   45  416  224  411  155  531   911 #>  [360,]  162  186  155  264  164  173    5   30   37   997 #>  [361,]   84   23  947  499  261  444  368  767  729   954 #>  [362,]  610  627  881   45  687  602  367  902  416   771 #>  [363,]  674  623  924   10  951  629  423  243  117   597 #>  [364,]   83  516  689  112  813  969  325  904  928   980 #>  [365,]  437  625  664  372  524  435  787  720  283   676 #>  [366,]  479  755  657  163  491  330  339  507   14   731 #>  [367,]  750  909  705  313   81  723  330  642  687   362 #>  [368,]   84  605  195   21  344  562  747  361  328   680 #>  [369,]  418  581  965  652  310  258  168  957   54   971 #>  [370,]  688   82  352   39  156  992  627  256  800   610 #>  [371,]  621  929   92  968  436  765  254  677  181   912 #>  [372,]  664  625  365  720  449  632  586  676  787   437 #>  [373,]   75  399  853  525  973  119  398   31  876   199 #>  [374,]  207  274  649  254  211  638  749  946  246   988 #>  [375,]  756  567  390  600  585  408   62  734  708   816 #>  [376,]  424  747  637  195  452  680  334  655  605   192 #>  [377,]  276  443  920  782  153  825  952  427  188   294 #>  [378,]  266  415  342  727  334  487  942  637  680   493 #>  [379,]  997  181  849   30  393  197  912  893  990    90 #>  [380,]  784  815   17  323  604  434  592  939  846    33 #>  [381,]  262  340  419  684  960  143  289  811  384    78 #>  [382,]  808  448  773  848  827  670   85  462  507   193 #>  [383,]  616  915  517  464  873  612  128  900   76   803 #>  [384,]  407  262  381  617  289  439  611  340  684   143 #>  [385,]  277  349  160  668  615  776  316  495  714    70 #>  [386,]  983  799  106    4   95   97  901  544  111   184 #>  [387,]  316  921  571  431  970  404  428  642  554   495 #>  [388,]  677  648  253  968  621  271  904  148   43   765 #>  [389,]  231  356  148  923  689  267  286   83  813   332 #>  [390,]  565  375  816  756  600  966  770  567   67    62 #>  [391,]  278  545   57   12  206   72  299  579  933   961 #>  [392,]  220  678  607  882  259  338  343  222  580   283 #>  [393,]  712  181   30  761  575  741  912  379  997   188 #>  [394,]  668  281  406  744  466  735  398  876  831   122 #>  [395,]  767  745  558  728  650  762  444  261  981   810 #>  [396,]  733  804  894  802  865  484  478  114  310   874 #>  [397,]  578  761  712  925  211  943   66   92  725   181 #>  [398,]  199  876  394   34  281  744  668  525   31    75 #>  [399,]  309   75  373  853  119  608  503  167  372   973 #>  [400,]  163   14   81  755  822  642  723  657  622   833 #>  [401,]  347  914  712  237  578  527  242  542  322   801 #>  [402,]  422  991  734  135   77  955  471  504  916   108 #>  [403,]  144  190  559  238  548  828  854   18  634   801 #>  [404,]  526  822  571  496  387  723  129  642  683   921 #>  [405,]  964  695  216  483  963  721  280  996  506   210 #>  [406,]   36  281  735  394  495  137  486  466   50   298 #>  [407,]  384  115  267  941  262  340  874  143  617   684 #>  [408,]  716  375  756   61  567  425  570  422  209   665 #>  [409,]  139  129  158  880  655  334  114  439  424     1 #>  [410,]  568  222  574  607  259  580  905  338  536   343 #>  [411,]   45  339  688  903  359  564  268  758  330   256 #>  [412,]  628  341  321  864  729  480  395  514  261   780 #>  [413,]  861  926  255  161    6  236  879  125  878   886 #>  [414,]  967  780  878  480  926    6  857  304  236   341 #>  [415,]  958  301  378  226  540  595  549  867  727   266 #>  [416,]  911   45   30  359  741  268  362  162  224   771 #>  [417,]  654  791  685  775  291  594  528  441  695   769 #>  [418,]  369  581  652  965  258  957   54  310  168   426 #>  [419,]  126  658  960  764  757  515  381  886  337   811 #>  [420,]  326  754  249  839  619   91  977  333  732   146 #>  [421,]  922   26  792  675  259  167  607   22  410   111 #>  [422,]  402   77  734  991  931  210  673  216  756   108 #>  [423,]  690  599  943  749  674  634  725  397  363   936 #>  [424,]  376  747  195  680  637  655  334  409  342   129 #>  [425,]  838  716   61  570  889  408  209  795  665   344 #>  [426,]  707  258  326  581  652  460  310  400  249   555 #>  [427,]  584  805  920  952  488  575  377   28  357   393 #>  [428,]  322  316  431  315  237  921  914  642  387   705 #>  [429,]  141  896  308  667  772   71   47   97  809   104 #>  [430,]  898   80  282  166  613   73  807  109   51   713 #>  [431,]  428  554  642  387  833  316  140  295  315   723 #>  [432,]  138   94  474  345  913  786  772  208  519    55 #>  [433,]  711  435  720  862  279   39   82  251  814   352 #>  [434,]  110  558  857  937  810  780  604  205  304   323 #>  [435,]  279  365  433  676  938  625  720  437   39   632 #>  [436,]  929  242  527  371  621   92  556  812  829   314 #>  [437,]  365  524  625  283  664  435  766  372  787   917 #>  [438,]  609   98  260   29  275  953  928  639  332    83 #>  [439,]  139  611  409  158  715   57  617  880  328   299 #>  [440,]  246  999  467  944  946  929  274   43  621    92 #>  [441,]  908  291   15  685  483  594  248  280  597   789 #>  [442,]  788  552  916  178  871  504  781  972  843   694 #>  [443,]  276  782  377  925   66  761  972   16  597   978 #>  [444,]  499  589  980  650  523  866  745   84  728   679 #>  [445,]  285   43  324  290  999  440  467  635  253   246 #>  [446,]   63  336  585  320  538  901  184   59  935   106 #>  [447,]  851  165  459  124  872  473  331  498  618    88 #>  [448,]  382  808  827  848  773  193  507  755  462   670 #>  [449,]  586  491  535  746  632  372  664  759  625    28 #>  [450,]   42  151  700  187  942  104  958  740  727  1000 #>  [451,]  751  121  346  551  200  602  867  777  738   191 #>  [452,]  637  334  704  376  465    1  727  409  930   424 #>  [453,]  471  734  673  843  708  596  769  483  695   788 #>  [454,]  858  262  684  381  337  484  233  310  508   804 #>  [455,]  821  613  725  891  573  140  943  548  315    49 #>  [456,]  294  505  982  991  972  153  697  916   86   782 #>  [457,]  102  959   82  675  510  800  814  191  218   352 #>  [458,]  340  811  289  617  143  933   57  299  278   556 #>  [459,]  872  447  165  851  215  124  630  985  951   597 #>  [460,]  641  555  707  189   41  426  185  833  622   448 #>  [461,]  845  828    2  854  120  559  475   78  190   403 #>  [462,]  827  507  643  172  848  903  501  448  339   163 #>  [463,]  157  327  971  168  896  151  187  958  492   104 #>  [464,]  873  915   50  993  333  541  754  900  383    36 #>  [465,]  704  452  727  104   79  865  942  141  930   334 #>  [466,]  281  298  394  406  477  714  668  537  312    50 #>  [467,]  440   43  246  988  274  944  999  972  978   813 #>  [468,]  140  548  554  431  821  833  185  613  455   295 #>  [469,]  560  807  713   83  781  275  778  871   49   813 #>  [470,]  669  186  719  133  173  176  164  215  264   758 #>  [471,]  453  673  734  596   38  788  530  402  843   594 #>  [472,]  874  484  945  894  396  693  733  802  701   478 #>  [473,]  949  178  357  447  552  976   49  488  851   495 #>  [474,]  883  863  895  631  786  345  325  928  522   803 #>  [475,]  701   78  684  120  478  293  845  733  802   461 #>  [476,]  137  759  735  495  122  525   36  774  535   481 #>  [477,]   47   71  513  298  969  466  714  537  562   895 #>  [478,]  802  733   51  348  651  701  475  208   76   272 #>  [479,]  366  189  662  497  731  636  755  758  759   555 #>  [480,]  236  926  885  341   90  780  414  879  967   287 #>  [481,]  797   36  754  826  977  476  137  759  497   892 #>  [482,]  884  244  251  202  711  433  557  494  532   632 #>  [483,]  594  216  843  964  405  695  280  908  248   552 #>  [484,]  733  396  454  472  945  804  802  894  310   619 #>  [485,]  512  924  869  854   80  559  832    9  630   117 #>  [486,]  970  537  333  296  406   36  159  651  272   735 #>  [487,]  334  727  129  957    1  168  378  342  496   526 #>  [488,]  949  357  586  427  584   28  952  920  805   976 #>  [489,]   80  832  927   73   91  541  601  430  512   120 #>  [490,]   69  953  681  844  438  345   98  260   29   639 #>  [491,]  449  774  535  366  551  586  759  476  746   664 #>  [492,]  151  351  327  226  157  958  234 1000  119   463 #>  [493,]  317  342  563   48  183  779  739  679    4   266 #>  [494,]  884  557  663  482  614  862  219  433  244   742 #>  [495,]  137   36  476  406  316  735  385  387  970   759 #>  [496,]   14  404  122  163  526  774  822  657  400   487 #>  [497,]  636  759  535  479  797  189  833  476   88   662 #>  [498,]  124  785  897  201  174  998  270  248  682   851 #>  [499,]  444  980  361  866  589  979   84  180  271    46 #>  [500,]  976  357   28  606  776  535  322  428  573   160 #>  [501,]   85  507  903  339  827  462  773  800  848   411 #>  [502,]  987  217  204  127  994  670  808  569  662    58 #>  [503,]  608  724  167  119  590  234  309  675  399   792 #>  [504,]  694  863  788  928  871  883  112  803  442   631 #>  [505,]  456  982  294  991  972  697  916  529   43    86 #>  [506,]  673  594  695  769  405  216  483  964  453   210 #>  [507,]  827  462  903  339  848  657  163  501  755   643 #>  [508,]  672  258    3  858  652  581  172    7  310    54 #>  [509,]   96  658  235  886  126  419  413  161  125   757 #>  [510,]  279  352  580  343   39  678  607  220  711   433 #>  [511,]  691  193  750  755  189  555  622   81  758   268 #>  [512,]  832   80  489  927   73  485  430  252  225   854 #>  [513,]   71  308  477   47  806  890  562   55  786   116 #>  [514,]  520   60  850  321   68  628  412  480  254   324 #>  [515,]  556  812  757  960  840  764  830  527  419   340 #>  [516,]  112  325  364  899  928  955  969  332  631   895 #>  [517,]  612  900  383  616  221  169  915  213  547   464 #>  [518,]  810  100  329   20  728  317  679  523  762   745 #>  [519,]  890  241  806  786  522  570   94  308  116   345 #>  [520,]  514  850   60  321  254  480  638  879   68   893 #>  [521,]  892   58  826  618   88  227  306  732  481   350 #>  [522,]  631  895  883  474  519  325  863  112   94   899 #>  [523,]  679  728  100  745   74  329  518  810  762   317 #>  [524,]  283  437  365  917  664  625  247  841  355   950 #>  [525,]  853  476  774  588  122  735  297  744  394   569 #>  [526,]  404  822  114  129  683  496  571  387  868   233 #>  [527,]  812  556  830  436  458  134  914  887  757   515 #>  [528,]  842  897  350  201  230  165  250  291  618   721 #>  [529,]  752  471  594  673  505  248  998  506  453   598 #>  [530,]  136  547  284  788   38  681   29  471  109   442 #>  [531,]  940  359   44  564  268  256  411  653  255   161 #>  [532,]  202  737  742  632   99  350  676  614  731   938 #>  [533,]  839  732  420  149  835  257  292  754  521   873 #>  [534,]  671   41  305  239  918  641  798  460   89   888 #>  [535,]  759  636  449   28  497  357  746  476  976   500 #>  [536,]  710  544  568  905  410  574   20  604  323    87 #>  [537,]  970  486  296  298  651  868  466  406  159   477 #>  [538,]  585  131  446  895  631  320  667  901   47   665 #>  [539,]  593  582  287  626   19  975   56  824  771   717 #>  [540,]  226  876  301  958  415  831  214  595   63   853 #>  [541,]  873  348   76  333  754  464  900  915  732   420 #>  [542,]  801  237  909  914  705  238  750  313  295   642 #>  [543,]  736  979  550  180   24  108  981  860  882   101 #>  [544,]  905  799  710  568  536  922   87  574  111    20 #>  [545,]  961   12  933  206   72  391  278  134  299    57 #>  [546,]  981  550  762  645  660  956  338  745  265    74 #>  [547,]  530  788  807  136  284  713   29  871  442   109 #>  [548,]  288  891  468  140  801  263  295  821  315   914 #>  [549,]  867  595  301  415  957  700  958  168  487   496 #>  [550,]  981  882  546  543  265   87  338  766   74   905 #>  [551,]  881  451  602  346  330  183  751  903  491   156 #>  [552,]  178  442  781  843   66  483  916  908   16   243 #>  [553,]  125  940  161  624  130  172  531  793  939   413 #>  [554,]  140  272  431  295  468  387  315  316  293   970 #>  [555,]  189  460  833  707  641  622  755  479  400   193 #>  [556,]  812  527  515  830  757  458  436  340  811   753 #>  [557,]  614  494  731  742  862  814   85  632  800   662 #>  [558,]  110  434  857  810  518  395  100  604  205    20 #>  [559,]  854    9   18  828  888  936  403  869  548   634 #>  [560,]  962  242  578  573   83   16  469  188  978    92 #>  [561,]  935  355  247  841  170   62  633  283  524   917 #>  [562,]  308  116  806  890  513  969   71  866  477   332 #>  [563,]  950  493  177   48  779  831    4  698  317   739 #>  [564,]  411  531   85  359  268  339  798  653  940   688 #>  [565,]  390   67  816  179  128  107  770  966  600   375 #>  [566,]  603  715  611  974  328  937  439  289  278   747 #>  [567,]  585  600  375  756  320  131  708  538  446   522 #>  [568,]  410  905  574  222  544   87  265  536  329   607 #>  [569,]  588  297  875  525  774  491  608  987  351   366 #>  [570,]  519  716  889  131  890  522   94  665  425   344 #>  [571,]  921  387  404  852  961  313  723  277  316   642 #>  [572,]  906  182   79  945  930  715  894  465  704   659 #>  [573,]  821  349  560  578   66  315   49   16  455   178 #>  [574,]  568  410  323   20  228  222  905  544  329   536 #>  [575,]  741    5  162   13  427   30  789  393  584   173 #>  [576,]  108  718  697  294  982  991  147  979  860   188 #>  [577,]  149  834  230  826  835  128  250  666  842   306 #>  [578,]  397  761  712   66  560  925  943  725  573    92 #>  [579,]   72  206  829  391  458  545  223  527  134   887 #>  [580,]  343  222  607  410  510  678  265  352  338   568 #>  [581,]  418  652  258  369  965  310   54  426  957   848 #>  [582,]  539  626  352  256  593  771  118  877  653    19 #>  [583,]  834  577  250  528  842  149  230  227  791   666 #>  [584,]  427   28   13  746  805  776  820  488  357   575 #>  [585,]  567  538  131  320  446   63  600  665  895   631 #>  [586,]  449   28  488  664  744  949  535  372  625   746 #>  [587,]  346  602  183  751  228  881  551  200  627   317 #>  [588,]  569  351  608  525  774  853  122  743  297   119 #>  [589,]  980  866  206   72  223  444  954  650  689   271 #>  [590,]  792  167  777  675   26  503  191  867   32   595 #>  [591,]  218  510  711  433  279  244  352  457  678   435 #>  [592,]  815  738    1  200  637  751   33  346  643   587 #>  [593,]  287   19  539  975  824  304  771  885   56    90 #>  [594,]  483  248  673  506  695  441  998  405  769   964 #>  [595,]  867  301  549  774  415   48  563  451  346   493 #>  [596,]   38  453  998  471  785  769  843  816  248   169 #>  [597,]  243  925   66  781  443  789  629  552  674   124 #>  [598,]  270  685  248  752  998  441  951  498  124   597 #>  [599,]  634  423  907  936  943  725  690  749  164   133 #>  [600,]  567  708   62  841  320  199  585  756  633   375 #>  [601,]  185  146  249  828  707  293  120  468  272   326 #>  [602,]  881  627  228  587  610  346  551  751  451   183 #>  [603,]  566  974  715  328  611   21  855  605  747   558 #>  [604,]   33   20  323  518  574  558  784  710  110   637 #>  [605,]  747  368  192  376  195  424   84  680  659   328 #>  [606,]  741  911  500  133  712   30  719  976  347   322 #>  [607,]  343  222  259  392  580  410  882  678  338   220 #>  [608,]  853  588  503   32  724  301  569  777  525   595 #>  [609,]  438   98  260  275   29  928  713  213  296   871 #>  [610,]  627  362  881  602   19  228   45  902  587   771 #>  [611,]  289  278   57  328  566  439  391  974  617   299 #>  [612,]  517  616  383  900  169  128  873  993  221   107 #>  [613,]  891  282  455  263  821  140  468  315  430   548 #>  [614,]  557  731  862  632  742  814  449  219  662   720 #>  [615,]  714  349  312   70  277  385   40  866  921   307 #>  [616,]  383  612  517  915  128  179   76  873  900   464 #>  [617,]  299   57  143  941  458  340  289  852  278   307 #>  [618,]   88  350  892   99  826  521  306  165  481   297 #>  [619,]  326   91  763  420  146  310  733  249  804   802 #>  [620,]  311  196  235  509  337  658  154   96  454   858 #>  [621,]  371  929  968   92  436  677  765  254  181   912 #>  [622,]  144  400  833  555   81  750    3  909  642   707 #>  [623,]  924  363  951  674  630  215   10  629  117   459 #>  [624,]  130  161  687  939  750  367  909  886   81   837 #>  [625,]  664  365  372  787  720  437  586  632  449   156 #>  [626,]  539  582  287  197  717  877   90  118  593   997 #>  [627,]  610  881  362  602  156  820  992  986  183   587 #>  [628,]  341  412  388  729   68  253  648  324  870   829 #>  [629,]  649  749  211  597  674  768  363  925   10   397 #>  [630,]  985  459  215  934  924   18  623    9  872   152 #>  [631,]  895  883  112  863  522  325  474  899  694   504 #>  [632,]  746   13  449  372  992  625  720  676  664   586 #>  [633,]  841  917  320  101  302  935   24  355  561   210 #>  [634,]  599  943  725  936  907  423  690  347  401   548 #>  [635,]  946  999  318  944  246  286  440   93  356    69 #>  [636,]  497  759  535  479  976  476  357  500  189   731 #>  [637,]  376  424  452  334   33  342  655  747    1   129 #>  [638,]  207  254  374  379  274  649  748  749  211   181 #>  [639,]   55  786  332  116  345  438  806  513   98   890 #>  [640,]  319  660  717  626  645  539  686  546  656   287 #>  [641,]   41  460  555  305  189  888  185  707  833    18 #>  [642,]  723  313   81  909  705  431  750  428  367   400 #>  [643,]  462  507  738  848  200  957  751  815  592   827 #>  [644,]  171  656  948  203  775  210  910  836  931   825 #>  [645,]  956  546  919  686  981  870  767  550  543   660 #>  [646,]  253    8  989  648  499  956   23  361   46   729 #>  [647,]  730  303  669  470  142  152  215  176  186   360 #>  [648,]  271  240  253  223  904  677  388  829  148   729 #>  [649,]  211  629  374  274  988  768  749  198  132   207 #>  [650,]  824  444  745   56  589  147  860   72  703   206 #>  [651,]  348  537   76  333  486  208  296  970  260   915 #>  [652,]  581  258  418  369   54  426  965  848  310   670 #>  [653,]  256  359  155  224  264  268  688   45  416   411 #>  [654,]  417  685  291  270  730  528  598   15  441   897 #>  [655,]  880  129  409  424  139  299   57  278  342   961 #>  [656,]  203  644  825  717  910   53  686  836  319   948 #>  [657,]  163   14  875  366  848  755  400  507  496   330 #>  [658,]  419  126  764  337  886  960   96  509  757   515 #>  [659,]  192  376  605  452  747  637   33  424  710   566 #>  [660,]  335  546  338  410  580  568  640  981  762   645 #>  [661,]   38  530  517  953  474  345  522  284   94   135 #>  [662,]  731  479   58  742  497  127  892  636  758   366 #>  [663,]  219  494  884  557  482  614   52  532  862   742 #>  [664,]  625  365  372  787  720  586  437  449  524   632 #>  [665,]  899  955  344  538  585  101  979  320  180   631 #>  [666,]  973  835  119  588  577  149  373  569  297   250 #>  [667,]  901   97  538  184  446   71   47  889  344   131 #>  [668,]  394  744  831  698   70  281  385  312  466   177 #>  [669,]  470  133  719  186  215  164  985  691  758   142 #>  [670,]  848  875  743  987  657  652  448  382 1000   808 #>  [671,]   41  534  305  854  828  641   18  403  559   888 #>  [672,]  508   89    7  760  858  269  763  454  793   258 #>  [673,]  506  453  594  471  769  483  216  695  734   405 #>  [674,]  363   10  243  943  725  423  924  597  925   629 #>  [675,]  167  792   26  590  191  421  777  503   22   787 #>  [676,]  938  358  737  435  372  632  365  202  251   625 #>  [677,]  968  388  904  648  271  621   92  962  148   829 #>  [678,]  392  259  607  338  580  220  343  882  510   410 #>  [679,]  523  100  728  317  810  518   74  745  329   212 #>  [680,]  266  195    4  424  747  342  376  184  317   378 #>  [681,]   29  953  284  109  136   69  260   98  438   530 #>  [682,]  174  706  117  252  898  785  124  498  166   851 #>  [683,]  233  245  526  960  295  114  404  299  822   852 #>  [684,]   78  262  845  381  840  692  475  701  693   384 #>  [685,]  441   15  598  270  291  248  594  752  908   597 #>  [686,]  717  870   53  709  203  824  860  645  825   956 #>  [687,]  624  130  367  362  161  902  750  909  939   705 #>  [688,]  370   82  411  256  156  903  339  800  992   653 #>  [689,]  923  231   83  364  904   40  941  962  389   148 #>  [690,]  423  749  599  634  943  254  374  397  990   929 #>  [691,]  511  758  189  164  133  750  555  606  719   186 #>  [692,]  154  845  684  840   78  262  150  753   11   693 #>  [693,]  150  701  874  262  684  692  196  384  945   407 #>  [694,]  504  863  803  788  883  871  708  312  631    50 #>  [695,]  405  964  769  483  594  963  506  673  216   843 #>  [696,]  789  215    5  176  872  719  575  133  173   597 #>  [697,]  972  982  916  782   16  978  991  188  294   276 #>  [698,]  177  831   70  668  779  950  744  563  101   302 #>  [699,]  358  561   62  524  676  247  355  283  841   938 #>  [700,]  942  727  549  957  104  415  487  378  958   168 #>  [701,]  475  684   78  478  693  845  874  115  150   692 #>  [702,]  847  157  179  913  463  896  131  429  492   226 #>  [703,]  147  212   56  860  718  805  160  766  188   779 #>  [704,]  865  158  452  465  334  930  409  141  727   114 #>  [705,]  313  909  367  723  237  642  322  542  750   428 #>  [706,]  252  682  174  898  117  331  201  993  785   498 #>  [707,]  249  185  426  797  146  833  555  460  601   977 #>  [708,]  734  803  963  694  600  453  504  756  216   843 #>  [709,]  717  686  722  849   53  197  870  273  203   825 #>  [710,]  544  536   20  905  799  604  386   33  192   605 #>  [711,]  433  244  251  435  482  279  352  510   39    82 #>  [712,]  397  578  761  401  393   30  606  181  725   347 #>  [713,]  871   49  275  807  296   29   50  547  469   788 #>  [714,]  615  312   70  349  466  477  969  385  668   307 #>  [715,]  566  603  439  611  974  328   21  384  289   747 #>  [716,]  408  665  570  567  425  522  585  375  899   209 #>  [717,]  686  709  203  825  656  626  197  870  849   539 #>  [718,]  147  576  860  188  703  108  978  805   16   920 #>  [719,]  133  164  186  470  606  162  741  669  215   173 #>  [720,]  787  814  862  625  664  372  365  433  435   800 #>  [721,]  996  963  964   31  230  405  949  488  737   842 #>  [722,]  849  197  709  825  132  997  649  910  153   717 #>  [723,]  642  313   81  705  909  367  571  750  404   330 #>  [724,]  814  503   32  862  608  777  800  191  614   720 #>  [725,]  943  455  578  397  634  712  674  599  925   821 #>  [726,]   93  166  109  869    2  282  225  430  469   117 #>  [727,]  487  942  700  334  378  104  452  465  415   168 #>  [728,]  523  745  100  329  762   74  679  518  810   975 #>  [729,]  223  240  954  648   25  589  579  829  253   261 #>  [730,]  215  696  623  647  176  132   15  629  872   789 #>  [731,]  758  662  479  742  636  366  535  497  614   746 #>  [732,]  754  873  481  521  993  839  420  533  541   464 #>  [733,]  802  396  478  619  804  475   91  484  310   293 #>  [734,]  708  453  422  402  471  756  694  673  504   788 #>  [735,]  122   36  406  137  476  159  394  977  495   774 #>  [736,]  543   24  931  979  209   77  180  108  633   101 #>  [737,]  358  676  938  488  532  721  202  908  949   632 #>  [738,]  200  751  346  815  451  784  592  228  867   643 #>  [739,]  212   74  779  766  986   48  265  329  820    87 #>  [740,]   79  942  465  450  104  700   42  784  727   995 #>  [741,]   30  575  911  162  606  416   13  719  393   224 #>  [742,]  731  662  532  142  758  614  985  557  127   470 #>  [743,] 1000  234  670  351  588  187  987  875  569   848 #>  [744,]  668  831  394  698  586  876  398  385  950    70 #>  [745,]  728  762  523  100   74  329  679  975  810   650 #>  [746,]   13  632  992   28  584  449  535  776  586   357 #>  [747,]  424  376  195  605  680  655  637  328  880   409 #>  [748,]  638  197  379  626  997  877   37  709  823   480 #>  [749,]  423  690  629  211  374  649  397  599  274   943 #>  [750,]  909  367   81  705  642  542  313  723  330   687 #>  [751,]  346  200  738  451  587  228  602  551  867   121 #>  [752,]  529  598  270  685  248  594  998  505  441   768 #>  [753,]  840   11  556  143  340  314  812  263  288   845 #>  [754,]  333  732  420  873  481  541  797  464   36   486 #>  [755,]  366  163  400  330   81  657  339   14  479   189 #>  [756,]  375  567  734  600  708  453  422  522  390   816 #>  [757,]  515  830  556  812  126  811  419  527  458   886 #>  [758,]  731  691  479  189  719  662  636  133  411   742 #>  [759,]  636  535  497  476  137  449  495  481  949   479 #>  [760,]  793   89    7  193  172  672  382  448  269   508 #>  [761,]  397  211  276  978  578  181  782  443  712   188 #>  [762,]  329  728  975  745   74  100  518  523  981    19 #>  [763,]  619  120   91  326  601  146  249  733  426   293 #>  [764,]  960  245  419  515  190  801  542  658  144   238 #>  [765,]  912  968  181  134  621  829  371   92  677   824 #>  [766,]  212  265  739   74  860  703  779  820   56    87 #>  [767,]  947  981  395   23  261   84  728  546  745   361 #>  [768,]  649  629  988  211  153  456   15  274  598   198 #>  [769,]  695  673  506  816  453  966  594  405  596   964 #>  [770,]  179   64  107   94  131  432  390  567  522   375 #>  [771,]  902  885  362  416  877  610  593  911  236   304 #>  [772,]   55  138  513  806  432  308  913  890  809   429 #>  [773,]  382  808   85  448  501  827  462  507  848   172 #>  [774,]  122  476  491  735  496  525  595  301  394   588 #>  [775,]  836  644  938  251  358   15  948  910  676   202 #>  [776,]   28  160  500  584  277  385  322  820  805   535 #>  [777,]  191   32  800  451  787  121  814  590  156   167 #>  [778,]  781  243  469  972  597  467   10  674  442   166 #>  [779,]  177  739  563  698  212  950  493   48   70   317 #>  [780,]  967  857  878  926  414  304  205  434  341   480 #>  [781,]  243  778  552  807   66  597  925  124  442   178 #>  [782,]  276  443  978   16  972  188  697  916  761   982 #>  [783,]  656  203  836  319  717  640  709  644  775   722 #>  [784,]  738   33  846  200  815  604  592  751  323   574 #>  [785,]  201  498  174  897  998  682  843  124  248   547 #>  [786,]  345  639  332  325  474  116  890   98   55   513 #>  [787,]  720  191  625  664  777   32  365  156   39   814 #>  [788,]  442  504  871  694  863  547  843  803  713    50 #>  [789,]  696  575    5  597   15  872  925  908  377   441 #>  [790,]  873  541   76  292  616  383  348  420  533   333 #>  [791,]  966  769  695  405  996  964  506   62  963   721 #>  [792,]   26  590  675   22  167  421  922  503  191   777 #>  [793,]  760  172   89    7  193  448  553  382  827   773 #>  [794,]   46   27  516  135  364  899  402  112  955   499 #>  [795,]  175   95  368   84  386  605  361  344   23   947 #>  [796,]   11  515  753  812  556  840  314  154   96   830 #>  [797,]  977  707  481  497  249  833  137  754  431   636 #>  [798,]  918  303  669  305  564  691  758  142  470   742 #>  [799,]  386  111  106  983  544   59  905  184    4   336 #>  [800,]  814   32  777  191  156   82  720  787  862   370 #>  [801,]  288  542  295  914  245  237  238  548  764   812 #>  [802,]  733  478   91  396  619  348  475  804  651   701 #>  [803,]  694  863  883  708  504   50  895  281  631   788 #>  [804,]  310  114  965  396  868  733  293  619  369   526 #>  [805,]  920  427  703  584  188  952  147  160   28   776 #>  [806,]  890  308  116  562  513  519  639  786   55   241 #>  [807,]   49  713  166  781  547  871  469  898  174   243 #>  [808,]  382  773  448  217   85  670  848  987  502   827 #>  [809,]  308  806  894  772   21  890  439  141  513    55 #>  [810,]  100  518  679  317  728  523  329  745  762   558 #>  [811,]  289  340  458  757  556  143  617  515  611   579 #>  [812,]  556  527  515  830  757  801  436  288  914   458 #>  [813,]   83  904  231  364  689  560  389  271  148   469 #>  [814,]  862  800  720   32  724  787  191  777  664   614 #>  [815,]  592  738  200  751  587  346   33  784  643   228 #>  [816,]  769  390  596  453  966  565   38  695  673   471 #>  [817,]  748  709  638  520   68  207  198  480  722   823 #>  [818,]   69  726   93  225  635  681  109    2  869   490 #>  [819,]  113  259  232  932  678  421  338  410  392   335 #>  [820,]  584  986  212  739  627  776  992   13   56    28 #>  [821,]  455  315  573  613  891  140  548  468   49   428 #>  [822,]  404  526  400   14    3  233  837  723  163   496 #>  [823,]  197  626  118  997  722  836    5  264  132   360 #>  [824,]   56  650   90  870  860  912  885  593  287   765 #>  [825,]  910  203  377  849  717  153  656   53  860   427 #>  [826,]  892  306  618  521  149   99  297  481  350    88 #>  [827,]  462  507  903  339  448  172  755  501  848   193 #>  [828,]  854  601  185    9  559   18  888  468  146   461 #>  [829,]  579   72  206  223  765  436  134  648  677   962 #>  [830,]  527  556  812  757  515  436  205  458  579   134 #>  [831,]  698  668  744  177  950  563  876  394  779   301 #>  [832,]  927   80  512  489   73  252  430  898  221   109 #>  [833,]  189  431  555  707  622  400  797  642  497   468 #>  [834,]  250  577  842  583  666  528  306  149  230   826 #>  [835,]  149  666  351  577  588  533  973  525  373   826 #>  [836,]  910  775  203  722  825  656   15  251  938   197 #>  [837,]    3  233  822  130    1  683   81  624  937   400 #>  [838,]  209   65   24  386   95  983  425  106  344   795 #>  [839,]  420  533  732   58  521  326  797  249  754   481 #>  [840,]  845  753  515   78  340  143  190  960   11   556 #>  [841,]  633  935  561  917  320  355  524   62  600   302 #>  [842,]  528  230  350  721  250  897   99  996  618   826 #>  [843,]  483  552  442  785  788  453  178  963  248   695 #>  [844,]  389  267  407  490  356  332  438  639  115   286 #>  [845,]  840   78  684  692  154  753  190  115   11   461 #>  [846,]  784  738   17  200  102  751  451  643  815   228 #>  [847,]  889  131  702  446  199   63  667  585  214   336 #>  [848,]  670  657  507  875  448  163  462  827   14   643 #>  [849,]  722  997  197  379  825  153  211  393  377   709 #>  [850,]  254  520  514  207   68  371  638  374  621   690 #>  [851,]  447  165  331  124  459  174  498  934  201   473 #>  [852,]  307  299  571  921   40  617  887  387   57   941 #>  [853,]  608  525  876   75  744  373  399  301  588   664 #>  [854,]  828  559    9   18  888  185  601  461   80   403 #>  [855,]   25  974  267  611  289  811  954  328  729   603 #>  [856,]  135  529  471  505  402  422  673  453  734    38 #>  [857,]  434  110  558  780  205  304  939  967  810    12 #>  [858,]  337  454  233  508    3  837  965  658  381   419 #>  [859,]  300   54  187  450  643 1000  700  652  957   418 #>  [860,]   56  718  703  147  212  766  824  650   74   576 #>  [861,]  413  236  879  926  877  893    6  990  255    37 #>  [862,]  814  720  724  614  433  800  787  372   32   557 #>  [863,]  883  504  694  928  474  803  871  631  325   788 #>  [864,]  341  395  956  767  645  412  261  628  947   287 #>  [865,]  704  158  114  334  465  452  409  930  727   139 #>  [866,]  980  589  615  444  969  499  714  364  899   562 #>  [867,]  595  549  451  751  346  301  200  738  415    48 #>  [868,]  537  970  139  159  114  526  486  852  158   404 #>  [869,]   93  726    2  674  318  166  559  924  282   363 #>  [870,]  686   90  824  287  717  885  650  956  709   593 #>  [871,]  713  788  275   49   50  504  863  928  296   694 #>  [872,]  459  215  447  696  789  165  597  291  851   124 #>  [873,]  464  541  754  732  993  333  900  915  383    76 #>  [874,]  693  407  701  894  384  478  472  396  262   733 #>  [875,]  657  670  848  163   14  569  366  977  426   479 #>  [876,]  540  398  394  301  831  744  226  668  853   199 #>  [877,]  236  771  861  926  885  879  626  893  997   379 #>  [878,]  967  926  780  304  414  939  857  413  236   771 #>  [879,]  236  893  926  990  885  861  877  771   90   830 #>  [880,]  655   57  299  278  409  129  961  139  933   391 #>  [881,]  602  627  610  551  362  587  183  330  346   156 #>  [882,]  338  550  392  607  220  259  265  222  678   343 #>  [883,]  895  631  863  474  803  325  504  694  928   112 #>  [884,]  482  494  244  557  711  663  742  251  303   202 #>  [885,]   90  236  771  879  287  824  593  877  926   893 #>  [886,]  161  757  658  126  130  764  624  419  687   830 #>  [887,]   40  307  206   72  458  852  941  962  527   545 #>  [888,]   18    9  934  305  185  468  854  828  559   189 #>  [889,]  847  131  446  667  901  585  336   63  538   570 #>  [890,]  806  519  308  562  116  513  786  241  639   332 #>  [891,]  263  613  288  548  455  821  242  315  140   914 #>  [892,]  306  826  618   58  521   99  297   88  350   481 #>  [893,]  990  879  236  347  379  885  861  254  181   912 #>  [894,]  396  865  809  704  874  158  439  384  114   141 #>  [895,]  631  883  863  112  474  522  538  325  803   899 #>  [896,]  141  104  429  465  727  865  704  958  463   995 #>  [897,]  201  498  785  998  528  291  165  248  842   124 #>  [898,]  252  430  166  682  174  331  807  109   80    73 #>  [899,]  955  112  516  665  631  895  325  364  344   969 #>  [900,]  221  517  213  915  464  927  993  873  541   612 #>  [901,]  667   97  184  446  983  106  344  538  336    63 #>  [902,]  771  687  362  134  705  367   12  313  610   961 #>  [903,]  339  507  827  551  330  881  501  411  755   602 #>  [904,]  271  231  962  677  648  813  689  148  364    83 #>  [905,]  544   87  568  799  410  329  536  922  574    20 #>  [906,]   79  182  930  572  465  704  865  452  894   141 #>  [907,]  599  936  634  164  690  423  990   37  360   152 #>  [908,]  280  441  483  952  552  216  291  377  948   964 #>  [909,]  750  705  367  313  542  642   81  723  237   687 #>  [910,]  825  377  203  427  836  849  575  393  722   197 #>  [911,]  416  741   30   45  606  162  362  367  347   771 #>  [912,]  765  181  968  134   92  824  393  621  371   962 #>  [913,]  298  651   47  513  432  477   71  537  466    76 #>  [914,]  237  315  542  401  801  288  428  322  295   705 #>  [915,]  464  213  383   50   76  296  900  333  713   260 #>  [916,]  972  697   16  442  782  991  982  552  276   978 #>  [917,]  302  633  841  524  210  101  283  698  952   320 #>  [918,]  798  239  303  305  534  142  103  641   41    85 #>  [919,]   65  645  989  956  947   23  546  981  767   543 #>  [920,]  805  427  952  188   16  276  377  443  782    66 #>  [921,]  571  316  387  277  852  428  307  322   40   315 #>  [922,]  421   26  111  544  905  792  799  607  568    59 #>  [923,]  689  941  231  267   40  389  887   83  307   148 #>  [924,]  623  363  674  630  951  936  423  599  869   152 #>  [925,]   66  597  443  397  243  578  276  761  781   782 #>  [926,]  236  879  878  413  861  967  780  877  885   771 #>  [927,]  832  900   80  221  489  252   73  430  898   541 #>  [928,]  325  863   98  504  112  871  275  969  609   883 #>  [929,]   92  621  371  436  968  242  677  440  246   578 #>  [930,]    1  452  704  465  865   79  906  158  965   727 #>  [931,]   77  736  422  210   24  108  402  979  543   633 #>  [932,]  392  338  259  678  882  819  319  170  220   607 #>  [933,]   12  961  545  278  299   57  458  391  571   880 #>  [934,]  331   88   73  888    9  851   18  165  447   630 #>  [935,]  561  841  355   63  247  633   59  336  320   446 #>  [936,]  907  599  634  152  559  423  924   18  403   943 #>  [937,]  110  278    1  880  566   57  637  409  837   655 #>  [938,]  676  358  737  251  435  202  632  365  372   910 #>  [939,]  624  130  687  857  304  161  878  886  902   362 #>  [940,]  531   44  553  125   17  624  903  564  161   130 #>  [941,]  923  617  143   40  307  887  689  267  340   458 #>  [942,]  700  727  104  378  465   42  415  452  487   334 #>  [943,]  725  423  578  397  634  674  599  455  712   690 #>  [944,]  946  246  440  467   10  999  374  318  274   988 #>  [945,]  196  693  454  262  484  472  384  894  874   858 #>  [946,]  944  246  440  374  467  318   10  999  274   635 #>  [947,]   23  767  361   84  261   95  981  444  956   395 #>  [948,]  280  210  216  952  908  644  405  964   77   358 #>  [949,]  488  357  473  586  535  976  759  476  721    28 #>  [950,]  563  831  177  698  779   48  739  493   59   744 #>  [951,]  117  124  623  363  498  851  459  682  924   174 #>  [952,]  280  920  427  805  302  216  377  948  488   908 #>  [953,]  345  260  681   29   98  438  213  609  490   786 #>  [954,]  328  223  729  589  240  391  579  206   72   866 #>  [955,]  899  112  665  312  516  180  101  631   70   979 #>  [956,]  645  546  870  981  686  767  919  646  864   947 #>  [957,]  418  487  965  549  581  168  369   54  643   700 #>  [958,]  415  226  540  301  549  214  104  595   42   876 #>  [959,]  102  457  335  580  352  510  846  410  574    82 #>  [960,]  764  245  419  515  190  801  683  381  757   295 #>  [961,]  545   12  933  880  278  571  299  391   57   313 #>  [962,]  904  560  271  677  887  968  689  188  147    40 #>  [963,]  996  721  964   31  405  708  695  230  843   216 #>  [964,]  405  216  695  963  483  721  280  996  210   908 #>  [965,]  369  418  310  581  258  957  233  804  114   652 #>  [966,]  791  769  695   62  405  996  964  816  963   506 #>  [967,]  780  878  414  926  857  939  480  236  304   413 #>  [968,]   92  677  621  181  929  371  765  912  978   962 #>  [969,]  477  112  714  928  364  325  332  516  307   116 #>  [970,]  537  486  296  387  316  868  406  159  495   272 #>  [971,]  327  463  369  187  168  418  157  581  965   652 #>  [972,]  916  697  782  982   16  978  276  443  991   442 #>  [973,]  666  119  373  835  351  588  234  399   75   492 #>  [974,]  855  603  611  328  566  289  954   25  715   391 #>  [975,]   19  762   74  329  745  265  728  593  100   739 #>  [976,]  500  357   28  535  636  949  606  776  473   488 #>  [977,]  797  735  481  137  122   36  159  707  875   486 #>  [978,]  782  188  761  276  697   16  972  153  968   982 #>  [979,]  180  108  101  543   24  736  955  499  576   665 #>  [980,]  589  866  499  271  444  364  223  904  689   648 #>  [981,]  546  550  762  728  745  767   74   87  329   523 #>  [982,]  697  972  294  782  916  456  991  153  978   576 #>  [983,]  106  386    4  799  901  184  344   59  680   266 #>  [984,]  132  649  749  198  629  730  374   37  423   638 #>  [985,]  630  142  215  459   88  669  742  934  872   165 #>  [986,]  121  739  156  820  627   48   39  183  265   222 #>  [987,]  502  217  670  569  204  875  127  743  808   848 #>  [988,]  274  153  211  467  649   43  374  982  978   440 #>  [989,]  646   23  919   65  947    8  956  645  361   261 #>  [990,]  893  347  879   30  401  379  236  690  712   238 #>  [991,]  916  697  402  982  972  294  422  576  108   456 #>  [992,]   13  746  156  627  632  820  584  625   28   881 #>  [993,]  464  873  331  900  252  732  898  169   73   706 #>  [994,]  127  204  502   58  306  892  987  662  227   250 #>  [995,]   97  104   42  214  896  415  958  667  942   378 #>  [996,]   31  721  963  230  964  405  695   75  842   949 #>  [997,]  379  197  849   30  393  162  181    5  722   741 #>  [998,]  248  270  498  785  897  594  596  201  843   291 #>  [999,]  440  286  246  356  318  467  813  944  148   929 #> [1000,]  743  234  187  351  670  492  327  588  151   549 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.58122259 0.6198485 0.6216532 0.6346727 0.6547075 0.6553944 0.6650696 #>    [2,] 0.45711792 0.5780538 0.6160875 0.7792763 0.7931624 0.8141851 0.8345657 #>    [3,] 0.34116322 0.4820953 0.5639050 0.6887887 0.7041329 0.7717031 0.7829594 #>    [4,] 0.38613312 0.4328555 0.4495399 0.4665793 0.5140636 0.5303210 0.5534697 #>    [5,] 0.53951455 0.5465346 0.5612559 0.5735809 0.5769004 0.6301520 0.6808308 #>    [6,] 0.88956700 0.9315227 1.1086081 1.2244674 1.2816359 1.2915183 1.3039062 #>    [7,] 0.53860366 0.6386735 0.6807836 0.7478630 0.8846742 0.9392682 0.9565446 #>    [8,] 0.87030555 0.9202114 0.9550804 1.0233239 1.0570121 1.1589675 1.2551497 #>    [9,] 0.30079205 0.4614939 0.4809154 0.4960071 0.6995973 0.7060196 0.7673875 #>   [10,] 0.57929627 0.5898203 0.7325672 0.7817214 0.8458088 0.8462246 0.9207065 #>   [11,] 0.32626314 0.5169629 0.6687036 0.7180911 0.7544464 0.7991819 0.7998913 #>   [12,] 0.25580824 0.2635220 0.2788289 0.4396953 0.4531390 0.5294129 0.5354843 #>   [13,] 0.35992733 0.3781437 0.4843287 0.5389210 0.5842028 0.5900303 0.6446380 #>   [14,] 0.13734837 0.3294818 0.3770895 0.4250634 0.5161321 0.5695753 0.5821764 #>   [15,] 0.57284280 0.6884159 0.6893935 0.8190073 0.9365149 0.9446844 0.9507434 #>   [16,] 0.30544971 0.3385177 0.4466606 0.4564590 0.4755262 0.4786792 0.4793757 #>   [17,] 0.77144659 0.9493879 0.9929059 1.0206180 1.0365518 1.0431948 1.0532949 #>   [18,] 0.30079205 0.3314055 0.5132506 0.5507866 0.7088456 0.7648920 0.7979437 #>   [19,] 0.27764546 0.5470486 0.5989966 0.6015800 0.6148635 0.6873387 0.6920324 #>   [20,] 0.40493370 0.4137836 0.5421725 0.5459484 0.5993895 0.6503612 0.6800513 #>   [21,] 0.73581514 0.8646242 0.9388800 0.9675018 1.0191378 1.0668062 1.0686644 #>   [22,] 0.53658330 0.7251595 0.8150292 0.8460439 0.9252681 1.0003095 1.0020576 #>   [23,] 0.30976908 0.4785478 0.7133015 0.7784859 0.7847713 0.9172746 0.9733667 #>   [24,] 0.45635575 0.5290964 0.6072869 0.6351735 0.6735354 0.6950877 0.7114892 #>   [25,] 0.41490636 0.7306585 0.7726125 0.8259298 0.8282386 0.8909266 0.8966954 #>   [26,] 0.32819920 0.6472404 0.6669286 0.7078225 0.7251595 0.7327431 0.7403661 #>   [27,] 0.60897156 0.7588781 0.8090711 0.8255334 0.9293289 0.9534562 0.9589873 #>   [28,] 0.19509103 0.4209269 0.4342033 0.4677198 0.4735924 0.4769595 0.4949582 #>   [29,] 0.36017859 0.4375565 0.4751895 0.5459196 0.5881166 0.6088132 0.6244786 #>   [30,] 0.33606504 0.3752403 0.4643884 0.5323467 0.5780706 0.5812901 0.5875768 #>   [31,] 0.29828307 0.5095570 0.5334158 0.5598878 0.7034203 0.7785356 0.7917229 #>   [32,] 0.21291078 0.2878220 0.4773359 0.5131704 0.5776940 0.6715721 0.6740976 #>   [33,] 0.38544054 0.5459484 0.5940967 0.7054005 0.7502714 0.7850111 0.8105313 #>   [34,] 0.53898791 0.6045596 0.6116781 0.6549830 0.6862370 0.7008572 0.7434693 #>   [35,] 0.92021139 1.4791708 1.6514463 1.7292886 1.7609894 1.9261175 1.9437807 #>   [36,] 0.25724736 0.3888182 0.3988154 0.4398644 0.5397655 0.5486134 0.5558487 #>   [37,] 0.92525451 0.9605041 0.9739455 1.0270869 1.0278454 1.0476516 1.1282117 #>   [38,] 0.67554068 0.6965451 0.8360395 0.8532582 0.9201110 0.9794260 1.0460264 #>   [39,] 0.35249392 0.5493612 0.5905615 0.6026190 0.6213144 0.6321548 0.6591908 #>   [40,] 0.19687010 0.3069157 0.4714819 0.5529627 0.5530965 0.5564460 0.5776136 #>   [41,] 0.39338453 0.4820159 0.7040211 0.8410932 0.8551712 0.8841107 0.9302940 #>   [42,] 0.57656888 0.7177820 0.7361139 0.8140530 0.8652673 0.8921828 0.8988093 #>   [43,] 0.54698196 0.6702708 0.7142830 0.7473962 0.8176653 0.8351385 0.8375101 #>   [44,] 0.72059349 0.7258054 0.8143724 0.8343501 0.9493879 0.9932366 1.0140758 #>   [45,] 0.39024789 0.4738184 0.5095355 0.5190117 0.5248002 0.5884661 0.6484368 #>   [46,] 0.44718449 0.7291382 0.8074190 0.8273954 0.8453518 0.8769855 0.8773487 #>   [47,] 0.14323499 0.3428474 0.5254017 0.6470193 0.7156971 0.7223927 0.7456151 #>   [48,] 0.32881803 0.4378748 0.4383179 0.5008861 0.5278338 0.5294242 0.5625936 #>   [49,] 0.39273412 0.4428367 0.4505095 0.5161738 0.5518205 0.5695717 0.6001123 #>   [50,] 0.47199068 0.5085270 0.5518205 0.5674798 0.5684654 0.5856549 0.5899699 #>   [51,] 0.57821631 0.6199020 0.6945753 0.7087092 0.7389029 0.7559860 0.7838870 #>   [52,] 1.14190706 1.4835410 1.5045755 1.5769197 1.5802955 1.6196879 1.6416578 #>   [53,] 0.42771037 0.6965567 0.6995245 0.6997384 0.7486314 0.7696537 0.8110745 #>   [54,] 0.61527824 0.6194978 0.6403524 0.6510626 0.7278877 0.7741179 0.7962220 #>   [55,] 0.47041032 0.6597326 0.7155144 0.7263146 0.8185147 0.8297356 0.8564227 #>   [56,] 0.45927852 0.4601007 0.4747000 0.4904289 0.6178190 0.6215297 0.6356244 #>   [57,] 0.17147036 0.1801864 0.3868366 0.4046266 0.4221751 0.4506516 0.5098558 #>   [58,] 0.44643011 0.5084009 0.6538958 0.6569681 0.7073255 0.7549930 0.7566872 #>   [59,] 0.39772349 0.4236074 0.4959001 0.5065642 0.5877064 0.5928053 0.6309267 #>   [60,] 0.88866175 1.0511741 1.1299711 1.4769868 1.5024156 1.6177037 1.6602937 #>   [61,] 1.17774591 1.3273590 1.5542680 1.7637929 1.9294484 1.9892048 2.0809715 #>   [62,] 0.65574547 0.6949814 0.6953869 0.8849745 0.9038573 0.9171305 1.0393365 #>   [63,] 0.29494627 0.4373590 0.5065642 0.5415121 0.5445121 0.6215436 0.7227748 #>   [64,] 0.93875636 1.1367003 1.5287964 1.5337412 1.6399291 1.6545483 1.7342239 #>   [65,] 0.88502691 0.9497892 1.0472838 1.0643652 1.0952935 1.1411473 1.2304203 #>   [66,] 0.13991958 0.4693938 0.4999863 0.5108248 0.5294371 0.5331338 0.5340398 #>   [67,] 0.76208499 0.8321029 0.9652295 1.0395306 1.0461751 1.1284682 1.1359030 #>   [68,] 0.59970390 0.8821102 0.9703782 1.1117692 1.1119068 1.1485819 1.1903476 #>   [69,] 0.71744784 0.7945502 1.1522913 1.1845377 1.2134439 1.2201179 1.2252872 #>   [70,] 0.24815838 0.4133151 0.4496195 0.4669543 0.5049055 0.5519513 0.5678133 #>   [71,] 0.14323499 0.4012362 0.4672873 0.6041141 0.7174050 0.7684570 0.8054647 #>   [72,] 0.05044767 0.3138046 0.3530980 0.4500983 0.4690718 0.4709797 0.5294129 #>   [73,] 0.53729331 0.5397693 0.6572769 0.6959356 0.6999045 0.7184902 0.8100386 #>   [74,] 0.27885771 0.3679355 0.3698594 0.3765215 0.3854955 0.4115707 0.4285500 #>   [75,] 0.40437626 0.6205470 0.7034203 0.7062951 0.7777809 0.7846093 0.8508050 #>   [76,] 0.33282060 0.4974186 0.5535218 0.5798158 0.6251621 0.6471069 0.6671295 #>   [77,] 0.39072775 0.5806065 0.7209451 0.7213831 0.7499538 0.7518530 0.7856264 #>   [78,] 0.33059219 0.4573338 0.5853118 0.7131172 0.7193250 0.7231370 0.7480482 #>   [79,] 0.71131015 0.7385187 0.8553686 0.9981619 1.0165030 1.0245465 1.0993365 #>   [80,] 0.46878398 0.5372933 0.5609688 0.6866302 0.7329443 0.7373941 0.8127639 #>   [81,] 0.35563696 0.3674945 0.3742749 0.3792479 0.3983085 0.3999034 0.4193818 #>   [82,] 0.36562952 0.5293930 0.6194954 0.6321548 0.6707124 0.7543145 0.8492018 #>   [83,] 0.43012181 0.4454455 0.4496778 0.5208766 0.5760130 0.5859192 0.6182277 #>   [84,] 0.42044170 0.5716739 0.6915789 0.7133015 0.7259945 0.7443719 0.7666860 #>   [85,] 0.58276132 0.6708969 0.8004554 0.8539293 0.8637346 0.8817257 0.8975088 #>   [86,] 0.79185140 0.8973483 1.0311640 1.0659577 1.0722282 1.1079658 1.2746431 #>   [87,] 0.44195307 0.4645881 0.4918268 0.5464645 0.5866861 0.5979628 0.6049807 #>   [88,] 0.36383781 0.5462873 0.5756507 0.6370650 0.6569681 0.6630174 0.6652995 #>   [89,] 0.53860366 0.8486058 0.8928365 0.9570667 0.9900953 1.0143137 1.1525199 #>   [90,] 0.31363201 0.5274687 0.5839197 0.5910634 0.7575019 0.7731709 0.7741966 #>   [91,] 0.64185949 0.7640343 0.8003063 0.8501749 0.8812521 0.8829397 0.8846691 #>   [92,] 0.24589862 0.3374386 0.4023278 0.4583511 0.5025456 0.5456720 0.5644892 #>   [93,] 0.44521327 0.4571179 0.5396239 0.7149451 0.7841182 0.8612611 0.9352953 #>   [94,] 0.66737625 0.7957730 0.8601510 0.9016104 1.0315134 1.0381096 1.0607898 #>   [95,] 0.64829046 0.7332807 0.8496356 0.8548244 0.9159990 0.9474136 0.9645765 #>   [96,] 0.65404540 0.7664188 0.7996717 0.8602780 0.8760671 0.8824329 0.9015799 #>   [97,] 0.50951619 0.5517463 0.6189989 0.6977769 0.7408306 0.7496582 0.7518559 #>   [98,] 0.32717627 0.3467743 0.4626483 0.5494024 0.6047198 0.6058935 0.6088132 #>   [99,] 0.28762802 0.4128126 0.4299539 0.4495760 0.4802889 0.5610539 0.6630174 #>  [100,] 0.23392120 0.2427160 0.2683841 0.3084837 0.3123021 0.3933377 0.4047243 #>  [101,] 0.38464057 0.4823274 0.5288702 0.5629740 0.5644673 0.5678133 0.5979797 #>  [102,] 0.84265178 0.8910625 1.0206180 1.1296164 1.4056982 1.5240857 1.5264272 #>  [103,] 1.14101064 1.1413345 1.2132499 1.5169063 1.6492558 1.7421456 1.7561349 #>  [104,] 0.57656888 0.6045440 0.6142873 0.6224041 0.6705106 0.6943049 0.7786115 #>  [105,] 1.23911236 1.3343226 1.4014865 1.4072880 1.4107577 1.4836769 1.4922926 #>  [106,] 0.27446592 0.4959001 0.4995285 0.5233809 0.5303210 0.5563689 0.6200198 #>  [107,] 0.72988934 0.9209406 0.9966937 1.0739177 1.1356074 1.2751098 1.2785653 #>  [108,] 0.39674701 0.4825802 0.5160464 0.5739035 0.6567622 0.6976350 0.7112581 #>  [109,] 0.47154959 0.5402248 0.6178353 0.6456951 0.6953772 0.7247702 0.7258577 #>  [110,] 0.21336516 0.3174299 0.4810102 0.6818594 0.7773956 0.8540943 0.8710692 #>  [111,] 0.48773673 0.5928053 0.6138382 0.6740654 0.6951407 0.7706150 0.7959280 #>  [112,] 0.28377264 0.3543140 0.3870968 0.4713373 0.4841548 0.4906669 0.5488544 #>  [113,] 0.81103611 0.9839750 1.5478248 1.7648424 1.8131269 1.8197631 1.9310278 #>  [114,] 0.40004151 0.5442592 0.5535726 0.5941433 0.5958914 0.6415491 0.6534340 #>  [115,] 0.64930901 0.7116306 0.7231370 0.7384765 0.7405035 0.8002703 0.8071717 #>  [116,] 0.35641730 0.5028548 0.5564693 0.6302793 0.6575740 0.6631958 0.6764868 #>  [117,] 0.44183698 0.5057053 0.5207223 0.5900826 0.7194598 0.7620979 0.7695362 #>  [118,] 0.94548913 0.9521054 1.0834663 1.2070056 1.3520871 1.3745283 1.3859778 #>  [119,] 0.57318708 0.6957941 0.7397941 0.7744807 0.8120638 0.8152089 0.8175416 #>  [120,] 0.78974036 0.7972062 0.8281980 0.9454857 0.9893797 1.0069936 1.0258926 #>  [121,] 0.40896783 0.4161450 0.5173170 0.5294242 0.5606146 0.5748038 0.5811547 #>  [122,] 0.25985954 0.3739763 0.5117378 0.5405047 0.5728198 0.6418830 0.6557862 #>  [123,] 1.65251646 1.6979190 1.8288075 1.8539469 2.0045742 2.0171179 2.0216659 #>  [124,] 0.42061834 0.4811231 0.4875303 0.5467515 0.5535998 0.5900826 0.5972749 #>  [125,] 0.38050807 0.8310618 0.8804725 0.9296302 0.9968483 1.0001249 1.0107383 #>  [126,] 0.41669564 0.5705732 0.6305870 0.6971334 0.8133186 0.8274775 0.8467178 #>  [127,] 0.32909367 0.4716262 0.6803498 0.7734966 0.7939964 0.8369868 0.8545799 #>  [128,] 0.68623704 0.7461042 0.7498024 0.8288154 0.8745405 0.8793071 0.9113977 #>  [129,] 0.33881355 0.3773154 0.3855977 0.4212120 0.4442350 0.5113669 0.5555443 #>  [130,] 0.12837489 0.4315330 0.4877341 0.6776837 0.6855088 0.7012365 0.7049766 #>  [131,] 0.49477945 0.5895559 0.7224130 0.7452614 0.7749051 0.7822219 0.8533556 #>  [132,] 0.86051293 0.8870923 0.9627467 0.9636158 0.9673400 1.0451767 1.0833036 #>  [133,] 0.16134035 0.3771927 0.5000450 0.5751024 0.6334577 0.6412421 0.6746697 #>  [134,] 0.47097970 0.5083228 0.5142609 0.5417757 0.5642029 0.5745237 0.5877114 #>  [135,] 0.67490721 0.8135556 0.9684214 0.9748653 0.9769279 0.9787483 1.0032049 #>  [136,] 0.42771459 0.5982193 0.6926255 0.7680013 0.8165454 0.8293456 0.8354214 #>  [137,] 0.16014993 0.3664778 0.3988154 0.4548507 0.4896916 0.5449679 0.6059375 #>  [138,] 0.29109318 0.7957730 0.8205107 0.8235481 0.8495340 0.8564227 0.9466018 #>  [139,] 0.30847557 0.3951357 0.4442350 0.5318058 0.5366147 0.5658653 0.5752625 #>  [140,] 0.20980380 0.3759328 0.5087197 0.5136822 0.5177251 0.5537038 0.5643980 #>  [141,] 0.60412752 0.6809352 0.7573626 0.7687175 0.8779530 0.8935278 0.9243055 #>  [142,] 0.67681552 0.7872766 0.9043392 0.9732379 0.9787229 1.0731769 1.0968115 #>  [143,] 0.26134845 0.4308969 0.4622633 0.4993979 0.6234626 0.6309859 0.6404863 #>  [144,] 0.52475573 0.5701703 0.6386735 0.6488148 0.6717199 0.7129399 0.7540535 #>  [145,] 1.12910032 1.1946960 1.2602207 1.2632627 1.3246190 1.3683177 1.3822400 #>  [146,] 0.19176023 0.3643136 0.4642179 0.5486948 0.5746497 0.6211337 0.6982458 #>  [147,] 0.28108835 0.3056433 0.4762899 0.5457833 0.5957725 0.6191511 0.6356244 #>  [148,] 0.34965883 0.5450375 0.5715827 0.5861854 0.6070381 0.6389247 0.6558549 #>  [149,] 0.49445957 0.5539076 0.5984862 0.8199298 0.8438475 0.8471181 0.8556217 #>  [150,] 0.61307265 0.9190072 1.0281339 1.2152953 1.2735023 1.2975264 1.3086448 #>  [151,] 0.63394915 0.8120697 0.8778122 0.8995469 0.9512813 0.9599320 1.0011659 #>  [152,] 0.64849584 0.9318532 0.9576569 0.9880316 1.0135725 1.0263041 1.0458479 #>  [153,] 0.46612373 0.5386035 0.5563452 0.5611023 0.5681664 0.5703687 0.5768353 #>  [154,] 0.51258840 0.6588897 0.7341956 0.8607672 0.8988347 0.9484943 0.9953770 #>  [155,] 0.57637266 0.5889871 0.6949469 0.7056529 0.7106079 0.7555750 0.7825739 #>  [156,] 0.44353813 0.5090152 0.5173170 0.5346643 0.5493612 0.5927737 0.5982934 #>  [157,] 0.47468287 0.7124707 0.8778122 0.9501697 1.0011335 1.0165608 1.1206924 #>  [158,] 0.34356847 0.3951357 0.4000415 0.5091564 0.5125067 0.5199072 0.5640989 #>  [159,] 0.48586223 0.5717547 0.5728198 0.6132784 0.6224184 0.6331896 0.6394361 #>  [160,] 0.26853858 0.2964680 0.4253129 0.4396298 0.4677198 0.5765958 0.5789861 #>  [161,] 0.37955663 0.4315330 0.5683373 0.6326279 0.8117046 0.8310618 0.8664679 #>  [162,] 0.33606504 0.4162990 0.4615806 0.4698100 0.5306920 0.5612559 0.5806861 #>  [163,] 0.13734837 0.2866813 0.3292534 0.4443866 0.5446907 0.5522722 0.5871626 #>  [164,] 0.29450673 0.3771927 0.4488623 0.6090262 0.6907890 0.7200307 0.7262093 #>  [165,] 0.32802451 0.4318312 0.5579497 0.6654361 0.6851107 0.7147657 0.7166782 #>  [166,] 0.44793395 0.4715496 0.5366353 0.5983419 0.6053624 0.6618230 0.7023389 #>  [167,] 0.23508044 0.5765737 0.6700851 0.6745728 0.6779237 0.7403661 0.7423742 #>  [168,] 0.66408438 0.6838827 0.7033227 0.7416938 0.7450771 0.7461102 0.7544139 #>  [169,] 0.77561686 0.8025961 0.8134489 0.8521160 0.8954638 0.9012444 0.9115735 #>  [170,] 0.55152718 0.6614885 0.6699273 0.7081835 0.7730438 0.9035187 0.9054836 #>  [171,] 0.65369666 1.0081514 1.1390688 1.1831087 1.2267992 1.2440828 1.2488561 #>  [172,] 0.63757557 0.6457495 0.8504220 0.8581111 0.8588358 0.8676363 0.9487144 #>  [173,] 0.24652709 0.3852788 0.4615806 0.5395145 0.5523883 0.6059134 0.6653937 #>  [174,] 0.26365450 0.4811231 0.4952305 0.5057053 0.5506028 0.5979243 0.5983419 #>  [175,] 0.60088697 1.1558631 1.2318292 1.2507356 1.3963384 1.4176048 1.4297055 #>  [176,] 0.38527876 0.5465346 0.5931116 0.6020053 0.6784941 0.7597012 0.7820474 #>  [177,] 0.30327634 0.4072999 0.4195875 0.4283814 0.4495399 0.4650805 0.4984632 #>  [178,] 0.31115613 0.4968893 0.5161738 0.5352144 0.6301072 0.6344959 0.6419909 #>  [179,] 0.72988934 0.8321029 0.8600973 0.9375403 0.9901940 1.0426136 1.0680391 #>  [180,] 0.24026308 0.3846406 0.5160464 0.6301522 0.6950877 0.7075452 0.7264119 #>  [181,] 0.38234692 0.4870408 0.4951806 0.5025456 0.5372548 0.5735002 0.5751568 #>  [182,] 0.86897386 0.9611168 1.0245465 1.1216535 1.1651328 1.2683994 1.3440533 #>  [183,] 0.32881803 0.4617648 0.4677935 0.5262038 0.5334734 0.5581556 0.5606146 #>  [184,] 0.42360740 0.4665793 0.4984632 0.5239882 0.5445121 0.5563689 0.5584346 #>  [185,] 0.33326742 0.4060257 0.4530110 0.4642179 0.6236100 0.6521300 0.7188454 #>  [186,] 0.29450673 0.4780329 0.5000450 0.5306920 0.5371804 0.6059134 0.6360701 #>  [187,] 0.74058428 0.8640671 0.8688109 0.9175256 0.9289956 0.9459144 0.9512813 #>  [188,] 0.30544971 0.3876770 0.4093885 0.4437271 0.4640404 0.4762899 0.4844557 #>  [189,] 0.28521473 0.3489950 0.4814746 0.5904165 0.6094087 0.6437408 0.6645386 #>  [190,] 0.55031444 0.5701703 0.6076038 0.6409228 0.6799009 0.7152474 0.7200899 #>  [191,] 0.14516589 0.2878220 0.4435590 0.5554161 0.5748038 0.6083064 0.6308001 #>  [192,] 0.66275445 0.6996139 0.7122543 0.9018151 0.9060216 0.9243055 0.9326027 #>  [193,] 0.55482785 0.6807836 0.7387135 0.7434842 0.7600063 0.7721729 0.8385304 #>  [194,] 1.90307929 1.9965386 2.0060820 2.0153194 2.0164125 2.0443276 2.1320691 #>  [195,] 0.36485173 0.3979121 0.4393937 0.5629935 0.6365212 0.6421032 0.6906777 #>  [196,] 0.82058853 0.9723123 1.0510385 1.0984701 1.1812835 1.1901654 1.2038421 #>  [197,] 0.50814225 0.6281038 0.6774283 0.6903556 0.7162987 0.8103112 0.8349974 #>  [198,] 0.88552988 0.9917410 1.0013229 1.0343558 1.0544455 1.1550388 1.2057738 #>  [199,] 0.45159085 0.6996313 0.7334251 0.7492957 0.7777809 0.8350612 0.8634456 #>  [200,] 0.16050213 0.2120765 0.3810995 0.4400732 0.6084107 0.6132070 0.6478070 #>  [201,] 0.28685918 0.4419250 0.4658369 0.6654361 0.7328494 0.7406376 0.7632271 #>  [202,] 0.56843042 0.5949110 0.6982478 0.7345531 0.7566082 0.8580110 0.9011761 #>  [203,] 0.35294051 0.5266811 0.6965567 0.7185265 0.7288509 0.8694521 0.9556732 #>  [204,] 0.32909367 0.4748899 0.7513879 0.7744858 0.8054311 0.8497121 0.8629751 #>  [205,] 0.63066502 0.6675085 0.6861888 0.6984967 0.7206218 0.7233922 0.7521549 #>  [206,] 0.05044767 0.3236918 0.3477581 0.4439840 0.4788410 0.5115099 0.5142609 #>  [207,] 0.46241975 0.4633536 0.4797157 0.7093097 0.8460317 0.8808874 0.8821102 #>  [208,] 0.49741859 0.7052543 0.7120325 0.7144267 0.7417858 0.8185147 0.8495340 #>  [209,] 0.45635575 0.7081835 0.7694528 0.8192826 0.8874580 0.9144676 0.9948404 #>  [210,] 0.39026444 0.4773653 0.5733948 0.6105288 0.6607226 0.6916319 0.7104408 #>  [211,] 0.29983056 0.4196547 0.5244486 0.5613802 0.5768738 0.5976749 0.6113722 #>  [212,] 0.35639677 0.3768032 0.3887733 0.4285500 0.4843009 0.4904289 0.5548285 #>  [213,] 0.37644161 0.4375565 0.5112114 0.6199020 0.6271535 0.6471069 0.6842335 #>  [214,] 0.51695900 0.7233742 0.7369722 0.8874028 0.8988093 0.9203413 0.9894665 #>  [215,] 0.48846066 0.5593362 0.6473970 0.6747428 0.7151740 0.7202959 0.7449098 #>  [216,] 0.36712624 0.3902644 0.4225211 0.4562059 0.5071092 0.5532899 0.6215774 #>  [217,] 0.55440519 0.7230311 0.8340820 1.0372950 1.0659226 1.1956411 1.2038405 #>  [218,] 1.21549906 1.3570303 1.6714708 1.9351277 1.9895430 2.0056497 2.0390871 #>  [219,] 0.80543113 0.8621788 0.8757517 0.9411416 0.9605851 1.0614873 1.1314597 #>  [220,] 0.49737120 0.6493120 0.6674062 0.7046175 0.7076637 0.7631834 0.7998702 #>  [221,] 0.46839281 0.5962691 0.6842335 0.6953772 0.6956324 0.7515093 0.7651033 #>  [222,] 0.35257848 0.3817680 0.4078833 0.5406285 0.5522977 0.5781621 0.6659627 #>  [223,] 0.24034640 0.3651717 0.4465304 0.5208628 0.5392618 0.5708165 0.6112952 #>  [224,] 0.40283739 0.5523883 0.5930243 0.6041307 0.6446380 0.6601835 0.6609363 #>  [225,] 0.61608752 0.6636542 0.7087092 0.8612611 0.8752159 0.9019679 0.9405977 #>  [226,] 0.34033823 0.3785632 0.5169590 0.5781782 0.5789503 0.6729270 0.8798704 #>  [227,] 0.63502002 0.8890332 0.9828781 1.0061006 1.0073610 1.0467500 1.0724397 #>  [228,] 0.42571374 0.4664346 0.4674720 0.4932327 0.5478423 0.6031995 0.6084107 #>  [229,] 0.96050414 1.1502847 1.3395516 1.4093467 1.4708721 1.5818508 1.6248655 #>  [230,] 0.55988775 0.5641919 0.5767169 0.6328819 0.6512502 0.7498024 0.7994509 #>  [231,] 0.32782038 0.3496588 0.4237538 0.4494832 0.4721201 0.5197775 0.5208766 #>  [232,] 0.81103611 1.2937544 2.0968611 2.2559520 2.2752912 2.4553382 2.4620502 #>  [233,] 0.48209531 0.4844138 0.4967727 0.5689258 0.6541010 0.6636789 0.6843652 #>  [234,] 0.67745000 0.6957941 0.7084308 0.7614651 0.8238149 0.8972835 0.8985744 #>  [235,] 0.97978272 1.0099024 1.0203879 1.0550141 1.0921517 1.1268754 1.1652548 #>  [236,] 0.32156118 0.4333580 0.5122375 0.5908985 0.6279771 0.6625068 0.7403501 #>  [237,] 0.21433680 0.3403909 0.3876266 0.4032809 0.4350219 0.4705955 0.4789620 #>  [238,] 0.48151622 0.4839650 0.5794578 0.6943219 0.7007789 0.7145892 0.7152957 #>  [239,] 0.91196782 1.0781285 1.1307561 1.2679817 1.3255304 1.3311111 1.3384724 #>  [240,] 0.24034640 0.4186607 0.4899108 0.5450375 0.6061478 0.6203280 0.6379947 #>  [241,] 0.57618762 0.7463897 0.8162017 0.8198530 0.8351518 0.8962762 0.9401251 #>  [242,] 0.46389883 0.4653505 0.5005002 0.5587041 0.5711325 0.5830491 0.6228589 #>  [243,] 0.23121203 0.4119003 0.5058168 0.5071746 0.5294371 0.5535998 0.5898404 #>  [244,] 0.75295862 0.7785748 0.9232249 1.0661999 1.0985618 1.1178487 1.1260634 #>  [245,] 0.31987813 0.4179121 0.4624133 0.4960497 0.5060128 0.5668288 0.6179269 #>  [246,] 0.22566117 0.3752315 0.4242664 0.5623346 0.5647797 0.6830693 0.7055337 #>  [247,] 0.20872271 0.4321172 0.4815369 0.5928056 0.6699273 0.6891212 0.7822839 #>  [248,] 0.35002420 0.4843970 0.4863745 0.6174631 0.6340799 0.6923848 0.7257597 #>  [249,] 0.19176023 0.4060257 0.4120318 0.4197767 0.6049998 0.6639346 0.6676546 #>  [250,] 0.52141245 0.6870681 0.7495735 0.7709237 0.7791528 0.7804531 0.7935357 #>  [251,] 0.56843042 0.6499447 0.7690173 0.7919324 0.8048321 0.8788344 0.9475986 #>  [252,] 0.33565256 0.4519453 0.5094956 0.6452077 0.6890885 0.6959356 0.7260498 #>  [253,] 0.44650455 0.6160082 0.6638719 0.6891888 0.7403638 0.7605405 0.7814667 #>  [254,] 0.47971575 0.5977538 0.5997026 0.6281813 0.6468197 0.7400450 0.8491621 #>  [255,] 0.80618739 0.9326849 1.0067420 1.2063528 1.2175667 1.2244674 1.2602762 #>  [256,] 0.29886887 0.4700165 0.7061063 0.7084813 0.7553023 0.7822894 0.7887901 #>  [257,] 0.90013271 0.9393918 0.9602131 0.9846931 1.0994278 1.1855751 1.2005657 #>  [258,] 0.27636074 0.2816996 0.4599916 0.6053821 0.6091714 0.6322489 0.6510626 #>  [259,] 0.55872877 0.5662271 0.5920800 0.6337024 0.6516593 0.7627658 0.8404397 #>  [260,] 0.35804511 0.3601786 0.3764416 0.4885485 0.5782163 0.6047198 0.6134511 #>  [261,] 0.65648844 0.7262890 0.7666860 0.7847713 0.8194962 0.8728494 0.9296943 #>  [262,] 0.43341135 0.4718007 0.6471574 0.7193250 0.8205885 0.8709092 0.9004993 #>  [263,] 0.27383155 0.3290635 0.4724690 0.5128856 0.5405765 0.5852162 0.6207728 #>  [264,] 0.24652709 0.4028374 0.4698100 0.5763727 0.6020053 0.6360701 0.6808308 #>  [265,] 0.38176803 0.4540824 0.5146556 0.5443995 0.5464645 0.5569290 0.6143491 #>  [266,] 0.30151798 0.3861331 0.5196803 0.5239882 0.5850712 0.6379259 0.6421032 #>  [267,] 0.50927664 0.5907378 0.6528996 0.7306585 0.7325555 0.7658404 0.7829251 #>  [268,] 0.31758945 0.5773629 0.5884661 0.6956527 0.7328287 0.7544174 0.7732631 #>  [269,] 1.19297467 1.2432542 1.4772437 1.5190966 1.5379521 1.6038158 1.6208572 #>  [270,] 0.48439698 0.5066011 0.5363958 0.5794772 0.7614314 0.7816982 0.8469849 #>  [271,] 0.30476976 0.4064935 0.5329786 0.5446934 0.5512306 0.6638719 0.6785844 #>  [272,] 0.40699514 0.5276995 0.5746497 0.6484830 0.6574036 0.6676546 0.6768287 #>  [273,] 0.42771037 0.7918514 0.8332206 0.8441683 0.9129337 0.9143487 0.9767515 #>  [274,] 0.29983056 0.3684296 0.5198107 0.5955892 0.6093911 0.6524674 0.6589147 #>  [275,] 0.41551963 0.4252645 0.4470634 0.4497314 0.5244533 0.6058935 0.6129594 #>  [276,] 0.19085075 0.2184174 0.3704116 0.4406478 0.4437271 0.4466606 0.4535389 #>  [277,] 0.26853858 0.3848818 0.4007951 0.5241234 0.5325657 0.5351965 0.5352234 #>  [278,] 0.18018638 0.3156814 0.3209773 0.4144888 0.4256093 0.4531390 0.4930232 #>  [279,] 0.57350948 0.5881442 0.6721756 0.6850563 0.6984612 0.7046175 0.8310583 #>  [280,] 0.36712624 0.3879961 0.4227859 0.4372802 0.5546492 0.5733948 0.6194491 #>  [281,] 0.23720811 0.4014653 0.4099958 0.4539055 0.5191279 0.5674798 0.6116781 #>  [282,] 0.40560866 0.5643825 0.5780538 0.6636542 0.7061047 0.7102470 0.7389029 #>  [283,] 0.40525845 0.4125251 0.4321172 0.5016015 0.6927117 0.7008852 0.7320982 #>  [284,] 0.52478367 0.5402248 0.5962691 0.6084827 0.6718171 0.6926255 0.8264033 #>  [285,] 0.72066372 0.9195470 0.9534562 1.0712097 1.0841577 1.1218900 1.1583199 #>  [286,] 0.32542116 0.5097263 0.6465140 0.6700211 0.6716513 0.6764628 0.7423728 #>  [287,] 0.36404055 0.5839197 0.6682977 0.6703241 0.6966756 0.7433273 0.8027924 #>  [288,] 0.32906352 0.3295908 0.4320411 0.4348833 0.4490162 0.4833346 0.5650736 #>  [289,] 0.35617649 0.3762237 0.4584894 0.5098558 0.5144965 0.5226729 0.5449604 #>  [290,] 1.08077688 1.0836539 1.1112444 1.1218900 1.1419252 1.1650973 1.2287748 #>  [291,] 0.52835599 0.6923848 0.7083699 0.7300250 0.7371994 0.7649042 0.7700083 #>  [292,] 0.91894963 0.9602131 1.0414663 1.1503671 1.2056088 1.3429963 1.3560377 #>  [293,] 0.52769950 0.6211337 0.6651110 0.7201451 0.7378124 0.7609416 0.7823605 #>  [294,] 0.43223994 0.4325905 0.4661237 0.6245718 0.6354577 0.6388826 0.6453579 #>  [295,] 0.31987813 0.4211150 0.4320411 0.4707401 0.5269125 0.5423080 0.5493317 #>  [296,] 0.42526452 0.4622769 0.4649020 0.5033385 0.5085270 0.5182924 0.5651025 #>  [297,] 0.44480586 0.4495760 0.5377368 0.5885150 0.6740682 0.6795151 0.6829287 #>  [298,] 0.31296773 0.4539055 0.4965939 0.5301140 0.5933668 0.6349319 0.6470193 #>  [299,] 0.17147036 0.3209773 0.3555437 0.3871848 0.4356705 0.4586064 0.4957767 #>  [300,] 1.00913453 1.0682653 1.1262865 1.2919772 1.3350430 1.3487170 1.3587295 #>  [301,] 0.35677621 0.4461287 0.4841229 0.5549656 0.5789503 0.5926940 0.6127899 #>  [302,] 0.30771307 0.5288702 0.5741500 0.5895982 0.6096560 0.6097413 0.6567622 #>  [303,] 0.87991431 0.9787229 1.0569085 1.1413345 1.2035631 1.2121058 1.2203719 #>  [304,] 0.69768723 0.7028411 0.7488887 0.7673180 0.7807639 0.7941967 0.8017759 #>  [305,] 0.48201594 0.6182957 0.6750403 0.7648920 0.9426159 0.9974411 1.0102861 #>  [306,] 0.32566064 0.4128126 0.4215858 0.4448059 0.5210850 0.5214124 0.5434328 #>  [307,] 0.19687010 0.3049601 0.4169202 0.4908808 0.5534048 0.5633917 0.5966966 #>  [308,] 0.39498792 0.4679016 0.4767061 0.5103564 0.6041141 0.7223927 0.7290991 #>  [309,] 0.54465716 0.7656048 0.8152089 1.0383130 1.0784714 1.0869685 1.1470925 #>  [310,] 0.44418763 0.4616399 0.5730021 0.6328678 0.6571506 0.7091676 0.7144336 #>  [311,] 0.80763383 1.2443910 1.3694232 1.4679854 1.4680975 1.5372746 1.6186156 #>  [312,] 0.24815838 0.3889872 0.4835528 0.5648604 0.5694654 0.5917274 0.5951791 #>  [313,] 0.15769164 0.2680008 0.3351800 0.3388260 0.3802375 0.4705955 0.4941907 #>  [314,] 0.61817607 0.6397490 0.6465140 0.6511222 0.6687036 0.6879521 0.8293587 #>  [315,] 0.40302136 0.4180566 0.4264958 0.4306196 0.4798433 0.5128856 0.5493317 #>  [316,] 0.27973595 0.3311948 0.3447674 0.4264958 0.4659724 0.5220528 0.5281186 #>  [317,] 0.25453567 0.3942144 0.4276652 0.4491485 0.4779277 0.4957853 0.5525168 #>  [318,] 0.67165127 0.6897103 0.7055337 0.7149451 0.7525060 0.7850776 0.8020389 #>  [319,] 0.95175682 1.0426354 1.1567846 1.1700653 1.2453318 1.3145276 1.3182023 #>  [320,] 0.44347538 0.4823274 0.5173176 0.5454685 0.5835737 0.6215436 0.6647614 #>  [321,] 0.88866175 1.0842686 1.1563075 1.2179665 1.2322484 1.3381843 1.4218830 #>  [322,] 0.31859079 0.4253129 0.4319322 0.4350219 0.5086455 0.5313664 0.5351965 #>  [323,] 0.53316459 0.5421725 0.5478423 0.5956066 0.6239755 0.7437318 0.7468913 #>  [324,] 0.59970390 0.9373858 1.1526840 1.1584974 1.1899259 1.1980080 1.2198853 #>  [325,] 0.34912539 0.3514201 0.3543140 0.5343414 0.5494024 0.5534508 0.5893636 #>  [326,] 0.49344103 0.5088215 0.6498564 0.6639346 0.7425451 0.7580301 0.7605192 #>  [327,] 0.56164762 0.6486681 0.7124707 0.9065163 0.9175256 0.9376837 0.9599320 #>  [328,] 0.43958930 0.5745148 0.6325642 0.6516829 0.6848696 0.7645798 0.7757435 #>  [329,] 0.27885771 0.2875047 0.3371686 0.3726395 0.3931110 0.3933377 0.4226194 #>  [330,] 0.41938177 0.4556025 0.4714525 0.5362102 0.5379998 0.5572162 0.5578168 #>  [331,] 0.48647024 0.5026609 0.5397693 0.6003268 0.6452077 0.6667140 0.7009006 #>  [332,] 0.35641730 0.5794849 0.6062864 0.6263657 0.6270850 0.6516324 0.6694510 #>  [333,] 0.38766241 0.4691217 0.5009921 0.5538413 0.6059207 0.6383931 0.6535003 #>  [334,] 0.37731545 0.3967091 0.4436962 0.5199072 0.5219261 0.5520271 0.5633158 #>  [335,] 0.76369217 0.8786336 1.0953834 1.1033871 1.1221650 1.1820145 1.1969843 #>  [336,] 0.39772349 0.4373590 0.4908543 0.5892729 0.6138382 0.6200198 0.6514621 #>  [337,] 0.60347276 0.6563081 0.8082432 0.9243354 0.9492214 1.0259637 1.0387618 #>  [338,] 0.48252582 0.5587288 0.6603445 0.6790267 0.7234368 0.7349764 0.7580861 #>  [339,] 0.23684421 0.5047928 0.5305342 0.5379998 0.5553926 0.5746804 0.6194020 #>  [340,] 0.26134845 0.3733901 0.3979435 0.4863194 0.5449604 0.5989875 0.5997272 #>  [341,] 0.69006511 0.8325292 0.9506760 0.9698530 0.9744588 1.0079796 1.0468718 #>  [342,] 0.34346328 0.3942144 0.5509749 0.5619234 0.5708502 0.5850712 0.6096674 #>  [343,] 0.35257848 0.3834017 0.4747287 0.6143491 0.6591908 0.6850563 0.7076637 #>  [344,] 0.67470175 0.6836334 0.6974259 0.7406000 0.7944731 0.8090806 0.8114944 #>  [345,] 0.42232518 0.5789559 0.6214700 0.6668958 0.8081784 0.8198530 0.8234138 #>  [346,] 0.17207826 0.3381253 0.3810995 0.4235667 0.4674720 0.4677935 0.4781327 #>  [347,] 0.40468148 0.4836080 0.5794578 0.6293271 0.6615131 0.6789918 0.7030402 #>  [348,] 0.33282060 0.4581883 0.4691217 0.5006761 0.6945753 0.7144267 0.7299617 #>  [349,] 0.38526031 0.4029335 0.4900370 0.5204605 0.5434089 0.5694654 0.5868214 #>  [350,] 0.28762802 0.3956653 0.5210850 0.6210393 0.6230679 0.6327017 0.6778428 #>  [351,] 0.46029350 0.6906037 0.8086531 0.8218262 0.8238149 0.8399513 0.8408762 #>  [352,] 0.35249392 0.5631074 0.6194954 0.6892676 0.6984612 0.7746747 0.8086942 #>  [353,] 1.59056274 1.6422422 1.7163414 1.8005924 1.8671932 1.9050890 2.0023936 #>  [354,] 1.35612683 1.3640294 1.5056371 1.5108982 1.5260460 1.5627636 1.5677793 #>  [355,] 0.20872271 0.4125251 0.4514660 0.5240073 0.5515272 0.6777206 0.6932255 #>  [356,] 0.32542116 0.5787704 0.6273875 0.7514793 0.7596665 0.7850776 0.7931624 #>  [357,] 0.24045362 0.3655663 0.4074899 0.4594424 0.4769595 0.5067766 0.5798787 #>  [358,] 0.37171821 0.4203467 0.5008550 0.8270914 0.8272020 0.8275670 0.8434128 #>  [359,] 0.31758945 0.4700165 0.4957409 0.5190117 0.5443840 0.6601835 0.6679921 #>  [360,] 0.74434605 0.7561180 0.7963270 0.8211692 0.8310449 0.8505428 0.8641431 #>  [361,] 0.42044170 0.4785478 0.6422166 0.6483485 0.6564884 0.8036251 0.8731229 #>  [362,] 0.25349784 0.3928674 0.4692526 0.5248002 0.5264048 0.5841515 0.5963819 #>  [363,] 0.40721913 0.4697231 0.4719867 0.5792963 0.7757235 0.8064365 0.8445202 #>  [364,] 0.43012181 0.4309275 0.4983992 0.5488544 0.5948766 0.5974421 0.6038599 #>  [365,] 0.30146730 0.3055381 0.3868288 0.5061435 0.5079276 0.5842628 0.5943416 #>  [366,] 0.38921125 0.4284445 0.4899602 0.5954489 0.6146990 0.6165957 0.6194020 #>  [367,] 0.31248977 0.3250740 0.3520583 0.3802375 0.3983085 0.4465576 0.4556025 #>  [368,] 0.57167395 0.6551075 0.6906777 0.7358151 0.7944731 0.8049019 0.8426823 #>  [369,] 0.20358605 0.3486246 0.4370388 0.5305791 0.5730021 0.6091714 0.6838827 #>  [370,] 0.33189196 0.3656295 0.5631074 0.5905615 0.5927737 0.7429311 0.7525323 #>  [371,] 0.12375203 0.3561715 0.4583511 0.4984615 0.5260139 0.5969777 0.6281813 #>  [372,] 0.42087188 0.4531120 0.5061435 0.5819934 0.5873751 0.5903866 0.6057908 #>  [373,] 0.40437626 0.7265387 0.7269833 0.7668440 0.7997006 0.8120638 0.8198858 #>  [374,] 0.46241975 0.5198107 0.5879754 0.5977538 0.6332236 0.6588484 0.6595900 #>  [375,] 0.57515417 0.6319398 0.8014759 0.8533253 1.0781620 1.0793026 1.0809756 #>  [376,] 0.26160541 0.3955207 0.4664345 0.5629935 0.5658614 0.6331562 0.6445360 #>  [377,] 0.37041164 0.4334418 0.4972959 0.5588080 0.5768353 0.5958786 0.6288573 #>  [378,] 0.51968026 0.5389623 0.5509749 0.5816493 0.6610778 0.6693715 0.6804086 #>  [379,] 0.24797955 0.5735002 0.6647665 0.6715173 0.6733320 0.7162987 0.7481601 #>  [380,] 1.12757119 1.1394438 1.2167488 1.2524393 1.2643573 1.3388951 1.3499067 #>  [381,] 0.43341135 0.6330748 0.6616834 0.6639133 0.6742869 0.7395874 0.7405677 #>  [382,] 0.25503978 0.3399044 0.4980866 0.7840200 0.8410801 0.8541567 0.8817257 #>  [383,] 0.22284742 0.5679654 0.6635854 0.6993846 0.7305819 0.7309658 0.7461042 #>  [384,] 0.54230162 0.6471574 0.7477058 0.8165147 0.8402039 0.8535906 0.8566990 #>  [385,] 0.38488185 0.3852603 0.4396298 0.5259788 0.5352303 0.5508552 0.5641703 #>  [386,] 0.32876083 0.3818518 0.4995285 0.6979197 0.7332807 0.7496582 0.7539756 #>  [387,] 0.27973595 0.3698705 0.4184677 0.4428891 0.4902943 0.4949062 0.4985974 #>  [388,] 0.43399196 0.5705358 0.6160082 0.6815947 0.7314483 0.7521824 0.7773788 #>  [389,] 0.47212008 0.5787704 0.5861854 0.5998838 0.6256857 0.6528996 0.6700211 #>  [390,] 0.67098741 0.8014759 0.8214695 0.9741574 1.0925766 1.1372052 1.1473569 #>  [391,] 0.31568144 0.4097020 0.4221751 0.4396953 0.4439840 0.4690718 0.4957767 #>  [392,] 0.49737120 0.5078289 0.5705576 0.6113035 0.6516593 0.7580861 0.8217999 #>  [393,] 0.57207004 0.5751568 0.5780706 0.6128775 0.6378240 0.6484433 0.6646787 #>  [394,] 0.34926588 0.4014653 0.4738650 0.4897581 0.5158001 0.5283835 0.5360742 #>  [395,] 0.66832347 0.7159477 0.7800463 0.8266755 0.8662822 0.8670494 0.9280708 #>  [396,] 0.60225266 0.7019960 0.7440305 0.8365331 0.9797628 1.0017344 1.0183600 #>  [397,] 0.28914846 0.2962849 0.3679203 0.4952925 0.5244486 0.5318145 0.5417778 #>  [398,] 0.45159085 0.5190743 0.5360742 0.5389879 0.6316205 0.6678258 0.7106393 #>  [399,] 0.54465716 0.6205470 0.7265387 0.7401133 0.7744807 0.8563500 0.8632384 #>  [400,] 0.32925338 0.3770895 0.3792479 0.4575019 0.5023443 0.5064272 0.5588672 #>  [401,] 0.40468148 0.4540059 0.5294099 0.6052732 0.6105436 0.6534300 0.6536717 #>  [402,] 0.34925716 0.5457952 0.5909976 0.6749072 0.7518530 0.8585396 0.8857549 #>  [403,] 0.71293991 0.7823964 0.8302853 0.8839955 0.9602018 0.9702604 0.9948472 #>  [404,] 0.19535376 0.4217133 0.4607479 0.4811697 0.4949062 0.5369410 0.5705369 #>  [405,] 0.11979246 0.3889643 0.4562059 0.5379373 0.5775942 0.6045640 0.6573314 #>  [406,] 0.25724736 0.4099958 0.4171372 0.4738650 0.4753609 0.4896916 0.5225816 #>  [407,] 0.54230162 0.7384765 0.7829251 0.8897679 0.9412066 0.9620748 0.9673147 #>  [408,] 0.88959698 1.0793026 1.2979066 1.3273590 1.3829477 1.4503321 1.5748076 #>  [409,] 0.30847557 0.3388135 0.3435685 0.4162789 0.4301267 0.4436962 0.5442592 #>  [410,] 0.33319120 0.5781621 0.5846161 0.6240301 0.6337024 0.6963016 0.7227211 #>  [411,] 0.50953552 0.5305342 0.6276845 0.6586391 0.6679921 0.6815132 0.7809131 #>  [412,] 0.78028833 0.8325292 1.1563075 1.2649172 1.5146938 1.5325112 1.6012808 #>  [413,] 0.63905948 0.7238023 0.8061874 0.9116758 0.9315227 0.9354967 0.9557813 #>  [414,] 0.62387687 0.7907522 0.8262158 1.0327862 1.0434362 1.2915183 1.3110011 #>  [415,] 0.33183526 0.4841229 0.5389623 0.5781782 0.6000609 0.6232062 0.6628912 #>  [416,] 0.22072346 0.3902479 0.5323467 0.5443840 0.5476437 0.5773629 0.6212637 #>  [417,] 1.07491189 1.6125101 1.6532075 1.7620483 1.7822577 1.8560688 1.8881371 #>  [418,] 0.20358605 0.2112465 0.3947054 0.4457442 0.4599916 0.5835549 0.6194978 #>  [419,] 0.41669564 0.4670479 0.4760854 0.5405021 0.5916654 0.6283320 0.6616834 #>  [420,] 0.50882145 0.5766021 0.7195130 0.7438741 0.7585986 0.7640343 0.7760222 #>  [421,] 0.54357256 0.6472404 0.7222883 0.7747678 0.9020937 0.9320857 0.9491757 #>  [422,] 0.34925716 0.5806065 0.5884200 0.6753810 0.7101816 0.7761960 0.8350110 #>  [423,] 0.42378175 0.5079783 0.5258769 0.5429914 0.6713909 0.6734881 0.6770178 #>  [424,] 0.26160541 0.3237644 0.3979121 0.4648281 0.4741572 0.4801766 0.5633158 #>  [425,] 1.12847385 1.1413808 1.1777459 1.2113169 1.3110671 1.4503321 1.5272612 #>  [426,] 0.47104950 0.6053821 0.6498564 0.6704421 0.7023592 0.7046721 0.7091676 #>  [427,] 0.34960277 0.3905750 0.4113216 0.5659559 0.5688372 0.6095741 0.6501754 #>  [428,] 0.31859079 0.3447674 0.3994947 0.4030214 0.4032809 0.4797779 0.4895333 #>  [429,] 0.68093516 0.7059181 1.0177723 1.0371942 1.0609525 1.0967921 1.1681659 #>  [430,] 0.46536469 0.4687840 0.5643825 0.6618230 0.6897781 0.7184902 0.7559479 #>  [431,] 0.39949466 0.4119948 0.4323992 0.4428891 0.4529902 0.4659724 0.5177251 #>  [432,] 0.29109318 0.6673762 0.8061576 0.8335774 0.9023487 0.9062542 0.9193938 #>  [433,] 0.52037949 0.6201282 0.6786555 0.7672780 0.8310583 0.9076434 0.9317462 #>  [434,] 0.21336516 0.3358533 0.3614435 0.8609611 0.8754770 0.8912070 0.8976103 #>  [435,] 0.57350948 0.5842628 0.6201282 0.6514801 0.6747704 0.6775479 0.6828350 #>  [436,] 0.37852364 0.4638988 0.4893128 0.5260139 0.5334018 0.5678034 0.5960255 #>  [437,] 0.30146730 0.4066970 0.4991794 0.5016015 0.5725207 0.7110778 0.7550972 #>  [438,] 0.27849319 0.3467743 0.4885485 0.6244786 0.6549891 0.7393210 0.7418540 #>  [439,] 0.56586530 0.5892134 0.5974189 0.6451609 0.7207068 0.7367541 0.7645796 #>  [440,] 0.22566117 0.4872124 0.5276473 0.5799178 0.6246688 0.6677785 0.6895453 #>  [441,] 0.44166174 0.5283560 0.5728428 0.5984355 0.6965821 0.7061855 0.7429213 #>  [442,] 0.37604114 0.4225037 0.4639986 0.4968893 0.5910726 0.6038700 0.6172824 #>  [443,] 0.19085075 0.3162752 0.4334418 0.4592844 0.4693938 0.5078948 0.5535035 #>  [444,] 0.48921577 0.5623338 0.5662244 0.5718532 0.6439157 0.6600387 0.6889015 #>  [445,] 0.72066372 1.1372543 1.1526840 1.3784006 1.4032559 1.4435323 1.4685195 #>  [446,] 0.29494627 0.4908543 0.5285195 0.5454685 0.6095364 0.6249305 0.6536594 #>  [447,] 0.26696688 0.3280245 0.4122485 0.5467515 0.5863365 0.6212628 0.7009006 #>  [448,] 0.33990439 0.5690106 0.6219553 0.6545304 0.6926802 0.7434842 0.7745760 #>  [449,] 0.39851130 0.4195596 0.4708999 0.5270582 0.5811551 0.5873751 0.6017170 #>  [450,] 0.71778199 0.8120697 0.8734399 0.9459144 1.0360072 1.1142678 1.2127122 #>  [451,] 0.36698784 0.4161450 0.4235667 0.4386634 0.4400732 0.5414899 0.5617640 #>  [452,] 0.49860506 0.5219261 0.5381232 0.5658614 0.5719688 0.5812226 0.6244559 #>  [453,] 0.36505302 0.5051657 0.5416974 0.6778864 0.6808825 0.6918394 0.7367405 #>  [454,] 0.64209695 0.9488147 0.9937368 1.0180048 1.0617918 1.0643605 1.1052793 #>  [455,] 0.25101781 0.4636864 0.5045057 0.5050632 0.6092720 0.6455000 0.6464288 #>  [456,] 0.43259054 0.5024104 0.5673928 0.7106365 0.7618563 0.7778157 0.8214624 #>  [457,] 1.12961638 1.1370649 1.1675897 1.2482656 1.2573681 1.2915782 1.3115281 #>  [458,] 0.37339010 0.4056082 0.4584894 0.4622060 0.4622633 0.4773555 0.5140424 #>  [459,] 0.26196962 0.4122485 0.5579497 0.5944970 0.6473970 0.7262998 0.7576818 #>  [460,] 0.39454511 0.4041288 0.6144810 0.6437408 0.7040211 0.7046721 0.7188454 #>  [461,] 0.86858825 0.9236158 0.9539834 0.9775381 1.0069936 1.0545872 1.0694827 #>  [462,] 0.39990449 0.4510731 0.5227902 0.6457495 0.6583305 0.7264045 0.7411037 #>  [463,] 0.47468287 0.5616476 0.6927280 0.7416938 0.9386714 1.0011659 1.0259728 #>  [464,] 0.46016289 0.4607834 0.6012504 0.6520735 0.6548458 0.6620778 0.6632656 #>  [465,] 0.54430549 0.5719688 0.6259202 0.6943049 0.7385187 0.7460877 0.7611627 #>  [466,] 0.23720811 0.3129677 0.5158001 0.5327009 0.5540150 0.5572000 0.5661889 #>  [467,] 0.52764726 0.5469820 0.5647797 0.6399943 0.6589147 0.6870262 0.6919212 #>  [468,] 0.20980380 0.4747861 0.5271823 0.5978165 0.5980485 0.6286165 0.6521300 #>  [469,] 0.59031631 0.6293143 0.6518384 0.6824855 0.6857754 0.6890613 0.6985484 #>  [470,] 0.46798824 0.5371804 0.5614989 0.6412421 0.6653937 0.6784941 0.7200307 #>  [471,] 0.36505302 0.6072976 0.6400683 0.7950699 0.8532582 0.8765400 0.8836145 #>  [472,] 1.11805281 1.2171591 1.3727678 1.3740761 1.4209244 1.4447352 1.5795618 #>  [473,] 0.45958409 0.5352144 0.5798787 0.6212628 0.6720307 0.6747242 0.6887081 #>  [474,] 0.37822349 0.4836759 0.5678296 0.5951794 0.6028357 0.6214700 0.6373871 #>  [475,] 0.61481173 0.7131172 0.7517835 0.7972062 0.8876436 0.9086254 0.9405890 #>  [476,] 0.36647783 0.3733667 0.4574392 0.4669581 0.5405047 0.5447925 0.5486134 #>  [477,] 0.34284742 0.4012362 0.5015441 0.5301140 0.5452762 0.5540150 0.5651927 #>  [478,] 0.55235930 0.7647210 0.7910172 0.8016673 0.8258368 0.8506542 0.8876436 #>  [479,] 0.38921125 0.4814746 0.4924790 0.5075870 0.5092561 0.5480593 0.5770645 #>  [480,] 0.88123207 0.9059293 0.9354895 0.9506760 0.9739210 1.0097415 1.0327862 #>  [481,] 0.53681030 0.5558487 0.5983288 0.6046628 0.6142014 0.6276968 0.6393650 #>  [482,] 0.50408728 0.7785748 0.8048321 0.8580110 0.8821391 1.0134900 1.0476797 #>  [483,] 0.44057014 0.5071092 0.5204527 0.5217665 0.5379373 0.5543603 0.5546492 #>  [484,] 1.00158566 1.0017344 1.0643605 1.2171591 1.2891563 1.2931492 1.3313436 #>  [485,] 1.32834709 1.5062825 1.5461665 1.5518466 1.5940506 1.6273846 1.6386717 #>  [486,] 0.32705586 0.3504339 0.3876624 0.5182924 0.5225816 0.5397655 0.5717547 #>  [487,] 0.39670913 0.4846364 0.5113669 0.5975140 0.6216532 0.6640844 0.6693715 #>  [488,] 0.36716585 0.4594424 0.5508018 0.5688372 0.6080317 0.6371378 0.6481640 #>  [489,] 0.73739405 0.7570874 0.7875496 0.8100386 0.8829397 0.9825671 0.9841249 #>  [490,] 0.71744784 0.8333091 0.8603835 1.0863215 1.1387800 1.1785436 1.1992047 #>  [491,] 0.41955962 0.5538457 0.6128479 0.6146990 0.6293182 0.6531785 0.7069496 #>  [492,] 0.63394915 0.8408762 0.9065163 0.9236007 1.0011335 1.0306334 1.0306832 #>  [493,] 0.25453567 0.3434633 0.3742838 0.4383179 0.5334734 0.5420630 0.6206188 #>  [494,] 0.81803279 0.8227797 0.9757636 1.0587874 1.1536937 1.2630534 1.2890414 #>  [495,] 0.16014993 0.4398644 0.4669581 0.4753609 0.5220528 0.5584276 0.5838668 #>  [496,] 0.42506341 0.4811697 0.5117378 0.5522722 0.5847000 0.5912340 0.5921766 #>  [497,] 0.19288743 0.3393032 0.4969016 0.5075870 0.5710594 0.5904165 0.6254161 #>  [498,] 0.42061834 0.4471321 0.4581654 0.4658369 0.5506028 0.5639902 0.5794772 #>  [499,] 0.48921577 0.5329739 0.6483485 0.7071608 0.7305583 0.7359016 0.7443719 #>  [500,] 0.20960184 0.3655663 0.4342033 0.5210948 0.5226389 0.5831282 0.5955551 #>  [501,] 0.58276132 0.6070150 0.6432988 0.6531840 0.6887515 0.7411037 0.7865063 #>  [502,] 0.34573049 0.5544052 0.7744858 0.7939964 0.7986825 1.0163685 1.0402634 #>  [503,] 0.62969324 0.6700800 0.6700851 0.7397941 0.7496581 0.7614651 0.7656048 #>  [504,] 0.20982553 0.3435311 0.4144581 0.4817517 0.4954289 0.5542908 0.5796125 #>  [505,] 0.50241038 0.8064214 0.8949962 0.9167826 0.9407548 1.0164989 1.0171247 #>  [506,] 0.37765477 0.6111957 0.6829451 0.6836048 0.7060853 0.7194863 0.7625370 #>  [507,] 0.40563294 0.4510731 0.4826466 0.5047928 0.5078874 0.5828988 0.5967834 #>  [508,] 0.58733111 0.7830391 0.8879664 0.8885784 0.9248007 0.9654814 0.9684916 #>  [509,] 0.65404540 0.8772445 1.0203879 1.0304288 1.1998357 1.2111164 1.2118778 #>  [510,] 0.58814422 0.6892676 0.7317890 0.8149273 0.8513076 0.8993138 1.0339658 #>  [511,] 0.44711753 0.5548278 0.6347901 0.7449053 0.7759195 0.7872549 0.7907612 #>  [512,] 0.66952218 0.9374889 1.0223485 1.0782240 1.2501223 1.3283471 1.3540338 #>  [513,] 0.46728726 0.4679016 0.5015441 0.5254017 0.6030349 0.6385402 0.6539961 #>  [514,] 0.51052630 1.0511741 1.0653288 1.0842686 1.5124731 1.5631276 1.6167518 #>  [515,] 0.38438837 0.3862080 0.4295961 0.5177307 0.5392872 0.5432989 0.6107593 #>  [516,] 0.28377264 0.3491254 0.4309275 0.4434852 0.5907376 0.6255652 0.6299959 #>  [517,] 0.55255973 0.5844737 0.6635854 0.6920508 0.6956324 0.8134489 0.8256635 #>  [518,] 0.26788514 0.3084837 0.3726395 0.4049337 0.4345793 0.4779277 0.4836311 #>  [519,] 0.43671283 0.5761876 0.6759101 0.8088253 0.8396699 0.8422906 0.8601510 #>  [520,] 0.51052630 0.8870147 1.1299711 1.2179665 1.3191652 1.3552927 1.4433552 #>  [521,] 0.47893892 0.5084009 0.5306383 0.5345058 0.5756507 0.6350200 0.6705916 #>  [522,] 0.54263202 0.5721241 0.7018410 0.7184377 0.8396699 0.8709620 0.8925648 #>  [523,] 0.18281592 0.2234278 0.2683841 0.3841143 0.3854955 0.4226194 0.4856564 #>  [524,] 0.40525845 0.4066970 0.5079276 0.5877957 0.6440993 0.6747700 0.6891212 #>  [525,] 0.53766889 0.5447925 0.6087061 0.6217055 0.6805800 0.6814748 0.6829287 #>  [526,] 0.19535376 0.4570846 0.5535726 0.5555443 0.5807264 0.5847000 0.5872283 #>  [527,] 0.28188314 0.3612852 0.3961048 0.4893128 0.5797022 0.5877114 0.5878473 #>  [528,] 0.30363638 0.6680670 0.7210750 0.7833433 0.7994509 0.8127525 0.9134551 #>  [529,] 0.63569918 0.9214980 0.9789550 0.9808607 1.0246017 1.0499927 1.1229011 #>  [530,] 0.42771459 0.4425397 0.5247837 0.7443579 0.8360395 0.8438707 0.8603678 #>  [531,] 0.58026267 0.7134583 0.7258054 0.7597830 0.7732631 0.8241470 0.8869676 #>  [532,] 0.59491097 0.7136334 0.7610219 0.7821707 0.8050951 0.8208786 0.8618307 #>  [533,] 0.75475552 0.7904515 0.8273957 0.8556217 0.9039286 0.9393918 1.0414663 #>  [534,] 0.85528852 1.0273125 1.0451009 1.0781285 1.1497484 1.3053227 1.3542409 #>  [535,] 0.31510343 0.3385405 0.4708999 0.4949582 0.4969016 0.5067766 0.5362056 #>  [536,] 0.62379616 0.6244377 0.6896777 0.7309662 0.7915333 0.8039785 0.8450823 #>  [537,] 0.26543053 0.3504339 0.4649020 0.4965939 0.5666115 0.5718722 0.5910454 #>  [538,] 0.46346556 0.5895559 0.6095364 0.6270753 0.6733112 0.6824687 0.7178341 #>  [539,] 0.56327470 0.6279511 0.6703241 0.6956158 0.7424707 0.7838361 0.7962565 #>  [540,] 0.34033823 0.3539966 0.4461287 0.5442725 0.6000609 0.7219722 0.7233742 #>  [541,] 0.46192708 0.5006761 0.5535218 0.5538413 0.6058482 0.6620778 0.7242167 #>  [542,] 0.33975661 0.3403909 0.3479886 0.4464783 0.4518522 0.4839650 0.4913737 #>  [543,] 0.48252559 0.5868544 0.6235017 0.7264119 0.7652112 0.8336275 0.8584838 #>  [544,] 0.31873090 0.5821041 0.6070852 0.6185207 0.6244377 0.6754991 0.6928087 #>  [545,] 0.24889478 0.2558082 0.3455390 0.3477581 0.3530980 0.4097020 0.4982746 #>  [546,] 0.43964273 0.5752049 0.7344506 0.7680721 0.7806130 0.7873159 0.8422349 #>  [547,] 0.44253970 0.5461082 0.5881722 0.5982193 0.6084827 0.6399898 0.6659103 #>  [548,] 0.43488335 0.4742866 0.4747861 0.5087197 0.5091996 0.5405765 0.5642181 #>  [549,] 0.43957055 0.4902168 0.6156628 0.6628912 0.6916926 0.6920331 0.7216523 #>  [550,] 0.53302390 0.5381196 0.5752049 0.6235017 0.6557787 0.6834518 0.7349764 #>  [551,] 0.42202232 0.4386634 0.4940497 0.5320239 0.5362102 0.5581556 0.5708257 #>  [552,] 0.31115613 0.4225037 0.5145809 0.6011797 0.6098932 0.6454253 0.6569495 #>  [553,] 0.38050807 0.8265324 1.0277710 1.0543291 1.1245325 1.1417880 1.1451411 #>  [554,] 0.37593277 0.4069951 0.4119948 0.4707401 0.5271823 0.5790031 0.5947521 #>  [555,] 0.28521473 0.4041288 0.4619435 0.5915177 0.5943454 0.6305835 0.6456550 #>  [556,] 0.25749760 0.3612852 0.3843884 0.4075329 0.4551387 0.5515600 0.5960255 #>  [557,] 0.43009513 0.8227797 0.8512885 0.8680714 0.8835717 0.9327094 0.9724523 #>  [558,] 0.31742985 0.3358533 0.5282036 0.6307500 0.7091748 0.7800463 0.8155593 #>  [559,] 0.41053580 0.4614939 0.5132506 0.7045745 0.8218847 0.8264431 0.8302853 #>  [560,] 0.44620046 0.4653505 0.5189969 0.5212454 0.5760130 0.5898575 0.5903163 #>  [561,] 0.43707021 0.4514660 0.4815369 0.5014979 0.6614885 0.6953869 0.7392990 #>  [562,] 0.47670608 0.5028548 0.5838671 0.6220900 0.6539961 0.7048878 0.7174050 #>  [563,] 0.35072537 0.3742838 0.4072999 0.4378748 0.4617118 0.4840192 0.5534697 #>  [564,] 0.68151317 0.7597830 0.9063272 0.9242252 0.9630420 1.0303947 1.0360255 #>  [565,] 0.67098741 0.7620850 1.0295519 1.1796167 1.2032695 1.2785653 1.3118653 #>  [566,] 0.50171032 0.5573292 0.5825320 0.7105983 0.7645798 0.7713851 0.8421018 #>  [567,] 0.46079415 0.5566775 0.6319398 0.6414727 0.7444130 0.7452614 0.8675782 #>  [568,] 0.33319120 0.4535334 0.4807716 0.5406285 0.6185207 0.6484782 0.6816639 #>  [569,] 0.40729100 0.6740682 0.7125686 0.7237886 0.7763194 0.7777615 0.7921344 #>  [570,] 0.84229061 0.8997376 1.0575520 1.0710004 1.1080226 1.1448950 1.1845801 #>  [571,] 0.27721605 0.4184677 0.4607479 0.4622187 0.4998213 0.5080604 0.5182109 #>  [572,] 0.94090929 0.9611168 1.3731521 1.5601685 1.5939428 1.6820532 1.7603286 #>  [573,] 0.47615293 0.4900370 0.5212454 0.5442931 0.5608717 0.5757150 0.6001123 #>  [574,] 0.48077163 0.5846161 0.5956066 0.6800513 0.6874242 0.7122104 0.7576073 #>  [575,] 0.39266834 0.5735809 0.5806861 0.5900303 0.6095741 0.6156993 0.6166085 #>  [576,] 0.39674701 0.4561151 0.6520322 0.6537989 0.6629655 0.6805048 0.7069665 #>  [577,] 0.49445957 0.7875279 0.8077191 0.8101745 0.8700997 0.8745405 0.8809935 #>  [578,] 0.28914846 0.4436147 0.4682357 0.4999863 0.5189969 0.5237745 0.5278448 #>  [579,] 0.31380463 0.3236918 0.3268730 0.5189829 0.5546290 0.5838030 0.6112952 #>  [580,] 0.47472873 0.5522977 0.5975380 0.6963016 0.7317890 0.7361239 0.8037882 #>  [581,] 0.21124649 0.2266351 0.2763607 0.3486246 0.5265109 0.6328678 0.6403524 #>  [582,] 0.62795109 0.7784450 0.8254375 0.8720300 0.9193644 0.9402179 0.9521054 #>  [583,] 1.05961976 1.4592162 1.6118438 1.6182882 1.6639436 1.8643759 1.9105788 #>  [584,] 0.34960277 0.4209269 0.4843287 0.4876900 0.5068976 0.5268324 0.5301210 #>  [585,] 0.46079415 0.4634656 0.4947795 0.5173176 0.5285195 0.7227748 0.7457790 #>  [586,] 0.39851130 0.5470884 0.5508018 0.5554960 0.5870870 0.5939235 0.5993518 #>  [587,] 0.33812527 0.4317234 0.4617648 0.4656422 0.4664346 0.4749248 0.6380000 #>  [588,] 0.40729100 0.4602935 0.5980335 0.6217055 0.7295960 0.7528837 0.7835055 #>  [589,] 0.30475084 0.4165541 0.5115099 0.5367385 0.5392618 0.5623338 0.5995552 #>  [590,] 0.50026970 0.6745728 0.7035001 0.7081544 0.7327431 0.7496581 0.7532641 #>  [591,] 1.21549906 1.2191802 1.2901404 1.5563206 1.5628778 1.5894611 1.7210608 #>  [592,] 0.28722475 0.6608533 0.6840759 0.7308091 0.7568162 0.7795475 0.7850111 #>  [593,] 0.36404055 0.5470486 0.5632747 0.5966750 0.6946511 0.7028411 0.7347877 #>  [594,] 0.44057014 0.4863745 0.6024117 0.6111957 0.6153522 0.7061855 0.7101676 #>  [595,] 0.28118810 0.3567762 0.4902168 0.6209494 0.6232062 0.6457887 0.6874831 #>  [596,] 0.67554068 0.6918394 0.7369660 0.7950699 0.8023595 0.8440645 0.8565205 #>  [597,] 0.41190035 0.4221506 0.5108248 0.5633109 0.5767713 0.6862288 0.6868793 #>  [598,] 0.53639584 0.6962197 0.8252937 0.8282837 0.9815427 0.9895039 1.0003176 #>  [599,] 0.36680880 0.5079783 0.5724919 0.6029549 0.6169264 0.6316524 0.6365758 #>  [600,] 0.55667751 0.6285890 0.6557455 0.6950994 0.7214868 0.7334251 0.7457790 #>  [601,] 0.33326742 0.3643136 0.4120318 0.6037330 0.6512204 0.7823605 0.7897404 #>  [602,] 0.21859488 0.3940282 0.4257137 0.4317234 0.4559134 0.4781327 0.4940497 #>  [603,] 0.50171032 0.5960744 0.7031575 0.8305991 0.8923929 1.0824188 1.1002209 #>  [604,] 0.38544054 0.4137836 0.5331646 0.7254038 0.8183492 0.8315565 0.8441008 #>  [605,] 0.54172599 0.6551075 0.6627545 0.7003597 0.7424698 0.7753200 0.8179165 #>  [606,] 0.45465776 0.5146761 0.5210948 0.5751024 0.5825604 0.5875768 0.5940476 #>  [607,] 0.38340173 0.4078833 0.5662271 0.5705576 0.5975380 0.6240301 0.6244858 #>  [608,] 0.46769567 0.5980335 0.6296932 0.6740976 0.7401678 0.7732782 0.7921344 #>  [609,] 0.27849319 0.3271763 0.3580451 0.4497314 0.4751895 0.5727461 0.6687584 #>  [610,] 0.24914027 0.2534978 0.4185520 0.4559134 0.6920324 0.7008506 0.7015410 #>  [611,] 0.37622373 0.5544864 0.5548453 0.5745148 0.5825320 0.5892134 0.6216652 #>  [612,] 0.55255973 0.6768889 0.7309658 0.7807334 0.8025961 0.9113977 0.9905154 #>  [613,] 0.39748199 0.4056087 0.4636864 0.4724690 0.5051226 0.5643980 0.6543615 #>  [614,] 0.43009513 0.7493803 0.7525002 0.7938614 0.8280624 0.8315936 0.8528772 #>  [615,] 0.31554798 0.4029335 0.4835528 0.5049055 0.5325657 0.5352303 0.6335507 #>  [616,] 0.22284742 0.6768889 0.6920508 0.7539979 0.8288154 0.8600973 0.8748785 #>  [617,] 0.35554374 0.4046266 0.4308969 0.4507971 0.4622060 0.4863194 0.5144965 #>  [618,] 0.36383781 0.3956653 0.4267778 0.4299539 0.4408476 0.5345058 0.5434328 #>  [619,] 0.49344103 0.6418595 0.7322493 0.7585986 0.7777980 0.7779701 0.7838357 #>  [620,] 0.80763383 1.8557416 1.9956001 2.0645754 2.1317405 2.2268627 2.2701737 #>  [621,] 0.12375203 0.3515013 0.4013319 0.4023278 0.5334018 0.5574679 0.5708003 #>  [622,] 0.52475573 0.5907793 0.5919416 0.6305835 0.6668973 0.6864425 0.7041329 #>  [623,] 0.37439868 0.4697231 0.7195372 0.8151726 0.9135208 1.0025208 1.0169035 #>  [624,] 0.12837489 0.3795566 0.4607143 0.6622321 0.7358869 0.7475916 0.7515105 #>  [625,] 0.16995777 0.3055381 0.4531120 0.4558835 0.4981975 0.4991794 0.6110892 #>  [626,] 0.69561581 0.7784450 0.8027924 0.8103112 0.8346813 0.9253037 0.9452359 #>  [627,] 0.24914027 0.3145368 0.3928674 0.3940282 0.5346643 0.5909703 0.5958582 #>  [628,] 0.69006511 0.7802883 1.0203326 1.1080661 1.1117692 1.1602874 1.1698968 #>  [629,] 0.58291040 0.5866434 0.6868311 0.6868793 0.7538990 0.7585087 0.8064365 #>  [630,] 0.60565355 0.7576818 0.8122208 0.8322399 0.8501526 0.9028040 0.9135208 #>  [631,] 0.11359717 0.3030565 0.4906669 0.5223439 0.5426320 0.5893636 0.5951794 #>  [632,] 0.41393251 0.5389210 0.5811551 0.5903866 0.6018976 0.6372420 0.6976082 #>  [633,] 0.39943757 0.4227277 0.4434754 0.5644673 0.5741500 0.6168214 0.6351735 #>  [634,] 0.36680880 0.5888893 0.6070056 0.6458551 0.6575052 0.6734881 0.6821834 #>  [635,] 0.94188409 0.9666734 0.9765003 0.9793820 1.0677083 1.1421535 1.1491493 #>  [636,] 0.19288743 0.3096857 0.3385405 0.5480593 0.6130872 0.6460126 0.6517638 #>  [637,] 0.46643451 0.4741572 0.4986051 0.5717691 0.5940967 0.6096674 0.6271519 #>  [638,] 0.46335363 0.5997026 0.6588484 0.8564403 0.9382412 0.9415699 0.9470994 #>  [639,] 0.47041032 0.4803919 0.6062864 0.6575740 0.6668958 0.7547039 0.7739393 #>  [640,] 0.95175682 1.1119293 1.1200459 1.1732212 1.2444198 1.2989555 1.3210900 #>  [641,] 0.39338453 0.3945451 0.5943454 0.6182957 0.7366615 0.7669739 0.7843605 #>  [642,] 0.18043277 0.3388260 0.3556370 0.3747355 0.4026917 0.4323992 0.4633834 #>  [643,] 0.52279017 0.6341595 0.7239903 0.7258548 0.7315123 0.7458077 0.8264105 #>  [644,] 0.65369666 0.7929609 0.8299257 0.9556732 1.0300805 1.0591529 1.1189463 #>  [645,] 0.23564857 0.7680721 0.9216183 0.9257875 0.9850306 1.0026715 1.1443257 #>  [646,] 0.74036380 0.8703055 0.9711881 1.0393152 1.0474662 1.0491804 1.1149489 #>  [647,] 1.17991515 1.2203719 1.2382236 1.3226715 1.3572321 1.3801018 1.4248045 #>  [648,] 0.40649348 0.4186607 0.4465046 0.4465304 0.4709872 0.5032291 0.5705358 #>  [649,] 0.56138023 0.5829104 0.5879754 0.5955892 0.6552358 0.6587561 0.6749280 #>  [650,] 0.50860399 0.5718532 0.5804936 0.6178190 0.6495610 0.6547691 0.6668563 #>  [651,] 0.45818834 0.5666115 0.5798158 0.6059207 0.6310901 0.7052543 0.7181420 #>  [652,] 0.22663512 0.2816996 0.3947054 0.5305791 0.6152782 0.7023592 0.7322724 #>  [653,] 0.29886887 0.4957409 0.5889871 0.5930243 0.7785089 0.7859797 0.8242243 #>  [654,] 1.07491189 1.6097061 1.8850641 1.8899946 1.8970599 2.0047658 2.0213316 #>  [655,] 0.20782382 0.3855977 0.4301267 0.4801766 0.5318058 0.5464541 0.5570314 #>  [656,] 0.35294051 0.7929609 0.8103998 0.8311678 0.9205605 0.9729191 1.0201371 #>  [657,] 0.28668129 0.3294818 0.4536983 0.4899602 0.5055112 0.5486533 0.5722813 #>  [658,] 0.46704788 0.6305870 0.6373526 0.6563081 0.6943841 0.7260388 0.7664188 #>  [659,] 0.69961385 0.8249571 0.8585254 0.9798977 0.9970985 1.0047267 1.0564757 #>  [660,] 0.76369217 0.7806130 0.9010435 1.0012230 1.0177235 1.0880261 1.1119293 #>  [661,] 0.69654505 1.0753259 1.1115315 1.2054244 1.2126852 1.2274088 1.2504831 #>  [662,] 0.46736591 0.4924790 0.6538958 0.6567905 0.6692078 0.6803498 0.6961429 #>  [663,] 0.87575168 0.9757636 1.2493815 1.3148733 1.3360772 1.3596440 1.4835410 #>  [664,] 0.16995777 0.3868288 0.4208719 0.4651742 0.5496965 0.5554960 0.5725207 #>  [665,] 0.52315189 0.5551711 0.6747018 0.7550090 0.7704517 0.7866818 0.8103468 #>  [666,] 0.50166006 0.7491920 0.8648411 0.9169359 0.9169413 0.9411291 0.9482515 #>  [667,] 0.28681060 0.5517463 0.7178341 0.7188598 0.7524170 0.8054647 0.8055153 #>  [668,] 0.34926588 0.3613317 0.3725310 0.4143939 0.4496195 0.5191279 0.5259788 #>  [669,] 0.46798824 0.6334577 0.6637689 0.7162701 0.7202959 0.7315114 0.8508941 #>  [670,] 0.46219357 0.5491598 0.6896948 0.7445003 0.7550561 0.8147069 0.8451966 #>  [671,] 0.85517119 0.8552885 0.9426159 1.1497131 1.1793580 1.2385113 1.2659672 #>  [672,] 0.58733111 1.0143137 1.0208235 1.1535801 1.1928930 1.1929747 1.2260836 #>  [673,] 0.37765477 0.5416974 0.6024117 0.6072976 0.6740742 0.6906126 0.7159683 #>  [674,] 0.40721913 0.5898203 0.5898404 0.6096744 0.6264174 0.6713909 0.7061063 #>  [675,] 0.23508044 0.5105063 0.7078225 0.7081544 0.7120420 0.7747678 0.7826531 #>  [676,] 0.28549287 0.4203467 0.5158364 0.6514801 0.6719416 0.6995110 0.7302568 #>  [677,] 0.38319187 0.4339920 0.4459813 0.5032291 0.5329786 0.5574679 0.5697645 #>  [678,] 0.50782887 0.5920800 0.6474351 0.6790267 0.7361239 0.7631834 0.8300163 #>  [679,] 0.18281592 0.2339212 0.3762196 0.4276652 0.4441278 0.4836311 0.4900791 #>  [680,] 0.30151798 0.3648517 0.4328555 0.4648281 0.5886462 0.6307811 0.6331562 #>  [681,] 0.58811662 0.6531628 0.6718171 0.7247702 0.7680013 0.7945502 0.7946076 #>  [682,] 0.26365450 0.4369873 0.4418370 0.5094956 0.5902755 0.6417283 0.6463035 #>  [683,] 0.49677274 0.5060128 0.5807264 0.6190692 0.6279238 0.6415491 0.6567649 #>  [684,] 0.33059219 0.4718007 0.6179011 0.6639133 0.7316372 0.7503646 0.7517835 #>  [685,] 0.59843551 0.6893935 0.6962197 0.7614314 0.7700083 0.8683307 0.9660776 #>  [686,] 0.50948408 0.5612099 0.6997384 0.7089006 0.8694521 0.8874739 0.9056858 #>  [687,] 0.46071432 0.4877341 0.5022323 0.5264048 0.5683373 0.5845160 0.6226629 #>  [688,] 0.33189196 0.5293930 0.6276845 0.7061063 0.7404803 0.7817318 0.8116633 #>  [689,] 0.28440785 0.3278204 0.4454455 0.4983992 0.5039747 0.5529627 0.5797504 #>  [690,] 0.42378175 0.5864847 0.6365758 0.6821834 0.6932559 0.7400450 0.7827815 #>  [691,] 0.44711753 0.6026440 0.7243470 0.7273069 0.7648659 0.8291232 0.8315172 #>  [692,] 0.51258840 0.6553309 0.7503646 0.7842003 0.8494493 0.8709092 0.9190072 #>  [693,] 0.61307265 0.8972240 0.9095172 0.9110248 0.9331939 1.0460484 1.0984701 #>  [694,] 0.20982553 0.4130786 0.4430598 0.4611559 0.5605438 0.5651887 0.6058852 #>  [695,] 0.38896431 0.4468533 0.4877662 0.5543603 0.6153522 0.6475306 0.6829451 #>  [696,] 0.44412161 0.4884607 0.5769004 0.5931116 0.6584124 0.6857772 0.7585644 #>  [697,] 0.28799904 0.3240801 0.3262106 0.4407859 0.4755262 0.4896835 0.5140096 #>  [698,] 0.30327634 0.3251016 0.4133151 0.4143939 0.4729254 0.4764561 0.4911797 #>  [699,] 1.01395420 1.0151866 1.0803367 1.0986768 1.1195126 1.1466050 1.1646566 #>  [700,] 0.45215305 0.5424020 0.6920331 0.7526179 0.7786115 0.8345996 0.8427412 #>  [701,] 0.61481173 0.8084518 0.8317355 0.8506542 0.8972240 0.9948659 1.0133222 #>  [702,] 0.82665201 0.9501697 1.0426136 1.0977243 1.1842138 1.2204736 1.2668233 #>  [703,] 0.30564333 0.3887733 0.4601007 0.4878174 0.4909689 0.4992987 0.6525142 #>  [704,] 0.29744052 0.5125067 0.5381232 0.5443055 0.6703188 0.6833543 0.7530257 #>  [705,] 0.15769164 0.3034931 0.3520583 0.3746150 0.3876266 0.4026917 0.4319322 #>  [706,] 0.33565256 0.4369873 0.6684247 0.7173051 0.7695362 0.7901977 0.8398114 #>  [707,] 0.41977673 0.4530110 0.4710495 0.5250539 0.5486948 0.5840921 0.5915177 #>  [708,] 0.47377890 0.5624065 0.6029504 0.6058852 0.6285890 0.6808825 0.7807427 #>  [709,] 0.65958560 0.7089006 0.7627432 0.7963954 0.8502715 0.9585266 0.9606572 #>  [710,] 0.60708516 0.6237962 0.7789442 0.8335510 0.8369126 0.8519114 0.8523271 #>  [711,] 0.52037949 0.7529586 0.7919324 0.7927653 0.8821391 0.9046037 1.0364229 #>  [712,] 0.36792031 0.4682357 0.5212561 0.5294099 0.5720700 0.5812901 0.5825604 #>  [713,] 0.33037656 0.3927341 0.4155196 0.4466745 0.5033385 0.5459196 0.5856549 #>  [714,] 0.31554798 0.3889872 0.4669543 0.5204605 0.5572000 0.5651927 0.5702654 #>  [715,] 0.55732920 0.7031575 0.7207068 0.7589156 0.8523305 0.9156718 0.9388800 #>  [716,] 0.88959698 0.8955001 0.8997376 1.1394155 1.1413808 1.1557344 1.2310329 #>  [717,] 0.50948408 0.6595856 0.7185265 0.7622208 0.8311678 0.8346813 0.8349974 #>  [718,] 0.28108835 0.4561151 0.4781734 0.4844557 0.4909689 0.5739035 0.6684811 #>  [719,] 0.16134035 0.4488623 0.4780329 0.5614989 0.5940476 0.5975074 0.6223371 #>  [720,] 0.41426184 0.4563997 0.4866431 0.4981975 0.5496965 0.5819934 0.6219415 #>  [721,] 0.40802838 0.4702298 0.5278690 0.5334158 0.5767169 0.6045640 0.6674684 #>  [722,] 0.40964531 0.6774283 0.7627432 0.8477052 0.8605129 0.8878779 0.9135945 #>  [723,] 0.18043277 0.2680008 0.3674945 0.3746150 0.4337002 0.4465576 0.5182109 #>  [724,] 0.57521757 0.6700800 0.6715721 0.6940367 0.7401678 0.8315171 0.8331509 #>  [725,] 0.21533387 0.5045057 0.5350748 0.5723457 0.6070056 0.6176878 0.6264174 #>  [726,] 0.53962385 0.6053624 0.6178353 0.6486808 0.8568543 0.8709802 0.9405977 #>  [727,] 0.48463641 0.4944006 0.5424020 0.5520271 0.5816493 0.6224041 0.6244559 #>  [728,] 0.22342785 0.2529877 0.3123021 0.3371686 0.3431172 0.3679355 0.3762196 #>  [729,] 0.36517170 0.4899108 0.5462269 0.6895957 0.7726125 0.8124694 0.8231819 #>  [730,] 1.14756420 1.1571898 1.1703173 1.1799151 1.2391901 1.3018163 1.3228671 #>  [731,] 0.46121460 0.4673659 0.5092561 0.5885112 0.6748694 0.7003966 0.7049422 #>  [732,] 0.50491941 0.6003189 0.7050416 0.7127812 0.7307608 0.7715604 0.7839922 #>  [733,] 0.36853468 0.6022527 0.7647210 0.7838357 0.7920667 0.9472826 0.9809014 #>  [734,] 0.47377890 0.5051657 0.5884200 0.5909976 0.6400683 0.6773294 0.6834370 #>  [735,] 0.37397630 0.3888182 0.4171372 0.4548507 0.4574392 0.4858622 0.5283835 #>  [736,] 0.48252559 0.5290964 0.5956711 0.6845704 0.7694528 0.7856264 0.8313498 #>  [737,] 0.50085504 0.5158364 0.5669516 0.7050987 0.7136334 0.7327252 0.7345531 #>  [738,] 0.16050213 0.3578091 0.5172332 0.5882496 0.5895047 0.6487580 0.6608533 #>  [739,] 0.35639677 0.4452260 0.4570841 0.4627231 0.5046647 0.5278338 0.5443995 #>  [740,] 0.99816186 1.0364828 1.2644300 1.2753671 1.3093391 1.3264925 1.3331607 #>  [741,] 0.37524027 0.3926683 0.4131086 0.4162990 0.4546578 0.5476437 0.5842028 #>  [742,] 0.58851124 0.6567905 0.7610219 0.7872766 0.8066962 0.8280624 0.8578039 #>  [743,] 0.29851308 0.6774500 0.6896948 0.6906037 0.8493232 0.9289956 0.9502703 #>  [744,] 0.36133165 0.4126856 0.4897581 0.4911797 0.5870870 0.6474020 0.6678258 #>  [745,] 0.25298771 0.3555866 0.3841143 0.4047243 0.4115707 0.4717604 0.5017379 #>  [746,] 0.35992733 0.4139325 0.4389775 0.4735924 0.4876900 0.5270582 0.5362056 #>  [747,] 0.32376443 0.3955207 0.4393937 0.5417260 0.5886462 0.5976625 0.6423745 #>  [748,] 0.94709937 1.1537940 1.1680670 1.1812702 1.1867130 1.2171471 1.2274151 #>  [749,] 0.54299139 0.5864847 0.5866434 0.6113722 0.6595900 0.6749280 0.7097019 #>  [750,] 0.22137137 0.3124898 0.3742749 0.4601853 0.4633834 0.4913737 0.5062901 #>  [751,] 0.17207826 0.2120765 0.3578091 0.3669878 0.4656422 0.4932327 0.5220067 #>  [752,] 0.63569918 0.8282837 1.0136024 1.0395007 1.0826646 1.0993742 1.1884255 #>  [753,] 0.48650475 0.5169629 0.6224250 0.6234626 0.6468642 0.6511222 0.6584631 #>  [754,] 0.50099215 0.5049194 0.5766021 0.5778082 0.5983288 0.6058482 0.6555066 #>  [755,] 0.42844452 0.4443866 0.4575019 0.4714525 0.5112900 0.5486533 0.5553926 #>  [756,] 0.57515417 0.6414727 0.6773294 0.7922262 0.8057577 0.9014663 0.9044110 #>  [757,] 0.42959611 0.4391167 0.4551387 0.5412543 0.5705732 0.5848108 0.5916654 #>  [758,] 0.46121460 0.6026440 0.6311903 0.7096872 0.7462503 0.7585383 0.7608344 #>  [759,] 0.30968567 0.3151034 0.3393032 0.3733667 0.5449679 0.6194249 0.6349646 #>  [760,] 0.33922948 0.8486058 1.0539806 1.0840044 1.0990160 1.1535801 1.1953442 #>  [761,] 0.29628489 0.4196547 0.4406478 0.4410567 0.4436147 0.4951806 0.5055477 #>  [762,] 0.28750470 0.3431172 0.3549814 0.3555866 0.3698594 0.5222038 0.5248498 #>  [763,] 0.73224933 0.8281980 0.8846691 0.9553937 0.9641909 1.0718283 1.1015483 #>  [764,] 0.23473970 0.4960497 0.5405021 0.5432989 0.5503144 0.5507662 0.6287790 #>  [765,] 0.24882399 0.5017959 0.5372548 0.5642029 0.5708003 0.5793842 0.5969777 #>  [766,] 0.37680322 0.4540824 0.4627231 0.5468183 0.5985708 0.6631229 0.6695222 #>  [767,] 0.51227141 0.6671868 0.6683235 0.7784859 0.8194962 0.8226604 0.9021748 #>  [768,] 0.65875615 0.7585087 0.8790062 0.9918203 1.0000432 1.0009030 1.0216670 #>  [769,] 0.48776621 0.6740742 0.6836048 0.7327708 0.7367405 0.7571659 0.7765947 #>  [770,] 0.93754031 0.9387564 0.9966937 1.0315134 1.0747398 1.1336681 1.1473569 #>  [771,] 0.57412781 0.5932841 0.6693269 0.6763387 0.7077863 0.7172212 0.7347877 #>  [772,] 0.65973257 0.8205107 0.8251029 0.9162753 0.9193938 0.9227313 0.9255661 #>  [773,] 0.49808662 0.5031119 0.6708969 0.6926802 0.7865063 0.8740720 0.9661504 #>  [774,] 0.25985954 0.5501299 0.5538457 0.5696619 0.5912340 0.6087061 0.6209494 #>  [775,] 0.89077851 1.0300805 1.1802371 1.1808918 1.2709135 1.3289543 1.3669399 #>  [776,] 0.19509103 0.2964680 0.5226389 0.5268324 0.5352234 0.5508552 0.5838274 #>  [777,] 0.14516589 0.2129108 0.5232472 0.5618374 0.5691169 0.6265360 0.6416663 #>  [778,] 0.48933558 0.5071746 0.6985484 0.7271169 0.7488392 0.7690828 0.7817214 #>  [779,] 0.41958747 0.4570841 0.4617118 0.4729254 0.4843009 0.4870401 0.5420630 #>  [780,] 0.41042123 0.5789882 0.6889414 0.7592221 0.7907522 0.8536506 0.8816548 #>  [781,] 0.23121203 0.4893356 0.5145809 0.5271044 0.5340398 0.5633109 0.5682191 #>  [782,] 0.21841743 0.3162752 0.3330399 0.3385177 0.3471771 0.4093885 0.4407859 #>  [783,] 1.14607135 1.3374050 1.3424906 1.3651464 1.4493132 1.4621126 1.5402154 #>  [784,] 0.64875797 0.7054005 0.7182408 0.7891259 0.8234780 0.8441008 0.9211470 #>  [785,] 0.44192505 0.4471321 0.4952305 0.5313848 0.5937591 0.6417283 0.6421444 #>  [786,] 0.42232518 0.4803919 0.5794849 0.5970965 0.6028357 0.6764868 0.6950970 #>  [787,] 0.41426184 0.4435590 0.4558835 0.4651742 0.5691169 0.5776940 0.5943416 #>  [788,] 0.37604114 0.4144581 0.4376785 0.4611559 0.5349812 0.5461082 0.6454679 #>  [789,] 0.44412161 0.6166085 0.6301520 0.6862288 0.6884159 0.7098378 0.7684565 #>  [790,] 0.83821686 0.8904497 0.8994715 0.9189496 0.9561752 0.9976013 1.0261720 #>  [791,] 0.48684584 0.9492595 0.9621356 1.0508744 1.0929549 1.1401203 1.1868963 #>  [792,] 0.32819920 0.5002697 0.5105063 0.5365833 0.5765737 0.7222883 0.8298920 #>  [793,] 0.33922948 0.8676363 0.8928365 0.9719517 0.9761170 1.1610808 1.1911953 #>  [794,] 0.44718449 0.6089716 0.7580478 0.8135556 0.8443778 0.9110049 0.9536418 #>  [795,] 0.60088697 0.6482905 0.9040925 0.9998295 1.0757045 1.1023176 1.1344880 #>  [796,] 0.32626314 0.7350940 0.7356073 0.7607860 0.7703441 0.8069060 0.8762774 #>  [797,] 0.44984664 0.5250539 0.5368103 0.5710594 0.6049998 0.6134996 0.6347260 #>  [798,] 0.60314710 0.8799143 0.9769758 1.0102861 1.0360255 1.0506727 1.0721365 #>  [799,] 0.38185184 0.4877367 0.5233809 0.5409470 0.5821041 0.6549668 0.6825263 #>  [800,] 0.44388808 0.4773359 0.5232472 0.5554161 0.6463815 0.6707124 0.6869204 #>  [801,] 0.32959079 0.3397566 0.4211150 0.4597564 0.4624133 0.4789620 0.4815162 #>  [802,] 0.36853468 0.5523593 0.8003063 0.8365331 0.8519950 0.9566152 0.9583544 #>  [803,] 0.44305981 0.4922397 0.5064498 0.5624065 0.5883900 0.5899699 0.6449508 #>  [804,] 0.44418763 0.5958914 0.6943906 0.7019960 0.7911999 0.7920667 0.8095809 #>  [805,] 0.33590663 0.3905750 0.4992987 0.5068976 0.5627223 0.5819155 0.5957725 #>  [806,] 0.27358204 0.3949879 0.5564693 0.5838671 0.6030349 0.6759101 0.7739393 #>  [807,] 0.44283665 0.4466745 0.4479339 0.5271044 0.5881722 0.6235993 0.6293143 #>  [808,] 0.25503978 0.5031119 0.5690106 0.8340820 0.9159025 0.9320445 0.9612833 #>  [809,] 0.86044713 0.8871281 0.9571213 1.0564114 1.1159355 1.1392435 1.1405368 #>  [810,] 0.24271598 0.2678851 0.4441278 0.4957853 0.4970024 0.5044149 0.5180142 #>  [811,] 0.35617649 0.3979435 0.4056082 0.5848108 0.6015554 0.6421035 0.6684482 #>  [812,] 0.25749760 0.2818831 0.3862080 0.4303934 0.5412543 0.5783331 0.6064729 #>  [813,] 0.44967777 0.4880386 0.5197775 0.5948766 0.6647489 0.6759005 0.7003217 #>  [814,] 0.37094983 0.4438881 0.4563997 0.5131704 0.5752176 0.6076833 0.6308001 #>  [815,] 0.28722475 0.5882496 0.6620058 0.7244731 0.7837754 0.7940574 0.8199901 #>  [816,] 0.73277083 0.8214695 0.9078917 0.9895605 1.0273050 1.0295519 1.0460264 #>  [817,] 1.35797446 1.8223893 1.8485440 2.0470618 2.0714489 2.0896868 2.0968717 #>  [818,] 1.24537585 1.3017445 1.4117175 1.4142829 1.5036439 1.5329230 1.5367210 #>  [819,] 0.98397504 1.2133286 1.2937544 1.4321133 1.4856234 1.5088306 1.6031647 #>  [820,] 0.53012100 0.5631329 0.5756282 0.5791274 0.5909703 0.6042039 0.6104013 #>  [821,] 0.25101781 0.4306196 0.4761529 0.5051226 0.5134156 0.5136822 0.5846346 #>  [822,] 0.42171327 0.4570846 0.5023443 0.5161321 0.5639050 0.5689258 0.5759063 #>  [823,] 0.69035561 1.0612892 1.0834663 1.1066053 1.1148587 1.1648739 1.1803187 #>  [824,] 0.45927852 0.5086040 0.5274687 0.6018728 0.6288838 0.6567453 0.6877980 #>  [825,] 0.38929685 0.5266811 0.5958786 0.6712649 0.7622208 0.7772050 0.8103998 #>  [826,] 0.38501607 0.4215858 0.4408476 0.5306383 0.5539076 0.5610539 0.5885150 #>  [827,] 0.39990449 0.4056329 0.5719033 0.5746804 0.6219553 0.6375756 0.6680155 #>  [828,] 0.40349444 0.6037330 0.6236100 0.6995973 0.7045745 0.7088456 0.7693384 #>  [829,] 0.32687300 0.4500983 0.4788410 0.5708165 0.5793842 0.6111120 0.6144409 #>  [830,] 0.39610485 0.4075329 0.4303934 0.4391167 0.6107593 0.7260487 0.7531560 #>  [831,] 0.32510162 0.3725310 0.4126856 0.4283814 0.4508749 0.4840192 0.5620432 #>  [832,] 0.42890891 0.5609688 0.6695222 0.7570874 0.8200808 0.8404936 0.8598013 #>  [833,] 0.34899503 0.4529902 0.4619435 0.5840921 0.5919416 0.5967695 0.6134996 #>  [834,] 0.68706811 0.7875279 0.9915688 1.0596198 1.1135773 1.1148910 1.1492239 #>  [835,] 0.59848623 0.7491920 0.8399513 0.8700997 0.8930580 0.9039286 0.9213796 #>  [836,] 0.73910029 0.8907785 0.9838682 0.9929719 1.0013123 1.0360280 1.0719798 #>  [837,] 0.34116322 0.4844138 0.5759063 0.7366179 0.8054520 0.8173197 0.8291923 #>  [838,] 0.91446755 0.9497892 1.0190296 1.1079818 1.1135605 1.1183653 1.1284739 #>  [839,] 0.74387413 0.7547555 0.7715604 0.7816646 0.8547887 0.8619213 0.9184581 #>  [840,] 0.42640605 0.4865047 0.5392872 0.5853118 0.6015151 0.6404863 0.6799009 #>  [841,] 0.39943757 0.4434764 0.5014979 0.5346121 0.5835737 0.6777206 0.6928583 #>  [842,] 0.30363638 0.5641919 0.6327017 0.7344816 0.7791528 0.7985903 0.8388781 #>  [843,] 0.52045273 0.6011797 0.6358279 0.6421444 0.6454679 0.6778864 0.6787869 #>  [844,] 0.87282834 0.9448894 1.0664821 1.0863215 1.1400187 1.1607855 1.1844837 #>  [845,] 0.42640605 0.4573338 0.6179011 0.6553309 0.6588897 0.6963417 0.8152690 #>  [846,] 0.71824081 0.7250455 0.7714466 0.8025059 0.8426518 0.9854941 0.9883192 #>  [847,] 0.69842241 0.7822219 0.8266520 0.9486123 0.9646230 0.9728410 0.9952768 #>  [848,] 0.46219357 0.5055112 0.5078874 0.6200076 0.6545304 0.6579557 0.6583305 #>  [849,] 0.40964531 0.6152722 0.6281038 0.6647665 0.6712649 0.7092113 0.7540683 #>  [850,] 0.84916212 0.8870147 1.0653288 1.0876961 1.1485819 1.2170216 1.2212735 #>  [851,] 0.26696688 0.4318312 0.4864702 0.4875303 0.5944970 0.6674738 0.6818602 #>  [852,] 0.30496012 0.4586064 0.4622187 0.4698492 0.4714819 0.5157022 0.5786397 #>  [853,] 0.46769567 0.5376689 0.6833672 0.7062951 0.7231431 0.7269833 0.7401133 #>  [854,] 0.40349444 0.4105358 0.4809154 0.5507866 0.7510384 0.9410592 0.9743465 #>  [855,] 0.41490636 0.5386647 0.9023049 0.9085558 0.9226681 0.9396840 0.9714817 #>  [856,] 1.07147805 1.1819516 1.2023195 1.2724327 1.3082884 1.3959294 1.4241834 #>  [857,] 0.36144350 0.4810102 0.5282036 0.5789882 0.6675085 0.7488887 0.8008544 #>  [858,] 0.60347276 0.6420969 0.8711590 0.8885784 0.9796254 1.0037864 1.1569717 #>  [859,] 1.00913453 1.3675456 1.4461188 1.7329697 1.7735089 1.7924972 1.8068779 #>  [860,] 0.47469996 0.4781734 0.4878174 0.5457833 0.5548285 0.5985708 0.6288838 #>  [861,] 0.63905948 0.6625068 0.7263897 0.7344319 0.7651101 0.8495449 0.8895670 #>  [862,] 0.37094983 0.4866431 0.6940367 0.7525002 0.7672780 0.7869426 0.7946329 #>  [863,] 0.30446494 0.3435311 0.4130786 0.4142646 0.4836759 0.4922397 0.5203389 #>  [864,] 0.96985296 1.0290343 1.0646306 1.1834378 1.2164240 1.2649172 1.3144142 #>  [865,] 0.29744052 0.5091564 0.7000461 0.7401040 0.7460877 0.7803615 0.8195046 #>  [866,] 0.36050552 0.4165541 0.6413716 0.6600387 0.6822544 0.7071608 0.7141155 #>  [867,] 0.28118810 0.4395706 0.5617640 0.5761536 0.5925554 0.6127899 0.6132070 #>  [868,] 0.57187217 0.5907534 0.6155954 0.6224184 0.6534340 0.6586594 0.6853632 #>  [869,] 0.44521327 0.6486808 0.8141851 0.8914630 0.9259424 0.9391875 0.9446972 #>  [870,] 0.56120989 0.5910634 0.6018728 0.7433273 0.8662543 0.8983705 0.9029490 #>  [871,] 0.33037656 0.4376785 0.4470634 0.4505095 0.4719907 0.4954289 0.5203389 #>  [872,] 0.26196962 0.5593362 0.5863365 0.6584124 0.7098378 0.7487692 0.7575716 #>  [873,] 0.46016289 0.4619271 0.5778082 0.6003189 0.6594901 0.6837672 0.7197496 #>  [874,] 0.90951719 0.9673147 1.0133222 1.0259828 1.0369940 1.1058378 1.1180528 #>  [875,] 0.45369832 0.5491598 0.6200076 0.6775299 0.7040612 0.7125686 0.7168076 #>  [876,] 0.35399658 0.5190743 0.5536029 0.5549656 0.5620432 0.6474020 0.6729270 #>  [877,] 0.59089854 0.7077863 0.7651101 0.7824549 0.7825997 0.8493826 0.9253037 #>  [878,] 0.59982010 0.6594019 0.6889414 0.7807639 0.8262158 0.8265838 0.9594990 #>  [879,] 0.32156118 0.4365811 0.6095757 0.6335677 0.6531987 0.7263897 0.8493826 #>  [880,] 0.20782382 0.3868366 0.3871848 0.4144888 0.4162789 0.4212120 0.4909234 #>  [881,] 0.21859488 0.3145368 0.4185520 0.4220223 0.4692526 0.4749248 0.5262038 #>  [882,] 0.48252582 0.5381196 0.6113035 0.6244858 0.6493120 0.7627658 0.7844561 #>  [883,] 0.27950102 0.3030565 0.3044649 0.3782235 0.5064498 0.5534508 0.5542908 #>  [884,] 0.50408728 0.8180328 0.9232249 1.0868958 1.2469214 1.2493815 1.2528287 #>  [885,] 0.31363201 0.5122375 0.5932841 0.6531987 0.6682977 0.6877980 0.7426291 #>  [886,] 0.63262786 0.6837815 0.6943841 0.6971334 0.7049766 0.7529380 0.7620441 #>  [887,] 0.30691569 0.4169202 0.5507930 0.5577622 0.5780520 0.5786397 0.5790163 #>  [888,] 0.33140553 0.4960071 0.6582107 0.6750403 0.7245222 0.7358582 0.7510384 #>  [889,] 0.69842241 0.7224130 0.8061161 0.8107471 0.8573232 0.9075078 0.9934351 #>  [890,] 0.27358204 0.4367128 0.5103564 0.6220900 0.6302793 0.6385402 0.6950970 #>  [891,] 0.27383155 0.3974820 0.4490162 0.4742866 0.5050632 0.5134156 0.5587041 #>  [892,] 0.32566064 0.3850161 0.4267778 0.4464301 0.4789389 0.4802889 0.5377368 #>  [893,] 0.28371389 0.4365811 0.6279771 0.7030402 0.7644150 0.8294662 0.8495449 #>  [894,] 0.74403048 0.9459707 0.9571213 1.0128743 1.0259828 1.0689474 1.1196507 #>  [895,] 0.11359717 0.2795010 0.5472841 0.5513488 0.5678296 0.5721241 0.6270753 #>  [896,] 0.60412752 0.6142873 0.7059181 0.8917247 0.8957079 0.8974778 0.9259943 #>  [897,] 0.28685918 0.4581654 0.5313848 0.6171834 0.6680670 0.7300250 0.7509641 #>  [898,] 0.45194528 0.4653647 0.5366353 0.5902755 0.5979243 0.6003268 0.6440921 #>  [899,] 0.35725238 0.3870968 0.4434852 0.5231519 0.6097190 0.6624095 0.6737993 #>  [900,] 0.46839281 0.5844737 0.6271535 0.6678949 0.6965341 0.7136381 0.7170192 #>  [901,] 0.28681060 0.5095162 0.5584346 0.6249305 0.6603558 0.6742619 0.6974259 #>  [902,] 0.57412781 0.5845160 0.6022443 0.6328937 0.6363978 0.6674517 0.6835084 #>  [903,] 0.23684421 0.4826466 0.5719033 0.5789390 0.6131027 0.6331514 0.6432988 #>  [904,] 0.30476976 0.4237538 0.4352032 0.4459813 0.4709872 0.4880386 0.5039747 #>  [905,] 0.31873090 0.4419531 0.4535334 0.6825263 0.7227211 0.7264842 0.7309662 #>  [906,] 0.71131015 0.8689739 0.9264546 0.9409093 1.0459977 1.1316729 1.2651785 #>  [907,] 0.57249186 0.5743819 0.6575052 0.8232093 0.8666037 0.9157113 0.9614144 #>  [908,] 0.38799614 0.4416617 0.5570175 0.6585769 0.6595050 0.6849994 0.7083699 #>  [909,] 0.22137137 0.3034931 0.3250740 0.3351800 0.3479886 0.3747355 0.3999034 #>  [910,] 0.38929685 0.6818377 0.7288509 0.7364304 0.7391003 0.8240639 0.8592038 #>  [911,] 0.22072346 0.4131086 0.4643884 0.4738184 0.5146761 0.6207131 0.6727423 #>  [912,] 0.24882399 0.3823469 0.5234763 0.5417757 0.6001916 0.6567453 0.6646787 #>  [913,] 0.63493185 0.8330833 0.8354870 0.8621972 0.9023487 0.9056709 0.9071065 #>  [914,] 0.21433680 0.4180566 0.4464783 0.4540059 0.4597564 0.4833346 0.4895333 #>  [915,] 0.46078342 0.5112114 0.5679654 0.6107480 0.6251621 0.6532692 0.6678949 #>  [916,] 0.24260473 0.3262106 0.4564590 0.4639986 0.4940311 0.5057200 0.5488088 #>  [917,] 0.30771307 0.4227277 0.5346121 0.5877957 0.6105288 0.6699941 0.7008852 #>  [918,] 0.60314710 0.9119678 1.0569085 1.1303221 1.1497484 1.1774648 1.2132499 #>  [919,] 0.88502691 0.9216183 0.9986666 1.0176177 1.1457600 1.1779164 1.1966136 #>  [920,] 0.33590663 0.4113216 0.4535171 0.4640404 0.4793757 0.4893941 0.4972959 #>  [921,] 0.27721605 0.3311948 0.3698705 0.4007951 0.4698492 0.4797779 0.4908808 #>  [922,] 0.54357256 0.6669286 0.6740654 0.6754991 0.7443659 0.8298920 0.8530526 #>  [923,] 0.28440785 0.3340730 0.4494832 0.5092766 0.5776136 0.5998838 0.6221928 #>  [924,] 0.37439868 0.4719867 0.7061063 0.8501526 0.8580390 0.9357808 0.9538873 #>  [925,] 0.13991958 0.4221506 0.4592844 0.4952925 0.5058168 0.5237745 0.5516148 #>  [926,] 0.43335803 0.6095757 0.6594019 0.7238023 0.7344319 0.7398278 0.7592221 #>  [927,] 0.42890891 0.7136381 0.7329443 0.7515093 0.7875496 0.8086032 0.8258585 #>  [928,] 0.35142007 0.4142646 0.4626483 0.4817517 0.4841548 0.5238762 0.5244533 #>  [929,] 0.33743862 0.3515013 0.3561715 0.3785236 0.4974467 0.5005002 0.6672212 #>  [930,] 0.65539441 0.6792799 0.6833543 0.8069866 0.8346281 0.8553686 0.9264546 #>  [931,] 0.39072775 0.5956711 0.7101816 0.8455581 0.9065052 0.9541452 0.9674099 #>  [932,] 1.22556143 1.3053793 1.3103346 1.3250865 1.3262588 1.4321133 1.4503134 #>  [933,] 0.26352199 0.3248948 0.3455390 0.4256093 0.4356705 0.4506516 0.4773555 #>  [934,] 0.50266091 0.6370650 0.6572769 0.6582107 0.7060196 0.7210846 0.8037557 #>  [935,] 0.43707021 0.4434764 0.5240073 0.5415121 0.5928056 0.6168214 0.6309267 #>  [936,] 0.57438185 0.6029549 0.6458551 0.6484958 0.8264431 0.8790501 0.9357808 #>  [937,] 0.68185937 0.6820272 0.7180824 0.7480890 0.7713851 0.7837119 0.8118746 #>  [938,] 0.28549287 0.3717182 0.5669516 0.6499447 0.6747704 0.6982478 0.8509299 #>  [939,] 0.66223206 0.6776837 0.6850668 0.8008544 0.8017759 0.8117046 0.8265838 #>  [940,] 0.58026267 0.7205935 0.8265324 0.8804725 0.9929059 0.9992931 1.0207735 #>  [941,] 0.33407304 0.4507971 0.4993979 0.5530965 0.5534048 0.5790163 0.5797504 #>  [942,] 0.45215305 0.4944006 0.6045440 0.6804086 0.7611627 0.8652673 0.8819336 #>  [943,] 0.21533387 0.5258769 0.5278448 0.5318145 0.5888893 0.6096744 0.6169264 #>  [944,] 0.18430686 0.3752315 0.5799178 0.6870262 0.7325672 0.7829143 0.7851369 #>  [945,] 0.97231225 1.1800142 1.2392773 1.2617010 1.2891563 1.3727678 1.3789468 #>  [946,] 0.18430686 0.4242664 0.6246688 0.7277010 0.8281175 0.8365911 0.8458088 #>  [947,] 0.30976908 0.5122714 0.6422166 0.7259945 0.7262890 0.8548244 0.9294417 #>  [948,] 0.42278594 0.4773653 0.5532899 0.6397244 0.7287521 0.8299257 0.8484287 #>  [949,] 0.36716585 0.4074899 0.4595841 0.5939235 0.6150099 0.6262365 0.6543452 #>  [950,] 0.35072537 0.4508749 0.4650805 0.4764561 0.4870401 0.5008861 0.6052854 #>  [951,] 0.52072228 0.6502856 0.7195372 0.7757235 0.7874370 0.8218283 0.8264014 #>  [952,] 0.43728024 0.4535171 0.5659559 0.5819155 0.6096560 0.6215774 0.6288573 #>  [953,] 0.57895585 0.6134511 0.6531628 0.6782040 0.7321551 0.7393210 0.7469861 #>  [954,] 0.43958930 0.5208628 0.5462269 0.5995552 0.6794999 0.7068113 0.7202345 #>  [955,] 0.35725238 0.4713373 0.5551711 0.5951791 0.6255652 0.6301522 0.6616926 #>  [956,] 0.23564857 0.7873159 0.9162964 0.9207931 0.9510949 0.9882333 1.0176177 #>  [957,] 0.58355485 0.5975140 0.6785357 0.6916926 0.7021568 0.7033227 0.7103432 #>  [958,] 0.33183526 0.3785632 0.5442725 0.5926940 0.7216523 0.7369722 0.7895020 #>  [959,] 0.89106248 1.1370649 1.2134679 1.2504264 1.3381916 1.3410929 1.3454345 #>  [960,] 0.23473970 0.4179121 0.4760854 0.5177307 0.6076038 0.6119947 0.6190692 #>  [961,] 0.24889478 0.2788289 0.3248948 0.4909234 0.4930232 0.4998213 0.5049826 #>  [962,] 0.43520325 0.4462005 0.5446934 0.5840738 0.5886946 0.5949044 0.5988715 #>  [963,] 0.46103942 0.4702298 0.4944946 0.5095570 0.5775942 0.6029504 0.6475306 #>  [964,] 0.11979246 0.4225211 0.4468533 0.4944946 0.5217665 0.5278690 0.6194491 #>  [965,] 0.43703883 0.4457442 0.4616399 0.5265109 0.6322489 0.6785357 0.6843652 #>  [966,] 0.48684584 0.7571659 0.8278185 0.9038573 0.9118879 0.9639256 0.9821868 #>  [967,] 0.41042123 0.5998201 0.6238769 0.7398278 0.8692952 1.0934107 1.0963085 #>  [968,] 0.24589862 0.3831919 0.4013319 0.4870408 0.4974467 0.4984615 0.5017959 #>  [969,] 0.54527621 0.5504522 0.5702654 0.5721480 0.5974421 0.6042112 0.6270850 #>  [970,] 0.26543053 0.3270559 0.4622769 0.4902943 0.5584390 0.5907534 0.6052016 #>  [971,] 0.64866811 0.6927280 0.8086224 0.8640671 0.8905655 0.9449388 1.0165608 #>  [972,] 0.24260473 0.2879990 0.3471771 0.4060238 0.4786792 0.5331878 0.5391448 #>  [973,] 0.50166006 0.5731871 0.7997006 0.9213796 1.0234487 1.0334561 1.0660506 #>  [974,] 0.53866474 0.5960744 0.6270420 0.6516829 0.7105983 0.7947765 0.8275729 #>  [975,] 0.27764546 0.3549814 0.3765215 0.3931110 0.5316027 0.5569290 0.5851389 #>  [976,] 0.20960184 0.2404536 0.5392779 0.5653512 0.6130872 0.6262365 0.6277412 #>  [977,] 0.44984664 0.5445766 0.6142014 0.6371612 0.6418830 0.6657099 0.6941530 #>  [978,] 0.33303991 0.3876770 0.4410567 0.4535389 0.4896835 0.4915011 0.5331878 #>  [979,] 0.24026308 0.4825802 0.5629740 0.5868544 0.6735354 0.6845704 0.7081513 #>  [980,] 0.30475084 0.3605055 0.5329739 0.5512306 0.5662244 0.6519975 0.6581113 #>  [981,] 0.43964273 0.5330239 0.5900208 0.6169123 0.6457617 0.6671868 0.7091356 #>  [982,] 0.32408010 0.4060238 0.4322399 0.5389774 0.5488088 0.5673928 0.5693900 #>  [983,] 0.27446592 0.3287608 0.5140636 0.5409470 0.6603558 0.6776899 0.6836334 #>  [984,] 1.27044762 1.5401110 1.5730043 1.5986843 1.6237488 1.6339050 1.6484418 #>  [985,] 0.60565355 0.6768155 0.8237893 0.8242323 0.8293681 0.8508941 0.8578039 #>  [986,] 0.40896783 0.5046647 0.5090152 0.5631329 0.6127169 0.6128777 0.6213144 #>  [987,] 0.34573049 0.7230311 0.7445003 0.7954080 0.8774078 0.9134686 0.9159771 #>  [988,] 0.36842958 0.5563452 0.5768738 0.6399943 0.6552358 0.6702708 0.7500844 #>  [989,] 0.97118812 0.9775921 0.9986666 1.1411473 1.1419481 1.1589675 1.1855088 #>  [990,] 0.28371389 0.4836080 0.6335677 0.7881396 0.7929009 0.8007332 0.8158339 #>  [991,] 0.50571999 0.5140096 0.5457952 0.5693900 0.6106502 0.6245718 0.6753810 #>  [992,] 0.37814374 0.4389775 0.4435381 0.5958582 0.6018976 0.6104013 0.6628350 #>  [993,] 0.65207354 0.6594901 0.6667140 0.7170192 0.7260498 0.7307608 0.7494759 #>  [994,] 0.47162625 0.4748899 0.7986825 0.8703922 1.0089185 1.0345129 1.0446179 #>  [995,] 0.61899888 0.6705106 0.7361139 0.9203413 0.9390660 1.0056380 1.0219363 #>  [996,] 0.29828307 0.4080284 0.4610394 0.6328819 0.6380197 0.6857037 0.8085030 #>  [997,] 0.24797955 0.5081422 0.6152722 0.6346005 0.6784882 0.7554009 0.7587427 #>  [998,] 0.35002420 0.5066011 0.5639902 0.5937591 0.6171834 0.7101676 0.7369660 #>  [999,] 0.48721241 0.5097263 0.5623346 0.6273875 0.6897103 0.6919212 0.7382582 #> [1000,] 0.29851308 0.7084308 0.7405843 0.8218262 0.9027862 1.0682338 1.0754805 #>              [,8]      [,9]     [,10] #>    [1,] 0.6840759 0.6906096 0.7032950 #>    [2,] 0.8518433 0.8568543 0.8588793 #>    [3,] 0.8164106 0.8347550 0.8504220 #>    [4,] 0.6534062 0.6603650 0.6790347 #>    [5,] 0.7247258 0.7621049 0.7740370 #>    [6,] 1.3192033 1.3904811 1.3939734 #>    [7,] 0.9719121 0.9719517 1.0208235 #>    [8,] 1.3569711 1.3721468 1.3850795 #>    [9,] 0.9157939 0.9195472 0.9233898 #>   [10,] 0.9291189 1.0022811 1.0148207 #>   [11,] 0.8209140 0.8209946 0.8607672 #>   [12,] 0.5576197 0.5745237 0.5802141 #>   [13,] 0.6473999 0.6693659 0.7459284 #>   [14,] 0.6376620 0.6527585 0.6805830 #>   [15,] 1.0131152 1.0216670 1.0226317 #>   [16,] 0.4915011 0.5554542 0.5898575 #>   [17,] 1.0772364 1.0808099 1.1078909 #>   [18,] 0.8037557 0.8974831 0.9028040 #>   [19,] 0.6976872 0.7176255 0.7204457 #>   [20,] 0.7008394 0.7105750 0.7263072 #>   [21,] 1.0824188 1.0934633 1.1016882 #>   [22,] 1.2951766 1.3523233 1.3529491 #>   [23,] 0.9775921 1.0130230 1.0647031 #>   [24,] 0.7652112 0.7988730 0.8781541 #>   [25,] 1.0401389 1.0587493 1.0727531 #>   [26,] 0.9894665 1.0292243 1.1185107 #>   [27,] 1.0001348 1.0222661 1.0299788 #>   [28,] 0.5392779 0.5470884 0.6052895 #>   [29,] 0.6588562 0.6659103 0.6782040 #>   [30,] 0.6156993 0.6346005 0.6715173 #>   [31,] 0.8149296 0.8341268 0.8525161 #>   [32,] 0.6888935 0.7280055 0.7496348 #>   [33,] 0.8199901 0.8312688 0.8318377 #>   [34,] 0.7802350 0.7917229 0.8117150 #>   [35,] 1.9819188 2.0177659 2.0183972 #>   [36,] 0.6523962 0.6538855 0.6549830 #>   [37,] 1.1656878 1.2274151 1.2322558 #>   [38,] 1.1041461 1.1127427 1.2205911 #>   [39,] 0.6721756 0.7045341 0.7171957 #>   [40,] 0.6257026 0.6335507 0.6679835 #>   [41,] 0.9612645 0.9813908 1.0273125 #>   [42,] 0.8995469 0.9657486 0.9891915 #>   [43,] 0.8521872 0.8654797 0.9095430 #>   [44,] 1.0689058 1.0716306 1.1045182 #>   [45,] 0.6682670 0.7015410 0.7019068 #>   [46,] 0.8804297 0.9051744 0.9148691 #>   [47,] 0.8055153 0.8076417 0.8124885 #>   [48,] 0.6123676 0.6128777 0.6413639 #>   [49,] 0.6129594 0.6196495 0.6729880 #>   [50,] 0.6012504 0.6107480 0.6422065 #>   [51,] 0.7910172 0.7966691 0.7987725 #>   [52,] 1.7020465 1.7086518 1.7404867 #>   [53,] 0.8502715 0.9260911 0.9374613 #>   [54,] 0.9490003 0.9874445 1.0202348 #>   [55,] 0.8580646 0.8869916 0.9275110 #>   [56,] 0.6379182 0.6549468 0.6570163 #>   [57,] 0.5140424 0.5412691 0.5499048 #>   [58,] 0.7734966 0.7816646 0.8457307 #>   [59,] 0.6549668 0.6626993 0.6732006 #>   [60,] 1.6762071 1.7118909 1.7590287 #>   [61,] 2.2497996 2.2948665 2.2984346 #>   [62,] 1.0444711 1.0588723 1.0733686 #>   [63,] 0.7392918 0.7492957 0.7498574 #>   [64,] 1.7428904 1.7919709 1.8363302 #>   [65,] 1.2423124 1.3042429 1.3256213 #>   [66,] 0.5417778 0.5608717 0.5805189 #>   [67,] 1.1444881 1.1565801 1.1669286 #>   [68,] 1.2877877 1.3034414 1.3195856 #>   [69,] 1.2453759 1.2604476 1.2759352 #>   [70,] 0.5895982 0.5964174 0.5980054 #>   [71,] 0.8209406 0.8274756 0.8424975 #>   [72,] 0.5367385 0.5577622 0.6003728 #>   [73,] 0.8200808 0.8258585 0.8270837 #>   [74,] 0.4452260 0.4452944 0.4900791 #>   [75,] 0.8849988 0.8851607 0.9412848 #>   [76,] 0.8082228 0.8099795 0.8101489 #>   [77,] 0.8034263 0.8588578 0.9054233 #>   [78,] 0.7955224 0.8115960 0.8317355 #>   [79,] 1.1158760 1.1995725 1.2106078 #>   [80,] 0.9036765 0.9133298 0.9374889 #>   [81,] 0.4941907 0.5112900 0.5446907 #>   [82,] 0.8794639 0.9222374 0.9317462 #>   [83,] 0.6364352 0.6445585 0.6500544 #>   [84,] 0.8179165 0.8226604 0.8496356 #>   [85,] 0.9063272 0.9092705 0.9103541 #>   [86,] 1.2813124 1.3188009 1.3296657 #>   [87,] 0.6337530 0.6484782 0.6834518 #>   [88,] 0.6778428 0.7186115 0.7495291 #>   [89,] 1.1652548 1.1887988 1.2048274 #>   [90,] 0.7877767 0.8128223 0.8305770 #>   [91,] 0.9001327 0.9112243 0.9177209 #>   [92,] 0.5678034 0.5697645 0.5721562 #>   [93,] 0.9493530 0.9754013 1.0040164 #>   [94,] 1.1232831 1.1367003 1.1806592 #>   [95,] 0.9733667 0.9813147 1.0178984 #>   [96,] 0.9096129 0.9509050 0.9750049 #>   [97,] 0.8450607 0.8512987 0.8881848 #>   [98,] 0.6445585 0.6694510 0.6990584 #>   [99,] 0.7090663 0.7709237 0.7752788 #>  [100,] 0.4452944 0.4491485 0.5222038 #>  [101,] 0.6072869 0.6418342 0.6616926 #>  [102,] 1.5583913 1.5678093 1.5728838 #>  [103,] 1.7801981 1.8542844 1.8653033 #>  [104,] 0.7807777 0.7895020 0.8069466 #>  [105,] 1.6867496 1.6909687 1.7847073 #>  [106,] 0.6704947 0.6742619 0.6951407 #>  [107,] 1.3036162 1.3059343 1.3372601 #>  [108,] 0.7209451 0.7236693 0.7291138 #>  [109,] 0.7670322 0.7787935 0.7924080 #>  [110,] 0.8933924 0.9031811 0.9046437 #>  [111,] 0.8108463 0.8611334 0.8867489 #>  [112,] 0.5504522 0.5513488 0.5796125 #>  [113,] 1.9604178 1.9651885 1.9942260 #>  [114,] 0.6541010 0.6658840 0.7000461 #>  [115,] 0.8492745 0.8601915 0.8801183 #>  [116,] 0.7290991 0.7354406 0.7958822 #>  [117,] 0.7927881 0.8214226 0.8354252 #>  [118,] 1.3967688 1.5020889 1.5411776 #>  [119,] 0.8648411 0.8869611 0.9386295 #>  [120,] 1.0359519 1.0466205 1.0959056 #>  [121,] 0.5992548 0.6031995 0.6144043 #>  [122,] 0.6573546 0.6805800 0.7497736 #>  [123,] 2.0632080 2.0650716 2.0966995 #>  [124,] 0.6463035 0.6502856 0.6595222 #>  [125,] 1.0912800 1.1533889 1.1774059 #>  [126,] 0.8495333 0.8707533 0.9243354 #>  [127,] 0.8682285 0.9108743 0.9159771 #>  [128,] 0.9116691 0.9226313 0.9652295 #>  [129,] 0.5619234 0.5640989 0.5705369 #>  [130,] 0.7246204 0.7366179 0.7550259 #>  [131,] 0.8629082 0.9154515 0.9240002 #>  [132,] 1.0965572 1.1593909 1.1762636 #>  [133,] 0.7034058 0.7151740 0.7648659 #>  [134,] 0.6144409 0.6328937 0.6447704 #>  [135,] 1.0180832 1.0299788 1.0489464 #>  [136,] 0.8364312 0.8534275 0.8945130 #>  [137,] 0.6147290 0.6347260 0.6371612 #>  [138,] 0.9633120 1.0033637 1.0865785 #>  [139,] 0.5941433 0.6155954 0.6465600 #>  [140,] 0.6031036 0.6207728 0.6455000 #>  [141,] 0.9334972 0.9463914 0.9830048 #>  [142,] 1.1358766 1.1410106 1.1774648 #>  [143,] 0.6421035 0.6493090 0.6508839 #>  [144,] 0.7756632 0.7809358 0.8319270 #>  [145,] 1.3961264 1.4563708 1.4723483 #>  [146,] 0.7544998 0.7605192 0.7750800 #>  [147,] 0.6547691 0.6647171 0.6680865 #>  [148,] 0.6764628 0.6853873 0.6879521 #>  [149,] 0.8724831 0.8793071 0.8810645 #>  [150,] 1.3541490 1.3976390 1.4120999 #>  [151,] 1.0977262 1.1130977 1.1441964 #>  [152,] 1.0788339 1.1594723 1.1634658 #>  [153,] 0.6186239 0.6249076 0.6524674 #>  [154,] 0.9979448 1.0165260 1.0278614 #>  [155,] 0.7963270 0.8420964 0.8449678 #>  [156,] 0.6019287 0.6300363 0.6345781 #>  [157,] 1.1907726 1.1915732 1.2181482 #>  [158,] 0.6451609 0.6899045 0.6906096 #>  [159,] 0.6867869 0.6941530 0.6957587 #>  [160,] 0.6000946 0.6105559 0.6194064 #>  [161,] 0.8947476 0.9116758 0.9227535 #>  [162,] 0.5975074 0.6041307 0.6090262 #>  [163,] 0.5890395 0.5954489 0.5967834 #>  [164,] 0.7273069 0.7315114 0.7328287 #>  [165,] 0.7412892 0.7449357 0.7487692 #>  [166,] 0.7038953 0.7194598 0.7477178 #>  [167,] 0.7750041 0.7920255 0.8266049 #>  [168,] 0.8001009 0.8536781 0.8600708 #>  [169,] 0.9194785 0.9441205 1.0058058 #>  [170,] 0.9382792 0.9577932 1.0169267 #>  [171,] 1.3281592 1.3625428 1.4011702 #>  [172,] 0.9565446 0.9684916 0.9775500 #>  [173,] 0.6766340 0.6790726 0.7068775 #>  [174,] 0.6575003 0.6674738 0.6684247 #>  [175,] 1.4917277 1.5159244 1.5813266 #>  [176,] 0.7991878 0.8179211 0.8379585 #>  [177,] 0.5519513 0.5877064 0.6081811 #>  [178,] 0.6492453 0.6581934 0.6787869 #>  [179,] 1.0827096 1.1388808 1.1556237 #>  [180,] 0.7403373 0.8037808 0.8071251 #>  [181,] 0.5956783 0.5976749 0.6041471 #>  [182,] 1.4076994 1.4155919 1.4289038 #>  [183,] 0.5703735 0.6206696 0.6222473 #>  [184,] 0.5892729 0.6536594 0.6557035 #>  [185,] 0.7245222 0.7328571 0.7662223 #>  [186,] 0.6956527 0.7056529 0.7162701 #>  [187,] 0.9646993 1.0245883 1.0259728 #>  [188,] 0.5371735 0.5627223 0.6033876 #>  [189,] 0.7091875 0.7096872 0.7243470 #>  [190,] 0.7823964 0.7965548 0.8152690 #>  [191,] 0.6779237 0.6806978 0.7120420 #>  [192,] 0.9338751 0.9654318 0.9725518 #>  [193,] 0.8581111 0.8944121 0.9045185 #>  [194,] 2.1462045 2.1621923 2.2235551 #>  [195,] 0.7404873 0.7424698 0.7466623 #>  [196,] 1.2443910 1.2663759 1.2778056 #>  [197,] 0.8653135 0.9181342 0.9489763 #>  [198,] 1.2335738 1.2888042 1.3161678 #>  [199,] 0.8733079 0.8818635 0.8860108 #>  [200,] 0.6620058 0.6689861 0.7062811 #>  [201,] 0.7638727 0.7764632 0.7833433 #>  [202,] 0.9031769 0.9466053 0.9771277 #>  [203,] 0.9742886 0.9762667 0.9838682 #>  [204,] 0.8660171 0.8713362 0.8774078 #>  [205,] 0.7521672 0.7531560 0.8079337 #>  [206,] 0.5354843 0.5507930 0.5925374 #>  [207,] 0.8843462 0.8956957 0.9245193 #>  [208,] 0.8839322 0.9018486 0.9108146 #>  [209,] 0.9954408 1.0041729 1.0127025 #>  [210,] 0.7314663 0.7499538 0.7539983 #>  [211,] 0.6249076 0.6332236 0.6676450 #>  [212,] 0.5756282 0.5816157 0.5845743 #>  [213,] 0.6981551 0.7120325 0.7469861 #>  [214,] 1.0072372 1.0212773 1.0536122 #>  [215,] 0.7991878 0.8122208 0.8237893 #>  [216,] 0.6849994 0.7159683 0.7194863 #>  [217,] 1.2696400 1.2916374 1.3082172 #>  [218,] 2.0698426 2.1582238 2.1794353 #>  [219,] 1.1419071 1.1546737 1.1598188 #>  [220,] 0.8556043 0.8941501 0.9187972 #>  [221,] 0.7721601 0.8007450 0.8686663 #>  [222,] 0.7122104 0.7290208 0.7442019 #>  [223,] 0.6581113 0.7061281 0.7091478 #>  [224,] 0.6706789 0.7019068 0.7084813 #>  [225,] 0.9539369 0.9703744 0.9789638 #>  [226,] 0.9094927 0.9236007 0.9750757 #>  [227,] 1.1224575 1.1232171 1.1765301 #>  [228,] 0.6150072 0.6474037 0.6677783 #>  [229,] 1.6275471 1.6327672 1.6377161 #>  [230,] 0.8077191 0.8152458 0.8237942 #>  [231,] 0.6061478 0.6354643 0.6611211 #>  [232,] 2.5109801 2.5521409 2.5985639 #>  [233,] 0.7175774 0.7678040 0.7743942 #>  [234,] 1.0046430 1.0306832 1.0660506 #>  [235,] 1.2443641 1.2751824 1.3898696 #>  [236,] 0.7741966 0.8158339 0.8812321 #>  [237,] 0.4798433 0.4923068 0.5269125 #>  [238,] 0.7268137 0.7362066 0.7439783 #>  [239,] 1.3420318 1.3461106 1.3925125 #>  [240,] 0.6392163 0.6794999 0.6891888 #>  [241,] 0.9631116 1.0607898 1.0995410 #>  [242,] 0.6409554 0.6536717 0.6567187 #>  [243,] 0.6636873 0.6981406 0.7487717 #>  [244,] 1.1795216 1.1835511 1.2023588 #>  [245,] 0.6409228 0.6717199 0.6862668 #>  [246,] 0.7182696 0.7302294 0.7866523 #>  [247,] 0.8792776 0.8901784 0.8985113 #>  [248,] 0.7265339 0.7429213 0.7543047 #>  [249,] 0.7195130 0.7278343 0.7378124 #>  [250,] 0.8389501 0.8786767 0.8809935 #>  [251,] 1.0144141 1.0382249 1.0519416 #>  [252,] 0.8086032 0.8127639 0.8214226 #>  [253,] 0.7844042 0.8391906 0.8453518 #>  [254,] 0.8679448 0.8761603 0.8805015 #>  [255,] 1.3010298 1.3048961 1.3112365 #>  [256,] 0.7922734 0.8143724 0.8202792 #>  [257,] 1.2287814 1.2623435 1.2870063 #>  [258,] 0.7144336 0.7829594 0.7830391 #>  [259,] 0.8765900 0.9020937 0.9040555 #>  [260,] 0.6849916 0.6921431 0.7397833 #>  [261,] 1.0013334 1.0781746 1.0852962 #>  [262,] 0.9014253 0.9110248 0.9412066 #>  [263,] 0.6228589 0.6389085 0.6425539 #>  [264,] 0.7445039 0.7763800 0.7785089 #>  [265,] 0.6159509 0.6539432 0.6557787 #>  [266,] 0.6444124 0.6584608 0.6913247 #>  [267,] 0.7996771 0.8171527 0.8851820 #>  [268,] 0.7809131 0.7822894 0.7825739 #>  [269,] 1.6365479 1.6475172 1.7284962 #>  [270,] 0.8636030 0.8717666 0.8950887 #>  [271,] 0.6974129 0.7075137 0.7145244 #>  [272,] 0.7311275 0.7609912 0.7926049 #>  [273,] 0.9838981 1.0051945 1.0410010 #>  [274,] 0.6787095 0.6803064 0.6830693 #>  [275,] 0.6500544 0.6549891 0.6588562 #>  [276,] 0.4893941 0.5331338 0.5386035 #>  [277,] 0.5434089 0.5458555 0.6090289 #>  [278,] 0.4982746 0.5226729 0.5500617 #>  [279,] 0.8594428 0.8667141 0.8695986 #>  [280,] 0.6573314 0.7566781 0.7585960 #>  [281,] 0.6316205 0.6375098 0.6457517 #>  [282,] 0.7522842 0.7639512 0.7841182 #>  [283,] 0.7401994 0.7502762 0.7786913 #>  [284,] 0.9013925 0.9812345 0.9900795 #>  [285,] 1.1643255 1.2149226 1.2155786 #>  [286,] 0.7428386 0.7489267 0.8012210 #>  [287,] 0.9020457 0.9084734 0.9200732 #>  [288,] 0.5668288 0.5949505 0.6092248 #>  [289,] 0.5958005 0.6219387 0.7153576 #>  [290,] 1.2523793 1.2653686 1.2905328 #>  [291,] 0.7942700 0.8133962 0.8328333 #>  [292,] 1.3996536 1.4130507 1.4186033 #>  [293,] 0.7833270 0.7869504 0.8095809 #>  [294,] 0.6537989 0.6588367 0.6644364 #>  [295,] 0.5586331 0.5642181 0.5735294 #>  [296,] 0.5695717 0.6383931 0.6532692 #>  [297,] 0.7025963 0.7458543 0.7585614 #>  [298,] 0.6803541 0.6937865 0.7114762 #>  [299,] 0.5049826 0.5137532 0.5199955 #>  [300,] 1.3724249 1.3869509 1.4068344 #>  [301,] 0.6156628 0.6385884 0.6404770 #>  [302,] 0.6671247 0.6916319 0.7075452 #>  [303,] 1.2933348 1.3959017 1.4386183 #>  [304,] 0.8356685 0.8368322 0.8536506 #>  [305,] 1.0186679 1.0296932 1.0449361 #>  [306,] 0.6705916 0.7073255 0.7513879 #>  [307,] 0.6129937 0.6495329 0.6614861 #>  [308,] 0.8176102 0.8604471 0.9227313 #>  [309,] 1.1703522 1.1721204 1.1854323 #>  [310,] 0.7743942 0.7779701 0.7981450 #>  [311,] 1.6539523 1.6623235 1.6925317 #>  [312,] 0.6117288 0.6169518 0.6375098 #>  [313,] 0.5062901 0.5080604 0.5294623 #>  [314,] 0.8462269 0.8477914 0.8526363 #>  [315,] 0.5513729 0.5537038 0.5592805 #>  [316,] 0.5458555 0.5584390 0.5632178 #>  [317,] 0.5769644 0.6051857 0.6067774 #>  [318,] 0.8061743 0.8209140 0.8345657 #>  [319,] 1.3354092 1.3365825 1.3488996 #>  [320,] 0.6824687 0.7114892 0.7214868 #>  [321,] 1.4479581 1.5128853 1.5481566 #>  [322,] 0.5508949 0.5632178 0.5838274 #>  [323,] 0.7480233 0.7502714 0.7673180 #>  [324,] 1.2341771 1.2757960 1.2877485 #>  [325,] 0.5970965 0.6038599 0.6042112 #>  [326,] 0.8619213 0.8786057 0.8812521 #>  [327,] 0.9866782 1.0754805 1.1712215 #>  [328,] 0.7785164 0.8128774 0.8305991 #>  [329,] 0.4645881 0.4717604 0.5135400 #>  [330,] 0.5835320 0.5890395 0.6131027 #>  [331,] 0.7147657 0.7901977 0.7947003 #>  [332,] 0.6856374 0.7578333 0.7974487 #>  [333,] 0.6548458 0.6602301 0.6671295 #>  [334,] 0.5717691 0.5752625 0.6181361 #>  [335,] 1.2042133 1.2134679 1.3412938 #>  [336,] 0.7319844 0.7386098 0.8385740 #>  [337,] 1.0518620 1.0617918 1.0657467 #>  [338,] 0.8208513 0.8279909 0.8388513 #>  [339,] 0.6393077 0.6531840 0.7287865 #>  [340,] 0.6015151 0.6330748 0.6375456 #>  [341,] 1.0724299 1.1310382 1.1483285 #>  [342,] 0.6164347 0.6307811 0.6310927 #>  [343,] 0.7174661 0.7746747 0.7969912 #>  [344,] 0.8437119 0.8510503 0.8514226 #>  [345,] 0.8235481 0.8335774 0.8580646 #>  [346,] 0.5172332 0.5320239 0.5734494 #>  [347,] 0.7065477 0.7100107 0.7208898 #>  [348,] 0.7462613 0.7739295 0.8016673 #>  [349,] 0.6105559 0.6151651 0.6420404 #>  [350,] 0.7025963 0.7166782 0.7210750 #>  [351,] 0.8746027 0.9049518 0.9153289 #>  [352,] 0.8103934 0.8254375 0.8686898 #>  [353,] 2.0167321 2.0286254 2.0691611 #>  [354,] 1.6330232 1.6390761 1.6447128 #>  [355,] 0.7217922 0.8324984 0.8380220 #>  [356,] 0.8095559 0.8230604 0.8501802 #>  [357,] 0.6378174 0.6381177 0.6492462 #>  [358,] 0.8602180 0.8665321 0.8693902 #>  [359,] 0.6949469 0.7134583 0.7524988 #>  [360,] 0.9095401 0.9252545 0.9367258 #>  [361,] 0.9317325 1.0072367 1.0222754 #>  [362,] 0.6022443 0.6212637 0.6693269 #>  [363,] 0.8496144 0.8856256 0.8950534 #>  [364,] 0.6136030 0.6342172 0.6519975 #>  [365,] 0.6219415 0.6927117 0.7302568 #>  [366,] 0.6685565 0.6858544 0.7003966 #>  [367,] 0.4909832 0.5022323 0.5963819 #>  [368,] 0.8731229 0.8966660 0.8971719 #>  [369,] 0.7103432 0.7741179 0.8086224 #>  [370,] 0.7922734 0.7923318 0.7940315 #>  [371,] 0.6696448 0.7114247 0.7152385 #>  [372,] 0.6719416 0.7500159 0.7626128 #>  [373,] 0.8341268 0.8738730 0.9025993 #>  [374,] 0.7277010 0.7302294 0.7500844 #>  [375,] 1.2050617 1.2074827 1.2380256 #>  [376,] 0.6986100 0.7003597 0.7122543 #>  [377,] 0.6501754 0.6581722 0.6588367 #>  [378,] 0.7208020 0.7305842 0.7399707 #>  [379,] 0.7644150 0.8007332 0.8305770 #>  [380,] 1.3500396 1.3625648 1.3860677 #>  [381,] 0.7473692 0.7477058 0.7480482 #>  [382,] 0.9457086 0.9720530 1.0136148 #>  [383,] 0.7811700 0.8099795 0.8512497 #>  [384,] 0.8837170 0.9349890 0.9450218 #>  [385,] 0.5838668 0.5976619 0.5980054 #>  [386,] 0.7830130 0.7959280 0.8127239 #>  [387,] 0.5702563 0.5790031 0.5920945 #>  [388,] 0.8106370 0.8176653 0.8301476 #>  [389,] 0.6781141 0.7003217 0.8224502 #>  [390,] 1.1633693 1.1669286 1.3131325 #>  [391,] 0.5189829 0.5291188 0.5385167 #>  [392,] 0.9568264 0.9861877 0.9959013 #>  [393,] 0.6733320 0.6784882 0.6818566 #>  [394,] 0.5536029 0.5744257 0.6573546 #>  [395,] 0.9296943 0.9426066 0.9544303 #>  [396,] 1.0445433 1.0789088 1.1316774 #>  [397,] 0.5644892 0.5723457 0.5956783 #>  [398,] 0.7620429 0.7785356 0.7846093 #>  [399,] 0.9816345 1.1000157 1.1107653 #>  [400,] 0.5722813 0.5907793 0.5967695 #>  [401,] 0.6813625 0.6917427 0.6933175 #>  [402,] 0.9182642 0.9309083 0.9444465 #>  [403,] 0.9985768 1.0008163 1.0191095 #>  [404,] 0.5718620 0.6567649 0.6664548 #>  [405,] 0.6857037 0.7060853 0.7314663 #>  [406,] 0.5327009 0.5684654 0.5933668 #>  [407,] 0.9732934 0.9775150 1.0272720 #>  [408,] 1.5876943 1.6034167 1.6145924 #>  [409,] 0.5974189 0.6094863 0.6198485 #>  [410,] 0.7234368 0.7915333 0.7969912 #>  [411,] 0.7914721 0.8129489 0.8202792 #>  [412,] 1.6167518 1.6239020 1.6775332 #>  [413,] 0.9968483 1.0065313 1.0921560 #>  [414,] 1.3415786 1.3853162 1.4243021 #>  [415,] 0.7343265 0.7514262 0.7633467 #>  [416,] 0.6213979 0.6609363 0.6763387 #>  [417,] 1.8943495 1.9141267 1.9462915 #>  [418,] 0.6571506 0.7450771 0.8377452 #>  [419,] 0.7903463 0.8082432 0.8165162 #>  [420,] 0.7811041 0.7839922 0.8052543 #>  [421,] 1.0003095 1.0434638 1.0600398 #>  [422,] 0.8920522 0.9044110 0.9454081 #>  [423,] 0.8040626 0.8445202 0.8790501 #>  [424,] 0.6094863 0.6164347 0.6399011 #>  [425,] 1.6243607 1.6874065 1.7143479 #>  [426,] 0.7395132 0.7634533 0.7666581 #>  [427,] 0.6630070 0.6859505 0.6962091 #>  [428,] 0.4902824 0.4985974 0.5183945 #>  [429,] 1.1739641 1.1775336 1.2007635 #>  [430,] 0.7670322 0.7966691 0.8127060 #>  [431,] 0.5423080 0.5513729 0.5758746 #>  [432,] 0.9802489 0.9823655 0.9864820 #>  [433,] 0.9475986 0.9512392 0.9822962 #>  [434,] 0.9063302 0.9114476 0.9167121 #>  [435,] 0.7110778 0.7171957 0.7310777 #>  [436,] 0.6064729 0.6111120 0.6181761 #>  [437,] 0.7626128 0.7749700 0.7954447 #>  [438,] 0.7547039 0.7578333 0.7971909 #>  [439,] 0.7715046 0.7785164 0.7862067 #>  [440,] 0.7142830 0.7165912 0.7218735 #>  [441,] 0.7566781 0.7860355 0.8320034 #>  [442,] 0.6297898 0.6358279 0.6603506 #>  [443,] 0.5554542 0.5767713 0.5850547 #>  [444,] 0.6915789 0.6949101 0.7160864 #>  [445,] 1.5062340 1.5208683 1.5516022 #>  [446,] 0.6626993 0.6986152 0.7470214 #>  [447,] 0.7183083 0.7690655 0.7755768 #>  [448,] 0.8156255 0.8183636 0.8451966 #>  [449,] 0.6194249 0.6583501 0.6633423 #>  [450,] 1.2753671 1.3169349 1.3230990 #>  [451,] 0.5618374 0.5895047 0.6083064 #>  [452,] 0.6677918 0.6792799 0.6884021 #>  [453,] 0.7575106 0.7837587 0.7973231 #>  [454,] 1.1530353 1.1556672 1.1561189 #>  [455,] 0.6489934 0.6528778 0.6729880 #>  [456,] 0.8698976 0.8973483 0.9070275 #>  [457,] 1.3529710 1.3570303 1.3737992 #>  [458,] 0.5199955 0.5500617 0.5515600 #>  [459,] 0.8242323 0.8264014 0.8631782 #>  [460,] 0.8091644 0.8657761 0.8928314 #>  [461,] 1.1258383 1.1454967 1.1824279 #>  [462,] 0.8183636 0.8263333 0.8985064 #>  [463,] 1.0288141 1.1032875 1.1090171 #>  [464,] 0.6965341 0.6993846 0.7572463 #>  [465,] 0.7687175 0.8069866 0.8598314 #>  [466,] 0.5910454 0.5917274 0.6671248 #>  [467,] 0.7367199 0.7455282 0.7519728 #>  [468,] 0.6543615 0.6768069 0.6974393 #>  [469,] 0.7008546 0.7182980 0.7247013 #>  [470,] 0.7449098 0.8007186 0.8163883 #>  [471,] 0.8857549 0.9110057 0.9175911 #>  [472,] 1.7204493 1.8038602 1.8635996 #>  [473,] 0.7059202 0.7441028 0.7893769 #>  [474,] 0.7050901 0.7184377 0.7215033 #>  [475,] 0.9472826 0.9583544 1.0694827 #>  [476,] 0.5501299 0.5572274 0.6276968 #>  [477,] 0.6449089 0.7597176 0.7598705 #>  [478,] 0.9671221 0.9852444 1.0054114 #>  [479,] 0.6311903 0.6689832 0.6704014 #>  [480,] 1.0549035 1.0963085 1.0974636 #>  [481,] 0.6491082 0.6810202 0.6817808 #>  [482,] 1.0587874 1.0731319 1.1164209 #>  [483,] 0.5570175 0.6340799 0.6454253 #>  [484,] 1.4080206 1.4106781 1.4897374 #>  [485,] 1.6443927 1.6476220 1.6590689 #>  [486,] 0.6310901 0.6484830 0.6663874 #>  [487,] 0.6707398 0.6804660 0.7002185 #>  [488,] 0.6586827 0.6598273 0.6860202 #>  [489,] 1.0137184 1.0223485 1.0359519 #>  [490,] 1.2765385 1.2871052 1.3103110 #>  [491,] 0.7294588 0.7342951 0.7350170 #>  [492,] 1.0682338 1.0959056 1.1032875 #>  [493,] 0.6247836 0.6534062 0.6584608 #>  [494,] 1.3485800 1.3863366 1.4253673 #>  [495,] 0.5920945 0.6206338 0.6349646 #>  [496,] 0.6189276 0.6646857 0.6804660 #>  [497,] 0.6560847 0.6652995 0.6692078 #>  [498,] 0.6174631 0.6523981 0.6818602 #>  [499,] 0.8037808 0.8251382 0.8273954 #>  [500,] 0.6225054 0.6379928 0.6419024 #>  [501,] 0.9041861 0.9108673 0.9536522 #>  [502,] 1.0451752 1.1233662 1.1410337 #>  [503,] 0.8045743 0.8632384 0.8977629 #>  [504,] 0.5883900 0.6038700 0.6299073 #>  [505,] 1.0246017 1.0500895 1.0659577 #>  [506,] 0.7942630 0.8726921 0.8742910 #>  [507,] 0.6070150 0.6227161 0.6341595 #>  [508,] 0.9719121 0.9893956 1.0202348 #>  [509,] 1.2434793 1.2883453 1.3179004 #>  [510,] 1.0340991 1.0500298 1.0553234 #>  [511,] 0.8059377 0.8131911 0.8283584 #>  [512,] 1.3604020 1.3954282 1.4587660 #>  [513,] 0.7263146 0.7346178 0.7354406 #>  [514,] 1.6427872 1.6627145 1.7614805 #>  [515,] 0.6236966 0.6283320 0.6375456 #>  [516,] 0.6516324 0.6923390 0.7573395 #>  [517,] 0.8856657 0.9508753 0.9620808 #>  [518,] 0.4856564 0.5248498 0.5811740 #>  [519,] 0.9263995 0.9403652 0.9531959 #>  [520,] 1.4557363 1.4582128 1.4813327 #>  [521,] 0.7127812 0.7937798 0.8452370 #>  [522,] 0.8970534 0.9016104 0.9093391 #>  [523,] 0.5044149 0.5313294 0.5525168 #>  [524,] 0.6928583 0.6932255 0.7297808 #>  [525,] 0.7068696 0.7123649 0.7237886 #>  [526,] 0.6119431 0.6586594 0.6636789 #>  [527,] 0.5996942 0.6094028 0.6236966 #>  [528,] 0.9259418 0.9468159 0.9687502 #>  [529,] 1.1429299 1.1658581 1.1730945 #>  [530,] 0.8836145 0.8959381 0.9137332 #>  [531,] 0.9233938 0.9326849 0.9911759 #>  [532,] 0.9253237 0.9708175 0.9828974 #>  [533,] 1.0435859 1.0593112 1.0674910 #>  [534,] 1.6248351 1.6540836 1.6796835 #>  [535,] 0.5572274 0.5653512 0.5831282 #>  [536,] 0.8986705 1.0450038 1.0979317 #>  [537,] 0.6092044 0.6394361 0.6449089 #>  [538,] 0.7262996 0.7456151 0.7550090 #>  [539,] 0.8463530 0.8794355 0.8912687 #>  [540,] 0.7995219 0.8057323 0.8093113 #>  [541,] 0.7351274 0.8124116 0.8288994 #>  [542,] 0.5294623 0.5586331 0.5981417 #>  [543,] 0.8977448 0.9512174 0.9587687 #>  [544,] 0.7633571 0.7706150 0.7707799 #>  [545,] 0.5083228 0.5137532 0.5499048 #>  [546,] 0.8740153 0.9015642 0.9037305 #>  [547,] 0.6843834 0.7125864 0.7258577 #>  [548,] 0.5846346 0.5879263 0.5973134 #>  [549,] 0.7461102 0.7492527 0.7623006 #>  [550,] 0.7819474 0.7954819 0.7996258 #>  [551,] 0.5789390 0.6293182 0.6345781 #>  [552,] 0.6595050 0.6634656 0.6636873 #>  [553,] 1.1911953 1.2515513 1.3183106 #>  [554,] 0.6290513 0.6651110 0.6741588 #>  [555,] 0.6704014 0.7140559 0.7600063 #>  [556,] 0.5989875 0.6015554 0.6224250 #>  [557,] 1.0004798 1.0116948 1.0369797 #>  [558,] 0.8315565 0.8422581 0.8468856 #>  [559,] 0.9446972 0.9507086 0.9641585 #>  [560,] 0.6033876 0.6114760 0.6546484 #>  [561,] 0.7401994 0.8032891 0.9048996 #>  [562,] 0.7592156 0.7597176 0.8003616 #>  [563,] 0.5732596 0.5769644 0.6335544 #>  [564,] 1.0454805 1.0579380 1.0585192 #>  [565,] 1.3160668 1.4293761 1.4326140 #>  [566,] 0.8789596 0.8935268 0.9383729 #>  [567,] 0.8882477 0.9155510 0.9170444 #>  [568,] 0.6896777 0.6987649 0.7162925 #>  [569,] 0.7954080 0.8086531 0.8330594 #>  [570,] 1.2009158 1.2113169 1.2739542 #>  [571,] 0.5241234 0.5281186 0.5673793 #>  [572,] 1.7697005 1.7879840 1.8370200 #>  [573,] 0.6032286 0.6092720 0.6301072 #>  [574,] 0.7633571 0.7877057 0.8039785 #>  [575,] 0.6378240 0.6399757 0.6790726 #>  [576,] 0.7485139 0.7568745 0.7603397 #>  [577,] 0.9169413 0.9606626 0.9845915 #>  [578,] 0.5350748 0.5442931 0.5456720 #>  [579,] 0.6445134 0.6447704 0.6511486 #>  [580,] 0.8103934 0.8279909 0.8661487 #>  [581,] 0.6704421 0.7021568 0.8761442 #>  [582,] 0.9707932 0.9819765 0.9932619 #>  [583,] 1.9599494 1.9807373 1.9834044 #>  [584,] 0.6080317 0.6381177 0.6399757 #>  [585,] 0.7704517 0.8044669 0.8197524 #>  [586,] 0.6057908 0.6110892 0.6241790 #>  [587,] 0.6478070 0.6598338 0.6761760 #>  [588,] 0.8493232 0.8830603 0.8869611 #>  [589,] 0.6495610 0.6737052 0.6785844 #>  [590,] 0.7955162 0.8007577 0.8135569 #>  [591,] 1.7876513 1.8019212 1.8759712 #>  [592,] 0.8263415 0.8340617 0.8354803 #>  [593,] 0.7426291 0.7453749 0.7575019 #>  [594,] 0.7524039 0.7765947 0.8027852 #>  [595,] 0.7172240 0.7576873 0.7791004 #>  [596,] 0.9078917 0.9373748 0.9441205 #>  [597,] 0.7134577 0.7158147 0.7237615 #>  [598,] 1.0223730 1.0287783 1.0385359 #>  [599,] 0.7373926 0.7660572 0.7719974 #>  [600,] 0.7922262 0.8322898 0.8533253 #>  [601,] 0.8648251 0.8998007 0.9320431 #>  [602,] 0.5220067 0.5414899 0.5703735 #>  [603,] 1.1199832 1.1358035 1.1569509 #>  [604,] 0.8519114 0.8540943 0.8596152 #>  [605,] 0.8468557 0.8585254 0.8800517 #>  [606,] 0.6277412 0.6615131 0.6732272 #>  [607,] 0.6474351 0.6603445 0.6674062 #>  [608,] 0.7937001 0.7989539 0.8156598 #>  [609,] 0.6981551 0.7229179 0.7308326 #>  [610,] 0.7036754 0.7059906 0.7172212 #>  [611,] 0.6270420 0.6537804 0.6880144 #>  [612,] 1.0490863 1.0685406 1.0739177 #>  [613,] 0.6842243 0.6897781 0.6969684 #>  [614,] 0.8621788 0.8742130 0.9017313 #>  [615,] 0.6413716 0.6457934 0.6495329 #>  [616,] 0.8772436 0.8882153 0.9130064 #>  [617,] 0.5157022 0.5636490 0.6129937 #>  [618,] 0.6851107 0.7344227 0.7458543 #>  [619,] 0.8024838 0.8260295 0.8519950 #>  [620,] 2.2961248 2.3132311 2.3449960 #>  [621,] 0.6468197 0.6776989 0.6909965 #>  [622,] 0.7079979 0.7097671 0.7124773 #>  [623,] 1.0467088 1.0480537 1.0539897 #>  [624,] 0.7620441 0.7992087 0.8310814 #>  [625,] 0.6372420 0.6583501 0.6708964 #>  [626,] 0.9454891 0.9686526 0.9859649 #>  [627,] 0.6127169 0.6206696 0.6598338 #>  [628,] 1.1899259 1.2161742 1.2172823 #>  [629,] 0.8277418 0.8462246 0.8532825 #>  [630,] 0.9157939 0.9441916 0.9576569 #>  [631,] 0.6097190 0.6271484 0.6299073 #>  [632,] 0.6995110 0.7183800 0.7286771 #>  [633,] 0.7217922 0.7392990 0.7539983 #>  [634,] 0.7100107 0.7346602 0.7911679 #>  [635,] 1.2420313 1.2826174 1.3303886 #>  [636,] 0.6546463 0.6645386 0.6748694 #>  [637,] 0.6423745 0.6547075 0.6801249 #>  [638,] 0.9682796 0.9732266 0.9740008 #>  [639,] 0.8154821 0.8455293 0.8500145 #>  [640,] 1.3562530 1.4058717 1.4083193 #>  [641,] 0.8767817 0.9695944 1.0017373 #>  [642,] 0.4902824 0.4909832 0.5064272 #>  [643,] 0.8332468 0.8340617 0.8439994 #>  [644,] 1.1365399 1.1811105 1.1968756 #>  [645,] 1.1647751 1.1730136 1.1791045 #>  [646,] 1.1290562 1.1371371 1.1400570 #>  [647,] 1.4574226 1.5827902 1.6082951 #>  [648,] 0.6152080 0.6558549 0.6895957 #>  [649,] 0.8855299 0.8870923 0.8956957 #>  [650,] 0.7059806 0.7234556 0.7255668 #>  [651,] 0.7438681 0.7493113 0.7539751 #>  [652,] 0.8002347 0.8036169 0.8147069 #>  [653,] 0.8629494 0.8691633 0.8703753 #>  [654,] 2.0376554 2.0642837 2.0719869 #>  [655,] 0.5693556 0.5708502 0.5845486 #>  [656,] 1.0360280 1.0426354 1.1332573 #>  [657,] 0.5828988 0.6189276 0.7430488 #>  [658,] 0.8772445 0.8782531 0.9079089 #>  [659,] 1.0677338 1.1084733 1.1227503 #>  [660,] 1.1643193 1.1782870 1.1791045 #>  [661,] 1.2723795 1.2918136 1.3293842 #>  [662,] 0.7276526 0.7585383 0.7871510 #>  [663,] 1.4965123 1.5009803 1.5481810 #>  [664,] 0.6017170 0.6440993 0.7183800 #>  [665,] 0.8105248 0.8133392 0.8334661 #>  [666,] 1.0244754 1.0266089 1.0390668 #>  [667,] 0.8107471 0.8437119 0.8629082 #>  [668,] 0.5648604 0.5661889 0.6081811 #>  [669,] 0.8865581 0.8907420 0.9043392 #>  [670,] 0.8541567 0.9027862 0.9320445 #>  [671,] 1.3119824 1.3271533 1.3456148 #>  [672,] 1.2586549 1.2598457 1.2660795 #>  [673,] 0.7223247 0.7223451 0.8106374 #>  [674,] 0.7158147 0.7520342 0.7538990 #>  [675,] 0.8045743 0.8150292 0.8290862 #>  [676,] 0.7566082 0.7690173 0.8565467 #>  [677,] 0.5840738 0.6070381 0.6285195 #>  [678,] 0.8454495 0.8993138 0.9644378 #>  [679,] 0.5017379 0.5135400 0.5845743 #>  [680,] 0.7252000 0.7271524 0.7305842 #>  [681,] 0.8302023 0.8397697 0.8438707 #>  [682,] 0.6523981 0.7023389 0.7442802 #>  [683,] 0.7095037 0.7182400 0.7216561 #>  [684,] 0.8084518 0.9331939 0.9349890 #>  [685,] 1.0395007 1.0396917 1.0670484 #>  [686,] 0.9257875 0.9263184 0.9510949 #>  [687,] 0.6291341 0.6850668 0.6967763 #>  [688,] 0.8156303 0.8169834 0.8242243 #>  [689,] 0.5988715 0.6256857 0.6389247 #>  [690,] 0.8318655 0.8326376 0.8407768 #>  [691,] 0.8467602 0.8494933 0.8620052 #>  [692,] 0.9989074 1.0310535 1.0460484 #>  [693,] 1.1564200 1.1800142 1.1821247 #>  [694,] 0.6117288 0.6271484 0.6422065 #>  [695,] 0.7223247 0.7232071 0.7263862 #>  [696,] 0.7668074 0.7840744 0.8504414 #>  [697,] 0.6079431 0.6354577 0.6401194 #>  [698,] 0.5732596 0.5979797 0.6097413 #>  [699,] 1.1863076 1.1918823 1.1932994 #>  [700,] 0.8461272 0.8593058 0.8668686 #>  [701,] 1.0239708 1.0281339 1.0485980 #>  [702,] 1.2743571 1.2779067 1.3418867 #>  [703,] 0.6631229 0.6702237 0.6721971 #>  [704,] 0.7573626 0.7687190 0.7989583 #>  [705,] 0.4518522 0.4601853 0.5183945 #>  [706,] 0.8422844 0.8624032 0.9040107 #>  [707,] 0.6144810 0.6512204 0.7002035 #>  [708,] 0.8057577 0.8129374 0.8225023 #>  [709,] 0.9838981 0.9982790 1.0735899 #>  [710,] 0.9112702 0.9326027 0.9532120 #>  [711,] 1.0500298 1.1167297 1.1170377 #>  [712,] 0.6041471 0.6176878 0.6293271 #>  [713,] 0.6399898 0.6518384 0.6662929 #>  [714,] 0.5976619 0.6677237 0.6825468 #>  [715,] 1.0970919 1.1009412 1.1145051 #>  [716,] 1.2861680 1.2894634 1.3085650 #>  [717,] 0.8662543 0.8718986 0.8912687 #>  [718,] 0.6812211 0.6830709 0.7306408 #>  [719,] 0.6637689 0.6747428 0.6766340 #>  [720,] 0.6786555 0.6828350 0.6869204 #>  [721,] 0.7179782 0.7327252 0.7344816 #>  [722,] 0.9173040 0.9284520 0.9568930 #>  [723,] 0.5326509 0.5369410 0.5572162 #>  [724,] 0.8890232 0.9594261 0.9637553 #>  [725,] 0.6316524 0.6601040 0.6631408 #>  [726,] 0.9567075 0.9855439 0.9884453 #>  [727,] 0.6259202 0.7514262 0.7544139 #>  [728,] 0.4345793 0.4970024 0.5851389 #>  [729,] 0.8352061 0.8391906 0.8728494 #>  [730,] 1.3907144 1.4185249 1.4317311 #>  [731,] 0.7380062 0.7493803 0.7681148 #>  [732,] 0.7904515 0.8124116 0.8238111 #>  [733,] 1.0015857 1.0583630 1.0823613 #>  [734,] 0.7223451 0.7470871 0.8135534 #>  [735,] 0.5445766 0.5584276 0.5696619 #>  [736,] 0.8882707 0.8905793 0.9162440 #>  [737,] 0.7928437 0.8554760 0.8655583 #>  [738,] 0.6911847 0.7087310 0.7239903 #>  [739,] 0.5567308 0.5791274 0.5866861 #>  [740,] 1.4276587 1.4570525 1.5025867 #>  [741,] 0.6223371 0.6484433 0.6706789 #>  [742,] 0.8680714 0.8682285 0.9444659 #>  [743,] 0.9720790 0.9802234 1.0351053 #>  [744,] 0.6785831 0.6801847 0.6847449 #>  [745,] 0.5316027 0.5478367 0.5804936 #>  [746,] 0.6204053 0.6241790 0.6492462 #>  [747,] 0.6848696 0.7517100 0.8058849 #>  [748,] 1.2320917 1.2766666 1.3110623 #>  [749,] 0.7373926 0.7900349 0.8140502 #>  [750,] 0.5326509 0.5835320 0.6226629 #>  [751,] 0.5708257 0.5761536 0.6144043 #>  [752,] 1.2857177 1.3108842 1.3548015 #>  [753,] 0.6661465 0.6961591 0.6963417 #>  [754,] 0.6632656 0.6740417 0.7351465 #>  [755,] 0.5695753 0.5770645 0.6094087 #>  [756,] 0.9722501 0.9741574 1.0068078 #>  [757,] 0.6094028 0.6194857 0.6837815 #>  [758,] 0.7743959 0.7914721 0.8066962 #>  [759,] 0.6491082 0.6543452 0.6689832 #>  [760,] 1.1980557 1.2432542 1.2690216 #>  [761,] 0.5078948 0.5212561 0.5371735 #>  [762,] 0.5313294 0.5900208 0.5989966 #>  [763,] 1.1745660 1.1813854 1.1828819 #>  [764,] 0.6373526 0.6488148 0.6943219 #>  [765,] 0.6211520 0.6658511 0.7081679 #>  [766,] 0.6755741 0.7043938 0.7069911 #>  [767,] 0.9053899 0.9281812 0.9317325 #>  [768,] 1.0233773 1.0480409 1.0544455 #>  [769,] 0.8146714 0.8440645 0.8868007 #>  [770,] 1.2477533 1.2495879 1.2582870 #>  [771,] 0.7398473 0.7403501 0.7941967 #>  [772,] 0.9873916 1.0564114 1.0609525 #>  [773,] 1.0322557 1.0355912 1.1432948 #>  [774,] 0.6404770 0.6996764 0.7295960 #>  [775,] 1.3903208 1.4042970 1.4372339 #>  [776,] 0.6042039 0.6139821 0.6147472 #>  [777,] 0.7035001 0.7266560 0.7423742 #>  [778,] 0.7887387 0.7932536 0.8033971 #>  [779,] 0.5625936 0.5964174 0.6103168 #>  [780,] 0.8912070 1.0079796 1.0097415 #>  [781,] 0.5972749 0.6172824 0.6419909 #>  [782,] 0.4940311 0.5055477 0.5389774 #>  [783,] 1.5524494 1.6272053 1.6553421 #>  [784,] 0.9546577 0.9722178 0.9753684 #>  [785,] 0.6595222 0.7265339 0.8022471 #>  [786,] 0.6990584 0.7155144 0.7346178 #>  [787,] 0.6019287 0.6026190 0.6076833 #>  [788,] 0.6656870 0.6662929 0.6775609 #>  [789,] 0.7772403 0.7800166 0.8320034 #>  [790,] 1.0639548 1.0997050 1.1123630 #>  [791,] 1.2633146 1.2862601 1.2992365 #>  [792,] 0.8977629 0.9705995 0.9900659 #>  [793,] 1.1972276 1.2374316 1.2482377 #>  [794,] 0.9698194 0.9967526 1.0112740 #>  [795,] 1.1391775 1.1870900 1.2008868 #>  [796,] 0.8988347 0.9015799 0.9301511 #>  [797,] 0.6555066 0.7136717 0.7245249 #>  [798,] 1.0968115 1.1206349 1.2129535 #>  [799,] 0.7038824 0.7114443 0.7386098 #>  [800,] 0.6896481 0.7869426 0.7923318 #>  [801,] 0.5091996 0.5507662 0.5783331 #>  [802,] 1.0222069 1.1159579 1.1401848 #>  [803,] 0.6457517 0.6540291 0.6656870 #>  [804,] 0.8260295 0.8372186 0.8478090 #>  [805,] 0.6000946 0.6052895 0.6139821 #>  [806,] 0.7801390 0.8297356 0.8351518 #>  [807,] 0.6440921 0.6575003 0.6981406 #>  [808,] 0.9876611 1.0402634 1.0658225 #>  [809,] 1.1421997 1.1435006 1.1684521 #>  [810,] 0.5478367 0.6238652 0.6307500 #>  [811,] 0.6963094 0.7182638 0.7312479 #>  [812,] 0.6092248 0.6398361 0.6461307 #>  [813,] 0.7075137 0.7159082 0.7247013 #>  [814,] 0.6416663 0.8273892 0.8315936 #>  [815,] 0.8234780 0.8332468 0.8752031 #>  [816,] 1.1325347 1.1733310 1.1767373 #>  [817,] 2.1915670 2.2040591 2.2207666 #>  [818,] 1.5933795 1.6131587 1.6199797 #>  [819,] 1.6354192 1.6381872 1.6813319 #>  [820,] 0.6473999 0.6570163 0.6633761 #>  [821,] 0.5980485 0.6196495 0.6227187 #>  [822,] 0.5812524 0.5871626 0.5921766 #>  [823,] 1.1831221 1.2205928 1.2543520 #>  [824,] 0.6946511 0.6966756 0.7081679 #>  [825,] 0.8110745 0.8193651 0.8326224 #>  [826,] 0.6046628 0.6230679 0.7186115 #>  [827,] 0.6887515 0.7154259 0.7387135 #>  [828,] 0.8687353 0.8798742 0.9236158 #>  [829,] 0.6152080 0.6285195 0.6377482 #>  [830,] 0.7702678 0.7749149 0.7790638 #>  [831,] 0.5744257 0.6164029 0.6385884 #>  [832,] 0.9178171 1.0196918 1.0828124 #>  [833,] 0.6182341 0.6254161 0.6286165 #>  [834,] 1.2029763 1.2078326 1.2567733 #>  [835,] 0.9456657 0.9655571 0.9692752 #>  [836,] 1.0850821 1.0893464 1.0938974 #>  [837,] 0.8310814 0.8515214 0.8632830 #>  [838,] 1.1370160 1.2311328 1.2396868 #>  [839,] 0.9196434 0.9217415 0.9265829 #>  [840,] 0.7066189 0.7180911 0.7273354 #>  [841,] 0.6949814 0.6950994 0.7407855 #>  [842,] 0.8675501 0.8876097 0.9087117 #>  [843,] 0.7087876 0.7257597 0.7263862 #>  [844,] 1.1999671 1.2130013 1.2268836 #>  [845,] 0.8492745 0.8623988 0.8685883 #>  [846,] 0.9998619 1.0428809 1.1434119 #>  [847,] 1.0498899 1.0688235 1.1129497 #>  [848,] 0.7154259 0.7156104 0.7258548 #>  [849,] 0.7914503 0.7959489 0.7963954 #>  [850,] 1.2547751 1.2624250 1.3036319 #>  [851,] 0.7210846 0.7328494 0.7441028 #>  [852,] 0.6154918 0.6256566 0.6459574 #>  [853,] 0.7436943 0.7528837 0.7636110 #>  [854,] 0.9775381 0.9845109 0.9948472 #>  [855,] 1.0017929 1.0020984 1.1002209 #>  [856,] 1.5090735 1.5210919 1.5218348 #>  [857,] 0.8692952 0.9344489 0.9549328 #>  [858,] 1.1570713 1.1591785 1.1737183 #>  [859,] 1.8328490 1.8540996 1.8749820 #>  [860,] 0.6668563 0.7276814 0.7568745 #>  [861,] 0.9583680 1.0067420 1.0476516 #>  [862,] 0.7992530 0.8476169 0.8835717 #>  [863,] 0.5223439 0.5343414 0.5349812 #>  [864,] 1.3845059 1.3855873 1.4037089 #>  [865,] 0.8346281 0.8390167 0.8546484 #>  [866,] 0.7468761 0.7574340 0.7592156 #>  [867,] 0.7087310 0.7343265 0.7409596 #>  [868,] 0.6888741 0.7280470 0.7622194 #>  [869,] 0.9777851 0.9950244 0.9983809 #>  [870,] 0.9162964 0.9606572 0.9849830 #>  [871,] 0.5238762 0.5651025 0.5651887 #>  [872,] 0.7942700 0.8005718 0.8230922 #>  [873,] 0.7276091 0.7305819 0.8082228 #>  [874,] 1.1316774 1.2608179 1.2728320 #>  [875,] 0.7207671 0.7894280 0.8273294 #>  [876,] 0.6799944 0.6833672 0.6996313 #>  [877,] 0.9278042 0.9458841 0.9635108 #>  [878,] 1.0065313 1.0543014 1.1687755 #>  [879,] 0.8798272 0.8910341 0.9103248 #>  [880,] 0.5366147 0.6084700 0.6144892 #>  [881,] 0.5578168 0.5734494 0.5982934 #>  [882,] 0.8183534 0.8454495 0.8898651 #>  [883,] 0.5605438 0.5732979 0.5839264 #>  [884,] 1.2822641 1.2933348 1.2951740 #>  [885,] 0.7825997 0.7907978 0.8294662 #>  [886,] 0.7903463 0.8093815 0.8173829 #>  [887,] 0.5886946 0.5996942 0.6057916 #>  [888,] 0.7693384 0.8218847 0.8346568 #>  [889,] 1.0108248 1.0315147 1.0575520 #>  [890,] 0.7463897 0.8500145 0.8574642 #>  [891,] 0.5630141 0.6491893 0.6704855 #>  [892,] 0.5462873 0.6210393 0.6817808 #>  [893,] 0.8950661 0.8993505 0.9053183 #>  [894,] 1.1301356 1.1851217 1.2014116 #>  [895,] 0.6344294 0.6449508 0.6624095 #>  [896,] 0.9279544 0.9386714 0.9390660 #>  [897,] 0.7543047 0.7985903 0.8081307 #>  [898,] 0.6456951 0.6866302 0.6999045 #>  [899,] 0.7357026 0.7406000 0.7462737 #>  [900,] 0.7197496 0.7242167 0.7807334 #>  [901,] 0.7262996 0.7319844 0.7506277 #>  [902,] 0.6875841 0.7036754 0.7253391 #>  [903,] 0.6586391 0.7108512 0.7238114 #>  [904,] 0.5715827 0.6136030 0.6182277 #>  [905,] 0.7443659 0.7576073 0.7912814 #>  [906,] 1.3288063 1.4484331 1.4990801 #>  [907,] 0.9739455 0.9914465 1.0135725 #>  [908,] 0.7213290 0.7287521 0.7661511 #>  [909,] 0.4337002 0.4923068 0.6291341 #>  [910,] 0.9071869 0.9173040 0.9181342 #>  [911,] 0.6901950 0.7065477 0.7398473 #>  [912,] 0.6909965 0.7152385 0.7414344 #>  [913,] 0.9262857 0.9315482 0.9976586 #>  [914,] 0.5086455 0.5735294 0.5798755 #>  [915,] 0.6743427 0.6781645 0.6849916 #>  [916,] 0.6569495 0.6722038 0.6880206 #>  [917,] 0.7293243 0.7335103 0.7335881 #>  [918,] 1.2857997 1.2969518 1.3157036 #>  [919,] 1.3148245 1.3365804 1.3941309 #>  [920,] 0.5885898 0.5944964 0.6254900 #>  [921,] 0.5508949 0.5564460 0.5592805 #>  [922,] 0.8575487 0.8765899 0.8776055 #>  [923,] 0.6364352 0.6639802 0.6853873 #>  [924,] 0.9727575 0.9777851 0.9880316 #>  [925,] 0.5575146 0.5682191 0.6377585 #>  [926,] 0.7824549 0.7907978 0.9024944 #>  [927,] 0.8325034 0.8385987 0.8925003 #>  [928,] 0.5721480 0.5727461 0.5732979 #>  [929,] 0.6677785 0.7182696 0.7220205 #>  [930,] 0.9304174 0.9507953 0.9969988 #>  [931,] 0.9767047 0.9909266 1.0003501 #>  [932,] 1.5346919 1.5678316 1.6595036 #>  [933,] 0.5291188 0.5905704 0.6084700 #>  [934,] 0.8265155 0.8291134 0.8322399 #>  [935,] 0.6514621 0.6647614 0.6986152 #>  [936,] 1.0126013 1.0321495 1.0383772 #>  [937,] 0.8508436 0.8515214 0.8524742 #>  [938,] 0.8790375 0.9299144 0.9371910 #>  [939,] 0.8301459 0.8743891 0.9188573 #>  [940,] 1.0579380 1.0803280 1.1177477 #>  [941,] 0.5907378 0.5997272 0.6282346 #>  [942,] 0.8882829 0.9171687 0.9786830 #>  [943,] 0.6464288 0.6475404 0.6932559 #>  [944,] 0.8020389 0.8332081 0.9545348 #>  [945,] 1.3967273 1.4263500 1.5303297 #>  [946,] 0.8661738 0.8835345 0.9418841 #>  [947,] 1.0341030 1.0665823 1.0701228 #>  [948,] 0.8505013 0.8588578 0.8602180 #>  [949,] 0.6620749 0.6674684 0.6999691 #>  [950,] 0.6715692 0.6732006 0.6801847 #>  [951,] 0.8381879 0.8580390 0.8735294 #>  [952,] 0.6397244 0.6481640 0.6585769 #>  [953,] 0.7600203 0.8333091 0.8577934 #>  [954,] 0.7311095 0.7666704 0.7720657 #>  [955,] 0.6857979 0.6873157 0.7081513 #>  [956,] 1.0491804 1.0646306 1.0665823 #>  [957,] 0.7278877 0.7458077 0.7526179 #>  [958,] 0.8131620 0.8140530 0.8200162 #>  [959,] 1.3553868 1.3652005 1.4087390 #>  [960,] 0.6742869 0.6927757 0.6935895 #>  [961,] 0.5385167 0.5412691 0.5765337 #>  [962,] 0.6161448 0.6191511 0.6257026 #>  [963,] 0.6512502 0.7087876 0.7578457 #>  [964,] 0.6380197 0.7104408 0.7661511 #>  [965,] 0.6943906 0.7250722 0.7322724 #>  [966,] 1.0273050 1.0333418 1.0338005 #>  [967,] 1.1003664 1.1114033 1.1531107 #>  [968,] 0.5234763 0.5692590 0.5949044 #>  [969,] 0.6299959 0.6614861 0.6631958 #>  [970,] 0.6132784 0.6206338 0.6574036 #>  [971,] 1.0888946 1.1566819 1.1630378 #>  [972,] 0.5535035 0.6106502 0.6297898 #>  [973,] 1.1107653 1.1554482 1.1578779 #>  [974,] 0.8282386 0.8523305 0.9523307 #>  [975,] 0.5966750 0.6088378 0.6264783 #>  [976,] 0.6712161 0.6747242 0.6860202 #>  [977,] 0.7002035 0.7207671 0.7361568 #>  [978,] 0.5611023 0.5692590 0.5713636 #>  [979,] 0.7359016 0.7485139 0.8103468 #>  [980,] 0.6607510 0.6796446 0.7054167 #>  [981,] 0.7401325 0.7517817 0.7557467 #>  [982,] 0.5703687 0.5713636 0.6629655 #>  [983,] 0.7392411 0.7581082 0.7800392 #>  [984,] 1.6704371 1.7445347 1.7686935 #>  [985,] 0.9308566 0.9508618 0.9790464 #>  [986,] 0.6489164 0.6539432 0.6659627 #>  [987,] 0.9502703 0.9876611 1.0078478 #>  [988,] 0.7616226 0.7718502 0.8261747 #>  [989,] 1.2299184 1.3096315 1.4608447 #>  [990,] 0.8326376 0.8831607 0.8906118 #>  [991,] 0.6805048 0.6976350 0.7106365 #>  [992,] 0.6893451 0.7020445 0.7287517 #>  [993,] 0.7756169 0.8270837 0.8422844 #>  [994,] 1.0726774 1.1224575 1.1289085 #>  [995,] 1.0502892 1.0595193 1.0622020 #>  [996,] 0.8508050 0.8675501 0.9556772 #>  [997,] 0.7740370 0.8878779 0.9179751 #>  [998,] 0.7638727 0.8147467 0.8727687 #>  [999,] 0.7829143 0.7940834 0.8234630 #> [1000,] 1.0793481 1.1130977 1.1259971 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  452  409  487  334  637  930  129  592  158   114 #>    [2,]   93  282  225  613  356  869  318  891  726   263 #>    [3,]  837  233  822  400  622   81  258  683  130   172 #>    [4,]  266  680  177  184  983  106  563  493  779    59 #>    [5,]  173  176  162  575  696  789  264   30  741   997 #>    [6,]  861  413  926  255  480  414  236  967  878   879 #>    [7,]   89  144  193  622    3  511  172  508  793   672 #>    [8,]  646   35   46  794  253  989  499   27  361   285 #>    [9,]   18  559  854  888  828  934  468  630  455    73 #>   [10,]  363  674  944  778  946  629  243  423  924   246 #>   [11,]  796  753  314  840  556  812  515  318  286   154 #>   [12,]  545  933  961  391  278   72  206   57  134   299 #>   [13,]  746  992  584  632  741  575  224  820   28   427 #>   [14,]  163  657  400  496  822  755   81  330  723   507 #>   [15,]  441  789  685  908  597  696  291  377  768   629 #>   [16,]  188  782  276  916  697  972  920  978  443   560 #>   [17,]  846   44  940  102  903  462  815  738  643   200 #>   [18,]    9  888  559  854  828  305  468  934  185   630 #>   [19,]  975  593  762  329   74  228  610  304   56   627 #>   [20,]  518  604  323   33  329  810  574  100  317   728 #>   [21,]  368  328  715  605  954  439  974  603  562    84 #>   [22,]  792   26  675  590  167  421  503  922  777   191 #>   [23,]  947  361   84  767  261  499   95  989  444   981 #>   [24,]  209  736  101  633  979  180  320  543  106   665 #>   [25,]  855  267  729  240  974  223  954  148  811   923 #>   [26,]  792  421  922  675   22  590  167  214  111   503 #>   [27,]  794  516  332  364  325  285   46  116  389   135 #>   [28,]  776  584  500  160  746  357  535  976  586   805 #>   [29,]  260  213  609  713  681   98  438  275  547   953 #>   [30,]  162  741  911  416  393  712  606  575  997   379 #>   [31,]  996  963  721  230   75  398   34  525  373   964 #>   [32,]  777  191  800  814  787  724  608  451  720   664 #>   [33,]  604   20  637  784  323  592  738  815  378   518 #>   [34,]  398  406  281   36  128  394   50  803   31   735 #>   [35,]    8  989  646  794   46  285  253   65   86    27 #>   [36,]  406  735  137  495  486  476  481  281   50    34 #>   [37,]  360  229  907  893  990  861  690  638  748   254 #>   [38,]  596  661  530  471  453  517  816  547  284   734 #>   [39,]  352  156  370  787  986   82  343  279  720   435 #>   [40,]  307  887  852  689  941  921  923  962  615   969 #>   [41,]  641  305  460  888  671  555  185   18  828   534 #>   [42,]  104  450  995  958  942  700  214  151  415   226 #>   [43,]  467  988  440  982  388  813  677  274  246   697 #>   [44,]  940  531  256  688   17  653  370  359  411   903 #>   [45,]  416  911  411  359  362  268  367  330  610   224 #>   [46,]  794  271  576  499  253  697  982  364  904   991 #>   [47,]   71  477  513  298  466  308  538  667  562   714 #>   [48,]  183  563  493  950  739  121  779  317  986   346 #>   [49,]  713  807  871  178   50  296  573  275  821   455 #>   [50,]  871  296   49  281  406  713  803  464  915   694 #>   [51,]  260  213  348  225  282   29  609  478  430   651 #>   [52,]  219  663  204  666  834  994  250  973  309   127 #>   [53,]  273  203  153  686  294  576  825  709  717   982 #>   [54,]  652  418  581  258  957  369  965  643  848   508 #>   [55,]  639  772  786  513  208  806  138  345  651   890 #>   [56,]  824  703  860  212  650   74  147  745  975   820 #>   [57,]  299  278  880  617  391  933  289  458  961   545 #>   [58,]  892  521  662   88  306  618  826  127  839   481 #>   [59,]  336  184  106   63  177  111  935  799  446   950 #>   [60,]  321  514  520  509    6   96  850  967  480   879 #>   [61,]  425  408  716  838   65  209  570  375   24   665 #>   [62,]  600  841  561  633  966  935  320  567  170   355 #>   [63,]  446  336   59  935  184  320  585  177  199   698 #>   [64,]  770   94  432  107  138  570  131  179  522   519 #>   [65,]  919  838  543  736   23  989  947   24  209   550 #>   [66,]  925  443  578  597  243  276  781  397  573   761 #>   [67,]  565  179  128  373  199  577   34   75  398   390 #>   [68,]  324  207  388  628  254  850  638  374  440   621 #>   [69,]  490  681  136  356  953  999  726  818  225   284 #>   [70,]  312  698  668  714  615  177  101  302  779   385 #>   [71,]   47  477  513  308  562  298  667  139  538   195 #>   [72,]  206  579  545  829  391  134   12  589  887   961 #>   [73,]   80  331  934  252  898  430  489  832  927   993 #>   [74,]  329  728  762  975  523  745  212  739  100   679 #>   [75,]  373  399   31  853  199  398  996  525  876   841 #>   [76,]  348  208  541  651  915  213  333  873  383    51 #>   [77,]  931  422  108  991  210  402  736  576  948   979 #>   [78,]  684  845  840  475  262  115  381  143  293   701 #>   [79,]  906  465  930  740  452  182  704  942  727   659 #>   [80,]  430   73  832  898  927  489  252  282  331   512 #>   [81,]  642  723  750  400  367  909  330  313  755   163 #>   [82,]  370  688  352   39  800  156  720  814  787   433 #>   [83,]  364  689  813  231  560  928  904  923   98   275 #>   [84,]  361  368  444   23  947  499  261  605  767    95 #>   [85,]  501  773  339  448  827  382  411  564  507   366 #>   [86,]  273  456   53  505  294   77  982  203  931   991 #>   [87,]  905  329   74  265  739  523  728  762  568   550 #>   [88,]  618  892  521  934   58   99  497  350  826   165 #>   [89,]    7  760  793  193  144  672   41  235  403   622 #>   [90,]  885  824  287  870  593  765  236  912  771   379 #>   [91,]  619  420  802  146  326  489  763  257  541   249 #>   [92,]  968  929  621  371  181  578  397  436  677   761 #>   [93,]  869    2  726  318  282  225  613  166  356   891 #>   [94,]  432  138  519  522  770  345  241  474   64   890 #>   [95,]  795  386   84  947  983  605  767   23  710   368 #>   [96,]  509  658  515  757  886  419  796  764  190   830 #>   [97,]  901  667  995  184  266  386  799  680  983   336 #>   [98,]  609  438  928  325  260  275   29   83  332   786 #>   [99,]  350  306  618  297  892  826   88  759  250   949 #>  [100,]  679  810  523  518  728  329  745   74  317   762 #>  [101,]  180  320  302  979  633   70  698   24  177   955 #>  [102,]  846  959   17  457  784  738   82   44  200   800 #>  [103,]  142  303  918  798  985  742  534  647  669   305 #>  [104,]   42  942  896  727  995  465  700  415  958   378 #>  [105,]  973  119  373  399  309   67   75  666  492   145 #>  [106,]  983   59  386  799    4  184  336  177  901   111 #>  [107,]  179  616  770  612  383  432  565   67  790   517 #>  [108,]  576  979  180  718  302  991  101   77  955   147 #>  [109,]  166  284  726  898  221  681  547  430  807   174 #>  [110,]  434  558  857  937  810  604  518   12  205   391 #>  [111,]  799   59  336  922  106  544  386  905  983   184 #>  [112,]  516  325  899  955  928  631  364  969  895   504 #>  [113,]  232  819  421  259   26   22  922  792  932   111 #>  [114,]  158  409  526  139  804  683  868  233  129   865 #>  [115,]  143  941   78  407  753  340  438  845  840   356 #>  [116,]  332  562  806  890  639  969  786  308  513   516 #>  [117,]  682  174  951  124  166  498  706  851  252   898 #>  [118,]  626  582  823  877  653  197  539  256  244   155 #>  [119,]  973  234  503  399  373  309  608  666  588   351 #>  [120,]  601  475  763  828  146  461   91  489  293   185 #>  [121,]  986  451  156   48  183  191  346  602  228   751 #>  [122,]  774  735  496  476  159  977  137  394  525    36 #>  [123,]  768  752  685   15  598  198  775  836  722   132 #>  [124,]  498  174  851  447  243  117  781  682  951   785 #>  [125,]  553  161  940  624  413  130  939  531  886   878 #>  [126,]  419  757  658  886  960  811  764  515  289   337 #>  [127,]  204  994  662   58  502  306  892  742  614   987 #>  [128,]   34  383  230  616  577  149  612  464  873    67 #>  [129,]  409  334  655  880  139  487  526  342  158   404 #>  [130,]  624  161  687  939  909  750  886  367  837    81 #>  [131,]  585  538  889  567  446  847  895  667  631   522 #>  [132,]  722  649  629  749    5  849  360  197  997   638 #>  [133,]  719  164  186  606  669  470  162  741  215   691 #>  [134,]   72  545  206  912  765   12  527  829  902   579 #>  [135,]  402  794  516  422  522  734  471  325   27   991 #>  [136,]  530  547  284  681  788  469  442  778  109    29 #>  [137,]  495  476   36  735  406  759  316  387  797   977 #>  [138,]  432   94  772  345  208   55  786  474  913   639 #>  [139,]  409  158  129  655  880  439  334  114  868   299 #>  [140,]  468  554  548  821  431  315  613  295  263   455 #>  [141,]  896  429  704  465  865  104  192  376  452   334 #>  [142,]  985  742  669  470  303  215  798  630  103   918 #>  [143,]  340  617  458  941  753  887  840  811  115   852 #>  [144,]  622  190    7  764  245  403  801  238  960   295 #>  [145,]  170  561  336  935  247  355  111  214   63    62 #>  [146,]  249  601  185  707  272  293  554  797  326   140 #>  [147,]  718  703  188  860  805  962   56  650  212   615 #>  [148,]  231  240  904  389  677  689  648  286  923   314 #>  [149,]  577  826  835  481  732  521  533  306  128   892 #>  [150,]  693  692  701  684  262  874  154  407  196   845 #>  [151,]  492  450  157   42  187  327  463  958 1000   226 #>  [152,]  936  669  630  924  907   18  559  599  305     9 #>  [153,]  294  276  988  978  782  982  377  443  211   274 #>  [154,]  692  845  840   11  796  684  190   78  753   515 #>  [155,]  264  653  359  186  224  173  268  360  162   256 #>  [156,]  992  986  121  627   39  370  881  787  602   551 #>  [157,]  463  327  151  702  492  971  896   42  168   958 #>  [158,]  409  139  114  865  704  334  129  439  452     1 #>  [159,]  735  486  122  970  868  406  537  496  977   394 #>  [160,]  277  776  322  385   28  428  921  805  349   316 #>  [161,]  624  130  687  886  939  125  238  750  413   511 #>  [162,]   30  741  173  264  186    5  575  719  224   164 #>  [163,]   14  657  400  755   81  496  822  330  366   507 #>  [164,]  186  133  719  162  606  470   30  691  669   268 #>  [165,]  447  851  459  201  618  331  350  124  498   872 #>  [166,]  807  109  898  174  726  430  682  781  117   547 #>  [167,]  675  792  503  590  191   26  777  787   32   608 #>  [168,]  487  369  957  463  418  549  727  159  965   958 #>  [169,]  993  612  517  785  201  900  706  221  596   252 #>  [170,]  355  561  247  209  935   24  633  283  841   336 #>  [171,]  644  931  736  656  948   77  210  699  170   203 #>  [172,]  827  462    3  193  448  793  507    7  508   837 #>  [173,]  264  176  162    5  224  186  470  719  575   741 #>  [174,]  682  124  785  117  498  898  166  807  851   706 #>  [175,]  795  368   95   21  192  605   84  344  361   570 #>  [176,]  173    5  696  264  470  162  719  215  186   789 #>  [177,]  698  563  779  831    4  950  184   70   59   668 #>  [178,]  552  442   49  473  573   16  781   66  871   843 #>  [179,]  107   67  616  770  383  702  913  128   34   199 #>  [180,]  979  101  108  955   24  302  543   70  499   444 #>  [181,]  912  968  761   92  765  379  393  397  211   712 #>  [182,]  906  572   79  465  141  704  659  930  452   192 #>  [183,]   48  587  346  881  493  551  121  602  627   317 #>  [184,]   59    4  177  266   63  106  901  336  446   563 #>  [185,]  601  249  707  146  828  468  460  888  797   140 #>  [186,]  164  719  133  162  470  173  264  268  155   669 #>  [187,] 1000  971  700  327  743  450  151  168  957   463 #>  [188,]   16  978  782  276  920  147  718  761  805   560 #>  [189,]  555  833  479  497  755  460  636  707  758   691 #>  [190,]  764  144  960  245  840  515  801  403  288   845 #>  [191,]  777   32  787  800  121  451  814  167  156   675 #>  [192,]  605  659  376  747  424  141  710   97  195   680 #>  [193,]  511    7  827  448  555  755  622  172  691   460 #>  [194,]  802  475  120   91  701  733  489  478  763   472 #>  [195,]  680  424  747  376  655  266  368  139  605     4 #>  [196,]  262  945  381  693  454  684  384  311  692   419 #>  [197,]  997  849  722  823  379  626  717    5  910   825 #>  [198,]  649  988  374  207  768  274  638  946  944   211 #>  [199,]  398  876  600   63   75  585  841  446  935   540 #>  [200,]  738  751  346  451  228  867  587  815  602   551 #>  [201,]  897  785  498  165  851  174  124  998  447   528 #>  [202,]  251  532  938  737  676  482  632  176  789   358 #>  [203,]  656  825   53  717  910  686  644  722  849   836 #>  [204,]  127  994  306  502  219  892  297   58  662   987 #>  [205,]   12  857  579  134   72  391  545  206  830   829 #>  [206,]   72  579  545  391  829  589  134   12  887   961 #>  [207,]  374  638  254  274  988  211   68  621  649   440 #>  [208,]   76  651  213  348  260   55  138  915   51   953 #>  [209,]   24  170  736  633  320  838  935  101  446   931 #>  [210,]  216  948  280  917  952  302  964  405   77   633 #>  [211,]  274  761  397  649  988  181  749  153  374   978 #>  [212,]  739  766  703   74  779   56  860  820  523   679 #>  [213,]  260   29  915   51  900   76  221  609  208   953 #>  [214,]  226  540  958  415   42  995   26  301  336   876 #>  [215,]  696  872  459  719  133  669  470  176  630   985 #>  [216,]  280  210  964  405  483  948  952  908  673   506 #>  [217,]  502  987  808  382  670  773  994  448  127   204 #>  [218,]  591  457  510  433  711  678  959  279   82   352 #>  [219,]  204  614  663  127  250  557  994   52  306   862 #>  [220,]  392  882  607  279  343  678  283  437  222   338 #>  [221,]  900  284  213  109  517  927  898  547   29   252 #>  [222,]  343  265  607  568  580  410  986  574   87   975 #>  [223,]  240  729  648  954  589  829  579  980  206   904 #>  [224,]  264  173  653  162   13  359  416  741   45   256 #>  [225,]    2  282   51   93  430  681  726   29  260   109 #>  [226,]  540  958  214  415  301  876  595  549  492   351 #>  [227,]  521   58  892  618   88  306  826  994  934   350 #>  [228,]  602  587  346  751  323  121  200  881  451   183 #>  [229,]   37  907  360  861  255  936  990  164  413   155 #>  [230,]   31  842  721  996  963  128  528  577  826    34 #>  [231,]  689  148  904  923  389  813   83  240  962   364 #>  [232,]  113  819  932  421  259  111  145   26  922    22 #>  [233,]    3  837  683  822  114  526  965    1  404   310 #>  [234,]  743  119 1000  503  351  608  588  724  492   973 #>  [235,]   96  190  509  403  658  144   89    7  764   419 #>  [236,]  879  926  885  877  893  861  771   90  990   480 #>  [237,]  914  542  705  428  322  313  801  315  909   295 #>  [238,]  801  542  347  764  401  909  548  750  288   914 #>  [239,]  918  534  808  382   41  798  641  760  773   217 #>  [240,]  223  648  729  148  231  904  829  689  954   253 #>  [241,]  519  890  786  345  806  639  116  332   94    27 #>  [242,]  436  560  929  891  578   92  263  887  401   914 #>  [243,]  781  597  925  778   66  124  674  552  807   443 #>  [244,]  711  482  884  653  224  433  264  251  155    82 #>  [245,]  295  960  801  764  683  288  542  190  144   622 #>  [246,]  440  944  946  999  467  274  318  929  374    92 #>  [247,]  355  283  561  935  170  524  841   59  437   633 #>  [248,]  998  270  594  498  483  291  843  785  441   897 #>  [249,]  146  185  601  707  797  326  272  420  554   293 #>  [250,]  306  834  350   99  842  297  826  892  204   577 #>  [251,]  202  938  676  711  482  435  433  358  737   532 #>  [252,]  706  898  682  331  174   73  993  927   80   117 #>  [253,]  648  388  271  240  646  223  904  677  729    46 #>  [254,]  207  374  638  371  621  690  850  929  181   274 #>  [255,]  413  531  861  268  359    6  877  256  653   155 #>  [256,]  653  359  688  224   45  268  416  370   44   411 #>  [257,]   91  533  292  420  839  326  790  619  763   732 #>  [258,]  581  652  418  426  369  965   54  310    3   508 #>  [259,]  338  607  678  410  392  882  568  222  421   580 #>  [260,]  609   29  213  438   51   98  953  915  275   713 #>  [261,]  361  947   84   23  767  729  395  954  444   328 #>  [262,]  381  684  384   78  196  692  340  840  693   407 #>  [263,]  891  288  613  315  548  295  140  242  821   914 #>  [264,]  173  224  162  155  176  186    5  741   30   653 #>  [265,]  222  766   74  739   87  975  343  329  986   550 #>  [266,]  680    4  378  184  342  563  195  424  493   177 #>  [267,]  923  941  389   25  689  231  407  240  148   332 #>  [268,]  359  416   45  186  164  911  531  411  256   155 #>  [269,]  672  760  239  508  793  808  382   89  763   448 #>  [270,]  248  998  598  498  685  124  291  897  785   951 #>  [271,]  904  648  677  962  980  253  589  240  813   231 #>  [272,]  554  293  146  486  970  249  140  333  295   431 #>  [273,]   53   86  153  294  988  456  982  709  203   686 #>  [274,]  211  988  374  649  761  153  467  978  968   246 #>  [275,]  713  296  871  609  928   98   49   83  438    29 #>  [276,]  443  782  377  761  188   16  978  920   66   153 #>  [277,]  160  385  921  571  615  322  776  349  316   387 #>  [278,]   57  391  299  880  933   12  961  545  289   458 #>  [279,]  435  510   39  343  352  220  433  365  437   580 #>  [280,]  216  908  948  952  483  210  964  405  441   377 #>  [281,]  466  394  406  298  668   50   34  398  312   803 #>  [282,]  613  430    2  225  891  263   51  713  166    93 #>  [283,]  524  355  247  437  365  917  950  561  935   841 #>  [284,]  530  109  221  547  681  136   29  166  174   213 #>  [285,]  445   43   27  794  813  290  999   46  467   253 #>  [286,]  356  999  314  389  318  148  231  753  436   929 #>  [287,]  593   90  885  539  824  870  626  771   19   975 #>  [288,]  263  801  295  548  891  914  315  245  237   812 #>  [289,]  811  611  458   57  617  278  340  391  299   143 #>  [290,]  253   25  240  285   27  148  729  389  267   648 #>  [291,]  441  248  908  897  498  483  685  872  594   124 #>  [292,]  790  257  533  420  327  326   91  835  619   971 #>  [293,]  272  146  554  245  249  295  601  707  683   804 #>  [294,]  982  456  153  991  697  782  972  576  377   276 #>  [295,]  245  801  288  554  237  431  315  542  548   914 #>  [296,]  275  970  537  713   50  486  871   49  333   915 #>  [297,]  306   99  892  826  569  759  525  350  618   449 #>  [298,]  466  281  537  477  406  913   47  486  394   970 #>  [299,]   57  278  617  880  933  852  391  961  545   458 #>  [300,]  859   54  643  592  815  957  462  700  846   784 #>  [301,]  595  540  415  876  226  958  867  549  831   774 #>  [302,]  917  101  633   70  952  698  108  312  210   180 #>  [303,]  798  142  918  103  470  669  647  884  742   564 #>  [304,]   19  593  857  323  878  771  939  902  610   780 #>  [305,]   41  641  888   18  671  460  798  691    9   555 #>  [306,]  892   99  826  297  350  250  618  521   58   204 #>  [307,]   40  852  887  921  941  299  571  617  615   969 #>  [308,]  806  513  562  890   71   47  116  477  809   772 #>  [309,]  399  503  119  167  724  608   75  853  373   675 #>  [310,]  804  965  369  581  418  426  258  233  619   114 #>  [311,]  620  196  337  658  509  235  419   96  858   126 #>  [312,]   70  714  615  668  349  466  955  694  385   281 #>  [313,]  705  723  909  642  367  237   81  750  571   542 #>  [314,]  436  556  286  753   11  148  812  811  527   929 #>  [315,]  428  914  316  821  237  263  295  431  140   921 #>  [316,]  387  921  428  315  431  495  571  277  970   322 #>  [317,]  493  342  679  100  518  810  523  563  739   329 #>  [318,]  286  999  246   93  929  356  944  440   11     2 #>  [319,]  640  656  338  882  220  678  550  546  645   203 #>  [320,]  633  101  585  446  841   63  935  538   24   600 #>  [321,]   60  514  412  520  628  341  850  830  757   314 #>  [322,]  428  160  705  237  914  313  277  921  316   776 #>  [323,]  604   20  228  574  518  810   19  329   33   304 #>  [324,]   68  388  445  253  628  440   43  207  677   148 #>  [325,]  516  928  112  863   98  883  631  786  364   969 #>  [326,]  619  420  426  249  707  977  146  839  310    91 #>  [327,]  463  971  157  492  187  168  151  351 1000   743 #>  [328,]  954  611  391  974  747  566  278  439   57   603 #>  [329,]   74  762  728  518  975  100  523   87  745   679 #>  [330,]   81  367  755  551  339  723  881  750  163   903 #>  [331,]  851  934   73  898  252  993  447  165  706   682 #>  [332,]  116  786  639  325  969  516   98  364  438   928 #>  [333,]  486  348  754  541  651  296  537  464   36    76 #>  [334,]  129  487  409  158  452  727  424  637  139   655 #>  [335,]  660  410  568  580  536  338  574  259  959   222 #>  [336,]   59   63  446  184  111  106  935  901  799   983 #>  [337,]  858  658  419  126  837  233    3  960  454   764 #>  [338,]  882  259  607  678  410  550  392  568  580   222 #>  [339,]  903  507  411  330  755  827  366  551  501   881 #>  [340,]  143  458  811  617  289  556  941  840  381   515 #>  [341,]  628  412  480  864  395  780  205   90  885   870 #>  [342,]  493  317  378  129  655  266  637  424  680   334 #>  [343,]  222  607  580  265   39  279  220  986  352   410 #>  [344,]  665  983  901  899  368  538  106  667   84   955 #>  [345,]  786  953  474  639   98  241  325  138  432    55 #>  [346,]  751  587  200  451  228  183  602  738  551   881 #>  [347,]  401  990  238  712  606   30  893  911  634   542 #>  [348,]   76  651  333  541   51  208  915  486  213   478 #>  [349,]  385  615  573  714  277  312  316  160  921    16 #>  [350,]   99  618  306  892  826  842   88  297  165   528 #>  [351,]  588  743  569 1000  234  835  492  608  122   549 #>  [352,]   39  370   82  510  279  343  156  580  582   435 #>  [353,]  564   44  531  255  940  653  256  155  244   688 #>  [354,]  993  169  927  612  706  252  732  900  873    73 #>  [355,]  247  283  561  935  170  841  524  633  917    59 #>  [356,]  286  389  999  231  753  318    2  242  148   813 #>  [357,]  976  500  949  488   28  535  473  776  584   746 #>  [358,]  938  676  737  365  437  488  280  948  435   427 #>  [359,]  268  256  653   45  416  224  411  155  531   911 #>  [360,]  162  186  155  264  164  173    5   30   37   997 #>  [361,]   84   23  947  499  261  444  368  767  729   954 #>  [362,]  610  627  881   45  687  602  367  902  416   771 #>  [363,]  674  623  924   10  951  629  423  243  117   597 #>  [364,]   83  516  689  112  813  969  325  904  928   980 #>  [365,]  437  625  664  372  524  435  787  720  283   676 #>  [366,]  479  755  657  163  491  330  339  507   14   731 #>  [367,]  750  909  705  313   81  723  330  642  687   362 #>  [368,]   84  605  195   21  344  562  747  361  328   680 #>  [369,]  418  581  965  652  310  258  168  957   54   971 #>  [370,]  688   82  352   39  156  992  627  256  800   610 #>  [371,]  621  929   92  968  436  765  254  677  181   912 #>  [372,]  664  625  365  720  449  632  586  676  787   437 #>  [373,]   75  399  853  525  973  119  398   31  876   199 #>  [374,]  207  274  649  254  211  638  749  946  246   988 #>  [375,]  756  567  390  600  585  408   62  734  708   816 #>  [376,]  424  747  637  195  452  680  334  655  605   192 #>  [377,]  276  443  920  782  153  825  952  427  188   294 #>  [378,]  266  415  342  727  334  487  942  637  680   493 #>  [379,]  997  181  849   30  393  197  912  893  990    90 #>  [380,]  784  815   17  323  604  434  592  939  846    33 #>  [381,]  262  340  419  684  960  143  289  811  384    78 #>  [382,]  808  448  773  848  827  670   85  462  507   193 #>  [383,]  616  915  517  464  873  612  128  900   76   803 #>  [384,]  407  262  381  617  289  439  611  340  684   143 #>  [385,]  277  349  160  668  615  776  316  495  714    70 #>  [386,]  983  799  106    4   95   97  901  544  111   184 #>  [387,]  316  921  571  431  970  404  428  642  554   495 #>  [388,]  677  648  253  968  621  271  904  148   43   765 #>  [389,]  231  356  148  923  689  267  286   83  813   332 #>  [390,]  565  375  816  756  600  966  770  567   67    62 #>  [391,]  278  545   57   12  206   72  299  579  933   961 #>  [392,]  220  678  607  882  259  338  343  222  580   283 #>  [393,]  712  181   30  761  575  741  912  379  997   188 #>  [394,]  668  281  406  744  466  735  398  876  831   122 #>  [395,]  767  745  558  728  650  762  444  261  981   810 #>  [396,]  733  804  894  802  865  484  478  114  310   874 #>  [397,]  578  761  712  925  211  943   66   92  725   181 #>  [398,]  199  876  394   34  281  744  668  525   31    75 #>  [399,]  309   75  373  853  119  608  503  167  372   973 #>  [400,]  163   14   81  755  822  642  723  657  622   833 #>  [401,]  347  914  712  237  578  527  242  542  322   801 #>  [402,]  422  991  734  135   77  955  471  504  916   108 #>  [403,]  144  190  559  238  548  828  854   18  634   801 #>  [404,]  526  822  571  496  387  723  129  642  683   921 #>  [405,]  964  695  216  483  963  721  280  996  506   210 #>  [406,]   36  281  735  394  495  137  486  466   50   298 #>  [407,]  384  115  267  941  262  340  874  143  617   684 #>  [408,]  716  375  756   61  567  425  570  422  209   665 #>  [409,]  139  129  158  880  655  334  114  439  424     1 #>  [410,]  568  222  574  607  259  580  905  338  536   343 #>  [411,]   45  339  688  903  359  564  268  758  330   256 #>  [412,]  628  341  321  864  729  480  395  514  261   780 #>  [413,]  861  926  255  161    6  236  879  125  878   886 #>  [414,]  967  780  878  480  926    6  857  304  236   341 #>  [415,]  958  301  378  226  540  595  549  867  727   266 #>  [416,]  911   45   30  359  741  268  362  162  224   771 #>  [417,]  654  791  685  775  291  594  528  441  695   769 #>  [418,]  369  581  652  965  258  957   54  310  168   426 #>  [419,]  126  658  960  764  757  515  381  886  337   811 #>  [420,]  326  754  249  839  619   91  977  333  732   146 #>  [421,]  922   26  792  675  259  167  607   22  410   111 #>  [422,]  402   77  734  991  931  210  673  216  756   108 #>  [423,]  690  599  943  749  674  634  725  397  363   936 #>  [424,]  376  747  195  680  637  655  334  409  342   129 #>  [425,]  838  716   61  570  889  408  209  795  665   344 #>  [426,]  707  258  326  581  652  460  310  400  249   555 #>  [427,]  584  805  920  952  488  575  377   28  357   393 #>  [428,]  322  316  431  315  237  921  914  642  387   705 #>  [429,]  141  896  308  667  772   71   47   97  809   104 #>  [430,]  898   80  282  166  613   73  807  109   51   713 #>  [431,]  428  554  642  387  833  316  140  295  315   723 #>  [432,]  138   94  474  345  913  786  772  208  519    55 #>  [433,]  711  435  720  862  279   39   82  251  814   352 #>  [434,]  110  558  857  937  810  780  604  205  304   323 #>  [435,]  279  365  433  676  938  625  720  437   39   632 #>  [436,]  929  242  527  371  621   92  556  812  829   314 #>  [437,]  365  524  625  283  664  435  766  372  787   917 #>  [438,]  609   98  260   29  275  953  928  639  332    83 #>  [439,]  139  611  409  158  715   57  617  880  328   299 #>  [440,]  246  999  467  944  946  929  274   43  621    92 #>  [441,]  908  291   15  685  483  594  248  280  597   789 #>  [442,]  788  552  916  178  871  504  781  972  843   694 #>  [443,]  276  782  377  925   66  761  972   16  597   978 #>  [444,]  499  589  980  650  523  866  745   84  728   679 #>  [445,]  285   43  324  290  999  440  467  635  253   246 #>  [446,]   63  336  585  320  538  901  184   59  935   106 #>  [447,]  851  165  459  124  872  473  331  498  618    88 #>  [448,]  382  808  827  848  773  193  507  755  462   670 #>  [449,]  586  491  535  746  632  372  664  759  625    28 #>  [450,]   42  151  700  187  942  104  958  740  727  1000 #>  [451,]  751  121  346  551  200  602  867  777  738   191 #>  [452,]  637  334  704  376  465    1  727  409  930   424 #>  [453,]  471  734  673  843  708  596  769  483  695   788 #>  [454,]  858  262  684  381  337  484  233  310  508   804 #>  [455,]  821  613  725  891  573  140  943  548  315    49 #>  [456,]  294  505  982  991  972  153  697  916   86   782 #>  [457,]  102  959   82  675  510  800  814  191  218   352 #>  [458,]  340  811  289  617  143  933   57  299  278   556 #>  [459,]  872  447  165  851  215  124  630  985  951   597 #>  [460,]  641  555  707  189   41  426  185  833  622   448 #>  [461,]  845  828    2  854  120  559  475   78  190   403 #>  [462,]  827  507  643  172  848  903  501  448  339   163 #>  [463,]  157  327  971  168  896  151  187  958  492   104 #>  [464,]  873  915   50  993  333  541  754  900  383    36 #>  [465,]  704  452  727  104   79  865  942  141  930   334 #>  [466,]  281  298  394  406  477  714  668  537  312    50 #>  [467,]  440   43  246  988  274  944  999  972  978   813 #>  [468,]  140  548  554  431  821  833  185  613  455   295 #>  [469,]  560  807  713   83  781  275  778  871   49   813 #>  [470,]  669  186  719  133  173  176  164  215  264   758 #>  [471,]  453  673  734  596   38  788  530  402  843   594 #>  [472,]  874  484  945  894  396  693  733  802  701   478 #>  [473,]  949  178  357  447  552  976   49  488  851   495 #>  [474,]  883  863  895  631  786  345  325  928  522   803 #>  [475,]  701   78  684  120  478  293  845  733  802   461 #>  [476,]  137  759  735  495  122  525   36  774  535   481 #>  [477,]   47   71  513  298  969  466  714  537  562   895 #>  [478,]  802  733   51  348  651  701  475  208   76   272 #>  [479,]  366  189  662  497  731  636  755  758  759   555 #>  [480,]  236  926  885  341   90  780  414  879  967   287 #>  [481,]  797   36  754  826  977  476  137  759  497   892 #>  [482,]  884  244  251  202  711  433  557  494  532   632 #>  [483,]  594  216  843  964  405  695  280  908  248   552 #>  [484,]  733  396  454  472  945  804  802  894  310   619 #>  [485,]  512  924  869  854   80  559  832    9  630   117 #>  [486,]  970  537  333  296  406   36  159  651  272   735 #>  [487,]  334  727  129  957    1  168  378  342  496   526 #>  [488,]  949  357  586  427  584   28  952  920  805   976 #>  [489,]   80  832  927   73   91  541  601  430  512   120 #>  [490,]   69  953  681  844  438  345   98  260   29   639 #>  [491,]  449  774  535  366  551  586  759  476  746   664 #>  [492,]  151  351  327  226  157  958  234 1000  119   463 #>  [493,]  317  342  563   48  183  779  739  679    4   266 #>  [494,]  884  557  663  482  614  862  219  433  244   742 #>  [495,]  137   36  476  406  316  735  385  387  970   759 #>  [496,]   14  404  122  163  526  774  822  657  400   487 #>  [497,]  636  759  535  479  797  189  833  476   88   662 #>  [498,]  124  785  897  201  174  998  270  248  682   851 #>  [499,]  444  980  361  866  589  979   84  180  271    46 #>  [500,]  976  357   28  606  776  535  322  428  573   160 #>  [501,]   85  507  903  339  827  462  773  800  848   411 #>  [502,]  987  217  204  127  994  670  808  569  662    58 #>  [503,]  608  724  167  119  590  234  309  675  399   792 #>  [504,]  694  863  788  928  871  883  112  803  442   631 #>  [505,]  456  982  294  991  972  697  916  529   43    86 #>  [506,]  673  594  695  769  405  216  483  964  453   210 #>  [507,]  827  462  903  339  848  657  163  501  755   643 #>  [508,]  672  258    3  858  652  581  172    7  310    54 #>  [509,]   96  658  235  886  126  419  413  161  125   757 #>  [510,]  279  352  580  343   39  678  607  220  711   433 #>  [511,]  691  193  750  755  189  555  622   81  758   268 #>  [512,]  832   80  489  927   73  485  430  252  225   854 #>  [513,]   71  308  477   47  806  890  562   55  786   116 #>  [514,]  520   60  850  321   68  628  412  480  254   324 #>  [515,]  556  812  757  960  840  764  830  527  419   340 #>  [516,]  112  325  364  899  928  955  969  332  631   895 #>  [517,]  612  900  383  616  221  169  915  213  547   464 #>  [518,]  810  100  329   20  728  317  679  523  762   745 #>  [519,]  890  241  806  786  522  570   94  308  116   345 #>  [520,]  514  850   60  321  254  480  638  879   68   893 #>  [521,]  892   58  826  618   88  227  306  732  481   350 #>  [522,]  631  895  883  474  519  325  863  112   94   899 #>  [523,]  679  728  100  745   74  329  518  810  762   317 #>  [524,]  283  437  365  917  664  625  247  841  355   950 #>  [525,]  853  476  774  588  122  735  297  744  394   569 #>  [526,]  404  822  114  129  683  496  571  387  868   233 #>  [527,]  812  556  830  436  458  134  914  887  757   515 #>  [528,]  842  897  350  201  230  165  250  291  618   721 #>  [529,]  752  471  594  673  505  248  998  506  453   598 #>  [530,]  136  547  284  788   38  681   29  471  109   442 #>  [531,]  940  359   44  564  268  256  411  653  255   161 #>  [532,]  202  737  742  632   99  350  676  614  731   938 #>  [533,]  839  732  420  149  835  257  292  754  521   873 #>  [534,]  671   41  305  239  918  641  798  460   89   888 #>  [535,]  759  636  449   28  497  357  746  476  976   500 #>  [536,]  710  544  568  905  410  574   20  604  323    87 #>  [537,]  970  486  296  298  651  868  466  406  159   477 #>  [538,]  585  131  446  895  631  320  667  901   47   665 #>  [539,]  593  582  287  626   19  975   56  824  771   717 #>  [540,]  226  876  301  958  415  831  214  595   63   853 #>  [541,]  873  348   76  333  754  464  900  915  732   420 #>  [542,]  801  237  909  914  705  238  750  313  295   642 #>  [543,]  736  979  550  180   24  108  981  860  882   101 #>  [544,]  905  799  710  568  536  922   87  574  111    20 #>  [545,]  961   12  933  206   72  391  278  134  299    57 #>  [546,]  981  550  762  645  660  956  338  745  265    74 #>  [547,]  530  788  807  136  284  713   29  871  442   109 #>  [548,]  288  891  468  140  801  263  295  821  315   914 #>  [549,]  867  595  301  415  957  700  958  168  487   496 #>  [550,]  981  882  546  543  265   87  338  766   74   905 #>  [551,]  881  451  602  346  330  183  751  903  491   156 #>  [552,]  178  442  781  843   66  483  916  908   16   243 #>  [553,]  125  940  161  624  130  172  531  793  939   413 #>  [554,]  140  272  431  295  468  387  315  316  293   970 #>  [555,]  189  460  833  707  641  622  755  479  400   193 #>  [556,]  812  527  515  830  757  458  436  340  811   753 #>  [557,]  614  494  731  742  862  814   85  632  800   662 #>  [558,]  110  434  857  810  518  395  100  604  205    20 #>  [559,]  854    9   18  828  888  936  403  869  548   634 #>  [560,]  962  242  578  573   83   16  469  188  978    92 #>  [561,]  935  355  247  841  170   62  633  283  524   917 #>  [562,]  308  116  806  890  513  969   71  866  477   332 #>  [563,]  950  493  177   48  779  831    4  698  317   739 #>  [564,]  411  531   85  359  268  339  798  653  940   688 #>  [565,]  390   67  816  179  128  107  770  966  600   375 #>  [566,]  603  715  611  974  328  937  439  289  278   747 #>  [567,]  585  600  375  756  320  131  708  538  446   522 #>  [568,]  410  905  574  222  544   87  265  536  329   607 #>  [569,]  588  297  875  525  774  491  608  987  351   366 #>  [570,]  519  716  889  131  890  522   94  665  425   344 #>  [571,]  921  387  404  852  961  313  723  277  316   642 #>  [572,]  906  182   79  945  930  715  894  465  704   659 #>  [573,]  821  349  560  578   66  315   49   16  455   178 #>  [574,]  568  410  323   20  228  222  905  544  329   536 #>  [575,]  741    5  162   13  427   30  789  393  584   173 #>  [576,]  108  718  697  294  982  991  147  979  860   188 #>  [577,]  149  834  230  826  835  128  250  666  842   306 #>  [578,]  397  761  712   66  560  925  943  725  573    92 #>  [579,]   72  206  829  391  458  545  223  527  134   887 #>  [580,]  343  222  607  410  510  678  265  352  338   568 #>  [581,]  418  652  258  369  965  310   54  426  957   848 #>  [582,]  539  626  352  256  593  771  118  877  653    19 #>  [583,]  834  577  250  528  842  149  230  227  791   666 #>  [584,]  427   28   13  746  805  776  820  488  357   575 #>  [585,]  567  538  131  320  446   63  600  665  895   631 #>  [586,]  449   28  488  664  744  949  535  372  625   746 #>  [587,]  346  602  183  751  228  881  551  200  627   317 #>  [588,]  569  351  608  525  774  853  122  743  297   119 #>  [589,]  980  866  206   72  223  444  954  650  689   271 #>  [590,]  792  167  777  675   26  503  191  867   32   595 #>  [591,]  218  510  711  433  279  244  352  457  678   435 #>  [592,]  815  738    1  200  637  751   33  346  643   587 #>  [593,]  287   19  539  975  824  304  771  885   56    90 #>  [594,]  483  248  673  506  695  441  998  405  769   964 #>  [595,]  867  301  549  774  415   48  563  451  346   493 #>  [596,]   38  453  998  471  785  769  843  816  248   169 #>  [597,]  243  925   66  781  443  789  629  552  674   124 #>  [598,]  270  685  248  752  998  441  951  498  124   597 #>  [599,]  634  423  907  936  943  725  690  749  164   133 #>  [600,]  567  708   62  841  320  199  585  756  633   375 #>  [601,]  185  146  249  828  707  293  120  468  272   326 #>  [602,]  881  627  228  587  610  346  551  751  451   183 #>  [603,]  566  974  715  328  611   21  855  605  747   558 #>  [604,]   33   20  323  518  574  558  784  710  110   637 #>  [605,]  747  368  192  376  195  424   84  680  659   328 #>  [606,]  741  911  500  133  712   30  719  976  347   322 #>  [607,]  343  222  259  392  580  410  882  678  338   220 #>  [608,]  853  588  503   32  724  301  569  777  525   595 #>  [609,]  438   98  260  275   29  928  713  213  296   871 #>  [610,]  627  362  881  602   19  228   45  902  587   771 #>  [611,]  289  278   57  328  566  439  391  974  617   299 #>  [612,]  517  616  383  900  169  128  873  993  221   107 #>  [613,]  891  282  455  263  821  140  468  315  430   548 #>  [614,]  557  731  862  632  742  814  449  219  662   720 #>  [615,]  714  349  312   70  277  385   40  866  921   307 #>  [616,]  383  612  517  915  128  179   76  873  900   464 #>  [617,]  299   57  143  941  458  340  289  852  278   307 #>  [618,]   88  350  892   99  826  521  306  165  481   297 #>  [619,]  326   91  763  420  146  310  733  249  804   802 #>  [620,]  311  196  235  509  337  658  154   96  454   858 #>  [621,]  371  929  968   92  436  677  765  254  181   912 #>  [622,]  144  400  833  555   81  750    3  909  642   707 #>  [623,]  924  363  951  674  630  215   10  629  117   459 #>  [624,]  130  161  687  939  750  367  909  886   81   837 #>  [625,]  664  365  372  787  720  437  586  632  449   156 #>  [626,]  539  582  287  197  717  877   90  118  593   997 #>  [627,]  610  881  362  602  156  820  992  986  183   587 #>  [628,]  341  412  388  729   68  253  648  324  870   829 #>  [629,]  649  749  211  597  674  768  363  925   10   397 #>  [630,]  985  459  215  934  924   18  623    9  872   152 #>  [631,]  895  883  112  863  522  325  474  899  694   504 #>  [632,]  746   13  449  372  992  625  720  676  664   586 #>  [633,]  841  917  320  101  302  935   24  355  561   210 #>  [634,]  599  943  725  936  907  423  690  347  401   548 #>  [635,]  946  999  318  944  246  286  440   93  356    69 #>  [636,]  497  759  535  479  976  476  357  500  189   731 #>  [637,]  376  424  452  334   33  342  655  747    1   129 #>  [638,]  207  254  374  379  274  649  748  749  211   181 #>  [639,]   55  786  332  116  345  438  806  513   98   890 #>  [640,]  319  660  717  626  645  539  686  546  656   287 #>  [641,]   41  460  555  305  189  888  185  707  833    18 #>  [642,]  723  313   81  909  705  431  750  428  367   400 #>  [643,]  462  507  738  848  200  957  751  815  592   827 #>  [644,]  171  656  948  203  775  210  910  836  931   825 #>  [645,]  956  546  919  686  981  870  767  550  543   660 #>  [646,]  253    8  989  648  499  956   23  361   46   729 #>  [647,]  730  303  669  470  142  152  215  176  186   360 #>  [648,]  271  240  253  223  904  677  388  829  148   729 #>  [649,]  211  629  374  274  988  768  749  198  132   207 #>  [650,]  824  444  745   56  589  147  860   72  703   206 #>  [651,]  348  537   76  333  486  208  296  970  260   915 #>  [652,]  581  258  418  369   54  426  965  848  310   670 #>  [653,]  256  359  155  224  264  268  688   45  416   411 #>  [654,]  417  685  291  270  730  528  598   15  441   897 #>  [655,]  880  129  409  424  139  299   57  278  342   961 #>  [656,]  203  644  825  717  910   53  686  836  319   948 #>  [657,]  163   14  875  366  848  755  400  507  496   330 #>  [658,]  419  126  764  337  886  960   96  509  757   515 #>  [659,]  192  376  605  452  747  637   33  424  710   566 #>  [660,]  335  546  338  410  580  568  640  981  762   645 #>  [661,]   38  530  517  953  474  345  522  284   94   135 #>  [662,]  731  479   58  742  497  127  892  636  758   366 #>  [663,]  219  494  884  557  482  614   52  532  862   742 #>  [664,]  625  365  372  787  720  586  437  449  524   632 #>  [665,]  899  955  344  538  585  101  979  320  180   631 #>  [666,]  973  835  119  588  577  149  373  569  297   250 #>  [667,]  901   97  538  184  446   71   47  889  344   131 #>  [668,]  394  744  831  698   70  281  385  312  466   177 #>  [669,]  470  133  719  186  215  164  985  691  758   142 #>  [670,]  848  875  743  987  657  652  448  382 1000   808 #>  [671,]   41  534  305  854  828  641   18  403  559   888 #>  [672,]  508   89    7  760  858  269  763  454  793   258 #>  [673,]  506  453  594  471  769  483  216  695  734   405 #>  [674,]  363   10  243  943  725  423  924  597  925   629 #>  [675,]  167  792   26  590  191  421  777  503   22   787 #>  [676,]  938  358  737  435  372  632  365  202  251   625 #>  [677,]  968  388  904  648  271  621   92  962  148   829 #>  [678,]  392  259  607  338  580  220  343  882  510   410 #>  [679,]  523  100  728  317  810  518   74  745  329   212 #>  [680,]  266  195    4  424  747  342  376  184  317   378 #>  [681,]   29  953  284  109  136   69  260   98  438   530 #>  [682,]  174  706  117  252  898  785  124  498  166   851 #>  [683,]  233  245  526  960  295  114  404  299  822   852 #>  [684,]   78  262  845  381  840  692  475  701  693   384 #>  [685,]  441   15  598  270  291  248  594  752  908   597 #>  [686,]  717  870   53  709  203  824  860  645  825   956 #>  [687,]  624  130  367  362  161  902  750  909  939   705 #>  [688,]  370   82  411  256  156  903  339  800  992   653 #>  [689,]  923  231   83  364  904   40  941  962  389   148 #>  [690,]  423  749  599  634  943  254  374  397  990   929 #>  [691,]  511  758  189  164  133  750  555  606  719   186 #>  [692,]  154  845  684  840   78  262  150  753   11   693 #>  [693,]  150  701  874  262  684  692  196  384  945   407 #>  [694,]  504  863  803  788  883  871  708  312  631    50 #>  [695,]  405  964  769  483  594  963  506  673  216   843 #>  [696,]  789  215    5  176  872  719  575  133  173   597 #>  [697,]  972  982  916  782   16  978  991  188  294   276 #>  [698,]  177  831   70  668  779  950  744  563  101   302 #>  [699,]  358  561   62  524  676  247  355  283  841   938 #>  [700,]  942  727  549  957  104  415  487  378  958   168 #>  [701,]  475  684   78  478  693  845  874  115  150   692 #>  [702,]  847  157  179  913  463  896  131  429  492   226 #>  [703,]  147  212   56  860  718  805  160  766  188   779 #>  [704,]  865  158  452  465  334  930  409  141  727   114 #>  [705,]  313  909  367  723  237  642  322  542  750   428 #>  [706,]  252  682  174  898  117  331  201  993  785   498 #>  [707,]  249  185  426  797  146  833  555  460  601   977 #>  [708,]  734  803  963  694  600  453  504  756  216   843 #>  [709,]  717  686  722  849   53  197  870  273  203   825 #>  [710,]  544  536   20  905  799  604  386   33  192   605 #>  [711,]  433  244  251  435  482  279  352  510   39    82 #>  [712,]  397  578  761  401  393   30  606  181  725   347 #>  [713,]  871   49  275  807  296   29   50  547  469   788 #>  [714,]  615  312   70  349  466  477  969  385  668   307 #>  [715,]  566  603  439  611  974  328   21  384  289   747 #>  [716,]  408  665  570  567  425  522  585  375  899   209 #>  [717,]  686  709  203  825  656  626  197  870  849   539 #>  [718,]  147  576  860  188  703  108  978  805   16   920 #>  [719,]  133  164  186  470  606  162  741  669  215   173 #>  [720,]  787  814  862  625  664  372  365  433  435   800 #>  [721,]  996  963  964   31  230  405  949  488  737   842 #>  [722,]  849  197  709  825  132  997  649  910  153   717 #>  [723,]  642  313   81  705  909  367  571  750  404   330 #>  [724,]  814  503   32  862  608  777  800  191  614   720 #>  [725,]  943  455  578  397  634  712  674  599  925   821 #>  [726,]   93  166  109  869    2  282  225  430  469   117 #>  [727,]  487  942  700  334  378  104  452  465  415   168 #>  [728,]  523  745  100  329  762   74  679  518  810   975 #>  [729,]  223  240  954  648   25  589  579  829  253   261 #>  [730,]  215  696  623  647  176  132   15  629  872   789 #>  [731,]  758  662  479  742  636  366  535  497  614   746 #>  [732,]  754  873  481  521  993  839  420  533  541   464 #>  [733,]  802  396  478  619  804  475   91  484  310   293 #>  [734,]  708  453  422  402  471  756  694  673  504   788 #>  [735,]  122   36  406  137  476  159  394  977  495   774 #>  [736,]  543   24  931  979  209   77  180  108  633   101 #>  [737,]  358  676  938  488  532  721  202  908  949   632 #>  [738,]  200  751  346  815  451  784  592  228  867   643 #>  [739,]  212   74  779  766  986   48  265  329  820    87 #>  [740,]   79  942  465  450  104  700   42  784  727   995 #>  [741,]   30  575  911  162  606  416   13  719  393   224 #>  [742,]  731  662  532  142  758  614  985  557  127   470 #>  [743,] 1000  234  670  351  588  187  987  875  569   848 #>  [744,]  668  831  394  698  586  876  398  385  950    70 #>  [745,]  728  762  523  100   74  329  679  975  810   650 #>  [746,]   13  632  992   28  584  449  535  776  586   357 #>  [747,]  424  376  195  605  680  655  637  328  880   409 #>  [748,]  638  197  379  626  997  877   37  709  823   480 #>  [749,]  423  690  629  211  374  649  397  599  274   943 #>  [750,]  909  367   81  705  642  542  313  723  330   687 #>  [751,]  346  200  738  451  587  228  602  551  867   121 #>  [752,]  529  598  270  685  248  594  998  505  441   768 #>  [753,]  840   11  556  143  340  314  812  263  288   845 #>  [754,]  333  732  420  873  481  541  797  464   36   486 #>  [755,]  366  163  400  330   81  657  339   14  479   189 #>  [756,]  375  567  734  600  708  453  422  522  390   816 #>  [757,]  515  830  556  812  126  811  419  527  458   886 #>  [758,]  731  691  479  189  719  662  636  133  411   742 #>  [759,]  636  535  497  476  137  449  495  481  949   479 #>  [760,]  793   89    7  193  172  672  382  448  269   508 #>  [761,]  397  211  276  978  578  181  782  443  712   188 #>  [762,]  329  728  975  745   74  100  518  523  981    19 #>  [763,]  619  120   91  326  601  146  249  733  426   293 #>  [764,]  960  245  419  515  190  801  542  658  144   238 #>  [765,]  912  968  181  134  621  829  371   92  677   824 #>  [766,]  212  265  739   74  860  703  779  820   56    87 #>  [767,]  947  981  395   23  261   84  728  546  745   361 #>  [768,]  649  629  988  211  153  456   15  274  598   198 #>  [769,]  695  673  506  816  453  966  594  405  596   964 #>  [770,]  179   64  107   94  131  432  390  567  522   375 #>  [771,]  902  885  362  416  877  610  593  911  236   304 #>  [772,]   55  138  513  806  432  308  913  890  809   429 #>  [773,]  382  808   85  448  501  827  462  507  848   172 #>  [774,]  122  476  491  735  496  525  595  301  394   588 #>  [775,]  836  644  938  251  358   15  948  910  676   202 #>  [776,]   28  160  500  584  277  385  322  820  805   535 #>  [777,]  191   32  800  451  787  121  814  590  156   167 #>  [778,]  781  243  469  972  597  467   10  674  442   166 #>  [779,]  177  739  563  698  212  950  493   48   70   317 #>  [780,]  967  857  878  926  414  304  205  434  341   480 #>  [781,]  243  778  552  807   66  597  925  124  442   178 #>  [782,]  276  443  978   16  972  188  697  916  761   982 #>  [783,]  656  203  836  319  717  640  709  644  775   722 #>  [784,]  738   33  846  200  815  604  592  751  323   574 #>  [785,]  201  498  174  897  998  682  843  124  248   547 #>  [786,]  345  639  332  325  474  116  890   98   55   513 #>  [787,]  720  191  625  664  777   32  365  156   39   814 #>  [788,]  442  504  871  694  863  547  843  803  713    50 #>  [789,]  696  575    5  597   15  872  925  908  377   441 #>  [790,]  873  541   76  292  616  383  348  420  533   333 #>  [791,]  966  769  695  405  996  964  506   62  963   721 #>  [792,]   26  590  675   22  167  421  922  503  191   777 #>  [793,]  760  172   89    7  193  448  553  382  827   773 #>  [794,]   46   27  516  135  364  899  402  112  955   499 #>  [795,]  175   95  368   84  386  605  361  344   23   947 #>  [796,]   11  515  753  812  556  840  314  154   96   830 #>  [797,]  977  707  481  497  249  833  137  754  431   636 #>  [798,]  918  303  669  305  564  691  758  142  470   742 #>  [799,]  386  111  106  983  544   59  905  184    4   336 #>  [800,]  814   32  777  191  156   82  720  787  862   370 #>  [801,]  288  542  295  914  245  237  238  548  764   812 #>  [802,]  733  478   91  396  619  348  475  804  651   701 #>  [803,]  694  863  883  708  504   50  895  281  631   788 #>  [804,]  310  114  965  396  868  733  293  619  369   526 #>  [805,]  920  427  703  584  188  952  147  160   28   776 #>  [806,]  890  308  116  562  513  519  639  786   55   241 #>  [807,]   49  713  166  781  547  871  469  898  174   243 #>  [808,]  382  773  448  217   85  670  848  987  502   827 #>  [809,]  308  806  894  772   21  890  439  141  513    55 #>  [810,]  100  518  679  317  728  523  329  745  762   558 #>  [811,]  289  340  458  757  556  143  617  515  611   579 #>  [812,]  556  527  515  830  757  801  436  288  914   458 #>  [813,]   83  904  231  364  689  560  389  271  148   469 #>  [814,]  862  800  720   32  724  787  191  777  664   614 #>  [815,]  592  738  200  751  587  346   33  784  643   228 #>  [816,]  769  390  596  453  966  565   38  695  673   471 #>  [817,]  748  709  638  520   68  207  198  480  722   823 #>  [818,]   69  726   93  225  635  681  109    2  869   490 #>  [819,]  113  259  232  932  678  421  338  410  392   335 #>  [820,]  584  986  212  739  627  776  992   13   56    28 #>  [821,]  455  315  573  613  891  140  548  468   49   428 #>  [822,]  404  526  400   14    3  233  837  723  163   496 #>  [823,]  197  626  118  997  722  836    5  264  132   360 #>  [824,]   56  650   90  870  860  912  885  593  287   765 #>  [825,]  910  203  377  849  717  153  656   53  860   427 #>  [826,]  892  306  618  521  149   99  297  481  350    88 #>  [827,]  462  507  903  339  448  172  755  501  848   193 #>  [828,]  854  601  185    9  559   18  888  468  146   461 #>  [829,]  579   72  206  223  765  436  134  648  677   962 #>  [830,]  527  556  812  757  515  436  205  458  579   134 #>  [831,]  698  668  744  177  950  563  876  394  779   301 #>  [832,]  927   80  512  489   73  252  430  898  221   109 #>  [833,]  189  431  555  707  622  400  797  642  497   468 #>  [834,]  250  577  842  583  666  528  306  149  230   826 #>  [835,]  149  666  351  577  588  533  973  525  373   826 #>  [836,]  910  775  203  722  825  656   15  251  938   197 #>  [837,]    3  233  822  130    1  683   81  624  937   400 #>  [838,]  209   65   24  386   95  983  425  106  344   795 #>  [839,]  420  533  732   58  521  326  797  249  754   481 #>  [840,]  845  753  515   78  340  143  190  960   11   556 #>  [841,]  633  935  561  917  320  355  524   62  600   302 #>  [842,]  528  230  350  721  250  897   99  996  618   826 #>  [843,]  483  552  442  785  788  453  178  963  248   695 #>  [844,]  389  267  407  490  356  332  438  639  115   286 #>  [845,]  840   78  684  692  154  753  190  115   11   461 #>  [846,]  784  738   17  200  102  751  451  643  815   228 #>  [847,]  889  131  702  446  199   63  667  585  214   336 #>  [848,]  670  657  507  875  448  163  462  827   14   643 #>  [849,]  722  997  197  379  825  153  211  393  377   709 #>  [850,]  254  520  514  207   68  371  638  374  621   690 #>  [851,]  447  165  331  124  459  174  498  934  201   473 #>  [852,]  307  299  571  921   40  617  887  387   57   941 #>  [853,]  608  525  876   75  744  373  399  301  588   664 #>  [854,]  828  559    9   18  888  185  601  461   80   403 #>  [855,]   25  974  267  611  289  811  954  328  729   603 #>  [856,]  135  529  471  505  402  422  673  453  734    38 #>  [857,]  434  110  558  780  205  304  939  967  810    12 #>  [858,]  337  454  233  508    3  837  965  658  381   419 #>  [859,]  300   54  187  450  643 1000  700  652  957   418 #>  [860,]   56  718  703  147  212  766  824  650   74   576 #>  [861,]  413  236  879  926  877  893    6  990  255    37 #>  [862,]  814  720  724  614  433  800  787  372   32   557 #>  [863,]  883  504  694  928  474  803  871  631  325   788 #>  [864,]  341  395  956  767  645  412  261  628  947   287 #>  [865,]  704  158  114  334  465  452  409  930  727   139 #>  [866,]  980  589  615  444  969  499  714  364  899   562 #>  [867,]  595  549  451  751  346  301  200  738  415    48 #>  [868,]  537  970  139  159  114  526  486  852  158   404 #>  [869,]   93  726    2  674  318  166  559  924  282   363 #>  [870,]  686   90  824  287  717  885  650  956  709   593 #>  [871,]  713  788  275   49   50  504  863  928  296   694 #>  [872,]  459  215  447  696  789  165  597  291  851   124 #>  [873,]  464  541  754  732  993  333  900  915  383    76 #>  [874,]  693  407  701  894  384  478  472  396  262   733 #>  [875,]  657  670  848  163   14  569  366  977  426   479 #>  [876,]  540  398  394  301  831  744  226  668  853   199 #>  [877,]  236  771  861  926  885  879  626  893  997   379 #>  [878,]  967  926  780  304  414  939  857  413  236   771 #>  [879,]  236  893  926  990  885  861  877  771   90   830 #>  [880,]  655   57  299  278  409  129  961  139  933   391 #>  [881,]  602  627  610  551  362  587  183  330  346   156 #>  [882,]  338  550  392  607  220  259  265  222  678   343 #>  [883,]  895  631  863  474  803  325  504  694  928   112 #>  [884,]  482  494  244  557  711  663  742  251  303   202 #>  [885,]   90  236  771  879  287  824  593  877  926   893 #>  [886,]  161  757  658  126  130  764  624  419  687   830 #>  [887,]   40  307  206   72  458  852  941  962  527   545 #>  [888,]   18    9  934  305  185  468  854  828  559   189 #>  [889,]  847  131  446  667  901  585  336   63  538   570 #>  [890,]  806  519  308  562  116  513  786  241  639   332 #>  [891,]  263  613  288  548  455  821  242  315  140   914 #>  [892,]  306  826  618   58  521   99  297   88  350   481 #>  [893,]  990  879  236  347  379  885  861  254  181   912 #>  [894,]  396  865  809  704  874  158  439  384  114   141 #>  [895,]  631  883  863  112  474  522  538  325  803   899 #>  [896,]  141  104  429  465  727  865  704  958  463   995 #>  [897,]  201  498  785  998  528  291  165  248  842   124 #>  [898,]  252  430  166  682  174  331  807  109   80    73 #>  [899,]  955  112  516  665  631  895  325  364  344   969 #>  [900,]  221  517  213  915  464  927  993  873  541   612 #>  [901,]  667   97  184  446  983  106  344  538  336    63 #>  [902,]  771  687  362  134  705  367   12  313  610   961 #>  [903,]  339  507  827  551  330  881  501  411  755   602 #>  [904,]  271  231  962  677  648  813  689  148  364    83 #>  [905,]  544   87  568  799  410  329  536  922  574    20 #>  [906,]   79  182  930  572  465  704  865  452  894   141 #>  [907,]  599  936  634  164  690  423  990   37  360   152 #>  [908,]  280  441  483  952  552  216  291  377  948   964 #>  [909,]  750  705  367  313  542  642   81  723  237   687 #>  [910,]  825  377  203  427  836  849  575  393  722   197 #>  [911,]  416  741   30   45  606  162  362  367  347   771 #>  [912,]  765  181  968  134   92  824  393  621  371   962 #>  [913,]  298  651   47  513  432  477   71  537  466    76 #>  [914,]  237  315  542  401  801  288  428  322  295   705 #>  [915,]  464  213  383   50   76  296  900  333  713   260 #>  [916,]  972  697   16  442  782  991  982  552  276   978 #>  [917,]  302  633  841  524  210  101  283  698  952   320 #>  [918,]  798  239  303  305  534  142  103  641   41    85 #>  [919,]   65  645  989  956  947   23  546  981  767   543 #>  [920,]  805  427  952  188   16  276  377  443  782    66 #>  [921,]  571  316  387  277  852  428  307  322   40   315 #>  [922,]  421   26  111  544  905  792  799  607  568    59 #>  [923,]  689  941  231  267   40  389  887   83  307   148 #>  [924,]  623  363  674  630  951  936  423  599  869   152 #>  [925,]   66  597  443  397  243  578  276  761  781   782 #>  [926,]  236  879  878  413  861  967  780  877  885   771 #>  [927,]  832  900   80  221  489  252   73  430  898   541 #>  [928,]  325  863   98  504  112  871  275  969  609   883 #>  [929,]   92  621  371  436  968  242  677  440  246   578 #>  [930,]    1  452  704  465  865   79  906  158  965   727 #>  [931,]   77  736  422  210   24  108  402  979  543   633 #>  [932,]  392  338  259  678  882  819  319  170  220   607 #>  [933,]   12  961  545  278  299   57  458  391  571   880 #>  [934,]  331   88   73  888    9  851   18  165  447   630 #>  [935,]  561  841  355   63  247  633   59  336  320   446 #>  [936,]  907  599  634  152  559  423  924   18  403   943 #>  [937,]  110  278    1  880  566   57  637  409  837   655 #>  [938,]  676  358  737  251  435  202  632  365  372   910 #>  [939,]  624  130  687  857  304  161  878  886  902   362 #>  [940,]  531   44  553  125   17  624  903  564  161   130 #>  [941,]  923  617  143   40  307  887  689  267  340   458 #>  [942,]  700  727  104  378  465   42  415  452  487   334 #>  [943,]  725  423  578  397  634  674  599  455  712   690 #>  [944,]  946  246  440  467   10  999  374  318  274   988 #>  [945,]  196  693  454  262  484  472  384  894  874   858 #>  [946,]  944  246  440  374  467  318   10  999  274   635 #>  [947,]   23  767  361   84  261   95  981  444  956   395 #>  [948,]  280  210  216  952  908  644  405  964   77   358 #>  [949,]  488  357  473  586  535  976  759  476  721    28 #>  [950,]  563  831  177  698  779   48  739  493   59   744 #>  [951,]  117  124  623  363  498  851  459  682  924   174 #>  [952,]  280  920  427  805  302  216  377  948  488   908 #>  [953,]  345  260  681   29   98  438  213  609  490   786 #>  [954,]  328  223  729  589  240  391  579  206   72   866 #>  [955,]  899  112  665  312  516  180  101  631   70   979 #>  [956,]  645  546  870  981  686  767  919  646  864   947 #>  [957,]  418  487  965  549  581  168  369   54  643   700 #>  [958,]  415  226  540  301  549  214  104  595   42   876 #>  [959,]  102  457  335  580  352  510  846  410  574    82 #>  [960,]  764  245  419  515  190  801  683  381  757   295 #>  [961,]  545   12  933  880  278  571  299  391   57   313 #>  [962,]  904  560  271  677  887  968  689  188  147    40 #>  [963,]  996  721  964   31  405  708  695  230  843   216 #>  [964,]  405  216  695  963  483  721  280  996  210   908 #>  [965,]  369  418  310  581  258  957  233  804  114   652 #>  [966,]  791  769  695   62  405  996  964  816  963   506 #>  [967,]  780  878  414  926  857  939  480  236  304   413 #>  [968,]   92  677  621  181  929  371  765  912  978   962 #>  [969,]  477  112  714  928  364  325  332  516  307   116 #>  [970,]  537  486  296  387  316  868  406  159  495   272 #>  [971,]  327  463  369  187  168  418  157  581  965   652 #>  [972,]  916  697  782  982   16  978  276  443  991   442 #>  [973,]  666  119  373  835  351  588  234  399   75   492 #>  [974,]  855  603  611  328  566  289  954   25  715   391 #>  [975,]   19  762   74  329  745  265  728  593  100   739 #>  [976,]  500  357   28  535  636  949  606  776  473   488 #>  [977,]  797  735  481  137  122   36  159  707  875   486 #>  [978,]  782  188  761  276  697   16  972  153  968   982 #>  [979,]  180  108  101  543   24  736  955  499  576   665 #>  [980,]  589  866  499  271  444  364  223  904  689   648 #>  [981,]  546  550  762  728  745  767   74   87  329   523 #>  [982,]  697  972  294  782  916  456  991  153  978   576 #>  [983,]  106  386    4  799  901  184  344   59  680   266 #>  [984,]  132  649  749  198  629  730  374   37  423   638 #>  [985,]  630  142  215  459   88  669  742  934  872   165 #>  [986,]  121  739  156  820  627   48   39  183  265   222 #>  [987,]  502  217  670  569  204  875  127  743  808   848 #>  [988,]  274  153  211  467  649   43  374  982  978   440 #>  [989,]  646   23  919   65  947    8  956  645  361   261 #>  [990,]  893  347  879   30  401  379  236  690  712   238 #>  [991,]  916  697  402  982  972  294  422  576  108   456 #>  [992,]   13  746  156  627  632  820  584  625   28   881 #>  [993,]  464  873  331  900  252  732  898  169   73   706 #>  [994,]  127  204  502   58  306  892  987  662  227   250 #>  [995,]   97  104   42  214  896  415  958  667  942   378 #>  [996,]   31  721  963  230  964  405  695   75  842   949 #>  [997,]  379  197  849   30  393  162  181    5  722   741 #>  [998,]  248  270  498  785  897  594  596  201  843   291 #>  [999,]  440  286  246  356  318  467  813  944  148   929 #> [1000,]  743  234  187  351  670  492  327  588  151   549 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.58122259 0.6198485 0.6216532 0.6346727 0.6547075 0.6553944 0.6650696 #>    [2,] 0.45711792 0.5780538 0.6160875 0.7792763 0.7931624 0.8141851 0.8345657 #>    [3,] 0.34116322 0.4820953 0.5639050 0.6887887 0.7041329 0.7717031 0.7829594 #>    [4,] 0.38613312 0.4328555 0.4495399 0.4665793 0.5140636 0.5303210 0.5534697 #>    [5,] 0.53951455 0.5465346 0.5612559 0.5735809 0.5769004 0.6301520 0.6808308 #>    [6,] 0.88956700 0.9315227 1.1086081 1.2244674 1.2816359 1.2915183 1.3039062 #>    [7,] 0.53860366 0.6386735 0.6807836 0.7478630 0.8846742 0.9392682 0.9565446 #>    [8,] 0.87030555 0.9202114 0.9550804 1.0233239 1.0570121 1.1589675 1.2551497 #>    [9,] 0.30079205 0.4614939 0.4809154 0.4960071 0.6995973 0.7060196 0.7673875 #>   [10,] 0.57929627 0.5898203 0.7325672 0.7817214 0.8458088 0.8462246 0.9207065 #>   [11,] 0.32626314 0.5169629 0.6687036 0.7180911 0.7544464 0.7991819 0.7998913 #>   [12,] 0.25580824 0.2635220 0.2788289 0.4396953 0.4531390 0.5294129 0.5354843 #>   [13,] 0.35992733 0.3781437 0.4843287 0.5389210 0.5842028 0.5900303 0.6446380 #>   [14,] 0.13734837 0.3294818 0.3770895 0.4250634 0.5161321 0.5695753 0.5821764 #>   [15,] 0.57284280 0.6884159 0.6893935 0.8190073 0.9365149 0.9446844 0.9507434 #>   [16,] 0.30544971 0.3385177 0.4466606 0.4564590 0.4755262 0.4786792 0.4793757 #>   [17,] 0.77144659 0.9493879 0.9929059 1.0206180 1.0365518 1.0431948 1.0532949 #>   [18,] 0.30079205 0.3314055 0.5132506 0.5507866 0.7088456 0.7648920 0.7979437 #>   [19,] 0.27764546 0.5470486 0.5989966 0.6015800 0.6148635 0.6873387 0.6920324 #>   [20,] 0.40493370 0.4137836 0.5421725 0.5459484 0.5993895 0.6503612 0.6800513 #>   [21,] 0.73581514 0.8646242 0.9388800 0.9675018 1.0191378 1.0668062 1.0686644 #>   [22,] 0.53658330 0.7251595 0.8150292 0.8460439 0.9252681 1.0003095 1.0020576 #>   [23,] 0.30976908 0.4785478 0.7133015 0.7784859 0.7847713 0.9172746 0.9733667 #>   [24,] 0.45635575 0.5290964 0.6072869 0.6351735 0.6735354 0.6950877 0.7114892 #>   [25,] 0.41490636 0.7306585 0.7726125 0.8259298 0.8282386 0.8909266 0.8966954 #>   [26,] 0.32819920 0.6472404 0.6669286 0.7078225 0.7251595 0.7327431 0.7403661 #>   [27,] 0.60897156 0.7588781 0.8090711 0.8255334 0.9293289 0.9534562 0.9589873 #>   [28,] 0.19509103 0.4209269 0.4342033 0.4677198 0.4735924 0.4769595 0.4949582 #>   [29,] 0.36017859 0.4375565 0.4751895 0.5459196 0.5881166 0.6088132 0.6244786 #>   [30,] 0.33606504 0.3752403 0.4643884 0.5323467 0.5780706 0.5812901 0.5875768 #>   [31,] 0.29828307 0.5095570 0.5334158 0.5598878 0.7034203 0.7785356 0.7917229 #>   [32,] 0.21291078 0.2878220 0.4773359 0.5131704 0.5776940 0.6715721 0.6740976 #>   [33,] 0.38544054 0.5459484 0.5940967 0.7054005 0.7502714 0.7850111 0.8105313 #>   [34,] 0.53898791 0.6045596 0.6116781 0.6549830 0.6862370 0.7008572 0.7434693 #>   [35,] 0.92021139 1.4791708 1.6514463 1.7292886 1.7609894 1.9261175 1.9437807 #>   [36,] 0.25724736 0.3888182 0.3988154 0.4398644 0.5397655 0.5486134 0.5558487 #>   [37,] 0.92525451 0.9605041 0.9739455 1.0270869 1.0278454 1.0476516 1.1282117 #>   [38,] 0.67554068 0.6965451 0.8360395 0.8532582 0.9201110 0.9794260 1.0460264 #>   [39,] 0.35249392 0.5493612 0.5905615 0.6026190 0.6213144 0.6321548 0.6591908 #>   [40,] 0.19687010 0.3069157 0.4714819 0.5529627 0.5530965 0.5564460 0.5776136 #>   [41,] 0.39338453 0.4820159 0.7040211 0.8410932 0.8551712 0.8841107 0.9302940 #>   [42,] 0.57656888 0.7177820 0.7361139 0.8140530 0.8652673 0.8921828 0.8988093 #>   [43,] 0.54698196 0.6702708 0.7142830 0.7473962 0.8176653 0.8351385 0.8375101 #>   [44,] 0.72059349 0.7258054 0.8143724 0.8343501 0.9493879 0.9932366 1.0140758 #>   [45,] 0.39024789 0.4738184 0.5095355 0.5190117 0.5248002 0.5884661 0.6484368 #>   [46,] 0.44718449 0.7291382 0.8074190 0.8273954 0.8453518 0.8769855 0.8773487 #>   [47,] 0.14323499 0.3428474 0.5254017 0.6470193 0.7156971 0.7223927 0.7456151 #>   [48,] 0.32881803 0.4378748 0.4383179 0.5008861 0.5278338 0.5294242 0.5625936 #>   [49,] 0.39273412 0.4428367 0.4505095 0.5161738 0.5518205 0.5695717 0.6001123 #>   [50,] 0.47199068 0.5085270 0.5518205 0.5674798 0.5684654 0.5856549 0.5899699 #>   [51,] 0.57821631 0.6199020 0.6945753 0.7087092 0.7389029 0.7559860 0.7838870 #>   [52,] 1.14190706 1.4835410 1.5045755 1.5769197 1.5802955 1.6196879 1.6416578 #>   [53,] 0.42771037 0.6965567 0.6995245 0.6997384 0.7486314 0.7696537 0.8110745 #>   [54,] 0.61527824 0.6194978 0.6403524 0.6510626 0.7278877 0.7741179 0.7962220 #>   [55,] 0.47041032 0.6597326 0.7155144 0.7263146 0.8185147 0.8297356 0.8564227 #>   [56,] 0.45927852 0.4601007 0.4747000 0.4904289 0.6178190 0.6215297 0.6356244 #>   [57,] 0.17147036 0.1801864 0.3868366 0.4046266 0.4221751 0.4506516 0.5098558 #>   [58,] 0.44643011 0.5084009 0.6538958 0.6569681 0.7073255 0.7549930 0.7566872 #>   [59,] 0.39772349 0.4236074 0.4959001 0.5065642 0.5877064 0.5928053 0.6309267 #>   [60,] 0.88866175 1.0511741 1.1299711 1.4769868 1.5024156 1.6177037 1.6602937 #>   [61,] 1.17774591 1.3273590 1.5542680 1.7637929 1.9294484 1.9892048 2.0809715 #>   [62,] 0.65574547 0.6949814 0.6953869 0.8849745 0.9038573 0.9171305 1.0393365 #>   [63,] 0.29494627 0.4373590 0.5065642 0.5415121 0.5445121 0.6215436 0.7227748 #>   [64,] 0.93875636 1.1367003 1.5287964 1.5337412 1.6399291 1.6545483 1.7342239 #>   [65,] 0.88502691 0.9497892 1.0472838 1.0643652 1.0952935 1.1411473 1.2304203 #>   [66,] 0.13991958 0.4693938 0.4999863 0.5108248 0.5294371 0.5331338 0.5340398 #>   [67,] 0.76208499 0.8321029 0.9652295 1.0395306 1.0461751 1.1284682 1.1359030 #>   [68,] 0.59970390 0.8821102 0.9703782 1.1117692 1.1119068 1.1485819 1.1903476 #>   [69,] 0.71744784 0.7945502 1.1522913 1.1845377 1.2134439 1.2201179 1.2252872 #>   [70,] 0.24815838 0.4133151 0.4496195 0.4669543 0.5049055 0.5519513 0.5678133 #>   [71,] 0.14323499 0.4012362 0.4672873 0.6041141 0.7174050 0.7684570 0.8054647 #>   [72,] 0.05044767 0.3138046 0.3530980 0.4500983 0.4690718 0.4709797 0.5294129 #>   [73,] 0.53729331 0.5397693 0.6572769 0.6959356 0.6999045 0.7184902 0.8100386 #>   [74,] 0.27885771 0.3679355 0.3698594 0.3765215 0.3854955 0.4115707 0.4285500 #>   [75,] 0.40437626 0.6205470 0.7034203 0.7062951 0.7777809 0.7846093 0.8508050 #>   [76,] 0.33282060 0.4974186 0.5535218 0.5798158 0.6251621 0.6471069 0.6671295 #>   [77,] 0.39072775 0.5806065 0.7209451 0.7213831 0.7499538 0.7518530 0.7856264 #>   [78,] 0.33059219 0.4573338 0.5853118 0.7131172 0.7193250 0.7231370 0.7480482 #>   [79,] 0.71131015 0.7385187 0.8553686 0.9981619 1.0165030 1.0245465 1.0993365 #>   [80,] 0.46878398 0.5372933 0.5609688 0.6866302 0.7329443 0.7373941 0.8127639 #>   [81,] 0.35563696 0.3674945 0.3742749 0.3792479 0.3983085 0.3999034 0.4193818 #>   [82,] 0.36562952 0.5293930 0.6194954 0.6321548 0.6707124 0.7543145 0.8492018 #>   [83,] 0.43012181 0.4454455 0.4496778 0.5208766 0.5760130 0.5859192 0.6182277 #>   [84,] 0.42044170 0.5716739 0.6915789 0.7133015 0.7259945 0.7443719 0.7666860 #>   [85,] 0.58276132 0.6708969 0.8004554 0.8539293 0.8637346 0.8817257 0.8975088 #>   [86,] 0.79185140 0.8973483 1.0311640 1.0659577 1.0722282 1.1079658 1.2746431 #>   [87,] 0.44195307 0.4645881 0.4918268 0.5464645 0.5866861 0.5979628 0.6049807 #>   [88,] 0.36383781 0.5462873 0.5756507 0.6370650 0.6569681 0.6630174 0.6652995 #>   [89,] 0.53860366 0.8486058 0.8928365 0.9570667 0.9900953 1.0143137 1.1525199 #>   [90,] 0.31363201 0.5274687 0.5839197 0.5910634 0.7575019 0.7731709 0.7741966 #>   [91,] 0.64185949 0.7640343 0.8003063 0.8501749 0.8812521 0.8829397 0.8846691 #>   [92,] 0.24589862 0.3374386 0.4023278 0.4583511 0.5025456 0.5456720 0.5644892 #>   [93,] 0.44521327 0.4571179 0.5396239 0.7149451 0.7841182 0.8612611 0.9352953 #>   [94,] 0.66737625 0.7957730 0.8601510 0.9016104 1.0315134 1.0381096 1.0607898 #>   [95,] 0.64829046 0.7332807 0.8496356 0.8548244 0.9159990 0.9474136 0.9645765 #>   [96,] 0.65404540 0.7664188 0.7996717 0.8602780 0.8760671 0.8824329 0.9015799 #>   [97,] 0.50951619 0.5517463 0.6189989 0.6977769 0.7408306 0.7496582 0.7518559 #>   [98,] 0.32717627 0.3467743 0.4626483 0.5494024 0.6047198 0.6058935 0.6088132 #>   [99,] 0.28762802 0.4128126 0.4299539 0.4495760 0.4802889 0.5610539 0.6630174 #>  [100,] 0.23392120 0.2427160 0.2683841 0.3084837 0.3123021 0.3933377 0.4047243 #>  [101,] 0.38464057 0.4823274 0.5288702 0.5629740 0.5644673 0.5678133 0.5979797 #>  [102,] 0.84265178 0.8910625 1.0206180 1.1296164 1.4056982 1.5240857 1.5264272 #>  [103,] 1.14101064 1.1413345 1.2132499 1.5169063 1.6492558 1.7421456 1.7561349 #>  [104,] 0.57656888 0.6045440 0.6142873 0.6224041 0.6705106 0.6943049 0.7786115 #>  [105,] 1.23911236 1.3343226 1.4014865 1.4072880 1.4107577 1.4836769 1.4922926 #>  [106,] 0.27446592 0.4959001 0.4995285 0.5233809 0.5303210 0.5563689 0.6200198 #>  [107,] 0.72988934 0.9209406 0.9966937 1.0739177 1.1356074 1.2751098 1.2785653 #>  [108,] 0.39674701 0.4825802 0.5160464 0.5739035 0.6567622 0.6976350 0.7112581 #>  [109,] 0.47154959 0.5402248 0.6178353 0.6456951 0.6953772 0.7247702 0.7258577 #>  [110,] 0.21336516 0.3174299 0.4810102 0.6818594 0.7773956 0.8540943 0.8710692 #>  [111,] 0.48773673 0.5928053 0.6138382 0.6740654 0.6951407 0.7706150 0.7959280 #>  [112,] 0.28377264 0.3543140 0.3870968 0.4713373 0.4841548 0.4906669 0.5488544 #>  [113,] 0.81103611 0.9839750 1.5478248 1.7648424 1.8131269 1.8197631 1.9310278 #>  [114,] 0.40004151 0.5442592 0.5535726 0.5941433 0.5958914 0.6415491 0.6534340 #>  [115,] 0.64930901 0.7116306 0.7231370 0.7384765 0.7405035 0.8002703 0.8071717 #>  [116,] 0.35641730 0.5028548 0.5564693 0.6302793 0.6575740 0.6631958 0.6764868 #>  [117,] 0.44183698 0.5057053 0.5207223 0.5900826 0.7194598 0.7620979 0.7695362 #>  [118,] 0.94548913 0.9521054 1.0834663 1.2070056 1.3520871 1.3745283 1.3859778 #>  [119,] 0.57318708 0.6957941 0.7397941 0.7744807 0.8120638 0.8152089 0.8175416 #>  [120,] 0.78974036 0.7972062 0.8281980 0.9454857 0.9893797 1.0069936 1.0258926 #>  [121,] 0.40896783 0.4161450 0.5173170 0.5294242 0.5606146 0.5748038 0.5811547 #>  [122,] 0.25985954 0.3739763 0.5117378 0.5405047 0.5728198 0.6418830 0.6557862 #>  [123,] 1.65251646 1.6979190 1.8288075 1.8539469 2.0045742 2.0171179 2.0216659 #>  [124,] 0.42061834 0.4811231 0.4875303 0.5467515 0.5535998 0.5900826 0.5972749 #>  [125,] 0.38050807 0.8310618 0.8804725 0.9296302 0.9968483 1.0001249 1.0107383 #>  [126,] 0.41669564 0.5705732 0.6305870 0.6971334 0.8133186 0.8274775 0.8467178 #>  [127,] 0.32909367 0.4716262 0.6803498 0.7734966 0.7939964 0.8369868 0.8545799 #>  [128,] 0.68623704 0.7461042 0.7498024 0.8288154 0.8745405 0.8793071 0.9113977 #>  [129,] 0.33881355 0.3773154 0.3855977 0.4212120 0.4442350 0.5113669 0.5555443 #>  [130,] 0.12837489 0.4315330 0.4877341 0.6776837 0.6855088 0.7012365 0.7049766 #>  [131,] 0.49477945 0.5895559 0.7224130 0.7452614 0.7749051 0.7822219 0.8533556 #>  [132,] 0.86051293 0.8870923 0.9627467 0.9636158 0.9673400 1.0451767 1.0833036 #>  [133,] 0.16134035 0.3771927 0.5000450 0.5751024 0.6334577 0.6412421 0.6746697 #>  [134,] 0.47097970 0.5083228 0.5142609 0.5417757 0.5642029 0.5745237 0.5877114 #>  [135,] 0.67490721 0.8135556 0.9684214 0.9748653 0.9769279 0.9787483 1.0032049 #>  [136,] 0.42771459 0.5982193 0.6926255 0.7680013 0.8165454 0.8293456 0.8354214 #>  [137,] 0.16014993 0.3664778 0.3988154 0.4548507 0.4896916 0.5449679 0.6059375 #>  [138,] 0.29109318 0.7957730 0.8205107 0.8235481 0.8495340 0.8564227 0.9466018 #>  [139,] 0.30847557 0.3951357 0.4442350 0.5318058 0.5366147 0.5658653 0.5752625 #>  [140,] 0.20980380 0.3759328 0.5087197 0.5136822 0.5177251 0.5537038 0.5643980 #>  [141,] 0.60412752 0.6809352 0.7573626 0.7687175 0.8779530 0.8935278 0.9243055 #>  [142,] 0.67681552 0.7872766 0.9043392 0.9732379 0.9787229 1.0731769 1.0968115 #>  [143,] 0.26134845 0.4308969 0.4622633 0.4993979 0.6234626 0.6309859 0.6404863 #>  [144,] 0.52475573 0.5701703 0.6386735 0.6488148 0.6717199 0.7129399 0.7540535 #>  [145,] 1.12910032 1.1946960 1.2602207 1.2632627 1.3246190 1.3683177 1.3822400 #>  [146,] 0.19176023 0.3643136 0.4642179 0.5486948 0.5746497 0.6211337 0.6982458 #>  [147,] 0.28108835 0.3056433 0.4762899 0.5457833 0.5957725 0.6191511 0.6356244 #>  [148,] 0.34965883 0.5450375 0.5715827 0.5861854 0.6070381 0.6389247 0.6558549 #>  [149,] 0.49445957 0.5539076 0.5984862 0.8199298 0.8438475 0.8471181 0.8556217 #>  [150,] 0.61307265 0.9190072 1.0281339 1.2152953 1.2735023 1.2975264 1.3086448 #>  [151,] 0.63394915 0.8120697 0.8778122 0.8995469 0.9512813 0.9599320 1.0011659 #>  [152,] 0.64849584 0.9318532 0.9576569 0.9880316 1.0135725 1.0263041 1.0458479 #>  [153,] 0.46612373 0.5386035 0.5563452 0.5611023 0.5681664 0.5703687 0.5768353 #>  [154,] 0.51258840 0.6588897 0.7341956 0.8607672 0.8988347 0.9484943 0.9953770 #>  [155,] 0.57637266 0.5889871 0.6949469 0.7056529 0.7106079 0.7555750 0.7825739 #>  [156,] 0.44353813 0.5090152 0.5173170 0.5346643 0.5493612 0.5927737 0.5982934 #>  [157,] 0.47468287 0.7124707 0.8778122 0.9501697 1.0011335 1.0165608 1.1206924 #>  [158,] 0.34356847 0.3951357 0.4000415 0.5091564 0.5125067 0.5199072 0.5640989 #>  [159,] 0.48586223 0.5717547 0.5728198 0.6132784 0.6224184 0.6331896 0.6394361 #>  [160,] 0.26853858 0.2964680 0.4253129 0.4396298 0.4677198 0.5765958 0.5789861 #>  [161,] 0.37955663 0.4315330 0.5683373 0.6326279 0.8117046 0.8310618 0.8664679 #>  [162,] 0.33606504 0.4162990 0.4615806 0.4698100 0.5306920 0.5612559 0.5806861 #>  [163,] 0.13734837 0.2866813 0.3292534 0.4443866 0.5446907 0.5522722 0.5871626 #>  [164,] 0.29450673 0.3771927 0.4488623 0.6090262 0.6907890 0.7200307 0.7262093 #>  [165,] 0.32802451 0.4318312 0.5579497 0.6654361 0.6851107 0.7147657 0.7166782 #>  [166,] 0.44793395 0.4715496 0.5366353 0.5983419 0.6053624 0.6618230 0.7023389 #>  [167,] 0.23508044 0.5765737 0.6700851 0.6745728 0.6779237 0.7403661 0.7423742 #>  [168,] 0.66408438 0.6838827 0.7033227 0.7416938 0.7450771 0.7461102 0.7544139 #>  [169,] 0.77561686 0.8025961 0.8134489 0.8521160 0.8954638 0.9012444 0.9115735 #>  [170,] 0.55152718 0.6614885 0.6699273 0.7081835 0.7730438 0.9035187 0.9054836 #>  [171,] 0.65369666 1.0081514 1.1390688 1.1831087 1.2267992 1.2440828 1.2488561 #>  [172,] 0.63757557 0.6457495 0.8504220 0.8581111 0.8588358 0.8676363 0.9487144 #>  [173,] 0.24652709 0.3852788 0.4615806 0.5395145 0.5523883 0.6059134 0.6653937 #>  [174,] 0.26365450 0.4811231 0.4952305 0.5057053 0.5506028 0.5979243 0.5983419 #>  [175,] 0.60088697 1.1558631 1.2318292 1.2507356 1.3963384 1.4176048 1.4297055 #>  [176,] 0.38527876 0.5465346 0.5931116 0.6020053 0.6784941 0.7597012 0.7820474 #>  [177,] 0.30327634 0.4072999 0.4195875 0.4283814 0.4495399 0.4650805 0.4984632 #>  [178,] 0.31115613 0.4968893 0.5161738 0.5352144 0.6301072 0.6344959 0.6419909 #>  [179,] 0.72988934 0.8321029 0.8600973 0.9375403 0.9901940 1.0426136 1.0680391 #>  [180,] 0.24026308 0.3846406 0.5160464 0.6301522 0.6950877 0.7075452 0.7264119 #>  [181,] 0.38234692 0.4870408 0.4951806 0.5025456 0.5372548 0.5735002 0.5751568 #>  [182,] 0.86897386 0.9611168 1.0245465 1.1216535 1.1651328 1.2683994 1.3440533 #>  [183,] 0.32881803 0.4617648 0.4677935 0.5262038 0.5334734 0.5581556 0.5606146 #>  [184,] 0.42360740 0.4665793 0.4984632 0.5239882 0.5445121 0.5563689 0.5584346 #>  [185,] 0.33326742 0.4060257 0.4530110 0.4642179 0.6236100 0.6521300 0.7188454 #>  [186,] 0.29450673 0.4780329 0.5000450 0.5306920 0.5371804 0.6059134 0.6360701 #>  [187,] 0.74058428 0.8640671 0.8688109 0.9175256 0.9289956 0.9459144 0.9512813 #>  [188,] 0.30544971 0.3876770 0.4093885 0.4437271 0.4640404 0.4762899 0.4844557 #>  [189,] 0.28521473 0.3489950 0.4814746 0.5904165 0.6094087 0.6437408 0.6645386 #>  [190,] 0.55031444 0.5701703 0.6076038 0.6409228 0.6799009 0.7152474 0.7200899 #>  [191,] 0.14516589 0.2878220 0.4435590 0.5554161 0.5748038 0.6083064 0.6308001 #>  [192,] 0.66275445 0.6996139 0.7122543 0.9018151 0.9060216 0.9243055 0.9326027 #>  [193,] 0.55482785 0.6807836 0.7387135 0.7434842 0.7600063 0.7721729 0.8385304 #>  [194,] 1.90307929 1.9965386 2.0060820 2.0153194 2.0164125 2.0443276 2.1320691 #>  [195,] 0.36485173 0.3979121 0.4393937 0.5629935 0.6365212 0.6421032 0.6906777 #>  [196,] 0.82058853 0.9723123 1.0510385 1.0984701 1.1812835 1.1901654 1.2038421 #>  [197,] 0.50814225 0.6281038 0.6774283 0.6903556 0.7162987 0.8103112 0.8349974 #>  [198,] 0.88552988 0.9917410 1.0013229 1.0343558 1.0544455 1.1550388 1.2057738 #>  [199,] 0.45159085 0.6996313 0.7334251 0.7492957 0.7777809 0.8350612 0.8634456 #>  [200,] 0.16050213 0.2120765 0.3810995 0.4400732 0.6084107 0.6132070 0.6478070 #>  [201,] 0.28685918 0.4419250 0.4658369 0.6654361 0.7328494 0.7406376 0.7632271 #>  [202,] 0.56843042 0.5949110 0.6982478 0.7345531 0.7566082 0.8580110 0.9011761 #>  [203,] 0.35294051 0.5266811 0.6965567 0.7185265 0.7288509 0.8694521 0.9556732 #>  [204,] 0.32909367 0.4748899 0.7513879 0.7744858 0.8054311 0.8497121 0.8629751 #>  [205,] 0.63066502 0.6675085 0.6861888 0.6984967 0.7206218 0.7233922 0.7521549 #>  [206,] 0.05044767 0.3236918 0.3477581 0.4439840 0.4788410 0.5115099 0.5142609 #>  [207,] 0.46241975 0.4633536 0.4797157 0.7093097 0.8460317 0.8808874 0.8821102 #>  [208,] 0.49741859 0.7052543 0.7120325 0.7144267 0.7417858 0.8185147 0.8495340 #>  [209,] 0.45635575 0.7081835 0.7694528 0.8192826 0.8874580 0.9144676 0.9948404 #>  [210,] 0.39026444 0.4773653 0.5733948 0.6105288 0.6607226 0.6916319 0.7104408 #>  [211,] 0.29983056 0.4196547 0.5244486 0.5613802 0.5768738 0.5976749 0.6113722 #>  [212,] 0.35639677 0.3768032 0.3887733 0.4285500 0.4843009 0.4904289 0.5548285 #>  [213,] 0.37644161 0.4375565 0.5112114 0.6199020 0.6271535 0.6471069 0.6842335 #>  [214,] 0.51695900 0.7233742 0.7369722 0.8874028 0.8988093 0.9203413 0.9894665 #>  [215,] 0.48846066 0.5593362 0.6473970 0.6747428 0.7151740 0.7202959 0.7449098 #>  [216,] 0.36712624 0.3902644 0.4225211 0.4562059 0.5071092 0.5532899 0.6215774 #>  [217,] 0.55440519 0.7230311 0.8340820 1.0372950 1.0659226 1.1956411 1.2038405 #>  [218,] 1.21549906 1.3570303 1.6714708 1.9351277 1.9895430 2.0056497 2.0390871 #>  [219,] 0.80543113 0.8621788 0.8757517 0.9411416 0.9605851 1.0614873 1.1314597 #>  [220,] 0.49737120 0.6493120 0.6674062 0.7046175 0.7076637 0.7631834 0.7998702 #>  [221,] 0.46839281 0.5962691 0.6842335 0.6953772 0.6956324 0.7515093 0.7651033 #>  [222,] 0.35257848 0.3817680 0.4078833 0.5406285 0.5522977 0.5781621 0.6659627 #>  [223,] 0.24034640 0.3651717 0.4465304 0.5208628 0.5392618 0.5708165 0.6112952 #>  [224,] 0.40283739 0.5523883 0.5930243 0.6041307 0.6446380 0.6601835 0.6609363 #>  [225,] 0.61608752 0.6636542 0.7087092 0.8612611 0.8752159 0.9019679 0.9405977 #>  [226,] 0.34033823 0.3785632 0.5169590 0.5781782 0.5789503 0.6729270 0.8798704 #>  [227,] 0.63502002 0.8890332 0.9828781 1.0061006 1.0073610 1.0467500 1.0724397 #>  [228,] 0.42571374 0.4664346 0.4674720 0.4932327 0.5478423 0.6031995 0.6084107 #>  [229,] 0.96050414 1.1502847 1.3395516 1.4093467 1.4708721 1.5818508 1.6248655 #>  [230,] 0.55988775 0.5641919 0.5767169 0.6328819 0.6512502 0.7498024 0.7994509 #>  [231,] 0.32782038 0.3496588 0.4237538 0.4494832 0.4721201 0.5197775 0.5208766 #>  [232,] 0.81103611 1.2937544 2.0968611 2.2559520 2.2752912 2.4553382 2.4620502 #>  [233,] 0.48209531 0.4844138 0.4967727 0.5689258 0.6541010 0.6636789 0.6843652 #>  [234,] 0.67745000 0.6957941 0.7084308 0.7614651 0.8238149 0.8972835 0.8985744 #>  [235,] 0.97978272 1.0099024 1.0203879 1.0550141 1.0921517 1.1268754 1.1652548 #>  [236,] 0.32156118 0.4333580 0.5122375 0.5908985 0.6279771 0.6625068 0.7403501 #>  [237,] 0.21433680 0.3403909 0.3876266 0.4032809 0.4350219 0.4705955 0.4789620 #>  [238,] 0.48151622 0.4839650 0.5794578 0.6943219 0.7007789 0.7145892 0.7152957 #>  [239,] 0.91196782 1.0781285 1.1307561 1.2679817 1.3255304 1.3311111 1.3384724 #>  [240,] 0.24034640 0.4186607 0.4899108 0.5450375 0.6061478 0.6203280 0.6379947 #>  [241,] 0.57618762 0.7463897 0.8162017 0.8198530 0.8351518 0.8962762 0.9401251 #>  [242,] 0.46389883 0.4653505 0.5005002 0.5587041 0.5711325 0.5830491 0.6228589 #>  [243,] 0.23121203 0.4119003 0.5058168 0.5071746 0.5294371 0.5535998 0.5898404 #>  [244,] 0.75295862 0.7785748 0.9232249 1.0661999 1.0985618 1.1178487 1.1260634 #>  [245,] 0.31987813 0.4179121 0.4624133 0.4960497 0.5060128 0.5668288 0.6179269 #>  [246,] 0.22566117 0.3752315 0.4242664 0.5623346 0.5647797 0.6830693 0.7055337 #>  [247,] 0.20872271 0.4321172 0.4815369 0.5928056 0.6699273 0.6891212 0.7822839 #>  [248,] 0.35002420 0.4843970 0.4863745 0.6174631 0.6340799 0.6923848 0.7257597 #>  [249,] 0.19176023 0.4060257 0.4120318 0.4197767 0.6049998 0.6639346 0.6676546 #>  [250,] 0.52141245 0.6870681 0.7495735 0.7709237 0.7791528 0.7804531 0.7935357 #>  [251,] 0.56843042 0.6499447 0.7690173 0.7919324 0.8048321 0.8788344 0.9475986 #>  [252,] 0.33565256 0.4519453 0.5094956 0.6452077 0.6890885 0.6959356 0.7260498 #>  [253,] 0.44650455 0.6160082 0.6638719 0.6891888 0.7403638 0.7605405 0.7814667 #>  [254,] 0.47971575 0.5977538 0.5997026 0.6281813 0.6468197 0.7400450 0.8491621 #>  [255,] 0.80618739 0.9326849 1.0067420 1.2063528 1.2175667 1.2244674 1.2602762 #>  [256,] 0.29886887 0.4700165 0.7061063 0.7084813 0.7553023 0.7822894 0.7887901 #>  [257,] 0.90013271 0.9393918 0.9602131 0.9846931 1.0994278 1.1855751 1.2005657 #>  [258,] 0.27636074 0.2816996 0.4599916 0.6053821 0.6091714 0.6322489 0.6510626 #>  [259,] 0.55872877 0.5662271 0.5920800 0.6337024 0.6516593 0.7627658 0.8404397 #>  [260,] 0.35804511 0.3601786 0.3764416 0.4885485 0.5782163 0.6047198 0.6134511 #>  [261,] 0.65648844 0.7262890 0.7666860 0.7847713 0.8194962 0.8728494 0.9296943 #>  [262,] 0.43341135 0.4718007 0.6471574 0.7193250 0.8205885 0.8709092 0.9004993 #>  [263,] 0.27383155 0.3290635 0.4724690 0.5128856 0.5405765 0.5852162 0.6207728 #>  [264,] 0.24652709 0.4028374 0.4698100 0.5763727 0.6020053 0.6360701 0.6808308 #>  [265,] 0.38176803 0.4540824 0.5146556 0.5443995 0.5464645 0.5569290 0.6143491 #>  [266,] 0.30151798 0.3861331 0.5196803 0.5239882 0.5850712 0.6379259 0.6421032 #>  [267,] 0.50927664 0.5907378 0.6528996 0.7306585 0.7325555 0.7658404 0.7829251 #>  [268,] 0.31758945 0.5773629 0.5884661 0.6956527 0.7328287 0.7544174 0.7732631 #>  [269,] 1.19297467 1.2432542 1.4772437 1.5190966 1.5379521 1.6038158 1.6208572 #>  [270,] 0.48439698 0.5066011 0.5363958 0.5794772 0.7614314 0.7816982 0.8469849 #>  [271,] 0.30476976 0.4064935 0.5329786 0.5446934 0.5512306 0.6638719 0.6785844 #>  [272,] 0.40699514 0.5276995 0.5746497 0.6484830 0.6574036 0.6676546 0.6768287 #>  [273,] 0.42771037 0.7918514 0.8332206 0.8441683 0.9129337 0.9143487 0.9767515 #>  [274,] 0.29983056 0.3684296 0.5198107 0.5955892 0.6093911 0.6524674 0.6589147 #>  [275,] 0.41551963 0.4252645 0.4470634 0.4497314 0.5244533 0.6058935 0.6129594 #>  [276,] 0.19085075 0.2184174 0.3704116 0.4406478 0.4437271 0.4466606 0.4535389 #>  [277,] 0.26853858 0.3848818 0.4007951 0.5241234 0.5325657 0.5351965 0.5352234 #>  [278,] 0.18018638 0.3156814 0.3209773 0.4144888 0.4256093 0.4531390 0.4930232 #>  [279,] 0.57350948 0.5881442 0.6721756 0.6850563 0.6984612 0.7046175 0.8310583 #>  [280,] 0.36712624 0.3879961 0.4227859 0.4372802 0.5546492 0.5733948 0.6194491 #>  [281,] 0.23720811 0.4014653 0.4099958 0.4539055 0.5191279 0.5674798 0.6116781 #>  [282,] 0.40560866 0.5643825 0.5780538 0.6636542 0.7061047 0.7102470 0.7389029 #>  [283,] 0.40525845 0.4125251 0.4321172 0.5016015 0.6927117 0.7008852 0.7320982 #>  [284,] 0.52478367 0.5402248 0.5962691 0.6084827 0.6718171 0.6926255 0.8264033 #>  [285,] 0.72066372 0.9195470 0.9534562 1.0712097 1.0841577 1.1218900 1.1583199 #>  [286,] 0.32542116 0.5097263 0.6465140 0.6700211 0.6716513 0.6764628 0.7423728 #>  [287,] 0.36404055 0.5839197 0.6682977 0.6703241 0.6966756 0.7433273 0.8027924 #>  [288,] 0.32906352 0.3295908 0.4320411 0.4348833 0.4490162 0.4833346 0.5650736 #>  [289,] 0.35617649 0.3762237 0.4584894 0.5098558 0.5144965 0.5226729 0.5449604 #>  [290,] 1.08077688 1.0836539 1.1112444 1.1218900 1.1419252 1.1650973 1.2287748 #>  [291,] 0.52835599 0.6923848 0.7083699 0.7300250 0.7371994 0.7649042 0.7700083 #>  [292,] 0.91894963 0.9602131 1.0414663 1.1503671 1.2056088 1.3429963 1.3560377 #>  [293,] 0.52769950 0.6211337 0.6651110 0.7201451 0.7378124 0.7609416 0.7823605 #>  [294,] 0.43223994 0.4325905 0.4661237 0.6245718 0.6354577 0.6388826 0.6453579 #>  [295,] 0.31987813 0.4211150 0.4320411 0.4707401 0.5269125 0.5423080 0.5493317 #>  [296,] 0.42526452 0.4622769 0.4649020 0.5033385 0.5085270 0.5182924 0.5651025 #>  [297,] 0.44480586 0.4495760 0.5377368 0.5885150 0.6740682 0.6795151 0.6829287 #>  [298,] 0.31296773 0.4539055 0.4965939 0.5301140 0.5933668 0.6349319 0.6470193 #>  [299,] 0.17147036 0.3209773 0.3555437 0.3871848 0.4356705 0.4586064 0.4957767 #>  [300,] 1.00913453 1.0682653 1.1262865 1.2919772 1.3350430 1.3487170 1.3587295 #>  [301,] 0.35677621 0.4461287 0.4841229 0.5549656 0.5789503 0.5926940 0.6127899 #>  [302,] 0.30771307 0.5288702 0.5741500 0.5895982 0.6096560 0.6097413 0.6567622 #>  [303,] 0.87991431 0.9787229 1.0569085 1.1413345 1.2035631 1.2121058 1.2203719 #>  [304,] 0.69768723 0.7028411 0.7488887 0.7673180 0.7807639 0.7941967 0.8017759 #>  [305,] 0.48201594 0.6182957 0.6750403 0.7648920 0.9426159 0.9974411 1.0102861 #>  [306,] 0.32566064 0.4128126 0.4215858 0.4448059 0.5210850 0.5214124 0.5434328 #>  [307,] 0.19687010 0.3049601 0.4169202 0.4908808 0.5534048 0.5633917 0.5966966 #>  [308,] 0.39498792 0.4679016 0.4767061 0.5103564 0.6041141 0.7223927 0.7290991 #>  [309,] 0.54465716 0.7656048 0.8152089 1.0383130 1.0784714 1.0869685 1.1470925 #>  [310,] 0.44418763 0.4616399 0.5730021 0.6328678 0.6571506 0.7091676 0.7144336 #>  [311,] 0.80763383 1.2443910 1.3694232 1.4679854 1.4680975 1.5372746 1.6186156 #>  [312,] 0.24815838 0.3889872 0.4835528 0.5648604 0.5694654 0.5917274 0.5951791 #>  [313,] 0.15769164 0.2680008 0.3351800 0.3388260 0.3802375 0.4705955 0.4941907 #>  [314,] 0.61817607 0.6397490 0.6465140 0.6511222 0.6687036 0.6879521 0.8293587 #>  [315,] 0.40302136 0.4180566 0.4264958 0.4306196 0.4798433 0.5128856 0.5493317 #>  [316,] 0.27973595 0.3311948 0.3447674 0.4264958 0.4659724 0.5220528 0.5281186 #>  [317,] 0.25453567 0.3942144 0.4276652 0.4491485 0.4779277 0.4957853 0.5525168 #>  [318,] 0.67165127 0.6897103 0.7055337 0.7149451 0.7525060 0.7850776 0.8020389 #>  [319,] 0.95175682 1.0426354 1.1567846 1.1700653 1.2453318 1.3145276 1.3182023 #>  [320,] 0.44347538 0.4823274 0.5173176 0.5454685 0.5835737 0.6215436 0.6647614 #>  [321,] 0.88866175 1.0842686 1.1563075 1.2179665 1.2322484 1.3381843 1.4218830 #>  [322,] 0.31859079 0.4253129 0.4319322 0.4350219 0.5086455 0.5313664 0.5351965 #>  [323,] 0.53316459 0.5421725 0.5478423 0.5956066 0.6239755 0.7437318 0.7468913 #>  [324,] 0.59970390 0.9373858 1.1526840 1.1584974 1.1899259 1.1980080 1.2198853 #>  [325,] 0.34912539 0.3514201 0.3543140 0.5343414 0.5494024 0.5534508 0.5893636 #>  [326,] 0.49344103 0.5088215 0.6498564 0.6639346 0.7425451 0.7580301 0.7605192 #>  [327,] 0.56164762 0.6486681 0.7124707 0.9065163 0.9175256 0.9376837 0.9599320 #>  [328,] 0.43958930 0.5745148 0.6325642 0.6516829 0.6848696 0.7645798 0.7757435 #>  [329,] 0.27885771 0.2875047 0.3371686 0.3726395 0.3931110 0.3933377 0.4226194 #>  [330,] 0.41938177 0.4556025 0.4714525 0.5362102 0.5379998 0.5572162 0.5578168 #>  [331,] 0.48647024 0.5026609 0.5397693 0.6003268 0.6452077 0.6667140 0.7009006 #>  [332,] 0.35641730 0.5794849 0.6062864 0.6263657 0.6270850 0.6516324 0.6694510 #>  [333,] 0.38766241 0.4691217 0.5009921 0.5538413 0.6059207 0.6383931 0.6535003 #>  [334,] 0.37731545 0.3967091 0.4436962 0.5199072 0.5219261 0.5520271 0.5633158 #>  [335,] 0.76369217 0.8786336 1.0953834 1.1033871 1.1221650 1.1820145 1.1969843 #>  [336,] 0.39772349 0.4373590 0.4908543 0.5892729 0.6138382 0.6200198 0.6514621 #>  [337,] 0.60347276 0.6563081 0.8082432 0.9243354 0.9492214 1.0259637 1.0387618 #>  [338,] 0.48252582 0.5587288 0.6603445 0.6790267 0.7234368 0.7349764 0.7580861 #>  [339,] 0.23684421 0.5047928 0.5305342 0.5379998 0.5553926 0.5746804 0.6194020 #>  [340,] 0.26134845 0.3733901 0.3979435 0.4863194 0.5449604 0.5989875 0.5997272 #>  [341,] 0.69006511 0.8325292 0.9506760 0.9698530 0.9744588 1.0079796 1.0468718 #>  [342,] 0.34346328 0.3942144 0.5509749 0.5619234 0.5708502 0.5850712 0.6096674 #>  [343,] 0.35257848 0.3834017 0.4747287 0.6143491 0.6591908 0.6850563 0.7076637 #>  [344,] 0.67470175 0.6836334 0.6974259 0.7406000 0.7944731 0.8090806 0.8114944 #>  [345,] 0.42232518 0.5789559 0.6214700 0.6668958 0.8081784 0.8198530 0.8234138 #>  [346,] 0.17207826 0.3381253 0.3810995 0.4235667 0.4674720 0.4677935 0.4781327 #>  [347,] 0.40468148 0.4836080 0.5794578 0.6293271 0.6615131 0.6789918 0.7030402 #>  [348,] 0.33282060 0.4581883 0.4691217 0.5006761 0.6945753 0.7144267 0.7299617 #>  [349,] 0.38526031 0.4029335 0.4900370 0.5204605 0.5434089 0.5694654 0.5868214 #>  [350,] 0.28762802 0.3956653 0.5210850 0.6210393 0.6230679 0.6327017 0.6778428 #>  [351,] 0.46029350 0.6906037 0.8086531 0.8218262 0.8238149 0.8399513 0.8408762 #>  [352,] 0.35249392 0.5631074 0.6194954 0.6892676 0.6984612 0.7746747 0.8086942 #>  [353,] 1.59056274 1.6422422 1.7163414 1.8005924 1.8671932 1.9050890 2.0023936 #>  [354,] 1.35612683 1.3640294 1.5056371 1.5108982 1.5260460 1.5627636 1.5677793 #>  [355,] 0.20872271 0.4125251 0.4514660 0.5240073 0.5515272 0.6777206 0.6932255 #>  [356,] 0.32542116 0.5787704 0.6273875 0.7514793 0.7596665 0.7850776 0.7931624 #>  [357,] 0.24045362 0.3655663 0.4074899 0.4594424 0.4769595 0.5067766 0.5798787 #>  [358,] 0.37171821 0.4203467 0.5008550 0.8270914 0.8272020 0.8275670 0.8434128 #>  [359,] 0.31758945 0.4700165 0.4957409 0.5190117 0.5443840 0.6601835 0.6679921 #>  [360,] 0.74434605 0.7561180 0.7963270 0.8211692 0.8310449 0.8505428 0.8641431 #>  [361,] 0.42044170 0.4785478 0.6422166 0.6483485 0.6564884 0.8036251 0.8731229 #>  [362,] 0.25349784 0.3928674 0.4692526 0.5248002 0.5264048 0.5841515 0.5963819 #>  [363,] 0.40721913 0.4697231 0.4719867 0.5792963 0.7757235 0.8064365 0.8445202 #>  [364,] 0.43012181 0.4309275 0.4983992 0.5488544 0.5948766 0.5974421 0.6038599 #>  [365,] 0.30146730 0.3055381 0.3868288 0.5061435 0.5079276 0.5842628 0.5943416 #>  [366,] 0.38921125 0.4284445 0.4899602 0.5954489 0.6146990 0.6165957 0.6194020 #>  [367,] 0.31248977 0.3250740 0.3520583 0.3802375 0.3983085 0.4465576 0.4556025 #>  [368,] 0.57167395 0.6551075 0.6906777 0.7358151 0.7944731 0.8049019 0.8426823 #>  [369,] 0.20358605 0.3486246 0.4370388 0.5305791 0.5730021 0.6091714 0.6838827 #>  [370,] 0.33189196 0.3656295 0.5631074 0.5905615 0.5927737 0.7429311 0.7525323 #>  [371,] 0.12375203 0.3561715 0.4583511 0.4984615 0.5260139 0.5969777 0.6281813 #>  [372,] 0.42087188 0.4531120 0.5061435 0.5819934 0.5873751 0.5903866 0.6057908 #>  [373,] 0.40437626 0.7265387 0.7269833 0.7668440 0.7997006 0.8120638 0.8198858 #>  [374,] 0.46241975 0.5198107 0.5879754 0.5977538 0.6332236 0.6588484 0.6595900 #>  [375,] 0.57515417 0.6319398 0.8014759 0.8533253 1.0781620 1.0793026 1.0809756 #>  [376,] 0.26160541 0.3955207 0.4664345 0.5629935 0.5658614 0.6331562 0.6445360 #>  [377,] 0.37041164 0.4334418 0.4972959 0.5588080 0.5768353 0.5958786 0.6288573 #>  [378,] 0.51968026 0.5389623 0.5509749 0.5816493 0.6610778 0.6693715 0.6804086 #>  [379,] 0.24797955 0.5735002 0.6647665 0.6715173 0.6733320 0.7162987 0.7481601 #>  [380,] 1.12757119 1.1394438 1.2167488 1.2524393 1.2643573 1.3388951 1.3499067 #>  [381,] 0.43341135 0.6330748 0.6616834 0.6639133 0.6742869 0.7395874 0.7405677 #>  [382,] 0.25503978 0.3399044 0.4980866 0.7840200 0.8410801 0.8541567 0.8817257 #>  [383,] 0.22284742 0.5679654 0.6635854 0.6993846 0.7305819 0.7309658 0.7461042 #>  [384,] 0.54230162 0.6471574 0.7477058 0.8165147 0.8402039 0.8535906 0.8566990 #>  [385,] 0.38488185 0.3852603 0.4396298 0.5259788 0.5352303 0.5508552 0.5641703 #>  [386,] 0.32876083 0.3818518 0.4995285 0.6979197 0.7332807 0.7496582 0.7539756 #>  [387,] 0.27973595 0.3698705 0.4184677 0.4428891 0.4902943 0.4949062 0.4985974 #>  [388,] 0.43399196 0.5705358 0.6160082 0.6815947 0.7314483 0.7521824 0.7773788 #>  [389,] 0.47212008 0.5787704 0.5861854 0.5998838 0.6256857 0.6528996 0.6700211 #>  [390,] 0.67098741 0.8014759 0.8214695 0.9741574 1.0925766 1.1372052 1.1473569 #>  [391,] 0.31568144 0.4097020 0.4221751 0.4396953 0.4439840 0.4690718 0.4957767 #>  [392,] 0.49737120 0.5078289 0.5705576 0.6113035 0.6516593 0.7580861 0.8217999 #>  [393,] 0.57207004 0.5751568 0.5780706 0.6128775 0.6378240 0.6484433 0.6646787 #>  [394,] 0.34926588 0.4014653 0.4738650 0.4897581 0.5158001 0.5283835 0.5360742 #>  [395,] 0.66832347 0.7159477 0.7800463 0.8266755 0.8662822 0.8670494 0.9280708 #>  [396,] 0.60225266 0.7019960 0.7440305 0.8365331 0.9797628 1.0017344 1.0183600 #>  [397,] 0.28914846 0.2962849 0.3679203 0.4952925 0.5244486 0.5318145 0.5417778 #>  [398,] 0.45159085 0.5190743 0.5360742 0.5389879 0.6316205 0.6678258 0.7106393 #>  [399,] 0.54465716 0.6205470 0.7265387 0.7401133 0.7744807 0.8563500 0.8632384 #>  [400,] 0.32925338 0.3770895 0.3792479 0.4575019 0.5023443 0.5064272 0.5588672 #>  [401,] 0.40468148 0.4540059 0.5294099 0.6052732 0.6105436 0.6534300 0.6536717 #>  [402,] 0.34925716 0.5457952 0.5909976 0.6749072 0.7518530 0.8585396 0.8857549 #>  [403,] 0.71293991 0.7823964 0.8302853 0.8839955 0.9602018 0.9702604 0.9948472 #>  [404,] 0.19535376 0.4217133 0.4607479 0.4811697 0.4949062 0.5369410 0.5705369 #>  [405,] 0.11979246 0.3889643 0.4562059 0.5379373 0.5775942 0.6045640 0.6573314 #>  [406,] 0.25724736 0.4099958 0.4171372 0.4738650 0.4753609 0.4896916 0.5225816 #>  [407,] 0.54230162 0.7384765 0.7829251 0.8897679 0.9412066 0.9620748 0.9673147 #>  [408,] 0.88959698 1.0793026 1.2979066 1.3273590 1.3829477 1.4503321 1.5748076 #>  [409,] 0.30847557 0.3388135 0.3435685 0.4162789 0.4301267 0.4436962 0.5442592 #>  [410,] 0.33319120 0.5781621 0.5846161 0.6240301 0.6337024 0.6963016 0.7227211 #>  [411,] 0.50953552 0.5305342 0.6276845 0.6586391 0.6679921 0.6815132 0.7809131 #>  [412,] 0.78028833 0.8325292 1.1563075 1.2649172 1.5146938 1.5325112 1.6012808 #>  [413,] 0.63905948 0.7238023 0.8061874 0.9116758 0.9315227 0.9354967 0.9557813 #>  [414,] 0.62387687 0.7907522 0.8262158 1.0327862 1.0434362 1.2915183 1.3110011 #>  [415,] 0.33183526 0.4841229 0.5389623 0.5781782 0.6000609 0.6232062 0.6628912 #>  [416,] 0.22072346 0.3902479 0.5323467 0.5443840 0.5476437 0.5773629 0.6212637 #>  [417,] 1.07491189 1.6125101 1.6532075 1.7620483 1.7822577 1.8560688 1.8881371 #>  [418,] 0.20358605 0.2112465 0.3947054 0.4457442 0.4599916 0.5835549 0.6194978 #>  [419,] 0.41669564 0.4670479 0.4760854 0.5405021 0.5916654 0.6283320 0.6616834 #>  [420,] 0.50882145 0.5766021 0.7195130 0.7438741 0.7585986 0.7640343 0.7760222 #>  [421,] 0.54357256 0.6472404 0.7222883 0.7747678 0.9020937 0.9320857 0.9491757 #>  [422,] 0.34925716 0.5806065 0.5884200 0.6753810 0.7101816 0.7761960 0.8350110 #>  [423,] 0.42378175 0.5079783 0.5258769 0.5429914 0.6713909 0.6734881 0.6770178 #>  [424,] 0.26160541 0.3237644 0.3979121 0.4648281 0.4741572 0.4801766 0.5633158 #>  [425,] 1.12847385 1.1413808 1.1777459 1.2113169 1.3110671 1.4503321 1.5272612 #>  [426,] 0.47104950 0.6053821 0.6498564 0.6704421 0.7023592 0.7046721 0.7091676 #>  [427,] 0.34960277 0.3905750 0.4113216 0.5659559 0.5688372 0.6095741 0.6501754 #>  [428,] 0.31859079 0.3447674 0.3994947 0.4030214 0.4032809 0.4797779 0.4895333 #>  [429,] 0.68093516 0.7059181 1.0177723 1.0371942 1.0609525 1.0967921 1.1681659 #>  [430,] 0.46536469 0.4687840 0.5643825 0.6618230 0.6897781 0.7184902 0.7559479 #>  [431,] 0.39949466 0.4119948 0.4323992 0.4428891 0.4529902 0.4659724 0.5177251 #>  [432,] 0.29109318 0.6673762 0.8061576 0.8335774 0.9023487 0.9062542 0.9193938 #>  [433,] 0.52037949 0.6201282 0.6786555 0.7672780 0.8310583 0.9076434 0.9317462 #>  [434,] 0.21336516 0.3358533 0.3614435 0.8609611 0.8754770 0.8912070 0.8976103 #>  [435,] 0.57350948 0.5842628 0.6201282 0.6514801 0.6747704 0.6775479 0.6828350 #>  [436,] 0.37852364 0.4638988 0.4893128 0.5260139 0.5334018 0.5678034 0.5960255 #>  [437,] 0.30146730 0.4066970 0.4991794 0.5016015 0.5725207 0.7110778 0.7550972 #>  [438,] 0.27849319 0.3467743 0.4885485 0.6244786 0.6549891 0.7393210 0.7418540 #>  [439,] 0.56586530 0.5892134 0.5974189 0.6451609 0.7207068 0.7367541 0.7645796 #>  [440,] 0.22566117 0.4872124 0.5276473 0.5799178 0.6246688 0.6677785 0.6895453 #>  [441,] 0.44166174 0.5283560 0.5728428 0.5984355 0.6965821 0.7061855 0.7429213 #>  [442,] 0.37604114 0.4225037 0.4639986 0.4968893 0.5910726 0.6038700 0.6172824 #>  [443,] 0.19085075 0.3162752 0.4334418 0.4592844 0.4693938 0.5078948 0.5535035 #>  [444,] 0.48921577 0.5623338 0.5662244 0.5718532 0.6439157 0.6600387 0.6889015 #>  [445,] 0.72066372 1.1372543 1.1526840 1.3784006 1.4032559 1.4435323 1.4685195 #>  [446,] 0.29494627 0.4908543 0.5285195 0.5454685 0.6095364 0.6249305 0.6536594 #>  [447,] 0.26696688 0.3280245 0.4122485 0.5467515 0.5863365 0.6212628 0.7009006 #>  [448,] 0.33990439 0.5690106 0.6219553 0.6545304 0.6926802 0.7434842 0.7745760 #>  [449,] 0.39851130 0.4195596 0.4708999 0.5270582 0.5811551 0.5873751 0.6017170 #>  [450,] 0.71778199 0.8120697 0.8734399 0.9459144 1.0360072 1.1142678 1.2127122 #>  [451,] 0.36698784 0.4161450 0.4235667 0.4386634 0.4400732 0.5414899 0.5617640 #>  [452,] 0.49860506 0.5219261 0.5381232 0.5658614 0.5719688 0.5812226 0.6244559 #>  [453,] 0.36505302 0.5051657 0.5416974 0.6778864 0.6808825 0.6918394 0.7367405 #>  [454,] 0.64209695 0.9488147 0.9937368 1.0180048 1.0617918 1.0643605 1.1052793 #>  [455,] 0.25101781 0.4636864 0.5045057 0.5050632 0.6092720 0.6455000 0.6464288 #>  [456,] 0.43259054 0.5024104 0.5673928 0.7106365 0.7618563 0.7778157 0.8214624 #>  [457,] 1.12961638 1.1370649 1.1675897 1.2482656 1.2573681 1.2915782 1.3115281 #>  [458,] 0.37339010 0.4056082 0.4584894 0.4622060 0.4622633 0.4773555 0.5140424 #>  [459,] 0.26196962 0.4122485 0.5579497 0.5944970 0.6473970 0.7262998 0.7576818 #>  [460,] 0.39454511 0.4041288 0.6144810 0.6437408 0.7040211 0.7046721 0.7188454 #>  [461,] 0.86858825 0.9236158 0.9539834 0.9775381 1.0069936 1.0545872 1.0694827 #>  [462,] 0.39990449 0.4510731 0.5227902 0.6457495 0.6583305 0.7264045 0.7411037 #>  [463,] 0.47468287 0.5616476 0.6927280 0.7416938 0.9386714 1.0011659 1.0259728 #>  [464,] 0.46016289 0.4607834 0.6012504 0.6520735 0.6548458 0.6620778 0.6632656 #>  [465,] 0.54430549 0.5719688 0.6259202 0.6943049 0.7385187 0.7460877 0.7611627 #>  [466,] 0.23720811 0.3129677 0.5158001 0.5327009 0.5540150 0.5572000 0.5661889 #>  [467,] 0.52764726 0.5469820 0.5647797 0.6399943 0.6589147 0.6870262 0.6919212 #>  [468,] 0.20980380 0.4747861 0.5271823 0.5978165 0.5980485 0.6286165 0.6521300 #>  [469,] 0.59031631 0.6293143 0.6518384 0.6824855 0.6857754 0.6890613 0.6985484 #>  [470,] 0.46798824 0.5371804 0.5614989 0.6412421 0.6653937 0.6784941 0.7200307 #>  [471,] 0.36505302 0.6072976 0.6400683 0.7950699 0.8532582 0.8765400 0.8836145 #>  [472,] 1.11805281 1.2171591 1.3727678 1.3740761 1.4209244 1.4447352 1.5795618 #>  [473,] 0.45958409 0.5352144 0.5798787 0.6212628 0.6720307 0.6747242 0.6887081 #>  [474,] 0.37822349 0.4836759 0.5678296 0.5951794 0.6028357 0.6214700 0.6373871 #>  [475,] 0.61481173 0.7131172 0.7517835 0.7972062 0.8876436 0.9086254 0.9405890 #>  [476,] 0.36647783 0.3733667 0.4574392 0.4669581 0.5405047 0.5447925 0.5486134 #>  [477,] 0.34284742 0.4012362 0.5015441 0.5301140 0.5452762 0.5540150 0.5651927 #>  [478,] 0.55235930 0.7647210 0.7910172 0.8016673 0.8258368 0.8506542 0.8876436 #>  [479,] 0.38921125 0.4814746 0.4924790 0.5075870 0.5092561 0.5480593 0.5770645 #>  [480,] 0.88123207 0.9059293 0.9354895 0.9506760 0.9739210 1.0097415 1.0327862 #>  [481,] 0.53681030 0.5558487 0.5983288 0.6046628 0.6142014 0.6276968 0.6393650 #>  [482,] 0.50408728 0.7785748 0.8048321 0.8580110 0.8821391 1.0134900 1.0476797 #>  [483,] 0.44057014 0.5071092 0.5204527 0.5217665 0.5379373 0.5543603 0.5546492 #>  [484,] 1.00158566 1.0017344 1.0643605 1.2171591 1.2891563 1.2931492 1.3313436 #>  [485,] 1.32834709 1.5062825 1.5461665 1.5518466 1.5940506 1.6273846 1.6386717 #>  [486,] 0.32705586 0.3504339 0.3876624 0.5182924 0.5225816 0.5397655 0.5717547 #>  [487,] 0.39670913 0.4846364 0.5113669 0.5975140 0.6216532 0.6640844 0.6693715 #>  [488,] 0.36716585 0.4594424 0.5508018 0.5688372 0.6080317 0.6371378 0.6481640 #>  [489,] 0.73739405 0.7570874 0.7875496 0.8100386 0.8829397 0.9825671 0.9841249 #>  [490,] 0.71744784 0.8333091 0.8603835 1.0863215 1.1387800 1.1785436 1.1992047 #>  [491,] 0.41955962 0.5538457 0.6128479 0.6146990 0.6293182 0.6531785 0.7069496 #>  [492,] 0.63394915 0.8408762 0.9065163 0.9236007 1.0011335 1.0306334 1.0306832 #>  [493,] 0.25453567 0.3434633 0.3742838 0.4383179 0.5334734 0.5420630 0.6206188 #>  [494,] 0.81803279 0.8227797 0.9757636 1.0587874 1.1536937 1.2630534 1.2890414 #>  [495,] 0.16014993 0.4398644 0.4669581 0.4753609 0.5220528 0.5584276 0.5838668 #>  [496,] 0.42506341 0.4811697 0.5117378 0.5522722 0.5847000 0.5912340 0.5921766 #>  [497,] 0.19288743 0.3393032 0.4969016 0.5075870 0.5710594 0.5904165 0.6254161 #>  [498,] 0.42061834 0.4471321 0.4581654 0.4658369 0.5506028 0.5639902 0.5794772 #>  [499,] 0.48921577 0.5329739 0.6483485 0.7071608 0.7305583 0.7359016 0.7443719 #>  [500,] 0.20960184 0.3655663 0.4342033 0.5210948 0.5226389 0.5831282 0.5955551 #>  [501,] 0.58276132 0.6070150 0.6432988 0.6531840 0.6887515 0.7411037 0.7865063 #>  [502,] 0.34573049 0.5544052 0.7744858 0.7939964 0.7986825 1.0163685 1.0402634 #>  [503,] 0.62969324 0.6700800 0.6700851 0.7397941 0.7496581 0.7614651 0.7656048 #>  [504,] 0.20982553 0.3435311 0.4144581 0.4817517 0.4954289 0.5542908 0.5796125 #>  [505,] 0.50241038 0.8064214 0.8949962 0.9167826 0.9407548 1.0164989 1.0171247 #>  [506,] 0.37765477 0.6111957 0.6829451 0.6836048 0.7060853 0.7194863 0.7625370 #>  [507,] 0.40563294 0.4510731 0.4826466 0.5047928 0.5078874 0.5828988 0.5967834 #>  [508,] 0.58733111 0.7830391 0.8879664 0.8885784 0.9248007 0.9654814 0.9684916 #>  [509,] 0.65404540 0.8772445 1.0203879 1.0304288 1.1998357 1.2111164 1.2118778 #>  [510,] 0.58814422 0.6892676 0.7317890 0.8149273 0.8513076 0.8993138 1.0339658 #>  [511,] 0.44711753 0.5548278 0.6347901 0.7449053 0.7759195 0.7872549 0.7907612 #>  [512,] 0.66952218 0.9374889 1.0223485 1.0782240 1.2501223 1.3283471 1.3540338 #>  [513,] 0.46728726 0.4679016 0.5015441 0.5254017 0.6030349 0.6385402 0.6539961 #>  [514,] 0.51052630 1.0511741 1.0653288 1.0842686 1.5124731 1.5631276 1.6167518 #>  [515,] 0.38438837 0.3862080 0.4295961 0.5177307 0.5392872 0.5432989 0.6107593 #>  [516,] 0.28377264 0.3491254 0.4309275 0.4434852 0.5907376 0.6255652 0.6299959 #>  [517,] 0.55255973 0.5844737 0.6635854 0.6920508 0.6956324 0.8134489 0.8256635 #>  [518,] 0.26788514 0.3084837 0.3726395 0.4049337 0.4345793 0.4779277 0.4836311 #>  [519,] 0.43671283 0.5761876 0.6759101 0.8088253 0.8396699 0.8422906 0.8601510 #>  [520,] 0.51052630 0.8870147 1.1299711 1.2179665 1.3191652 1.3552927 1.4433552 #>  [521,] 0.47893892 0.5084009 0.5306383 0.5345058 0.5756507 0.6350200 0.6705916 #>  [522,] 0.54263202 0.5721241 0.7018410 0.7184377 0.8396699 0.8709620 0.8925648 #>  [523,] 0.18281592 0.2234278 0.2683841 0.3841143 0.3854955 0.4226194 0.4856564 #>  [524,] 0.40525845 0.4066970 0.5079276 0.5877957 0.6440993 0.6747700 0.6891212 #>  [525,] 0.53766889 0.5447925 0.6087061 0.6217055 0.6805800 0.6814748 0.6829287 #>  [526,] 0.19535376 0.4570846 0.5535726 0.5555443 0.5807264 0.5847000 0.5872283 #>  [527,] 0.28188314 0.3612852 0.3961048 0.4893128 0.5797022 0.5877114 0.5878473 #>  [528,] 0.30363638 0.6680670 0.7210750 0.7833433 0.7994509 0.8127525 0.9134551 #>  [529,] 0.63569918 0.9214980 0.9789550 0.9808607 1.0246017 1.0499927 1.1229011 #>  [530,] 0.42771459 0.4425397 0.5247837 0.7443579 0.8360395 0.8438707 0.8603678 #>  [531,] 0.58026267 0.7134583 0.7258054 0.7597830 0.7732631 0.8241470 0.8869676 #>  [532,] 0.59491097 0.7136334 0.7610219 0.7821707 0.8050951 0.8208786 0.8618307 #>  [533,] 0.75475552 0.7904515 0.8273957 0.8556217 0.9039286 0.9393918 1.0414663 #>  [534,] 0.85528852 1.0273125 1.0451009 1.0781285 1.1497484 1.3053227 1.3542409 #>  [535,] 0.31510343 0.3385405 0.4708999 0.4949582 0.4969016 0.5067766 0.5362056 #>  [536,] 0.62379616 0.6244377 0.6896777 0.7309662 0.7915333 0.8039785 0.8450823 #>  [537,] 0.26543053 0.3504339 0.4649020 0.4965939 0.5666115 0.5718722 0.5910454 #>  [538,] 0.46346556 0.5895559 0.6095364 0.6270753 0.6733112 0.6824687 0.7178341 #>  [539,] 0.56327470 0.6279511 0.6703241 0.6956158 0.7424707 0.7838361 0.7962565 #>  [540,] 0.34033823 0.3539966 0.4461287 0.5442725 0.6000609 0.7219722 0.7233742 #>  [541,] 0.46192708 0.5006761 0.5535218 0.5538413 0.6058482 0.6620778 0.7242167 #>  [542,] 0.33975661 0.3403909 0.3479886 0.4464783 0.4518522 0.4839650 0.4913737 #>  [543,] 0.48252559 0.5868544 0.6235017 0.7264119 0.7652112 0.8336275 0.8584838 #>  [544,] 0.31873090 0.5821041 0.6070852 0.6185207 0.6244377 0.6754991 0.6928087 #>  [545,] 0.24889478 0.2558082 0.3455390 0.3477581 0.3530980 0.4097020 0.4982746 #>  [546,] 0.43964273 0.5752049 0.7344506 0.7680721 0.7806130 0.7873159 0.8422349 #>  [547,] 0.44253970 0.5461082 0.5881722 0.5982193 0.6084827 0.6399898 0.6659103 #>  [548,] 0.43488335 0.4742866 0.4747861 0.5087197 0.5091996 0.5405765 0.5642181 #>  [549,] 0.43957055 0.4902168 0.6156628 0.6628912 0.6916926 0.6920331 0.7216523 #>  [550,] 0.53302390 0.5381196 0.5752049 0.6235017 0.6557787 0.6834518 0.7349764 #>  [551,] 0.42202232 0.4386634 0.4940497 0.5320239 0.5362102 0.5581556 0.5708257 #>  [552,] 0.31115613 0.4225037 0.5145809 0.6011797 0.6098932 0.6454253 0.6569495 #>  [553,] 0.38050807 0.8265324 1.0277710 1.0543291 1.1245325 1.1417880 1.1451411 #>  [554,] 0.37593277 0.4069951 0.4119948 0.4707401 0.5271823 0.5790031 0.5947521 #>  [555,] 0.28521473 0.4041288 0.4619435 0.5915177 0.5943454 0.6305835 0.6456550 #>  [556,] 0.25749760 0.3612852 0.3843884 0.4075329 0.4551387 0.5515600 0.5960255 #>  [557,] 0.43009513 0.8227797 0.8512885 0.8680714 0.8835717 0.9327094 0.9724523 #>  [558,] 0.31742985 0.3358533 0.5282036 0.6307500 0.7091748 0.7800463 0.8155593 #>  [559,] 0.41053580 0.4614939 0.5132506 0.7045745 0.8218847 0.8264431 0.8302853 #>  [560,] 0.44620046 0.4653505 0.5189969 0.5212454 0.5760130 0.5898575 0.5903163 #>  [561,] 0.43707021 0.4514660 0.4815369 0.5014979 0.6614885 0.6953869 0.7392990 #>  [562,] 0.47670608 0.5028548 0.5838671 0.6220900 0.6539961 0.7048878 0.7174050 #>  [563,] 0.35072537 0.3742838 0.4072999 0.4378748 0.4617118 0.4840192 0.5534697 #>  [564,] 0.68151317 0.7597830 0.9063272 0.9242252 0.9630420 1.0303947 1.0360255 #>  [565,] 0.67098741 0.7620850 1.0295519 1.1796167 1.2032695 1.2785653 1.3118653 #>  [566,] 0.50171032 0.5573292 0.5825320 0.7105983 0.7645798 0.7713851 0.8421018 #>  [567,] 0.46079415 0.5566775 0.6319398 0.6414727 0.7444130 0.7452614 0.8675782 #>  [568,] 0.33319120 0.4535334 0.4807716 0.5406285 0.6185207 0.6484782 0.6816639 #>  [569,] 0.40729100 0.6740682 0.7125686 0.7237886 0.7763194 0.7777615 0.7921344 #>  [570,] 0.84229061 0.8997376 1.0575520 1.0710004 1.1080226 1.1448950 1.1845801 #>  [571,] 0.27721605 0.4184677 0.4607479 0.4622187 0.4998213 0.5080604 0.5182109 #>  [572,] 0.94090929 0.9611168 1.3731521 1.5601685 1.5939428 1.6820532 1.7603286 #>  [573,] 0.47615293 0.4900370 0.5212454 0.5442931 0.5608717 0.5757150 0.6001123 #>  [574,] 0.48077163 0.5846161 0.5956066 0.6800513 0.6874242 0.7122104 0.7576073 #>  [575,] 0.39266834 0.5735809 0.5806861 0.5900303 0.6095741 0.6156993 0.6166085 #>  [576,] 0.39674701 0.4561151 0.6520322 0.6537989 0.6629655 0.6805048 0.7069665 #>  [577,] 0.49445957 0.7875279 0.8077191 0.8101745 0.8700997 0.8745405 0.8809935 #>  [578,] 0.28914846 0.4436147 0.4682357 0.4999863 0.5189969 0.5237745 0.5278448 #>  [579,] 0.31380463 0.3236918 0.3268730 0.5189829 0.5546290 0.5838030 0.6112952 #>  [580,] 0.47472873 0.5522977 0.5975380 0.6963016 0.7317890 0.7361239 0.8037882 #>  [581,] 0.21124649 0.2266351 0.2763607 0.3486246 0.5265109 0.6328678 0.6403524 #>  [582,] 0.62795109 0.7784450 0.8254375 0.8720300 0.9193644 0.9402179 0.9521054 #>  [583,] 1.05961976 1.4592162 1.6118438 1.6182882 1.6639436 1.8643759 1.9105788 #>  [584,] 0.34960277 0.4209269 0.4843287 0.4876900 0.5068976 0.5268324 0.5301210 #>  [585,] 0.46079415 0.4634656 0.4947795 0.5173176 0.5285195 0.7227748 0.7457790 #>  [586,] 0.39851130 0.5470884 0.5508018 0.5554960 0.5870870 0.5939235 0.5993518 #>  [587,] 0.33812527 0.4317234 0.4617648 0.4656422 0.4664346 0.4749248 0.6380000 #>  [588,] 0.40729100 0.4602935 0.5980335 0.6217055 0.7295960 0.7528837 0.7835055 #>  [589,] 0.30475084 0.4165541 0.5115099 0.5367385 0.5392618 0.5623338 0.5995552 #>  [590,] 0.50026970 0.6745728 0.7035001 0.7081544 0.7327431 0.7496581 0.7532641 #>  [591,] 1.21549906 1.2191802 1.2901404 1.5563206 1.5628778 1.5894611 1.7210608 #>  [592,] 0.28722475 0.6608533 0.6840759 0.7308091 0.7568162 0.7795475 0.7850111 #>  [593,] 0.36404055 0.5470486 0.5632747 0.5966750 0.6946511 0.7028411 0.7347877 #>  [594,] 0.44057014 0.4863745 0.6024117 0.6111957 0.6153522 0.7061855 0.7101676 #>  [595,] 0.28118810 0.3567762 0.4902168 0.6209494 0.6232062 0.6457887 0.6874831 #>  [596,] 0.67554068 0.6918394 0.7369660 0.7950699 0.8023595 0.8440645 0.8565205 #>  [597,] 0.41190035 0.4221506 0.5108248 0.5633109 0.5767713 0.6862288 0.6868793 #>  [598,] 0.53639584 0.6962197 0.8252937 0.8282837 0.9815427 0.9895039 1.0003176 #>  [599,] 0.36680880 0.5079783 0.5724919 0.6029549 0.6169264 0.6316524 0.6365758 #>  [600,] 0.55667751 0.6285890 0.6557455 0.6950994 0.7214868 0.7334251 0.7457790 #>  [601,] 0.33326742 0.3643136 0.4120318 0.6037330 0.6512204 0.7823605 0.7897404 #>  [602,] 0.21859488 0.3940282 0.4257137 0.4317234 0.4559134 0.4781327 0.4940497 #>  [603,] 0.50171032 0.5960744 0.7031575 0.8305991 0.8923929 1.0824188 1.1002209 #>  [604,] 0.38544054 0.4137836 0.5331646 0.7254038 0.8183492 0.8315565 0.8441008 #>  [605,] 0.54172599 0.6551075 0.6627545 0.7003597 0.7424698 0.7753200 0.8179165 #>  [606,] 0.45465776 0.5146761 0.5210948 0.5751024 0.5825604 0.5875768 0.5940476 #>  [607,] 0.38340173 0.4078833 0.5662271 0.5705576 0.5975380 0.6240301 0.6244858 #>  [608,] 0.46769567 0.5980335 0.6296932 0.6740976 0.7401678 0.7732782 0.7921344 #>  [609,] 0.27849319 0.3271763 0.3580451 0.4497314 0.4751895 0.5727461 0.6687584 #>  [610,] 0.24914027 0.2534978 0.4185520 0.4559134 0.6920324 0.7008506 0.7015410 #>  [611,] 0.37622373 0.5544864 0.5548453 0.5745148 0.5825320 0.5892134 0.6216652 #>  [612,] 0.55255973 0.6768889 0.7309658 0.7807334 0.8025961 0.9113977 0.9905154 #>  [613,] 0.39748199 0.4056087 0.4636864 0.4724690 0.5051226 0.5643980 0.6543615 #>  [614,] 0.43009513 0.7493803 0.7525002 0.7938614 0.8280624 0.8315936 0.8528772 #>  [615,] 0.31554798 0.4029335 0.4835528 0.5049055 0.5325657 0.5352303 0.6335507 #>  [616,] 0.22284742 0.6768889 0.6920508 0.7539979 0.8288154 0.8600973 0.8748785 #>  [617,] 0.35554374 0.4046266 0.4308969 0.4507971 0.4622060 0.4863194 0.5144965 #>  [618,] 0.36383781 0.3956653 0.4267778 0.4299539 0.4408476 0.5345058 0.5434328 #>  [619,] 0.49344103 0.6418595 0.7322493 0.7585986 0.7777980 0.7779701 0.7838357 #>  [620,] 0.80763383 1.8557416 1.9956001 2.0645754 2.1317405 2.2268627 2.2701737 #>  [621,] 0.12375203 0.3515013 0.4013319 0.4023278 0.5334018 0.5574679 0.5708003 #>  [622,] 0.52475573 0.5907793 0.5919416 0.6305835 0.6668973 0.6864425 0.7041329 #>  [623,] 0.37439868 0.4697231 0.7195372 0.8151726 0.9135208 1.0025208 1.0169035 #>  [624,] 0.12837489 0.3795566 0.4607143 0.6622321 0.7358869 0.7475916 0.7515105 #>  [625,] 0.16995777 0.3055381 0.4531120 0.4558835 0.4981975 0.4991794 0.6110892 #>  [626,] 0.69561581 0.7784450 0.8027924 0.8103112 0.8346813 0.9253037 0.9452359 #>  [627,] 0.24914027 0.3145368 0.3928674 0.3940282 0.5346643 0.5909703 0.5958582 #>  [628,] 0.69006511 0.7802883 1.0203326 1.1080661 1.1117692 1.1602874 1.1698968 #>  [629,] 0.58291040 0.5866434 0.6868311 0.6868793 0.7538990 0.7585087 0.8064365 #>  [630,] 0.60565355 0.7576818 0.8122208 0.8322399 0.8501526 0.9028040 0.9135208 #>  [631,] 0.11359717 0.3030565 0.4906669 0.5223439 0.5426320 0.5893636 0.5951794 #>  [632,] 0.41393251 0.5389210 0.5811551 0.5903866 0.6018976 0.6372420 0.6976082 #>  [633,] 0.39943757 0.4227277 0.4434754 0.5644673 0.5741500 0.6168214 0.6351735 #>  [634,] 0.36680880 0.5888893 0.6070056 0.6458551 0.6575052 0.6734881 0.6821834 #>  [635,] 0.94188409 0.9666734 0.9765003 0.9793820 1.0677083 1.1421535 1.1491493 #>  [636,] 0.19288743 0.3096857 0.3385405 0.5480593 0.6130872 0.6460126 0.6517638 #>  [637,] 0.46643451 0.4741572 0.4986051 0.5717691 0.5940967 0.6096674 0.6271519 #>  [638,] 0.46335363 0.5997026 0.6588484 0.8564403 0.9382412 0.9415699 0.9470994 #>  [639,] 0.47041032 0.4803919 0.6062864 0.6575740 0.6668958 0.7547039 0.7739393 #>  [640,] 0.95175682 1.1119293 1.1200459 1.1732212 1.2444198 1.2989555 1.3210900 #>  [641,] 0.39338453 0.3945451 0.5943454 0.6182957 0.7366615 0.7669739 0.7843605 #>  [642,] 0.18043277 0.3388260 0.3556370 0.3747355 0.4026917 0.4323992 0.4633834 #>  [643,] 0.52279017 0.6341595 0.7239903 0.7258548 0.7315123 0.7458077 0.8264105 #>  [644,] 0.65369666 0.7929609 0.8299257 0.9556732 1.0300805 1.0591529 1.1189463 #>  [645,] 0.23564857 0.7680721 0.9216183 0.9257875 0.9850306 1.0026715 1.1443257 #>  [646,] 0.74036380 0.8703055 0.9711881 1.0393152 1.0474662 1.0491804 1.1149489 #>  [647,] 1.17991515 1.2203719 1.2382236 1.3226715 1.3572321 1.3801018 1.4248045 #>  [648,] 0.40649348 0.4186607 0.4465046 0.4465304 0.4709872 0.5032291 0.5705358 #>  [649,] 0.56138023 0.5829104 0.5879754 0.5955892 0.6552358 0.6587561 0.6749280 #>  [650,] 0.50860399 0.5718532 0.5804936 0.6178190 0.6495610 0.6547691 0.6668563 #>  [651,] 0.45818834 0.5666115 0.5798158 0.6059207 0.6310901 0.7052543 0.7181420 #>  [652,] 0.22663512 0.2816996 0.3947054 0.5305791 0.6152782 0.7023592 0.7322724 #>  [653,] 0.29886887 0.4957409 0.5889871 0.5930243 0.7785089 0.7859797 0.8242243 #>  [654,] 1.07491189 1.6097061 1.8850641 1.8899946 1.8970599 2.0047658 2.0213316 #>  [655,] 0.20782382 0.3855977 0.4301267 0.4801766 0.5318058 0.5464541 0.5570314 #>  [656,] 0.35294051 0.7929609 0.8103998 0.8311678 0.9205605 0.9729191 1.0201371 #>  [657,] 0.28668129 0.3294818 0.4536983 0.4899602 0.5055112 0.5486533 0.5722813 #>  [658,] 0.46704788 0.6305870 0.6373526 0.6563081 0.6943841 0.7260388 0.7664188 #>  [659,] 0.69961385 0.8249571 0.8585254 0.9798977 0.9970985 1.0047267 1.0564757 #>  [660,] 0.76369217 0.7806130 0.9010435 1.0012230 1.0177235 1.0880261 1.1119293 #>  [661,] 0.69654505 1.0753259 1.1115315 1.2054244 1.2126852 1.2274088 1.2504831 #>  [662,] 0.46736591 0.4924790 0.6538958 0.6567905 0.6692078 0.6803498 0.6961429 #>  [663,] 0.87575168 0.9757636 1.2493815 1.3148733 1.3360772 1.3596440 1.4835410 #>  [664,] 0.16995777 0.3868288 0.4208719 0.4651742 0.5496965 0.5554960 0.5725207 #>  [665,] 0.52315189 0.5551711 0.6747018 0.7550090 0.7704517 0.7866818 0.8103468 #>  [666,] 0.50166006 0.7491920 0.8648411 0.9169359 0.9169413 0.9411291 0.9482515 #>  [667,] 0.28681060 0.5517463 0.7178341 0.7188598 0.7524170 0.8054647 0.8055153 #>  [668,] 0.34926588 0.3613317 0.3725310 0.4143939 0.4496195 0.5191279 0.5259788 #>  [669,] 0.46798824 0.6334577 0.6637689 0.7162701 0.7202959 0.7315114 0.8508941 #>  [670,] 0.46219357 0.5491598 0.6896948 0.7445003 0.7550561 0.8147069 0.8451966 #>  [671,] 0.85517119 0.8552885 0.9426159 1.1497131 1.1793580 1.2385113 1.2659672 #>  [672,] 0.58733111 1.0143137 1.0208235 1.1535801 1.1928930 1.1929747 1.2260836 #>  [673,] 0.37765477 0.5416974 0.6024117 0.6072976 0.6740742 0.6906126 0.7159683 #>  [674,] 0.40721913 0.5898203 0.5898404 0.6096744 0.6264174 0.6713909 0.7061063 #>  [675,] 0.23508044 0.5105063 0.7078225 0.7081544 0.7120420 0.7747678 0.7826531 #>  [676,] 0.28549287 0.4203467 0.5158364 0.6514801 0.6719416 0.6995110 0.7302568 #>  [677,] 0.38319187 0.4339920 0.4459813 0.5032291 0.5329786 0.5574679 0.5697645 #>  [678,] 0.50782887 0.5920800 0.6474351 0.6790267 0.7361239 0.7631834 0.8300163 #>  [679,] 0.18281592 0.2339212 0.3762196 0.4276652 0.4441278 0.4836311 0.4900791 #>  [680,] 0.30151798 0.3648517 0.4328555 0.4648281 0.5886462 0.6307811 0.6331562 #>  [681,] 0.58811662 0.6531628 0.6718171 0.7247702 0.7680013 0.7945502 0.7946076 #>  [682,] 0.26365450 0.4369873 0.4418370 0.5094956 0.5902755 0.6417283 0.6463035 #>  [683,] 0.49677274 0.5060128 0.5807264 0.6190692 0.6279238 0.6415491 0.6567649 #>  [684,] 0.33059219 0.4718007 0.6179011 0.6639133 0.7316372 0.7503646 0.7517835 #>  [685,] 0.59843551 0.6893935 0.6962197 0.7614314 0.7700083 0.8683307 0.9660776 #>  [686,] 0.50948408 0.5612099 0.6997384 0.7089006 0.8694521 0.8874739 0.9056858 #>  [687,] 0.46071432 0.4877341 0.5022323 0.5264048 0.5683373 0.5845160 0.6226629 #>  [688,] 0.33189196 0.5293930 0.6276845 0.7061063 0.7404803 0.7817318 0.8116633 #>  [689,] 0.28440785 0.3278204 0.4454455 0.4983992 0.5039747 0.5529627 0.5797504 #>  [690,] 0.42378175 0.5864847 0.6365758 0.6821834 0.6932559 0.7400450 0.7827815 #>  [691,] 0.44711753 0.6026440 0.7243470 0.7273069 0.7648659 0.8291232 0.8315172 #>  [692,] 0.51258840 0.6553309 0.7503646 0.7842003 0.8494493 0.8709092 0.9190072 #>  [693,] 0.61307265 0.8972240 0.9095172 0.9110248 0.9331939 1.0460484 1.0984701 #>  [694,] 0.20982553 0.4130786 0.4430598 0.4611559 0.5605438 0.5651887 0.6058852 #>  [695,] 0.38896431 0.4468533 0.4877662 0.5543603 0.6153522 0.6475306 0.6829451 #>  [696,] 0.44412161 0.4884607 0.5769004 0.5931116 0.6584124 0.6857772 0.7585644 #>  [697,] 0.28799904 0.3240801 0.3262106 0.4407859 0.4755262 0.4896835 0.5140096 #>  [698,] 0.30327634 0.3251016 0.4133151 0.4143939 0.4729254 0.4764561 0.4911797 #>  [699,] 1.01395420 1.0151866 1.0803367 1.0986768 1.1195126 1.1466050 1.1646566 #>  [700,] 0.45215305 0.5424020 0.6920331 0.7526179 0.7786115 0.8345996 0.8427412 #>  [701,] 0.61481173 0.8084518 0.8317355 0.8506542 0.8972240 0.9948659 1.0133222 #>  [702,] 0.82665201 0.9501697 1.0426136 1.0977243 1.1842138 1.2204736 1.2668233 #>  [703,] 0.30564333 0.3887733 0.4601007 0.4878174 0.4909689 0.4992987 0.6525142 #>  [704,] 0.29744052 0.5125067 0.5381232 0.5443055 0.6703188 0.6833543 0.7530257 #>  [705,] 0.15769164 0.3034931 0.3520583 0.3746150 0.3876266 0.4026917 0.4319322 #>  [706,] 0.33565256 0.4369873 0.6684247 0.7173051 0.7695362 0.7901977 0.8398114 #>  [707,] 0.41977673 0.4530110 0.4710495 0.5250539 0.5486948 0.5840921 0.5915177 #>  [708,] 0.47377890 0.5624065 0.6029504 0.6058852 0.6285890 0.6808825 0.7807427 #>  [709,] 0.65958560 0.7089006 0.7627432 0.7963954 0.8502715 0.9585266 0.9606572 #>  [710,] 0.60708516 0.6237962 0.7789442 0.8335510 0.8369126 0.8519114 0.8523271 #>  [711,] 0.52037949 0.7529586 0.7919324 0.7927653 0.8821391 0.9046037 1.0364229 #>  [712,] 0.36792031 0.4682357 0.5212561 0.5294099 0.5720700 0.5812901 0.5825604 #>  [713,] 0.33037656 0.3927341 0.4155196 0.4466745 0.5033385 0.5459196 0.5856549 #>  [714,] 0.31554798 0.3889872 0.4669543 0.5204605 0.5572000 0.5651927 0.5702654 #>  [715,] 0.55732920 0.7031575 0.7207068 0.7589156 0.8523305 0.9156718 0.9388800 #>  [716,] 0.88959698 0.8955001 0.8997376 1.1394155 1.1413808 1.1557344 1.2310329 #>  [717,] 0.50948408 0.6595856 0.7185265 0.7622208 0.8311678 0.8346813 0.8349974 #>  [718,] 0.28108835 0.4561151 0.4781734 0.4844557 0.4909689 0.5739035 0.6684811 #>  [719,] 0.16134035 0.4488623 0.4780329 0.5614989 0.5940476 0.5975074 0.6223371 #>  [720,] 0.41426184 0.4563997 0.4866431 0.4981975 0.5496965 0.5819934 0.6219415 #>  [721,] 0.40802838 0.4702298 0.5278690 0.5334158 0.5767169 0.6045640 0.6674684 #>  [722,] 0.40964531 0.6774283 0.7627432 0.8477052 0.8605129 0.8878779 0.9135945 #>  [723,] 0.18043277 0.2680008 0.3674945 0.3746150 0.4337002 0.4465576 0.5182109 #>  [724,] 0.57521757 0.6700800 0.6715721 0.6940367 0.7401678 0.8315171 0.8331509 #>  [725,] 0.21533387 0.5045057 0.5350748 0.5723457 0.6070056 0.6176878 0.6264174 #>  [726,] 0.53962385 0.6053624 0.6178353 0.6486808 0.8568543 0.8709802 0.9405977 #>  [727,] 0.48463641 0.4944006 0.5424020 0.5520271 0.5816493 0.6224041 0.6244559 #>  [728,] 0.22342785 0.2529877 0.3123021 0.3371686 0.3431172 0.3679355 0.3762196 #>  [729,] 0.36517170 0.4899108 0.5462269 0.6895957 0.7726125 0.8124694 0.8231819 #>  [730,] 1.14756420 1.1571898 1.1703173 1.1799151 1.2391901 1.3018163 1.3228671 #>  [731,] 0.46121460 0.4673659 0.5092561 0.5885112 0.6748694 0.7003966 0.7049422 #>  [732,] 0.50491941 0.6003189 0.7050416 0.7127812 0.7307608 0.7715604 0.7839922 #>  [733,] 0.36853468 0.6022527 0.7647210 0.7838357 0.7920667 0.9472826 0.9809014 #>  [734,] 0.47377890 0.5051657 0.5884200 0.5909976 0.6400683 0.6773294 0.6834370 #>  [735,] 0.37397630 0.3888182 0.4171372 0.4548507 0.4574392 0.4858622 0.5283835 #>  [736,] 0.48252559 0.5290964 0.5956711 0.6845704 0.7694528 0.7856264 0.8313498 #>  [737,] 0.50085504 0.5158364 0.5669516 0.7050987 0.7136334 0.7327252 0.7345531 #>  [738,] 0.16050213 0.3578091 0.5172332 0.5882496 0.5895047 0.6487580 0.6608533 #>  [739,] 0.35639677 0.4452260 0.4570841 0.4627231 0.5046647 0.5278338 0.5443995 #>  [740,] 0.99816186 1.0364828 1.2644300 1.2753671 1.3093391 1.3264925 1.3331607 #>  [741,] 0.37524027 0.3926683 0.4131086 0.4162990 0.4546578 0.5476437 0.5842028 #>  [742,] 0.58851124 0.6567905 0.7610219 0.7872766 0.8066962 0.8280624 0.8578039 #>  [743,] 0.29851308 0.6774500 0.6896948 0.6906037 0.8493232 0.9289956 0.9502703 #>  [744,] 0.36133165 0.4126856 0.4897581 0.4911797 0.5870870 0.6474020 0.6678258 #>  [745,] 0.25298771 0.3555866 0.3841143 0.4047243 0.4115707 0.4717604 0.5017379 #>  [746,] 0.35992733 0.4139325 0.4389775 0.4735924 0.4876900 0.5270582 0.5362056 #>  [747,] 0.32376443 0.3955207 0.4393937 0.5417260 0.5886462 0.5976625 0.6423745 #>  [748,] 0.94709937 1.1537940 1.1680670 1.1812702 1.1867130 1.2171471 1.2274151 #>  [749,] 0.54299139 0.5864847 0.5866434 0.6113722 0.6595900 0.6749280 0.7097019 #>  [750,] 0.22137137 0.3124898 0.3742749 0.4601853 0.4633834 0.4913737 0.5062901 #>  [751,] 0.17207826 0.2120765 0.3578091 0.3669878 0.4656422 0.4932327 0.5220067 #>  [752,] 0.63569918 0.8282837 1.0136024 1.0395007 1.0826646 1.0993742 1.1884255 #>  [753,] 0.48650475 0.5169629 0.6224250 0.6234626 0.6468642 0.6511222 0.6584631 #>  [754,] 0.50099215 0.5049194 0.5766021 0.5778082 0.5983288 0.6058482 0.6555066 #>  [755,] 0.42844452 0.4443866 0.4575019 0.4714525 0.5112900 0.5486533 0.5553926 #>  [756,] 0.57515417 0.6414727 0.6773294 0.7922262 0.8057577 0.9014663 0.9044110 #>  [757,] 0.42959611 0.4391167 0.4551387 0.5412543 0.5705732 0.5848108 0.5916654 #>  [758,] 0.46121460 0.6026440 0.6311903 0.7096872 0.7462503 0.7585383 0.7608344 #>  [759,] 0.30968567 0.3151034 0.3393032 0.3733667 0.5449679 0.6194249 0.6349646 #>  [760,] 0.33922948 0.8486058 1.0539806 1.0840044 1.0990160 1.1535801 1.1953442 #>  [761,] 0.29628489 0.4196547 0.4406478 0.4410567 0.4436147 0.4951806 0.5055477 #>  [762,] 0.28750470 0.3431172 0.3549814 0.3555866 0.3698594 0.5222038 0.5248498 #>  [763,] 0.73224933 0.8281980 0.8846691 0.9553937 0.9641909 1.0718283 1.1015483 #>  [764,] 0.23473970 0.4960497 0.5405021 0.5432989 0.5503144 0.5507662 0.6287790 #>  [765,] 0.24882399 0.5017959 0.5372548 0.5642029 0.5708003 0.5793842 0.5969777 #>  [766,] 0.37680322 0.4540824 0.4627231 0.5468183 0.5985708 0.6631229 0.6695222 #>  [767,] 0.51227141 0.6671868 0.6683235 0.7784859 0.8194962 0.8226604 0.9021748 #>  [768,] 0.65875615 0.7585087 0.8790062 0.9918203 1.0000432 1.0009030 1.0216670 #>  [769,] 0.48776621 0.6740742 0.6836048 0.7327708 0.7367405 0.7571659 0.7765947 #>  [770,] 0.93754031 0.9387564 0.9966937 1.0315134 1.0747398 1.1336681 1.1473569 #>  [771,] 0.57412781 0.5932841 0.6693269 0.6763387 0.7077863 0.7172212 0.7347877 #>  [772,] 0.65973257 0.8205107 0.8251029 0.9162753 0.9193938 0.9227313 0.9255661 #>  [773,] 0.49808662 0.5031119 0.6708969 0.6926802 0.7865063 0.8740720 0.9661504 #>  [774,] 0.25985954 0.5501299 0.5538457 0.5696619 0.5912340 0.6087061 0.6209494 #>  [775,] 0.89077851 1.0300805 1.1802371 1.1808918 1.2709135 1.3289543 1.3669399 #>  [776,] 0.19509103 0.2964680 0.5226389 0.5268324 0.5352234 0.5508552 0.5838274 #>  [777,] 0.14516589 0.2129108 0.5232472 0.5618374 0.5691169 0.6265360 0.6416663 #>  [778,] 0.48933558 0.5071746 0.6985484 0.7271169 0.7488392 0.7690828 0.7817214 #>  [779,] 0.41958747 0.4570841 0.4617118 0.4729254 0.4843009 0.4870401 0.5420630 #>  [780,] 0.41042123 0.5789882 0.6889414 0.7592221 0.7907522 0.8536506 0.8816548 #>  [781,] 0.23121203 0.4893356 0.5145809 0.5271044 0.5340398 0.5633109 0.5682191 #>  [782,] 0.21841743 0.3162752 0.3330399 0.3385177 0.3471771 0.4093885 0.4407859 #>  [783,] 1.14607135 1.3374050 1.3424906 1.3651464 1.4493132 1.4621126 1.5402154 #>  [784,] 0.64875797 0.7054005 0.7182408 0.7891259 0.8234780 0.8441008 0.9211470 #>  [785,] 0.44192505 0.4471321 0.4952305 0.5313848 0.5937591 0.6417283 0.6421444 #>  [786,] 0.42232518 0.4803919 0.5794849 0.5970965 0.6028357 0.6764868 0.6950970 #>  [787,] 0.41426184 0.4435590 0.4558835 0.4651742 0.5691169 0.5776940 0.5943416 #>  [788,] 0.37604114 0.4144581 0.4376785 0.4611559 0.5349812 0.5461082 0.6454679 #>  [789,] 0.44412161 0.6166085 0.6301520 0.6862288 0.6884159 0.7098378 0.7684565 #>  [790,] 0.83821686 0.8904497 0.8994715 0.9189496 0.9561752 0.9976013 1.0261720 #>  [791,] 0.48684584 0.9492595 0.9621356 1.0508744 1.0929549 1.1401203 1.1868963 #>  [792,] 0.32819920 0.5002697 0.5105063 0.5365833 0.5765737 0.7222883 0.8298920 #>  [793,] 0.33922948 0.8676363 0.8928365 0.9719517 0.9761170 1.1610808 1.1911953 #>  [794,] 0.44718449 0.6089716 0.7580478 0.8135556 0.8443778 0.9110049 0.9536418 #>  [795,] 0.60088697 0.6482905 0.9040925 0.9998295 1.0757045 1.1023176 1.1344880 #>  [796,] 0.32626314 0.7350940 0.7356073 0.7607860 0.7703441 0.8069060 0.8762774 #>  [797,] 0.44984664 0.5250539 0.5368103 0.5710594 0.6049998 0.6134996 0.6347260 #>  [798,] 0.60314710 0.8799143 0.9769758 1.0102861 1.0360255 1.0506727 1.0721365 #>  [799,] 0.38185184 0.4877367 0.5233809 0.5409470 0.5821041 0.6549668 0.6825263 #>  [800,] 0.44388808 0.4773359 0.5232472 0.5554161 0.6463815 0.6707124 0.6869204 #>  [801,] 0.32959079 0.3397566 0.4211150 0.4597564 0.4624133 0.4789620 0.4815162 #>  [802,] 0.36853468 0.5523593 0.8003063 0.8365331 0.8519950 0.9566152 0.9583544 #>  [803,] 0.44305981 0.4922397 0.5064498 0.5624065 0.5883900 0.5899699 0.6449508 #>  [804,] 0.44418763 0.5958914 0.6943906 0.7019960 0.7911999 0.7920667 0.8095809 #>  [805,] 0.33590663 0.3905750 0.4992987 0.5068976 0.5627223 0.5819155 0.5957725 #>  [806,] 0.27358204 0.3949879 0.5564693 0.5838671 0.6030349 0.6759101 0.7739393 #>  [807,] 0.44283665 0.4466745 0.4479339 0.5271044 0.5881722 0.6235993 0.6293143 #>  [808,] 0.25503978 0.5031119 0.5690106 0.8340820 0.9159025 0.9320445 0.9612833 #>  [809,] 0.86044713 0.8871281 0.9571213 1.0564114 1.1159355 1.1392435 1.1405368 #>  [810,] 0.24271598 0.2678851 0.4441278 0.4957853 0.4970024 0.5044149 0.5180142 #>  [811,] 0.35617649 0.3979435 0.4056082 0.5848108 0.6015554 0.6421035 0.6684482 #>  [812,] 0.25749760 0.2818831 0.3862080 0.4303934 0.5412543 0.5783331 0.6064729 #>  [813,] 0.44967777 0.4880386 0.5197775 0.5948766 0.6647489 0.6759005 0.7003217 #>  [814,] 0.37094983 0.4438881 0.4563997 0.5131704 0.5752176 0.6076833 0.6308001 #>  [815,] 0.28722475 0.5882496 0.6620058 0.7244731 0.7837754 0.7940574 0.8199901 #>  [816,] 0.73277083 0.8214695 0.9078917 0.9895605 1.0273050 1.0295519 1.0460264 #>  [817,] 1.35797446 1.8223893 1.8485440 2.0470618 2.0714489 2.0896868 2.0968717 #>  [818,] 1.24537585 1.3017445 1.4117175 1.4142829 1.5036439 1.5329230 1.5367210 #>  [819,] 0.98397504 1.2133286 1.2937544 1.4321133 1.4856234 1.5088306 1.6031647 #>  [820,] 0.53012100 0.5631329 0.5756282 0.5791274 0.5909703 0.6042039 0.6104013 #>  [821,] 0.25101781 0.4306196 0.4761529 0.5051226 0.5134156 0.5136822 0.5846346 #>  [822,] 0.42171327 0.4570846 0.5023443 0.5161321 0.5639050 0.5689258 0.5759063 #>  [823,] 0.69035561 1.0612892 1.0834663 1.1066053 1.1148587 1.1648739 1.1803187 #>  [824,] 0.45927852 0.5086040 0.5274687 0.6018728 0.6288838 0.6567453 0.6877980 #>  [825,] 0.38929685 0.5266811 0.5958786 0.6712649 0.7622208 0.7772050 0.8103998 #>  [826,] 0.38501607 0.4215858 0.4408476 0.5306383 0.5539076 0.5610539 0.5885150 #>  [827,] 0.39990449 0.4056329 0.5719033 0.5746804 0.6219553 0.6375756 0.6680155 #>  [828,] 0.40349444 0.6037330 0.6236100 0.6995973 0.7045745 0.7088456 0.7693384 #>  [829,] 0.32687300 0.4500983 0.4788410 0.5708165 0.5793842 0.6111120 0.6144409 #>  [830,] 0.39610485 0.4075329 0.4303934 0.4391167 0.6107593 0.7260487 0.7531560 #>  [831,] 0.32510162 0.3725310 0.4126856 0.4283814 0.4508749 0.4840192 0.5620432 #>  [832,] 0.42890891 0.5609688 0.6695222 0.7570874 0.8200808 0.8404936 0.8598013 #>  [833,] 0.34899503 0.4529902 0.4619435 0.5840921 0.5919416 0.5967695 0.6134996 #>  [834,] 0.68706811 0.7875279 0.9915688 1.0596198 1.1135773 1.1148910 1.1492239 #>  [835,] 0.59848623 0.7491920 0.8399513 0.8700997 0.8930580 0.9039286 0.9213796 #>  [836,] 0.73910029 0.8907785 0.9838682 0.9929719 1.0013123 1.0360280 1.0719798 #>  [837,] 0.34116322 0.4844138 0.5759063 0.7366179 0.8054520 0.8173197 0.8291923 #>  [838,] 0.91446755 0.9497892 1.0190296 1.1079818 1.1135605 1.1183653 1.1284739 #>  [839,] 0.74387413 0.7547555 0.7715604 0.7816646 0.8547887 0.8619213 0.9184581 #>  [840,] 0.42640605 0.4865047 0.5392872 0.5853118 0.6015151 0.6404863 0.6799009 #>  [841,] 0.39943757 0.4434764 0.5014979 0.5346121 0.5835737 0.6777206 0.6928583 #>  [842,] 0.30363638 0.5641919 0.6327017 0.7344816 0.7791528 0.7985903 0.8388781 #>  [843,] 0.52045273 0.6011797 0.6358279 0.6421444 0.6454679 0.6778864 0.6787869 #>  [844,] 0.87282834 0.9448894 1.0664821 1.0863215 1.1400187 1.1607855 1.1844837 #>  [845,] 0.42640605 0.4573338 0.6179011 0.6553309 0.6588897 0.6963417 0.8152690 #>  [846,] 0.71824081 0.7250455 0.7714466 0.8025059 0.8426518 0.9854941 0.9883192 #>  [847,] 0.69842241 0.7822219 0.8266520 0.9486123 0.9646230 0.9728410 0.9952768 #>  [848,] 0.46219357 0.5055112 0.5078874 0.6200076 0.6545304 0.6579557 0.6583305 #>  [849,] 0.40964531 0.6152722 0.6281038 0.6647665 0.6712649 0.7092113 0.7540683 #>  [850,] 0.84916212 0.8870147 1.0653288 1.0876961 1.1485819 1.2170216 1.2212735 #>  [851,] 0.26696688 0.4318312 0.4864702 0.4875303 0.5944970 0.6674738 0.6818602 #>  [852,] 0.30496012 0.4586064 0.4622187 0.4698492 0.4714819 0.5157022 0.5786397 #>  [853,] 0.46769567 0.5376689 0.6833672 0.7062951 0.7231431 0.7269833 0.7401133 #>  [854,] 0.40349444 0.4105358 0.4809154 0.5507866 0.7510384 0.9410592 0.9743465 #>  [855,] 0.41490636 0.5386647 0.9023049 0.9085558 0.9226681 0.9396840 0.9714817 #>  [856,] 1.07147805 1.1819516 1.2023195 1.2724327 1.3082884 1.3959294 1.4241834 #>  [857,] 0.36144350 0.4810102 0.5282036 0.5789882 0.6675085 0.7488887 0.8008544 #>  [858,] 0.60347276 0.6420969 0.8711590 0.8885784 0.9796254 1.0037864 1.1569717 #>  [859,] 1.00913453 1.3675456 1.4461188 1.7329697 1.7735089 1.7924972 1.8068779 #>  [860,] 0.47469996 0.4781734 0.4878174 0.5457833 0.5548285 0.5985708 0.6288838 #>  [861,] 0.63905948 0.6625068 0.7263897 0.7344319 0.7651101 0.8495449 0.8895670 #>  [862,] 0.37094983 0.4866431 0.6940367 0.7525002 0.7672780 0.7869426 0.7946329 #>  [863,] 0.30446494 0.3435311 0.4130786 0.4142646 0.4836759 0.4922397 0.5203389 #>  [864,] 0.96985296 1.0290343 1.0646306 1.1834378 1.2164240 1.2649172 1.3144142 #>  [865,] 0.29744052 0.5091564 0.7000461 0.7401040 0.7460877 0.7803615 0.8195046 #>  [866,] 0.36050552 0.4165541 0.6413716 0.6600387 0.6822544 0.7071608 0.7141155 #>  [867,] 0.28118810 0.4395706 0.5617640 0.5761536 0.5925554 0.6127899 0.6132070 #>  [868,] 0.57187217 0.5907534 0.6155954 0.6224184 0.6534340 0.6586594 0.6853632 #>  [869,] 0.44521327 0.6486808 0.8141851 0.8914630 0.9259424 0.9391875 0.9446972 #>  [870,] 0.56120989 0.5910634 0.6018728 0.7433273 0.8662543 0.8983705 0.9029490 #>  [871,] 0.33037656 0.4376785 0.4470634 0.4505095 0.4719907 0.4954289 0.5203389 #>  [872,] 0.26196962 0.5593362 0.5863365 0.6584124 0.7098378 0.7487692 0.7575716 #>  [873,] 0.46016289 0.4619271 0.5778082 0.6003189 0.6594901 0.6837672 0.7197496 #>  [874,] 0.90951719 0.9673147 1.0133222 1.0259828 1.0369940 1.1058378 1.1180528 #>  [875,] 0.45369832 0.5491598 0.6200076 0.6775299 0.7040612 0.7125686 0.7168076 #>  [876,] 0.35399658 0.5190743 0.5536029 0.5549656 0.5620432 0.6474020 0.6729270 #>  [877,] 0.59089854 0.7077863 0.7651101 0.7824549 0.7825997 0.8493826 0.9253037 #>  [878,] 0.59982010 0.6594019 0.6889414 0.7807639 0.8262158 0.8265838 0.9594990 #>  [879,] 0.32156118 0.4365811 0.6095757 0.6335677 0.6531987 0.7263897 0.8493826 #>  [880,] 0.20782382 0.3868366 0.3871848 0.4144888 0.4162789 0.4212120 0.4909234 #>  [881,] 0.21859488 0.3145368 0.4185520 0.4220223 0.4692526 0.4749248 0.5262038 #>  [882,] 0.48252582 0.5381196 0.6113035 0.6244858 0.6493120 0.7627658 0.7844561 #>  [883,] 0.27950102 0.3030565 0.3044649 0.3782235 0.5064498 0.5534508 0.5542908 #>  [884,] 0.50408728 0.8180328 0.9232249 1.0868958 1.2469214 1.2493815 1.2528287 #>  [885,] 0.31363201 0.5122375 0.5932841 0.6531987 0.6682977 0.6877980 0.7426291 #>  [886,] 0.63262786 0.6837815 0.6943841 0.6971334 0.7049766 0.7529380 0.7620441 #>  [887,] 0.30691569 0.4169202 0.5507930 0.5577622 0.5780520 0.5786397 0.5790163 #>  [888,] 0.33140553 0.4960071 0.6582107 0.6750403 0.7245222 0.7358582 0.7510384 #>  [889,] 0.69842241 0.7224130 0.8061161 0.8107471 0.8573232 0.9075078 0.9934351 #>  [890,] 0.27358204 0.4367128 0.5103564 0.6220900 0.6302793 0.6385402 0.6950970 #>  [891,] 0.27383155 0.3974820 0.4490162 0.4742866 0.5050632 0.5134156 0.5587041 #>  [892,] 0.32566064 0.3850161 0.4267778 0.4464301 0.4789389 0.4802889 0.5377368 #>  [893,] 0.28371389 0.4365811 0.6279771 0.7030402 0.7644150 0.8294662 0.8495449 #>  [894,] 0.74403048 0.9459707 0.9571213 1.0128743 1.0259828 1.0689474 1.1196507 #>  [895,] 0.11359717 0.2795010 0.5472841 0.5513488 0.5678296 0.5721241 0.6270753 #>  [896,] 0.60412752 0.6142873 0.7059181 0.8917247 0.8957079 0.8974778 0.9259943 #>  [897,] 0.28685918 0.4581654 0.5313848 0.6171834 0.6680670 0.7300250 0.7509641 #>  [898,] 0.45194528 0.4653647 0.5366353 0.5902755 0.5979243 0.6003268 0.6440921 #>  [899,] 0.35725238 0.3870968 0.4434852 0.5231519 0.6097190 0.6624095 0.6737993 #>  [900,] 0.46839281 0.5844737 0.6271535 0.6678949 0.6965341 0.7136381 0.7170192 #>  [901,] 0.28681060 0.5095162 0.5584346 0.6249305 0.6603558 0.6742619 0.6974259 #>  [902,] 0.57412781 0.5845160 0.6022443 0.6328937 0.6363978 0.6674517 0.6835084 #>  [903,] 0.23684421 0.4826466 0.5719033 0.5789390 0.6131027 0.6331514 0.6432988 #>  [904,] 0.30476976 0.4237538 0.4352032 0.4459813 0.4709872 0.4880386 0.5039747 #>  [905,] 0.31873090 0.4419531 0.4535334 0.6825263 0.7227211 0.7264842 0.7309662 #>  [906,] 0.71131015 0.8689739 0.9264546 0.9409093 1.0459977 1.1316729 1.2651785 #>  [907,] 0.57249186 0.5743819 0.6575052 0.8232093 0.8666037 0.9157113 0.9614144 #>  [908,] 0.38799614 0.4416617 0.5570175 0.6585769 0.6595050 0.6849994 0.7083699 #>  [909,] 0.22137137 0.3034931 0.3250740 0.3351800 0.3479886 0.3747355 0.3999034 #>  [910,] 0.38929685 0.6818377 0.7288509 0.7364304 0.7391003 0.8240639 0.8592038 #>  [911,] 0.22072346 0.4131086 0.4643884 0.4738184 0.5146761 0.6207131 0.6727423 #>  [912,] 0.24882399 0.3823469 0.5234763 0.5417757 0.6001916 0.6567453 0.6646787 #>  [913,] 0.63493185 0.8330833 0.8354870 0.8621972 0.9023487 0.9056709 0.9071065 #>  [914,] 0.21433680 0.4180566 0.4464783 0.4540059 0.4597564 0.4833346 0.4895333 #>  [915,] 0.46078342 0.5112114 0.5679654 0.6107480 0.6251621 0.6532692 0.6678949 #>  [916,] 0.24260473 0.3262106 0.4564590 0.4639986 0.4940311 0.5057200 0.5488088 #>  [917,] 0.30771307 0.4227277 0.5346121 0.5877957 0.6105288 0.6699941 0.7008852 #>  [918,] 0.60314710 0.9119678 1.0569085 1.1303221 1.1497484 1.1774648 1.2132499 #>  [919,] 0.88502691 0.9216183 0.9986666 1.0176177 1.1457600 1.1779164 1.1966136 #>  [920,] 0.33590663 0.4113216 0.4535171 0.4640404 0.4793757 0.4893941 0.4972959 #>  [921,] 0.27721605 0.3311948 0.3698705 0.4007951 0.4698492 0.4797779 0.4908808 #>  [922,] 0.54357256 0.6669286 0.6740654 0.6754991 0.7443659 0.8298920 0.8530526 #>  [923,] 0.28440785 0.3340730 0.4494832 0.5092766 0.5776136 0.5998838 0.6221928 #>  [924,] 0.37439868 0.4719867 0.7061063 0.8501526 0.8580390 0.9357808 0.9538873 #>  [925,] 0.13991958 0.4221506 0.4592844 0.4952925 0.5058168 0.5237745 0.5516148 #>  [926,] 0.43335803 0.6095757 0.6594019 0.7238023 0.7344319 0.7398278 0.7592221 #>  [927,] 0.42890891 0.7136381 0.7329443 0.7515093 0.7875496 0.8086032 0.8258585 #>  [928,] 0.35142007 0.4142646 0.4626483 0.4817517 0.4841548 0.5238762 0.5244533 #>  [929,] 0.33743862 0.3515013 0.3561715 0.3785236 0.4974467 0.5005002 0.6672212 #>  [930,] 0.65539441 0.6792799 0.6833543 0.8069866 0.8346281 0.8553686 0.9264546 #>  [931,] 0.39072775 0.5956711 0.7101816 0.8455581 0.9065052 0.9541452 0.9674099 #>  [932,] 1.22556143 1.3053793 1.3103346 1.3250865 1.3262588 1.4321133 1.4503134 #>  [933,] 0.26352199 0.3248948 0.3455390 0.4256093 0.4356705 0.4506516 0.4773555 #>  [934,] 0.50266091 0.6370650 0.6572769 0.6582107 0.7060196 0.7210846 0.8037557 #>  [935,] 0.43707021 0.4434764 0.5240073 0.5415121 0.5928056 0.6168214 0.6309267 #>  [936,] 0.57438185 0.6029549 0.6458551 0.6484958 0.8264431 0.8790501 0.9357808 #>  [937,] 0.68185937 0.6820272 0.7180824 0.7480890 0.7713851 0.7837119 0.8118746 #>  [938,] 0.28549287 0.3717182 0.5669516 0.6499447 0.6747704 0.6982478 0.8509299 #>  [939,] 0.66223206 0.6776837 0.6850668 0.8008544 0.8017759 0.8117046 0.8265838 #>  [940,] 0.58026267 0.7205935 0.8265324 0.8804725 0.9929059 0.9992931 1.0207735 #>  [941,] 0.33407304 0.4507971 0.4993979 0.5530965 0.5534048 0.5790163 0.5797504 #>  [942,] 0.45215305 0.4944006 0.6045440 0.6804086 0.7611627 0.8652673 0.8819336 #>  [943,] 0.21533387 0.5258769 0.5278448 0.5318145 0.5888893 0.6096744 0.6169264 #>  [944,] 0.18430686 0.3752315 0.5799178 0.6870262 0.7325672 0.7829143 0.7851369 #>  [945,] 0.97231225 1.1800142 1.2392773 1.2617010 1.2891563 1.3727678 1.3789468 #>  [946,] 0.18430686 0.4242664 0.6246688 0.7277010 0.8281175 0.8365911 0.8458088 #>  [947,] 0.30976908 0.5122714 0.6422166 0.7259945 0.7262890 0.8548244 0.9294417 #>  [948,] 0.42278594 0.4773653 0.5532899 0.6397244 0.7287521 0.8299257 0.8484287 #>  [949,] 0.36716585 0.4074899 0.4595841 0.5939235 0.6150099 0.6262365 0.6543452 #>  [950,] 0.35072537 0.4508749 0.4650805 0.4764561 0.4870401 0.5008861 0.6052854 #>  [951,] 0.52072228 0.6502856 0.7195372 0.7757235 0.7874370 0.8218283 0.8264014 #>  [952,] 0.43728024 0.4535171 0.5659559 0.5819155 0.6096560 0.6215774 0.6288573 #>  [953,] 0.57895585 0.6134511 0.6531628 0.6782040 0.7321551 0.7393210 0.7469861 #>  [954,] 0.43958930 0.5208628 0.5462269 0.5995552 0.6794999 0.7068113 0.7202345 #>  [955,] 0.35725238 0.4713373 0.5551711 0.5951791 0.6255652 0.6301522 0.6616926 #>  [956,] 0.23564857 0.7873159 0.9162964 0.9207931 0.9510949 0.9882333 1.0176177 #>  [957,] 0.58355485 0.5975140 0.6785357 0.6916926 0.7021568 0.7033227 0.7103432 #>  [958,] 0.33183526 0.3785632 0.5442725 0.5926940 0.7216523 0.7369722 0.7895020 #>  [959,] 0.89106248 1.1370649 1.2134679 1.2504264 1.3381916 1.3410929 1.3454345 #>  [960,] 0.23473970 0.4179121 0.4760854 0.5177307 0.6076038 0.6119947 0.6190692 #>  [961,] 0.24889478 0.2788289 0.3248948 0.4909234 0.4930232 0.4998213 0.5049826 #>  [962,] 0.43520325 0.4462005 0.5446934 0.5840738 0.5886946 0.5949044 0.5988715 #>  [963,] 0.46103942 0.4702298 0.4944946 0.5095570 0.5775942 0.6029504 0.6475306 #>  [964,] 0.11979246 0.4225211 0.4468533 0.4944946 0.5217665 0.5278690 0.6194491 #>  [965,] 0.43703883 0.4457442 0.4616399 0.5265109 0.6322489 0.6785357 0.6843652 #>  [966,] 0.48684584 0.7571659 0.8278185 0.9038573 0.9118879 0.9639256 0.9821868 #>  [967,] 0.41042123 0.5998201 0.6238769 0.7398278 0.8692952 1.0934107 1.0963085 #>  [968,] 0.24589862 0.3831919 0.4013319 0.4870408 0.4974467 0.4984615 0.5017959 #>  [969,] 0.54527621 0.5504522 0.5702654 0.5721480 0.5974421 0.6042112 0.6270850 #>  [970,] 0.26543053 0.3270559 0.4622769 0.4902943 0.5584390 0.5907534 0.6052016 #>  [971,] 0.64866811 0.6927280 0.8086224 0.8640671 0.8905655 0.9449388 1.0165608 #>  [972,] 0.24260473 0.2879990 0.3471771 0.4060238 0.4786792 0.5331878 0.5391448 #>  [973,] 0.50166006 0.5731871 0.7997006 0.9213796 1.0234487 1.0334561 1.0660506 #>  [974,] 0.53866474 0.5960744 0.6270420 0.6516829 0.7105983 0.7947765 0.8275729 #>  [975,] 0.27764546 0.3549814 0.3765215 0.3931110 0.5316027 0.5569290 0.5851389 #>  [976,] 0.20960184 0.2404536 0.5392779 0.5653512 0.6130872 0.6262365 0.6277412 #>  [977,] 0.44984664 0.5445766 0.6142014 0.6371612 0.6418830 0.6657099 0.6941530 #>  [978,] 0.33303991 0.3876770 0.4410567 0.4535389 0.4896835 0.4915011 0.5331878 #>  [979,] 0.24026308 0.4825802 0.5629740 0.5868544 0.6735354 0.6845704 0.7081513 #>  [980,] 0.30475084 0.3605055 0.5329739 0.5512306 0.5662244 0.6519975 0.6581113 #>  [981,] 0.43964273 0.5330239 0.5900208 0.6169123 0.6457617 0.6671868 0.7091356 #>  [982,] 0.32408010 0.4060238 0.4322399 0.5389774 0.5488088 0.5673928 0.5693900 #>  [983,] 0.27446592 0.3287608 0.5140636 0.5409470 0.6603558 0.6776899 0.6836334 #>  [984,] 1.27044762 1.5401110 1.5730043 1.5986843 1.6237488 1.6339050 1.6484418 #>  [985,] 0.60565355 0.6768155 0.8237893 0.8242323 0.8293681 0.8508941 0.8578039 #>  [986,] 0.40896783 0.5046647 0.5090152 0.5631329 0.6127169 0.6128777 0.6213144 #>  [987,] 0.34573049 0.7230311 0.7445003 0.7954080 0.8774078 0.9134686 0.9159771 #>  [988,] 0.36842958 0.5563452 0.5768738 0.6399943 0.6552358 0.6702708 0.7500844 #>  [989,] 0.97118812 0.9775921 0.9986666 1.1411473 1.1419481 1.1589675 1.1855088 #>  [990,] 0.28371389 0.4836080 0.6335677 0.7881396 0.7929009 0.8007332 0.8158339 #>  [991,] 0.50571999 0.5140096 0.5457952 0.5693900 0.6106502 0.6245718 0.6753810 #>  [992,] 0.37814374 0.4389775 0.4435381 0.5958582 0.6018976 0.6104013 0.6628350 #>  [993,] 0.65207354 0.6594901 0.6667140 0.7170192 0.7260498 0.7307608 0.7494759 #>  [994,] 0.47162625 0.4748899 0.7986825 0.8703922 1.0089185 1.0345129 1.0446179 #>  [995,] 0.61899888 0.6705106 0.7361139 0.9203413 0.9390660 1.0056380 1.0219363 #>  [996,] 0.29828307 0.4080284 0.4610394 0.6328819 0.6380197 0.6857037 0.8085030 #>  [997,] 0.24797955 0.5081422 0.6152722 0.6346005 0.6784882 0.7554009 0.7587427 #>  [998,] 0.35002420 0.5066011 0.5639902 0.5937591 0.6171834 0.7101676 0.7369660 #>  [999,] 0.48721241 0.5097263 0.5623346 0.6273875 0.6897103 0.6919212 0.7382582 #> [1000,] 0.29851308 0.7084308 0.7405843 0.8218262 0.9027862 1.0682338 1.0754805 #>              [,8]      [,9]     [,10] #>    [1,] 0.6840759 0.6906096 0.7032950 #>    [2,] 0.8518433 0.8568543 0.8588793 #>    [3,] 0.8164106 0.8347550 0.8504220 #>    [4,] 0.6534062 0.6603650 0.6790347 #>    [5,] 0.7247258 0.7621049 0.7740370 #>    [6,] 1.3192033 1.3904811 1.3939734 #>    [7,] 0.9719121 0.9719517 1.0208235 #>    [8,] 1.3569711 1.3721468 1.3850795 #>    [9,] 0.9157939 0.9195472 0.9233898 #>   [10,] 0.9291189 1.0022811 1.0148207 #>   [11,] 0.8209140 0.8209946 0.8607672 #>   [12,] 0.5576197 0.5745237 0.5802141 #>   [13,] 0.6473999 0.6693659 0.7459284 #>   [14,] 0.6376620 0.6527585 0.6805830 #>   [15,] 1.0131152 1.0216670 1.0226317 #>   [16,] 0.4915011 0.5554542 0.5898575 #>   [17,] 1.0772364 1.0808099 1.1078909 #>   [18,] 0.8037557 0.8974831 0.9028040 #>   [19,] 0.6976872 0.7176255 0.7204457 #>   [20,] 0.7008394 0.7105750 0.7263072 #>   [21,] 1.0824188 1.0934633 1.1016882 #>   [22,] 1.2951766 1.3523233 1.3529491 #>   [23,] 0.9775921 1.0130230 1.0647031 #>   [24,] 0.7652112 0.7988730 0.8781541 #>   [25,] 1.0401389 1.0587493 1.0727531 #>   [26,] 0.9894665 1.0292243 1.1185107 #>   [27,] 1.0001348 1.0222661 1.0299788 #>   [28,] 0.5392779 0.5470884 0.6052895 #>   [29,] 0.6588562 0.6659103 0.6782040 #>   [30,] 0.6156993 0.6346005 0.6715173 #>   [31,] 0.8149296 0.8341268 0.8525161 #>   [32,] 0.6888935 0.7280055 0.7496348 #>   [33,] 0.8199901 0.8312688 0.8318377 #>   [34,] 0.7802350 0.7917229 0.8117150 #>   [35,] 1.9819188 2.0177659 2.0183972 #>   [36,] 0.6523962 0.6538855 0.6549830 #>   [37,] 1.1656878 1.2274151 1.2322558 #>   [38,] 1.1041461 1.1127427 1.2205911 #>   [39,] 0.6721756 0.7045341 0.7171957 #>   [40,] 0.6257026 0.6335507 0.6679835 #>   [41,] 0.9612645 0.9813908 1.0273125 #>   [42,] 0.8995469 0.9657486 0.9891915 #>   [43,] 0.8521872 0.8654797 0.9095430 #>   [44,] 1.0689058 1.0716306 1.1045182 #>   [45,] 0.6682670 0.7015410 0.7019068 #>   [46,] 0.8804297 0.9051744 0.9148691 #>   [47,] 0.8055153 0.8076417 0.8124885 #>   [48,] 0.6123676 0.6128777 0.6413639 #>   [49,] 0.6129594 0.6196495 0.6729880 #>   [50,] 0.6012504 0.6107480 0.6422065 #>   [51,] 0.7910172 0.7966691 0.7987725 #>   [52,] 1.7020465 1.7086518 1.7404867 #>   [53,] 0.8502715 0.9260911 0.9374613 #>   [54,] 0.9490003 0.9874445 1.0202348 #>   [55,] 0.8580646 0.8869916 0.9275110 #>   [56,] 0.6379182 0.6549468 0.6570163 #>   [57,] 0.5140424 0.5412691 0.5499048 #>   [58,] 0.7734966 0.7816646 0.8457307 #>   [59,] 0.6549668 0.6626993 0.6732006 #>   [60,] 1.6762071 1.7118909 1.7590287 #>   [61,] 2.2497996 2.2948665 2.2984346 #>   [62,] 1.0444711 1.0588723 1.0733686 #>   [63,] 0.7392918 0.7492957 0.7498574 #>   [64,] 1.7428904 1.7919709 1.8363302 #>   [65,] 1.2423124 1.3042429 1.3256213 #>   [66,] 0.5417778 0.5608717 0.5805189 #>   [67,] 1.1444881 1.1565801 1.1669286 #>   [68,] 1.2877877 1.3034414 1.3195856 #>   [69,] 1.2453759 1.2604476 1.2759352 #>   [70,] 0.5895982 0.5964174 0.5980054 #>   [71,] 0.8209406 0.8274756 0.8424975 #>   [72,] 0.5367385 0.5577622 0.6003728 #>   [73,] 0.8200808 0.8258585 0.8270837 #>   [74,] 0.4452260 0.4452944 0.4900791 #>   [75,] 0.8849988 0.8851607 0.9412848 #>   [76,] 0.8082228 0.8099795 0.8101489 #>   [77,] 0.8034263 0.8588578 0.9054233 #>   [78,] 0.7955224 0.8115960 0.8317355 #>   [79,] 1.1158760 1.1995725 1.2106078 #>   [80,] 0.9036765 0.9133298 0.9374889 #>   [81,] 0.4941907 0.5112900 0.5446907 #>   [82,] 0.8794639 0.9222374 0.9317462 #>   [83,] 0.6364352 0.6445585 0.6500544 #>   [84,] 0.8179165 0.8226604 0.8496356 #>   [85,] 0.9063272 0.9092705 0.9103541 #>   [86,] 1.2813124 1.3188009 1.3296657 #>   [87,] 0.6337530 0.6484782 0.6834518 #>   [88,] 0.6778428 0.7186115 0.7495291 #>   [89,] 1.1652548 1.1887988 1.2048274 #>   [90,] 0.7877767 0.8128223 0.8305770 #>   [91,] 0.9001327 0.9112243 0.9177209 #>   [92,] 0.5678034 0.5697645 0.5721562 #>   [93,] 0.9493530 0.9754013 1.0040164 #>   [94,] 1.1232831 1.1367003 1.1806592 #>   [95,] 0.9733667 0.9813147 1.0178984 #>   [96,] 0.9096129 0.9509050 0.9750049 #>   [97,] 0.8450607 0.8512987 0.8881848 #>   [98,] 0.6445585 0.6694510 0.6990584 #>   [99,] 0.7090663 0.7709237 0.7752788 #>  [100,] 0.4452944 0.4491485 0.5222038 #>  [101,] 0.6072869 0.6418342 0.6616926 #>  [102,] 1.5583913 1.5678093 1.5728838 #>  [103,] 1.7801981 1.8542844 1.8653033 #>  [104,] 0.7807777 0.7895020 0.8069466 #>  [105,] 1.6867496 1.6909687 1.7847073 #>  [106,] 0.6704947 0.6742619 0.6951407 #>  [107,] 1.3036162 1.3059343 1.3372601 #>  [108,] 0.7209451 0.7236693 0.7291138 #>  [109,] 0.7670322 0.7787935 0.7924080 #>  [110,] 0.8933924 0.9031811 0.9046437 #>  [111,] 0.8108463 0.8611334 0.8867489 #>  [112,] 0.5504522 0.5513488 0.5796125 #>  [113,] 1.9604178 1.9651885 1.9942260 #>  [114,] 0.6541010 0.6658840 0.7000461 #>  [115,] 0.8492745 0.8601915 0.8801183 #>  [116,] 0.7290991 0.7354406 0.7958822 #>  [117,] 0.7927881 0.8214226 0.8354252 #>  [118,] 1.3967688 1.5020889 1.5411776 #>  [119,] 0.8648411 0.8869611 0.9386295 #>  [120,] 1.0359519 1.0466205 1.0959056 #>  [121,] 0.5992548 0.6031995 0.6144043 #>  [122,] 0.6573546 0.6805800 0.7497736 #>  [123,] 2.0632080 2.0650716 2.0966995 #>  [124,] 0.6463035 0.6502856 0.6595222 #>  [125,] 1.0912800 1.1533889 1.1774059 #>  [126,] 0.8495333 0.8707533 0.9243354 #>  [127,] 0.8682285 0.9108743 0.9159771 #>  [128,] 0.9116691 0.9226313 0.9652295 #>  [129,] 0.5619234 0.5640989 0.5705369 #>  [130,] 0.7246204 0.7366179 0.7550259 #>  [131,] 0.8629082 0.9154515 0.9240002 #>  [132,] 1.0965572 1.1593909 1.1762636 #>  [133,] 0.7034058 0.7151740 0.7648659 #>  [134,] 0.6144409 0.6328937 0.6447704 #>  [135,] 1.0180832 1.0299788 1.0489464 #>  [136,] 0.8364312 0.8534275 0.8945130 #>  [137,] 0.6147290 0.6347260 0.6371612 #>  [138,] 0.9633120 1.0033637 1.0865785 #>  [139,] 0.5941433 0.6155954 0.6465600 #>  [140,] 0.6031036 0.6207728 0.6455000 #>  [141,] 0.9334972 0.9463914 0.9830048 #>  [142,] 1.1358766 1.1410106 1.1774648 #>  [143,] 0.6421035 0.6493090 0.6508839 #>  [144,] 0.7756632 0.7809358 0.8319270 #>  [145,] 1.3961264 1.4563708 1.4723483 #>  [146,] 0.7544998 0.7605192 0.7750800 #>  [147,] 0.6547691 0.6647171 0.6680865 #>  [148,] 0.6764628 0.6853873 0.6879521 #>  [149,] 0.8724831 0.8793071 0.8810645 #>  [150,] 1.3541490 1.3976390 1.4120999 #>  [151,] 1.0977262 1.1130977 1.1441964 #>  [152,] 1.0788339 1.1594723 1.1634658 #>  [153,] 0.6186239 0.6249076 0.6524674 #>  [154,] 0.9979448 1.0165260 1.0278614 #>  [155,] 0.7963270 0.8420964 0.8449678 #>  [156,] 0.6019287 0.6300363 0.6345781 #>  [157,] 1.1907726 1.1915732 1.2181482 #>  [158,] 0.6451609 0.6899045 0.6906096 #>  [159,] 0.6867869 0.6941530 0.6957587 #>  [160,] 0.6000946 0.6105559 0.6194064 #>  [161,] 0.8947476 0.9116758 0.9227535 #>  [162,] 0.5975074 0.6041307 0.6090262 #>  [163,] 0.5890395 0.5954489 0.5967834 #>  [164,] 0.7273069 0.7315114 0.7328287 #>  [165,] 0.7412892 0.7449357 0.7487692 #>  [166,] 0.7038953 0.7194598 0.7477178 #>  [167,] 0.7750041 0.7920255 0.8266049 #>  [168,] 0.8001009 0.8536781 0.8600708 #>  [169,] 0.9194785 0.9441205 1.0058058 #>  [170,] 0.9382792 0.9577932 1.0169267 #>  [171,] 1.3281592 1.3625428 1.4011702 #>  [172,] 0.9565446 0.9684916 0.9775500 #>  [173,] 0.6766340 0.6790726 0.7068775 #>  [174,] 0.6575003 0.6674738 0.6684247 #>  [175,] 1.4917277 1.5159244 1.5813266 #>  [176,] 0.7991878 0.8179211 0.8379585 #>  [177,] 0.5519513 0.5877064 0.6081811 #>  [178,] 0.6492453 0.6581934 0.6787869 #>  [179,] 1.0827096 1.1388808 1.1556237 #>  [180,] 0.7403373 0.8037808 0.8071251 #>  [181,] 0.5956783 0.5976749 0.6041471 #>  [182,] 1.4076994 1.4155919 1.4289038 #>  [183,] 0.5703735 0.6206696 0.6222473 #>  [184,] 0.5892729 0.6536594 0.6557035 #>  [185,] 0.7245222 0.7328571 0.7662223 #>  [186,] 0.6956527 0.7056529 0.7162701 #>  [187,] 0.9646993 1.0245883 1.0259728 #>  [188,] 0.5371735 0.5627223 0.6033876 #>  [189,] 0.7091875 0.7096872 0.7243470 #>  [190,] 0.7823964 0.7965548 0.8152690 #>  [191,] 0.6779237 0.6806978 0.7120420 #>  [192,] 0.9338751 0.9654318 0.9725518 #>  [193,] 0.8581111 0.8944121 0.9045185 #>  [194,] 2.1462045 2.1621923 2.2235551 #>  [195,] 0.7404873 0.7424698 0.7466623 #>  [196,] 1.2443910 1.2663759 1.2778056 #>  [197,] 0.8653135 0.9181342 0.9489763 #>  [198,] 1.2335738 1.2888042 1.3161678 #>  [199,] 0.8733079 0.8818635 0.8860108 #>  [200,] 0.6620058 0.6689861 0.7062811 #>  [201,] 0.7638727 0.7764632 0.7833433 #>  [202,] 0.9031769 0.9466053 0.9771277 #>  [203,] 0.9742886 0.9762667 0.9838682 #>  [204,] 0.8660171 0.8713362 0.8774078 #>  [205,] 0.7521672 0.7531560 0.8079337 #>  [206,] 0.5354843 0.5507930 0.5925374 #>  [207,] 0.8843462 0.8956957 0.9245193 #>  [208,] 0.8839322 0.9018486 0.9108146 #>  [209,] 0.9954408 1.0041729 1.0127025 #>  [210,] 0.7314663 0.7499538 0.7539983 #>  [211,] 0.6249076 0.6332236 0.6676450 #>  [212,] 0.5756282 0.5816157 0.5845743 #>  [213,] 0.6981551 0.7120325 0.7469861 #>  [214,] 1.0072372 1.0212773 1.0536122 #>  [215,] 0.7991878 0.8122208 0.8237893 #>  [216,] 0.6849994 0.7159683 0.7194863 #>  [217,] 1.2696400 1.2916374 1.3082172 #>  [218,] 2.0698426 2.1582238 2.1794353 #>  [219,] 1.1419071 1.1546737 1.1598188 #>  [220,] 0.8556043 0.8941501 0.9187972 #>  [221,] 0.7721601 0.8007450 0.8686663 #>  [222,] 0.7122104 0.7290208 0.7442019 #>  [223,] 0.6581113 0.7061281 0.7091478 #>  [224,] 0.6706789 0.7019068 0.7084813 #>  [225,] 0.9539369 0.9703744 0.9789638 #>  [226,] 0.9094927 0.9236007 0.9750757 #>  [227,] 1.1224575 1.1232171 1.1765301 #>  [228,] 0.6150072 0.6474037 0.6677783 #>  [229,] 1.6275471 1.6327672 1.6377161 #>  [230,] 0.8077191 0.8152458 0.8237942 #>  [231,] 0.6061478 0.6354643 0.6611211 #>  [232,] 2.5109801 2.5521409 2.5985639 #>  [233,] 0.7175774 0.7678040 0.7743942 #>  [234,] 1.0046430 1.0306832 1.0660506 #>  [235,] 1.2443641 1.2751824 1.3898696 #>  [236,] 0.7741966 0.8158339 0.8812321 #>  [237,] 0.4798433 0.4923068 0.5269125 #>  [238,] 0.7268137 0.7362066 0.7439783 #>  [239,] 1.3420318 1.3461106 1.3925125 #>  [240,] 0.6392163 0.6794999 0.6891888 #>  [241,] 0.9631116 1.0607898 1.0995410 #>  [242,] 0.6409554 0.6536717 0.6567187 #>  [243,] 0.6636873 0.6981406 0.7487717 #>  [244,] 1.1795216 1.1835511 1.2023588 #>  [245,] 0.6409228 0.6717199 0.6862668 #>  [246,] 0.7182696 0.7302294 0.7866523 #>  [247,] 0.8792776 0.8901784 0.8985113 #>  [248,] 0.7265339 0.7429213 0.7543047 #>  [249,] 0.7195130 0.7278343 0.7378124 #>  [250,] 0.8389501 0.8786767 0.8809935 #>  [251,] 1.0144141 1.0382249 1.0519416 #>  [252,] 0.8086032 0.8127639 0.8214226 #>  [253,] 0.7844042 0.8391906 0.8453518 #>  [254,] 0.8679448 0.8761603 0.8805015 #>  [255,] 1.3010298 1.3048961 1.3112365 #>  [256,] 0.7922734 0.8143724 0.8202792 #>  [257,] 1.2287814 1.2623435 1.2870063 #>  [258,] 0.7144336 0.7829594 0.7830391 #>  [259,] 0.8765900 0.9020937 0.9040555 #>  [260,] 0.6849916 0.6921431 0.7397833 #>  [261,] 1.0013334 1.0781746 1.0852962 #>  [262,] 0.9014253 0.9110248 0.9412066 #>  [263,] 0.6228589 0.6389085 0.6425539 #>  [264,] 0.7445039 0.7763800 0.7785089 #>  [265,] 0.6159509 0.6539432 0.6557787 #>  [266,] 0.6444124 0.6584608 0.6913247 #>  [267,] 0.7996771 0.8171527 0.8851820 #>  [268,] 0.7809131 0.7822894 0.7825739 #>  [269,] 1.6365479 1.6475172 1.7284962 #>  [270,] 0.8636030 0.8717666 0.8950887 #>  [271,] 0.6974129 0.7075137 0.7145244 #>  [272,] 0.7311275 0.7609912 0.7926049 #>  [273,] 0.9838981 1.0051945 1.0410010 #>  [274,] 0.6787095 0.6803064 0.6830693 #>  [275,] 0.6500544 0.6549891 0.6588562 #>  [276,] 0.4893941 0.5331338 0.5386035 #>  [277,] 0.5434089 0.5458555 0.6090289 #>  [278,] 0.4982746 0.5226729 0.5500617 #>  [279,] 0.8594428 0.8667141 0.8695986 #>  [280,] 0.6573314 0.7566781 0.7585960 #>  [281,] 0.6316205 0.6375098 0.6457517 #>  [282,] 0.7522842 0.7639512 0.7841182 #>  [283,] 0.7401994 0.7502762 0.7786913 #>  [284,] 0.9013925 0.9812345 0.9900795 #>  [285,] 1.1643255 1.2149226 1.2155786 #>  [286,] 0.7428386 0.7489267 0.8012210 #>  [287,] 0.9020457 0.9084734 0.9200732 #>  [288,] 0.5668288 0.5949505 0.6092248 #>  [289,] 0.5958005 0.6219387 0.7153576 #>  [290,] 1.2523793 1.2653686 1.2905328 #>  [291,] 0.7942700 0.8133962 0.8328333 #>  [292,] 1.3996536 1.4130507 1.4186033 #>  [293,] 0.7833270 0.7869504 0.8095809 #>  [294,] 0.6537989 0.6588367 0.6644364 #>  [295,] 0.5586331 0.5642181 0.5735294 #>  [296,] 0.5695717 0.6383931 0.6532692 #>  [297,] 0.7025963 0.7458543 0.7585614 #>  [298,] 0.6803541 0.6937865 0.7114762 #>  [299,] 0.5049826 0.5137532 0.5199955 #>  [300,] 1.3724249 1.3869509 1.4068344 #>  [301,] 0.6156628 0.6385884 0.6404770 #>  [302,] 0.6671247 0.6916319 0.7075452 #>  [303,] 1.2933348 1.3959017 1.4386183 #>  [304,] 0.8356685 0.8368322 0.8536506 #>  [305,] 1.0186679 1.0296932 1.0449361 #>  [306,] 0.6705916 0.7073255 0.7513879 #>  [307,] 0.6129937 0.6495329 0.6614861 #>  [308,] 0.8176102 0.8604471 0.9227313 #>  [309,] 1.1703522 1.1721204 1.1854323 #>  [310,] 0.7743942 0.7779701 0.7981450 #>  [311,] 1.6539523 1.6623235 1.6925317 #>  [312,] 0.6117288 0.6169518 0.6375098 #>  [313,] 0.5062901 0.5080604 0.5294623 #>  [314,] 0.8462269 0.8477914 0.8526363 #>  [315,] 0.5513729 0.5537038 0.5592805 #>  [316,] 0.5458555 0.5584390 0.5632178 #>  [317,] 0.5769644 0.6051857 0.6067774 #>  [318,] 0.8061743 0.8209140 0.8345657 #>  [319,] 1.3354092 1.3365825 1.3488996 #>  [320,] 0.6824687 0.7114892 0.7214868 #>  [321,] 1.4479581 1.5128853 1.5481566 #>  [322,] 0.5508949 0.5632178 0.5838274 #>  [323,] 0.7480233 0.7502714 0.7673180 #>  [324,] 1.2341771 1.2757960 1.2877485 #>  [325,] 0.5970965 0.6038599 0.6042112 #>  [326,] 0.8619213 0.8786057 0.8812521 #>  [327,] 0.9866782 1.0754805 1.1712215 #>  [328,] 0.7785164 0.8128774 0.8305991 #>  [329,] 0.4645881 0.4717604 0.5135400 #>  [330,] 0.5835320 0.5890395 0.6131027 #>  [331,] 0.7147657 0.7901977 0.7947003 #>  [332,] 0.6856374 0.7578333 0.7974487 #>  [333,] 0.6548458 0.6602301 0.6671295 #>  [334,] 0.5717691 0.5752625 0.6181361 #>  [335,] 1.2042133 1.2134679 1.3412938 #>  [336,] 0.7319844 0.7386098 0.8385740 #>  [337,] 1.0518620 1.0617918 1.0657467 #>  [338,] 0.8208513 0.8279909 0.8388513 #>  [339,] 0.6393077 0.6531840 0.7287865 #>  [340,] 0.6015151 0.6330748 0.6375456 #>  [341,] 1.0724299 1.1310382 1.1483285 #>  [342,] 0.6164347 0.6307811 0.6310927 #>  [343,] 0.7174661 0.7746747 0.7969912 #>  [344,] 0.8437119 0.8510503 0.8514226 #>  [345,] 0.8235481 0.8335774 0.8580646 #>  [346,] 0.5172332 0.5320239 0.5734494 #>  [347,] 0.7065477 0.7100107 0.7208898 #>  [348,] 0.7462613 0.7739295 0.8016673 #>  [349,] 0.6105559 0.6151651 0.6420404 #>  [350,] 0.7025963 0.7166782 0.7210750 #>  [351,] 0.8746027 0.9049518 0.9153289 #>  [352,] 0.8103934 0.8254375 0.8686898 #>  [353,] 2.0167321 2.0286254 2.0691611 #>  [354,] 1.6330232 1.6390761 1.6447128 #>  [355,] 0.7217922 0.8324984 0.8380220 #>  [356,] 0.8095559 0.8230604 0.8501802 #>  [357,] 0.6378174 0.6381177 0.6492462 #>  [358,] 0.8602180 0.8665321 0.8693902 #>  [359,] 0.6949469 0.7134583 0.7524988 #>  [360,] 0.9095401 0.9252545 0.9367258 #>  [361,] 0.9317325 1.0072367 1.0222754 #>  [362,] 0.6022443 0.6212637 0.6693269 #>  [363,] 0.8496144 0.8856256 0.8950534 #>  [364,] 0.6136030 0.6342172 0.6519975 #>  [365,] 0.6219415 0.6927117 0.7302568 #>  [366,] 0.6685565 0.6858544 0.7003966 #>  [367,] 0.4909832 0.5022323 0.5963819 #>  [368,] 0.8731229 0.8966660 0.8971719 #>  [369,] 0.7103432 0.7741179 0.8086224 #>  [370,] 0.7922734 0.7923318 0.7940315 #>  [371,] 0.6696448 0.7114247 0.7152385 #>  [372,] 0.6719416 0.7500159 0.7626128 #>  [373,] 0.8341268 0.8738730 0.9025993 #>  [374,] 0.7277010 0.7302294 0.7500844 #>  [375,] 1.2050617 1.2074827 1.2380256 #>  [376,] 0.6986100 0.7003597 0.7122543 #>  [377,] 0.6501754 0.6581722 0.6588367 #>  [378,] 0.7208020 0.7305842 0.7399707 #>  [379,] 0.7644150 0.8007332 0.8305770 #>  [380,] 1.3500396 1.3625648 1.3860677 #>  [381,] 0.7473692 0.7477058 0.7480482 #>  [382,] 0.9457086 0.9720530 1.0136148 #>  [383,] 0.7811700 0.8099795 0.8512497 #>  [384,] 0.8837170 0.9349890 0.9450218 #>  [385,] 0.5838668 0.5976619 0.5980054 #>  [386,] 0.7830130 0.7959280 0.8127239 #>  [387,] 0.5702563 0.5790031 0.5920945 #>  [388,] 0.8106370 0.8176653 0.8301476 #>  [389,] 0.6781141 0.7003217 0.8224502 #>  [390,] 1.1633693 1.1669286 1.3131325 #>  [391,] 0.5189829 0.5291188 0.5385167 #>  [392,] 0.9568264 0.9861877 0.9959013 #>  [393,] 0.6733320 0.6784882 0.6818566 #>  [394,] 0.5536029 0.5744257 0.6573546 #>  [395,] 0.9296943 0.9426066 0.9544303 #>  [396,] 1.0445433 1.0789088 1.1316774 #>  [397,] 0.5644892 0.5723457 0.5956783 #>  [398,] 0.7620429 0.7785356 0.7846093 #>  [399,] 0.9816345 1.1000157 1.1107653 #>  [400,] 0.5722813 0.5907793 0.5967695 #>  [401,] 0.6813625 0.6917427 0.6933175 #>  [402,] 0.9182642 0.9309083 0.9444465 #>  [403,] 0.9985768 1.0008163 1.0191095 #>  [404,] 0.5718620 0.6567649 0.6664548 #>  [405,] 0.6857037 0.7060853 0.7314663 #>  [406,] 0.5327009 0.5684654 0.5933668 #>  [407,] 0.9732934 0.9775150 1.0272720 #>  [408,] 1.5876943 1.6034167 1.6145924 #>  [409,] 0.5974189 0.6094863 0.6198485 #>  [410,] 0.7234368 0.7915333 0.7969912 #>  [411,] 0.7914721 0.8129489 0.8202792 #>  [412,] 1.6167518 1.6239020 1.6775332 #>  [413,] 0.9968483 1.0065313 1.0921560 #>  [414,] 1.3415786 1.3853162 1.4243021 #>  [415,] 0.7343265 0.7514262 0.7633467 #>  [416,] 0.6213979 0.6609363 0.6763387 #>  [417,] 1.8943495 1.9141267 1.9462915 #>  [418,] 0.6571506 0.7450771 0.8377452 #>  [419,] 0.7903463 0.8082432 0.8165162 #>  [420,] 0.7811041 0.7839922 0.8052543 #>  [421,] 1.0003095 1.0434638 1.0600398 #>  [422,] 0.8920522 0.9044110 0.9454081 #>  [423,] 0.8040626 0.8445202 0.8790501 #>  [424,] 0.6094863 0.6164347 0.6399011 #>  [425,] 1.6243607 1.6874065 1.7143479 #>  [426,] 0.7395132 0.7634533 0.7666581 #>  [427,] 0.6630070 0.6859505 0.6962091 #>  [428,] 0.4902824 0.4985974 0.5183945 #>  [429,] 1.1739641 1.1775336 1.2007635 #>  [430,] 0.7670322 0.7966691 0.8127060 #>  [431,] 0.5423080 0.5513729 0.5758746 #>  [432,] 0.9802489 0.9823655 0.9864820 #>  [433,] 0.9475986 0.9512392 0.9822962 #>  [434,] 0.9063302 0.9114476 0.9167121 #>  [435,] 0.7110778 0.7171957 0.7310777 #>  [436,] 0.6064729 0.6111120 0.6181761 #>  [437,] 0.7626128 0.7749700 0.7954447 #>  [438,] 0.7547039 0.7578333 0.7971909 #>  [439,] 0.7715046 0.7785164 0.7862067 #>  [440,] 0.7142830 0.7165912 0.7218735 #>  [441,] 0.7566781 0.7860355 0.8320034 #>  [442,] 0.6297898 0.6358279 0.6603506 #>  [443,] 0.5554542 0.5767713 0.5850547 #>  [444,] 0.6915789 0.6949101 0.7160864 #>  [445,] 1.5062340 1.5208683 1.5516022 #>  [446,] 0.6626993 0.6986152 0.7470214 #>  [447,] 0.7183083 0.7690655 0.7755768 #>  [448,] 0.8156255 0.8183636 0.8451966 #>  [449,] 0.6194249 0.6583501 0.6633423 #>  [450,] 1.2753671 1.3169349 1.3230990 #>  [451,] 0.5618374 0.5895047 0.6083064 #>  [452,] 0.6677918 0.6792799 0.6884021 #>  [453,] 0.7575106 0.7837587 0.7973231 #>  [454,] 1.1530353 1.1556672 1.1561189 #>  [455,] 0.6489934 0.6528778 0.6729880 #>  [456,] 0.8698976 0.8973483 0.9070275 #>  [457,] 1.3529710 1.3570303 1.3737992 #>  [458,] 0.5199955 0.5500617 0.5515600 #>  [459,] 0.8242323 0.8264014 0.8631782 #>  [460,] 0.8091644 0.8657761 0.8928314 #>  [461,] 1.1258383 1.1454967 1.1824279 #>  [462,] 0.8183636 0.8263333 0.8985064 #>  [463,] 1.0288141 1.1032875 1.1090171 #>  [464,] 0.6965341 0.6993846 0.7572463 #>  [465,] 0.7687175 0.8069866 0.8598314 #>  [466,] 0.5910454 0.5917274 0.6671248 #>  [467,] 0.7367199 0.7455282 0.7519728 #>  [468,] 0.6543615 0.6768069 0.6974393 #>  [469,] 0.7008546 0.7182980 0.7247013 #>  [470,] 0.7449098 0.8007186 0.8163883 #>  [471,] 0.8857549 0.9110057 0.9175911 #>  [472,] 1.7204493 1.8038602 1.8635996 #>  [473,] 0.7059202 0.7441028 0.7893769 #>  [474,] 0.7050901 0.7184377 0.7215033 #>  [475,] 0.9472826 0.9583544 1.0694827 #>  [476,] 0.5501299 0.5572274 0.6276968 #>  [477,] 0.6449089 0.7597176 0.7598705 #>  [478,] 0.9671221 0.9852444 1.0054114 #>  [479,] 0.6311903 0.6689832 0.6704014 #>  [480,] 1.0549035 1.0963085 1.0974636 #>  [481,] 0.6491082 0.6810202 0.6817808 #>  [482,] 1.0587874 1.0731319 1.1164209 #>  [483,] 0.5570175 0.6340799 0.6454253 #>  [484,] 1.4080206 1.4106781 1.4897374 #>  [485,] 1.6443927 1.6476220 1.6590689 #>  [486,] 0.6310901 0.6484830 0.6663874 #>  [487,] 0.6707398 0.6804660 0.7002185 #>  [488,] 0.6586827 0.6598273 0.6860202 #>  [489,] 1.0137184 1.0223485 1.0359519 #>  [490,] 1.2765385 1.2871052 1.3103110 #>  [491,] 0.7294588 0.7342951 0.7350170 #>  [492,] 1.0682338 1.0959056 1.1032875 #>  [493,] 0.6247836 0.6534062 0.6584608 #>  [494,] 1.3485800 1.3863366 1.4253673 #>  [495,] 0.5920945 0.6206338 0.6349646 #>  [496,] 0.6189276 0.6646857 0.6804660 #>  [497,] 0.6560847 0.6652995 0.6692078 #>  [498,] 0.6174631 0.6523981 0.6818602 #>  [499,] 0.8037808 0.8251382 0.8273954 #>  [500,] 0.6225054 0.6379928 0.6419024 #>  [501,] 0.9041861 0.9108673 0.9536522 #>  [502,] 1.0451752 1.1233662 1.1410337 #>  [503,] 0.8045743 0.8632384 0.8977629 #>  [504,] 0.5883900 0.6038700 0.6299073 #>  [505,] 1.0246017 1.0500895 1.0659577 #>  [506,] 0.7942630 0.8726921 0.8742910 #>  [507,] 0.6070150 0.6227161 0.6341595 #>  [508,] 0.9719121 0.9893956 1.0202348 #>  [509,] 1.2434793 1.2883453 1.3179004 #>  [510,] 1.0340991 1.0500298 1.0553234 #>  [511,] 0.8059377 0.8131911 0.8283584 #>  [512,] 1.3604020 1.3954282 1.4587660 #>  [513,] 0.7263146 0.7346178 0.7354406 #>  [514,] 1.6427872 1.6627145 1.7614805 #>  [515,] 0.6236966 0.6283320 0.6375456 #>  [516,] 0.6516324 0.6923390 0.7573395 #>  [517,] 0.8856657 0.9508753 0.9620808 #>  [518,] 0.4856564 0.5248498 0.5811740 #>  [519,] 0.9263995 0.9403652 0.9531959 #>  [520,] 1.4557363 1.4582128 1.4813327 #>  [521,] 0.7127812 0.7937798 0.8452370 #>  [522,] 0.8970534 0.9016104 0.9093391 #>  [523,] 0.5044149 0.5313294 0.5525168 #>  [524,] 0.6928583 0.6932255 0.7297808 #>  [525,] 0.7068696 0.7123649 0.7237886 #>  [526,] 0.6119431 0.6586594 0.6636789 #>  [527,] 0.5996942 0.6094028 0.6236966 #>  [528,] 0.9259418 0.9468159 0.9687502 #>  [529,] 1.1429299 1.1658581 1.1730945 #>  [530,] 0.8836145 0.8959381 0.9137332 #>  [531,] 0.9233938 0.9326849 0.9911759 #>  [532,] 0.9253237 0.9708175 0.9828974 #>  [533,] 1.0435859 1.0593112 1.0674910 #>  [534,] 1.6248351 1.6540836 1.6796835 #>  [535,] 0.5572274 0.5653512 0.5831282 #>  [536,] 0.8986705 1.0450038 1.0979317 #>  [537,] 0.6092044 0.6394361 0.6449089 #>  [538,] 0.7262996 0.7456151 0.7550090 #>  [539,] 0.8463530 0.8794355 0.8912687 #>  [540,] 0.7995219 0.8057323 0.8093113 #>  [541,] 0.7351274 0.8124116 0.8288994 #>  [542,] 0.5294623 0.5586331 0.5981417 #>  [543,] 0.8977448 0.9512174 0.9587687 #>  [544,] 0.7633571 0.7706150 0.7707799 #>  [545,] 0.5083228 0.5137532 0.5499048 #>  [546,] 0.8740153 0.9015642 0.9037305 #>  [547,] 0.6843834 0.7125864 0.7258577 #>  [548,] 0.5846346 0.5879263 0.5973134 #>  [549,] 0.7461102 0.7492527 0.7623006 #>  [550,] 0.7819474 0.7954819 0.7996258 #>  [551,] 0.5789390 0.6293182 0.6345781 #>  [552,] 0.6595050 0.6634656 0.6636873 #>  [553,] 1.1911953 1.2515513 1.3183106 #>  [554,] 0.6290513 0.6651110 0.6741588 #>  [555,] 0.6704014 0.7140559 0.7600063 #>  [556,] 0.5989875 0.6015554 0.6224250 #>  [557,] 1.0004798 1.0116948 1.0369797 #>  [558,] 0.8315565 0.8422581 0.8468856 #>  [559,] 0.9446972 0.9507086 0.9641585 #>  [560,] 0.6033876 0.6114760 0.6546484 #>  [561,] 0.7401994 0.8032891 0.9048996 #>  [562,] 0.7592156 0.7597176 0.8003616 #>  [563,] 0.5732596 0.5769644 0.6335544 #>  [564,] 1.0454805 1.0579380 1.0585192 #>  [565,] 1.3160668 1.4293761 1.4326140 #>  [566,] 0.8789596 0.8935268 0.9383729 #>  [567,] 0.8882477 0.9155510 0.9170444 #>  [568,] 0.6896777 0.6987649 0.7162925 #>  [569,] 0.7954080 0.8086531 0.8330594 #>  [570,] 1.2009158 1.2113169 1.2739542 #>  [571,] 0.5241234 0.5281186 0.5673793 #>  [572,] 1.7697005 1.7879840 1.8370200 #>  [573,] 0.6032286 0.6092720 0.6301072 #>  [574,] 0.7633571 0.7877057 0.8039785 #>  [575,] 0.6378240 0.6399757 0.6790726 #>  [576,] 0.7485139 0.7568745 0.7603397 #>  [577,] 0.9169413 0.9606626 0.9845915 #>  [578,] 0.5350748 0.5442931 0.5456720 #>  [579,] 0.6445134 0.6447704 0.6511486 #>  [580,] 0.8103934 0.8279909 0.8661487 #>  [581,] 0.6704421 0.7021568 0.8761442 #>  [582,] 0.9707932 0.9819765 0.9932619 #>  [583,] 1.9599494 1.9807373 1.9834044 #>  [584,] 0.6080317 0.6381177 0.6399757 #>  [585,] 0.7704517 0.8044669 0.8197524 #>  [586,] 0.6057908 0.6110892 0.6241790 #>  [587,] 0.6478070 0.6598338 0.6761760 #>  [588,] 0.8493232 0.8830603 0.8869611 #>  [589,] 0.6495610 0.6737052 0.6785844 #>  [590,] 0.7955162 0.8007577 0.8135569 #>  [591,] 1.7876513 1.8019212 1.8759712 #>  [592,] 0.8263415 0.8340617 0.8354803 #>  [593,] 0.7426291 0.7453749 0.7575019 #>  [594,] 0.7524039 0.7765947 0.8027852 #>  [595,] 0.7172240 0.7576873 0.7791004 #>  [596,] 0.9078917 0.9373748 0.9441205 #>  [597,] 0.7134577 0.7158147 0.7237615 #>  [598,] 1.0223730 1.0287783 1.0385359 #>  [599,] 0.7373926 0.7660572 0.7719974 #>  [600,] 0.7922262 0.8322898 0.8533253 #>  [601,] 0.8648251 0.8998007 0.9320431 #>  [602,] 0.5220067 0.5414899 0.5703735 #>  [603,] 1.1199832 1.1358035 1.1569509 #>  [604,] 0.8519114 0.8540943 0.8596152 #>  [605,] 0.8468557 0.8585254 0.8800517 #>  [606,] 0.6277412 0.6615131 0.6732272 #>  [607,] 0.6474351 0.6603445 0.6674062 #>  [608,] 0.7937001 0.7989539 0.8156598 #>  [609,] 0.6981551 0.7229179 0.7308326 #>  [610,] 0.7036754 0.7059906 0.7172212 #>  [611,] 0.6270420 0.6537804 0.6880144 #>  [612,] 1.0490863 1.0685406 1.0739177 #>  [613,] 0.6842243 0.6897781 0.6969684 #>  [614,] 0.8621788 0.8742130 0.9017313 #>  [615,] 0.6413716 0.6457934 0.6495329 #>  [616,] 0.8772436 0.8882153 0.9130064 #>  [617,] 0.5157022 0.5636490 0.6129937 #>  [618,] 0.6851107 0.7344227 0.7458543 #>  [619,] 0.8024838 0.8260295 0.8519950 #>  [620,] 2.2961248 2.3132311 2.3449960 #>  [621,] 0.6468197 0.6776989 0.6909965 #>  [622,] 0.7079979 0.7097671 0.7124773 #>  [623,] 1.0467088 1.0480537 1.0539897 #>  [624,] 0.7620441 0.7992087 0.8310814 #>  [625,] 0.6372420 0.6583501 0.6708964 #>  [626,] 0.9454891 0.9686526 0.9859649 #>  [627,] 0.6127169 0.6206696 0.6598338 #>  [628,] 1.1899259 1.2161742 1.2172823 #>  [629,] 0.8277418 0.8462246 0.8532825 #>  [630,] 0.9157939 0.9441916 0.9576569 #>  [631,] 0.6097190 0.6271484 0.6299073 #>  [632,] 0.6995110 0.7183800 0.7286771 #>  [633,] 0.7217922 0.7392990 0.7539983 #>  [634,] 0.7100107 0.7346602 0.7911679 #>  [635,] 1.2420313 1.2826174 1.3303886 #>  [636,] 0.6546463 0.6645386 0.6748694 #>  [637,] 0.6423745 0.6547075 0.6801249 #>  [638,] 0.9682796 0.9732266 0.9740008 #>  [639,] 0.8154821 0.8455293 0.8500145 #>  [640,] 1.3562530 1.4058717 1.4083193 #>  [641,] 0.8767817 0.9695944 1.0017373 #>  [642,] 0.4902824 0.4909832 0.5064272 #>  [643,] 0.8332468 0.8340617 0.8439994 #>  [644,] 1.1365399 1.1811105 1.1968756 #>  [645,] 1.1647751 1.1730136 1.1791045 #>  [646,] 1.1290562 1.1371371 1.1400570 #>  [647,] 1.4574226 1.5827902 1.6082951 #>  [648,] 0.6152080 0.6558549 0.6895957 #>  [649,] 0.8855299 0.8870923 0.8956957 #>  [650,] 0.7059806 0.7234556 0.7255668 #>  [651,] 0.7438681 0.7493113 0.7539751 #>  [652,] 0.8002347 0.8036169 0.8147069 #>  [653,] 0.8629494 0.8691633 0.8703753 #>  [654,] 2.0376554 2.0642837 2.0719869 #>  [655,] 0.5693556 0.5708502 0.5845486 #>  [656,] 1.0360280 1.0426354 1.1332573 #>  [657,] 0.5828988 0.6189276 0.7430488 #>  [658,] 0.8772445 0.8782531 0.9079089 #>  [659,] 1.0677338 1.1084733 1.1227503 #>  [660,] 1.1643193 1.1782870 1.1791045 #>  [661,] 1.2723795 1.2918136 1.3293842 #>  [662,] 0.7276526 0.7585383 0.7871510 #>  [663,] 1.4965123 1.5009803 1.5481810 #>  [664,] 0.6017170 0.6440993 0.7183800 #>  [665,] 0.8105248 0.8133392 0.8334661 #>  [666,] 1.0244754 1.0266089 1.0390668 #>  [667,] 0.8107471 0.8437119 0.8629082 #>  [668,] 0.5648604 0.5661889 0.6081811 #>  [669,] 0.8865581 0.8907420 0.9043392 #>  [670,] 0.8541567 0.9027862 0.9320445 #>  [671,] 1.3119824 1.3271533 1.3456148 #>  [672,] 1.2586549 1.2598457 1.2660795 #>  [673,] 0.7223247 0.7223451 0.8106374 #>  [674,] 0.7158147 0.7520342 0.7538990 #>  [675,] 0.8045743 0.8150292 0.8290862 #>  [676,] 0.7566082 0.7690173 0.8565467 #>  [677,] 0.5840738 0.6070381 0.6285195 #>  [678,] 0.8454495 0.8993138 0.9644378 #>  [679,] 0.5017379 0.5135400 0.5845743 #>  [680,] 0.7252000 0.7271524 0.7305842 #>  [681,] 0.8302023 0.8397697 0.8438707 #>  [682,] 0.6523981 0.7023389 0.7442802 #>  [683,] 0.7095037 0.7182400 0.7216561 #>  [684,] 0.8084518 0.9331939 0.9349890 #>  [685,] 1.0395007 1.0396917 1.0670484 #>  [686,] 0.9257875 0.9263184 0.9510949 #>  [687,] 0.6291341 0.6850668 0.6967763 #>  [688,] 0.8156303 0.8169834 0.8242243 #>  [689,] 0.5988715 0.6256857 0.6389247 #>  [690,] 0.8318655 0.8326376 0.8407768 #>  [691,] 0.8467602 0.8494933 0.8620052 #>  [692,] 0.9989074 1.0310535 1.0460484 #>  [693,] 1.1564200 1.1800142 1.1821247 #>  [694,] 0.6117288 0.6271484 0.6422065 #>  [695,] 0.7223247 0.7232071 0.7263862 #>  [696,] 0.7668074 0.7840744 0.8504414 #>  [697,] 0.6079431 0.6354577 0.6401194 #>  [698,] 0.5732596 0.5979797 0.6097413 #>  [699,] 1.1863076 1.1918823 1.1932994 #>  [700,] 0.8461272 0.8593058 0.8668686 #>  [701,] 1.0239708 1.0281339 1.0485980 #>  [702,] 1.2743571 1.2779067 1.3418867 #>  [703,] 0.6631229 0.6702237 0.6721971 #>  [704,] 0.7573626 0.7687190 0.7989583 #>  [705,] 0.4518522 0.4601853 0.5183945 #>  [706,] 0.8422844 0.8624032 0.9040107 #>  [707,] 0.6144810 0.6512204 0.7002035 #>  [708,] 0.8057577 0.8129374 0.8225023 #>  [709,] 0.9838981 0.9982790 1.0735899 #>  [710,] 0.9112702 0.9326027 0.9532120 #>  [711,] 1.0500298 1.1167297 1.1170377 #>  [712,] 0.6041471 0.6176878 0.6293271 #>  [713,] 0.6399898 0.6518384 0.6662929 #>  [714,] 0.5976619 0.6677237 0.6825468 #>  [715,] 1.0970919 1.1009412 1.1145051 #>  [716,] 1.2861680 1.2894634 1.3085650 #>  [717,] 0.8662543 0.8718986 0.8912687 #>  [718,] 0.6812211 0.6830709 0.7306408 #>  [719,] 0.6637689 0.6747428 0.6766340 #>  [720,] 0.6786555 0.6828350 0.6869204 #>  [721,] 0.7179782 0.7327252 0.7344816 #>  [722,] 0.9173040 0.9284520 0.9568930 #>  [723,] 0.5326509 0.5369410 0.5572162 #>  [724,] 0.8890232 0.9594261 0.9637553 #>  [725,] 0.6316524 0.6601040 0.6631408 #>  [726,] 0.9567075 0.9855439 0.9884453 #>  [727,] 0.6259202 0.7514262 0.7544139 #>  [728,] 0.4345793 0.4970024 0.5851389 #>  [729,] 0.8352061 0.8391906 0.8728494 #>  [730,] 1.3907144 1.4185249 1.4317311 #>  [731,] 0.7380062 0.7493803 0.7681148 #>  [732,] 0.7904515 0.8124116 0.8238111 #>  [733,] 1.0015857 1.0583630 1.0823613 #>  [734,] 0.7223451 0.7470871 0.8135534 #>  [735,] 0.5445766 0.5584276 0.5696619 #>  [736,] 0.8882707 0.8905793 0.9162440 #>  [737,] 0.7928437 0.8554760 0.8655583 #>  [738,] 0.6911847 0.7087310 0.7239903 #>  [739,] 0.5567308 0.5791274 0.5866861 #>  [740,] 1.4276587 1.4570525 1.5025867 #>  [741,] 0.6223371 0.6484433 0.6706789 #>  [742,] 0.8680714 0.8682285 0.9444659 #>  [743,] 0.9720790 0.9802234 1.0351053 #>  [744,] 0.6785831 0.6801847 0.6847449 #>  [745,] 0.5316027 0.5478367 0.5804936 #>  [746,] 0.6204053 0.6241790 0.6492462 #>  [747,] 0.6848696 0.7517100 0.8058849 #>  [748,] 1.2320917 1.2766666 1.3110623 #>  [749,] 0.7373926 0.7900349 0.8140502 #>  [750,] 0.5326509 0.5835320 0.6226629 #>  [751,] 0.5708257 0.5761536 0.6144043 #>  [752,] 1.2857177 1.3108842 1.3548015 #>  [753,] 0.6661465 0.6961591 0.6963417 #>  [754,] 0.6632656 0.6740417 0.7351465 #>  [755,] 0.5695753 0.5770645 0.6094087 #>  [756,] 0.9722501 0.9741574 1.0068078 #>  [757,] 0.6094028 0.6194857 0.6837815 #>  [758,] 0.7743959 0.7914721 0.8066962 #>  [759,] 0.6491082 0.6543452 0.6689832 #>  [760,] 1.1980557 1.2432542 1.2690216 #>  [761,] 0.5078948 0.5212561 0.5371735 #>  [762,] 0.5313294 0.5900208 0.5989966 #>  [763,] 1.1745660 1.1813854 1.1828819 #>  [764,] 0.6373526 0.6488148 0.6943219 #>  [765,] 0.6211520 0.6658511 0.7081679 #>  [766,] 0.6755741 0.7043938 0.7069911 #>  [767,] 0.9053899 0.9281812 0.9317325 #>  [768,] 1.0233773 1.0480409 1.0544455 #>  [769,] 0.8146714 0.8440645 0.8868007 #>  [770,] 1.2477533 1.2495879 1.2582870 #>  [771,] 0.7398473 0.7403501 0.7941967 #>  [772,] 0.9873916 1.0564114 1.0609525 #>  [773,] 1.0322557 1.0355912 1.1432948 #>  [774,] 0.6404770 0.6996764 0.7295960 #>  [775,] 1.3903208 1.4042970 1.4372339 #>  [776,] 0.6042039 0.6139821 0.6147472 #>  [777,] 0.7035001 0.7266560 0.7423742 #>  [778,] 0.7887387 0.7932536 0.8033971 #>  [779,] 0.5625936 0.5964174 0.6103168 #>  [780,] 0.8912070 1.0079796 1.0097415 #>  [781,] 0.5972749 0.6172824 0.6419909 #>  [782,] 0.4940311 0.5055477 0.5389774 #>  [783,] 1.5524494 1.6272053 1.6553421 #>  [784,] 0.9546577 0.9722178 0.9753684 #>  [785,] 0.6595222 0.7265339 0.8022471 #>  [786,] 0.6990584 0.7155144 0.7346178 #>  [787,] 0.6019287 0.6026190 0.6076833 #>  [788,] 0.6656870 0.6662929 0.6775609 #>  [789,] 0.7772403 0.7800166 0.8320034 #>  [790,] 1.0639548 1.0997050 1.1123630 #>  [791,] 1.2633146 1.2862601 1.2992365 #>  [792,] 0.8977629 0.9705995 0.9900659 #>  [793,] 1.1972276 1.2374316 1.2482377 #>  [794,] 0.9698194 0.9967526 1.0112740 #>  [795,] 1.1391775 1.1870900 1.2008868 #>  [796,] 0.8988347 0.9015799 0.9301511 #>  [797,] 0.6555066 0.7136717 0.7245249 #>  [798,] 1.0968115 1.1206349 1.2129535 #>  [799,] 0.7038824 0.7114443 0.7386098 #>  [800,] 0.6896481 0.7869426 0.7923318 #>  [801,] 0.5091996 0.5507662 0.5783331 #>  [802,] 1.0222069 1.1159579 1.1401848 #>  [803,] 0.6457517 0.6540291 0.6656870 #>  [804,] 0.8260295 0.8372186 0.8478090 #>  [805,] 0.6000946 0.6052895 0.6139821 #>  [806,] 0.7801390 0.8297356 0.8351518 #>  [807,] 0.6440921 0.6575003 0.6981406 #>  [808,] 0.9876611 1.0402634 1.0658225 #>  [809,] 1.1421997 1.1435006 1.1684521 #>  [810,] 0.5478367 0.6238652 0.6307500 #>  [811,] 0.6963094 0.7182638 0.7312479 #>  [812,] 0.6092248 0.6398361 0.6461307 #>  [813,] 0.7075137 0.7159082 0.7247013 #>  [814,] 0.6416663 0.8273892 0.8315936 #>  [815,] 0.8234780 0.8332468 0.8752031 #>  [816,] 1.1325347 1.1733310 1.1767373 #>  [817,] 2.1915670 2.2040591 2.2207666 #>  [818,] 1.5933795 1.6131587 1.6199797 #>  [819,] 1.6354192 1.6381872 1.6813319 #>  [820,] 0.6473999 0.6570163 0.6633761 #>  [821,] 0.5980485 0.6196495 0.6227187 #>  [822,] 0.5812524 0.5871626 0.5921766 #>  [823,] 1.1831221 1.2205928 1.2543520 #>  [824,] 0.6946511 0.6966756 0.7081679 #>  [825,] 0.8110745 0.8193651 0.8326224 #>  [826,] 0.6046628 0.6230679 0.7186115 #>  [827,] 0.6887515 0.7154259 0.7387135 #>  [828,] 0.8687353 0.8798742 0.9236158 #>  [829,] 0.6152080 0.6285195 0.6377482 #>  [830,] 0.7702678 0.7749149 0.7790638 #>  [831,] 0.5744257 0.6164029 0.6385884 #>  [832,] 0.9178171 1.0196918 1.0828124 #>  [833,] 0.6182341 0.6254161 0.6286165 #>  [834,] 1.2029763 1.2078326 1.2567733 #>  [835,] 0.9456657 0.9655571 0.9692752 #>  [836,] 1.0850821 1.0893464 1.0938974 #>  [837,] 0.8310814 0.8515214 0.8632830 #>  [838,] 1.1370160 1.2311328 1.2396868 #>  [839,] 0.9196434 0.9217415 0.9265829 #>  [840,] 0.7066189 0.7180911 0.7273354 #>  [841,] 0.6949814 0.6950994 0.7407855 #>  [842,] 0.8675501 0.8876097 0.9087117 #>  [843,] 0.7087876 0.7257597 0.7263862 #>  [844,] 1.1999671 1.2130013 1.2268836 #>  [845,] 0.8492745 0.8623988 0.8685883 #>  [846,] 0.9998619 1.0428809 1.1434119 #>  [847,] 1.0498899 1.0688235 1.1129497 #>  [848,] 0.7154259 0.7156104 0.7258548 #>  [849,] 0.7914503 0.7959489 0.7963954 #>  [850,] 1.2547751 1.2624250 1.3036319 #>  [851,] 0.7210846 0.7328494 0.7441028 #>  [852,] 0.6154918 0.6256566 0.6459574 #>  [853,] 0.7436943 0.7528837 0.7636110 #>  [854,] 0.9775381 0.9845109 0.9948472 #>  [855,] 1.0017929 1.0020984 1.1002209 #>  [856,] 1.5090735 1.5210919 1.5218348 #>  [857,] 0.8692952 0.9344489 0.9549328 #>  [858,] 1.1570713 1.1591785 1.1737183 #>  [859,] 1.8328490 1.8540996 1.8749820 #>  [860,] 0.6668563 0.7276814 0.7568745 #>  [861,] 0.9583680 1.0067420 1.0476516 #>  [862,] 0.7992530 0.8476169 0.8835717 #>  [863,] 0.5223439 0.5343414 0.5349812 #>  [864,] 1.3845059 1.3855873 1.4037089 #>  [865,] 0.8346281 0.8390167 0.8546484 #>  [866,] 0.7468761 0.7574340 0.7592156 #>  [867,] 0.7087310 0.7343265 0.7409596 #>  [868,] 0.6888741 0.7280470 0.7622194 #>  [869,] 0.9777851 0.9950244 0.9983809 #>  [870,] 0.9162964 0.9606572 0.9849830 #>  [871,] 0.5238762 0.5651025 0.5651887 #>  [872,] 0.7942700 0.8005718 0.8230922 #>  [873,] 0.7276091 0.7305819 0.8082228 #>  [874,] 1.1316774 1.2608179 1.2728320 #>  [875,] 0.7207671 0.7894280 0.8273294 #>  [876,] 0.6799944 0.6833672 0.6996313 #>  [877,] 0.9278042 0.9458841 0.9635108 #>  [878,] 1.0065313 1.0543014 1.1687755 #>  [879,] 0.8798272 0.8910341 0.9103248 #>  [880,] 0.5366147 0.6084700 0.6144892 #>  [881,] 0.5578168 0.5734494 0.5982934 #>  [882,] 0.8183534 0.8454495 0.8898651 #>  [883,] 0.5605438 0.5732979 0.5839264 #>  [884,] 1.2822641 1.2933348 1.2951740 #>  [885,] 0.7825997 0.7907978 0.8294662 #>  [886,] 0.7903463 0.8093815 0.8173829 #>  [887,] 0.5886946 0.5996942 0.6057916 #>  [888,] 0.7693384 0.8218847 0.8346568 #>  [889,] 1.0108248 1.0315147 1.0575520 #>  [890,] 0.7463897 0.8500145 0.8574642 #>  [891,] 0.5630141 0.6491893 0.6704855 #>  [892,] 0.5462873 0.6210393 0.6817808 #>  [893,] 0.8950661 0.8993505 0.9053183 #>  [894,] 1.1301356 1.1851217 1.2014116 #>  [895,] 0.6344294 0.6449508 0.6624095 #>  [896,] 0.9279544 0.9386714 0.9390660 #>  [897,] 0.7543047 0.7985903 0.8081307 #>  [898,] 0.6456951 0.6866302 0.6999045 #>  [899,] 0.7357026 0.7406000 0.7462737 #>  [900,] 0.7197496 0.7242167 0.7807334 #>  [901,] 0.7262996 0.7319844 0.7506277 #>  [902,] 0.6875841 0.7036754 0.7253391 #>  [903,] 0.6586391 0.7108512 0.7238114 #>  [904,] 0.5715827 0.6136030 0.6182277 #>  [905,] 0.7443659 0.7576073 0.7912814 #>  [906,] 1.3288063 1.4484331 1.4990801 #>  [907,] 0.9739455 0.9914465 1.0135725 #>  [908,] 0.7213290 0.7287521 0.7661511 #>  [909,] 0.4337002 0.4923068 0.6291341 #>  [910,] 0.9071869 0.9173040 0.9181342 #>  [911,] 0.6901950 0.7065477 0.7398473 #>  [912,] 0.6909965 0.7152385 0.7414344 #>  [913,] 0.9262857 0.9315482 0.9976586 #>  [914,] 0.5086455 0.5735294 0.5798755 #>  [915,] 0.6743427 0.6781645 0.6849916 #>  [916,] 0.6569495 0.6722038 0.6880206 #>  [917,] 0.7293243 0.7335103 0.7335881 #>  [918,] 1.2857997 1.2969518 1.3157036 #>  [919,] 1.3148245 1.3365804 1.3941309 #>  [920,] 0.5885898 0.5944964 0.6254900 #>  [921,] 0.5508949 0.5564460 0.5592805 #>  [922,] 0.8575487 0.8765899 0.8776055 #>  [923,] 0.6364352 0.6639802 0.6853873 #>  [924,] 0.9727575 0.9777851 0.9880316 #>  [925,] 0.5575146 0.5682191 0.6377585 #>  [926,] 0.7824549 0.7907978 0.9024944 #>  [927,] 0.8325034 0.8385987 0.8925003 #>  [928,] 0.5721480 0.5727461 0.5732979 #>  [929,] 0.6677785 0.7182696 0.7220205 #>  [930,] 0.9304174 0.9507953 0.9969988 #>  [931,] 0.9767047 0.9909266 1.0003501 #>  [932,] 1.5346919 1.5678316 1.6595036 #>  [933,] 0.5291188 0.5905704 0.6084700 #>  [934,] 0.8265155 0.8291134 0.8322399 #>  [935,] 0.6514621 0.6647614 0.6986152 #>  [936,] 1.0126013 1.0321495 1.0383772 #>  [937,] 0.8508436 0.8515214 0.8524742 #>  [938,] 0.8790375 0.9299144 0.9371910 #>  [939,] 0.8301459 0.8743891 0.9188573 #>  [940,] 1.0579380 1.0803280 1.1177477 #>  [941,] 0.5907378 0.5997272 0.6282346 #>  [942,] 0.8882829 0.9171687 0.9786830 #>  [943,] 0.6464288 0.6475404 0.6932559 #>  [944,] 0.8020389 0.8332081 0.9545348 #>  [945,] 1.3967273 1.4263500 1.5303297 #>  [946,] 0.8661738 0.8835345 0.9418841 #>  [947,] 1.0341030 1.0665823 1.0701228 #>  [948,] 0.8505013 0.8588578 0.8602180 #>  [949,] 0.6620749 0.6674684 0.6999691 #>  [950,] 0.6715692 0.6732006 0.6801847 #>  [951,] 0.8381879 0.8580390 0.8735294 #>  [952,] 0.6397244 0.6481640 0.6585769 #>  [953,] 0.7600203 0.8333091 0.8577934 #>  [954,] 0.7311095 0.7666704 0.7720657 #>  [955,] 0.6857979 0.6873157 0.7081513 #>  [956,] 1.0491804 1.0646306 1.0665823 #>  [957,] 0.7278877 0.7458077 0.7526179 #>  [958,] 0.8131620 0.8140530 0.8200162 #>  [959,] 1.3553868 1.3652005 1.4087390 #>  [960,] 0.6742869 0.6927757 0.6935895 #>  [961,] 0.5385167 0.5412691 0.5765337 #>  [962,] 0.6161448 0.6191511 0.6257026 #>  [963,] 0.6512502 0.7087876 0.7578457 #>  [964,] 0.6380197 0.7104408 0.7661511 #>  [965,] 0.6943906 0.7250722 0.7322724 #>  [966,] 1.0273050 1.0333418 1.0338005 #>  [967,] 1.1003664 1.1114033 1.1531107 #>  [968,] 0.5234763 0.5692590 0.5949044 #>  [969,] 0.6299959 0.6614861 0.6631958 #>  [970,] 0.6132784 0.6206338 0.6574036 #>  [971,] 1.0888946 1.1566819 1.1630378 #>  [972,] 0.5535035 0.6106502 0.6297898 #>  [973,] 1.1107653 1.1554482 1.1578779 #>  [974,] 0.8282386 0.8523305 0.9523307 #>  [975,] 0.5966750 0.6088378 0.6264783 #>  [976,] 0.6712161 0.6747242 0.6860202 #>  [977,] 0.7002035 0.7207671 0.7361568 #>  [978,] 0.5611023 0.5692590 0.5713636 #>  [979,] 0.7359016 0.7485139 0.8103468 #>  [980,] 0.6607510 0.6796446 0.7054167 #>  [981,] 0.7401325 0.7517817 0.7557467 #>  [982,] 0.5703687 0.5713636 0.6629655 #>  [983,] 0.7392411 0.7581082 0.7800392 #>  [984,] 1.6704371 1.7445347 1.7686935 #>  [985,] 0.9308566 0.9508618 0.9790464 #>  [986,] 0.6489164 0.6539432 0.6659627 #>  [987,] 0.9502703 0.9876611 1.0078478 #>  [988,] 0.7616226 0.7718502 0.8261747 #>  [989,] 1.2299184 1.3096315 1.4608447 #>  [990,] 0.8326376 0.8831607 0.8906118 #>  [991,] 0.6805048 0.6976350 0.7106365 #>  [992,] 0.6893451 0.7020445 0.7287517 #>  [993,] 0.7756169 0.8270837 0.8422844 #>  [994,] 1.0726774 1.1224575 1.1289085 #>  [995,] 1.0502892 1.0595193 1.0622020 #>  [996,] 0.8508050 0.8675501 0.9556772 #>  [997,] 0.7740370 0.8878779 0.9179751 #>  [998,] 0.7638727 0.8147467 0.8727687 #>  [999,] 0.7829143 0.7940834 0.8234630 #> [1000,] 1.0793481 1.1130977 1.1259971 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 3.162278e-08"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample   cd45 pstat5   cd34 outcome class  multiclass event time_to_event #>    <chr>   <dbl>  <dbl>  <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 32     0.921  0.0522 0.888    2.68  class2 class2         1         12.1  #>  2 90     0.624  0.963  0.650    3.90  class1 class3         1         15.0  #>  3 54     0.614  0.844  0.415    4.00  class1 class2         1         10.4  #>  4 7      0.701  0.128  0.361    2.66  class2 class1         0          8.71 #>  5 87     0.278  0.918  0.646    3.83  class1 class3         1          6.81 #>  6 12     0.0191 0.654  0.455    2.75  class2 class1         0          9.73 #>  7 14     0.887  0.0806 0.896    2.81  class2 class1         0          9.25 #>  8 84     0.853  0.662  0.902    6.67  class1 class3         1         12.2  #>  9 83     0.247  0.418  0.0526   4.63  class1 class3         1          9.22 #> 10 8      0.171  0.0776 0.565    0.229 class2 class1         0         10.3  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>                cd45       pstat5        cd34 #>   [1,]  0.259124441  0.545942959  1.67028754 #>   [2,]  0.562586929 -0.416312235  1.50106765 #>   [3,] -1.715783595  1.496709169  0.58567480 #>   [4,]  1.249052824 -0.396756894  0.86214610 #>   [5,] -0.878704844 -1.332084770 -0.52774903 #>   [6,] -0.950653904  0.694624500 -0.21343945 #>   [7,] -0.602708394 -1.202912951 -1.17803270 #>   [8,]  1.596263170 -0.778780413 -1.10174718 #>   [9,] -0.575365333  0.146161071  1.34764152 #>  [10,] -1.807674172 -0.766316579  1.49064921 #>  [11,]  0.142623581 -0.075599252 -0.89303909 #>  [12,]  0.837790875 -0.991391347 -0.70533295 #>  [13,]  0.869026632 -0.737514705  1.32746587 #>  [14,] -1.276422300 -1.018710064  0.22125739 #>  [15,]  0.583105375 -1.296159474  0.35851132 #>  [16,] -0.115558574  0.254358830  0.31057286 #>  [17,]  1.467559345  0.422591951 -0.50929099 #>  [18,]  0.100838398  1.227247543 -0.13247818 #>  [19,] -0.563966288  1.061099748  0.02320695 #>  [20,] -0.336510314 -1.035536519 -0.77476764 #>  [21,] -0.229617984  1.078465342 -0.84121253 #>  [22,] -1.568142660  1.186777333 -0.98356476 #>  [23,]  0.290903083 -1.026448168  1.42461572 #>  [24,] -0.810988334  1.440165280 -0.49225442 #>  [25,] -0.938837610 -1.143642907 -0.05809525 #>  [26,]  0.226096779  0.479648261  1.40663371 #>  [27,]  0.231911965 -0.854147387  1.12033863 #>  [28,] -0.569432545 -0.378344661  0.08232571 #>  [29,] -1.194832268 -1.639558632  0.19832007 #>  [30,] -1.130478842  0.079255065 -1.33531739 #>  [31,]  0.234209282  0.668719475 -1.02011728 #>  [32,] -0.707426743  0.490873879  0.28146415 #>  [33,] -0.987774505  1.066041509 -0.92306631 #>  [34,]  1.448308983  1.220528517 -0.83197983 #>  [35,]  1.215777860 -0.718155016  0.70130391 #>  [36,]  0.442631262  0.439714223 -0.50592063 #>  [37,]  0.966045192 -1.320507232 -0.32425079 #>  [38,]  0.281754896 -1.420466228 -0.30648030 #>  [39,] -0.004839252 -0.407944959  0.38897146 #>  [40,] -0.677684454  0.379675843 -1.43583293 #>  [41,] -1.231473229 -1.380036457  1.31884340 #>  [42,]  0.566981262 -1.503752389  0.18800505 #>  [43,] -0.669733682  0.948877237 -0.01794588 #>  [44,]  1.659399195  1.053456241  0.65204308 #>  [45,] -0.255554639 -1.527000000 -1.34871270 #>  [46,]  0.343070221  1.056707818  0.84127662 #>  [47,]  1.197442251 -0.771793925  0.93132697 #>  [48,] -0.902954006  1.561862010  0.62943805 #>  [49,] -1.213709087 -1.620345400 -1.37213498 #>  [50,]  0.234247269  0.670900829  1.03705255 #>  [51,]  0.082562277  0.568975230 -0.70849591 #>  [52,]  0.294135895  0.003940249  1.22551808 #>  [53,]  0.386292882 -0.230093272  1.03883984 #>  [54,] -1.748858464  1.068714777  1.15217073 #>  [55,]  1.507909868  0.940720340  0.53577925 #>  [56,]  0.218819951 -1.625055577  1.54533891 #>  [57,]  1.669647806  1.500353585 -1.23288364 #>  [58,]  0.670218742  0.906440977  1.73979893 #>  [59,]  0.640980226  0.198153332 -0.50515163 #>  [60,]  0.840356777  1.186669000 -0.43934619 #>  [61,] -0.417213856  0.702620021 -0.96956336 #>  [62,]  1.626489887 -0.352966484 -0.56740660 #>  [63,] -0.125778454  0.832349380 -1.18766832 #>  [64,]  0.793502495  1.138492357 -0.37857156 #>  [65,]  1.325273606 -0.187322715 -1.63572694 #>  [66,]  1.093762893  1.520802474 -0.98221784 #>  [67,] -1.832393554 -1.205685185 -0.24495079 #>  [68,] -0.234063224 -0.090779395 -0.78676414 #>  [69,]  0.128306786  0.174761240  0.72191748 #>  [70,] -0.196104012  0.155370189 -1.17032345 #>  [71,]  1.301062962 -1.047686528 -0.79804593 #>  [72,]  0.021577046  0.262677109 -1.38724384 #>  [73,]  1.622960505 -1.035763671  0.85370437 #>  [74,] -0.862963377  0.521211448  0.36634641 #>  [75,] -1.289175128 -1.542490802 -1.51959237 #>  [76,]  1.675785645 -0.968206232  1.66960844 #>  [77,] -1.085257554  1.284428947  1.27713892 #>  [78,]  0.580252752  0.547448366  0.47962354 #>  [79,]  0.593623995  0.332570407 -0.77612891 #>  [80,] -1.766311699 -0.428248465  0.07765455 #>  [81,]  1.452003304 -0.800541916 -1.62152245 #>  [82,] -0.765490785 -0.524983543 -1.19653298 #>  [83,] -0.776656139 -0.221397939 -1.30273401 #>  [84,] -0.054952631  1.564439173 -1.35157155 #>  [85,]  0.058712006  0.261407104 -1.07523793 #>  [86,] -1.459557172  1.422792863  1.21745401 #>  [87,]  0.549287745 -1.440825646  0.89892950 #>  [88,] -0.962370494 -1.634213180 -0.78041892 #>  [89,] -1.230477901 -1.649548761  1.60753450 #>  [90,]  0.948128203 -0.426825497  0.70248688 #>  [91,]  1.342423358  1.021243442  1.47022648 #>  [92,]  0.894879280 -0.235473589 -0.34286632 #>  [93,]  0.441188698 -0.503033356 -1.58350502 #>  [94,] -0.590327024  1.094243459 -0.86936950 #>  [95,]  1.161518037 -1.317427180  0.34953224 #>  [96,] -1.541830433  1.326846731  0.90345283 #>  [97,]  1.012664688  0.461844900  1.00249552 #>  [98,] -1.681799238  1.616988212  0.94170083 #>  [99,]  0.206986295  1.419524933 -0.84739821 #> [100,] -1.609656986 -0.477647382  1.41630897"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  8.1029438  3.7180599  1.9619141  2.4354791  2.4135660  4.9424430 #>   [7] -0.3289435  0.9099371  2.9061964  6.9037514  5.4298230  5.6450016 #>  [13]  1.3062185  1.3196523  6.0094317  2.4823547  2.3588526  4.8872883 #>  [19]  6.0583932  4.4364845 -0.4144625  1.7443860  4.9275482  1.7290545 #>  [25]  3.4242315  2.2349511  2.2746403  5.2113694  2.8413290  1.1172090 #>  [31]  2.3753250  5.3353010  3.6914835  5.6075922  5.7209943  1.3239403 #>  [37]  2.5542950  2.8970301  3.5184131  4.8775121  4.2277080  5.7623693 #>  [43]  2.0181885  3.8684080  3.1159571  4.3810191  4.0494670  3.9743019 #>  [49]  4.2655051  3.0113537  0.7578840  2.6836076  1.6180997  1.5771685 #>  [55]  3.5480115  4.5679679  2.5019967  2.0176201  3.2719211  4.8370195 #>  [61]  7.3113995  8.2120755  2.2514054  4.5536658  3.7123064  4.6272114 #>  [67]  4.3402813 -0.3269394  4.5965661  5.2763766  2.3148220  3.9876854 #>  [73]  2.1066177  6.6900187  2.3854691  0.2656054  0.4053875  2.7620729 #>  [79]  0.4258983  1.8937648  6.0749660  5.9199556  5.3266425  3.7863683 #>  [85]  0.6681848  7.1689273  1.9406578  2.5895411  4.4337885  4.0377925 #>  [91]  3.5148374  3.7381862  5.0955165  2.8489077  1.9573883  6.1173107 #>  [97]  3.5766197 -0.4600809  4.4924424  4.1434042"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38   cd34    cd19 cluster_id .flowsom_metacluster #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>      <chr>                #>  1 -0.361   0.845   0.633  0.958  z          2                    #>  2  1.28   -1.10   -1.31   0.0204 x          6                    #>  3 -1.03   -1.76    0.228  0.889  q          3                    #>  4 -1.74   -2.08    0.297  1.46   x          6                    #>  5  0.0546  0.221   1.84  -0.279  u          6                    #>  6  0.253   1.19   -0.368  0.519  a          1                    #>  7 -0.0469  0.0111  0.250  1.27   p          4                    #>  8  0.399   1.59    1.28   1.38   y          3                    #>  9  0.716   0.204   1.40   0.238  l          7                    #> 10 -1.41    1.86    1.86  -0.856  a          1                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>       cd45    cd38   cd34    cd19 cluster_id .phenograph_metacluster #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>      <chr>                   #>  1 -0.361   0.845   0.633  0.958  z          1                       #>  2  1.28   -1.10   -1.31   0.0204 x          4                       #>  3 -1.03   -1.76    0.228  0.889  q          3                       #>  4 -1.74   -2.08    0.297  1.46   x          4                       #>  5  0.0546  0.221   1.84  -0.279  u          4                       #>  6  0.253   1.19   -0.368  0.519  a          5                       #>  7 -0.0469  0.0111  0.250  1.27   p          2                       #>  8  0.399   1.59    1.28   1.38   y          3                       #>  9  0.716   0.204   1.40   0.238  l          1                       #> 10 -1.41    1.86    1.86  -0.856  a          5                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 9                      #>  2 3                      #>  3 5                      #>  4 2                      #>  5 9                      #>  6 3                      #>  7 4                      #>  8 8                      #>  9 8                      #> 10 10                     #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 1                    #>  2 1                    #>  3 2                    #>  4 2                    #>  5 1                    #>  6 1                    #>  7 2                    #>  8 1                    #>  9 3                    #> 10 5                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 4                    #>  2 4                    #>  3 1                    #>  4 1                    #>  5 4                    #>  6 4                    #>  7 1                    #>  8 4                    #>  9 3                    #> 10 2                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 6                         #>  2 8                         #>  3 6                         #>  4 2                         #>  5 8                         #>  6 2                         #>  7 6                         #>  8 6                         #>  9 5                         #> 10 3                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 8                   #>  2 9                   #>  3 5                   #>  4 5                   #>  5 8                   #>  6 5                   #>  7 4                   #>  8 9                   #>  9 5                   #> 10 9                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 4                       #>  2 2                       #>  3 3                       #>  4 1                       #>  5 2                       #>  6 1                       #>  7 1                       #>  8 4                       #>  9 4                       #> 10 1                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1 5.10  #>  2 3.80  #>  3 5.87  #>  4 2.99  #>  5 4.37  #>  6 3.60  #>  7 3.20  #>  8 1.64  #>  9 3.64  #> 10 3.53  #> 11 4.23  #> 12 4.98  #> 13 0.666 #> 14 4.66  #> 15 4.63  #> 16 2.58  #> 17 5.09  #> 18 2.08  #> 19 5.50  #> 20 6.16"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>      cd45    cd38    cd34   cd19    .pc1   .pc2   .pc3    .pc4 #>     <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>  <dbl>   <dbl> #>  1  1.44  -1.48    0.809  -0.349 -1.55   -0.219 -0.284 -1.35   #>  2 -1.01  -1.98   -0.0442 -0.383 -0.900   1.31  -1.23  -0.0579 #>  3 -0.705 -0.293   1.59    1.36   0.117   1.54   1.28  -1.09   #>  4  0.577  0.151   0.511  -0.470 -0.469  -0.511  0.520 -0.179  #>  5  0.277 -1.16   -0.0338  0.448 -0.221   0.452 -0.564 -1.03   #>  6 -0.263 -0.589  -1.19   -1.62  -0.499  -0.602 -1.34   1.07   #>  7  0.177 -0.380   1.17    0.295 -0.535   0.469  0.763 -0.783  #>  8  0.504  0.312  -0.620  -0.110  0.450  -0.726 -0.124 -0.159  #>  9 -0.452  0.636   0.326  -0.475  0.0682 -0.119  0.689  0.571  #> 10 -0.999 -0.0955 -0.785   2.13   2.01    1.24  -0.170 -1.02   #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>      cd45    cd38    cd34   cd19 .tsne1 .tsne2 #>     <dbl>   <dbl>   <dbl>  <dbl>  <dbl>  <dbl> #>  1  1.44  -1.48    0.809  -0.349 -4.35  -0.596 #>  2 -1.01  -1.98   -0.0442 -0.383  1.23   4.55  #>  3 -0.705 -0.293   1.59    1.36  -3.17   2.21  #>  4  0.577  0.151   0.511  -0.470 -2.02  -0.864 #>  5  0.277 -1.16   -0.0338  0.448  2.36  -0.908 #>  6 -0.263 -0.589  -1.19   -1.62   1.73   1.63  #>  7  0.177 -0.380   1.17    0.295 -3.00   1.02  #>  8  0.504  0.312  -0.620  -0.110 -0.762 -2.06  #>  9 -0.452  0.636   0.326  -0.475 -0.348  0.299 #> 10 -0.999 -0.0955 -0.785   2.13   4.78  -0.991 #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>      cd45    cd38    cd34   cd19   .umap1 .umap2 #>     <dbl>   <dbl>   <dbl>  <dbl>    <dbl>  <dbl> #>  1  1.44  -1.48    0.809  -0.349  3.34    -0.539 #>  2 -1.01  -1.98   -0.0442 -0.383 -3.93     2.00  #>  3 -0.705 -0.293   1.59    1.36   1.71    -1.54  #>  4  0.577  0.151   0.511  -0.470  0.989   -2.62  #>  5  0.277 -1.16   -0.0338  0.448  0.656    1.94  #>  6 -0.263 -0.589  -1.19   -1.62  -1.17     1.19  #>  7  0.177 -0.380   1.17    0.295  2.72    -0.928 #>  8  0.504  0.312  -0.620  -0.110  0.681   -3.08  #>  9 -0.452  0.636   0.326  -0.475 -0.00188 -1.13  #> 10 -0.999 -0.0955 -0.785   2.13  -0.534    3.29  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>       .pc1   .pc2 #>      <dbl>  <dbl> #>  1  0.917   0.549 #>  2 -0.369   0.824 #>  3  0.526   1.07  #>  4 -1.24    0.469 #>  5 -0.0359  1.92  #>  6  0.287  -1.25  #>  7 -1.19    1.02  #>  8 -0.917  -0.117 #>  9 -0.0296 -0.564 #> 10  0.949   2.17  #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>         PC1    PC2    PC3     PC4 #>       <dbl>  <dbl>  <dbl>   <dbl> #>  1  1.82     1.50   1.12  -0.637  #>  2 -1.30    -1.04   2.40  -0.132  #>  3  0.771    0.335  0.928 -0.183  #>  4  1.20    -0.864 -0.244 -0.0448 #>  5  1.57    -0.968 -0.441 -0.666  #>  6 -0.228    0.297  1.81  -0.386  #>  7 -1.87     0.294  1.87  -1.24   #>  8 -0.243    0.585 -0.508 -1.69   #>  9  0.764   -1.45  -0.159  0.180  #> 10 -0.00565 -0.284 -0.449 -0.655  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  5.52   7.18  #>  2 -3.08  -1.32  #>  3  2.30  -3.58  #>  4 -3.78   3.52  #>  5  0.984  6.79  #>  6  3.50   0.221 #>  7 -4.09   1.86  #>  8 -2.09  -7.72  #>  9 -1.54  -7.78  #> 10 -8.28   0.594 #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -7.34  -1.70  #>  2 -7.39   1.91  #>  3  9.15  -0.861 #>  4 -0.307  3.82  #>  5 -0.978  4.60  #>  6  2.76  -3.55  #>  7  4.43   6.27  #>  8  9.72   0.532 #>  9 10.3    1.49  #> 10 -7.08  -2.87  #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>     .umap1 .umap2 #>      <dbl>  <dbl> #>  1 -2.12    0.734 #>  2 -0.454  -1.53  #>  3 -0.925   2.98  #>  4  0.0451 -1.38  #>  5  3.01    1.32  #>  6  3.40   -0.963 #>  7 -2.02    4.60  #>  8 -3.22    0.292 #>  9  2.91   -0.496 #> 10  1.68   -2.76  #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -1.18  -5.40  #>  2 -0.936  8.17  #>  3  1.19   2.53  #>  4 -0.824  7.00  #>  5  2.43  -1.63  #>  6  0.298 -9.76  #>  7 -6.93  -0.776 #>  8  3.59   1.22  #>  9  1.68  -8.40  #> 10 -3.44   5.52  #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>      UMAP1  UMAP2 #>      <dbl>  <dbl> #>  1 -3.29   -0.652 #>  2  1.80    1.27  #>  3 -0.0334 -3.96  #>  4 -1.78   -0.911 #>  5  1.85    0.605 #>  6 -4.21    0.723 #>  7  0.131  -3.95  #>  8  3.28    0.890 #>  9  2.64    2.20  #> 10  0.547  -0.904 #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.286 #>  2          0     #>  3          0.143 #>  4          0.429 #>  5          0.571 #>  6          0     #>  7          0.143 #>  8          0.143 #>  9          0     #> 10          0     #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            0   #>  2            0.3 #>  3            0.4 #>  4            1   #>  5            0.7 #>  6            0.4 #>  7            0.6 #>  8            1   #>  9            1   #> 10            1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/35]> Bootstrap01 #>  2 <split [100/35]> Bootstrap02 #>  3 <split [100/31]> Bootstrap03 #>  4 <split [100/36]> Bootstrap04 #>  5 <split [100/39]> Bootstrap05 #>  6 <split [100/39]> Bootstrap06 #>  7 <split [100/37]> Bootstrap07 #>  8 <split [100/39]> Bootstrap08 #>  9 <split [100/42]> Bootstrap09 #> 10 <split [100/35]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)       3.56  #> 2 pstat5            1.16  #> 3 cd45              0.836 #> 4 cd34             -0.122  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5        -0.234    #> 2 cd45          -0.184    #> 3 cd34           0.0314   #> 4 (Intercept)    0.000142  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 0 × 2 #> # ℹ 2 variables: feature <chr>, coefficient <dbl>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38    cd34   cd19 .upsample_cluster #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>             #>  1  0.231 -1.58   -0.736  -0.307 b                 #>  2 -0.727 -1.30   -0.710   1.73  b                 #>  3 -0.445  0.874   0.0459  0.819 b                 #>  4  0.360  1.42    0.852  -0.944 a                 #>  5  0.554  0.616   1.50   -0.849 a                 #>  6  0.290 -0.0319  1.36    0.517 a                 #>  7  0.402 -1.31    0.612  -0.633 b                 #>  8 -2.33  -0.888   0.316  -1.08  b                 #>  9  1.58  -0.670   0.726  -0.799 a                 #> 10 -0.949  1.80    0.302  -0.571 a                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38    cd34   cd19 .upsample_cluster #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>             #>  1  0.231 -1.58   -0.736  -0.307 a                 #>  2 -0.727 -1.30   -0.710   1.73  b                 #>  3 -0.445  0.874   0.0459  0.819 b                 #>  4  0.360  1.42    0.852  -0.944 b                 #>  5  0.554  0.616   1.50   -0.849 a                 #>  6  0.290 -0.0319  1.36    0.517 b                 #>  7  0.402 -1.31    0.612  -0.633 a                 #>  8 -2.33  -0.888   0.316  -1.08  b                 #>  9  1.58  -0.670   0.726  -0.799 b                 #> 10 -0.949  1.80    0.302  -0.571 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 a                 #>  4 a                 #>  5 a                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 a                 #>  5 a                 #>  6 b                 #>  7 a                 #>  8 a                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 a                 #>  4 a                 #>  5 a                 #>  6 b                 #>  7 a                 #>  8 a                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992-1","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Removed unnecessary files caused build fail. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
