[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.35     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.9        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.3.0        bslib_0.6.2       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.5              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [89] tidyselect_1.2.1              Biostrings_2.70.3             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] readr_2.1.5                   blob_1.2.4                    #> [119] bitops_1.0-7                  listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1 -13.8   -8.35 #> 2  -2.20 -13.5  #> 3 -19.7  -29.0  #> 4  -8.65 -20.0  #> 5 -14.5  -12.1  #> 6  -3.06 -26.1 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>     .tsne1 .tsne2 #>      <dbl>  <dbl> #>  1   9.32  -14.4  #>  2   3.31  -14.6  #>  3  -8.80  -34.1  #>  4  -1.49  -21.9  #>  5   8.69  -17.5  #>  6  -9.96  -19.1  #>  7  -0.924 -13.3  #>  8 -11.2   -20.4  #>  9  -6.23  -18.6  #> 10   5.46   -8.96 #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>     .umap1 .umap2 #>      <dbl>  <dbl> #>  1 -10.4    4.32  #>  2  -9.51   3.42  #>  3  -8.27   0.695 #>  4  -6.87  -0.268 #>  5 -10.6    4.13  #>  6   0.129 -4.19  #>  7 -10.7    3.77  #>  8  -8.40  -0.172 #>  9  -6.22   0.175 #> 10  -9.22   5.39  #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         stringr_1.5.1       #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [22] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [25] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [28] tweenr_2.0.3        irlba_2.3.5.1       parallel_4.3.3      #>  [31] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [34] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [37] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [40] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [43] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [46] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [49] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [52] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [55] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [58] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [61] Rtsne_0.17          future_1.33.1       desc_1.4.3          #>  [64] survival_3.5-8      polyclip_1.10-6     embed_1.1.4         #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [73] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [76] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [79] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [82] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [85] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [88] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [91] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [94] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [97] lava_1.8.0          uwot_0.1.16         gtable_0.3.4        #> [100] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [103] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [106] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [109] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.2         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.2     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.3        timechange_0.3.0    tidyselect_1.2.1    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [94] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.5              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 philentropy_0.8.0             #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     emdist_0.3-3                  #>  [89] RProtoBufLib_2.14.1           tidyselect_1.2.1              #>  [91] Biostrings_2.70.3             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   ggplot2_3.5.0                 #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  scales_1.3.0                  #> [127] prodlim_2023.08.28            purrr_1.0.2                   #> [129] crayon_1.5.2                  rlang_1.1.3                   #> [131] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.1       bslib_0.6.2         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.2     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.3        #>  [49] timechange_0.3.0    tidyselect_1.2.1    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.1     tidyr_1.3.1         RProtoBufLib_2.14.1 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.9          #> [103] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34   cd38 #>   <dbl>  <dbl>  <dbl> #> 1  131.  2.36   0.619 #> 2  229. -1.13  11.2   #> 3  292.  4.32   1.17  #> 4  431. -0.635 12.7   #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.5              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  tidyr_1.3.1                   #>  [73] data.table_1.15.2             hms_1.1.3                     #>  [75] tidygraph_1.3.1               utf8_1.2.4                    #>  [77] XVector_0.42.0                ggrepel_0.9.5                 #>  [79] BiocVersion_3.18.1            foreach_1.5.2                 #>  [81] pillar_1.9.0                  stringr_1.5.1                 #>  [83] RcppHNSW_0.6.0                later_1.3.2                   #>  [85] splines_4.3.3                 tweenr_2.0.3                  #>  [87] lattice_0.22-5                survival_3.5-8                #>  [89] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [91] tidyselect_1.2.1              Biostrings_2.70.3             #>  [93] knitr_1.45                    gridExtra_2.3                 #>  [95] xfun_0.42                     graphlayouts_1.1.1            #>  [97] hardhat_1.3.1                 timeDate_4032.109             #>  [99] stringi_1.8.3                 yaml_2.3.8                    #> [101] evaluate_0.23                 codetools_0.2-19              #> [103] ggraph_2.2.1                  tibble_3.2.1                  #> [105] BiocManager_1.30.22           cli_3.6.2                     #> [107] rpart_4.1.23                  xtable_1.8-4                  #> [109] systemfonts_1.0.6             munsell_0.5.0                 #> [111] jquerylib_0.1.4               Rcpp_1.0.12                   #> [113] globals_0.16.3                png_0.1-8                     #> [115] parallel_4.3.3                ellipsis_0.3.2                #> [117] pkgdown_2.0.7                 gower_1.0.1                   #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  ggridges_0.5.6                #> [127] scales_1.3.0                  prodlim_2023.08.28            #> [129] purrr_1.0.2                   crayon_1.5.2                  #> [131] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [97] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T, Davis K, Nolan G (2024). tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis. doi:10.18129/B9.bioc.tidytof, https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.5, http://www.bioconductor.org/packages/tidytof. Keyes, J. T, Koladiya, Abhishek, Lo, Yu-Chen, Nolan, P. G, Davis, L. K (2023). “tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis.” Bioinformatics Advances, 3(1). doi:10.1093/bioadv/vbad071, https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984.","code":"@Manual{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {Timothy Keyes and Kara Davis and Garry Nolan},   year = {2024},   url = {http://www.bioconductor.org/packages/tidytof},   note = {https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.5},   doi = {10.18129/B9.bioc.tidytof}, } @Article{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {{Keyes} and Timothy J. and {Koladiya} and {Abhishek} and {Lo} and {Yu-Chen} and {Nolan} and Garry P. and {Davis} and Kara L.},   year = {2023},   journal = {Bioinformatics Advances},   volume = {3},   number = {1},   doi = {10.1093/bioadv/vbad071},   url = {https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"See documentation object's original package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"# See examples in each object's original package NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `{cluster_col}_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_{cluster_name}\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 8               #>  2 4               #>  3 8               #>  4 1               #>  5 2               #>  6 15              #>  7 11              #>  8 18              #>  9 19              #> 10 20              #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 2               #>  2 1               #>  3 3               #>  4 4               #>  5 19              #>  6 4               #>  7 5               #>  8 11              #>  9 2               #> 10 20              #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 8                   #>  2 3                   #>  3 6                   #>  4 4                   #>  5 4                   #>  6 2                   #>  7 2                   #>  8 9                   #>  9 1                   #> 10 2                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 4                   #>  2 6                   #>  3 4                   #>  4 11                  #>  5 4                   #>  6 9                   #>  7 3                   #>  8 1                   #>  9 10                  #> 10 9                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>       cd45    cd38   cd34     cd19 cluster_id #>      <dbl>   <dbl>  <dbl>    <dbl> <chr>      #>  1 -0.976   1.90   -0.238  0.441   p          #>  2 -0.195  -0.474  -2.22  -0.600   p          #>  3 -0.212  -0.464  -1.20  -0.891   z          #>  4  1.88    0.643   1.52  -0.869   b          #>  5 -0.888  -0.231   0.321  0.0759  v          #>  6  0.768  -0.0448 -1.85   0.525   x          #>  7  0.0491 -1.82   -0.690 -0.507   b          #>  8 -0.937   0.751  -1.21   0.252   l          #>  9  0.473   0.261   0.298  1.00    f          #> 10  0.457  -0.547   1.71   0.00101 x          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1  0.0933 -0.218  0.840  0.164 k          #>  2  0.0421  1.32  -1.24   0.163 e          #>  3  1.27   -0.522 -0.135  1.48  u          #>  4 -0.231  -0.223 -0.301  0.239 q          #>  5 -0.721   0.722 -0.739  1.18  y          #>  6 -0.0458  0.785  0.697  0.319 z          #>  7  0.701  -0.605  1.84   0.861 r          #>  8 -0.905  -0.783 -1.42  -0.385 s          #>  9  0.867  -0.180  1.90   0.273 w          #> 10  1.41    2.16   2.27   0.974 q          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 96 × 5 #>      cd45    cd38   cd34    cd19 cluster_id #>     <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  1.88   0.643   1.52  -0.869  b          #>  2 -0.146  0.828   1.10  -0.0467 t          #>  3 -1.18  -0.259  -0.383 -0.588  e          #>  4 -1.86   0.0770  1.31   0.0992 l          #>  5 -0.340  0.269  -0.969  1.63   m          #>  6  0.979  0.370  -1.24   1.00   d          #>  7 -0.241 -0.523   0.492  1.34   n          #>  8 -1.90  -1.80   -1.81  -0.999  q          #>  9 -0.448 -0.294   1.46   0.830  p          #> 10 -0.191  0.737   1.10   0.0106 a          #> # ℹ 86 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>       cd45   cd38   cd34    cd19 cluster_id #>      <dbl>  <dbl>  <dbl>   <dbl> <chr>      #>  1 -1.37    0.119 -0.452  0.150  e          #>  2 -0.806  -1.36   1.44   0.803  e          #>  3 -0.167   0.366 -0.512 -0.806  c          #>  4  2.13    1.18  -0.405  0.343  w          #>  5  1.31    1.04   0.628  0.0154 z          #>  6  1.88   -0.707  0.798  0.0972 i          #>  7 -1.85    1.01   0.381 -0.256  i          #>  8 -0.702   0.919  0.800  0.537  y          #>  9  0.0713  1.98  -0.735 -0.220  h          #> 10 -1.03   -0.344 -1.15   0.698  y          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>      cd45    cd38    cd34    cd19 cluster_id #>     <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1 -0.544  0.561   0.141   0.899  c          #>  2 -0.167  0.366  -0.512  -0.806  c          #>  3  2.13   1.18   -0.405   0.343  w          #>  4 -0.881 -1.28   -1.08   -0.725  s          #>  5 -0.299  0.119  -1.84   -0.0465 d          #>  6 -1.09  -1.17   -0.0514  1.09   w          #>  7  1.88  -0.707   0.798   0.0972 i          #>  8 -1.85   1.01    0.381  -0.256  i          #>  9 -0.420 -0.0579  1.19   -0.571  d          #> 10 -0.702  0.919   0.800   0.537  y          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 469 × 4 #>       cd45   cd38   cd34   cd19 #>      <dbl>  <dbl>  <dbl>  <dbl> #>  1  0.157  -0.657 -0.422 -0.171 #>  2  0.247  -2.28  -0.769 -0.640 #>  3  2.00   -0.484 -1.32  -0.375 #>  4 -1.99   -0.522  0.941 -0.574 #>  5 -0.0392  0.372  0.179 -0.188 #>  6 -1.29    0.165  0.400 -1.63  #>  7 -0.728  -0.993  1.72   0.745 #>  8  0.603   1.11   0.543 -0.284 #>  9  1.29   -1.87  -2.40   1.36  #> 10  0.233   0.323 -2.28   0.883 #> # ℹ 459 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 208 × 4 #>      cd45     cd38   cd34    cd19 #>     <dbl>    <dbl>  <dbl>   <dbl> #>  1 -0.149 -0.134    0.965 -0.224  #>  2  1.32   1.34     0.951 -0.763  #>  3  0.104 -0.470    1.35   0.362  #>  4  1.29  -1.87    -2.40   1.36   #>  5  0.679  0.766    0.515 -0.0614 #>  6 -0.542  0.444    0.949  0.199  #>  7  0.516  1.11     0.402  0.216  #>  8  1.03  -0.134   -0.271 -0.0218 #>  9 -0.308 -0.00761  0.740 -0.209  #> 10 -0.581  0.417   -0.846 -1.68   #> # ℹ 198 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 197 × 4 #>      cd45    cd38    cd34   cd19 #>     <dbl>   <dbl>   <dbl>  <dbl> #>  1  1.05   1.17    0.775   1.36  #>  2 -0.149 -0.134   0.965  -0.224 #>  3  0.104 -0.470   1.35    0.362 #>  4 -0.224  0.117  -0.945  -0.916 #>  5  1.50   1.71    2.40   -0.500 #>  6 -0.275 -0.375   1.50   -0.163 #>  7  0.351  0.768  -0.963  -1.20  #>  8 -0.608 -0.849  -0.496  -1.39  #>  9  1.25   0.457   0.0341  1.83  #> 10  1.71  -0.0492  0.276  -0.864 #> # ℹ 187 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>      cd45   cd38   cd34    cd19 cluster_id #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>      #>  1 -1.86   0.177 -1.61   0.915  w          #>  2  0.648 -0.110  0.861 -0.257  p          #>  3 -0.736  1.22  -0.351 -1.49   l          #>  4 -2.39  -1.59   0.813  0.325  y          #>  5  2.05  -0.591 -0.727 -0.335  p          #>  6 -0.244 -0.691 -2.46  -0.0472 w          #>  7 -0.336  0.539 -0.613 -1.42   s          #>  8 -0.356 -1.06   0.896  0.494  g          #>  9 -1.13   2.39   0.335 -1.20   e          #> 10 -0.273 -0.403  2.13   0.596  d          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 87 × 5 #>      cd45    cd38    cd34    cd19 cluster_id #>     <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1  1.91   0.329   0.458   0.0340 a          #>  2 -1.25   0.769   0.0705  0.923  a          #>  3 -0.663 -1.04    1.23   -0.0216 a          #>  4  1.33  -0.764  -1.86   -0.348  b          #>  5  0.638 -2.31   -1.48   -0.371  b          #>  6 -1.14   0.0955 -0.543   0.566  b          #>  7  1.35   0.575  -0.346  -1.01   b          #>  8 -2.01   0.769  -2.01   -0.988  c          #>  9  1.88   0.748  -0.0520  0.348  c          #> 10  1.06  -0.926   1.44   -1.18   c          #> # ℹ 77 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34   cd19 .spade_density #>      <dbl>  <dbl>  <dbl>  <dbl>          <dbl> #>  1 -0.252   0.331 -2.74  -1.08               1 #>  2  0.759   0.857 -0.277  0.966              1 #>  3 -0.241   1.15  -2.36  -2.13               1 #>  4  0.189   3.05   0.923 -1.41               1 #>  5  0.0278  0.197  1.06   0.220              1 #>  6  0.838  -1.28   1.55  -0.758              1 #>  7  0.923  -0.981  0.291 -0.286              1 #>  8  0.893  -0.143  1.51   1.54               1 #>  9  0.661   0.102  0.632  0.805              1 #> 10  0.347   0.708 -0.122 -2.55               1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34   cd19 .spade_density #>      <dbl>  <dbl>  <dbl>  <dbl>          <dbl> #>  1 -0.252   0.331 -2.74  -1.08             0.1 #>  2  0.759   0.857 -0.277  0.966            1   #>  3 -0.241   1.15  -2.36  -2.13             0   #>  4  0.189   3.05   0.923 -1.41             0   #>  5  0.0278  0.197  1.06   0.220            1   #>  6  0.838  -1.28   1.55  -0.758            0.1 #>  7  0.923  -0.981  0.291 -0.286            1   #>  8  0.893  -0.143  1.51   1.54             0.7 #>  9  0.661   0.102  0.632  0.805            1   #> 10  0.347   0.708 -0.122 -2.55             0.4 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby        -0.216     -0.0538     -0.0502       0.429      0.175  #> 2 mario         0.350     -0.278      -0.0983      -0.289     -0.0923 #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45    -0.216  #>  2 kirby   a          cd38    -0.0538 #>  3 kirby   a          cd34    -0.0502 #>  4 kirby   a          cd19     0.429  #>  5 kirby   b          cd45     0.175  #>  6 kirby   b          cd38     0.144  #>  7 kirby   b          cd34     0.416  #>  8 kirby   b          cd19     0.0494 #>  9 kirby   c          cd45     0.113  #> 10 kirby   c          cd38     0.567  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@x_emd` `stim_cd38@x_emd` `stim_cd34@x_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                  NA                NA                NA #> 2 kirby                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@x_emd` <dbl>, `stim_cd45@d_emd` <dbl>, #> #   `stim_cd38@d_emd` <dbl>, `stim_cd34@d_emd` <dbl>, `stim_cd19@d_emd` <dbl>, #> #   `stim_cd45@i_emd` <dbl>, `stim_cd38@i_emd` <dbl>, `stim_cd34@i_emd` <dbl>, #> #   `stim_cd19@i_emd` <dbl>, `stim_cd45@j_emd` <dbl>, `stim_cd38@j_emd` <dbl>, #> #   `stim_cd34@j_emd` <dbl>, `stim_cd19@j_emd` <dbl>, `stim_cd45@p_emd` <dbl>, #> #   `stim_cd38@p_emd` <dbl>, `stim_cd34@p_emd` <dbl>, `stim_cd19@p_emd` <dbl>, #> #   `stim_cd45@m_emd` <dbl>, `stim_cd38@m_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 x          cd45   stim         9.75 #>  2 x          cd38   stim         5.06 #>  3 x          cd34   stim         7.06 #>  4 x          cd19   stim        14.9  #>  5 d          cd45   stim         6.70 #>  6 d          cd38   stim         8.55 #>  7 d          cd34   stim         6.65 #>  8 d          cd19   stim         7.10 #>  9 i          cd45   stim         6.66 #> 10 i          cd38   stim         6.59 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0375   0.0208   0.0458   0.0292   0.0417   0.0604   0.0208 #> 2 mario     0.0558   0.0519   0.0308   0.0442   0.0442   0.0558   0.05   #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0375   0.0208   0.0458   0.0292   0.0417   0.0604   0.0208 #> 2 mario     0.0558   0.0519   0.0308   0.0442   0.0442   0.0558   0.05   #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@q_jsd` `stim_cd38@q_jsd` `stim_cd34@q_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby               0.844                 1             0.766 #> 2 mario              NA                    NA            NA     #> # ℹ 101 more variables: `stim_cd19@q_jsd` <dbl>, `stim_cd45@y_jsd` <dbl>, #> #   `stim_cd38@y_jsd` <dbl>, `stim_cd34@y_jsd` <dbl>, `stim_cd19@y_jsd` <dbl>, #> #   `stim_cd45@x_jsd` <dbl>, `stim_cd38@x_jsd` <dbl>, `stim_cd34@x_jsd` <dbl>, #> #   `stim_cd19@x_jsd` <dbl>, `stim_cd45@p_jsd` <dbl>, `stim_cd38@p_jsd` <dbl>, #> #   `stim_cd34@p_jsd` <dbl>, `stim_cd19@p_jsd` <dbl>, `stim_cd45@f_jsd` <dbl>, #> #   `stim_cd38@f_jsd` <dbl>, `stim_cd34@f_jsd` <dbl>, `stim_cd19@f_jsd` <dbl>, #> #   `stim_cd45@c_jsd` <dbl>, `stim_cd38@c_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 q          cd45   stim        0.646 #>  2 q          cd38   stim        0.842 #>  3 q          cd34   stim        0.897 #>  4 q          cd19   stim        0.646 #>  5 y          cd45   stim        0.765 #>  6 y          cd38   stim        0.836 #>  7 y          cd34   stim        0.804 #>  8 y          cd19   stim        0.784 #>  9 x          cd45   stim        0.757 #> 10 x          cd38   stim        0.687 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0532   0.0389   0.0327   0.0327   0.0511   0.0450   0.0511 #> 2 mario     0.0528   0.0313   0.0372   0.0274   0.0411   0.0391   0.0333 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0532 #>  2 kirby   b          0.0389 #>  3 kirby   c          0.0327 #>  4 kirby   d          0.0327 #>  5 kirby   e          0.0511 #>  6 kirby   f          0.0450 #>  7 kirby   g          0.0511 #>  8 kirby   h          0.0204 #>  9 kirby   i          0.0225 #> 10 kirby   j          0.0184 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby               0.0526             0.105              0      #> 2 mario               0.0294             0.0882             0.0294 #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0.0526 #>  2 kirby   a          cd38    0.105  #>  3 kirby   a          cd34    0      #>  4 kirby   a          cd19    0.105  #>  5 kirby   b          cd45    0.143  #>  6 kirby   b          cd38    0.143  #>  7 kirby   b          cd34    0.0476 #>  8 kirby   b          cd19    0.0476 #>  9 kirby   c          cd45    0.0455 #> 10 kirby   c          cd38    0      #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  519  950  311  110  409  192  884  753  426   133 #>    [2,]  782  386  902  938  407  955  247  667  756   284 #>    [3,]  789  309  180  707  670  569  900  796  587   554 #>    [4,]  891  845  413  535   37  322  298  269  195   664 #>    [5,]  112  743  962  404  553  957  741  545  155   535 #>    [6,]   10  232   22  765  948  522  820  724  759   368 #>    [7,]  513  486  697  388  650  144  105  374  333   769 #>    [8,]  577  212  951  835  525  116  115  794  210   595 #>    [9,]  193  495  323  430   94  596  784   69  378   791 #>   [10,]    6  232  522   22  765  820  479   27  674   368 #>   [11,]  737  850  448  580  132  804  173  226   65    50 #>   [12,]  602  445  162  348  610   49  375  873  571    83 #>   [13,]    7  513  767  105  244  109  800  544  246   249 #>   [14,]  245  100  848  600  710  883  590  754  711   920 #>   [15,]  686  351   25  265  433  839  863  953  170   263 #>   [16,]  870  793  578  582  872  559  812  762  918   276 #>   [17,]  558  337  520  696  713  510  402  129  841   509 #>   [18,]  668  742  697   95  228  551   68  474  202   892 #>   [19,]  343  856  117  750  796  328   63  422  340   546 #>   [20,]  496  908  127  281  749  575  892  194  318   828 #>   [21,]  937  914  616  184  751  644  909  689  270   875 #>   [22,]  123  332  581  820  759  948  435  227  992   319 #>   [23,]  188  821  157   90  905  882   43   95  274    79 #>   [24,]  615  388  161  344  545  962  745  269  340   333 #>   [25,]  686   15  351  863  265  433  756  170  211   208 #>   [26,]  829  182  646  598  589  249  752  668  819   716 #>   [27,]  556  151  401  555  655  534  465   91   57   820 #>   [28,]  586  358  470  382   32  379  299  645  572    54 #>   [29,]  826  929  530  470  292  110  379  287   54   515 #>   [30,]  161  700  817  739  205  957    5  545   77   388 #>   [31,]  544  675  391  109  327  277  387  251  960   224 #>   [32,]  470  837  367  294  299   54   28  922  887   412 #>   [33,]  216  786  124  334  213  894   72  665  664   180 #>   [34,]  978  694  252  612  488  949  220  720  766   304 #>   [35,]  456  291  272  906  418  500  805  677   64   416 #>   [36,]  541  827   75  178  933  472  152  726  502   380 #>   [37,]  891  664    4  413  322  461  213  298   62   101 #>   [38,]  979  492  965  314  571  302  629  476  533   966 #>   [39,]  149  411  390  104  930  402  337  841  520   185 #>   [40,]  861  458  505  840  594  565  404  155  403   845 #>   [41,]  514  102  857  423  125  936  917  859  911   107 #>   [42,]  774  648  809  851  828  720  821  598  892   643 #>   [43,]  821  918   90  188  604  578   23  762  870    79 #>   [44,]   81  176  695  141  941  818   89  421  768    78 #>   [45,]  319  680  952  756  251  547  948  389  117   608 #>   [46,]  739  957  269  597  307  592  161  436  506   404 #>   [47,]  566  974  391  259  201  224   31  385  109   968 #>   [48,]  127  121  815  261  370  641  676  191  289   194 #>   [49,]  445  425  873  602   12  814  897  662  219    83 #>   [50,]  804  132  138  737  313  324  124   11  945   703 #>   [51,]  847  167  630  979  842  533  314  298  880    38 #>   [52,]  874  911  893  612  949  171  304  736  766   803 #>   [53,]  896  785  684  950  869   99  969  628  352   338 #>   [54,]  470  922  186  292  294  477  808   32  113   758 #>   [55,]  523  537  449  720  813  803  488  477  198   980 #>   [56,]  116  276  951  642  241  928  525    8  490   794 #>   [57,]  507  106  293  342  654  399  750  227  966   532 #>   [58,]  261  191   97  960   48  675  127  575  142   815 #>   [59,]  626  795  755  441  195  866  176   70  836   768 #>   [60,]  830  218  304  102  864   93  190  859  776   606 #>   [61,]  285  397  341  682  372  264  599  126  998    86 #>   [62,]  253  461  474  664  181  685  359  383  988   882 #>   [63,]  136  557  454  224   19  387  856  532  261   142 #>   [64,]  209  594  492  840  629  861  418  272  373   494 #>   [65,]  145  737  850   11  448  173  226  704  324   816 #>   [66,]  161  788  374  858   24  615   30  961  817   246 #>   [67,]  137  373  728  611  898  893  129  278  459   301 #>   [68,]  960  228  392  333  551   18  315  144  202   388 #>   [69,]  871  356  430  184    9  453  937  747  561   914 #>   [70,]  306  836  745  891   37  755  269  615  664     4 #>   [71,]  268  577  320   78  885  941  814   83  872   248 #>   [72,]  508  428  213  334  880  160  780   33  630   939 #>   [73,]  591  166  444  156  721  906  352  596  378   609 #>   [74,]  283  326  150  296  339  920  963  860  656   723 #>   [75,]  964  899  380  718  502   85  196  805  152   416 #>   [76,]  439  366  579  490  234  138  854  313  410   943 #>   [77,]  315  635  144  731  246  242  388   30  700   923 #>   [78,]  268   71   83  941  212  577  934  885  610   794 #>   [79,]  812   23   43  821  188  578  622  237  740   353 #>   [80,]  501  643  776  540  986  606  864  190  120   130 #>   [81,]  695   44  421  176  818  429   89  941  844   872 #>   [82,]  368  232  483  760  522  974  546  999  674   994 #>   [83,]  602  814  794  268  610   78  897  885  445    49 #>   [84,]  419  115  394  910  640  806  317  262  305     8 #>   [85,]  677  416  718  380  209  418  964  805   75   543 #>   [86,]  163  682  371  397  223  998  264  285  466    61 #>   [87,]  692  748  875  751  757  270  165  637  873   572 #>   [88,]  197  984  992  773  698  919  255  916  460   721 #>   [89,]  481  995  359  695  844  177  941   44   81   253 #>   [90,]  188   43  821   23  605  274   95  762  882   604 #>   [91,]  555  497  310  719  986  700  968  288  817   549 #>   [92,]  307  655   46  597   96  506  436  763  917   739 #>   [93,]  373  354  120  209  830  920  797   64  975   190 #>   [94,]  791  495  561  365  193  378  947    9  596   323 #>   [95,]  882  188   90  274  668  905   23  605   18   892 #>   [96,]  498  739   46  857  866   92  506  597  307   269 #>   [97,]  575  552  395  191  712   58  335  641  589    48 #>   [98,]  310  493  242  788  961  731  824  635   91   817 #>   [99,]  558  684  969  717  521  970   53  967  705   877 #>  [100,]  848  883  809   14  711  920  643  963  619   459 #>  [101,]  325  229  216  461  665  328  664  383  284   386 #>  [102,]   41  917  859  423  830   60  857  155  775    40 #>  [103,]  159  295  282  394  300  621  904  114  946   651 #>  [104,]  149  147  583  590  997   39  663  930  312   588 #>  [105,]  716  366  769  528  742  215    7  244  943   513 #>  [106,]  507  342  966   57  654  399  293  386  148   807 #>  [107,]  766  125  911   60  102   41  859  612  830   949 #>  [108,]  460  473  239  733   88  992  647  984  131   981 #>  [109,]  544   31  620  277   68  800  960  224  982   646 #>  [110,]  519  409  292  303  929  753  346  133   29   200 #>  [111,]  881  274  302  516  810  548  685  882  476   965 #>  [112,]  962    5  743  535  344  807  741  845  404   553 #>  [113,]  375  393  808  922  348  292  627  477  659   406 #>  [114,]  300  203  914  324  282  689  450  665   21   704 #>  [115,]  640  317  910  419  262  806  381  210  219     8 #>  [116,]    8   56  276  559  577  835  951  928  212   794 #>  [117,]  328  856  796   19  454  136  319  750  422   399 #>  [118,]  240  260  890  589  646  829  575  649  238   876 #>  [119,]  450  981  180  356  203  216  300  935  324   946 #>  [120,]  975  540  593  797   93  920  290  279  706   245 #>  [121,]   48  370  641  452  437  199  754  127  710   676 #>  [122,]  294  808  922  867  777  361  715  953  360   837 #>  [123,]  332   22  435  759  581  227  871  948  319   747 #>  [124,]  786  350   33  989  313   50  527  945   62   334 #>  [125,]  766  911  995  107  171  853  936  140  844    41 #>  [126,]  192  792  753  158  341  723   61  770  285   230 #>  [127,]  676   48  194  638   20  815  777  261  641   496 #>  [128,]  714  621  831  331  356  946  608  783  184    69 #>  [129,]  137  520  185  728   67  459  611  696  278   713 #>  [130,]  290  986  540  502  553  120  349   80  917   152 #>  [131,]  609  721  832  916  485   88  460  214  239   156 #>  [132,]  138  945  662   50  425  804   11  320  737   798 #>  [133,]  625  139  165  627  530  175  393  637  692   753 #>  [134,]  833  811  699  257  506  773  197  959  916   701 #>  [135,]  744  658  898  416  243  338  283  718  456   500 #>  [136,]   63  454  532  557  261  750  117  856  955    19 #>  [137,]   67  611  129  459  728  373  893  301  304   278 #>  [138,]  132  804  234  313   76  320   50  579  662   703 #>  [139,]  625  993  175  133  299  529  379  637  530   607 #>  [140,]  582  853  872  171   16  766  559  812  125   421 #>  [141,]  443   44  176  768  195  880  842  441  941   524 #>  [142,]  233  202  815  551  454  289  261  392  988   191 #>  [143,]  826  311  884  346    1   29  254  862  929   950 #>  [144,]  315  388   77  486  697  976  545  392  333    68 #>  [145,]   65  850  737   11  324  576   50  804  173   704 #>  [146,]  832  562  396  916  543  134  131  721  487   699 #>  [147,]  104  583  590  149  549  933  639  541  337   574 #>  [148,]  966  979  654  106  791   38  507  322  467   342 #>  [149,]  104  583  185   39  147  520  997  390  312   129 #>  [150,]  230  632  723  339   74  393  420  204  283   753 #>  [151,]  556   27  888  464  899  984  534  655  197   364 #>  [152,]  380  502  472  130  917  290  986  102  540   775 #>  [153,]  990  802  398  412  367  512  837  438  890   973 #>  [154,]  273  855  956  297  681  971  562  959  441   958 #>  [155,]  404  859  423   40  957  157    5  359  995   845 #>  [156,]  444  378  214  591  596  609  193   73  352   495 #>  [157,]  905  190   23  403  353  155  987  882  881   274 #>  [158,]  723  770  792  970  296  509  150  230  921   339 #>  [159,]  295  103  946  300  114  576  282  128  450   324 #>  [160,]  428  780  722  942  919   72  255  778   70   213 #>  [161,]   30  817   24  739  957   46  700  388  615     5 #>  [162,]  980   12  375  610  659  494  348  406  602   330 #>  [163,]   86  223  466  998  407  285  671  568  235   453 #>  [164,]  779  439  636  865  169  491  438  772  528   489 #>  [165,]  572  627  637  692  393   87  211  113  175   217 #>  [166,]  591  200  275  784   73  236  947  434  347   634 #>  [167,]  533   51  972  842  468  571  314  979  377   630 #>  [168,]  802  607  735  990  529  299  379  993  924   887 #>  [169,]  489  258  579  761  604  854  462  897  491   918 #>  [170,]  265  208  839  955  686  676  261   15  247   127 #>  [171,]  799  231  353  889  582   52  995  494  403   766 #>  [172,]  633  389  442  801  680  531  201  391  251   547 #>  [173,]  865  850  226  838  580   11  652  448  725   424 #>  [174,]  679  983  345  369  199  121  327  446  437   712 #>  [175,]  637  299  572  139  863  625  165  993  211   607 #>  [176,]   44  818  440   81  141  695  939  795  941    89 #>  [177,]  253  934  685  320  941  882  359  268  814    89 #>  [178,]  541  521  623  183  933  384  558   99  744   705 #>  [179,]  258  488  978  752  622  694  598  605  578    42 #>  [180,]  119    3  216   33  229  101  450  707  422   124 #>  [181,]  383  461  187  284   62  247  988  318  142   474 #>  [182,]  926  552  663  589   26  819  504  315  829   336 #>  [183,]  414  451  705  178  967  417  877  717  684   536 #>  [184,]  937  783   21  914  430  644  909  902  616   751 #>  [185,]  129  520  459  390  198  402  696  137  611   848 #>  [186,]  296  758   54  841  294  509  922  402  339   808 #>  [187,]  284  383  318  181  194  247  798  548  667   749 #>  [188,]   90   23  821  605   43  762   95  578  668    79 #>  [189,]  446  235  532  293  706  279  996  288  370   593 #>  [190,]  157  774  987  905  834  643  218   80  354   859 #>  [191,]  641  202  551   48  834   97  289  815   58   261 #>  [192,]  126  753  792  950  409  723  628  158   61   230 #>  [193,]  495  378    9   94  940  323  352  156  596   784 #>  [194,]  318  815  127  749  908  667  187  225  289   676 #>  [195,]  443  880    4  626  891  141  298  768  257   842 #>  [196,]  467  805  701  790  888  895  418  699  846   484 #>  [197,]  773   88  919  255  257  722  701  984  811   916 #>  [198,]  459  390  809  930  185  312  523  720  449   851 #>  [199,]  679  983  121  345  710  174  446  437  452   907 #>  [200,]  634  275  886  166  347  784  434  475  519   601 #>  [201,]  172  391  442  369  405  787  174  327  633   801 #>  [202,]  551  233  142  289  191  834  545  504  815   392 #>  [203,]  665  914  689  616  937  935  334  325  847   213 #>  [204,]  628  518  283  869  150  684  785  409   74   338 #>  [205,]  859  864  976   30  237  155  190  739  957   486 #>  [206,]  550  670  587    3  309  554  271  789  569   666 #>  [207,]  524  231  889  799  560  141  768  468  879   594 #>  [208,]  170  265  955  247  839  251  686  454  675     2 #>  [209,]   64  594   93  418  373  861  840  629  492   272 #>  [210,]  525  794  709  781  885  381  115  212    8   317 #>  [211,]  526  863  637  953  448  165  217  175  572   652 #>  [212,]  794   78  977    8   83  610  210  595  577   262 #>  [213,]  216  942  778  325   37  334  665  101  203   891 #>  [214,]  444  698  156  721  378  984  596  940  495   846 #>  [215,]  740  613  769  486  697  976  812  481  622   237 #>  [216,]  213  101  325  229  665   33   37  664  334   942 #>  [217,]  568  627  263  953  777  225  715  671  938   667 #>  [218,]  776   60  830  864  606  501  190  304  643    80 #>  [219,]  757  471  425  640  381   49  445  362  910   873 #>  [220,]   34  252  312  694  198  488  978  185  611    55 #>  [221,]  672  500  321  434  236  660  906  166  657   879 #>  [222,]  904  570  764  475  200  884  875  683  644  1000 #>  [223,]  163  682  998  921  285  230  466  671  715    86 #>  [224,]   63  557  345  391   58  387  907  136  960   566 #>  [225,]  667  671  782  568  777  915  194  217  407   676 #>  [226,]  652  448  580  173  850  526  211  953  265    11 #>  [227,]  435  581  791  654   57  293  747  106  871   123 #>  [228,]  960   68  982   18  424  551  142  908  392   767 #>  [229,]  101  328  216  325  856  664  796  117  461    37 #>  [230,]  150  723  339  627  393  753  420  223  632   263 #>  [231,]  889  799  171  207  594  840  494  403  844   353 #>  [232,]  820  368   10  674  546  944  760  465   82    22 #>  [233,]  142  202  815  289  551  284  962  191  318   261 #>  [234,]  527  313   76  410  742  138  177  320  943   854 #>  [235,]  189  293  446  706  503  996  466  326  288   279 #>  [236,]  500  434  347  456  338  291  303  518  377   601 #>  [237,]  905  976  697   23  668  188  157   95   79   504 #>  [238,]  447  890  638  281  575  412  395  438  265   584 #>  [239,]  460  473  647  108  485  609  131    9   88   954 #>  [240,]  829  589  118  575  649  335   20  496  598   648 #>  [241,]  490  951  931  410  525  729   56  943  517    76 #>  [242,]  731  493  700  310  907  635   77  574  817   315 #>  [243,]  338  135  409  744  250  236  346  969  950   518 #>  [244,]  336  752  716  105  976  513  923  280   26   215 #>  [245,]  600  754  593   14  710  706  975  920  120   279 #>  [246,]   77  635  455  144  315  923  731  388  486   800 #>  [247,]  955  383  284  454  187    2  181  328  208   142 #>  [248,]  440  931  989  517  320  350   71  939  738   818 #>  [249,]   26  646  260  624  620  819  280  829  767   336 #>  [250,]  243  346  932  708  672  969  338  221  898   135 #>  [251,]  389  387  801  675  208  680  454  170   45   955 #>  [252,]  928   34  220   55  803  612  949  736  813   720 #>  [253,]  685   62  359  177  882  474  934  548  413   461 #>  [254,]  311    1  143  884  570  426  519  950  826   222 #>  [255,]  919  778  942  322  654  197  364  722  992   891 #>  [256,]  795  440  939  248  176  818  508  350  363   989 #>  [257,]  811  773  722  919  701  316  197  880  195   443 #>  [258,]  179  605  489  169  598  604  488  918  578   762 #>  [259,]  566  345  907  679  391  199  224  974  310   557 #>  [260,]  646  118  876  829  649  620  589  249  240   819 #>  [261,]  815  454   48  955   58  127  136  839  142   191 #>  [262,]  595  317  538  115  419  212  524  910  806     8 #>  [263,]  217  372  599  627  568  953  863  625  715   230 #>  [264,]  397   86  371   61  267  285  669  372  825   998 #>  [265,]  170  686   15  208  839  638  676   25  955   226 #>  [266,]  511  932  736  611  515  252  977  803  250   893 #>  [267,]  264  585  831  397  372  608  599  783   25   263 #>  [268,]   71  814   78  320  885   83  941  934  662   445 #>  [269,]  597  615  535  306  506  891    4  592   46   845 #>  [270,]  875  637   87  704  683   21  751  757  748   211 #>  [271,]  994  206  550  569   66  554   13  999  858   900 #>  [272,]  565  594   35  805  418  840   64  505  291   699 #>  [273,]  855  956  681  154  959  833  971  441  768   562 #>  [274,]  882  881  111   90   95   23  318  539  548   749 #>  [275,]  634  200  415  660  538  434  347  947  166   167 #>  [276,]  928   16  793  559  116   56  870  794  872   410 #>  [277,]  927   31  544  309  387  109  670  707  760   666 #>  [278,]  623  469  521  384  728  963   67  373  933   137 #>  [279,]  975  370  593  797  706  656  326  754  120   920 #>  [280,]  336  244  923  249  455   26  182  819  588   752 #>  [281,]  649  575   20  496  908  238  838  638  127   829 #>  [282,]  651  683  806  394  689   21  764  114  914   475 #>  [283,]  204   74  456  658  150  518  758  406  901   236 #>  [284,]  187  383  247  810  318  181  194  815  461   233 #>  [285,]  998  913  223   61  825   86  163  466  682   230 #>  [286,]  288  996  536  877  466  967  717  921  719   503 #>  [287,]  709  929  477  427  586  977  515  358  659    29 #>  [288,]  286  235  189  996  465  466  503  401  446   706 #>  [289,]  834  987  815  233  202  191  641  318  194    48 #>  [290,]  540  130  741  797  120  553  986  790  349   502 #>  [291,]  377  972  468   35  347  434  456  314  272   571 #>  [292,]  901  113  515  929   54  758  110  303  659   922 #>  [293,]  235   57  507  106  189  342  227  532  401   407 #>  [294,]  122  922  808   54  837  867  186  715   32   627 #>  [295,]  159  946  300  103  450  618  114  647  282   128 #>  [296,]  758  339  186  963   74  158  901  970  883   723 #>  [297,]  564  855  971   59  818  154  936  661  429   795 #>  [298,]  413  630  685    4  847  842  880  516  934    37 #>  [299,]  607  379  175  529  863  953  599  625   32   139 #>  [300,]  114  450  295  914  946  203  689  119  282   618 #>  [301,]  851  720  304  813  893  449  803  459  980   373 #>  [302,]  476  965  111  810  629  881  492  516   38   539 #>  [303,]  601  330  348  406  659  347  901  434  292   110 #>  [304,]  851  301   60  830  373  893  218   52  611   720 #>  [305,]  542  816  362  703  640  781  355  910  683   115 #>  [306,]   70  836  745  615  269  891   37  755  664     4 #>  [307,]   92  655   46  436  597  592  506  349  957   917 #>  [308,]  632  601  347  393  634  886  692  420   87   571 #>  [309,]  670  927  707    3  789  587  387  952  796   422 #>  [310,]  493  242  700   91  907  731  574  817  555   259 #>  [311,]  254    1  884  143  826  530   29  519  110   993 #>  [312,]  588  997  978  663  198  694  488   34   42   851 #>  [313,]  527  234  742  138   76   50  124  132  181   804 #>  [314,]  842  979  972  167  468   38  533   51  571   965 #>  [315,]  144   77  388   68  731  926  976  635  545   392 #>  [316,]  773  257  722  916  441  811  478  880  443   197 #>  [317,]  115  381  640  262  806  910  219  538  757   471 #>  [318,]  194  908  749  187  289  274  284  815  496   881 #>  [319,]  944  117  435   45  693  820  407  532  546   136 #>  [320,]  268   71  177  941  945  662  934  814  248   234 #>  [321,]  396  221  660  672  906  524  500  166  478   434 #>  [322,]  891    4   37  535  778  845  413  654  255   966 #>  [323,]  784  886    9  634  644  909  430   94  193   947 #>  [324,]  704  737  114   50  616  119  783  145  665   203 #>  [325,]  101  386  935  665  216  747  213  229  203    37 #>  [326,]  593  706  754  921  975   74  279  996  600   915 #>  [327,]  395   58  391  712   97  174  584  675  679   575 #>  [328,]  117  796  856  229  101  454  247   19  422   399 #>  [329,]  771  852  843  657  250  221  672  681  396   321 #>  [330,]  659  901  406  303  348  162  375  601  879   515 #>  [331,]  631  128  946  576  831  608  159  295  356   621 #>  [332,]  123   22  435  581  654  747  227  935  820   992 #>  [333,]  392  388  988   68  545  144   24  474   18   960 #>  [334,]  665  630  213  945  203  298   33  847  216    72 #>  [335,]  711  648  641  452  589   97  552  712  867   643 #>  [336,]  280  923  244  182  455   26  752  663  925   315 #>  [337,]   17  520  558  614  713  521  639  970  841   770 #>  [338,]  243  518  409  236  204  519  950  135  869   283 #>  [339,]  808  296  150  230  393  922  723   74  627   758 #>  [340,]  343  344  615   19  856  999  962   24  750   399 #>  [341,]  991   61  599  868  372  682  126  367  770   792 #>  [342,]  507  106  399  807   57  966  750  743  322   293 #>  [343,]   19  856  750  340  999  117  546  368   63   399 #>  [344,]  962  112  535  399  807  340  988  743  664   233 #>  [345,]  174  679  199  557  983  259  391  224  446   136 #>  [346,]  110  519  409  929  243  515  932  338  250   236 #>  [347,]  601  377  308  291  434  632  236  303  634   365 #>  [348,]  659  601   12  375  406  113  303  162  330   571 #>  [349,]  553  436  743  592  741  790  290  807    5   540 #>  [350,]  989  124  786  248  363  320  939  440  138   256 #>  [351,]   15  433  863   25  953  686  372  599  263   211 #>  [352,]  378  785  869  591  896  193  156  518  444   357 #>  [353,]  403  171  157   23  799  821   79   43  840   494 #>  [354,]   93  797  656  539  476  920  629  302  861   492 #>  [355,]  816  542  305  781  362  703   65  764  683   640 #>  [356,]   69  871  759  608  831  756  184  119  783   935 #>  [357,]  869  985  913  503  365   94  825  628  785   518 #>  [358,]  427  586   28  362  471  572  381  287  477   781 #>  [359,]  253  905  882   89  685   62  155  177  474    23 #>  [360,]  867  712  361  395  122  930  638  452  575   890 #>  [361,]  991  715  638  360  122  867  395  823  712   294 #>  [362,]  471  572  358  219  875  381  640  683  757   270 #>  [363,]  989  350  440  248  786  650  256  795  124   818 #>  [364,]  255  919  597  942  778  506  592  992  197   556 #>  [365,]  947   94  347  518  632  791  357  596  886   291 #>  [366,]   76  943  528  678  234  105  410  716  439   490 #>  [367,]  398  837   32  991  412  294  361  122  341   868 #>  [368,]  483  343  999  820   19  546  340  760  232   422 #>  [369,]  787  983  174  679  442  345  371  682  199   201 #>  [370,]  279   48  121  671  915  815  641  754  777   225 #>  [371,]  397   86  573  682  264  442   61  369  998   163 #>  [372,]  599  263  433  351   61  341  953  863   15   715 #>  [373,]   93   67  209  893   64  137  304  301  830   728 #>  [374,]  858  613  486  513    7   24  215  564  739    66 #>  [375,]  477  113  659  348  162  980   12  901  406   330 #>  [376,]  498  506  597  364  134   92  755  307  197   655 #>  [377,]  291  468  972  571  434  601  347  533  167   314 #>  [378,]  193  495  156  596  352   94  444  214  940   947 #>  [379,]  529  607  299  530  993  175   28  470  139   887 #>  [380,]  502  152  718  130  290  472   85  917   75   384 #>  [381,]  471  317  219  757   49  348  445  692  640   362 #>  [382,]  586   28  645  636  837   54  477  358  470   427 #>  [383,]  181  461  187  284  247  318  988  101   62   142 #>  [384,]  469  623  718  417  933  521  278  860  658   380 #>  [385,]  968  674  719  259  974   91  549  465  555   566 #>  [386,]  902  966  325    2  935  747  782  106  616   284 #>  [387,]  251  796   63  960  454  136  675  707  224   117 #>  [388,]  144  333  545  392   24  486  315   77  697   161 #>  [389,]  801  251  680  172   45  675  531  547  442   686 #>  [390,]  930  402  411  198  841  848  185  696  883   520 #>  [391,]  345  224  327  566   31  201  974  174  259   172 #>  [392,]  333  545  551   68  388  202  142  988  233   960 #>  [393,]  627  113  632  339  165  308  808  692  230   922 #>  [394,]  282  651  806  910  419  764  683  640  103   727 #>  [395,]  712  575   97  638  360  452  361  437  121   552 #>  [396,]  321  832  956  681  478  524  906  487  221   543 #>  [397,]  264  371   86   61  285  267  682  372  573   998 #>  [398,]  367  991  837  361  412  868  153  360  341   433 #>  [399,]  342  750  507  106  807   57  856  344  962   654 #>  [400,]  465  693  401  944  479  319  435  820  163   466 #>  [401,]  465  400  293   57  944  820   27  532  693   435 #>  [402,]  696  841  390  510  520  186  185  411  713   509 #>  [403,]  840  353  516  458  861  157  965  799   40   629 #>  [404,]  155  957  741    5   40  845  112  535  553   743 #>  [405,]  482  201  573  369  442  787  371  868  584   398 #>  [406,]  901  330  348  601  659  303  162  113  375   393 #>  [407,]  782    2  671  225  839  568  938  955  454   915 #>  [408,]  748  757  538  533  806   87  167  634  875   692 #>  [409,]  519  950  110  338  753  204  283  628  243   346 #>  [410,]  943  234  490  559  872  762  579   76  480   578 #>  [411,]  390  402  930  849  198  510  696  841  185   186 #>  [412,]  837  890  367  652  438  122  953  294  398   238 #>  [413,]  298    4   37  685  810  891  322  845  516   253 #>  [414,]  451  705  183  967  717  536  286  877  567   417 #>  [415,]  954  947  485  596  275   51  660  167  784   634 #>  [416,]  677  718   85  658  898  744   35  135  418   456 #>  [417,]  877  384  860  432  469  658  718  623  204    74 #>  [418,]  805  272  209   35   64  196  467  658  456   492 #>  [419,]  115  910  262  640  806  317  595   84    8   394 #>  [420,]  632  913  561  230  150  308  568  393  938   217 #>  [421,]   81  695  853   44  140  559  872  429  582   835 #>  [422,]  952  707  796   19  117  328  856  229  343   760 #>  [423,]  155  859  857  995  102  844   40  404  936    41 #>  [424,]  838  982  228  725  767  649  675  281  173   865 #>  [425,]   49  662  445  873  798  219  814  897  945   132 #>  [426,]  352  570  732  323  784    1  193  785  378   591 #>  [427,]  358  586  287  645  781   28  709  210  382   362 #>  [428,]  780  160  673  894   72  942   70  722  755   457 #>  [429,]  695  872  734  559  480  818   81  481  661   140 #>  [430,]  909  644  937  184  689  914   21  886    9   475 #>  [431,]  725  772  865  876  173  666  424  838  512   447 #>  [432,]  567  417  503  467  196  888  706  617  235   985 #>  [433,]  351  372   15  599  686   25  953  263  863   299 #>  [434,]  377  660  347  236  291  468  601  972  303   275 #>  [435,]  227  123  581  871  319  332  293   57  747   453 #>  [436,]  349  592  790  553  741  290  535  655  404   743 #>  [437,]  452  710  823  121  754  712  983  600  867   395 #>  [438,]  890  412  652  238  226  772  837  281  779   173 #>  [439,]  490  579   76  729  779  169  854  164  865   489 #>  [440,]  818  248  176  256  795  939   44  931  695   989 #>  [441,]  768  316  195  959  141  443  833  560  855   626 #>  [442,]  172  680  371  801  389  633  369  201  174    86 #>  [443,]  195  880  842  141  630  298  768    4  257   314 #>  [444,]  156  214  378   73  591  352  721  596  617   495 #>  [445,]   49   12  425  873  602  814   83  662  219   348 #>  [446,]  189  235  370  279  532  996  199  121  706   293 #>  [447,]  238  265  584  675  638   15  686  801  327   170 #>  [448,]  580  526  226  211   11  652  737  850  270   637 #>  [449,]  537  720  813  301  980  523  803   55  851   918 #>  [450,]  119  300  946  981  114  618  203  295  914   180 #>  [451,]  705  414  717  967  183  536  877  286  684    99 #>  [452,]  437  710  711  712  121  335   14  754  867   823 #>  [453,]  871  938  561  756  902  407    2  782  420   163 #>  [454,]  955  136  261  247  815  117   63  142  328   233 #>  [455,]  923  246  336  244  635   77  925  280  315   144 #>  [456,]   35  658  283  291  236   64  418  500  492   406 #>  [457,]  900  569  745   70  894  780  306  836  554   428 #>  [458,]  861  840   40  629  403  965  505  845  516   594 #>  [459,]  851  809  137  301  198  848  100  185  720   611 #>  [460,]  239  473  108    9   88  485  647  609  954   992 #>  [461,]  664   62  181  383  988   37  101  284  474   253 #>  [462,]  489  854  761  749  798  897  605   90  604   908 #>  [463,]  549  968  259  385  787  566  719   47   98   147 #>  [464,]  899  151  534  888  567  556  432  846  985    75 #>  [465,]  401  400  693  944  288  820  293  532  189   435 #>  [466,]  998  996  163  921  235  223  503   86  285   682 #>  [467,]  196  805  701  888  895  790  418  148  484   846 #>  [468,]  972  377  571  167  533  291  314  660  434   842 #>  [469,]  384  860  278  623  417  933  120  593  521   963 #>  [470,]   54   32  530   28   29  292  379  922  299   929 #>  [471,]  381  572  219  362  757  692   49   87  873   875 #>  [472,]  152  380  933  775  502  278  830   60  384   653 #>  [473,]  647  460  981  239  108  992   69    9  450    88 #>  [474,]   62  988  253  461  527  359  181  664   95   882 #>  [475,]  644  909  886  634   21  430  222  748  875   764 #>  [476,]  302  810  629  656  492  881  111  965  484   354 #>  [477,]  375  113  586  659  980  537   54  761  162   348 #>  [478,]  485  316  727  415  954  508  321  660  524   687 #>  [479,]  400  435  581  465  401  227  123  693  669   820 #>  [480,]  943  769  429  734  410  481  234  818  661   872 #>  [481,]   89  613  359  177  429  215  769  995  695   480 #>  [482,]  405  398  584  868  153  447  367  573  991   433 #>  [483,]  368  343  961  340  999   19  674  555  655   750 #>  [484,]  790  741  797  656  629  807  476  861  492   743 #>  [485,]  954  415  478  727  596  460   51  275  947   239 #>  [486,]  697  976  144  388  237  215    7  613  205   315 #>  [487,]  560  543  699  272  565  677  681  811   85   207 #>  [488,]  978  694  179  720  258  813  449   42  523    34 #>  [489,]  462  169  605  258  761  854  649  604   20   496 #>  [490,]  439  729  579   76  410  241  169  525  854   943 #>  [491,]  169  258  488  179  523  694  489  870  164    16 #>  [492,]  629  656  476  302  965   64   38  861  840   484 #>  [493,]  242  731  310  907  635  700  574   77  817    98 #>  [494,]  610  889  799  162  231   12  879   64  840   353 #>  [495,]  193   94  378  940    9  791  596  214  323   947 #>  [496,]   20  908  892  281  318  575  828  127  191   749 #>  [497,]  555   91  986  130  502  763  827  655  817   349 #>  [498,]   96  755  506  822  376  866  626  597   59   833 #>  [499,]  618  673  894  730  256  690  363  795  350   428 #>  [500,]  906  236   35  672  456  221  434  291  879   338 #>  [501,]   80  776  606  864  643  218  926  190  574   986 #>  [502,]  380  152  130  290  540  986  917  718  120   384 #>  [503,]  235  432  466  357  985  293  996  536  288   706 #>  [504,]  926  834  987  892  551  668  202  648  828   191 #>  [505,]  565   40  458  861  845  840  272  594  404   155 #>  [506,]  597  269   46  722  306  257  919  755  592   255 #>  [507,]  342  106   57  399  807  293  966  654  484   750 #>  [508,]   72  687  939  880  256  141  630  478  795   443 #>  [509,]  713  970  758  296  158  792  186  841  728   770 #>  [510,]  696  402  841  411  186  509  390   54  520    17 #>  [511,]  736  266  893  874  803  611  879  932  330    67 #>  [512,]  924  990  802  153  168  772  438  412  735   607 #>  [513,]    7  769  215  374  486  244  105  613  697   650 #>  [514,]   41  857  936  423  102  866  125  971  844   995 #>  [515,]  929  292  901  330  758  659   54  303  346   110 #>  [516,]  965  111  403  685  934  302  881  548  458   810 #>  [517,]  931  577  248  951   71  958  738    8  440   835 #>  [518,]  869  204  628  338  785  365  283  236  347   357 #>  [519,]  110  409    1  950  338  346  753  200  236   518 #>  [520,]  129  185  713  402  696  728  841  963  390   848 #>  [521,]  623  860  384  278  713  469  970  728  963   933 #>  [522,]   82  368  483  232   10  674    6   27  961   820 #>  [523,]   55  537  449  488  720  198  813  258  477   491 #>  [524,]  207  660  595  141  468  262  321  972  538   231 #>  [525,]  885  210  729  794  781    8  577  490  951    71 #>  [526,]  211  448  863  953  580  217  637  226  667   652 #>  [527,]  234  313  742  474   62  177  253  786   95   989 #>  [528,]  366  624  716  767  105   76  439  742  164   649 #>  [529,]  607  379  993  299  168  139  175  530  735   887 #>  [530,]  379   29  470  133  625  826  299  572  529   139 #>  [531,]  547  172  389  952  760  801  251   45  633   680 #>  [532,]  750  136  189  557  944  446  399   57  293    63 #>  [533,]  167  571  468  972   51  377  408  979  314   842 #>  [534,]  464   27  151  556  655  567  899  555  307    92 #>  [535,]  845  112    4  592  404  741  322  962  891   269 #>  [536,]  967  877  503  286  466  998  684  357  825   985 #>  [537,]  449   55  523  720  803  813  980  477  301   375 #>  [538,]  408  660  275  167  533  262  806  317  468   972 #>  [539,]  603  980  354  619  828  274  302  821  111   749 #>  [540,]  290  120  130  797  741  986  975  553   80   743 #>  [541,]  933  178   36  827  384  472  469  521  705   623 #>  [542,]  816  781  305  362  355  358  427  640  525   729 #>  [543,]  487  906  416  677  699   85   35   75  805   500 #>  [544,]   31  982  109  675  424  960  228  277   68   767 #>  [545,]  202  392  551  388  962    5  233  112  905   504 #>  [546,]  557  760  944   19  820  343   63  136  319   974 #>  [547,]  531  952   45  389  251  760  801  172  948   387 #>  [548,]  685  111  945  662  798  516  934  881  187   274 #>  [549,]  719  286  968   91  288  463  259  385  590   310 #>  [550,]  206  587  670    3  309  271  927  666  569   554 #>  [551,]  202  142  191  233  504  392  545  834  289    68 #>  [552,]   97  589  335  191  182  712  575  395  926   711 #>  [553,]  349  743  741    5  436  112  404  290  807   592 #>  [554,]  900  569  745  457  786  836  650  124  789     3 #>  [555,]   91  497  655  310  719   27  349  986  817   700 #>  [556,]  151   27  888  401  581  364   57  655  227   984 #>  [557,]  546  944  136   63  532  345  224   19  750   693 #>  [558,]   17  713   99  521  337  970  509  520  623   129 #>  [559,]  872  577   16  429  582  410  794  870  695    71 #>  [560,]  487  768  811  699  565  272  441  207  505   833 #>  [561,]  791  453  420   94  913  871  163  227  430   909 #>  [562,]  273  396  956  681  146  154  832  855  771   321 #>  [563,]  787  702  573  369  371  286  717  682  614   983 #>  [564,]  936  613  971  866  995  374  857  514  125   481 #>  [565,]  505  272   40  594  840  458  861  805  811   699 #>  [566,]  259  391  974  224   47  345  907  493  557   310 #>  [567,]  432  502  288  719  497  417  286  503  899   464 #>  [568,]  217  671  225  938  777  782  667  715  263   407 #>  [569,]  900  554  457  745  999  836  789    3   70   988 #>  [570,]  904  222  784  200  475 1000  426  323  166   634 #>  [571,]  533  377  468  965  167  972   38  601  314    12 #>  [572,]  165  637  471  692  175  875   87  362  211   270 #>  [573,]  371  397  405  442   61  264  369  702  682   563 #>  [574,]  907   80  501  242  986  731  310  926  700   493 #>  [575,]   97  395  281   20  712  496  638  240  829   127 #>  [576,]  145  159  946   65  324  587  331  295  114   737 #>  [577,]   71  517    8  559   78  885  268  872  931   794 #>  [578,]  762   43  870  188  812  605   79  918   16    90 #>  [579,]  854  729  897  439  490  169   76  462  662   489 #>  [580,]  448  226   11  652  526  850  425  761  798   211 #>  [581,]  227  435  123   22  332  479  654  940  992   791 #>  [582,]  140  872  171   16  870  853  559   79  812    43 #>  [583,]  590  278  933   14  848  100  104  520  147   149 #>  [584,]  238  327  447  260  395  118  712  646  890   876 #>  [585,]  783  184  453  267  714  644   69  561  139   909 #>  [586,]  358  477   28  382  761  427  287  471  375    54 #>  [587,]  670  309    3  180  666  576  707  145  927   725 #>  [588,]  997  312  663  978  752  218  776  694  606   336 #>  [589,]  240  829  819  552  335  575   97  646  182   648 #>  [590,]   14  710  639  245  583  600  452  848  711   100 #>  [591,]   73  166  156  352  784  378  444  596  947   609 #>  [592,]  436  349  535  553  845  269  597  790  741   807 #>  [593,]  975  706  245  120  279  754  326  600  920    14 #>  [594,]  840   64  209   40  861  272  565  458  889   231 #>  [595,]  262   78  524  212    8  419  317  538  115   141 #>  [596,]  947  698  378  954  415  495   94  214    9   365 #>  [597,]  506  269  592   46  307  364  306  436  655   615 #>  [598,]  668  892  605  188  828  829  622  258  648   179 #>  [599,]  372  263  433  299  351  341  953  625  863    61 #>  [600,]  245  754   14  593  639  963  326  710  823   920 #>  [601,]  303  347  348  377  308  406  571  434  632   533 #>  [602,]   12   83   49  445  604  814  918  610  897   162 #>  [603,]  619  539  980  867  354  749  777  641  828   920 #>  [604,]  918   43  602  897  761   90  870  462  821   605 #>  [605,]  188  762   90  598  489  668  258  578  892   462 #>  [606,]  864  501  776  218   80  925   60  830  643   205 #>  [607,]  529  379  299  993  168  175  802   28  139   530 #>  [608,]  831  356  759   45  948  871  756  267   69   128 #>  [609,]  156  131  721  444  460  596  591  214  378    73 #>  [610,]  494   12  162  799   83  602  889  803   78   659 #>  [611,]  137   67  893  736  304  301  459  612  129    52 #>  [612,]  949  911   52  736  611  874  304  766   34   893 #>  [613,]  481  215  769   89  486  374  740  697  359   564 #>  [614,]  770  639  792  868  841  158  337  970  991   341 #>  [615,]   24  269  306  745  836  340   70  344  161   597 #>  [616,]  751  937   21  902  914  665  203  386  184   704 #>  [617,]  846  895  365  357  985  869  467  698  888   518 #>  [618,]  647  450  300  295  673  894  946  981  119   473 #>  [619,]  603  867  539  641  980  809  828  648  920   883 #>  [620,]  646  260  249  819  109  584  589  552  327    26 #>  [621,]  714  912  128  904   69  585  184  783  356   103 #>  [622,]  752  740  812  179   79  598  578  188  237   762 #>  [623,]  521  860  384  278  469  728  963  713  970   417 #>  [624,]  528  249  716  767   26  649  260  164  876   179 #>  [625,]  133  139  175  627  165  263  637  299  530   599 #>  [626,]  866   59  195  441  269  768  443   70  755   836 #>  [627,]  165  922  393  808  217  230  113  263  953   625 #>  [628,]  204  869  785  684  518  913  150  357  409   753 #>  [629,]  492  861  458  840  965  476  302   64  484    38 #>  [630,]  298  880   51  842  847  334  167  413  443   314 #>  [631,]  331  128  946  608  759  356  948  119  450   831 #>  [632,]  308  150  393  420  347  601  230  365  406   886 #>  [633,]  172  442  693  974  680  531  389  400  944   760 #>  [634,]  886  909  275  200  644  308  347  748  475   323 #>  [635,]   77  731  246  800  242  493  315  144  923   700 #>  [636,]  382  779  164  849  438  491  586  890  772   169 #>  [637,]  175  165  572  211  270  863   87  875  692   526 #>  [638,]  676  127  395  361  575  712  777  265  238    48 #>  [639,]  600  590  245  963   14  614  754  770  710   921 #>  [640,]  910  115  806  219  317  381  419  738  757   362 #>  [641,]  191  834  335   48  711  289  648  121  619   987 #>  [642,]   56  241  490  729  781  439  276  779  491   525 #>  [643,]  776   80  711  648  774  100  501  190   14   809 #>  [644,]  909  430  475  886   21  634  184  937  751   323 #>  [645,]  887   28  382  470  427  379  358   29   32   826 #>  [646,]  260  829  589   26  819  118  240  575  649   620 #>  [647,]  473  618  239  981  460  450  295  300  946   108 #>  [648,]  774  828   42  335  987  892  834  641  643   711 #>  [649,]  281  829  489  838  240  496   20  575  982   462 #>  [650,]    7  363  554  769  527  480  513  989  678   786 #>  [651,]  806  282  687  910  727  394  738  408  538   689 #>  [652,]  226  580  448  953  526  412  211  438  761   281 #>  [653,]  775  472   60  606  830  218  107  152  864   997 #>  [654,]  106   57  778  966  747  322  507  148  227   255 #>  [655,]  307   92  436  592   46  349  597  555  497    27 #>  [656,]  975  797  476  492  915  484  354  629  279   920 #>  [657,]  672  879  677  221  874  500  207  898  736   681 #>  [658,]  456  744  718  416  283  418  135  417  898    35 #>  [659,]  330  375  348  901  162  406  303  113  477    12 #>  [660,]  972  434  468  538  275  377  524  167  291   533 #>  [661,]  734  429  818  958  695  440  559  421  480    81 #>  [662,]  798  814  425  897  548  945   49  268  445   132 #>  [663,]  776  588  182   42  926  997  648  589  312   752 #>  [664,]  461   37   62  988  101  229  344  836  891   253 #>  [665,]  203  334  325  101  616  216  213  847  386   945 #>  [666,]  670  309  587  277  725  544  431  927   31   547 #>  [667,]  225  782  194  568  938  671    2  217  187   284 #>  [668,]  598  892   95  188  605   18  504  237  828   987 #>  [669,]  825  264  732  397  479  285   86  998   61   466 #>  [670,]  309  666  587    3  927  789  707  277  544   725 #>  [671,]  225  568  777  915  370  407  782  217  667   715 #>  [672,]  221  500  434  236  321  657  879  906  660   524 #>  [673,]  894  428  780   72   33  457  160  618  213   942 #>  [674,]  385  968  555  483   91  232   27  719  310   974 #>  [675,]   58  170  251   31  982  960  208  265  387   389 #>  [676,]  127  777  638  839   48  194  225  715  671   261 #>  [677,]  416   85   35  898  209  418   64  456  658   272 #>  [678,]  366   76  313  943  234  527  989  105  650   528 #>  [679,]  983  199  174  345  369  121  437  710  259   452 #>  [680,]  389   45  686  442  839  251  801  319  172   693 #>  [681,]  487  207  273  956  560  657  396  524  768   855 #>  [682,]  223   86  998   61  285  371  921  163  466   341 #>  [683,]  875  764  270  757  282   21  806  748  362    87 #>  [684,]  628  967  785  204  869  877  536  518  357   417 #>  [685,]  548  253  934  516  882  413  111  881  298   177 #>  [686,]   15   25  265  170  351  839  680  433  208   863 #>  [687,]  651  508  738  939  595  141  910  727  806   419 #>  [688,]  793  734  769  740  215  812  480  105  244   622 #>  [689,]  914  203   21  937  430  616  184  909   51   847 #>  [690,]  730  738  248  517  350  931  256  989  687   703 #>  [691,]  394  727  687  651 1000  419  478  282  103    84 #>  [692,]   87  748  165  757  572  875  471  393  308   873 #>  [693,]  400  944  465  319  557  532  401  446  345   680 #>  [694,]  978  488  179   34  312  752  258  622  720   491 #>  [695,]   81   44  429  818  421   89  872  176  559   941 #>  [696,]  402  510  841  520  185  390  129  186  509   713 #>  [697,]  486  976  237   18  144  905  668   95  388   545 #>  [698,]  596  895  846  214  947  701  721  888  773   148 #>  [699,]  811  701  895  805  565  773  272  196  846   560 #>  [700,]  817   30  242  731  310  161  986  493  788   574 #>  [701,]  811  699  895  196  467  773  888  846  805   698 #>  [702,]   61  126  563  573  614  682  998  285  371   792 #>  [703,]  804  138  305   11  737  132  730   50  738   145 #>  [704,]  324  270  616  783  737   21  184  751  937   526 #>  [705,]  451  414  717  967  183  877  286  536  684   417 #>  [706,]  593  975  279  326  235  245  120  189  996   754 #>  [707,]  927  422  309  796  952  387  999    3  789    19 #>  [708,]  243  338  250  969  221  346   73  672  591   166 #>  [709,]  287  210  977  794  427  928  212  525   55   781 #>  [710,]  452  437  245   14  754  711  590  199  600   121 #>  [711,]  335  452  643  641   14  648  100  710  883   848 #>  [712,]  395   97  452  575  360  437  638  335  121   361 #>  [713,]  970  509  728  963  520  860  296  623  521   758 #>  [714,]  621  128  783  585  831  184  912  475  267   904 #>  [715,]  777  361  217  568  676  823  671  808  263   953 #>  [716,]  105  528  622  179  767  605  742  752  598    26 #>  [717,]  705  967  451  877  414  286  536  639  860   684 #>  [718,]  416  384  658  380  418   85  417  469  744    75 #>  [719,]  549   91  555  288  567  968  286  497  827   385 #>  [720,]  813  449  301  851  537  488   42  803  980   304 #>  [721,]  916  214  698  832  131  596  846  156  444   773 #>  [722,]  257  919  160  255  316  197  773  880  506   891 #>  [723,]  158  230  150  339  753  792  921  770  296    74 #>  [724,]  765  479  940  581  759   22  473  123   69   495 #>  [725,]  424  838  173  865  850  982  675  208  431   265 #>  [726,]   36  178  541   75  472   85  543  964  718   416 #>  [727,] 1000  485  651  478  415  954  538  275  687   282 #>  [728,]  713   67  963  137  129  970  278  623  758   373 #>  [729,]  490  579  525  439  885  169  897  854  781   210 #>  [730,]  690  703  350  114  804  738   50  989  124   138 #>  [731,]  242  493  635   77  700  315  907  574  310   144 #>  [732,]  669  825  426  785  352  285  913  628   53   264 #>  [733,]  984  992  108   88  581  197  364  556   22   151 #>  [734,]  429  661  480  559  943  793  872  410  276   140 #>  [735,]  168  529  607  993  802  379  990  924  887   299 #>  [736,]  511  874  611  893  612   52  803  949  879    67 #>  [737,]   11  704  448  270  132  324   50   65  804   850 #>  [738,]  910  640   71  320  248  219  687  939  517   268 #>  [739,]  957   46  161   30  857  155  423  404  859   205 #>  [740,]  812  622  215   79  237  578  793  976  752   762 #>  [741,]  553  743  404  484  807  797  790  112  290   349 #>  [742,]  527   18   95  313  234  605  854  474  668   762 #>  [743,]  807  553  741  112    5  962  349  797  484   535 #>  [744,]  135  658  898  416  283  718  243  623  456   338 #>  [745,]  836   70  306  900  615  569  457  664   24   554 #>  [746,] 1000  904  570  222  884  394   84  727  764   691 #>  [747,]  935  871  386  654  325  902  966  106  227   937 #>  [748,]  757   87  408  692  875  751  909   21  634   308 #>  [749,]  318  194  462  798  908   20  274  539  761   187 #>  [750,]  399  532  856  343   19  136   57  117  342   507 #>  [751,]  616   87  937   21  909  748  902  644  270   692 #>  [752,]  622  179  978  598  740  663  668  694  976    26 #>  [753,]  230  192  723  150  409  110  158  292  126   792 #>  [754,]  245  600  593  710  823  326   14  437  279   121 #>  [755,]   70  306  836  506  745  626  428   59  269   160 #>  [756,]  938  453  902    2  783  782  871  184   25   704 #>  [757,]  748  875  408   87  692  219  471  381  683   270 #>  [758,]  296  901  186  509  339  292  728  406  515    74 #>  [759,]  948  123  356  608   22  871  332  435   69   581 #>  [760,]  546  952  422  387  557  974  547  944  531    19 #>  [761,]  462  604  489  749  897  169  918  854  580   602 #>  [762,]  578  605  188   90   43  870  918  604  812    79 #>  [763,]  497   92  307  827  961  655  555  817   91   788 #>  [764,]  683  875  222  806  475  757  748  270  282   408 #>  [765,]  724  479  581   22  759  940  123  733  473   435 #>  [766,]  107  125  911  171   79   52  949  140  612   304 #>  [767,]  982  424  528  228  716  838  649  742   18    26 #>  [768,]  441  560  844  971  443  141  195   44  833   231 #>  [769,]  215  613  480  481  105  513  740  429    7   650 #>  [770,]  158  792  614  723  970  841  639  713  509   963 #>  [771,]  329  852  681  843  657  956  524  672  221   207 #>  [772,]  876  438  890  164  512  238  636  118  779   153 #>  [773,]  811  916  257  701  197  699  316  698  722    88 #>  [774,]   42  828  648  821  987  190  851  643  892   834 #>  [775,]  653  102  472   60   41  830  152  107  864   606 #>  [776,]  218  643  501   80  606  864  663  190  774   926 #>  [777,]  715  676  671  225  568  217  127  808  370   867 #>  [778,]  942  255  919  213  654  322  992   37  891   325 #>  [779,]  164  439  865  636  729  438  169  173  490   579 #>  [780,]  428  942  160  894  673  213  778   72  457    70 #>  [781,]  542  525  210  427  729  305  358  362  115   640 #>  [782,]    2  407  225  667  938  568  671  386  955   839 #>  [783,]  184  704  756  937   21  585  831  270  902   938 #>  [784,]  323  886  634  947  200  166  596    9  275   378 #>  [785,]  869  628  684  518  352  896  204  357  338    53 #>  [786,]  124   33  350  989   62  527  939  334  253   664 #>  [787,]  369  983  679  174  201  259  563  345  199   371 #>  [788,]  817  961  700  161   30  242   66   77  310   635 #>  [789,]    3  333  988  707  309  228  796  960   68   900 #>  [790,]  484  436  741  467  196  290  349  553  592   807 #>  [791,]   94  561  227  495  148  365  966    9  947   357 #>  [792,]  158  126  770  723  192  509  753  970  614   341 #>  [793,]   16  812  578  740  870  762  622  276  872    79 #>  [794,]  212   83  885  210  525   78  870  559  872   577 #>  [795,]  256  440  176  818  939   59  363  248  508   350 #>  [796,]  328  117  856   19  387  422  707  229  454   247 #>  [797,]  975  540  656  279  120  484  741  354  743   290 #>  [798,]  662  425  749  897  462  814  548  187  854    49 #>  [799,]  889  231  494  171  610  403  840  353  594   516 #>  [800,]  635  246   77  731  493  994  242  315  109   455 #>  [801,]  389  172  251  680  675  442  686  531  170   265 #>  [802,]  990  168  153  607  512  299  529  412  924   379 #>  [803,]  813  893  301  537  449  720  162  610  494   980 #>  [804,]  138   50  703  132   11  737  313  850   76   145 #>  [805,]  418  196  467  272  895   35  565  699  701   209 #>  [806,]  910  640  408  651  317  757  538  115  683   282 #>  [807,]  743  342  507  112  741  962  399  484  553   535 #>  [808,]  922  294  627  339  122  113  393  777  217   715 #>  [809,]  100  883  848   42  851  459  619  711  643   774 #>  [810,]  881  476  111  302  413  284  516  807  548   274 #>  [811,]  699  773  257  701  565  916  560  505  272   316 #>  [812,]  740   79  578  793  622  762   16  582   43   215 #>  [813,]  720  449  301  803  918  851  537  821   43   980 #>  [814,]  897  662  268   83  602  798   49  445  425   885 #>  [815,]  261   48  233  289  194  142  127  454  955   318 #>  [816,]  542  355  305  362  781   65  358  703   11   737 #>  [817,]  700  788   30  161  961  310  242   46  731   349 #>  [818,]  440  176  695   44   81  429  661  248   89   795 #>  [819,]  589  182  646  552  829  663   26  240  260   118 #>  [820,]  944  319  546  401  465   22  123  332  343   435 #>  [821,]   43  188   23   90  828  774   79  918  539   604 #>  [822,]  498  858   96  755   59  374   66  297  866   626 #>  [823,]  754  437  715  867  600  777  452  121  339   361 #>  [824,]   98  827  763  788  310  961  463  493  497    91 #>  [825,]  913  285  998  357  466  669  561  536  163   985 #>  [826,]   29  929  530  470  110  884  292  143  515   346 #>  [827,]  497  719  763   91  541  567  555  502  933    36 #>  [828,]  987  892  774  648  834  821  539   42  188   598 #>  [829,]  240  589   26  649  598  575  646  496  892   668 #>  [830,]   60  218   93  304  102  373  190  864  859   776 #>  [831,]  608  783  356  756  128  267   25  714  585   184 #>  [832,]  916  721  396  773  699  131  811  316  846   906 #>  [833,]  959  441  768  134  560  866  626  971  257   811 #>  [834,]  987  289  504  828  641  892  202  648  191   551 #>  [835,]  958    8  577  116  421  517  595  951  212   661 #>  [836,]   70  306  745  615  664  891   37  269    4   900 #>  [837,]  367  412   32  294  122  398  890  360  991   382 #>  [838,]  424  982  649  173  865  281  725  228  908   767 #>  [839,]  170  676  955  261  265  782  127  407  225   686 #>  [840,]  458  594  861  403  629  965   40   64  799   889 #>  [841,]  402  186  696  390  520  770  713  509  970   296 #>  [842,]  314  167  630  880   51  972  443  298  468   979 #>  [843,]  266  977  771  928  709  511  329  116  212   862 #>  [844,]  995  423  768   89  971  936  231  171  866   155 #>  [845,]  535    4  404  112  458  741  322  891  413   505 #>  [846,]  895  888  698  617  701  467  196  699  899   805 #>  [847,]   51  979  630  298  665  842  167  203  334   314 #>  [848,]  100  883  809   14  711  963  459  920  643   390 #>  [849,]  411  973  636  382  837  890  118  523  438   930 #>  [850,]  173  865   11  226  580  448   65  737  145   804 #>  [851,]  301  304  720  809   42  459  774  813  449   373 #>  [852,]  771  329   84  321  221  262  419  396  862   672 #>  [853,]  140  421  582  949  125  171  874   81  911   695 #>  [854,]  579  462  897  489  798  662  169  605  761   814 #>  [855,]  273  971  441  959  956  768  833  176   44    81 #>  [856,]   19  117  328  750  343  399  796  229  136   340 #>  [857,]  423  514  866   41  936  739  102  917  859    96 #>  [858,]  374   66  513  613  564    7  650  822   24   486 #>  [859,]  155  423  205  102  404  190  957  157  864   995 #>  [860,]  623  877  963  970  521  469  417   74  384   713 #>  [861,]  458  629   40  840  403  594  492   64  484   476 #>  [862,]  143  884  826  346  843   29  932  311  929    84 #>  [863,]  211  953  351  637  526  175  263  217  299    25 #>  [864,]  606  501  218  205  776   80   60  190  859   830 #>  [865,]  173  850  838  226  779  439  580   11  725   424 #>  [866,]  626  857  936  423  844  971  833  995  768    96 #>  [867,]  122  360  619  823  777  603  452  294  361   883 #>  [868,]  991  361  398  341  437  367  360  614  823   770 #>  [869,]  785  518  628  204  357  684  352  365  913   617 #>  [870,]   16  918  578   43  762  604   83  872  582   813 #>  [871,]  453  747   69  935  435  902  356  227  561   123 #>  [872,]  559  582   16  870  429  695  140   78   83    71 #>  [873,]  445  425   49   12  692   87  667  798  757   471 #>  [874,]   52  736  949  893  911  612  879  171  803   511 #>  [875,]  270   87  757  748  683  692  764  637  572    21 #>  [876,]  260  772  118  646  649  238  584  890  438   982 #>  [877,]  860  417  967  921  536  684  717  996  469   204 #>  [878,]  951  517  931    8  835  958  241  577   56   116 #>  [879,]  494  330  893  889  874  456  434  610   64    35 #>  [880,]  443  630  195  842  298   51  847  314  891   257 #>  [881,]  111  274  810  882  302  476  516  685  548   318 #>  [882,]  274   95  881   23  685  905  111  253   90   359 #>  [883,]  848  100  809   14  920  619  963  711  867   296 #>  [884,]  826   29  110    1  311  519  222  530  200   929 #>  [885,]  268  525   71  794   83  814  897   49  729    78 #>  [886,]  634  909  644  323  308  200  784  430  475   275 #>  [887,]  645   32  379  470  529  607  530  299   28   168 #>  [888,]  467  846  196  895  701  899  698  151  432   617 #>  [889,]  799  231  494  171  840  610  594  403  353   207 #>  [890,]  438  238  412  118  837  360  652  281  122   398 #>  [891,]    4   37  322  413  535  845  306  269  298    70 #>  [892,]  828  668  987  598  496  648  834  504  605   188 #>  [893,]  301  803   52  373  611  304   67  736  494   137 #>  [894,]  673  780  428  457   33   72  216  160  213   942 #>  [895,]  846  701  467  698  888  196  805  699  617   418 #>  [896,]  785  352  869   53  444  617  684  518  628   591 #>  [897,]  814  662  604  798  854  462  579  602   49    83 #>  [898,]   67  744  677  416  135  658  456  728  373   879 #>  [899,]  464  888  846   75  196  895  432  151  467   617 #>  [900,]  569  554  745  457  836  664   70  306  229   988 #>  [901,]  406  758  330  659  292  375  113  515  303   162 #>  [902,]  386  938  937    2  616  935  453  756  751   747 #>  [903,]  431  624  876  164  772  528  779  767  249   865 #>  [904,]  222  570  475  764 1000  621  784  714  644   282 #>  [905,]  157  237   23  882   95  359  987  274  190   188 #>  [906,]  500   35  291  660  272  895  236  321  434   543 #>  [907,]  574  242  493  199  310  731  259  552  224   345 #>  [908,]  318  496  194   20  749  127  462  281  187   815 #>  [909,]  644  430  886  634  475  751   21  937  184   748 #>  [910,]  640  806  115  738  419  317  219  651  683   757 #>  [911,]   52  949  612  125  766  874  107  171  853   304 #>  [912,]  621  714  904  128  585  426   69  570  222   475 #>  [913,]  420  285  357  561  825  998  150  628  230   223 #>  [914,]  689  937   21  184  203  616  430  909  644   902 #>  [915,]  671  656  225  370  476  279  326  667  568   407 #>  [916,]  773  832  721  811  699  316  698  701  846   895 #>  [917,]  102  957  130  404  152  859  290  423  380   502 #>  [918,]  604   43  870  602   90  821  578  813  762   897 #>  [919,]  255  778  722  942  197  322  257  891  160   992 #>  [920,]  975  593  120  354  100   14  883  279  754   656 #>  [921,]  996  326  998  466  223  723  877  600  754   158 #>  [922,]  808  294  627  113  122  339   54  393  165   953 #>  [923,]  925  336  455  246  976   77  315  144  182   635 #>  [924,]  512  990  802  168  153  735  607  529  772   433 #>  [925,]  923  606  864  501  205  336  455  218  776    30 #>  [926,]  504  182  648  834  501  551  776  987  552   892 #>  [927,]  707  309  952  422  387  277  670  760  796   999 #>  [928,]  276  252  116   16  794  709  212  870  582   559 #>  [929,]  515   29  292  826  110  287  303  659  470    54 #>  [930,]  390  360  809  198  848  883  335  411  867   100 #>  [931,]  517  248  577  440  951   71  241  958  989   320 #>  [932,]  266  515  346  250  511  929  287  509  696   826 #>  [933,]  384  469  278  472  541  623  521  583  152   502 #>  [934,]  941  685  516  548  177  268  253  298  320   814 #>  [935,]  747  325  386  902  871  203  937  654  966   665 #>  [936,]  564  995  844  971  866  857  423  514  125    41 #>  [937,]  184  616  914   21  902  430  751  909  689   644 #>  [938,]  782  902  568    2  756  453  667  217  225   407 #>  [939,]  941  334  176  248  320  630  934  508  440   141 #>  [940,]  495  193  214  378   94  984    9  791  581   985 #>  [941,]  934  268  177   78  320   71   44  685  939   516 #>  [942,]  778  780  213  919  255  992  160  216  654   322 #>  [943,]  410  480  366  234   76  734  490  559  762   241 #>  [944,]  693  557  546  319  820  532  465  400  136   401 #>  [945,]  548  132  662  685  320  425  334  798  187   665 #>  [946,]  295  450  300  159  119  128  114  618  576   647 #>  [947,]  596  365  415  954  698  275   94  784  634   886 #>  [948,]  759  123   45   22  952  332  319  422  820   608 #>  [949,]  612  911   52  874  766  853  736  140  125   582 #>  [950,]  409  519    1  338  192  628  243  785  753   110 #>  [951,]  878    8  517  241  525  577  931  116   56   835 #>  [952,]  422  547  760  707   45  948  927  796  387   251 #>  [953,]  863  211  217  351  627  263  526  715  652   122 #>  [954,]  415  485  947  596  275   51  698  784  167     9 #>  [955,]  247  454  261  839  170  208  815    2  782   194 #>  [956,]  855  273  681  524  396  441  141  478  207   560 #>  [957,]  404  739    5   46  155  553  112  741  535   859 #>  [958,]  835  517  440  661  931  818  577  248  176   256 #>  [959,]  833  441  768  855  866  971  560  134  273   626 #>  [960,]   68  228   58  392  142  387  551  675   63   982 #>  [961,]  788  817  483  655  555  161  700  763  310    66 #>  [962,]  112  344  743    5  807  545  535  553  233   741 #>  [963,]  600  970  296  860  728  713  883  848   14   920 #>  [964,]   75   85  380  917  487   41  152  699  102   502 #>  [965,]  302  516  629  840  571  492  458   38  403   476 #>  [966,]  106  386  148  342  507  654  747  979   38   322 #>  [967,]  536  684  877  717  451  705  414  998  921   417 #>  [968,]  385  674  719  259   91  549  974  288  555   465 #>  [969,]  243  950   99  338  250  708   53  409  558   135 #>  [970,]  713  509  963  860  158  296  770  728  758   623 #>  [971,]  844  936  768  866  995  855   81  125   44   695 #>  [972,]  468  377  167  314  291  533  571  660  842   434 #>  [973,]  849  153  837  367  887  382   32  411  645   398 #>  [974,]  546  566  557  391  760  259  633  345  944   224 #>  [975,]  593  120  279  920  797  656  706  326  540   245 #>  [976,]  697  486  237  144  205  668  504  315  215   905 #>  [977,]  212  709  210  287  659  794  330  317  610   381 #>  [978,]  694  488  179  752  622   34  312   42  720   588 #>  [979,]   38  314  847   51  167  533  148  842  571   966 #>  [980,]  162  375  539  449  603  619  537  602  301   477 #>  [981,]  992  450  119  935  203  473  747  942  213   914 #>  [982,]  424  228  838  767  675  960  544  649  281   646 #>  [983,]  679  174  369  199  437  121  710  345  452   787 #>  [984,]   88  214  197  940  698  888  721  733  151   846 #>  [985,]  357  503  617  495   94  536  432  940  825   869 #>  [986,]  130  540  290   80  497  501  120  502  574   700 #>  [987,]  834  828  892  289  504  648  774  641  202   668 #>  [988,]  461  333  181  474  392  142  664  344  383    62 #>  [989,]  350  248  363  786  124  320  234  440  527   138 #>  [990,]  802  153  168  512  924  607  735  529  412   299 #>  [991,]  868  361  341  367  398  715  823  294  360   122 #>  [992,]  942  778   88  255  981  919  654  332  747   197 #>  [993,]  529  139  607  175  379  299  625  530  168   637 #>  [994,]  800  961  788  635   98   66  493  483  246    82 #>  [995,]  844  423  936   89  171  155  125  859  359   481 #>  [996,]  921  466  235  326  706  446  754  998  189   223 #>  [997,]  588  312  663  978  776  218  606  336  104   752 #>  [998,]  285  466  223  921  682  163  913   86  996   825 #>  [999,]  340  343   19  368  707  422  856  796  569   900 #> [1000,]  727  570  904  222  485  784  746  475  275   415 #>  #> $neighbor_distances #>              [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.7048266 0.8083694 0.8882599 0.9421757 1.0040249 1.0144722 1.0248596 #>    [2,] 0.2646638 0.4447534 0.4508229 0.4509399 0.4834092 0.5247719 0.5497563 #>    [3,] 0.5625080 0.7485735 0.8228400 0.8580177 0.9447221 1.0220488 1.0268545 #>    [4,] 0.2337535 0.3869610 0.3987572 0.4311430 0.4322313 0.5076585 0.5243604 #>    [5,] 0.3071985 0.4135715 0.4187607 0.4275021 0.4449949 0.4480393 0.4862072 #>    [6,] 0.8162260 1.3583798 1.5773534 1.6751377 1.8243273 1.8572698 1.8800572 #>    [7,] 0.6913829 0.7541327 0.8888739 0.9243094 0.9559779 0.9618115 0.9714105 #>    [8,] 0.5987923 0.6929355 0.7099335 0.7234910 0.7436081 0.7586708 0.7788853 #>    [9,] 0.5972976 0.6019840 0.6145234 0.6544568 0.6621461 0.7077951 0.7314612 #>   [10,] 0.8162260 1.1388998 1.5691586 1.6517703 1.7160733 1.8003366 1.8312074 #>   [11,] 0.4387941 0.4894021 0.5311648 0.5452097 0.6617801 0.6809391 0.7264780 #>   [12,] 0.3486888 0.3676536 0.4109260 0.4335793 0.4539022 0.4627766 0.5623945 #>   [13,] 1.6469234 1.7292788 1.8007623 1.8432932 1.8877758 1.9391614 1.9416047 #>   [14,] 0.3999155 0.4020145 0.4489713 0.4504919 0.4615817 0.4779987 0.5029892 #>   [15,] 0.2436403 0.3935127 0.4089076 0.5083646 0.5488945 0.6392918 0.6604720 #>   [16,] 0.3293306 0.4893257 0.5458239 0.5741937 0.5897778 0.6447046 0.6659995 #>   [17,] 0.6977377 0.8617257 1.0572980 1.1038723 1.1918617 1.2138401 1.2184243 #>   [18,] 0.5040802 0.5627145 0.5672224 0.5718031 0.6170351 0.6306272 0.6928692 #>   [19,] 0.2857866 0.2940478 0.5034045 0.5351798 0.5760647 0.5784438 0.5962825 #>   [20,] 0.2286886 0.4625997 0.4797133 0.4798772 0.5166952 0.5390328 0.5771252 #>   [21,] 0.3915093 0.4433784 0.4566071 0.4575790 0.4861910 0.5110320 0.5232558 #>   [22,] 0.4862339 0.5522699 0.7315827 0.7898797 0.8151923 0.8296489 0.8669828 #>   [23,] 0.3284029 0.3912126 0.4004372 0.4007780 0.4112151 0.4410145 0.4468764 #>   [24,] 0.4052950 0.5732842 0.6229928 0.6652722 0.6817741 0.7026462 0.7338538 #>   [25,] 0.3843435 0.4089076 0.4893418 0.6487378 0.6911578 0.7590991 0.7672499 #>   [26,] 0.5589624 0.6996202 0.7212007 0.7595346 0.7693359 0.7742780 0.8258053 #>   [27,] 0.5874171 0.7553784 0.8066190 0.9306648 0.9755979 1.0063360 1.0732831 #>   [28,] 0.5737651 0.5889834 0.6094010 0.6560304 0.7157484 0.7175131 0.7469774 #>   [29,] 0.3036663 0.5015118 0.5242928 0.6236399 0.7883728 0.8257304 0.9218299 #>   [30,] 0.4241206 0.5605815 0.6033279 0.6619944 0.6658839 0.6841600 0.7411967 #>   [31,] 0.7023488 0.7160217 0.8238013 0.8848219 0.9756494 0.9797639 0.9837719 #>   [32,] 0.5225561 0.5611636 0.5643889 0.6709421 0.6924779 0.7095881 0.7157484 #>   [33,] 0.5907024 0.5912506 0.6060134 0.6538817 0.7120533 0.8081701 0.8266657 #>   [34,] 0.7235467 0.7685739 0.7745123 0.8247635 0.8285483 0.9214560 0.9243558 #>   [35,] 0.4614993 0.4723733 0.4747357 0.5278493 0.5339777 0.5495823 0.6000009 #>   [36,] 1.0280044 1.3326072 1.4438542 1.4950672 1.5100762 1.5186078 1.5462172 #>   [37,] 0.3299522 0.3549475 0.4322313 0.4429551 0.5124888 0.5439571 0.5654315 #>   [38,] 0.2847934 0.4855697 0.4862419 0.4930848 0.4956664 0.5022562 0.5031505 #>   [39,] 1.2646007 1.2969284 1.3367225 1.3488551 1.4737490 1.4945992 1.5523904 #>   [40,] 0.3035479 0.3186834 0.3551038 0.4236751 0.4554516 0.4722940 0.4805071 #>   [41,] 0.4353166 0.5238137 0.6346238 0.7027129 0.8082479 0.8549699 0.8945612 #>   [42,] 0.3158758 0.4122767 0.5134259 0.5156644 0.5397715 0.5698328 0.5908687 #>   [43,] 0.3112028 0.3118351 0.3385731 0.3728544 0.4352734 0.4380835 0.4468764 #>   [44,] 0.3042617 0.4165118 0.4180805 0.5900513 0.6286326 0.6854924 0.7085806 #>   [45,] 0.6570087 0.6574265 0.7661296 0.7933378 0.7996498 0.8144727 0.8169656 #>   [46,] 0.4739766 0.5013117 0.6193471 0.6287011 0.6384725 0.7145823 0.7185547 #>   [47,] 0.8716038 1.1291670 1.2601548 1.2731740 1.4309672 1.5484044 1.6242022 #>   [48,] 0.3418835 0.3449666 0.3816936 0.3847305 0.3990696 0.4634436 0.4700327 #>   [49,] 0.1960542 0.3481627 0.4300678 0.4569880 0.4627766 0.5043400 0.5348194 #>   [50,] 0.5048296 0.6151931 0.7414556 0.7697675 0.7865517 0.7933014 0.8135147 #>   [51,] 0.3107841 0.3815946 0.4300301 0.4810555 0.4820274 0.4976498 0.5715760 #>   [52,] 0.4401777 0.4851220 0.5566957 0.5749747 0.5953573 0.6111659 0.6666715 #>   [53,] 0.8284443 0.9455623 1.0445572 1.1584753 1.2246511 1.2271954 1.2533244 #>   [54,] 0.5165410 0.5483363 0.5577906 0.5610397 0.6063109 0.6596769 0.6916249 #>   [55,] 0.3401918 0.3740531 0.5727056 0.7549157 0.8370006 0.8412854 0.8601071 #>   [56,] 0.7918233 0.8732220 0.9036908 0.9597329 0.9924884 1.1504494 1.1632732 #>   [57,] 0.3175616 0.3724500 0.4292543 0.4828516 0.4994282 0.4997180 0.5676278 #>   [58,] 0.4791532 0.5493708 0.5503179 0.6035151 0.6610069 0.6694261 0.7053166 #>   [59,] 0.6290930 0.9289136 0.9689169 0.9733285 1.0257024 1.0359829 1.0698120 #>   [60,] 0.1793892 0.4433549 0.5704134 0.6528788 0.6883512 0.7304316 0.7677203 #>   [61,] 0.6116325 0.6763739 0.6778514 0.6978583 0.7198049 0.7402864 0.7830806 #>   [62,] 0.3478599 0.3490601 0.3556601 0.4149381 0.5310006 0.5597738 0.6224384 #>   [63,] 0.3444005 0.5210476 0.5378630 0.5725214 0.5962825 0.6565383 0.6822445 #>   [64,] 0.2266562 0.3956464 0.4746320 0.4763757 0.4905728 0.5245846 0.5899013 #>   [65,] 0.5080052 0.7771783 0.8011727 0.8205875 0.9891684 1.0671992 1.0835386 #>   [66,] 0.8743386 1.0018150 1.1016418 1.1232248 1.1248432 1.1419690 1.1658660 #>   [67,] 0.3534918 0.5119499 0.5529916 0.5719831 0.5959716 0.6538127 0.7144411 #>   [68,] 0.4588987 0.5010224 0.5109920 0.5944829 0.6216318 0.6928692 0.6936148 #>   [69,] 0.5602409 0.6469960 0.7002396 0.7106937 0.7325301 0.8068203 0.8211363 #>   [70,] 0.2020652 0.2218200 0.4595513 0.6095924 0.6650239 0.6690871 0.6998387 #>   [71,] 0.3062630 0.4370194 0.4648428 0.4746678 0.5015561 0.6170349 0.6515960 #>   [72,] 0.6308904 0.7111541 0.7114052 0.7174661 0.7458210 0.7520065 0.7886171 #>   [73,] 0.4637712 0.7955241 0.8066526 0.8093809 1.0033759 1.0384308 1.0415756 #>   [74,] 0.4819553 0.5052221 0.5255958 0.5520613 0.5833905 0.6326745 0.6415663 #>   [75,] 0.7557878 0.7656519 0.7914277 0.8048466 0.8943719 0.9215540 0.9592574 #>   [76,] 0.5677734 0.6241592 0.6257073 0.6401146 0.6488231 0.6922880 0.7164694 #>   [77,] 0.4402712 0.4445392 0.4796866 0.5374811 0.5765453 0.7042095 0.7100582 #>   [78,] 0.4369430 0.4746678 0.5246621 0.5705223 0.5949956 0.6440177 0.6726832 #>   [79,] 0.4590312 0.4811924 0.4847473 0.4859729 0.4906804 0.5147732 0.5902184 #>   [80,] 0.2734565 0.4826327 0.5053076 0.5955601 0.5985745 0.6196470 0.6214573 #>   [81,] 0.2202836 0.3042617 0.5492871 0.6267163 0.6952081 0.7114169 0.7539298 #>   [82,] 1.1691834 1.3014405 1.3326076 1.3625383 1.4254770 1.5510179 1.5517087 #>   [83,] 0.3844678 0.4266016 0.4934404 0.5010035 0.5011315 0.5246621 0.5409899 #>   [84,] 0.8915097 1.1654770 1.1700043 1.3160452 1.3369395 1.4012029 1.4224582 #>   [85,] 0.4650003 0.5372201 0.7173710 0.7750321 0.8502619 0.8524977 0.8613864 #>   [86,] 0.4552099 0.5632050 0.6270920 0.6319328 0.6451453 0.6526862 0.6801134 #>   [87,] 0.2697039 0.2989971 0.3722417 0.3864791 0.3979419 0.5044755 0.5115880 #>   [88,] 0.5890583 0.6303962 0.6972553 0.8012599 0.8484478 0.8800725 0.8999855 #>   [89,] 0.4085959 0.6081224 0.6106471 0.6470521 0.6488359 0.6704771 0.7069878 #>   [90,] 0.2682098 0.3385731 0.3977697 0.4007780 0.4088687 0.4110661 0.4334255 #>   [91,] 0.2751204 0.5993097 0.7266816 0.7926226 0.9236902 1.0381235 1.0600730 #>   [92,] 0.3414077 0.6613483 0.7949358 0.9309210 0.9628605 1.0047288 1.0271264 #>   [93,] 0.4188806 0.4482251 0.4985003 0.5105230 0.5590794 0.6109957 0.6160324 #>   [94,] 0.2915407 0.4006096 0.5662374 0.5703396 0.6104983 0.6254522 0.6571560 #>   [95,] 0.3570338 0.4294050 0.4334255 0.4494573 0.4615580 0.4654187 0.4721043 #>   [96,] 0.8064250 0.8357599 0.8473472 0.8582234 0.8847025 0.9628605 0.9966873 #>   [97,] 0.3610341 0.3774352 0.4789762 0.4862033 0.5030681 0.5503179 0.6050880 #>   [98,] 1.0499795 1.0643079 1.2747939 1.2884228 1.3809873 1.4183431 1.4441306 #>   [99,] 0.8425571 1.0012882 1.0613208 1.1160400 1.2090369 1.2196290 1.2271954 #>  [100,] 0.1719823 0.2005349 0.3995663 0.4020145 0.5419647 0.5490831 0.5606193 #>  [101,] 0.2832737 0.4051340 0.4424304 0.5553900 0.5557919 0.5561115 0.6074579 #>  [102,] 0.5238137 0.5270508 0.5384865 0.5802341 0.6482590 0.6528788 0.7393022 #>  [103,] 0.7780846 0.9160502 1.0251646 1.0758883 1.2273985 1.3250280 1.3650345 #>  [104,] 0.8402520 0.9372123 0.9846061 1.1511613 1.2117447 1.3488551 1.3855672 #>  [105,] 0.6289333 0.8665598 0.8765106 0.9286206 0.9619865 0.9700839 0.9714105 #>  [106,] 0.2661266 0.2988244 0.3085853 0.3724500 0.4407825 0.4594065 0.5107381 #>  [107,] 0.4815630 0.7025629 0.7512546 0.8192894 0.8972547 0.9296012 0.9443613 #>  [108,] 0.9098251 0.9994496 1.0043093 1.0074580 1.0819849 1.2459773 1.3049420 #>  [109,] 0.8127954 0.8848219 1.0958495 1.1919957 1.2672147 1.2879393 1.3004464 #>  [110,] 0.3765864 0.5735751 0.6231267 0.6317110 0.6976519 0.7089059 0.7372494 #>  [111,] 0.2312386 0.3439918 0.3618488 0.3632050 0.3725628 0.3938001 0.4741794 #>  [112,] 0.2479778 0.3071985 0.3768641 0.3914624 0.4080576 0.4565760 0.4807659 #>  [113,] 0.3536279 0.4134636 0.4428247 0.4719349 0.4721957 0.5400492 0.5448039 #>  [114,] 0.4448283 0.7417602 0.7560302 0.7727866 0.8194439 0.8326412 0.8550672 #>  [115,] 0.3670521 0.4335027 0.4463284 0.5121596 0.6746002 0.6782024 0.7550491 #>  [116,] 0.7586708 0.7918233 0.8495530 0.8584823 0.8656548 0.8673209 0.8829771 #>  [117,] 0.2824080 0.3407325 0.5028377 0.5034045 0.5364504 0.5724725 0.6111820 #>  [118,] 0.6011015 0.6568896 0.6970957 0.7760345 0.7873279 0.8389859 0.8612169 #>  [119,] 0.4645052 0.7627281 0.7664906 0.8466935 0.8795198 0.9012175 0.9062407 #>  [120,] 0.3015907 0.3781865 0.4005184 0.4426711 0.4985003 0.5100151 0.5129489 #>  [121,] 0.3449666 0.4175508 0.5115338 0.5185349 0.5413713 0.5454344 0.5565225 #>  [122,] 0.2218137 0.4422711 0.4834617 0.4870908 0.6026000 0.6130869 0.6203350 #>  [123,] 0.3457117 0.4862339 0.4869867 0.5838292 0.5907311 0.6927150 0.7224404 #>  [124,] 0.3859147 0.5860999 0.6060134 0.6827474 0.8100991 0.8135147 0.8984934 #>  [125,] 0.5688090 0.5920986 0.6839222 0.7025629 0.7132284 0.7472718 0.7557377 #>  [126,] 0.3214490 0.4776311 0.7167084 0.7890833 0.8072259 0.8133698 0.8167129 #>  [127,] 0.2652173 0.3418835 0.4172473 0.4641082 0.4797133 0.4834878 0.5094085 #>  [128,] 0.8132454 0.8566013 0.8912662 0.9567154 0.9995281 1.0529038 1.0892656 #>  [129,] 0.5173034 0.5385999 0.5909574 0.6495746 0.7144411 0.7530588 0.7793916 #>  [130,] 0.3016603 0.3589144 0.3798359 0.5123829 0.6620639 0.6644755 0.6849573 #>  [131,] 0.7945027 0.8052348 1.0094416 1.0380981 1.1226155 1.1483449 1.1911871 #>  [132,] 0.4773687 0.4896124 0.5876542 0.6151931 0.6152917 0.6525114 0.6617801 #>  [133,] 0.2957885 0.5998256 0.6250829 0.6819637 0.6955587 0.7119675 0.7181709 #>  [134,] 0.8466075 0.9559963 0.9653752 0.9709938 0.9928338 1.0115360 1.0325245 #>  [135,] 0.1418194 0.6279938 0.6904804 0.7189922 0.7214698 0.8149124 0.8672728 #>  [136,] 0.3444005 0.3513501 0.4608625 0.5105701 0.5202147 0.5617529 0.5724725 #>  [137,] 0.3534918 0.3892923 0.5173034 0.5489988 0.5815853 0.6398496 0.6930631 #>  [138,] 0.4773687 0.4978547 0.6620687 0.6726346 0.6922880 0.7011757 0.7414556 #>  [139,] 0.4446937 0.4528535 0.5435197 0.5998256 0.6946994 0.7683952 0.7739046 #>  [140,] 0.3638288 0.4680880 0.6973555 0.7250861 0.7494283 0.7619575 0.7656392 #>  [141,] 0.5383358 0.5900513 0.6787596 0.7081918 0.7108781 0.7493679 0.7631740 #>  [142,] 0.2109421 0.3381355 0.4371760 0.4410435 0.5464723 0.5576133 0.5636682 #>  [143,] 0.9889649 1.0560097 1.1533725 1.1601190 1.2254556 1.2703172 1.3124793 #>  [144,] 0.2954659 0.4437187 0.4796866 0.5504881 0.6164471 0.6256895 0.6496666 #>  [145,] 0.5080052 0.8341716 0.8432496 0.9130185 0.9294930 0.9832351 0.9880707 #>  [146,] 1.4565224 1.7843633 1.7996840 1.8705359 1.8760104 1.8799524 1.9060669 #>  [147,] 0.9372123 1.0059526 1.1388661 1.3188446 1.3606501 1.3640721 1.5037697 #>  [148,] 0.4468204 0.5485547 0.5751650 0.5758143 0.6294308 0.6353628 0.6354754 #>  [149,] 0.8402520 1.0644100 1.1333596 1.2646007 1.3188446 1.3367809 1.4007968 #>  [150,] 0.3891018 0.4304763 0.4883660 0.4925399 0.5255958 0.6052847 0.6073665 #>  [151,] 0.3124576 0.7553784 0.7786041 0.9153356 0.9816910 0.9895036 1.0228704 #>  [152,] 0.4181309 0.4396069 0.5606495 0.7003802 0.7263227 0.8679645 0.8940518 #>  [153,] 0.5745431 0.6589509 0.8750195 0.8975972 0.9072083 0.9513614 0.9557934 #>  [154,] 1.0687995 1.2359980 1.5919794 1.6551029 1.8572032 1.8726503 1.9143099 #>  [155,] 0.3525775 0.4188517 0.4430698 0.5028352 0.5053819 0.5655088 0.5838935 #>  [156,] 0.3304958 0.4964543 0.6085589 0.7224517 0.7508667 0.7620922 0.7791763 #>  [157,] 0.3737895 0.3898532 0.4004372 0.4822703 0.5067166 0.5655088 0.5766819 #>  [158,] 0.2298626 0.4305420 0.4738325 0.5797168 0.6287894 0.6676141 0.6826555 #>  [159,] 0.5807290 0.7780846 0.8875493 1.0127100 1.1450179 1.1916313 1.2690950 #>  [160,] 0.4289125 0.5011922 0.5540639 0.6948436 0.7208311 0.7520065 0.8818430 #>  [161,] 0.4241206 0.6107870 0.6229928 0.6529928 0.7129272 0.7185547 0.7243970 #>  [162,] 0.3859954 0.4109260 0.4555023 0.4626248 0.4633659 0.4918698 0.5110051 #>  [163,] 0.4552099 0.4855611 0.5240031 0.6194519 0.7022538 0.7035018 0.7373904 #>  [164,] 0.5278035 0.7871674 0.9289076 0.9783975 1.0084421 1.0511804 1.0655496 #>  [165,] 0.3799644 0.3806210 0.3934462 0.4135310 0.4970086 0.5115880 0.5358688 #>  [166,] 0.5511508 0.6390218 0.6504903 0.7225953 0.7955241 0.8164118 0.8319241 #>  [167,] 0.2105175 0.3815946 0.3900844 0.4083693 0.4314051 0.4369799 0.4537252 #>  [168,] 0.5598617 0.6075112 0.6221261 0.6616265 0.6686554 0.9067763 0.9191234 #>  [169,] 0.4829863 0.5799477 0.5957137 0.5966500 0.6040105 0.6383378 0.6721866 #>  [170,] 0.2656860 0.3399969 0.4277456 0.4720053 0.5953922 0.6416989 0.6518913 #>  [171,] 0.4612447 0.4740072 0.4972074 0.5100298 0.5698245 0.6111659 0.6466797 #>  [172,] 0.6097647 0.6132011 0.6296337 0.6743795 0.8499388 0.8502969 0.8613284 #>  [173,] 0.2503394 0.2994409 0.5889596 0.6348820 0.7158948 0.7264780 0.8250275 #>  [174,] 0.3672958 0.4160685 0.4725977 0.5723332 0.5830259 0.7428737 0.7919458 #>  [175,] 0.3196900 0.5194182 0.5298376 0.5435197 0.5572317 0.5750432 0.5840255 #>  [176,] 0.4165118 0.5049022 0.5466477 0.6267163 0.6787596 0.6830429 0.7427972 #>  [177,] 0.4497791 0.5191472 0.5219601 0.5395790 0.5416235 0.6160995 0.6362140 #>  [178,] 0.9989923 1.0082055 1.1357055 1.1672237 1.1891288 1.2180572 1.2978906 #>  [179,] 0.4670087 0.5287582 0.5334193 0.5478272 0.5721634 0.5743282 0.6294766 #>  [180,] 0.7664906 0.8228400 0.8585636 0.8969156 0.9115949 1.0017615 1.0335018 #>  [181,] 0.1362916 0.3588431 0.4794574 0.5286231 0.5310006 0.5579764 0.5622382 #>  [182,] 0.4579561 0.6701687 0.6773683 0.6883186 0.6996202 0.7164687 0.7429378 #>  [183,] 0.7755421 0.8804326 0.9078180 1.1672237 1.1684649 1.1729379 1.2657212 #>  [184,] 0.3119060 0.4224714 0.4575790 0.4683933 0.5423035 0.5515163 0.5919193 #>  [185,] 0.5909574 0.6332117 0.6853056 0.7348973 0.7398255 0.7435528 0.7496748 #>  [186,] 0.5069319 0.5264586 0.5577906 0.5580674 0.6443203 0.7141846 0.7309459 #>  [187,] 0.3943873 0.3955992 0.4359817 0.4794574 0.4972336 0.5284220 0.5321714 #>  [188,] 0.2682098 0.3284029 0.3530090 0.3678781 0.3728544 0.4075196 0.4294050 #>  [189,] 0.2991949 0.3692605 0.5451733 0.5594507 0.5624723 0.6126309 0.6801919 #>  [190,] 0.3898532 0.5403542 0.5727275 0.6038711 0.6124425 0.6162748 0.6253421 #>  [191,] 0.4279815 0.4480237 0.4493396 0.4829012 0.4842416 0.4862033 0.4921528 #>  [192,] 0.3214490 0.5980038 0.6570703 0.8534005 0.9127974 0.9277686 0.9352843 #>  [193,] 0.3394844 0.3853540 0.5972976 0.6104983 0.6413421 0.6960078 0.7603939 #>  [194,] 0.2752557 0.4161253 0.4172473 0.4176578 0.4396160 0.4940575 0.4972336 #>  [195,] 0.2578455 0.4328642 0.6321894 0.6537618 0.6839005 0.7108781 0.7116276 #>  [196,] 0.2791779 0.4024938 0.4860003 0.5316131 0.5517135 0.5688071 0.5936018 #>  [197,] 0.5488358 0.5890583 0.5960984 0.6170807 0.6979232 0.7174303 0.7531728 #>  [198,] 0.6311555 0.6573906 0.7012529 0.7290197 0.7398255 0.7983180 0.8183816 #>  [199,] 0.3642713 0.5072499 0.5454344 0.5506138 0.5703296 0.5830259 0.6540970 #>  [200,] 0.4726632 0.5489127 0.5812676 0.6390218 0.6806105 0.6894002 0.7998378 #>  [201,] 0.8613284 0.8640089 0.8871901 1.0109677 1.0149250 1.0495105 1.1598583 #>  [202,] 0.2164501 0.2860089 0.3381355 0.4283662 0.4480237 0.4736562 0.4737440 #>  [203,] 0.3527183 0.4759184 0.5130482 0.5664733 0.5982752 0.6008386 0.6296641 #>  [204,] 0.4037595 0.4106354 0.4734001 0.5075357 0.6279512 0.6381214 0.6766374 #>  [205,] 0.4613472 0.5733389 0.6536408 0.6658839 0.7161500 0.7405805 0.7691944 #>  [206,] 0.7557748 1.9032298 1.9909608 2.0085635 2.1575094 2.1825889 2.2086869 #>  [207,] 0.5352316 0.5703028 0.6775417 0.8012966 0.8110856 0.8860435 0.8907570 #>  [208,] 0.3399969 0.5087585 0.5108792 0.5812280 0.6684315 0.7307516 0.7418706 #>  [209,] 0.2266562 0.4415222 0.5105230 0.5281845 0.5290100 0.5508943 0.5960563 #>  [210,] 0.5144181 0.6123625 0.6639630 0.6989697 0.7102417 0.7557781 0.7588572 #>  [211,] 0.2442281 0.3479301 0.4439951 0.4642895 0.4872823 0.5358688 0.5773974 #>  [212,] 0.4894648 0.5949956 0.6911686 0.6929355 0.6989893 0.7356213 0.7939766 #>  [213,] 0.3559836 0.4992742 0.5002217 0.5591558 0.5654315 0.5836867 0.5955450 #>  [214,] 0.5745717 0.5981669 0.6085589 0.6228606 0.6447953 0.6589045 0.6828360 #>  [215,] 0.4768436 0.5065259 0.5627565 0.7367339 0.7530721 0.7609732 0.7615598 #>  [216,] 0.3559836 0.4424304 0.4907152 0.4921030 0.5727925 0.5907024 0.6593339 #>  [217,] 0.3052188 0.4374722 0.4523524 0.4868032 0.5092464 0.5101514 0.5210982 #>  [218,] 0.3974524 0.4433549 0.4991711 0.5081086 0.5470574 0.6239051 0.6253421 #>  [219,] 0.4592319 0.4923259 0.4934713 0.5198035 0.5287760 0.5481299 0.5616279 #>  [220,] 0.9243558 0.9301088 1.1803583 1.1868249 1.2316803 1.3025945 1.3337114 #>  [221,] 0.1765483 0.6991221 0.7436371 0.8061793 0.8457712 0.8822349 0.9095427 #>  [222,] 0.4114465 0.6579970 0.7081140 0.7223757 1.0008298 1.0602373 1.0841085 #>  [223,] 0.4855611 0.5070293 0.5399607 0.5737582 0.5895435 0.6067046 0.6136829 #>  [224,] 0.5725214 0.6602495 0.7616623 0.7667874 0.8101183 0.8179785 0.8180067 #>  [225,] 0.2694920 0.2950353 0.3692134 0.3719505 0.4592028 0.4992582 0.4999803 #>  [226,] 0.3343100 0.4750387 0.4832977 0.5889596 0.6089304 0.6234424 0.6648360 #>  [227,] 0.4123463 0.4757520 0.5777199 0.5832221 0.6133775 0.6400521 0.6722586 #>  [228,] 0.4657427 0.5010224 0.5418577 0.6170351 0.6605389 0.6997621 0.7465732 #>  [229,] 0.4051340 0.4735834 0.4921030 0.5809545 0.5859734 0.6244618 0.6464568 #>  [230,] 0.3891018 0.4681615 0.4966708 0.5392035 0.5647906 0.5702987 0.5720533 #>  [231,] 0.2547535 0.3056966 0.4740072 0.5703028 0.5714908 0.5925200 0.5940281 #>  [232,] 0.9555092 1.1303360 1.1388998 1.1594726 1.2539825 1.2605820 1.2764892 #>  [233,] 0.2109421 0.2860089 0.3835569 0.4145382 0.4747144 0.5700085 0.5719874 #>  [234,] 0.5355423 0.5872310 0.6488231 0.6511711 0.6514708 0.6620687 0.6808537 #>  [235,] 0.3692605 0.4257540 0.5174856 0.5175952 0.5428824 0.5457228 0.6078203 #>  [236,] 0.5011913 0.5154095 0.5271494 0.6122418 0.6528631 0.6848110 0.7000411 #>  [237,] 0.3951226 0.4605785 0.4844073 0.4856967 0.5214682 0.5475801 0.5896545 #>  [238,] 0.5555567 0.6041729 0.6486946 0.6611702 0.7187924 0.7520435 0.7555620 #>  [239,] 0.4374822 0.9087339 0.9675360 1.0043093 1.0416752 1.1352041 1.2382200 #>  [240,] 0.3848214 0.4431134 0.6011015 0.6048017 0.6541363 0.7072750 0.7132638 #>  [241,] 0.7002668 0.8351929 0.9067863 0.9174519 0.9210116 0.9361946 0.9924884 #>  [242,] 0.2230059 0.3106024 0.5786764 0.6139568 0.6573238 0.6714148 0.7042095 #>  [243,] 0.3631836 0.7214698 0.7647506 0.7948385 0.8413211 0.8450892 0.8465010 #>  [244,] 0.8610764 0.9358077 0.9801249 0.9993196 1.0108796 1.0252545 1.0280008 #>  [245,] 0.3080751 0.3107541 0.3160396 0.3999155 0.4615110 0.5349535 0.5481820 #>  [246,] 0.5765453 0.6558690 0.7005177 0.8138565 0.8658315 0.8670046 1.0029064 #>  [247,] 0.3342053 0.4390372 0.4789193 0.4895538 0.5284220 0.5497563 0.5579764 #>  [248,] 0.5187787 0.5655398 0.5926421 0.6029241 0.6503403 0.6525829 0.7330386 #>  [249,] 0.7742780 0.8390463 0.8879565 0.8886585 0.9933613 1.0113779 1.1279124 #>  [250,] 0.8413211 0.9289766 0.9943680 1.0636714 1.1219632 1.1385667 1.1523223 #>  [251,] 0.4423658 0.4739314 0.6919364 0.7125685 0.7307516 0.7743503 0.7797978 #>  [252,] 0.7704966 0.7745123 0.9301088 0.9765920 0.9806921 1.0033158 1.0061996 #>  [253,] 0.3183395 0.3478599 0.4142914 0.4497791 0.4867866 0.5707005 0.5740675 #>  [254,] 0.6927369 1.1663722 1.3124793 1.3924713 1.6727395 1.6976233 1.7778336 #>  [255,] 0.1963591 0.4167413 0.5624760 0.5832461 0.6152891 0.6170807 0.6645390 #>  [256,] 0.3642874 0.6713886 0.8404900 0.8498604 0.8597038 0.9465393 0.9807787 #>  [257,] 0.4127776 0.4727399 0.4924958 0.6556979 0.6588958 0.6865332 0.6979232 #>  [258,] 0.4670087 0.4929666 0.5014880 0.5799477 0.6056041 0.6182922 0.6302956 #>  [259,] 0.4788930 0.7232206 0.7920760 0.8184894 0.8846523 0.8963857 0.9163078 #>  [260,] 0.3298885 0.6568896 0.6602341 0.8319435 0.8572144 0.8684830 0.8820444 #>  [261,] 0.3461297 0.3779047 0.3847305 0.4344955 0.4791532 0.5155695 0.5202147 #>  [262,] 0.4019718 0.5540441 0.6682981 0.6746002 0.7254377 0.8308921 0.8470057 #>  [263,] 0.4523524 0.4550712 0.4623505 0.5549466 0.5637004 0.5863843 0.5943596 #>  [264,] 0.2353301 0.6801134 0.7381024 0.7402864 0.7923956 0.8268060 0.8741396 #>  [265,] 0.2656860 0.4940036 0.5083646 0.5087585 0.5427427 0.6460751 0.6637709 #>  [266,] 0.6714131 0.8008904 0.9622620 1.2575237 1.2897530 1.2925865 1.3800389 #>  [267,] 0.7923956 0.8258942 0.8966985 0.9029819 1.0015818 1.0553813 1.1269123 #>  [268,] 0.3062630 0.3782222 0.4369430 0.4465721 0.4803380 0.5010035 0.5324977 #>  [269,] 0.5009687 0.5250248 0.5428234 0.5473297 0.5942332 0.5955329 0.6020509 #>  [270,] 0.3694694 0.4990745 0.5044755 0.5073828 0.5221797 0.5618657 0.6075119 #>  [271,] 2.1686806 2.2086869 2.2810268 2.3181527 2.3606029 2.4186803 2.4244825 #>  [272,] 0.3530585 0.4734049 0.4747357 0.4937261 0.5221003 0.5710723 0.6007936 #>  [273,] 0.7566811 0.9849265 1.0073145 1.0687995 1.0916150 1.2922580 1.3093768 #>  [274,] 0.2474450 0.2828653 0.3439918 0.4110661 0.4494573 0.4789884 0.5098917 #>  [275,] 0.4648660 0.5489127 0.5699855 0.5739238 0.5982141 0.6347572 0.6426404 #>  [276,] 0.6293818 0.6993759 0.8308841 0.8464172 0.8495530 0.8732220 0.9309170 #>  [277,] 0.9493566 0.9797639 1.1373486 1.1400396 1.1867739 1.1919957 1.1947125 #>  [278,] 0.5676543 0.5906277 0.6551925 0.6584415 0.6663706 0.7028327 0.7198973 #>  [279,] 0.3376254 0.3556077 0.4071768 0.4304381 0.4513943 0.5140644 0.5481116 #>  [280,] 0.4443316 1.0295641 1.0404369 1.1279124 1.1370093 1.1961986 1.2268191 #>  [281,] 0.4701398 0.4753663 0.4798772 0.5016437 0.5879416 0.6611702 0.6612903 #>  [282,] 0.5963667 0.6405775 0.7198823 0.7262374 0.7851440 0.7967534 0.8175944 #>  [283,] 0.4734001 0.4819553 0.5610950 0.6125552 0.6348908 0.6632266 0.7207668 #>  [284,] 0.3943873 0.4328513 0.4789193 0.4850523 0.5263223 0.5286231 0.5301923 #>  [285,] 0.3747992 0.5221909 0.5895435 0.6116325 0.6512875 0.6895740 0.7035018 #>  [286,] 0.6183229 0.7769803 0.7859109 0.8773568 0.9343448 0.9549166 0.9764120 #>  [287,] 0.6583572 0.7055782 0.7864954 0.8128896 0.8280572 0.8424534 0.8690105 #>  [288,] 0.6183229 0.6824711 0.6825961 0.6918185 0.7775237 0.7884203 0.7974064 #>  [289,] 0.3075964 0.3862536 0.4024244 0.4145382 0.4283662 0.4921528 0.5025113 #>  [290,] 0.1998153 0.3016603 0.4811913 0.5119983 0.5129489 0.5203712 0.5852687 #>  [291,] 0.3000201 0.4148677 0.4633867 0.4723733 0.4938870 0.5325850 0.5666957 #>  [292,] 0.5232328 0.5400492 0.5425748 0.5460978 0.5610397 0.6117036 0.6231267 #>  [293,] 0.4257540 0.4292543 0.4966009 0.5107381 0.5594507 0.6267861 0.6400521 #>  [294,] 0.2218137 0.3576403 0.4037885 0.6063109 0.6104833 0.6138500 0.6443203 #>  [295,] 0.5807290 0.6296239 0.7645480 0.9160502 0.9723325 1.0319325 1.1000059 #>  [296,] 0.3246618 0.4604986 0.5069319 0.5312717 0.5520613 0.6287894 0.6300649 #>  [297,] 1.3482078 1.4732361 1.4893027 1.5836625 1.6339643 1.6551029 1.6707667 #>  [298,] 0.2296156 0.3813579 0.5184814 0.5243604 0.5431865 0.5595356 0.5634057 #>  [299,] 0.3972822 0.4965400 0.5194182 0.6076082 0.6290822 0.6760092 0.6789478 #>  [300,] 0.4448283 0.5734645 0.7645480 0.7941773 0.8390236 0.8422752 0.8519435 #>  [301,] 0.3365770 0.4171835 0.4481301 0.4496889 0.4506818 0.4891075 0.5171006 #>  [302,] 0.2569293 0.3341905 0.3618488 0.4208733 0.4286491 0.4562478 0.4609700 #>  [303,] 0.3582576 0.4393601 0.4750677 0.4935474 0.5200496 0.6106381 0.6153815 #>  [304,] 0.3985065 0.4481301 0.5704134 0.5758475 0.6468491 0.6484340 0.6493102 #>  [305,] 0.5517353 0.6800489 0.8270838 0.8313950 0.8533623 0.8767628 0.8883322 #>  [306,] 0.2020652 0.2753051 0.4636687 0.5449661 0.5473297 0.5852984 0.6668215 #>  [307,] 0.3414077 0.3471195 0.6384725 0.7448607 0.7551961 0.8762055 0.9248971 #>  [308,] 0.3537939 0.4440057 0.4910911 0.5114391 0.5476241 0.5530247 0.5760182 #>  [309,] 0.4916895 0.5995342 0.6447800 0.7485735 0.8892563 0.9886686 0.9982018 #>  [310,] 0.5312083 0.6139568 0.6994112 0.7266816 0.7379023 0.8330002 0.8425017 #>  [311,] 0.6927369 0.8882599 1.0306228 1.0560097 1.2125442 1.3396713 1.3635505 #>  [312,] 0.4636346 0.5320051 0.7262585 0.7761523 0.7983180 0.8087218 0.9527683 #>  [313,] 0.5474971 0.5872310 0.6326847 0.6726346 0.7840795 0.7865517 0.8100991 #>  [314,] 0.3160586 0.3882206 0.4023933 0.4537252 0.4826127 0.4930848 0.5560572 #>  [315,] 0.2954659 0.4402712 0.6798214 0.6936148 0.7349776 0.7459878 0.7593610 #>  [316,] 0.6696794 0.6865332 0.6996609 0.7618664 0.7626236 0.7792351 0.8628118 #>  [317,] 0.4335027 0.4585807 0.5434027 0.5540441 0.6385622 0.6481007 0.6811298 #>  [318,] 0.2752557 0.2994951 0.3710504 0.4359817 0.5036908 0.5098917 0.5263223 #>  [319,] 0.5254022 0.6111820 0.6481640 0.6570087 0.6724047 0.6794556 0.7683324 #>  [320,] 0.4465721 0.4648428 0.5395790 0.5984565 0.6111190 0.6136581 0.6233926 #>  [321,] 0.7127578 0.7436371 0.7673176 0.8291398 0.8413863 0.8558235 1.0156060 #>  [322,] 0.4470890 0.5076585 0.5124888 0.5231660 0.5373169 0.5393927 0.5440362 #>  [323,] 0.4066972 0.4586935 0.6145234 0.6310264 0.6404431 0.6568517 0.6626158 #>  [324,] 0.4874757 0.7017439 0.7727866 0.7933014 0.8831344 0.9190963 0.9253171 #>  [325,] 0.2832737 0.4406743 0.4510282 0.4699401 0.4907152 0.5575169 0.5591558 #>  [326,] 0.4557063 0.4871143 0.4931461 0.5019206 0.5051712 0.5052221 0.5481116 #>  [327,] 0.7143952 0.7606851 0.7677387 0.7730754 0.7746293 0.7919458 0.8392739 #>  [328,] 0.2824080 0.3459307 0.3787681 0.4735834 0.5561115 0.5666532 0.5784076 #>  [329,] 1.0676613 1.5983391 1.7461672 1.8718903 1.9509921 1.9752659 1.9934865 #>  [330,] 0.2656600 0.4197421 0.4314120 0.4393601 0.5153055 0.5641456 0.6239847 #>  [331,] 0.8832363 0.9567154 1.2394640 1.4999657 1.5093249 1.5724634 1.6109561 #>  [332,] 0.3457117 0.5522699 0.6965300 0.7437559 0.7467575 0.7628491 0.7762495 #>  [333,] 0.3895432 0.4687791 0.5209139 0.5944829 0.6893626 0.7648775 0.7656143 #>  [334,] 0.4374755 0.5166567 0.5836867 0.6258101 0.6296641 0.6343839 0.6538817 #>  [335,] 0.2724458 0.4483847 0.4595417 0.5615556 0.5907221 0.6050880 0.6080600 #>  [336,] 0.4443316 0.6424847 0.8610764 0.8815996 0.9384542 0.9568739 1.0199679 #>  [337,] 0.8617257 0.8710661 0.9524282 1.0021075 1.0310961 1.0416989 1.0630547 #>  [338,] 0.3631836 0.5953177 0.6319675 0.6528631 0.7359611 0.7627102 0.8105955 #>  [339,] 0.4309298 0.4604986 0.4925399 0.4966708 0.4968930 0.5229099 0.5622740 #>  [340,] 0.5696837 0.5945664 0.6140291 0.6607465 0.6679704 0.6915614 0.7433810 #>  [341,] 0.5259341 0.6778514 0.7219848 0.7570375 0.7698148 0.8017146 0.8072259 #>  [342,] 0.2217617 0.2988244 0.3202706 0.3326814 0.4828516 0.4954094 0.6143176 #>  [343,] 0.2857866 0.4578845 0.5097455 0.5696837 0.7037830 0.7221809 0.7342913 #>  [344,] 0.2499468 0.4080576 0.5500536 0.5505802 0.5763671 0.5945664 0.6108302 #>  [345,] 0.4725977 0.5025481 0.5506138 0.6319652 0.7194182 0.7232206 0.7233274 #>  [346,] 0.7372494 0.7678418 0.7828068 0.8265162 0.8465010 0.8489286 0.8980172 #>  [347,] 0.4087473 0.4442985 0.4910911 0.4938870 0.4999916 0.5135788 0.5271494 #>  [348,] 0.3932012 0.4194612 0.4335793 0.4401427 0.4459262 0.4721957 0.4750677 #>  [349,] 0.2273583 0.3806511 0.4652016 0.4704623 0.4829322 0.5894456 0.5898104 #>  [350,] 0.1983044 0.5860999 0.5923463 0.6525829 0.6622607 0.8927730 0.9317428 #>  [351,] 0.3935127 0.4116965 0.4475573 0.4893418 0.5434911 0.5978571 0.6817049 #>  [352,] 0.6198571 0.6364684 0.6631117 0.7236107 0.7350833 0.7603939 0.8215576 #>  [353,] 0.3747890 0.4972074 0.5067166 0.5456494 0.5765121 0.5823562 0.6178335 #>  [354,] 0.4482251 0.4768116 0.4777298 0.4975465 0.5205927 0.5351490 0.5767044 #>  [355,] 0.5921002 0.8509328 0.8883322 1.3493029 1.4194159 1.5123797 1.5465838 #>  [356,] 0.6469960 0.6535593 0.6651903 0.6765484 0.7467857 0.8138460 0.8155243 #>  [357,] 0.5297576 0.5460581 0.5752158 0.6501874 0.6887962 0.6977100 0.7395676 #>  [358,] 0.4777599 0.5337423 0.5889834 0.6460212 0.6903412 0.7210871 0.8240193 #>  [359,] 0.4142914 0.5176881 0.5277014 0.6106471 0.6123415 0.6224384 0.6269097 #>  [360,] 0.4919594 0.5453030 0.5484186 0.5550756 0.6550249 0.6896709 0.7104783 #>  [361,] 0.4577316 0.5203527 0.5270669 0.5484186 0.6130869 0.6325047 0.6629479 #>  [362,] 0.5048736 0.6315611 0.6460212 0.6517485 0.7300337 0.7449540 0.7578651 #>  [363,] 0.6151594 0.6622607 0.9363069 0.9611949 0.9692649 0.9902827 1.0039163 #>  [364,] 0.6645390 0.7595542 0.7690297 0.8238071 0.8250804 0.9323085 0.9492159 #>  [365,] 0.4801832 0.5703396 0.6265655 0.6522410 0.6744898 0.6847840 0.6887962 #>  [366,] 0.6241592 0.6385163 0.6849981 0.7652407 0.8636321 0.8665598 0.8747543 #>  [367,] 0.4036686 0.4074138 0.5643889 0.5962516 0.6315293 0.7345245 0.7536984 #>  [368,] 0.5929305 0.7351369 0.8083417 0.9341815 0.9427737 1.0242711 1.0624381 #>  [369,] 0.4695051 0.4996085 0.5723332 0.6187645 0.8859597 0.8961061 0.9085786 #>  [370,] 0.3556077 0.3990696 0.4175508 0.4701749 0.5415097 0.5704060 0.5748674 #>  [371,] 0.5189913 0.6270920 0.7058054 0.7151584 0.7381024 0.7822497 0.8412011 #>  [372,] 0.1821476 0.4550712 0.5155402 0.6817049 0.7198049 0.7698148 0.7935792 #>  [373,] 0.4188806 0.5119499 0.5290100 0.5673679 0.6157251 0.6398496 0.6468491 #>  [374,] 0.6158580 0.7952401 0.8465456 0.9759081 0.9771859 1.0338753 1.0490758 #>  [375,] 0.3524337 0.3536279 0.3891551 0.4401427 0.4555023 0.4699200 0.5623945 #>  [376,] 1.2005248 1.2138753 1.3149943 1.3170209 1.3290479 1.3774349 1.4527436 #>  [377,] 0.3000201 0.3066120 0.3272235 0.3809927 0.4125014 0.4249279 0.4442985 #>  [378,] 0.3853540 0.4068972 0.4964543 0.5422557 0.6198571 0.6254522 0.6384770 #>  [379,] 0.3454563 0.3713510 0.4965400 0.5224370 0.6194128 0.6682066 0.7175131 #>  [380,] 0.3392109 0.4181309 0.6375285 0.7202229 0.7429733 0.7588076 0.7750321 #>  [381,] 0.3905628 0.4585807 0.5287760 0.6011118 0.6414148 0.6638869 0.6706265 #>  [382,] 0.6376604 0.6560304 0.7972184 0.8490657 0.8542834 0.9027296 0.9437868 #>  [383,] 0.1362916 0.3912933 0.3955992 0.4328513 0.4390372 0.5727553 0.6178691 #>  [384,] 0.3091575 0.5322739 0.5451491 0.5872667 0.6306143 0.6480375 0.6584415 #>  [385,] 0.1628608 0.7103740 1.0996304 1.1373904 1.1416821 1.1607203 1.2325702 #>  [386,] 0.3784988 0.4051373 0.4406743 0.4447534 0.4783833 0.4970822 0.5196511 #>  [387,] 0.4739314 0.5851950 0.6565383 0.6904380 0.7537516 0.8005908 0.8106037 #>  [388,] 0.4437187 0.4687791 0.5177161 0.5509537 0.5732842 0.6291464 0.6798214 #>  [389,] 0.3113292 0.4423658 0.6108399 0.6132011 0.8419828 0.8532589 0.8539395 #>  [390,] 0.5042632 0.5047298 0.6332989 0.6573906 0.6640788 0.7308810 0.7348973 #>  [391,] 0.7233274 0.7667874 0.7677387 0.8072730 0.8238013 0.8640089 0.8686242 #>  [392,] 0.3895432 0.4814243 0.5017388 0.5109920 0.5509537 0.5559009 0.5684539 #>  [393,] 0.3934241 0.4134636 0.4875948 0.4968930 0.4970086 0.5114391 0.5413453 #>  [394,] 0.7262374 0.7883433 0.8249225 0.8961636 0.9529310 1.0486522 1.0517503 #>  [395,] 0.1257555 0.4669204 0.4789762 0.5074462 0.5550756 0.6272511 0.6629479 #>  [396,] 0.7127578 0.9761487 1.0934914 1.1792269 1.2529735 1.2647336 1.2691116 #>  [397,] 0.2353301 0.5189913 0.6319328 0.6763739 0.8770099 0.9029819 0.9047004 #>  [398,] 0.4036686 0.6553439 0.7098716 0.7248484 0.7313914 0.7385971 0.8750195 #>  [399,] 0.3202706 0.3913705 0.4149331 0.4594065 0.4824973 0.4997180 0.5302900 #>  [400,] 0.3830567 0.4335794 0.6856147 0.7246882 0.7279501 0.8605461 0.8679605 #>  [401,] 0.3458029 0.6856147 0.6893942 0.7525894 0.7639661 0.7671241 0.8066190 #>  [402,] 0.3184559 0.4518358 0.5047298 0.6410868 0.6615776 0.7332994 0.7435528 #>  [403,] 0.3710223 0.3747890 0.3890036 0.4005514 0.4566556 0.4822703 0.4933322 #>  [404,] 0.3525775 0.3633023 0.3969505 0.4275021 0.4805071 0.4826465 0.5098671 #>  [405,] 0.7915908 1.0149250 1.1095494 1.1976677 1.2020657 1.2915119 1.4095128 #>  [406,] 0.3285568 0.4314120 0.4459262 0.4767470 0.4802200 0.4935474 0.5290869 #>  [407,] 0.3213510 0.4834092 0.5131636 0.5381790 0.5893552 0.5904987 0.6029693 #>  [408,] 0.3178739 0.3953197 0.5304649 0.5385771 0.5808212 0.6046218 0.6353393 #>  [409,] 0.4980218 0.5544410 0.5735751 0.6319675 0.6597138 0.7081038 0.7502911 #>  [410,] 0.4111658 0.6511711 0.6553934 0.7264462 0.7492739 0.7716554 0.8001210 #>  [411,] 0.6332989 0.7615951 0.8218535 0.8311973 0.9326075 0.9754550 0.9913331 #>  [412,] 0.5250252 0.6174626 0.6315293 0.6413620 0.6457151 0.6603378 0.6631487 #>  [413,] 0.2296156 0.3987572 0.4429551 0.4651612 0.4720911 0.5008382 0.5440362 #>  [414,] 0.4051202 0.4769180 0.7755421 0.9211892 0.9332052 0.9669258 1.0150922 #>  [415,] 0.1457126 0.5002871 0.5610436 0.5681428 0.5699855 0.7477874 0.7981500 #>  [416,] 0.4056079 0.5185333 0.5372201 0.5717254 0.6669696 0.6682361 0.6959216 #>  [417,] 0.5261482 0.5872667 0.5905954 0.6268633 0.6326371 0.6944146 0.7490721 #>  [418,] 0.2546616 0.5221003 0.5281845 0.5339777 0.5899013 0.5936018 0.6222072 #>  [419,] 0.5121596 0.6132402 0.7254377 0.7297429 0.7689811 0.7979053 0.8296740 #>  [420,] 0.5019129 0.5067543 0.5348742 0.5720533 0.6073665 0.6227840 0.6371878 #>  [421,] 0.5492871 0.6242689 0.6266138 0.7856933 0.8007903 0.8282300 0.8867929 #>  [422,] 0.4955922 0.5857594 0.5938233 0.6401902 0.6480952 0.6741597 0.6915875 #>  [423,] 0.4430698 0.4549399 0.4942273 0.5141040 0.5802341 0.5968755 0.6428334 #>  [424,] 0.3802711 0.3884973 0.6605389 0.7177136 0.7344810 0.8601750 0.8970716 #>  [425,] 0.3481627 0.3920226 0.3926587 0.4059614 0.4381897 0.4934713 0.5628062 #>  [426,] 0.9883830 1.0004716 1.0509800 1.0558282 1.1139603 1.1253654 1.1421931 #>  [427,] 0.4777599 0.7755872 0.8128896 0.8477208 0.8490090 0.8849198 0.9162768 #>  [428,] 0.3918320 0.4289125 0.6084791 0.6263253 0.7111541 0.8128610 0.8505465 #>  [429,] 0.5138186 0.6642021 0.6690111 0.6806061 0.6947922 0.7058257 0.7114169 #>  [430,] 0.3688427 0.3948392 0.4609358 0.5423035 0.5549392 0.5716828 0.6080963 #>  [431,] 1.0730223 1.4578942 1.4752809 1.5188541 1.5335735 1.5639044 1.5855170 #>  [432,] 0.6152174 0.6268633 0.6339550 0.7537199 0.8068748 0.8384083 0.8432481 #>  [433,] 0.4116965 0.5155402 0.5488945 0.5653569 0.7218092 0.7590991 0.7820999 #>  [434,] 0.4125014 0.4983567 0.4999916 0.5154095 0.5325850 0.5391964 0.5422872 #>  [435,] 0.4123463 0.4869867 0.5505204 0.5944104 0.6481640 0.6965300 0.7600829 #>  [436,] 0.3806511 0.3838156 0.4368219 0.4897840 0.5797199 0.6907963 0.6946080 #>  [437,] 0.2618901 0.4174240 0.5035822 0.5413713 0.5488100 0.5831975 0.5879309 #>  [438,] 0.4959007 0.6457151 0.7176706 0.7920279 0.8368992 0.8614404 0.9128021 #>  [439,] 0.4485787 0.5459737 0.5677734 0.6356550 0.6956782 0.7170209 0.7448506 #>  [440,] 0.3514631 0.5187787 0.5466477 0.6713886 0.6968107 0.8028419 0.8264479 #>  [441,] 0.5425146 0.7626236 0.7633689 0.7675038 0.7677695 0.7694295 0.7838109 #>  [442,] 0.6296337 0.7434690 0.7822497 0.8595808 0.8613229 0.8841422 0.8859597 #>  [443,] 0.2578455 0.3417088 0.5196555 0.5383358 0.6234864 0.6611541 0.6897736 #>  [444,] 0.3304958 0.5745717 0.6384770 0.8066526 0.8386210 0.8411821 0.8508133 #>  [445,] 0.1960542 0.3676536 0.3926587 0.3980096 0.4613971 0.5085484 0.5577556 #>  [446,] 0.2991949 0.5174856 0.5902651 0.6158555 0.6207376 0.6400436 0.6540970 #>  [447,] 0.5555567 0.8119474 0.9274681 0.9510667 0.9553364 0.9636199 0.9896622 #>  [448,] 0.3136491 0.4379508 0.4750387 0.4872823 0.5311648 0.6108173 0.6707253 #>  [449,] 0.2922924 0.2928507 0.3874939 0.4891075 0.4980564 0.5681757 0.5693549 #>  [450,] 0.4645052 0.5734645 0.6892862 0.7327970 0.8550672 0.9059494 0.9226508 #>  [451,] 0.3776611 0.4051202 0.7571150 0.7891617 0.8804326 0.9623114 1.1344319 #>  [452,] 0.2618901 0.3390154 0.4804254 0.5135363 0.5185349 0.5615556 0.5796006 #>  [453,] 0.4366422 0.5072311 0.5238620 0.5409284 0.5454542 0.7176306 0.7218152 #>  [454,] 0.3352511 0.3513501 0.3779047 0.4895538 0.5026705 0.5364504 0.5378630 #>  [455,] 0.6907413 0.7005177 0.9384542 1.0699758 1.0746198 1.0962976 1.1049130 #>  [456,] 0.4614993 0.5081797 0.5610950 0.5666957 0.6122418 0.6170191 0.6381189 #>  [457,] 0.5955406 0.6458231 0.7036961 0.7863549 0.8026338 0.8140232 0.8283215 #>  [458,] 0.2289517 0.3067851 0.3186834 0.3819500 0.4005514 0.4741237 0.4938784 #>  [459,] 0.5252485 0.5339298 0.5489988 0.5691434 0.6311555 0.6720264 0.6812624 #>  [460,] 0.4374822 0.7195262 0.9098251 0.9343713 0.9505368 0.9764738 1.0424884 #>  [461,] 0.2996762 0.3490601 0.3588431 0.3912933 0.5119789 0.5439571 0.5553900 #>  [462,] 0.3660383 0.3848525 0.4423240 0.4423984 0.4764335 0.5007229 0.5412566 #>  [463,] 1.1788565 1.3423411 1.4133923 1.4198957 1.4895292 1.5667001 1.6822037 #>  [464,] 0.6225775 0.9153356 1.0056298 1.0156434 1.0508046 1.1443681 1.1523387 #>  [465,] 0.3458029 0.3830567 0.5383580 0.6264371 0.7775237 0.7781291 0.8263970 #>  [466,] 0.3757904 0.4253779 0.5240031 0.5697414 0.6078203 0.6136829 0.6402618 #>  [467,] 0.2791779 0.4828984 0.4913224 0.5192799 0.5194278 0.5242562 0.6222072 #>  [468,] 0.1412353 0.3066120 0.3913374 0.4314051 0.4435253 0.4633867 0.4826127 #>  [469,] 0.3091575 0.5814689 0.5906277 0.5992562 0.6326371 0.6469669 0.6984444 #>  [470,] 0.5165410 0.5225561 0.5504840 0.6094010 0.6236399 0.7190391 0.7255185 #>  [471,] 0.3905628 0.4570374 0.4923259 0.5048736 0.5072869 0.5268461 0.5910757 #>  [472,] 0.5606495 0.7588076 0.7928859 0.8473664 0.9024861 0.9034418 0.9504198 #>  [473,] 0.6265314 0.7195262 0.8195750 0.9087339 0.9994496 1.0561105 1.1280151 #>  [474,] 0.3556601 0.5642782 0.5707005 0.5888508 0.6033136 0.6389466 0.6528188 #>  [475,] 0.4024483 0.5136618 0.6266999 0.6293683 0.6331598 0.6568448 0.7223757 #>  [476,] 0.2569293 0.3657331 0.4026997 0.4276793 0.4572070 0.4812868 0.5029748 #>  [477,] 0.3524337 0.5567038 0.5635622 0.5871811 0.6359616 0.6450181 0.6596769 #>  [478,] 0.6504698 0.8628118 0.8934793 0.9492043 0.9711269 1.0379094 1.0430789 #>  [479,] 0.7279501 0.8232968 0.8815718 0.8875119 0.9731088 1.0534073 1.0644012 #>  [480,] 0.5943301 0.6619937 0.6947922 0.7085971 0.8332180 0.8358105 0.9264773 #>  [481,] 0.4085959 0.4556442 0.6605592 0.6979482 0.7189606 0.7891139 0.7960983 #>  [482,] 0.7915908 1.0648047 1.2543197 1.3099819 1.4000270 1.4309635 1.4379298 #>  [483,] 0.5929305 0.8490390 0.9457200 1.0348564 1.0396577 1.1022982 1.1396698 #>  [484,] 0.3525252 0.4063249 0.4582774 0.4732585 0.4942109 0.5168748 0.5171654 #>  [485,] 0.5038661 0.5610436 0.6504698 0.7018391 0.9611765 0.9764738 1.0006022 #>  [486,] 0.3358029 0.4505269 0.5504881 0.6291464 0.7264237 0.7367339 0.7541327 #>  [487,] 0.5383990 0.6707741 0.7384176 0.8436659 0.9150972 0.9363727 0.9406192 #>  [488,] 0.4432166 0.4470028 0.5287582 0.5528294 0.6302956 0.6820235 0.7083550 #>  [489,] 0.3660383 0.4829863 0.4848390 0.5014880 0.5230184 0.5234596 0.5705091 #>  [490,] 0.4485787 0.4863853 0.5623340 0.6401146 0.6553934 0.7002668 0.8068167 #>  [491,] 0.6932394 0.7742510 0.8789513 0.8817063 0.9108048 0.9883042 1.0338475 #>  [492,] 0.2094617 0.4414033 0.4572070 0.4609700 0.4661846 0.4746320 0.4855697 #>  [493,] 0.3106024 0.4460617 0.5312083 0.6673814 0.7340519 0.8070216 0.8581231 #>  [494,] 0.3301119 0.3437702 0.3669123 0.4918698 0.5940281 0.6070454 0.6111134 #>  [495,] 0.3394844 0.4006096 0.4068972 0.4172339 0.6019840 0.6138800 0.6667747 #>  [496,] 0.2286886 0.3686147 0.4272458 0.5016437 0.5448599 0.5484320 0.5511875 #>  [497,] 0.5624785 0.5993097 0.7017688 0.7706361 0.8810112 0.9182541 0.9193467 #>  [498,] 0.8064250 1.0526432 1.1023809 1.1811835 1.2005248 1.2230364 1.2752681 #>  [499,] 2.4787351 2.5249703 2.6359338 2.6802160 2.6815841 2.6952508 2.7314304 #>  [500,] 0.4542098 0.5011913 0.5495823 0.6193803 0.6722716 0.6991221 0.7031971 #>  [501,] 0.2734565 0.4199832 0.4287305 0.4473554 0.5979192 0.6239051 0.6380812 #>  [502,] 0.3392109 0.4396069 0.5123829 0.6164692 0.7387613 0.7750119 0.7871300 #>  [503,] 0.5428824 0.6339550 0.6402618 0.6501874 0.6507848 0.7304828 0.7361710 #>  [504,] 0.3386233 0.3930878 0.4120583 0.4747824 0.4762068 0.5085280 0.5215113 #>  [505,] 0.2612405 0.3551038 0.4938784 0.5573365 0.5755479 0.5987590 0.6044852 #>  [506,] 0.3083919 0.5942332 0.7722180 0.7991157 0.8329750 0.8516392 0.8547082 #>  [507,] 0.2217617 0.2661266 0.3175616 0.4149331 0.4537911 0.4966009 0.5105782 #>  [508,] 0.6308904 0.7466674 0.7903432 0.9064238 0.9807787 1.0042939 1.0348121 #>  [509,] 0.4242651 0.4347131 0.5480419 0.6643007 0.6676141 0.7039359 0.7141846 #>  [510,] 0.5904378 0.6410868 0.8222237 0.9754550 1.0094423 1.0567393 1.0831111 #>  [511,] 0.4332651 0.6714131 0.7998238 0.8317753 0.8457471 0.8535646 0.8628611 #>  [512,] 0.5671601 0.7282968 0.8362417 0.9513614 1.1567506 1.1991442 1.3318198 #>  [513,] 0.6913829 0.8888571 0.9334695 0.9759081 0.9892210 1.0252545 1.0327843 #>  [514,] 0.4353166 0.5455117 0.7431773 0.8553774 0.8819996 0.9236206 0.9959342 #>  [515,] 0.4870615 0.5425748 0.6153536 0.6784835 0.6855743 0.7353062 0.7886938 #>  [516,] 0.3604918 0.3632050 0.3890036 0.4383867 0.4599237 0.4645308 0.4826099 #>  [517,] 0.3329671 0.5828192 0.6029241 0.7347236 0.7795816 0.8302082 0.8375110 #>  [518,] 0.3944994 0.4106354 0.5612706 0.5953177 0.6034767 0.6522410 0.6632266 #>  [519,] 0.3765864 0.4980218 0.7048266 0.7224488 0.7627102 0.7678418 0.8104953 #>  [520,] 0.5385999 0.6332117 0.6527146 0.6615776 0.6865330 0.7093842 0.7124826 #>  [521,] 0.1923351 0.5812571 0.6480375 0.6551925 0.7185370 0.7214546 0.7555407 #>  [522,] 1.4254770 1.4553427 1.5319170 1.5682789 1.5691586 1.6937886 1.8572698 #>  [523,] 0.3401918 0.4893371 0.5681757 0.7157430 0.7289997 0.8183816 0.8595664 #>  [524,] 0.5352316 0.6435275 0.7486387 0.7818217 0.8367021 0.8470057 0.8558235 #>  [525,] 0.4876600 0.5144181 0.5706278 0.6483658 0.6916804 0.7436081 0.8408944 #>  [526,] 0.2442281 0.4379508 0.5443972 0.5917659 0.5943638 0.6069509 0.6195639 #>  [527,] 0.5355423 0.5474971 0.5550847 0.6033136 0.6927700 0.6934277 0.7839221 #>  [528,] 0.6849981 0.7236067 0.7239378 0.7559130 0.9286206 0.9476253 1.0313606 #>  [529,] 0.3109425 0.3454563 0.4489389 0.6076082 0.6686554 0.7683952 0.7746529 #>  [530,] 0.5224370 0.5242928 0.5504840 0.6955587 0.7028009 0.7331899 0.7756818 #>  [531,] 0.2686635 0.8502969 0.8539395 0.8875681 0.9449080 0.9607605 0.9725843 #>  [532,] 0.3968053 0.4608625 0.5451733 0.5693529 0.5913540 0.6207376 0.6556169 #>  [533,] 0.2105175 0.2849864 0.4435253 0.4451457 0.4976498 0.5039508 0.5385771 #>  [534,] 1.0056298 1.0063360 1.0228704 1.1758045 1.3061648 1.3131092 1.3539577 #>  [535,] 0.1795017 0.3914624 0.4311430 0.4808685 0.5177915 0.5188129 0.5231660 #>  [536,] 0.3886122 0.6940858 0.7367848 0.7859109 0.7948439 0.8092575 0.8410188 #>  [537,] 0.2922924 0.3740531 0.4893371 0.5506097 0.5691912 0.5700471 0.5963322 #>  [538,] 0.5304649 0.5727852 0.5982141 0.5984345 0.6064560 0.6682981 0.6768179 #>  [539,] 0.3723138 0.4811191 0.4975465 0.5152524 0.5242217 0.5337690 0.5374942 #>  [540,] 0.1998153 0.3781865 0.3798359 0.4114479 0.5380592 0.5418090 0.5437751 #>  [541,] 0.8346431 0.9989923 1.0280044 1.2451451 1.2641855 1.3222055 1.3797486 #>  [542,] 0.5150732 0.5405132 0.5517353 0.8327506 0.8509328 1.0145762 1.0188366 #>  [543,] 0.6707741 0.8546885 0.8712047 0.9233843 0.9337107 0.9400282 1.0088752 #>  [544,] 0.7023488 0.7678536 0.8127954 0.8866871 0.9579694 1.0152249 1.0761013 #>  [545,] 0.4737440 0.4814243 0.5159818 0.5177161 0.5302001 0.5374756 0.6089900 #>  [546,] 0.4570762 0.4936120 0.5217608 0.6644822 0.7165986 0.7342913 0.7596182 #>  [547,] 0.2686635 0.6729536 0.8144727 0.8584639 0.8972973 0.9212723 0.9984089 #>  [548,] 0.2965186 0.3938001 0.4227960 0.4627563 0.5003201 0.5122100 0.5155835 #>  [549,] 0.7471292 1.0120172 1.0738716 1.0850179 1.1114957 1.1788565 1.2134379 #>  [550,] 0.7557748 1.9640711 2.0158992 2.1958536 2.2025514 2.2810268 2.3287320 #>  [551,] 0.2164501 0.4410435 0.4493396 0.4747144 0.4762068 0.5017388 0.5159818 #>  [552,] 0.3774352 0.5874570 0.6080600 0.6632698 0.6701687 0.6766880 0.6805240 #>  [553,] 0.2273583 0.3103047 0.3158317 0.4449949 0.4897840 0.5127951 0.5189196 #>  [554,] 0.4215890 0.4280685 0.7515559 0.8982119 0.9799687 0.9824180 1.0017711 #>  [555,] 0.2751204 0.5624785 0.8821678 0.8904358 0.9163542 0.9306648 0.9887995 #>  [556,] 0.3124576 0.5874171 0.9109125 0.9132635 0.9570289 0.9756815 0.9871541 #>  [557,] 0.4570762 0.4896084 0.5105701 0.5210476 0.5693529 0.6319652 0.6602495 #>  [558,] 0.6977377 0.8379934 0.8425571 0.9253071 0.9524282 0.9583905 1.0047693 #>  [559,] 0.2618401 0.6252074 0.6447046 0.6806061 0.6927381 0.7264462 0.7378000 #>  [560,] 0.5383990 0.5511466 0.6680109 0.7092152 0.7109173 0.7745257 0.8069808 #>  [561,] 0.4650941 0.5238620 0.5348742 0.5662374 0.6147478 0.6925079 0.7901603 #>  [562,] 1.4131752 1.4267515 1.5172372 1.6144240 1.7843633 1.9143099 2.0157166 #>  [563,] 1.0995921 1.1604199 1.2860329 1.3602894 1.4155908 1.4740372 1.5191169 #>  [564,] 0.5700973 0.9030833 1.0028225 1.0354115 1.0786533 1.0800418 1.0995374 #>  [565,] 0.2612405 0.3530585 0.4722940 0.5048796 0.5476488 0.5617994 0.5865857 #>  [566,] 0.4788930 0.8072730 0.8456541 0.8498218 0.8716038 0.9956315 1.0053389 #>  [567,] 0.6152174 0.9260792 0.9534972 0.9594619 1.0066028 1.0099486 1.0219929 #>  [568,] 0.3052188 0.3113680 0.3719505 0.4422055 0.4989853 0.5074590 0.5246449 #>  [569,] 0.2343413 0.4280685 0.6458231 0.6796532 0.9604054 0.9616049 1.0077803 #>  [570,] 0.6254268 0.6579970 0.8277229 0.9013307 0.9356341 0.9553533 1.0004716 #>  [571,] 0.2849864 0.3809927 0.3913374 0.4213421 0.4369799 0.4488936 0.4956664 #>  [572,] 0.3799644 0.3981264 0.4570374 0.5037029 0.5298376 0.5905216 0.5940546 #>  [573,] 0.7058054 0.9816568 1.1095494 1.1333906 1.1793584 1.2026618 1.2271717 #>  [574,] 0.4938878 0.7164475 0.7231428 0.7274085 0.7840491 0.8155527 0.8425017 #>  [575,] 0.3610341 0.4669204 0.4753663 0.5390328 0.5429686 0.5484320 0.5824740 #>  [576,] 0.9832351 1.1916313 1.2309731 1.2885887 1.3348366 1.4022129 1.4999657 #>  [577,] 0.4370194 0.5828192 0.5987923 0.6252074 0.6440177 0.7103820 0.7120553 #>  [578,] 0.1907358 0.4380835 0.4398420 0.4453320 0.4968742 0.5043623 0.5147732 #>  [579,] 0.3394250 0.5017704 0.5073744 0.5459737 0.5623340 0.5957137 0.6257073 #>  [580,] 0.3136491 0.4832977 0.5452097 0.5469488 0.5943638 0.6684409 0.6788909 #>  [581,] 0.4757520 0.5505204 0.5907311 0.7315827 0.7437559 0.8815718 0.8903385 #>  [582,] 0.3638288 0.5512129 0.5698245 0.5741937 0.6482118 0.6834861 0.6927381 #>  [583,] 0.7201322 0.8014768 0.9182950 0.9211684 0.9495949 0.9767439 0.9846061 #>  [584,] 0.8286330 0.8392739 0.9274681 0.9415304 0.9662324 0.9756150 1.0326113 #>  [585,] 0.7150264 0.8001651 0.8241293 0.8258942 0.8378235 0.8571228 0.8893262 #>  [586,] 0.5337423 0.5635622 0.5737651 0.6376604 0.7493295 0.7755872 0.8280572 #>  [587,] 0.9260981 0.9886686 1.0634161 1.2119385 1.3173416 1.4022129 1.4536936 #>  [588,] 0.2770382 0.4636346 0.6602455 0.8192408 0.9824257 0.9941006 1.0064931 #>  [589,] 0.4431134 0.4585248 0.4858187 0.5874570 0.5907221 0.6573963 0.6631667 #>  [590,] 0.5029892 0.5650864 0.6707272 0.6804693 0.7201322 0.7361470 0.7548057 #>  [591,] 0.4637712 0.5511508 0.7224517 0.7236107 0.7981595 0.8298472 0.8386210 #>  [592,] 0.3838156 0.4704623 0.4808685 0.5406582 0.6070318 0.6076115 0.6214845 #>  [593,] 0.2780944 0.2938909 0.3160396 0.4005184 0.4071768 0.4305712 0.4557063 #>  [594,] 0.3080777 0.3956464 0.4415222 0.4554516 0.4652289 0.4734049 0.5048796 #>  [595,] 0.4019718 0.7367865 0.7486387 0.7984211 0.8065179 0.8296740 0.8335389 #>  [596,] 0.3458876 0.5025590 0.5422557 0.5644321 0.5681428 0.6667747 0.6730841 #>  [597,] 0.3083919 0.5009687 0.6214845 0.6287011 0.7551961 0.7690297 0.7985806 #>  [598,] 0.3176937 0.3592673 0.4412460 0.5300126 0.5439430 0.5769023 0.6025091 #>  [599,] 0.1821476 0.4623505 0.5653569 0.6789478 0.6922921 0.7219848 0.7308414 #>  [600,] 0.3080751 0.3136977 0.4504919 0.4725017 0.4993532 0.5012870 0.5669852 #>  [601,] 0.3582576 0.4087473 0.4194612 0.4249279 0.4440057 0.4767470 0.4961666 #>  [602,] 0.3486888 0.3844678 0.4569880 0.4613971 0.4621962 0.4693899 0.4812505 #>  [603,] 0.2676504 0.3723138 0.5245181 0.5998886 0.6102405 0.6116010 0.6204448 #>  [604,] 0.1880397 0.4352734 0.4621962 0.4660285 0.4711256 0.4978754 0.5305005 #>  [605,] 0.3678781 0.4005174 0.4088687 0.4412460 0.4848390 0.4860993 0.4929666 #>  [606,] 0.3445994 0.4287305 0.5211516 0.5470574 0.6196470 0.7423847 0.8015919 #>  [607,] 0.3109425 0.3713510 0.3972822 0.5843780 0.6075112 0.6639107 0.7612510 #>  [608,] 0.6211108 0.6765484 0.7801991 0.9374454 0.9723720 1.0410421 1.0413188 #>  [609,] 0.7620922 0.7945027 0.9671000 1.0241726 1.0526528 1.0645023 1.0721897 #>  [610,] 0.3301119 0.4539022 0.4626248 0.4929649 0.5011315 0.5038229 0.5371010 #>  [611,] 0.3892923 0.5719831 0.6193540 0.6307219 0.6754799 0.6939600 0.7055080 #>  [612,] 0.3590217 0.5622607 0.5749747 0.7050365 0.7092287 0.7328549 0.7642209 #>  [613,] 0.4556442 0.5065259 0.6415368 0.7681048 0.7847803 0.7952401 0.7995223 #>  [614,] 0.4841278 0.7330356 0.8625143 0.8627456 0.8871369 0.9040311 1.0021075 #>  [615,] 0.4052950 0.5250248 0.5449661 0.5487680 0.5836566 0.6140291 0.7035311 #>  [616,] 0.3342382 0.3528047 0.4566071 0.4588823 0.5595899 0.5650627 0.5664733 #>  [617,] 0.5910692 0.6109909 0.7725971 0.7880406 0.8080487 0.8162246 0.8352604 #>  [618,] 0.8995747 0.9059494 1.0124701 1.0319325 1.0337591 1.1374333 1.1429259 #>  [619,] 0.2676504 0.4989698 0.5152524 0.5376920 0.5667576 0.5704259 0.5736706 #>  [620,] 0.8284279 0.8684830 0.9933613 0.9954375 1.0958495 1.1693827 1.2511751 #>  [621,] 0.7137572 0.7962522 0.8566013 1.1097381 1.1318377 1.1977082 1.2191116 #>  [622,] 0.3788236 0.4559011 0.5616415 0.5721634 0.5902184 0.6025091 0.6110487 #>  [623,] 0.1923351 0.4792305 0.5322739 0.5676543 0.5992562 0.6682089 0.7108051 #>  [624,] 0.7236067 0.8886585 0.9266796 0.9953299 1.1276024 1.2146687 1.2330272 #>  [625,] 0.2957885 0.4446937 0.5750432 0.5765267 0.5925585 0.6037244 0.6568023 #>  [626,] 0.5509826 0.6290930 0.6537618 0.8620734 0.8626699 0.8700212 0.8840395 #>  [627,] 0.3806210 0.3815088 0.3934241 0.4213650 0.4374722 0.5392035 0.5448039 #>  [628,] 0.4037595 0.4367022 0.4729371 0.5086459 0.5612706 0.7159270 0.7336171 #>  [629,] 0.2094617 0.3032933 0.3819500 0.3945596 0.3978667 0.4026997 0.4286491 #>  [630,] 0.3813579 0.4197812 0.4300301 0.4399549 0.4519320 0.5166567 0.5815696 #>  [631,] 0.8832363 1.3477283 1.3545155 1.4381920 1.4890247 1.5271940 1.5304553 #>  [632,] 0.3537939 0.4304763 0.4875948 0.5019129 0.5135788 0.5934187 0.6370304 #>  [633,] 0.6097647 0.8841422 0.9312233 0.9659309 0.9901034 1.0455495 1.0524537 #>  [634,] 0.2411622 0.4635766 0.4648660 0.4726632 0.5298530 0.5476241 0.6141360 #>  [635,] 0.4445392 0.5229273 0.6558690 0.6608258 0.6714148 0.7340519 0.7681936 #>  [636,] 0.8490657 0.9090991 0.9289076 0.9717083 1.0127865 1.0738554 1.1702953 #>  [637,] 0.3196900 0.3934462 0.3981264 0.4439951 0.4990745 0.5239454 0.5315435 #>  [638,] 0.3856247 0.4641082 0.5074462 0.5270669 0.5824740 0.5874906 0.6256009 #>  [639,] 0.4993532 0.6707272 0.6866497 0.7076178 0.7314473 0.7330356 0.7394303 #>  [640,] 0.2615611 0.3670521 0.5169540 0.5198035 0.5434027 0.7077364 0.7297429 #>  [641,] 0.4279815 0.4513086 0.4595417 0.4634436 0.4923078 0.5025113 0.5047042 #>  [642,] 0.9597329 1.1546740 1.1975968 1.3252038 1.3591368 1.3595380 1.3768743 #>  [643,] 0.4094364 0.4826327 0.4858038 0.5331247 0.5526499 0.5606193 0.5979192 #>  [644,] 0.1502014 0.3948392 0.4024483 0.4363727 0.5110320 0.5298530 0.5515163 #>  [645,] 0.7483794 0.7660779 0.7972184 0.8423217 0.8477208 0.9264165 0.9535310 #>  [646,] 0.3298885 0.6257554 0.6793500 0.7212007 0.7591843 0.7873279 0.7969979 #>  [647,] 0.6265314 0.8995747 0.9675360 1.0166948 1.0424884 1.0450260 1.1418658 #>  [648,] 0.3706053 0.3744725 0.4122767 0.4483847 0.4539152 0.4645888 0.4827478 #>  [649,] 0.4701398 0.5616011 0.5705091 0.6293527 0.6541363 0.6560097 0.7152830 #>  [650,] 0.9559779 0.9902827 1.0017711 1.0408619 1.0470346 1.2111807 1.2288811 #>  [651,] 0.5931816 0.5963667 0.6109270 0.7269927 0.7596997 0.7883433 0.8504473 #>  [652,] 0.3343100 0.5469488 0.6108173 0.6170841 0.6329588 0.6413620 0.6597046 #>  [653,] 0.8118327 1.0229776 1.2321380 1.3246079 1.3556170 1.3676437 1.4039970 #>  [654,] 0.4407825 0.4994282 0.5063334 0.5119253 0.5206700 0.5721931 0.5740050 #>  [655,] 0.3471195 0.6613483 0.7012632 0.7894252 0.7945076 0.8148472 0.8189127 #>  [656,] 0.4028254 0.4151472 0.4276793 0.4414033 0.4663869 0.4732585 0.4777298 #>  [657,] 0.8341872 0.8865120 0.9124553 0.9776484 0.9869563 0.9919096 1.0184556 #>  [658,] 0.5081797 0.5225944 0.5464530 0.5717254 0.6125552 0.6259600 0.6279938 #>  [659,] 0.2656600 0.3891551 0.3932012 0.4618651 0.4633659 0.4802200 0.5200496 #>  [660,] 0.4583481 0.4983567 0.5065117 0.5727852 0.5739238 0.6249346 0.6435275 #>  [661,] 0.7064498 0.7354697 0.7449229 0.8980629 0.9261128 0.9273094 0.9797472 #>  [662,] 0.2599636 0.3310614 0.3920226 0.4318124 0.4627563 0.5120180 0.5462467 #>  [663,] 0.6329682 0.6602455 0.6773683 0.7154039 0.7537751 0.7591667 0.7627073 #>  [664,] 0.2996762 0.3549475 0.4149381 0.6040388 0.6074579 0.6244618 0.6274167 #>  [665,] 0.3527183 0.4374755 0.4699401 0.5557919 0.5650627 0.5727925 0.5955450 #>  [666,] 0.8355623 1.1958227 1.3173416 1.3620397 1.3930836 1.4061571 1.5639044 #>  [667,] 0.2694920 0.4093251 0.4940575 0.5246449 0.5301315 0.5522417 0.5525923 #>  [668,] 0.3176937 0.3298639 0.4615580 0.4781089 0.4860993 0.5040802 0.5085280 #>  [669,] 0.8076283 0.8741396 0.9529027 1.0189253 1.1386040 1.1676503 1.2302778 #>  [670,] 0.4916895 0.8355623 0.9260981 0.9447221 0.9853316 1.0694053 1.1113730 #>  [671,] 0.2950353 0.3113680 0.4127848 0.4388591 0.4701749 0.5131636 0.5181448 #>  [672,] 0.1765483 0.6193803 0.7609701 0.7924176 0.8291398 0.8341872 0.8631459 #>  [673,] 0.1882941 0.6084791 0.6591222 0.8985321 0.9114107 0.9670695 0.9727846 #>  [674,] 0.7103740 0.7996086 1.1310247 1.1396698 1.1415995 1.1594726 1.2106312 #>  [675,] 0.6694261 0.7091689 0.7125685 0.7160217 0.7290825 0.7359664 0.7543159 #>  [676,] 0.2652173 0.3591586 0.3856247 0.4302680 0.4700327 0.5284957 0.5455016 #>  [677,] 0.4056079 0.4650003 0.6410389 0.6644238 0.7346686 0.7799487 0.7987587 #>  [678,] 0.7652407 1.0127818 1.1077200 1.1214226 1.1279028 1.2002891 1.2068199 #>  [679,] 0.3086478 0.3642713 0.3672958 0.5025481 0.6187645 0.7493980 0.7529638 #>  [680,] 0.6108399 0.6574265 0.6846185 0.7434690 0.7667026 0.7743503 0.8051438 #>  [681,] 0.9406192 0.9900879 1.0073145 1.0223147 1.0868001 1.1268332 1.1792269 #>  [682,] 0.5070293 0.5632050 0.6182612 0.6978583 0.7107505 0.7151584 0.7312178 #>  [683,] 0.4334864 0.4357644 0.5221797 0.6035912 0.6405775 0.6628211 0.6794570 #>  [684,] 0.5086459 0.5793263 0.5985444 0.6381214 0.6499291 0.7309148 0.8410188 #>  [685,] 0.2965186 0.3183395 0.3937665 0.4383867 0.4429527 0.4651612 0.4741794 #>  [686,] 0.2436403 0.3843435 0.4940036 0.5953922 0.5978571 0.6161363 0.6846185 #>  [687,] 0.6109270 0.7466674 0.8328029 0.8611830 0.9437925 0.9840271 0.9916199 #>  [688,] 1.1609350 1.1780794 1.2971786 1.2993309 1.3046307 1.3752090 1.4155252 #>  [689,] 0.3227764 0.5130482 0.5373405 0.5434537 0.5549392 0.6665069 0.7139751 #>  [690,] 0.6298396 0.9606412 0.9806925 1.0191859 1.0786642 1.0977456 1.1067650 #>  [691,] 1.1912198 1.2343525 1.3290869 1.3660693 1.3753267 1.5181986 1.6123363 #>  [692,] 0.2697039 0.3892588 0.4135310 0.4528358 0.5037029 0.5203917 0.5268461 #>  [693,] 0.4335794 0.4556055 0.5383580 0.6724047 0.7737363 0.7917263 0.8150843 #>  [694,] 0.3496784 0.4470028 0.5743282 0.7685739 0.8087218 0.8201508 0.9122154 #>  [695,] 0.2202836 0.4180805 0.5138186 0.6213372 0.6242689 0.6470521 0.6813480 #>  [696,] 0.3184559 0.5904378 0.6486461 0.6865330 0.7496748 0.7809224 0.8325244 #>  [697,] 0.3358029 0.3893338 0.4844073 0.5672224 0.6164471 0.6320225 0.6561801 #>  [698,] 0.5025590 0.5278623 0.5865902 0.5981669 0.6182001 0.6365512 0.6947839 #>  [699,] 0.3784456 0.4625917 0.6006478 0.6319259 0.6326365 0.6393936 0.6485100 #>  [700,] 0.4097627 0.5605815 0.5786764 0.6970361 0.6994112 0.7243970 0.7910807 #>  [701,] 0.4532875 0.4625917 0.4769697 0.4860003 0.4913224 0.5144246 0.5899088 #>  [702,] 1.0514347 1.1351614 1.1604199 1.2314421 1.2675142 1.2719898 1.2757552 #>  [703,] 0.6039762 0.8073952 0.8313950 0.8410883 0.8428926 0.8934076 0.8941275 #>  [704,] 0.4874757 0.5073828 0.6075559 0.6104783 0.6204127 0.6582852 0.7073790 #>  [705,] 0.3776611 0.4769180 0.5101209 0.8239215 0.9078180 0.9702416 1.0187160 #>  [706,] 0.2938909 0.4308291 0.4513943 0.4871143 0.5175952 0.5349535 0.5568170 #>  [707,] 0.4360400 0.5857594 0.6447800 0.6451698 0.7482271 0.8122301 0.8444847 #>  [708,] 0.9514395 1.0606779 1.0636714 1.1426683 1.2643485 1.2781764 1.2947481 #>  [709,] 0.6583572 0.6639630 0.7268477 0.9004944 0.9162768 0.9609299 1.0435224 #>  [710,] 0.3390154 0.4174240 0.4615110 0.4615817 0.4617750 0.5644427 0.5650864 #>  [711,] 0.2724458 0.4804254 0.4858038 0.4923078 0.5294087 0.5417924 0.5419647 #>  [712,] 0.1257555 0.5030681 0.5135363 0.5429686 0.5453030 0.5831975 0.5874906 #>  [713,] 0.2316066 0.4242651 0.5503053 0.5668125 0.6527146 0.6826380 0.7104982 #>  [714,] 0.7137572 0.8132454 0.8288236 0.8378235 0.9917530 1.0033330 1.1027254 #>  [715,] 0.3445357 0.5203527 0.5210982 0.5302128 0.5474013 0.5504232 0.5537372 #>  [716,] 0.6289333 0.7239378 0.7605889 0.8364011 0.8404026 0.8441677 0.8458550 #>  [717,] 0.5101209 0.7502501 0.7571150 0.7914278 0.9332052 0.9764120 1.0077118 #>  [718,] 0.5185333 0.5451491 0.5464530 0.6375285 0.7150237 0.7173710 0.7490721 #>  [719,] 0.7471292 0.7926226 0.9163542 0.9244381 0.9594619 0.9813975 0.9902617 #>  [720,] 0.2798545 0.2928507 0.4171835 0.4241446 0.5506097 0.5528294 0.5698328 #>  [721,] 0.5810662 0.6228606 0.6947839 0.6994219 0.8052348 0.8134730 0.8163599 #>  [722,] 0.4924958 0.4981826 0.5540639 0.6878055 0.6996609 0.7174303 0.7634109 #>  [723,] 0.2298626 0.4681615 0.4883660 0.5622740 0.6198420 0.6236002 0.6291796 #>  [724,] 0.2985586 1.2498559 1.3073808 1.3259615 1.4278049 1.4933361 1.5392211 #>  [725,] 0.7177136 0.7769373 0.8442932 0.9119135 0.9680577 0.9692823 1.0137121 #>  [726,] 1.6054625 2.0848020 2.2737335 2.3440355 2.4777165 2.4800381 2.5488145 #>  [727,] 0.6776881 0.7018391 0.7596997 0.8934793 0.8953289 0.9017456 0.9556454 #>  [728,] 0.5503053 0.5529916 0.5644517 0.5815853 0.6495746 0.6587434 0.6663706 #>  [729,] 0.4863853 0.5017704 0.5706278 0.6356550 0.6714550 0.7973914 0.8065675 #>  [730,] 0.6298396 0.8941275 1.0586703 1.1020911 1.1238132 1.1308614 1.1605411 #>  [731,] 0.2230059 0.4460617 0.5229273 0.5374811 0.6970361 0.7349776 0.7393258 #>  [732,] 0.9529027 1.0492829 1.0509800 1.2951662 1.3222785 1.3498134 1.4098043 #>  [733,] 0.9483649 0.9880734 1.0074580 1.0216102 1.1741660 1.2103866 1.2133149 #>  [734,] 0.6690111 0.7064498 0.7085971 0.8331035 0.8896609 0.9334063 0.9730671 #>  [735,] 0.6221261 0.8075866 0.9425628 1.0028363 1.0798067 1.1136847 1.1192310 #>  [736,] 0.4332651 0.5409303 0.6307219 0.6624071 0.7050365 0.7191833 0.7874377 #>  [737,] 0.4387941 0.6204127 0.6707253 0.6965939 0.6972482 0.7017439 0.7697675 #>  [738,] 0.5950760 0.7354020 0.7369217 0.7641021 0.8088560 0.8308253 0.8328029 #>  [739,] 0.4441841 0.4739766 0.6529928 0.6619944 0.7024932 0.7527359 0.7571572 #>  [740,] 0.3433086 0.4559011 0.4768436 0.6148437 0.6968936 0.7092597 0.7328150 #>  [741,] 0.3158317 0.3165580 0.3969505 0.4063249 0.4579166 0.4631483 0.4714148 #>  [742,] 0.5550847 0.5627145 0.6103244 0.6326847 0.6514708 0.7510046 0.7562212 #>  [743,] 0.3056034 0.3103047 0.3165580 0.3768641 0.4135715 0.4179349 0.4652016 #>  [744,] 0.1418194 0.5225944 0.6063061 0.6682361 0.7811779 0.7920934 0.7948385 #>  [745,] 0.3113118 0.4595513 0.4636687 0.5151912 0.5487680 0.6796532 0.7036961 #>  [746,] 1.2094194 1.2693452 1.2838527 1.2862101 1.5435401 1.6377179 1.6807627 #>  [747,] 0.1921174 0.4963909 0.4970822 0.5206700 0.5575169 0.5603175 0.5684175 #>  [748,] 0.2709125 0.2989971 0.3178739 0.3892588 0.3984968 0.5257014 0.6096382 #>  [749,] 0.3710504 0.4176578 0.4423984 0.4646938 0.4921990 0.5166952 0.5442631 #>  [750,] 0.3913705 0.3968053 0.4414737 0.5097455 0.5351798 0.5617529 0.5676278 #>  [751,] 0.3342382 0.3864791 0.4802595 0.4861910 0.5138721 0.5257014 0.5507399 #>  [752,] 0.3788236 0.5478272 0.5989136 0.6381861 0.7703288 0.8092654 0.8158994 #>  [753,] 0.5702987 0.5980038 0.6198420 0.6559528 0.6597138 0.7089059 0.7139787 #>  [754,] 0.3107541 0.3136977 0.4305712 0.4617750 0.4785309 0.4931461 0.5282038 #>  [755,] 0.6690871 0.6860968 0.7725749 0.8556933 0.8632565 0.9030162 0.9208716 #>  [756,] 0.4915624 0.5409284 0.5495761 0.5752191 0.6137225 0.7168790 0.7279401 #>  [757,] 0.2709125 0.3940243 0.3953197 0.3979419 0.4528358 0.4592319 0.5072869 #>  [758,] 0.3246618 0.4099349 0.5264586 0.5480419 0.5910737 0.6117036 0.6689205 #>  [759,] 0.5578534 0.5838292 0.6651903 0.7801991 0.8151923 0.8256253 0.8408133 #>  [760,] 0.4936120 0.7140313 0.8417973 0.8946692 0.9161463 0.9171797 0.9212723 #>  [761,] 0.4423240 0.4711256 0.5230184 0.5773746 0.5822046 0.5966500 0.6572810 #>  [762,] 0.1907358 0.4005174 0.4075196 0.4639866 0.4674898 0.5261269 0.5539596 #>  [763,] 0.9182541 1.0350864 1.1025945 1.1219863 1.1424055 1.1723399 1.1851861 #>  [764,] 0.4357644 0.5396707 0.7081140 0.7458473 0.7559599 0.7662393 0.7817104 #>  [765,] 0.2985586 1.2673941 1.3162858 1.3490841 1.3812083 1.4572480 1.4857447 #>  [766,] 0.4815630 0.5688090 0.6190446 0.7048870 0.7183197 0.7194659 0.7259945 #>  [767,] 0.7216168 0.7344810 0.7559130 0.8101955 0.8404026 0.8766603 0.8847948 #>  [768,] 0.5425146 0.5511466 0.6194563 0.6747291 0.6897736 0.7081918 0.7287542 #>  [769,] 0.5627565 0.6415368 0.6619937 0.7960983 0.8765106 0.8888571 0.8970740 #>  [770,] 0.4305420 0.4811124 0.4841278 0.6360874 0.6567670 0.7184861 0.7732483 #>  [771,] 1.0676613 1.4296416 1.4939067 1.5614253 1.5694705 1.7011895 1.7708172 #>  [772,] 0.7779108 0.8614404 1.0133924 1.0792046 1.1991442 1.2035680 1.2053993 #>  [773,] 0.3852675 0.4621747 0.4727399 0.5144246 0.5488358 0.6393936 0.6696794 #>  [774,] 0.3158758 0.3585868 0.3706053 0.4252485 0.4941148 0.5403542 0.5470744 #>  [775,] 0.8118327 0.8399439 0.8473664 0.8689506 0.9741627 0.9763009 0.9807302 #>  [776,] 0.3974524 0.4094364 0.4199832 0.5053076 0.5211516 0.6099352 0.6329682 #>  [777,] 0.3445357 0.3591586 0.4127848 0.4592028 0.4989853 0.5092464 0.5094085 #>  [778,] 0.3027772 0.4167413 0.4696109 0.5002217 0.5063334 0.5373169 0.6704545 #>  [779,] 0.5278035 0.6956782 0.8427137 0.9090991 0.9683068 0.9759108 0.9917875 #>  [780,] 0.3918320 0.4896400 0.5011922 0.6041616 0.6591222 0.7215146 0.7815183 #>  [781,] 0.5405132 0.6916804 0.6989697 0.8490090 0.8606617 0.8767628 0.9370817 #>  [782,] 0.2646638 0.3213510 0.3692134 0.4093251 0.4185317 0.5074590 0.5181448 #>  [783,] 0.4224714 0.6104783 0.6137225 0.6729815 0.7095745 0.7150264 0.7208141 #>  [784,] 0.4066972 0.6110123 0.6401066 0.6787280 0.6894002 0.7225953 0.7293708 #>  [785,] 0.2995764 0.4729371 0.5985444 0.6034767 0.6364684 0.6724590 0.6766374 #>  [786,] 0.3859147 0.5912506 0.5923463 0.6539348 0.7856543 0.8075600 0.8499710 #>  [787,] 0.4695051 0.8063933 0.8487997 0.9466795 1.0495105 1.0972245 1.0995921 #>  [788,] 0.5394996 0.7051774 0.8265935 0.8760955 0.8869731 0.9950556 1.0018150 #>  [789,] 0.5625080 0.8329584 0.8397169 0.8863304 0.8892563 0.8977614 0.9131567 #>  [790,] 0.3525252 0.4368219 0.4714148 0.5242562 0.5316131 0.5881955 0.5894456 #>  [791,] 0.2915407 0.4650941 0.5777199 0.6138800 0.6294308 0.6847840 0.7266085 #>  [792,] 0.4738325 0.4776311 0.4811124 0.6236002 0.6570703 0.7039359 0.7526110 #>  [793,] 0.4893257 0.5173880 0.6514329 0.7328150 0.7466487 0.7937440 0.7984116 #>  [794,] 0.4894648 0.4934404 0.5353879 0.6123625 0.6483658 0.6927912 0.7029612 #>  [795,] 0.3642874 0.6968107 0.7434605 0.8517166 0.9269132 0.9289136 1.0205662 #>  [796,] 0.3459307 0.5028377 0.5434625 0.5760647 0.5851950 0.5938233 0.6451698 #>  [797,] 0.3974026 0.4114479 0.4151472 0.4304381 0.4426711 0.4582774 0.4631483 #>  [798,] 0.2599636 0.4381897 0.4646938 0.4704474 0.4764335 0.4929968 0.5003201 #>  [799,] 0.1603362 0.3056966 0.3669123 0.4612447 0.4929649 0.5254921 0.5291550 #>  [800,] 0.6608258 1.0429812 1.0439467 1.1099186 1.1286047 1.2167245 1.2207269 #>  [801,] 0.3113292 0.6743795 0.6919364 0.8051438 0.8565539 0.8595808 0.8784011 #>  [802,] 0.3474395 0.5598617 0.6589509 0.7612510 0.8362417 0.9492731 0.9708233 #>  [803,] 0.4604155 0.4981237 0.5171006 0.5691912 0.5693549 0.6212383 0.6379603 #>  [804,] 0.4978547 0.5048296 0.6039762 0.6525114 0.6809391 0.8173460 0.8338392 #>  [805,] 0.2546616 0.4024938 0.4828984 0.4937261 0.5813304 0.6000009 0.6202705 #>  [806,] 0.4080902 0.5169540 0.5808212 0.5931816 0.6385622 0.6709518 0.6768179 #>  [807,] 0.3056034 0.3326814 0.4537911 0.4565760 0.4579166 0.4781016 0.4824973 #>  [808,] 0.2136091 0.4037885 0.4213650 0.4309298 0.4422711 0.4428247 0.5413453 #>  [809,] 0.3995663 0.4340247 0.4436905 0.5134259 0.5156347 0.5339298 0.5704259 #>  [810,] 0.3092599 0.3657331 0.3725628 0.4208733 0.4720911 0.4850523 0.5555859 #>  [811,] 0.3784456 0.3852675 0.4127776 0.4532875 0.6210650 0.6525644 0.6680109 #>  [812,] 0.3433086 0.4590312 0.4968742 0.5173880 0.5616415 0.6270975 0.6659995 #>  [813,] 0.2798545 0.3874939 0.4496889 0.4604155 0.5485144 0.5682557 0.5700471 #>  [814,] 0.3082097 0.3310614 0.3782222 0.4266016 0.4693899 0.4929968 0.5043400 #>  [815,] 0.3461297 0.3816936 0.3835569 0.4024244 0.4161253 0.4371760 0.4834878 #>  [816,] 0.5150732 0.5921002 0.6800489 0.9387221 1.0449819 1.1255987 1.2031884 #>  [817,] 0.4097627 0.5394996 0.6033279 0.6107870 0.7756786 0.8485907 0.8577339 #>  [818,] 0.3514631 0.5049022 0.6213372 0.6854924 0.6952081 0.7058257 0.7449229 #>  [819,] 0.4858187 0.7164687 0.7591843 0.8094750 0.8311792 0.8322227 0.8456569 #>  [820,] 0.5556390 0.6794556 0.7165986 0.7671241 0.7781291 0.7898797 0.8203556 #>  [821,] 0.3112028 0.3530090 0.3912126 0.3977697 0.4197831 0.4252485 0.4859729 #>  [822,] 1.1811835 1.4155497 1.6946680 1.7408778 1.7963002 1.9419126 2.0003276 #>  [823,] 0.4785309 0.5035822 0.5504232 0.5581019 0.5920239 0.6022480 0.6114413 #>  [824,] 1.4441306 1.9944252 2.0704969 2.2442786 2.2650094 2.3348776 2.3617711 #>  [825,] 0.6218947 0.6512875 0.6732712 0.7395676 0.7976003 0.8076283 0.8764037 #>  [826,] 0.3036663 0.6271310 0.7331899 0.8259215 0.9237299 0.9609905 0.9817945 #>  [827,] 0.9193467 1.0772629 1.1219863 1.2334469 1.2451451 1.2538902 1.3005034 #>  [828,] 0.2696111 0.2853528 0.3585868 0.3744725 0.4054881 0.4197831 0.5242217 #>  [829,] 0.3848214 0.4585248 0.5589624 0.5616011 0.5769023 0.6223452 0.6257554 #>  [830,] 0.1793892 0.4991711 0.5590794 0.5758475 0.6482590 0.6809989 0.6897370 #>  [831,] 0.6211108 0.7208141 0.7467857 0.7814715 0.8912662 0.8966985 0.9665416 #>  [832,] 0.5439116 0.6994219 0.9761487 0.9915919 1.0092772 1.0094416 1.0673060 #>  [833,] 0.3097309 0.7838109 0.8271271 0.8466075 0.8590657 0.8687430 1.0163926 #>  [834,] 0.1657857 0.3075964 0.3930878 0.4054881 0.4513086 0.4665484 0.4736562 #>  [835,] 0.6569257 0.7234910 0.8336439 0.8673209 0.9341469 0.9458068 0.9533946 #>  [836,] 0.2218200 0.2753051 0.3113118 0.5836566 0.6286956 0.6558379 0.6649380 #>  [837,] 0.4074138 0.5250252 0.5611636 0.6104833 0.6594435 0.7098716 0.7220400 #>  [838,] 0.3802711 0.5821115 0.6293527 0.6348820 0.6427768 0.6612903 0.7769373 #>  [839,] 0.4277456 0.4302680 0.4351358 0.5361542 0.5427427 0.5441774 0.5844532 #>  [840,] 0.3067851 0.3080777 0.3261829 0.3710223 0.3945596 0.4150834 0.4236751 #>  [841,] 0.4518358 0.5580674 0.6486461 0.6640788 0.7124826 0.7184861 0.7256895 #>  [842,] 0.3160586 0.4083693 0.4399549 0.4689018 0.4820274 0.5174262 0.5196555 #>  [843,] 1.5311992 1.5536753 1.5614253 1.6258930 1.7115210 1.7434298 1.7461672 #>  [844,] 0.2972695 0.5968755 0.6194563 0.6488359 0.6492446 0.6546223 0.7091232 #>  [845,] 0.1795017 0.3869610 0.4826465 0.4837839 0.4985066 0.5214377 0.5393927 #>  [846,] 0.2536980 0.5370576 0.5865902 0.5910692 0.6302841 0.6917589 0.7002640 #>  [847,] 0.3107841 0.4453761 0.4519320 0.5431865 0.6136417 0.6244927 0.6254025 #>  [848,] 0.1719823 0.1765733 0.4436905 0.4489713 0.6157921 0.6186984 0.6720264 #>  [849,] 0.8311973 0.8747926 0.9717083 1.0013779 1.0122960 1.0163732 1.2066618 #>  [850,] 0.2994409 0.4768582 0.4894021 0.6089304 0.6684409 0.7042698 0.8011727 #>  [851,] 0.3365770 0.3985065 0.4241446 0.5156347 0.5156644 0.5252485 0.5470744 #>  [852,] 1.4296416 1.5983391 1.9137894 2.0242065 2.0456072 2.0512273 2.0535124 #>  [853,] 0.4680880 0.6266138 0.6834861 0.7391465 0.7472718 0.8071015 0.8707201 #>  [854,] 0.3394250 0.3848525 0.4798373 0.5234596 0.5509819 0.6162140 0.6383378 #>  [855,] 0.7566811 0.8401697 0.8518542 0.9411251 0.9457062 0.9563972 1.1295818 #>  [856,] 0.2940478 0.3407325 0.3787681 0.4414737 0.4578845 0.5302900 0.5434625 #>  [857,] 0.4942273 0.5455117 0.6028087 0.6346238 0.6826033 0.7024932 0.7393022 #>  [858,] 0.6158580 1.1232248 1.2848476 1.3117549 1.3278298 1.3405774 1.3982930 #>  [859,] 0.4188517 0.4549399 0.4613472 0.5384865 0.6145878 0.6387264 0.6612431 #>  [860,] 0.4792305 0.5141196 0.5410854 0.5430704 0.5812571 0.5814689 0.5905954 #>  [861,] 0.2289517 0.3032933 0.3035479 0.3261829 0.4566556 0.4652289 0.4926226 #>  [862,] 1.3375979 1.5159084 1.7651675 1.7951556 1.8873251 1.9282501 1.9311304 #>  [863,] 0.3479301 0.4158467 0.4475573 0.5239454 0.5443972 0.5572317 0.5943596 #>  [864,] 0.3445994 0.4473554 0.5081086 0.5733389 0.6099352 0.6214573 0.6883512 #>  [865,] 0.2503394 0.4768582 0.6427768 0.7949227 0.8427137 0.8543760 0.8600206 #>  [866,] 0.5509826 0.6028087 0.6743603 0.7374324 0.7572010 0.8214049 0.8687430 #>  [867,] 0.4870908 0.4919594 0.4989698 0.5581019 0.5980778 0.5998886 0.6074706 #>  [868,] 0.4299956 0.6966550 0.7385971 0.7570375 0.8153590 0.8393366 0.8576094 #>  [869,] 0.2995764 0.3944994 0.4367022 0.5075357 0.5297576 0.6499291 0.6631117 #>  [870,] 0.3293306 0.3850889 0.4398420 0.4766956 0.5261269 0.5305005 0.6059146 #>  [871,] 0.4366422 0.4963909 0.5602409 0.5644773 0.5944104 0.6285445 0.6535593 #>  [872,] 0.2618401 0.5512129 0.5897778 0.6207546 0.6642021 0.6813480 0.6973555 #>  [873,] 0.3980096 0.4059614 0.4300678 0.5654316 0.5859741 0.5926003 0.6126095 #>  [874,] 0.4401777 0.5409303 0.6310690 0.6985039 0.7151776 0.7328549 0.7661509 #>  [875,] 0.3694694 0.3722417 0.3940243 0.3984968 0.4334864 0.5203917 0.5396707 #>  [876,] 0.6602341 0.7779108 0.8882337 0.9693348 1.0649957 1.0676211 1.1084016 #>  [877,] 0.5141196 0.5261482 0.5798880 0.6404703 0.6940858 0.7309148 0.7914278 #>  [878,] 0.6389136 0.9553313 1.0718025 1.1883763 1.2044469 1.2161923 1.2191719 #>  [879,] 0.6111134 0.6330021 0.7264062 0.7466766 0.7661509 0.7662488 0.7706794 #>  [880,] 0.3417088 0.4197812 0.4328642 0.4689018 0.5634057 0.6811357 0.6952935 #>  [881,] 0.2312386 0.2828653 0.3092599 0.3927840 0.4562478 0.4812868 0.4826099 #>  [882,] 0.2474450 0.3570338 0.3927840 0.4410145 0.4429527 0.4597591 0.4845243 #>  [883,] 0.1765733 0.2005349 0.4340247 0.4779987 0.5640750 0.5933102 0.5941373 #>  [884,] 0.9609905 0.9755831 1.0158348 1.0248596 1.0306228 1.0421030 1.0602373 #>  [885,] 0.4803380 0.4876600 0.5015561 0.5353879 0.5473466 0.5765421 0.6334912 #>  [886,] 0.2411622 0.3859884 0.4363727 0.4586935 0.5530247 0.5812676 0.6110123 #>  [887,] 0.7483794 0.7858414 0.7975968 0.8328092 0.8531193 0.9108383 0.9761211 #>  [888,] 0.5192799 0.5370576 0.5517135 0.5649657 0.5899088 0.6580907 0.6966668 #>  [889,] 0.1603362 0.2547535 0.3437702 0.5100298 0.5368799 0.5371010 0.5595756 #>  [890,] 0.4959007 0.6041729 0.6174626 0.6970957 0.7220400 0.7628530 0.9100871 #>  [891,] 0.2337535 0.3299522 0.4470890 0.5008382 0.5391656 0.5486938 0.5852984 #>  [892,] 0.2853528 0.3298639 0.3561649 0.3592673 0.4272458 0.4645888 0.4665484 #>  [893,] 0.4506818 0.4981237 0.5566957 0.5673679 0.6193540 0.6484340 0.6538127 #>  [894,] 0.1882941 0.6041616 0.6263253 0.8026338 0.8081701 0.9258872 0.9768949 #>  [895,] 0.2536980 0.4769697 0.5194278 0.5278623 0.5649657 0.5688071 0.5813304 #>  [896,] 0.6724590 0.7350833 0.8214040 0.8284443 0.9983396 1.0588523 1.0601857 #>  [897,] 0.3082097 0.4318124 0.4660285 0.4704474 0.4798373 0.5007229 0.5073744 #>  [898,] 0.5959716 0.6063061 0.6644238 0.6669696 0.6904804 0.7117599 0.7358067 #>  [899,] 0.6225775 0.6580907 0.7458233 0.7656519 0.8636642 0.9055562 0.9134872 #>  [900,] 0.2343413 0.4215890 0.5151912 0.5955406 0.7681511 0.8515844 0.8669462 #>  [901,] 0.3285568 0.4099349 0.4197421 0.4618651 0.5232328 0.5740169 0.6015343 #>  [902,] 0.3784988 0.4220740 0.4358854 0.4508229 0.4588823 0.5052489 0.5454542 #>  [903,] 2.0556048 2.1108382 2.1577122 2.1925334 2.2083299 2.2801831 2.5363151 #>  [904,] 0.4114465 0.6254268 0.8252143 1.0101165 1.0390967 1.1097381 1.1741516 #>  [905,] 0.3737895 0.3951226 0.4112151 0.4597591 0.4654187 0.5176881 0.5691951 #>  [906,] 0.4542098 0.5278493 0.6860703 0.7970234 0.8091093 0.8225765 0.8265693 #>  [907,] 0.4938878 0.6573238 0.6673814 0.7260920 0.7379023 0.7393258 0.7920760 #>  [908,] 0.2994951 0.3686147 0.4396160 0.4625997 0.4921990 0.5790150 0.5847977 #>  [909,] 0.1502014 0.3688427 0.3859884 0.4635766 0.5136618 0.5138721 0.5232558 #>  [910,] 0.2615611 0.4080902 0.4463284 0.5950760 0.6132402 0.6481007 0.6598114 #>  [911,] 0.4851220 0.5057987 0.5622607 0.5920986 0.6190446 0.7151776 0.7512546 #>  [912,] 0.7962522 1.1027254 1.3672287 1.3807148 1.4204162 1.4331734 1.6037038 #>  [913,] 0.5067543 0.5221909 0.5752158 0.6147478 0.6218947 0.6348818 0.6790847 #>  [914,] 0.3227764 0.3627995 0.4433784 0.4683933 0.4759184 0.5595899 0.5716828 #>  [915,] 0.4388591 0.4663869 0.4992582 0.5415097 0.5598902 0.5853602 0.5982363 #>  [916,] 0.4621747 0.5439116 0.5810662 0.6525644 0.7261151 0.7618664 0.7742697 #>  [917,] 0.5270508 0.6896589 0.6949101 0.6962610 0.7263227 0.7282629 0.7321677 #>  [918,] 0.1880397 0.3118351 0.3850889 0.4812505 0.4999104 0.5074146 0.5335917 #>  [919,] 0.1963591 0.4696109 0.4981826 0.5449325 0.5960984 0.6329302 0.6556979 #>  [920,] 0.3811083 0.4901664 0.5100151 0.5351490 0.5490831 0.5580313 0.5640750 #>  [921,] 0.3875109 0.5019206 0.5601844 0.5697414 0.5737582 0.6291796 0.6404703 #>  [922,] 0.2136091 0.3576403 0.3815088 0.4719349 0.4834617 0.5229099 0.5483363 #>  [923,] 0.6154598 0.6424847 0.6907413 0.8670046 0.8818672 0.8885824 0.8975248 #>  [924,] 0.5671601 0.8629524 1.0250429 1.0556881 1.2399047 1.2926398 1.5970988 #>  [925,] 0.6154598 0.7423847 0.8346140 1.0411140 1.0660808 1.0823524 1.1049130 #>  [926,] 0.3386233 0.4579561 0.6172867 0.6309674 0.6380812 0.6801436 0.6812344 #>  [927,] 0.4360400 0.5995342 0.8487750 0.8763325 0.9250326 0.9493566 0.9853316 #>  [928,] 0.6293818 0.7704966 0.8845181 0.9375603 0.9499213 0.9609299 1.0233418 #>  [929,] 0.4870615 0.5015118 0.5460978 0.6271310 0.6976519 0.7055782 0.8089936 #>  [930,] 0.5042632 0.6896709 0.7113964 0.7290197 0.7380223 0.7713337 0.7809407 #>  [931,] 0.3329671 0.5655398 0.7402701 0.8392612 0.8733825 0.8951593 0.9067863 #>  [932,] 0.8008904 0.8786278 0.8980172 0.9943680 1.0081010 1.0912510 1.3251528 #>  [933,] 0.6306143 0.6469669 0.7280660 0.7928859 0.8346431 0.8725721 0.8731730 #>  [934,] 0.2743603 0.3937665 0.4599237 0.5155835 0.5191472 0.5414595 0.5740675 #>  [935,] 0.1921174 0.4510282 0.4783833 0.5052489 0.5644773 0.6008386 0.6455745 #>  [936,] 0.5700973 0.6075683 0.6546223 0.6574239 0.6743603 0.6826033 0.6853944 #>  [937,] 0.3119060 0.3528047 0.3627995 0.3915093 0.4358854 0.4609358 0.4802595 #>  [938,] 0.4185317 0.4220740 0.4422055 0.4509399 0.4915624 0.5072311 0.5301315 #>  [939,] 0.6726428 0.7354445 0.7427972 0.7515865 0.7576142 0.7620362 0.7784925 #>  [940,] 0.4172339 0.6413421 0.6954323 0.7064193 0.7385654 0.8145048 0.8370775 #>  [941,] 0.2743603 0.5324977 0.5416235 0.5705223 0.5984565 0.6170349 0.6286326 #>  [942,] 0.3027772 0.4896400 0.4992742 0.5449325 0.5624760 0.6325971 0.6948436 #>  [943,] 0.4111658 0.5943301 0.6385163 0.6979967 0.8446133 0.8896609 0.9001202 #>  [944,] 0.4556055 0.4896084 0.5217608 0.5254022 0.5556390 0.5913540 0.6264371 #>  [945,] 0.4227960 0.4896124 0.5120180 0.5913042 0.6111190 0.6146042 0.6258101 #>  [946,] 0.6296239 0.6892862 0.8390236 0.8875493 0.9461592 1.0529038 1.1175567 #>  [947,] 0.3458876 0.4801832 0.5002871 0.5415791 0.6182001 0.6493688 0.6571560 #>  [948,] 0.5578534 0.7378963 0.8169656 0.8296489 0.8388325 0.8670486 0.8909451 #>  [949,] 0.3590217 0.5057987 0.5953573 0.6310690 0.7259945 0.7391465 0.8038318 #>  [950,] 0.5544410 0.7224488 0.8083694 0.8105955 0.8534005 0.8792767 0.8823584 #>  [951,] 0.6389136 0.7099335 0.7347236 0.8351929 0.8554912 0.8708675 0.8733825 #>  [952,] 0.4955922 0.6729536 0.7140313 0.7482271 0.7661296 0.8388325 0.8487750 #>  [953,] 0.4158467 0.4642895 0.4868032 0.5434911 0.5755035 0.5863843 0.5917659 #>  [954,] 0.1457126 0.5038661 0.5415791 0.5644321 0.6778771 0.7278628 0.8170445 #>  [955,] 0.3342053 0.3352511 0.4344955 0.4351358 0.4720053 0.5108792 0.5189029 #>  [956,] 0.9457062 0.9849265 1.0223147 1.0483017 1.0934914 1.0951222 1.1603080 #>  [957,] 0.3633023 0.4441841 0.4480393 0.5013117 0.5053819 0.5627093 0.6093778 #>  [958,] 0.6569257 0.8302082 0.8922407 0.8980629 0.9490880 0.9769237 1.0046860 #>  [959,] 0.3097309 0.7675038 0.9328969 0.9411251 1.0235728 1.0326252 1.0389430 #>  [960,] 0.4588987 0.4657427 0.6035151 0.6461901 0.6718601 0.6904380 0.7021603 #>  [961,] 0.7051774 0.7756786 0.9457200 1.0963949 1.1187557 1.1253954 1.1275522 #>  [962,] 0.2479778 0.2499468 0.4179349 0.4187607 0.4781016 0.5302001 0.5350829 #>  [963,] 0.5012870 0.5258843 0.5312717 0.5410854 0.5644517 0.5668125 0.5941373 #>  [964,] 0.7557878 0.8613864 0.9285815 0.9622023 1.0018294 1.0047035 1.0277976 #>  [965,] 0.3341905 0.3604918 0.3978667 0.4150834 0.4213421 0.4661846 0.4741237 #>  [966,] 0.3085853 0.4051373 0.4468204 0.4954094 0.5105782 0.5119253 0.5684175 #>  [967,] 0.3886122 0.5793263 0.5798880 0.7502501 0.7891617 0.8239215 0.9211892 #>  [968,] 0.1628608 0.7996086 0.9813975 1.0457239 1.0600730 1.0738716 1.1739681 #>  [969,] 0.8815454 0.9994666 1.0613208 1.1361912 1.1385667 1.1426683 1.2533244 #>  [970,] 0.2316066 0.4347131 0.5258843 0.5430704 0.5797168 0.6455426 0.6567670 #>  [971,] 0.6492446 0.6574239 0.6747291 0.8214049 0.8362544 0.8401697 0.8707394 #>  [972,] 0.1412353 0.3272235 0.3900844 0.4023933 0.4148677 0.4451457 0.4488936 #>  [973,] 0.8747926 1.0726503 1.1068952 1.1648686 1.2204814 1.2386833 1.2633442 #>  [974,] 0.8193688 0.8456541 0.8527007 0.8686242 0.9171797 0.9520110 0.9659309 #>  [975,] 0.2780944 0.3015907 0.3376254 0.3811083 0.3974026 0.4028254 0.4308291 #>  [976,] 0.3893338 0.4505269 0.4605785 0.6256895 0.6536408 0.7331622 0.7586668 #>  [977,] 0.6911686 0.7268477 0.8231290 0.8424534 0.9000961 0.9033437 0.9233767 #>  [978,] 0.3496784 0.4432166 0.5334193 0.5989136 0.7096008 0.7235467 0.7262585 #>  [979,] 0.2847934 0.3882206 0.4453761 0.4810555 0.5301634 0.5475485 0.5485547 #>  [980,] 0.3859954 0.4699200 0.4811191 0.4980564 0.5245181 0.5667576 0.5963322 #>  [981,] 0.7278976 0.7327970 0.7627281 0.7788747 0.7951149 0.8195750 0.8378108 #>  [982,] 0.3884973 0.5418577 0.5821115 0.7216168 0.7290825 0.7671997 0.7678536 #>  [983,] 0.3086478 0.4160685 0.4996085 0.5072499 0.5879309 0.7115002 0.7117846 #>  [984,] 0.6303962 0.6589045 0.8001376 0.8145048 0.8338672 0.9112486 0.9150192 #>  [985,] 0.5460581 0.6507848 0.8080487 0.8499740 0.8614721 0.8856987 0.8991177 #>  [986,] 0.3589144 0.5418090 0.5852687 0.5985745 0.7017688 0.7516601 0.7699749 #>  [987,] 0.1657857 0.2696111 0.3561649 0.3862536 0.4120583 0.4539152 0.4941148 #>  [988,] 0.5119789 0.5209139 0.5622382 0.5642782 0.5787497 0.5996913 0.6040388 #>  [989,] 0.1983044 0.5926421 0.6151594 0.6539348 0.6827474 0.8271119 0.8582468 #>  [990,] 0.3474395 0.5745431 0.6616265 0.7282968 0.8629524 1.0278892 1.1192310 #>  [991,] 0.4299956 0.4577316 0.5259341 0.5962516 0.6553439 0.7172299 0.7221793 #>  [992,] 0.6325971 0.6704545 0.6972553 0.7056987 0.7278976 0.7571621 0.7676339 #>  [993,] 0.4489389 0.4528535 0.5843780 0.6116490 0.6194128 0.7036732 0.8328092 #>  [994,] 1.2167245 1.4022221 1.4315399 1.4493745 1.4979496 1.5439557 1.6053293 #>  [995,] 0.2972695 0.5141040 0.6075683 0.6081224 0.6466797 0.6477152 0.6839222 #>  [996,] 0.3875109 0.4253779 0.5457228 0.5545367 0.5935204 0.6400436 0.6516956 #>  [997,] 0.2770382 0.5320051 0.7591667 1.0625637 1.1118740 1.1502454 1.1741015 #>  [998,] 0.3747992 0.3757904 0.5399607 0.5601844 0.6182612 0.6194519 0.6348818 #>  [999,] 0.6915614 0.7037830 0.7320299 0.8083417 0.8444847 0.8632591 0.9026419 #> [1000,] 0.6776881 0.9553533 1.0390967 1.1113306 1.1381286 1.1394759 1.2094194 #>              [,8]      [,9]     [,10] #>    [1,] 1.0948143 1.1253654 1.1294703 #>    [2,] 0.5525923 0.5752191 0.5948832 #>    [3,] 1.0433555 1.0634161 1.0639414 #>    [4,] 0.6020509 0.6321894 0.6900302 #>    [5,] 0.5374756 0.5838935 0.6076137 #>    [6,] 1.9607194 1.9707421 1.9894195 #>    [7,] 0.9771859 1.0105006 1.0358824 #>    [8,] 0.7905344 0.7948463 0.8065179 #>    [9,] 0.7325301 0.7529760 0.7644297 #>   [10,] 1.8648328 1.8954785 1.9155196 #>   [11,] 0.7809546 0.8205875 0.8244164 #>   [12,] 0.5654316 0.5838902 0.5863865 #>   [13,] 1.9906122 2.0133325 2.0347324 #>   [14,] 0.5282038 0.5294087 0.5580313 #>   [15,] 0.6695476 0.6720961 0.7860751 #>   [16,] 0.6848587 0.6942770 0.6993759 #>   [17,] 1.2454930 1.2909212 1.3323128 #>   [18,] 0.7167810 0.7366055 0.7377562 #>   [19,] 0.6401902 0.6607465 0.6644822 #>   [20,] 0.5855031 0.5910505 0.6080686 #>   [21,] 0.5373405 0.5618657 0.5968875 #>   [22,] 1.0337314 1.1039228 1.1077311 #>   [23,] 0.4721043 0.4789884 0.4811924 #>   [24,] 0.7415321 0.7484844 0.7656143 #>   [25,] 0.8201046 0.8592889 0.8610294 #>   [26,] 0.8449646 0.8456569 0.8807989 #>   [27,] 1.1437594 1.1803415 1.2018161 #>   [28,] 0.7660779 0.7776805 0.8061198 #>   [29,] 0.9298050 0.9307238 0.9379767 #>   [30,] 0.7981114 0.8339729 0.8374160 #>   [31,] 0.9943953 1.0235233 1.0283907 #>   [32,] 0.7459984 0.7858414 0.7963569 #>   [33,] 0.8277493 0.8512057 0.8969156 #>   [34,] 0.9271726 0.9673539 0.9850058 #>   [35,] 0.6410389 0.6600794 0.6959216 #>   [36,] 1.6054625 1.6865838 1.6911640 #>   [37,] 0.5849180 0.6452064 0.6531977 #>   [38,] 0.5227291 0.5905755 0.6106738 #>   [39,] 1.5553362 1.6244928 1.6247010 #>   [40,] 0.5028352 0.5363079 0.5814556 #>   [41,] 0.9051968 0.9132779 0.9296012 #>   [42,] 0.6478459 0.6729798 0.6803337 #>   [43,] 0.4674898 0.4766956 0.4847473 #>   [44,] 0.7856933 0.8096945 0.8112277 #>   [45,] 0.8419828 0.8642496 0.9374454 #>   [46,] 0.7466119 0.7722180 0.7869417 #>   [47,] 1.6690312 1.6896383 1.6958277 #>   [48,] 0.4829012 0.5538597 0.5852644 #>   [49,] 0.5462467 0.5481299 0.5585343 #>   [50,] 0.8244164 0.8805266 0.9358046 #>   [51,] 0.6613715 0.6811357 0.7124117 #>   [52,] 0.7191833 0.7194659 0.7649574 #>   [53,] 1.2564305 1.3031879 1.3709338 #>   [54,] 0.7095881 0.7101002 0.7457393 #>   [55,] 0.8632450 0.9452734 0.9582362 #>   [56,] 1.2330285 1.2860053 1.2878207 #>   [57,] 0.6133775 0.6570875 0.6647266 #>   [58,] 0.7066226 0.7161633 0.7200286 #>   [59,] 1.1455786 1.1821034 1.2087668 #>   [60,] 0.7898192 0.7939243 0.8015919 #>   [61,] 0.8167129 0.8387293 0.8398155 #>   [62,] 0.6275538 0.6390093 0.6403610 #>   [63,] 0.6823798 0.6855014 0.6864298 #>   [64,] 0.6007936 0.6157251 0.6158978 #>   [65,] 1.0931949 1.1069983 1.1255987 #>   [66,] 1.1747662 1.1762794 1.1793043 #>   [67,] 0.7198973 0.8448278 0.8528679 #>   [68,] 0.7744335 0.8008949 0.8113809 #>   [69,] 0.8337477 0.8546016 0.8666153 #>   [70,] 0.7035311 0.7185677 0.7657909 #>   [71,] 0.6959320 0.7141490 0.7330386 #>   [72,] 0.8266657 0.8555373 0.8824980 #>   [73,] 1.0689941 1.0765964 1.0970276 #>   [74,] 0.6422858 0.6753351 0.6794117 #>   [75,] 0.9881594 1.0049256 1.0092698 #>   [76,] 0.7840795 0.8029412 0.8446133 #>   [77,] 0.8339729 0.8852561 0.8885824 #>   [78,] 0.6776343 0.6783473 0.6927912 #>   [79,] 0.5990214 0.6148437 0.6178335 #>   [80,] 0.6261561 0.6705603 0.6917049 #>   [81,] 0.8183042 0.8248413 0.8452508 #>   [82,] 1.5711966 1.5921858 1.6799638 #>   [83,] 0.5473466 0.5577556 0.5585343 #>   [84,] 1.4575733 1.4748398 1.5450134 #>   [85,] 0.9101200 0.9215540 0.9400282 #>   [86,] 0.6895740 0.6964980 0.8398155 #>   [87,] 0.5315435 0.5926003 0.5940546 #>   [88,] 0.9466164 0.9505368 0.9819191 #>   [89,] 0.7085806 0.7539298 0.7576612 #>   [90,] 0.4639866 0.4886340 0.4978754 #>   [91,] 1.0661671 1.0703207 1.0850179 #>   [92,] 1.0350864 1.1246410 1.1410353 #>   [93,] 0.6273846 0.6396846 0.6729936 #>   [94,] 0.6621461 0.6730841 0.6755372 #>   [95,] 0.5589076 0.5718031 0.5726976 #>   [96,] 1.0967401 1.1063678 1.1619855 #>   [97,] 0.6227062 0.6631667 0.7028310 #>   [98,] 1.4545619 1.4804709 1.4940935 #>   [99,] 1.2369132 1.2409701 1.2629280 #>  [100,] 0.6414267 0.6420026 0.6812624 #>  [101,] 0.6256541 0.6270762 0.6340315 #>  [102,] 0.8030102 0.8399439 0.8470966 #>  [103,] 1.3906688 1.4321209 1.4531103 #>  [104,] 1.4258069 1.4359298 1.4368440 #>  [105,] 0.9993196 1.0286461 1.0327843 #>  [106,] 0.5507339 0.5758143 0.6218453 #>  [107,] 0.9608068 0.9634866 0.9682306 #>  [108,] 1.3341929 1.3603603 1.4866068 #>  [109,] 1.3107763 1.3393935 1.3667934 #>  [110,] 0.8175726 0.8257304 0.8447845 #>  [111,] 0.4845243 0.5029748 0.5270942 #>  [112,] 0.4837839 0.5098671 0.5127951 #>  [113,] 0.5567038 0.5651490 0.5693620 #>  [114,] 0.8781318 0.9038817 0.9218376 #>  [115,] 0.7588572 0.7636821 0.7788853 #>  [116,] 0.8845181 0.9186031 0.9341500 #>  [117,] 0.6133688 0.6480952 0.6680145 #>  [118,] 0.8748226 0.8857262 0.8882337 #>  [119,] 0.9168692 0.9190963 0.9461592 #>  [120,] 0.5529531 0.5568170 0.5956290 #>  [121,] 0.5807087 0.5853281 0.6225125 #>  [122,] 0.6371422 0.6550249 0.6594435 #>  [123,] 0.7378963 0.8014425 0.8158279 #>  [124,] 0.9562657 0.9765916 0.9771331 #>  [125,] 0.7866932 0.7870167 0.8082479 #>  [126,] 0.8753202 0.9776262 0.9876411 #>  [127,] 0.5155695 0.5517497 0.5578328 #>  [128,] 1.1372116 1.2638671 1.2847125 #>  [129,] 0.8325244 0.8735306 0.8902842 #>  [130,] 0.6917049 0.6949101 0.7003802 #>  [131,] 1.2206230 1.2382200 1.2576681 #>  [132,] 0.6918563 0.6972482 0.6981607 #>  [133,] 0.7293444 0.7451747 0.7648917 #>  [134,] 1.0767381 1.1098807 1.1120624 #>  [135,] 0.8793499 0.9069460 0.9134570 #>  [136,] 0.6395725 0.6667419 0.6688439 #>  [137,] 0.7184914 0.7327227 0.7652532 #>  [138,] 0.7553037 0.8062697 0.8073952 #>  [139,] 0.7791502 0.8055212 0.8210332 #>  [140,] 0.7756952 0.7866932 0.8007903 #>  [141,] 0.7677695 0.7754018 0.7818217 #>  [142,] 0.5684539 0.5996913 0.6007714 #>  [143,] 1.3375979 1.4037835 1.4188600 #>  [144,] 0.7343907 0.7648775 0.7744335 #>  [145,] 1.0005149 1.0839008 1.1359603 #>  [146,] 1.9247666 2.0528754 2.1450529 #>  [147,] 1.5396802 1.5606996 1.5799396 #>  [148,] 0.6387329 0.6418468 0.7399409 #>  [149,] 1.4024336 1.4556944 1.4722021 #>  [150,] 0.6279512 0.6348908 0.6559528 #>  [151,] 1.0326327 1.0389256 1.0914895 #>  [152,] 0.9378915 0.9794508 0.9807302 #>  [153,] 1.0243505 1.0493163 1.0726503 #>  [154,] 1.9435902 2.0558332 2.0685179 #>  [155,] 0.6269097 0.6477152 0.6494768 #>  [156,] 0.8093809 0.8215576 0.8361150 #>  [157,] 0.5778372 0.5838077 0.5843167 #>  [158,] 0.6856160 0.6878116 0.6889679 #>  [159,] 1.3000231 1.3299072 1.4954100 #>  [160,] 0.9060245 0.9248323 0.9391637 #>  [161,] 0.7344118 0.7827488 0.8158820 #>  [162,] 0.5290869 0.5333304 0.5641456 #>  [163,] 0.7405819 0.7453283 0.7493836 #>  [164,] 1.0792046 1.1108133 1.1561070 #>  [165,] 0.5784775 0.5840255 0.5874667 #>  [166,] 0.8497432 0.8526097 0.8793478 #>  [167,] 0.5301634 0.5773118 0.5815696 #>  [168,] 0.9205566 1.0556881 1.0748362 #>  [169,] 0.6847138 0.6932394 0.7051132 #>  [170,] 0.6720961 0.6875287 0.7077823 #>  [171,] 0.6625082 0.6636391 0.7048870 #>  [172,] 0.9430009 0.9596114 1.0043056 #>  [173,] 0.8368947 0.8442932 0.9303547 #>  [174,] 0.8347588 0.8516636 0.8723330 #>  [175,] 0.6116490 0.6363949 0.6639107 #>  [176,] 0.7434605 0.7671118 0.8219937 #>  [177,] 0.6475037 0.6693719 0.6704771 #>  [178,] 1.3141811 1.3641529 1.3654928 #>  [179,] 0.7288562 0.7513864 0.8175451 #>  [180,] 1.0607921 1.0778866 1.0892902 #>  [181,] 0.5993173 0.6505006 0.6528188 #>  [182,] 0.7856517 0.8236180 0.8815996 #>  [183,] 1.2932255 1.2943257 1.3099257 #>  [184,] 0.5943086 0.6065965 0.6508316 #>  [185,] 0.8558937 1.0087461 1.0173097 #>  [186,] 0.7332994 0.7524957 0.7620211 #>  [187,] 0.5388128 0.5724169 0.5871660 #>  [188,] 0.4453320 0.4781089 0.4906804 #>  [189,] 0.6825961 0.7315208 0.7662661 #>  [190,] 0.6261561 0.6322562 0.6387264 #>  [191,] 0.5431800 0.5493708 0.5842524 #>  [192,] 0.9366650 1.0115112 1.0139018 #>  [193,] 0.7791763 0.7877686 0.8267271 #>  [194,] 0.4999803 0.5224957 0.5284957 #>  [195,] 0.7287542 0.7338708 0.7382701 #>  [196,] 0.6793757 0.7002640 0.7527591 #>  [197,] 0.8001376 0.8348291 0.8683633 #>  [198,] 0.8281828 0.8604421 0.8701024 #>  [199,] 0.7081871 0.7107376 0.7260920 #>  [200,] 0.8064651 0.8132218 0.8245745 #>  [201,] 1.1696744 1.1757446 1.1955097 #>  [202,] 0.5215113 0.5506487 0.5559009 #>  [203,] 0.6368902 0.6431490 0.6779259 #>  [204,] 0.7081038 0.7217274 0.7359611 #>  [205,] 0.7783967 0.7897575 0.8099471 #>  [206,] 2.2261040 2.2775297 2.3224374 #>  [207,] 0.9126229 0.9135974 0.9346452 #>  [208,] 0.7500319 0.7543159 0.8307144 #>  [209,] 0.5990616 0.6094973 0.6518840 #>  [210,] 0.7939766 0.7948463 0.8174748 #>  [211,] 0.6363949 0.6399279 0.6597046 #>  [212,] 0.7984211 0.8140872 0.8308921 #>  [213,] 0.6526012 0.6779259 0.7076093 #>  [214,] 0.6954323 0.7328516 0.8023101 #>  [215,] 0.7891139 0.8550059 0.8793124 #>  [216,] 0.6767596 0.6819420 0.7056023 #>  [217,] 0.5446488 0.5520749 0.5598840 #>  [218,] 0.6493102 0.6569956 0.7001344 #>  [219,] 0.6517485 0.6598114 0.6637741 #>  [220,] 1.3616232 1.3623973 1.3651631 #>  [221,] 0.9490913 0.9776484 1.0237415 #>  [222,] 1.0844905 1.0989884 1.1113306 #>  [223,] 0.6221887 0.6253999 0.6451453 #>  [224,] 0.8194787 0.8278785 0.8498218 #>  [225,] 0.5101514 0.5381790 0.5455016 #>  [226,] 0.7723712 0.7773210 0.7809546 #>  [227,] 0.6798027 0.6873260 0.6927150 #>  [228,] 0.7488809 0.7905154 0.8101955 #>  [229,] 0.6734346 0.6924004 0.7396594 #>  [230,] 0.6067046 0.6370304 0.6404394 #>  [231,] 0.6918033 0.7091232 0.7606984 #>  [232,] 1.2896599 1.3014405 1.3156883 #>  [233,] 0.5900934 0.6004548 0.6081852 #>  [234,] 0.6822182 0.6979967 0.7666046 #>  [235,] 0.6520138 0.6824711 0.6960982 #>  [236,] 0.7053574 0.7241683 0.7403172 #>  [237,] 0.5986689 0.5990214 0.6377405 #>  [238,] 0.7920279 0.8213955 0.8286330 #>  [239,] 1.2819247 1.2855510 1.3117287 #>  [240,] 0.7161184 0.7414333 0.7443708 #>  [241,] 1.0238656 1.0239953 1.0652112 #>  [242,] 0.7274085 0.8577339 0.9286956 #>  [243,] 0.8815454 0.8823584 0.9279361 #>  [244,] 1.0295641 1.0425783 1.0451755 #>  [245,] 0.5792627 0.5956290 0.5963923 #>  [246,] 1.0161725 1.0426072 1.0429812 #>  [247,] 0.5784076 0.5812280 0.6161878 #>  [248,] 0.7515865 0.8088560 0.8094516 #>  [249,] 1.1293264 1.1461501 1.1804159 #>  [250,] 1.1818696 1.1882331 1.1978149 #>  [251,] 0.7825243 0.7996498 0.8301877 #>  [252,] 1.0085870 1.0653633 1.0755396 #>  [253,] 0.5808555 0.5864900 0.6044754 #>  [254,] 1.7971424 1.8032660 1.8215755 #>  [255,] 0.6878055 0.7056987 0.7316238 #>  [256,] 0.9891129 1.0039163 1.0513837 #>  [257,] 0.7224331 0.7338708 0.7404499 #>  [258,] 0.6437494 0.6840457 0.6865839 #>  [259,] 0.9520110 1.0119328 1.0333963 #>  [260,] 0.8879565 0.8959714 0.9304029 #>  [261,] 0.5361542 0.5636682 0.5842524 #>  [262,] 0.8899253 0.8908305 0.9057293 #>  [263,] 0.6037244 0.6114538 0.6404394 #>  [264,] 1.0037048 1.0046564 1.0069419 #>  [265,] 0.6911578 0.7127932 0.7773210 #>  [266,] 1.4057024 1.4076882 1.4225578 #>  [267,] 1.1279720 1.1550765 1.1581750 #>  [268,] 0.5414595 0.5564536 0.6357178 #>  [269,] 0.6076115 0.6193471 0.6276841 #>  [270,] 0.6143492 0.6556173 0.6836048 #>  [271,] 2.4496041 2.5344793 2.5391836 #>  [272,] 0.6044852 0.6194560 0.6485100 #>  [273,] 1.3404538 1.4055332 1.4131752 #>  [274,] 0.5337690 0.5394863 0.5442631 #>  [275,] 0.6493688 0.6504903 0.6757886 #>  [276,] 0.9664330 1.0029752 1.0502675 #>  [277,] 1.2916295 1.3270275 1.3620397 #>  [278,] 0.7264431 0.7280660 0.7652532 #>  [279,] 0.5512399 0.5529531 0.5653469 #>  [280,] 1.2674576 1.2947856 1.3007113 #>  [281,] 0.6846347 0.6856328 0.7447192 #>  [282,] 0.8194439 0.8902137 0.9103053 #>  [283,] 0.7289972 0.7363352 0.7464540 #>  [284,] 0.5464866 0.5698526 0.5700085 #>  [285,] 0.7070283 0.7107505 0.7586351 #>  [286,] 0.9786823 0.9902617 1.0043523 #>  [287,] 0.8835670 0.9166792 0.9298050 #>  [288,] 0.8211376 0.8313677 0.8479914 #>  [289,] 0.5036908 0.5224957 0.5538597 #>  [290,] 0.5881955 0.5898104 0.6164692 #>  [291,] 0.5928864 0.6194560 0.6233224 #>  [292,] 0.6303293 0.6526242 0.6651987 #>  [293,] 0.6756108 0.6893942 0.7012269 #>  [294,] 0.6567613 0.6709421 0.6779583 #>  [295,] 1.1418658 1.3219935 1.3361117 #>  [296,] 0.6455426 0.6471754 0.6570015 #>  [297,] 1.6822661 1.7729263 1.7731140 #>  [298,] 0.5762717 0.5778650 0.5849180 #>  [299,] 0.6902308 0.6924779 0.6946994 #>  [300,] 0.9062407 0.9221555 1.0124701 #>  [301,] 0.5691434 0.6206144 0.6520764 #>  [302,] 0.4645308 0.5022562 0.5374942 #>  [303,] 0.6195858 0.6303293 0.6317110 #>  [304,] 0.6666715 0.6754799 0.6776307 #>  [305,] 0.9657700 1.0268108 1.0743191 #>  [306,] 0.6860968 0.7290304 0.7363749 #>  [307,] 0.9330724 1.0323207 1.0533723 #>  [308,] 0.6227840 0.6391521 0.6412936 #>  [309,] 1.0081923 1.0499037 1.1157758 #>  [310,] 0.8485907 0.8904358 1.0119328 #>  [311,] 1.4585826 1.5491043 1.5699872 #>  [312,] 1.0084942 1.0480537 1.1049122 #>  [313,] 0.8173120 0.8294177 0.8338392 #>  [314,] 0.5715760 0.5716476 0.5847812 #>  [315,] 0.7681936 0.7818949 0.7836927 #>  [316,] 0.8939884 0.9396375 0.9799018 #>  [317,] 0.6936951 0.7488810 0.7905965 #>  [318,] 0.5284969 0.5448599 0.5563110 #>  [319,] 0.7708202 0.7891957 0.7910154 #>  [320,] 0.6448727 0.6503403 0.6822182 #>  [321,] 1.0162726 1.0430789 1.0781098 #>  [322,] 0.5721931 0.5832461 0.6130888 #>  [323,] 0.6755372 0.6960078 0.7344727 #>  [324,] 0.9294930 0.9347328 0.9469777 #>  [325,] 0.5809545 0.6368902 0.6649969 #>  [326,] 0.5545367 0.5669852 0.5982363 #>  [327,] 0.8570095 0.8741171 0.9018141 #>  [328,] 0.5784438 0.6741597 0.6947247 #>  [329,] 2.1946260 2.1992391 2.2446966 #>  [330,] 0.6299160 0.6330021 0.6784835 #>  [331,] 1.6457078 1.6651054 1.7061774 #>  [332,] 0.8167660 0.8280890 0.8350104 #>  [333,] 0.7697932 0.7825019 0.8039611 #>  [334,] 0.6594180 0.6819420 0.7174661 #>  [335,] 0.6489326 0.6538819 0.6575023 #>  [336,] 1.0346965 1.0823524 1.1103062 #>  [337,] 1.1231594 1.1492845 1.1676271 #>  [338,] 0.8149124 0.8261038 0.8263901 #>  [339,] 0.5833905 0.5875335 0.5910737 #>  [340,] 0.7484844 0.7489488 0.8072147 #>  [341,] 0.8174948 0.8685083 0.8690115 #>  [342,] 0.6255115 0.6255987 0.6267861 #>  [343,] 0.7351369 0.7598897 0.7924194 #>  [344,] 0.6258388 0.6274167 0.6378654 #>  [345,] 0.7616623 0.7817998 0.7882697 #>  [346,] 0.9191435 0.9289766 0.9628716 #>  [347,] 0.6106381 0.6141360 0.6265655 #>  [348,] 0.5110051 0.5153055 0.5965174 #>  [349,] 0.6150592 0.6544731 0.6558452 #>  [350,] 0.9379206 0.9586946 0.9891129 #>  [351,] 0.6922921 0.7232509 0.7310245 #>  [352,] 0.8284646 0.8411821 0.8562097 #>  [353,] 0.6232940 0.6251972 0.6336534 #>  [354,] 0.5802153 0.5900908 0.5905871 #>  [355,] 1.6016927 1.6183683 1.6376652 #>  [356,] 0.8466935 0.8662803 0.8833108 #>  [357,] 0.7460089 0.7497731 0.7529493 #>  [358,] 0.8835670 0.9017609 0.9370817 #>  [359,] 0.6362140 0.6389466 0.6555353 #>  [360,] 0.7257879 0.7571024 0.7628530 #>  [361,] 0.6661770 0.6735804 0.6826631 #>  [362,] 0.7604367 0.7631046 0.7719649 #>  [363,] 1.0205662 1.0823203 1.1001316 #>  [364,] 0.9601521 0.9658617 0.9756815 #>  [365,] 0.7093827 0.7349957 0.7540449 #>  [366,] 0.9733015 0.9780837 0.9795397 #>  [367,] 0.8142208 0.8174948 0.8393366 #>  [368,] 1.1288409 1.1303360 1.1309967 #>  [369,] 0.9086849 0.9438448 1.0109677 #>  [370,] 0.5769253 0.5848354 0.5854538 #>  [371,] 0.9085786 1.0613554 1.0737194 #>  [372,] 0.8003550 0.8014943 0.8155339 #>  [373,] 0.6520764 0.6809989 0.6925582 #>  [374,] 1.0800418 1.0875153 1.1016418 #>  [375,] 0.5740169 0.5790913 0.6239847 #>  [376,] 1.4694834 1.4839979 1.5690349 #>  [377,] 0.5039508 0.5773118 0.6093329 #>  [378,] 0.6447953 0.7064193 0.7456880 #>  [379,] 0.7255185 0.7739046 0.7975968 #>  [380,] 0.7766619 0.7914277 0.7957228 #>  [381,] 0.6988580 0.7077364 0.7449540 #>  [382,] 0.9485530 0.9536875 0.9786161 #>  [383,] 0.6256541 0.6275538 0.6362574 #>  [384,] 0.6720682 0.7787870 0.7957228 #>  [385,] 1.2687172 1.2802805 1.3047140 #>  [386,] 0.5507339 0.6064328 0.6108049 #>  [387,] 0.8122301 0.8179785 0.8191682 #>  [388,] 0.7100582 0.7123172 0.7344118 #>  [389,] 0.8584639 0.8613229 0.8715004 #>  [390,] 0.7809224 0.7943283 0.8036352 #>  [391,] 0.8789989 0.8846523 0.9430009 #>  [392,] 0.5787497 0.6434306 0.6461901 #>  [393,] 0.5508534 0.5647906 0.5816181 #>  [394,] 1.0615136 1.0758883 1.1293451 #>  [395,] 0.6867323 0.7006231 0.7072118 #>  [396,] 1.3040997 1.3157568 1.3392170 #>  [397,] 0.9589776 0.9816568 1.0123912 #>  [398,] 0.8932279 0.9187887 0.9317281 #>  [399,] 0.5505802 0.6370801 0.6504363 #>  [400,] 0.9190036 0.9236847 0.9552591 #>  [401,] 0.8119278 0.8150843 0.8183023 #>  [402,] 0.7615951 0.9273662 0.9407729 #>  [403,] 0.5254921 0.5363079 0.5819930 #>  [404,] 0.5177915 0.5189196 0.5980605 #>  [405,] 1.4713607 1.4878362 1.5052571 #>  [406,] 0.5693620 0.5790913 0.6271961 #>  [407,] 0.6229257 0.6454792 0.6617013 #>  [408,] 0.6365288 0.6380717 0.6629856 #>  [409,] 0.7639416 0.7647506 0.7828068 #>  [410,] 0.8029412 0.8332180 0.8366698 #>  [411,] 1.0092043 1.1255428 1.1476501 #>  [412,] 0.7288516 0.7313914 0.7520435 #>  [413,] 0.5735514 0.5819185 0.5864900 #>  [414,] 1.1381939 1.2571642 1.2603551 #>  [415,] 0.8042587 0.8070106 0.8208756 #>  [416,] 0.7189922 0.7228040 0.7890711 #>  [417,] 0.8023364 0.8728391 0.8812638 #>  [418,] 0.6259600 0.6381189 0.6573023 #>  [419,] 0.8915097 0.9321882 0.9529310 #>  [420,] 0.6882820 0.7178746 0.7298191 #>  [421,] 0.8980328 0.9007722 0.9341469 #>  [422,] 0.7858526 0.8211451 0.8417973 #>  [423,] 0.6611121 0.6853944 0.7027129 #>  [424,] 0.9034129 0.9303547 0.9338346 #>  [425,] 0.6103830 0.6146042 0.6152917 #>  [426,] 1.2741930 1.3048889 1.3166447 #>  [427,] 0.9660454 0.9786161 1.0160631 #>  [428,] 0.9027740 0.9208716 0.9272575 #>  [429,] 0.7189606 0.7354697 0.8051510 #>  [430,] 0.6149044 0.6544568 0.6568448 #>  [431,] 1.6014659 1.6124795 1.6464965 #>  [432,] 0.8645507 0.8864328 0.8991177 #>  [433,] 0.7941475 0.7968045 0.8960429 #>  [434,] 0.5584686 0.6195858 0.6347572 #>  [435,] 0.7867618 0.7902651 0.8077762 #>  [436,] 0.7012632 0.7241992 0.7251975 #>  [437,] 0.6840500 0.6843970 0.6867323 #>  [438,] 0.9685332 0.9759108 0.9967674 #>  [439,] 0.7871674 0.8543760 0.9412158 #>  [440,] 0.8392612 0.8716437 0.8721196 #>  [441,] 0.8069808 0.8518542 0.8620734 #>  [442,] 0.8871901 0.9332700 1.0400032 #>  [443,] 0.7402080 0.7404499 0.7449671 #>  [444,] 0.9053295 0.9441010 0.9513810 #>  [445,] 0.5589335 0.5616279 0.6127602 #>  [446,] 0.6576721 0.6804033 0.7033662 #>  [447,] 0.9927727 0.9967219 1.0073378 #>  [448,] 0.7042698 0.7459097 0.7554355 #>  [449,] 0.5727056 0.5983884 0.7005419 #>  [450,] 0.9723325 0.9768080 1.0335018 #>  [451,] 1.1559923 1.2082916 1.3320827 #>  [452,] 0.5845112 0.6074706 0.6114413 #>  [453,] 0.7398085 0.7490561 0.7493836 #>  [454,] 0.5464723 0.5666532 0.6183374 #>  [455,] 1.1370093 1.2190428 1.2428198 #>  [456,] 0.6722716 0.6847392 0.6861309 #>  [457,] 0.8434437 0.8982119 0.9272575 #>  [458,] 0.4985066 0.5338072 0.5382786 #>  [459,] 0.6853056 0.6895883 0.7055080 #>  [460,] 1.0526528 1.0920031 1.1344009 #>  [461,] 0.5698526 0.5888508 0.6044754 #>  [462,] 0.5562461 0.5621462 0.5847977 #>  [463,] 1.7375101 1.8041639 1.8503639 #>  [464,] 1.2224570 1.2429012 1.2841455 #>  [465,] 0.8482913 0.8697166 0.8788324 #>  [466,] 0.6964980 0.7070283 0.7537934 #>  [467,] 0.6418468 0.6671150 0.6917589 #>  [468,] 0.5065117 0.5391964 0.5705462 #>  [469,] 0.7010090 0.7214546 0.7667716 #>  [470,] 0.7275787 0.8099892 0.8246746 #>  [471,] 0.6374177 0.6419992 0.6515068 #>  [472,] 0.9687647 0.9824862 1.0229776 #>  [473,] 1.1807701 1.2286957 1.2921542 #>  [474,] 0.6557559 0.6844510 0.7066562 #>  [475,] 0.7262108 0.7448291 0.7559599 #>  [476,] 0.5164314 0.5171654 0.5205927 #>  [477,] 0.6980515 0.7317562 0.7372731 #>  [478,] 1.0509450 1.0538652 1.0635850 #>  [479,] 1.1200334 1.1386040 1.1417755 #>  [480,] 0.9911805 1.0084563 1.0218342 #>  [481,] 0.7985012 0.8332130 0.8358105 #>  [482,] 1.4960626 1.5213869 1.5779222 #>  [483,] 1.1499770 1.1650330 1.1797567 #>  [484,] 0.5254051 0.5810606 0.5872490 #>  [485,] 1.0248897 1.0299032 1.0416752 #>  [486,] 0.7847803 0.8099471 0.8112365 #>  [487,] 0.9444033 0.9586442 0.9673000 #>  [488,] 0.7103499 0.7157430 0.8285483 #>  [489,] 0.6194508 0.6614908 0.6766100 #>  [490,] 0.8434020 0.8588308 0.9001202 #>  [491,] 1.0468715 1.0511804 1.0698476 #>  [492,] 0.4926226 0.5391086 0.5810606 #>  [493,] 0.9021870 1.0212893 1.0643079 #>  [494,] 0.6158978 0.6229634 0.6336534 #>  [495,] 0.7328516 0.8080500 0.8320779 #>  [496,] 0.5578328 0.5877514 0.5907850 #>  [497,] 0.9729825 0.9912929 1.0054113 #>  [498,] 1.3147718 1.3647384 1.3662988 #>  [499,] 2.7978178 2.8484729 2.9330105 #>  [500,] 0.7264557 0.8516435 0.8679878 #>  [501,] 0.6613612 0.7231428 0.7516601 #>  [502,] 0.8481883 0.8585328 0.8599669 #>  [503,] 0.7367848 0.7974064 0.8334096 #>  [504,] 0.5542075 0.5820559 0.5893635 #>  [505,] 0.6116252 0.6465721 0.7169874 #>  [506,] 0.8556933 0.8736286 0.9100260 #>  [507,] 0.5740050 0.6339344 0.6344504 #>  [508,] 1.0379094 1.0471588 1.0521241 #>  [509,] 0.7351449 0.7733922 0.7906739 #>  [510,] 1.1501040 1.1827899 1.2138401 #>  [511,] 1.0081010 1.0269155 1.0403183 #>  [512,] 1.5049288 1.5205302 1.5471490 #>  [513,] 1.1290831 1.1957300 1.2288811 #>  [514,] 1.0214357 1.0770711 1.1021957 #>  [515,] 0.8460879 0.8489286 0.8553952 #>  [516,] 0.5122100 0.5338072 0.5555859 #>  [517,] 0.8566329 0.8780640 0.9458068 #>  [518,] 0.7053574 0.7396663 0.7529493 #>  [519,] 0.8132218 0.8619528 0.8794552 #>  [520,] 0.7932397 0.8036352 0.8371247 #>  [521,] 0.7600011 0.8030624 0.8731730 #>  [522,] 1.9339702 1.9723446 2.0921342 #>  [523,] 0.8728979 0.8798903 0.9108048 #>  [524,] 0.8602468 0.8898735 0.9355186 #>  [525,] 0.8434020 0.8554912 0.8611303 #>  [526,] 0.6234424 0.6281006 0.6329588 #>  [527,] 0.8075600 0.8575611 0.8953935 #>  [528,] 1.0731621 1.1108133 1.1127074 #>  [529,] 0.8029918 0.8075866 0.8531193 #>  [530,] 0.7844424 0.8029918 0.8055212 #>  [531,] 0.9918341 1.0455495 1.2020781 #>  [532,] 0.6647266 0.6756108 0.6823798 #>  [533,] 0.5475485 0.5560572 0.5752051 #>  [534,] 1.4061900 1.4145051 1.4499503 #>  [535,] 0.5350829 0.5391656 0.5428234 #>  [536,] 0.8666887 0.8838251 0.8856987 #>  [537,] 0.6450181 0.6989626 0.7645513 #>  [538,] 0.6936951 0.6942788 0.7069361 #>  [539,] 0.5448491 0.5483102 0.5591494 #>  [540,] 0.5762100 0.5955601 0.6073795 #>  [541,] 1.3941351 1.4337750 1.4711072 #>  [542,] 1.1020501 1.1086187 1.1164041 #>  [543,] 1.0664033 1.0783751 1.0789541 #>  [544,] 1.1373486 1.1421385 1.1896530 #>  [545,] 0.6098957 0.6264674 0.6398529 #>  [546,] 0.7891117 0.7891957 0.8193688 #>  [547,] 1.0043056 1.0920505 1.1169794 #>  [548,] 0.5197251 0.5388128 0.5394863 #>  [549,] 1.2325702 1.3233724 1.3253074 #>  [550,] 2.3698032 2.4459672 2.4605241 #>  [551,] 0.5694467 0.5983994 0.6216318 #>  [552,] 0.7072118 0.7211100 0.7239720 #>  [553,] 0.5203712 0.5367804 0.5406582 #>  [554,] 1.0371558 1.0512924 1.0639414 #>  [555,] 0.9910236 1.0217891 1.0661520 #>  [556,] 1.0388253 1.0509622 1.0759924 #>  [557,] 0.7511114 0.7523335 0.7737363 #>  [558,] 1.0436830 1.0595302 1.1315020 #>  [559,] 0.7485221 0.7555543 0.7562221 #>  [560,] 0.8110856 0.8442247 0.8590657 #>  [561,] 0.7910970 0.8125575 0.8269329 #>  [562,] 2.0329060 2.0464947 2.1051615 #>  [563,] 1.5614089 1.5792095 1.6496802 #>  [564,] 1.1087357 1.1345552 1.1487033 #>  [565,] 0.6202705 0.6210650 0.6326365 #>  [566,] 1.0882388 1.1474096 1.1573929 #>  [567,] 1.0228863 1.0319975 1.0508046 #>  [568,] 0.5302128 0.5637004 0.5904987 #>  [569,] 1.0220488 1.0539673 1.0574935 #>  [570,] 1.0401324 1.0888612 1.1436175 #>  [571,] 0.4961666 0.5716476 0.5838902 #>  [572,] 0.6315611 0.6399279 0.6997841 #>  [573,] 1.2314421 1.2539958 1.2860329 #>  [574,] 0.8483180 0.8519278 0.8581231 #>  [575,] 0.6048017 0.6223452 0.6331574 #>  [576,] 1.5010928 1.5378015 1.5387295 #>  [577,] 0.7322894 0.7402701 0.7722186 #>  [578,] 0.5335917 0.5458239 0.5537864 #>  [579,] 0.6568820 0.7080392 0.7319985 #>  [580,] 0.6873511 0.7011420 0.7050837 #>  [581,] 0.8928800 0.9238549 0.9298428 #>  [582,] 0.7118597 0.7422491 0.7729236 #>  [583,] 0.9892560 1.0059526 1.0644100 #>  [584,] 1.0792311 1.0849133 1.1084016 #>  [585,] 0.8916000 0.9396140 0.9467054 #>  [586,] 0.8400040 0.8639699 0.9180399 #>  [587,] 1.4627325 1.4824280 1.5210347 #>  [588,] 1.0141649 1.1053538 1.1212797 #>  [589,] 0.6793500 0.6883186 0.7481124 #>  [590,] 0.7648148 0.7906054 0.7945961 #>  [591,] 0.9025918 0.9716701 1.0721897 #>  [592,] 0.6423844 0.6449319 0.6724115 #>  [593,] 0.4725017 0.4901664 0.6232102 #>  [594,] 0.5382786 0.5595756 0.5714908 #>  [595,] 0.8342513 0.8361073 0.9158839 #>  [596,] 0.6828360 0.7077951 0.7093827 #>  [597,] 0.8045615 0.8189127 0.8202734 #>  [598,] 0.6056041 0.6122406 0.6294766 #>  [599,] 0.7319659 0.7665120 0.7830806 #>  [600,] 0.5793024 0.5920239 0.5944527 #>  [601,] 0.5422872 0.5934187 0.6225972 #>  [602,] 0.5038229 0.5088133 0.5333304 #>  [603,] 0.6339928 0.6344587 0.6415068 #>  [604,] 0.5621462 0.5822668 0.5928315 #>  [605,] 0.5043623 0.5152282 0.5412566 #>  [606,] 0.8514101 0.8581030 0.8976943 #>  [607,] 0.8099237 0.8210332 0.8644987 #>  [608,] 1.0553813 1.0852216 1.0892656 #>  [609,] 1.0876542 1.0967448 1.0970276 #>  [610,] 0.6575762 0.6783473 0.6829099 #>  [611,] 0.7092287 0.7793916 0.8176927 #>  [612,] 0.7845856 0.8247635 0.8874659 #>  [613,] 0.8388916 0.8632137 0.9030833 #>  [614,] 1.0231618 1.0235836 1.0425666 #>  [615,] 0.7166701 0.7827488 0.8202734 #>  [616,] 0.6064328 0.6065965 0.6075559 #>  [617,] 0.8378213 0.8425124 0.8486141 #>  [618,] 1.2220645 1.3184867 1.3757140 #>  [619,] 0.5756904 0.5858072 0.5933102 #>  [620,] 1.2608402 1.2822373 1.2869762 #>  [621,] 1.2739743 1.3099188 1.3250280 #>  [622,] 0.6619830 0.6699510 0.7000377 #>  [623,] 0.7164536 0.7257358 0.8023364 #>  [624,] 1.2374534 1.2635508 1.2643068 #>  [625,] 0.6902308 0.7028009 0.7319659 #>  [626,] 0.8958902 0.9030162 0.9093301 #>  [627,] 0.5549466 0.5755035 0.5765267 #>  [628,] 0.7460089 0.7639416 0.8313206 #>  [629,] 0.4905728 0.4942109 0.5031505 #>  [630,] 0.6007005 0.6234864 0.6677731 #>  [631,] 1.5964418 1.6594767 1.6659284 #>  [632,] 0.6744898 0.6937754 0.6943448 #>  [633,] 1.0761527 1.0898412 1.1706041 #>  [634,] 0.6242899 0.6293683 0.6310264 #>  [635,] 0.8992914 1.0140728 1.0649797 #>  [636,] 1.1882590 1.2053993 1.2229430 #>  [637,] 0.5477302 0.6005423 0.6195639 #>  [638,] 0.6460751 0.6486946 0.6554590 #>  [639,] 0.7732483 0.7848387 0.8093511 #>  [640,] 0.7354020 0.7401168 0.7578651 #>  [641,] 0.5115338 0.5376920 0.5490150 #>  [642,] 1.3809669 1.3931236 1.3963649 #>  [643,] 0.6162748 0.6355525 0.6373189 #>  [644,] 0.5609127 0.5977554 0.6404431 #>  [645,] 0.9621100 1.0284746 1.0561041 #>  [646,] 0.8011934 0.8153516 0.8284279 #>  [647,] 1.1757033 1.2322491 1.3049420 #>  [648,] 0.5047042 0.5331247 0.5417924 #>  [649,] 0.7390150 0.7774246 0.7941222 #>  [650,] 1.2468155 1.2588606 1.2648697 #>  [651,] 0.8700253 0.9101938 0.9348567 #>  [652,] 0.7176706 0.7422686 0.7525945 #>  [653,] 1.4647242 1.4649795 1.4841694 #>  [654,] 0.5751650 0.5832221 0.6152891 #>  [655,] 0.8821678 0.9729825 0.9755979 #>  [656,] 0.5068300 0.5140644 0.5700511 #>  [657,] 1.0711251 1.1204842 1.1268332 #>  [658,] 0.6944146 0.7117599 0.7210043 #>  [659,] 0.5651490 0.5871811 0.6401649 #>  [660,] 0.6530109 0.6705030 0.7392660 #>  [661,] 0.9938395 1.0084563 1.0115921 #>  [662,] 0.5564536 0.5589335 0.5876542 #>  [663,] 0.7698231 0.7761523 0.8092654 #>  [664,] 0.6286956 0.6359375 0.6481956 #>  [665,] 0.6136417 0.6709636 0.6793446 #>  [666,] 1.5772505 1.5959408 1.7235659 #>  [667,] 0.5598840 0.5724169 0.5938387 #>  [668,] 0.5214682 0.5598422 0.5650591 #>  [669,] 1.2304458 1.3551871 1.3687091 #>  [670,] 1.1947125 1.2882108 1.2936240 #>  [671,] 0.5446488 0.5522417 0.5537372 #>  [672,] 0.8751083 0.8829570 1.0368283 #>  [673,] 1.0337591 1.0884658 1.0925525 #>  [674,] 1.3091289 1.4285975 1.4426094 #>  [675,] 0.7962729 0.8106037 0.8532589 #>  [676,] 0.5474013 0.5836521 0.6108524 #>  [677,] 0.8050155 0.8197892 0.8250720 #>  [678,] 1.2499746 1.2588606 1.2623633 #>  [679,] 0.7672906 0.8184894 0.8372153 #>  [680,] 0.8309062 0.8499388 0.8522157 #>  [681,] 1.2357405 1.2813162 1.2881833 #>  [682,] 0.7512256 0.7537934 0.8017146 #>  [683,] 0.6924338 0.7604367 0.7621253 #>  [684,] 0.8923240 0.9105257 0.9758638 #>  [685,] 0.5165238 0.5184814 0.5219601 #>  [686,] 0.7218092 0.7418706 0.8362253 #>  [687,] 1.0000655 1.0190872 1.0434870 #>  [688,] 1.4733664 1.4897250 1.5071121 #>  [689,] 0.7361053 0.7372937 0.7560528 #>  [690,] 1.1736718 1.2135157 1.2144153 #>  [691,] 1.6315990 1.6820170 1.6940504 #>  [692,] 0.5508534 0.5760182 0.5859741 #>  [693,] 0.8191035 0.8410250 0.8522157 #>  [694,] 0.9218645 0.9487543 0.9883042 #>  [695,] 0.6830429 0.7555543 0.7700034 #>  [696,] 0.8328559 0.8566730 0.8788406 #>  [697,] 0.7060284 0.7123172 0.7189718 #>  [698,] 0.6966668 0.7095384 0.7583497 #>  [699,] 0.6793757 0.7066244 0.7092152 #>  [700,] 0.8070216 0.8265935 0.8519278 #>  [701,] 0.6302841 0.6342402 0.6365512 #>  [702,] 1.2890853 1.2964382 1.3010610 #>  [703,] 0.9358046 1.1144320 1.1393480 #>  [704,] 0.7081493 0.7151052 0.7405949 #>  [705,] 1.0195369 1.2259891 1.2269391 #>  [706,] 0.5624723 0.5935204 0.6081886 #>  [707,] 0.8580177 0.8863304 0.9252928 #>  [708,] 1.3400658 1.3529517 1.3630672 #>  [709,] 1.0605147 1.0743078 1.0866625 #>  [710,] 0.5703296 0.5793024 0.5853281 #>  [711,] 0.5644427 0.6095891 0.6157921 #>  [712,] 0.6489326 0.6562908 0.6735804 #>  [713,] 0.7164536 0.7185370 0.7198287 #>  [714,] 1.1301325 1.1696451 1.1861796 #>  [715,] 0.6106142 0.6114538 0.6166628 #>  [716,] 0.8472093 0.8533833 0.8807989 #>  [717,] 1.0511908 1.0913276 1.0950373 #>  [718,] 0.7813662 0.7920934 0.8048466 #>  [719,] 1.0322897 1.0772629 1.0996304 #>  [720,] 0.6212383 0.6707692 0.6776307 #>  [721,] 0.8476778 0.8508133 0.9056069 #>  [722,] 0.7818596 0.7991157 0.8047440 #>  [723,] 0.6360874 0.6570015 0.6794117 #>  [724,] 1.5425863 1.5770401 1.5775648 #>  [725,] 1.0469513 1.0730223 1.1365501 #>  [726,] 2.5499001 2.5877972 2.5973348 #>  [727,] 0.9649681 1.0000655 1.0105031 #>  [728,] 0.6682089 0.6689205 0.6925582 #>  [729,] 0.8289745 0.8606617 0.8995628 #>  [730,] 1.1909792 1.2032655 1.2214736 #>  [731,] 0.8155527 0.8330002 0.8910643 #>  [732,] 1.4129700 1.4257205 1.4269882 #>  [733,] 1.2326746 1.2666659 1.2807269 #>  [734,] 0.9759457 1.0941410 1.1131137 #>  [735,] 1.2926398 1.2943778 1.3189782 #>  [736,] 0.8038318 0.9191734 0.9259836 #>  [737,] 0.7771783 0.8173460 0.8183498 #>  [738,] 0.8342751 0.8375110 0.8468821 #>  [739,] 0.7669882 0.7769399 0.7783967 #>  [740,] 0.7676540 0.7703288 0.7959924 #>  [741,] 0.4807659 0.4811913 0.4829322 #>  [742,] 0.7628195 0.7722913 0.8143765 #>  [743,] 0.5038506 0.5872490 0.5902789 #>  [744,] 0.8199415 0.8279275 0.8672934 #>  [745,] 0.7083628 0.7338538 0.7515559 #>  [746,] 1.7624131 1.7831930 1.8529676 #>  [747,] 0.6527544 0.6722586 0.7173171 #>  [748,] 0.6165924 0.6242899 0.6525633 #>  [749,] 0.5591494 0.5773746 0.5871660 #>  [750,] 0.6133688 0.6143176 0.6344504 #>  [751,] 0.5977554 0.6075119 0.6081672 #>  [752,] 0.8201508 0.8217113 0.8258053 #>  [753,] 0.7158419 0.7167084 0.7526110 #>  [754,] 0.5488100 0.5512399 0.5565225 #>  [755,] 0.9689169 0.9702371 0.9763988 #>  [756,] 0.7403582 0.7672499 0.7689766 #>  [757,] 0.6011118 0.6035912 0.6143492 #>  [758,] 0.6690084 0.6855743 0.6954385 #>  [759,] 0.8650603 0.9300395 1.0290951 #>  [760,] 0.9413051 0.9449080 0.9541890 #>  [761,] 0.6814680 0.6873511 0.6933264 #>  [762,] 0.6146394 0.6270975 0.6384403 #>  [763,] 1.2295889 1.2969550 1.3012819 #>  [764,] 0.7912666 0.8175944 0.8652332 #>  [765,] 1.5165658 1.5632683 1.6220706 #>  [766,] 0.7619575 0.7845856 0.7903842 #>  [767,] 0.9105072 0.9167320 0.9350408 #>  [768,] 0.8096945 0.8271271 0.8438052 #>  [769,] 1.0189938 1.0358824 1.0408619 #>  [770,] 0.7793938 0.7906739 0.8376128 #>  [771,] 1.7807055 1.7927447 1.7961446 #>  [772,] 1.2081725 1.2300703 1.2320259 #>  [773,] 0.7095384 0.7634109 0.8012599 #>  [774,] 0.5526499 0.5690779 0.5941848 #>  [775,] 1.0034701 1.0198180 1.0597253 #>  [776,] 0.6628386 0.6747995 0.6812344 #>  [777,] 0.5489606 0.5848354 0.5980778 #>  [778,] 0.6729456 0.6753574 0.6895843 #>  [779,] 0.9989262 1.0340941 1.0549130 #>  [780,] 0.7886171 0.8140232 0.8596395 #>  [781,] 0.9398637 1.0138404 1.0257756 #>  [782,] 0.5196511 0.5300860 0.5441774 #>  [783,] 0.7712708 0.7785486 0.7933427 #>  [784,] 0.7314612 0.7390954 0.7903991 #>  [785,] 0.7497731 0.8423679 0.9455623 #>  [786,] 0.8584332 0.8779746 0.8886868 #>  [787,] 1.1090116 1.1598086 1.1838323 #>  [788,] 1.0667274 1.0709461 1.0753148 #>  [789,] 0.9512250 1.0026992 1.0055707 #>  [790,] 0.6047498 0.6423844 0.6672514 #>  [791,] 0.7644297 0.7823320 0.8289601 #>  [792,] 0.7533340 0.8625143 0.8690115 #>  [793,] 0.8308841 0.8392308 0.8533834 #>  [794,] 0.7378000 0.7576315 0.7722186 #>  [795,] 1.0377217 1.0471588 1.1430132 #>  [796,] 0.6464568 0.6722230 0.7071145 #>  [797,] 0.4768116 0.5038506 0.5119983 #>  [798,] 0.5321714 0.5509819 0.5825465 #>  [799,] 0.5765121 0.6117266 0.6334817 #>  [800,] 1.2780696 1.2879393 1.3291877 #>  [801,] 0.9607605 0.9730312 0.9790967 #>  [802,] 0.9759251 1.0250429 1.0486243 #>  [803,] 0.6575762 0.6844912 0.6890709 #>  [804,] 0.8679566 0.9108230 1.0005149 #>  [805,] 0.6319259 0.6342402 0.7315519 #>  [806,] 0.6782024 0.6794570 0.7198823 #>  [807,] 0.5168748 0.5367804 0.5435968 #>  [808,] 0.5489606 0.6098179 0.6106142 #>  [809,] 0.6365382 0.6373189 0.6435149 #>  [810,] 0.5801760 0.5845530 0.5859639 #>  [811,] 0.7177089 0.7441591 0.7792351 #>  [812,] 0.7422491 0.7606548 0.7615598 #>  [813,] 0.5879726 0.5909601 0.6122462 #>  [814,] 0.5085484 0.5628062 0.5765421 #>  [815,] 0.5026705 0.5189029 0.5284969 #>  [816,] 1.2496203 1.2682469 1.2889422 #>  [817,] 0.9497079 0.9783047 0.9847914 #>  [818,] 0.8094516 0.8416187 0.8517166 #>  [819,] 0.8513099 0.9304029 0.9474305 #>  [820,] 0.8280890 0.8349683 0.8424210 #>  [821,] 0.5074146 0.5448491 0.5822668 #>  [822,] 2.0027772 2.0190620 2.0273821 #>  [823,] 0.6307234 0.6482195 0.6661770 #>  [824,] 2.3750614 2.3903208 2.3941222 #>  [825,] 0.8838251 0.9023417 0.9142908 #>  [826,] 0.9889649 1.0167606 1.0442092 #>  [827,] 1.3254673 1.3315739 1.3326072 #>  [828,] 0.5397715 0.5425306 0.5439430 #>  [829,] 0.6322275 0.6484510 0.7294171 #>  [830,] 0.7303706 0.7766673 0.7895184 #>  [831,] 0.9917530 1.0002187 1.0179955 #>  [832,] 1.0934972 1.0939917 1.1230953 #>  [833,] 1.0198930 1.0874022 1.1050338 #>  [834,] 0.4827478 0.4842416 0.5694467 #>  [835,] 0.9877948 1.1083030 1.1223708 #>  [836,] 0.6776030 0.7596441 0.7681511 #>  [837,] 0.8056446 0.8448444 0.8542834 #>  [838,] 0.8195514 0.8665423 0.8766603 #>  [839,] 0.5893552 0.6070066 0.6161363 #>  [840,] 0.4763757 0.5291550 0.5368799 #>  [841,] 0.7351449 0.8048950 0.8117724 #>  [842,] 0.5595356 0.5705462 0.5735618 #>  [843,] 1.8124457 1.8751240 1.8873251 #>  [844,] 0.7224461 0.7572010 0.7808384 #>  [845,] 0.5486938 0.5735514 0.5755479 #>  [846,] 0.7066244 0.7458233 0.7714272 #>  [847,] 0.6431490 0.6594180 0.6620760 #>  [848,] 0.6721738 0.7166255 0.7308810 #>  [849,] 1.2402478 1.2403056 1.2798592 #>  [850,] 0.8183498 0.8341716 0.8679566 #>  [851,] 0.5682557 0.5983884 0.7436629 #>  [852,] 2.0901283 2.1193404 2.1453606 #>  [853,] 0.8889776 0.9101522 0.9120216 #>  [854,] 0.6801136 0.6814680 0.7064047 #>  [855,] 1.1362938 1.1583177 1.1843568 #>  [856,] 0.5859734 0.6395725 0.6679704 #>  [857,] 0.7928113 0.8106336 0.8582234 #>  [858,] 1.4155497 1.4261048 1.4362454 #>  [859,] 0.6932967 0.7067968 0.7267149 #>  [860,] 0.6422858 0.6720682 0.6826380 #>  [861,] 0.5245846 0.5254051 0.5499494 #>  [862,] 1.9490004 1.9533986 1.9915554 #>  [863,] 0.6024946 0.6290822 0.6487378 #>  [864,] 0.7039406 0.7067968 0.7303706 #>  [865,] 0.8614348 0.9119135 0.9338346 #>  [866,] 0.8723443 0.8807200 0.8847025 #>  [867,] 0.6138500 0.6325047 0.6444264 #>  [868,] 0.8627456 0.9297663 0.9506089 #>  [869,] 0.7957403 0.8158396 0.8162246 #>  [870,] 0.6207546 0.6482118 0.6815168 #>  [871,] 0.6873260 0.6925079 0.7224404 #>  [872,] 0.7004519 0.7115287 0.7141490 #>  [873,] 0.6206424 0.6294411 0.6419992 #>  [874,] 0.7751067 0.7927907 0.8317753 #>  [875,] 0.5477302 0.5905216 0.5968875 #>  [876,] 1.1172828 1.1568073 1.1668856 #>  [877,] 0.8027620 0.8289667 0.8584660 #>  [878,] 1.3446773 1.3871050 1.4087059 #>  [879,] 0.7947447 0.8026697 0.8187020 #>  [880,] 0.7095780 0.7120531 0.7224331 #>  [881,] 0.5165238 0.5197251 0.5563110 #>  [882,] 0.4867866 0.4886340 0.5277014 #>  [883,] 0.6095891 0.6444264 0.6471754 #>  [884,] 1.1103547 1.1321855 1.1509306 #>  [885,] 0.6683102 0.6714550 0.6776343 #>  [886,] 0.6149044 0.6266999 0.6792860 #>  [887,] 1.0134636 1.0375347 1.0748362 #>  [888,] 0.7786041 0.8384083 0.8425124 #>  [889,] 0.6276169 0.6734215 0.6775417 #>  [890,] 0.9176432 0.9291135 0.9400309 #>  [891,] 0.5955329 0.6026508 0.6095924 #>  [892,] 0.4747824 0.5152282 0.5298413 #>  [893,] 0.6624071 0.6869585 0.6930631 #>  [894,] 0.9902618 0.9946636 1.0059933 #>  [895,] 0.6006478 0.6109909 0.7827485 #>  [896,] 1.0739924 1.1353441 1.1362353 #>  [897,] 0.5088133 0.5348194 0.5409899 #>  [898,] 0.8149680 0.8505206 0.8677531 #>  [899,] 0.9816910 0.9847571 0.9914863 #>  [900,] 0.9081888 0.9153452 0.9188084 #>  [901,] 0.6153536 0.6153815 0.6182721 #>  [902,] 0.5495761 0.5507399 0.5603175 #>  [903,] 2.5840580 2.5929933 2.6234895 #>  [904,] 1.1861796 1.1973393 1.2292255 #>  [905,] 0.5724835 0.6038711 0.6115347 #>  [906,] 0.8413863 0.8465449 0.8546885 #>  [907,] 0.8071671 0.8180067 0.8939851 #>  [908,] 0.5879416 0.6358956 0.6381506 #>  [909,] 0.5240560 0.5919193 0.6096382 #>  [910,] 0.7269927 0.8232129 0.8276135 #>  [911,] 0.7996571 0.9101522 0.9129058 #>  [912,] 1.6359869 1.7033136 1.7092960 #>  [913,] 0.7159270 0.7256828 0.7342817 #>  [914,] 0.7425863 0.7431353 0.7449256 #>  [915,] 0.6427402 0.6471053 0.6617013 #>  [916,] 0.7987813 0.8538310 0.8605647 #>  [917,] 0.7536898 0.7766619 0.7871300 #>  [918,] 0.5485144 0.5539596 0.5594923 #>  [919,] 0.6752461 0.7208311 0.7571621 #>  [920,] 0.5653469 0.5664138 0.5700511 #>  [921,] 0.6455285 0.6785113 0.6878116 #>  [922,] 0.5816181 0.6417378 0.6576109 #>  [923,] 0.9541905 0.9633048 1.0140728 #>  [924,] 1.7120622 1.7506400 1.7786597 #>  [925,] 1.1356111 1.1501145 1.1861868 #>  [926,] 0.6844323 0.7211100 0.7277595 #>  [927,] 0.9919870 1.0046539 1.0585988 #>  [928,] 1.0909418 1.0970285 1.1137077 #>  [929,] 0.8215322 0.8246746 0.8262601 #>  [930,] 0.8218535 0.8307444 0.8410435 #>  [931,] 0.9490880 0.9559149 1.0106206 #>  [932,] 1.3404173 1.3431972 1.3540991 #>  [933,] 0.9182950 0.9930687 1.0316881 #>  [934,] 0.5778650 0.6233926 0.6552800 #>  [935,] 0.6513649 0.6688012 0.6800487 #>  [936,] 0.7431773 0.7557377 0.8549699 #>  [937,] 0.5240560 0.5434537 0.5609127 #>  [938,] 0.5520749 0.5642003 0.6029693 #>  [939,] 0.7903432 0.8028419 0.8341896 #>  [940,] 0.8409575 0.8928800 0.9019933 #>  [941,] 0.6343338 0.6726428 0.6845662 #>  [942,] 0.7056023 0.7745546 0.8093433 #>  [943,] 0.9929385 0.9997025 1.0238656 #>  [944,] 0.7246882 0.7409949 0.7639661 #>  [945,] 0.6295790 0.6592961 0.6793446 #>  [946,] 1.1429259 1.2309731 1.2322491 #>  [947,] 0.6787280 0.6887799 0.7126490 #>  [948,] 0.9650437 0.9661742 0.9723720 #>  [949,] 0.8346578 0.8391675 0.8997573 #>  [950,] 0.9614591 0.9675984 0.9725935 #>  [951,] 0.8829771 0.9036908 0.9877948 #>  [952,] 0.8512426 0.8532802 0.8848484 #>  [953,] 0.6166628 0.6170841 0.6371422 #>  [954,] 0.8329126 0.8530069 0.8645209 #>  [955,] 0.5247719 0.5300860 0.6102380 #>  [956,] 1.1619952 1.2036054 1.2282273 #>  [957,] 0.6391615 0.6557125 0.6612431 #>  [958,] 1.0725884 1.0784070 1.1014701 #>  [959,] 1.0767381 1.0916150 1.1107009 #>  [960,] 0.7359664 0.7421168 0.7671997 #>  [961,] 1.1424055 1.1488222 1.1747662 #>  [962,] 0.5546416 0.5719874 0.6326870 #>  [963,] 0.6186984 0.6290006 0.6319184 #>  [964,] 1.0452503 1.0807821 1.0947882 #>  [965,] 0.4862419 0.4933322 0.5164314 #>  [966,] 0.6015028 0.6106738 0.6130888 #>  [967,] 0.9397593 0.9456987 0.9475875 #>  [968,] 1.1989367 1.2039149 1.2430222 #>  [969,] 1.2733077 1.2977592 1.3079020 #>  [970,] 0.6587434 0.7021421 0.7257358 #>  [971,] 0.9298788 0.9332233 0.9786370 #>  [972,] 0.4583481 0.5174262 0.5584686 #>  [973,] 1.2784206 1.3214717 1.3237718 #>  [974,] 0.9892116 0.9895480 1.0097542 #>  [975,] 0.5051712 0.5437751 0.5481820 #>  [976,] 0.7593610 0.7609732 0.7633887 #>  [977,] 0.9492200 0.9543498 0.9551139 #>  [978,] 0.7632394 0.7974951 0.8192408 #>  [979,] 0.5735618 0.5908839 0.6015028 #>  [980,] 0.6197546 0.6206144 0.6359616 #>  [981,] 0.8684410 0.8772932 0.9226718 #>  [982,] 0.7774246 0.7999180 0.8602760 #>  [983,] 0.7194182 0.7592156 0.8063933 #>  [984,] 0.9483649 0.9895036 1.0640046 #>  [985,] 0.9019933 0.9142908 0.9483463 #>  [986,] 0.7750119 0.7840491 0.7910807 #>  [987,] 0.5490150 0.5614692 0.5650591 #>  [988,] 0.6108302 0.6178691 0.6390093 #>  [989,] 0.8721196 0.8953935 0.9019052 #>  [990,] 1.1754947 1.2030136 1.2309854 #>  [991,] 0.7230304 0.7697567 0.7910246 #>  [992,] 0.8350104 0.8966890 0.9137141 #>  [993,] 0.8924814 0.9205566 0.9220425 #>  [994,] 1.6178327 1.6278497 1.6799638 #>  [995,] 0.7267149 0.7846327 0.7985012 #>  [996,] 0.6584006 0.6801919 0.6883392 #>  [997,] 1.1804192 1.2117447 1.2190261 #>  [998,] 0.6526862 0.6584006 0.6732712 #>  [999,] 0.9596488 0.9604054 1.0200492 #> [1000,] 1.2215756 1.2249653 1.2474735 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  519  950  311  110  409  192  884  753  426   133 #>    [2,]  782  386  902  938  407  955  247  667  756   284 #>    [3,]  789  309  180  707  670  569  900  796  587   554 #>    [4,]  891  845  413  535   37  322  298  269  195   664 #>    [5,]  112  743  962  404  553  957  741  545  155   535 #>    [6,]   10  232   22  765  948  522  820  724  759   368 #>    [7,]  513  486  697  388  650  144  105  374  333   769 #>    [8,]  577  212  951  835  525  116  115  794  210   595 #>    [9,]  193  495  323  430   94  596  784   69  378   791 #>   [10,]    6  232  522   22  765  820  479   27  674   368 #>   [11,]  737  850  448  580  132  804  173  226   65    50 #>   [12,]  602  445  162  348  610   49  375  873  571    83 #>   [13,]    7  513  767  105  244  109  800  544  246   249 #>   [14,]  245  100  848  600  710  883  590  754  711   920 #>   [15,]  686  351   25  265  433  839  863  953  170   263 #>   [16,]  870  793  578  582  872  559  812  762  918   276 #>   [17,]  558  337  520  696  713  510  402  129  841   509 #>   [18,]  668  742  697   95  228  551   68  474  202   892 #>   [19,]  343  856  117  750  796  328   63  422  340   546 #>   [20,]  496  908  127  281  749  575  892  194  318   828 #>   [21,]  937  914  616  184  751  644  909  689  270   875 #>   [22,]  123  332  581  820  759  948  435  227  992   319 #>   [23,]  188  821  157   90  905  882   43   95  274    79 #>   [24,]  615  388  161  344  545  962  745  269  340   333 #>   [25,]  686   15  351  863  265  433  756  170  211   208 #>   [26,]  829  182  646  598  589  249  752  668  819   716 #>   [27,]  556  151  401  555  655  534  465   91   57   820 #>   [28,]  586  358  470  382   32  379  299  645  572    54 #>   [29,]  826  929  530  470  292  110  379  287   54   515 #>   [30,]  161  700  817  739  205  957    5  545   77   388 #>   [31,]  544  675  391  109  327  277  387  251  960   224 #>   [32,]  470  837  367  294  299   54   28  922  887   412 #>   [33,]  216  786  124  334  213  894   72  665  664   180 #>   [34,]  978  694  252  612  488  949  220  720  766   304 #>   [35,]  456  291  272  906  418  500  805  677   64   416 #>   [36,]  541  827   75  178  933  472  152  726  502   380 #>   [37,]  891  664    4  413  322  461  213  298   62   101 #>   [38,]  979  492  965  314  571  302  629  476  533   966 #>   [39,]  149  411  390  104  930  402  337  841  520   185 #>   [40,]  861  458  505  840  594  565  404  155  403   845 #>   [41,]  514  102  857  423  125  936  917  859  911   107 #>   [42,]  774  648  809  851  828  720  821  598  892   643 #>   [43,]  821  918   90  188  604  578   23  762  870    79 #>   [44,]   81  176  695  141  941  818   89  421  768    78 #>   [45,]  319  680  952  756  251  547  948  389  117   608 #>   [46,]  739  957  269  597  307  592  161  436  506   404 #>   [47,]  566  974  391  259  201  224   31  385  109   968 #>   [48,]  127  121  815  261  370  641  676  191  289   194 #>   [49,]  445  425  873  602   12  814  897  662  219    83 #>   [50,]  804  132  138  737  313  324  124   11  945   703 #>   [51,]  847  167  630  979  842  533  314  298  880    38 #>   [52,]  874  911  893  612  949  171  304  736  766   803 #>   [53,]  896  785  684  950  869   99  969  628  352   338 #>   [54,]  470  922  186  292  294  477  808   32  113   758 #>   [55,]  523  537  449  720  813  803  488  477  198   980 #>   [56,]  116  276  951  642  241  928  525    8  490   794 #>   [57,]  507  106  293  342  654  399  750  227  966   532 #>   [58,]  261  191   97  960   48  675  127  575  142   815 #>   [59,]  626  795  755  441  195  866  176   70  836   768 #>   [60,]  830  218  304  102  864   93  190  859  776   606 #>   [61,]  285  397  341  682  372  264  599  126  998    86 #>   [62,]  253  461  474  664  181  685  359  383  988   882 #>   [63,]  136  557  454  224   19  387  856  532  261   142 #>   [64,]  209  594  492  840  629  861  418  272  373   494 #>   [65,]  145  737  850   11  448  173  226  704  324   816 #>   [66,]  161  788  374  858   24  615   30  961  817   246 #>   [67,]  137  373  728  611  898  893  129  278  459   301 #>   [68,]  960  228  392  333  551   18  315  144  202   388 #>   [69,]  871  356  430  184    9  453  937  747  561   914 #>   [70,]  306  836  745  891   37  755  269  615  664     4 #>   [71,]  268  577  320   78  885  941  814   83  872   248 #>   [72,]  508  428  213  334  880  160  780   33  630   939 #>   [73,]  591  166  444  156  721  906  352  596  378   609 #>   [74,]  283  326  150  296  339  920  963  860  656   723 #>   [75,]  964  899  380  718  502   85  196  805  152   416 #>   [76,]  439  366  579  490  234  138  854  313  410   943 #>   [77,]  315  635  144  731  246  242  388   30  700   923 #>   [78,]  268   71   83  941  212  577  934  885  610   794 #>   [79,]  812   23   43  821  188  578  622  237  740   353 #>   [80,]  501  643  776  540  986  606  864  190  120   130 #>   [81,]  695   44  421  176  818  429   89  941  844   872 #>   [82,]  368  232  483  760  522  974  546  999  674   994 #>   [83,]  602  814  794  268  610   78  897  885  445    49 #>   [84,]  419  115  394  910  640  806  317  262  305     8 #>   [85,]  677  416  718  380  209  418  964  805   75   543 #>   [86,]  163  682  371  397  223  998  264  285  466    61 #>   [87,]  692  748  875  751  757  270  165  637  873   572 #>   [88,]  197  984  992  773  698  919  255  916  460   721 #>   [89,]  481  995  359  695  844  177  941   44   81   253 #>   [90,]  188   43  821   23  605  274   95  762  882   604 #>   [91,]  555  497  310  719  986  700  968  288  817   549 #>   [92,]  307  655   46  597   96  506  436  763  917   739 #>   [93,]  373  354  120  209  830  920  797   64  975   190 #>   [94,]  791  495  561  365  193  378  947    9  596   323 #>   [95,]  882  188   90  274  668  905   23  605   18   892 #>   [96,]  498  739   46  857  866   92  506  597  307   269 #>   [97,]  575  552  395  191  712   58  335  641  589    48 #>   [98,]  310  493  242  788  961  731  824  635   91   817 #>   [99,]  558  684  969  717  521  970   53  967  705   877 #>  [100,]  848  883  809   14  711  920  643  963  619   459 #>  [101,]  325  229  216  461  665  328  664  383  284   386 #>  [102,]   41  917  859  423  830   60  857  155  775    40 #>  [103,]  159  295  282  394  300  621  904  114  946   651 #>  [104,]  149  147  583  590  997   39  663  930  312   588 #>  [105,]  716  366  769  528  742  215    7  244  943   513 #>  [106,]  507  342  966   57  654  399  293  386  148   807 #>  [107,]  766  125  911   60  102   41  859  612  830   949 #>  [108,]  460  473  239  733   88  992  647  984  131   981 #>  [109,]  544   31  620  277   68  800  960  224  982   646 #>  [110,]  519  409  292  303  929  753  346  133   29   200 #>  [111,]  881  274  302  516  810  548  685  882  476   965 #>  [112,]  962    5  743  535  344  807  741  845  404   553 #>  [113,]  375  393  808  922  348  292  627  477  659   406 #>  [114,]  300  203  914  324  282  689  450  665   21   704 #>  [115,]  640  317  910  419  262  806  381  210  219     8 #>  [116,]    8   56  276  559  577  835  951  928  212   794 #>  [117,]  328  856  796   19  454  136  319  750  422   399 #>  [118,]  240  260  890  589  646  829  575  649  238   876 #>  [119,]  450  981  180  356  203  216  300  935  324   946 #>  [120,]  975  540  593  797   93  920  290  279  706   245 #>  [121,]   48  370  641  452  437  199  754  127  710   676 #>  [122,]  294  808  922  867  777  361  715  953  360   837 #>  [123,]  332   22  435  759  581  227  871  948  319   747 #>  [124,]  786  350   33  989  313   50  527  945   62   334 #>  [125,]  766  911  995  107  171  853  936  140  844    41 #>  [126,]  192  792  753  158  341  723   61  770  285   230 #>  [127,]  676   48  194  638   20  815  777  261  641   496 #>  [128,]  714  621  831  331  356  946  608  783  184    69 #>  [129,]  137  520  185  728   67  459  611  696  278   713 #>  [130,]  290  986  540  502  553  120  349   80  917   152 #>  [131,]  609  721  832  916  485   88  460  214  239   156 #>  [132,]  138  945  662   50  425  804   11  320  737   798 #>  [133,]  625  139  165  627  530  175  393  637  692   753 #>  [134,]  833  811  699  257  506  773  197  959  916   701 #>  [135,]  744  658  898  416  243  338  283  718  456   500 #>  [136,]   63  454  532  557  261  750  117  856  955    19 #>  [137,]   67  611  129  459  728  373  893  301  304   278 #>  [138,]  132  804  234  313   76  320   50  579  662   703 #>  [139,]  625  993  175  133  299  529  379  637  530   607 #>  [140,]  582  853  872  171   16  766  559  812  125   421 #>  [141,]  443   44  176  768  195  880  842  441  941   524 #>  [142,]  233  202  815  551  454  289  261  392  988   191 #>  [143,]  826  311  884  346    1   29  254  862  929   950 #>  [144,]  315  388   77  486  697  976  545  392  333    68 #>  [145,]   65  850  737   11  324  576   50  804  173   704 #>  [146,]  832  562  396  916  543  134  131  721  487   699 #>  [147,]  104  583  590  149  549  933  639  541  337   574 #>  [148,]  966  979  654  106  791   38  507  322  467   342 #>  [149,]  104  583  185   39  147  520  997  390  312   129 #>  [150,]  230  632  723  339   74  393  420  204  283   753 #>  [151,]  556   27  888  464  899  984  534  655  197   364 #>  [152,]  380  502  472  130  917  290  986  102  540   775 #>  [153,]  990  802  398  412  367  512  837  438  890   973 #>  [154,]  273  855  956  297  681  971  562  959  441   958 #>  [155,]  404  859  423   40  957  157    5  359  995   845 #>  [156,]  444  378  214  591  596  609  193   73  352   495 #>  [157,]  905  190   23  403  353  155  987  882  881   274 #>  [158,]  723  770  792  970  296  509  150  230  921   339 #>  [159,]  295  103  946  300  114  576  282  128  450   324 #>  [160,]  428  780  722  942  919   72  255  778   70   213 #>  [161,]   30  817   24  739  957   46  700  388  615     5 #>  [162,]  980   12  375  610  659  494  348  406  602   330 #>  [163,]   86  223  466  998  407  285  671  568  235   453 #>  [164,]  779  439  636  865  169  491  438  772  528   489 #>  [165,]  572  627  637  692  393   87  211  113  175   217 #>  [166,]  591  200  275  784   73  236  947  434  347   634 #>  [167,]  533   51  972  842  468  571  314  979  377   630 #>  [168,]  802  607  735  990  529  299  379  993  924   887 #>  [169,]  489  258  579  761  604  854  462  897  491   918 #>  [170,]  265  208  839  955  686  676  261   15  247   127 #>  [171,]  799  231  353  889  582   52  995  494  403   766 #>  [172,]  633  389  442  801  680  531  201  391  251   547 #>  [173,]  865  850  226  838  580   11  652  448  725   424 #>  [174,]  679  983  345  369  199  121  327  446  437   712 #>  [175,]  637  299  572  139  863  625  165  993  211   607 #>  [176,]   44  818  440   81  141  695  939  795  941    89 #>  [177,]  253  934  685  320  941  882  359  268  814    89 #>  [178,]  541  521  623  183  933  384  558   99  744   705 #>  [179,]  258  488  978  752  622  694  598  605  578    42 #>  [180,]  119    3  216   33  229  101  450  707  422   124 #>  [181,]  383  461  187  284   62  247  988  318  142   474 #>  [182,]  926  552  663  589   26  819  504  315  829   336 #>  [183,]  414  451  705  178  967  417  877  717  684   536 #>  [184,]  937  783   21  914  430  644  909  902  616   751 #>  [185,]  129  520  459  390  198  402  696  137  611   848 #>  [186,]  296  758   54  841  294  509  922  402  339   808 #>  [187,]  284  383  318  181  194  247  798  548  667   749 #>  [188,]   90   23  821  605   43  762   95  578  668    79 #>  [189,]  446  235  532  293  706  279  996  288  370   593 #>  [190,]  157  774  987  905  834  643  218   80  354   859 #>  [191,]  641  202  551   48  834   97  289  815   58   261 #>  [192,]  126  753  792  950  409  723  628  158   61   230 #>  [193,]  495  378    9   94  940  323  352  156  596   784 #>  [194,]  318  815  127  749  908  667  187  225  289   676 #>  [195,]  443  880    4  626  891  141  298  768  257   842 #>  [196,]  467  805  701  790  888  895  418  699  846   484 #>  [197,]  773   88  919  255  257  722  701  984  811   916 #>  [198,]  459  390  809  930  185  312  523  720  449   851 #>  [199,]  679  983  121  345  710  174  446  437  452   907 #>  [200,]  634  275  886  166  347  784  434  475  519   601 #>  [201,]  172  391  442  369  405  787  174  327  633   801 #>  [202,]  551  233  142  289  191  834  545  504  815   392 #>  [203,]  665  914  689  616  937  935  334  325  847   213 #>  [204,]  628  518  283  869  150  684  785  409   74   338 #>  [205,]  859  864  976   30  237  155  190  739  957   486 #>  [206,]  550  670  587    3  309  554  271  789  569   666 #>  [207,]  524  231  889  799  560  141  768  468  879   594 #>  [208,]  170  265  955  247  839  251  686  454  675     2 #>  [209,]   64  594   93  418  373  861  840  629  492   272 #>  [210,]  525  794  709  781  885  381  115  212    8   317 #>  [211,]  526  863  637  953  448  165  217  175  572   652 #>  [212,]  794   78  977    8   83  610  210  595  577   262 #>  [213,]  216  942  778  325   37  334  665  101  203   891 #>  [214,]  444  698  156  721  378  984  596  940  495   846 #>  [215,]  740  613  769  486  697  976  812  481  622   237 #>  [216,]  213  101  325  229  665   33   37  664  334   942 #>  [217,]  568  627  263  953  777  225  715  671  938   667 #>  [218,]  776   60  830  864  606  501  190  304  643    80 #>  [219,]  757  471  425  640  381   49  445  362  910   873 #>  [220,]   34  252  312  694  198  488  978  185  611    55 #>  [221,]  672  500  321  434  236  660  906  166  657   879 #>  [222,]  904  570  764  475  200  884  875  683  644  1000 #>  [223,]  163  682  998  921  285  230  466  671  715    86 #>  [224,]   63  557  345  391   58  387  907  136  960   566 #>  [225,]  667  671  782  568  777  915  194  217  407   676 #>  [226,]  652  448  580  173  850  526  211  953  265    11 #>  [227,]  435  581  791  654   57  293  747  106  871   123 #>  [228,]  960   68  982   18  424  551  142  908  392   767 #>  [229,]  101  328  216  325  856  664  796  117  461    37 #>  [230,]  150  723  339  627  393  753  420  223  632   263 #>  [231,]  889  799  171  207  594  840  494  403  844   353 #>  [232,]  820  368   10  674  546  944  760  465   82    22 #>  [233,]  142  202  815  289  551  284  962  191  318   261 #>  [234,]  527  313   76  410  742  138  177  320  943   854 #>  [235,]  189  293  446  706  503  996  466  326  288   279 #>  [236,]  500  434  347  456  338  291  303  518  377   601 #>  [237,]  905  976  697   23  668  188  157   95   79   504 #>  [238,]  447  890  638  281  575  412  395  438  265   584 #>  [239,]  460  473  647  108  485  609  131    9   88   954 #>  [240,]  829  589  118  575  649  335   20  496  598   648 #>  [241,]  490  951  931  410  525  729   56  943  517    76 #>  [242,]  731  493  700  310  907  635   77  574  817   315 #>  [243,]  338  135  409  744  250  236  346  969  950   518 #>  [244,]  336  752  716  105  976  513  923  280   26   215 #>  [245,]  600  754  593   14  710  706  975  920  120   279 #>  [246,]   77  635  455  144  315  923  731  388  486   800 #>  [247,]  955  383  284  454  187    2  181  328  208   142 #>  [248,]  440  931  989  517  320  350   71  939  738   818 #>  [249,]   26  646  260  624  620  819  280  829  767   336 #>  [250,]  243  346  932  708  672  969  338  221  898   135 #>  [251,]  389  387  801  675  208  680  454  170   45   955 #>  [252,]  928   34  220   55  803  612  949  736  813   720 #>  [253,]  685   62  359  177  882  474  934  548  413   461 #>  [254,]  311    1  143  884  570  426  519  950  826   222 #>  [255,]  919  778  942  322  654  197  364  722  992   891 #>  [256,]  795  440  939  248  176  818  508  350  363   989 #>  [257,]  811  773  722  919  701  316  197  880  195   443 #>  [258,]  179  605  489  169  598  604  488  918  578   762 #>  [259,]  566  345  907  679  391  199  224  974  310   557 #>  [260,]  646  118  876  829  649  620  589  249  240   819 #>  [261,]  815  454   48  955   58  127  136  839  142   191 #>  [262,]  595  317  538  115  419  212  524  910  806     8 #>  [263,]  217  372  599  627  568  953  863  625  715   230 #>  [264,]  397   86  371   61  267  285  669  372  825   998 #>  [265,]  170  686   15  208  839  638  676   25  955   226 #>  [266,]  511  932  736  611  515  252  977  803  250   893 #>  [267,]  264  585  831  397  372  608  599  783   25   263 #>  [268,]   71  814   78  320  885   83  941  934  662   445 #>  [269,]  597  615  535  306  506  891    4  592   46   845 #>  [270,]  875  637   87  704  683   21  751  757  748   211 #>  [271,]  994  206  550  569   66  554   13  999  858   900 #>  [272,]  565  594   35  805  418  840   64  505  291   699 #>  [273,]  855  956  681  154  959  833  971  441  768   562 #>  [274,]  882  881  111   90   95   23  318  539  548   749 #>  [275,]  634  200  415  660  538  434  347  947  166   167 #>  [276,]  928   16  793  559  116   56  870  794  872   410 #>  [277,]  927   31  544  309  387  109  670  707  760   666 #>  [278,]  623  469  521  384  728  963   67  373  933   137 #>  [279,]  975  370  593  797  706  656  326  754  120   920 #>  [280,]  336  244  923  249  455   26  182  819  588   752 #>  [281,]  649  575   20  496  908  238  838  638  127   829 #>  [282,]  651  683  806  394  689   21  764  114  914   475 #>  [283,]  204   74  456  658  150  518  758  406  901   236 #>  [284,]  187  383  247  810  318  181  194  815  461   233 #>  [285,]  998  913  223   61  825   86  163  466  682   230 #>  [286,]  288  996  536  877  466  967  717  921  719   503 #>  [287,]  709  929  477  427  586  977  515  358  659    29 #>  [288,]  286  235  189  996  465  466  503  401  446   706 #>  [289,]  834  987  815  233  202  191  641  318  194    48 #>  [290,]  540  130  741  797  120  553  986  790  349   502 #>  [291,]  377  972  468   35  347  434  456  314  272   571 #>  [292,]  901  113  515  929   54  758  110  303  659   922 #>  [293,]  235   57  507  106  189  342  227  532  401   407 #>  [294,]  122  922  808   54  837  867  186  715   32   627 #>  [295,]  159  946  300  103  450  618  114  647  282   128 #>  [296,]  758  339  186  963   74  158  901  970  883   723 #>  [297,]  564  855  971   59  818  154  936  661  429   795 #>  [298,]  413  630  685    4  847  842  880  516  934    37 #>  [299,]  607  379  175  529  863  953  599  625   32   139 #>  [300,]  114  450  295  914  946  203  689  119  282   618 #>  [301,]  851  720  304  813  893  449  803  459  980   373 #>  [302,]  476  965  111  810  629  881  492  516   38   539 #>  [303,]  601  330  348  406  659  347  901  434  292   110 #>  [304,]  851  301   60  830  373  893  218   52  611   720 #>  [305,]  542  816  362  703  640  781  355  910  683   115 #>  [306,]   70  836  745  615  269  891   37  755  664     4 #>  [307,]   92  655   46  436  597  592  506  349  957   917 #>  [308,]  632  601  347  393  634  886  692  420   87   571 #>  [309,]  670  927  707    3  789  587  387  952  796   422 #>  [310,]  493  242  700   91  907  731  574  817  555   259 #>  [311,]  254    1  884  143  826  530   29  519  110   993 #>  [312,]  588  997  978  663  198  694  488   34   42   851 #>  [313,]  527  234  742  138   76   50  124  132  181   804 #>  [314,]  842  979  972  167  468   38  533   51  571   965 #>  [315,]  144   77  388   68  731  926  976  635  545   392 #>  [316,]  773  257  722  916  441  811  478  880  443   197 #>  [317,]  115  381  640  262  806  910  219  538  757   471 #>  [318,]  194  908  749  187  289  274  284  815  496   881 #>  [319,]  944  117  435   45  693  820  407  532  546   136 #>  [320,]  268   71  177  941  945  662  934  814  248   234 #>  [321,]  396  221  660  672  906  524  500  166  478   434 #>  [322,]  891    4   37  535  778  845  413  654  255   966 #>  [323,]  784  886    9  634  644  909  430   94  193   947 #>  [324,]  704  737  114   50  616  119  783  145  665   203 #>  [325,]  101  386  935  665  216  747  213  229  203    37 #>  [326,]  593  706  754  921  975   74  279  996  600   915 #>  [327,]  395   58  391  712   97  174  584  675  679   575 #>  [328,]  117  796  856  229  101  454  247   19  422   399 #>  [329,]  771  852  843  657  250  221  672  681  396   321 #>  [330,]  659  901  406  303  348  162  375  601  879   515 #>  [331,]  631  128  946  576  831  608  159  295  356   621 #>  [332,]  123   22  435  581  654  747  227  935  820   992 #>  [333,]  392  388  988   68  545  144   24  474   18   960 #>  [334,]  665  630  213  945  203  298   33  847  216    72 #>  [335,]  711  648  641  452  589   97  552  712  867   643 #>  [336,]  280  923  244  182  455   26  752  663  925   315 #>  [337,]   17  520  558  614  713  521  639  970  841   770 #>  [338,]  243  518  409  236  204  519  950  135  869   283 #>  [339,]  808  296  150  230  393  922  723   74  627   758 #>  [340,]  343  344  615   19  856  999  962   24  750   399 #>  [341,]  991   61  599  868  372  682  126  367  770   792 #>  [342,]  507  106  399  807   57  966  750  743  322   293 #>  [343,]   19  856  750  340  999  117  546  368   63   399 #>  [344,]  962  112  535  399  807  340  988  743  664   233 #>  [345,]  174  679  199  557  983  259  391  224  446   136 #>  [346,]  110  519  409  929  243  515  932  338  250   236 #>  [347,]  601  377  308  291  434  632  236  303  634   365 #>  [348,]  659  601   12  375  406  113  303  162  330   571 #>  [349,]  553  436  743  592  741  790  290  807    5   540 #>  [350,]  989  124  786  248  363  320  939  440  138   256 #>  [351,]   15  433  863   25  953  686  372  599  263   211 #>  [352,]  378  785  869  591  896  193  156  518  444   357 #>  [353,]  403  171  157   23  799  821   79   43  840   494 #>  [354,]   93  797  656  539  476  920  629  302  861   492 #>  [355,]  816  542  305  781  362  703   65  764  683   640 #>  [356,]   69  871  759  608  831  756  184  119  783   935 #>  [357,]  869  985  913  503  365   94  825  628  785   518 #>  [358,]  427  586   28  362  471  572  381  287  477   781 #>  [359,]  253  905  882   89  685   62  155  177  474    23 #>  [360,]  867  712  361  395  122  930  638  452  575   890 #>  [361,]  991  715  638  360  122  867  395  823  712   294 #>  [362,]  471  572  358  219  875  381  640  683  757   270 #>  [363,]  989  350  440  248  786  650  256  795  124   818 #>  [364,]  255  919  597  942  778  506  592  992  197   556 #>  [365,]  947   94  347  518  632  791  357  596  886   291 #>  [366,]   76  943  528  678  234  105  410  716  439   490 #>  [367,]  398  837   32  991  412  294  361  122  341   868 #>  [368,]  483  343  999  820   19  546  340  760  232   422 #>  [369,]  787  983  174  679  442  345  371  682  199   201 #>  [370,]  279   48  121  671  915  815  641  754  777   225 #>  [371,]  397   86  573  682  264  442   61  369  998   163 #>  [372,]  599  263  433  351   61  341  953  863   15   715 #>  [373,]   93   67  209  893   64  137  304  301  830   728 #>  [374,]  858  613  486  513    7   24  215  564  739    66 #>  [375,]  477  113  659  348  162  980   12  901  406   330 #>  [376,]  498  506  597  364  134   92  755  307  197   655 #>  [377,]  291  468  972  571  434  601  347  533  167   314 #>  [378,]  193  495  156  596  352   94  444  214  940   947 #>  [379,]  529  607  299  530  993  175   28  470  139   887 #>  [380,]  502  152  718  130  290  472   85  917   75   384 #>  [381,]  471  317  219  757   49  348  445  692  640   362 #>  [382,]  586   28  645  636  837   54  477  358  470   427 #>  [383,]  181  461  187  284  247  318  988  101   62   142 #>  [384,]  469  623  718  417  933  521  278  860  658   380 #>  [385,]  968  674  719  259  974   91  549  465  555   566 #>  [386,]  902  966  325    2  935  747  782  106  616   284 #>  [387,]  251  796   63  960  454  136  675  707  224   117 #>  [388,]  144  333  545  392   24  486  315   77  697   161 #>  [389,]  801  251  680  172   45  675  531  547  442   686 #>  [390,]  930  402  411  198  841  848  185  696  883   520 #>  [391,]  345  224  327  566   31  201  974  174  259   172 #>  [392,]  333  545  551   68  388  202  142  988  233   960 #>  [393,]  627  113  632  339  165  308  808  692  230   922 #>  [394,]  282  651  806  910  419  764  683  640  103   727 #>  [395,]  712  575   97  638  360  452  361  437  121   552 #>  [396,]  321  832  956  681  478  524  906  487  221   543 #>  [397,]  264  371   86   61  285  267  682  372  573   998 #>  [398,]  367  991  837  361  412  868  153  360  341   433 #>  [399,]  342  750  507  106  807   57  856  344  962   654 #>  [400,]  465  693  401  944  479  319  435  820  163   466 #>  [401,]  465  400  293   57  944  820   27  532  693   435 #>  [402,]  696  841  390  510  520  186  185  411  713   509 #>  [403,]  840  353  516  458  861  157  965  799   40   629 #>  [404,]  155  957  741    5   40  845  112  535  553   743 #>  [405,]  482  201  573  369  442  787  371  868  584   398 #>  [406,]  901  330  348  601  659  303  162  113  375   393 #>  [407,]  782    2  671  225  839  568  938  955  454   915 #>  [408,]  748  757  538  533  806   87  167  634  875   692 #>  [409,]  519  950  110  338  753  204  283  628  243   346 #>  [410,]  943  234  490  559  872  762  579   76  480   578 #>  [411,]  390  402  930  849  198  510  696  841  185   186 #>  [412,]  837  890  367  652  438  122  953  294  398   238 #>  [413,]  298    4   37  685  810  891  322  845  516   253 #>  [414,]  451  705  183  967  717  536  286  877  567   417 #>  [415,]  954  947  485  596  275   51  660  167  784   634 #>  [416,]  677  718   85  658  898  744   35  135  418   456 #>  [417,]  877  384  860  432  469  658  718  623  204    74 #>  [418,]  805  272  209   35   64  196  467  658  456   492 #>  [419,]  115  910  262  640  806  317  595   84    8   394 #>  [420,]  632  913  561  230  150  308  568  393  938   217 #>  [421,]   81  695  853   44  140  559  872  429  582   835 #>  [422,]  952  707  796   19  117  328  856  229  343   760 #>  [423,]  155  859  857  995  102  844   40  404  936    41 #>  [424,]  838  982  228  725  767  649  675  281  173   865 #>  [425,]   49  662  445  873  798  219  814  897  945   132 #>  [426,]  352  570  732  323  784    1  193  785  378   591 #>  [427,]  358  586  287  645  781   28  709  210  382   362 #>  [428,]  780  160  673  894   72  942   70  722  755   457 #>  [429,]  695  872  734  559  480  818   81  481  661   140 #>  [430,]  909  644  937  184  689  914   21  886    9   475 #>  [431,]  725  772  865  876  173  666  424  838  512   447 #>  [432,]  567  417  503  467  196  888  706  617  235   985 #>  [433,]  351  372   15  599  686   25  953  263  863   299 #>  [434,]  377  660  347  236  291  468  601  972  303   275 #>  [435,]  227  123  581  871  319  332  293   57  747   453 #>  [436,]  349  592  790  553  741  290  535  655  404   743 #>  [437,]  452  710  823  121  754  712  983  600  867   395 #>  [438,]  890  412  652  238  226  772  837  281  779   173 #>  [439,]  490  579   76  729  779  169  854  164  865   489 #>  [440,]  818  248  176  256  795  939   44  931  695   989 #>  [441,]  768  316  195  959  141  443  833  560  855   626 #>  [442,]  172  680  371  801  389  633  369  201  174    86 #>  [443,]  195  880  842  141  630  298  768    4  257   314 #>  [444,]  156  214  378   73  591  352  721  596  617   495 #>  [445,]   49   12  425  873  602  814   83  662  219   348 #>  [446,]  189  235  370  279  532  996  199  121  706   293 #>  [447,]  238  265  584  675  638   15  686  801  327   170 #>  [448,]  580  526  226  211   11  652  737  850  270   637 #>  [449,]  537  720  813  301  980  523  803   55  851   918 #>  [450,]  119  300  946  981  114  618  203  295  914   180 #>  [451,]  705  414  717  967  183  536  877  286  684    99 #>  [452,]  437  710  711  712  121  335   14  754  867   823 #>  [453,]  871  938  561  756  902  407    2  782  420   163 #>  [454,]  955  136  261  247  815  117   63  142  328   233 #>  [455,]  923  246  336  244  635   77  925  280  315   144 #>  [456,]   35  658  283  291  236   64  418  500  492   406 #>  [457,]  900  569  745   70  894  780  306  836  554   428 #>  [458,]  861  840   40  629  403  965  505  845  516   594 #>  [459,]  851  809  137  301  198  848  100  185  720   611 #>  [460,]  239  473  108    9   88  485  647  609  954   992 #>  [461,]  664   62  181  383  988   37  101  284  474   253 #>  [462,]  489  854  761  749  798  897  605   90  604   908 #>  [463,]  549  968  259  385  787  566  719   47   98   147 #>  [464,]  899  151  534  888  567  556  432  846  985    75 #>  [465,]  401  400  693  944  288  820  293  532  189   435 #>  [466,]  998  996  163  921  235  223  503   86  285   682 #>  [467,]  196  805  701  888  895  790  418  148  484   846 #>  [468,]  972  377  571  167  533  291  314  660  434   842 #>  [469,]  384  860  278  623  417  933  120  593  521   963 #>  [470,]   54   32  530   28   29  292  379  922  299   929 #>  [471,]  381  572  219  362  757  692   49   87  873   875 #>  [472,]  152  380  933  775  502  278  830   60  384   653 #>  [473,]  647  460  981  239  108  992   69    9  450    88 #>  [474,]   62  988  253  461  527  359  181  664   95   882 #>  [475,]  644  909  886  634   21  430  222  748  875   764 #>  [476,]  302  810  629  656  492  881  111  965  484   354 #>  [477,]  375  113  586  659  980  537   54  761  162   348 #>  [478,]  485  316  727  415  954  508  321  660  524   687 #>  [479,]  400  435  581  465  401  227  123  693  669   820 #>  [480,]  943  769  429  734  410  481  234  818  661   872 #>  [481,]   89  613  359  177  429  215  769  995  695   480 #>  [482,]  405  398  584  868  153  447  367  573  991   433 #>  [483,]  368  343  961  340  999   19  674  555  655   750 #>  [484,]  790  741  797  656  629  807  476  861  492   743 #>  [485,]  954  415  478  727  596  460   51  275  947   239 #>  [486,]  697  976  144  388  237  215    7  613  205   315 #>  [487,]  560  543  699  272  565  677  681  811   85   207 #>  [488,]  978  694  179  720  258  813  449   42  523    34 #>  [489,]  462  169  605  258  761  854  649  604   20   496 #>  [490,]  439  729  579   76  410  241  169  525  854   943 #>  [491,]  169  258  488  179  523  694  489  870  164    16 #>  [492,]  629  656  476  302  965   64   38  861  840   484 #>  [493,]  242  731  310  907  635  700  574   77  817    98 #>  [494,]  610  889  799  162  231   12  879   64  840   353 #>  [495,]  193   94  378  940    9  791  596  214  323   947 #>  [496,]   20  908  892  281  318  575  828  127  191   749 #>  [497,]  555   91  986  130  502  763  827  655  817   349 #>  [498,]   96  755  506  822  376  866  626  597   59   833 #>  [499,]  618  673  894  730  256  690  363  795  350   428 #>  [500,]  906  236   35  672  456  221  434  291  879   338 #>  [501,]   80  776  606  864  643  218  926  190  574   986 #>  [502,]  380  152  130  290  540  986  917  718  120   384 #>  [503,]  235  432  466  357  985  293  996  536  288   706 #>  [504,]  926  834  987  892  551  668  202  648  828   191 #>  [505,]  565   40  458  861  845  840  272  594  404   155 #>  [506,]  597  269   46  722  306  257  919  755  592   255 #>  [507,]  342  106   57  399  807  293  966  654  484   750 #>  [508,]   72  687  939  880  256  141  630  478  795   443 #>  [509,]  713  970  758  296  158  792  186  841  728   770 #>  [510,]  696  402  841  411  186  509  390   54  520    17 #>  [511,]  736  266  893  874  803  611  879  932  330    67 #>  [512,]  924  990  802  153  168  772  438  412  735   607 #>  [513,]    7  769  215  374  486  244  105  613  697   650 #>  [514,]   41  857  936  423  102  866  125  971  844   995 #>  [515,]  929  292  901  330  758  659   54  303  346   110 #>  [516,]  965  111  403  685  934  302  881  548  458   810 #>  [517,]  931  577  248  951   71  958  738    8  440   835 #>  [518,]  869  204  628  338  785  365  283  236  347   357 #>  [519,]  110  409    1  950  338  346  753  200  236   518 #>  [520,]  129  185  713  402  696  728  841  963  390   848 #>  [521,]  623  860  384  278  713  469  970  728  963   933 #>  [522,]   82  368  483  232   10  674    6   27  961   820 #>  [523,]   55  537  449  488  720  198  813  258  477   491 #>  [524,]  207  660  595  141  468  262  321  972  538   231 #>  [525,]  885  210  729  794  781    8  577  490  951    71 #>  [526,]  211  448  863  953  580  217  637  226  667   652 #>  [527,]  234  313  742  474   62  177  253  786   95   989 #>  [528,]  366  624  716  767  105   76  439  742  164   649 #>  [529,]  607  379  993  299  168  139  175  530  735   887 #>  [530,]  379   29  470  133  625  826  299  572  529   139 #>  [531,]  547  172  389  952  760  801  251   45  633   680 #>  [532,]  750  136  189  557  944  446  399   57  293    63 #>  [533,]  167  571  468  972   51  377  408  979  314   842 #>  [534,]  464   27  151  556  655  567  899  555  307    92 #>  [535,]  845  112    4  592  404  741  322  962  891   269 #>  [536,]  967  877  503  286  466  998  684  357  825   985 #>  [537,]  449   55  523  720  803  813  980  477  301   375 #>  [538,]  408  660  275  167  533  262  806  317  468   972 #>  [539,]  603  980  354  619  828  274  302  821  111   749 #>  [540,]  290  120  130  797  741  986  975  553   80   743 #>  [541,]  933  178   36  827  384  472  469  521  705   623 #>  [542,]  816  781  305  362  355  358  427  640  525   729 #>  [543,]  487  906  416  677  699   85   35   75  805   500 #>  [544,]   31  982  109  675  424  960  228  277   68   767 #>  [545,]  202  392  551  388  962    5  233  112  905   504 #>  [546,]  557  760  944   19  820  343   63  136  319   974 #>  [547,]  531  952   45  389  251  760  801  172  948   387 #>  [548,]  685  111  945  662  798  516  934  881  187   274 #>  [549,]  719  286  968   91  288  463  259  385  590   310 #>  [550,]  206  587  670    3  309  271  927  666  569   554 #>  [551,]  202  142  191  233  504  392  545  834  289    68 #>  [552,]   97  589  335  191  182  712  575  395  926   711 #>  [553,]  349  743  741    5  436  112  404  290  807   592 #>  [554,]  900  569  745  457  786  836  650  124  789     3 #>  [555,]   91  497  655  310  719   27  349  986  817   700 #>  [556,]  151   27  888  401  581  364   57  655  227   984 #>  [557,]  546  944  136   63  532  345  224   19  750   693 #>  [558,]   17  713   99  521  337  970  509  520  623   129 #>  [559,]  872  577   16  429  582  410  794  870  695    71 #>  [560,]  487  768  811  699  565  272  441  207  505   833 #>  [561,]  791  453  420   94  913  871  163  227  430   909 #>  [562,]  273  396  956  681  146  154  832  855  771   321 #>  [563,]  787  702  573  369  371  286  717  682  614   983 #>  [564,]  936  613  971  866  995  374  857  514  125   481 #>  [565,]  505  272   40  594  840  458  861  805  811   699 #>  [566,]  259  391  974  224   47  345  907  493  557   310 #>  [567,]  432  502  288  719  497  417  286  503  899   464 #>  [568,]  217  671  225  938  777  782  667  715  263   407 #>  [569,]  900  554  457  745  999  836  789    3   70   988 #>  [570,]  904  222  784  200  475 1000  426  323  166   634 #>  [571,]  533  377  468  965  167  972   38  601  314    12 #>  [572,]  165  637  471  692  175  875   87  362  211   270 #>  [573,]  371  397  405  442   61  264  369  702  682   563 #>  [574,]  907   80  501  242  986  731  310  926  700   493 #>  [575,]   97  395  281   20  712  496  638  240  829   127 #>  [576,]  145  159  946   65  324  587  331  295  114   737 #>  [577,]   71  517    8  559   78  885  268  872  931   794 #>  [578,]  762   43  870  188  812  605   79  918   16    90 #>  [579,]  854  729  897  439  490  169   76  462  662   489 #>  [580,]  448  226   11  652  526  850  425  761  798   211 #>  [581,]  227  435  123   22  332  479  654  940  992   791 #>  [582,]  140  872  171   16  870  853  559   79  812    43 #>  [583,]  590  278  933   14  848  100  104  520  147   149 #>  [584,]  238  327  447  260  395  118  712  646  890   876 #>  [585,]  783  184  453  267  714  644   69  561  139   909 #>  [586,]  358  477   28  382  761  427  287  471  375    54 #>  [587,]  670  309    3  180  666  576  707  145  927   725 #>  [588,]  997  312  663  978  752  218  776  694  606   336 #>  [589,]  240  829  819  552  335  575   97  646  182   648 #>  [590,]   14  710  639  245  583  600  452  848  711   100 #>  [591,]   73  166  156  352  784  378  444  596  947   609 #>  [592,]  436  349  535  553  845  269  597  790  741   807 #>  [593,]  975  706  245  120  279  754  326  600  920    14 #>  [594,]  840   64  209   40  861  272  565  458  889   231 #>  [595,]  262   78  524  212    8  419  317  538  115   141 #>  [596,]  947  698  378  954  415  495   94  214    9   365 #>  [597,]  506  269  592   46  307  364  306  436  655   615 #>  [598,]  668  892  605  188  828  829  622  258  648   179 #>  [599,]  372  263  433  299  351  341  953  625  863    61 #>  [600,]  245  754   14  593  639  963  326  710  823   920 #>  [601,]  303  347  348  377  308  406  571  434  632   533 #>  [602,]   12   83   49  445  604  814  918  610  897   162 #>  [603,]  619  539  980  867  354  749  777  641  828   920 #>  [604,]  918   43  602  897  761   90  870  462  821   605 #>  [605,]  188  762   90  598  489  668  258  578  892   462 #>  [606,]  864  501  776  218   80  925   60  830  643   205 #>  [607,]  529  379  299  993  168  175  802   28  139   530 #>  [608,]  831  356  759   45  948  871  756  267   69   128 #>  [609,]  156  131  721  444  460  596  591  214  378    73 #>  [610,]  494   12  162  799   83  602  889  803   78   659 #>  [611,]  137   67  893  736  304  301  459  612  129    52 #>  [612,]  949  911   52  736  611  874  304  766   34   893 #>  [613,]  481  215  769   89  486  374  740  697  359   564 #>  [614,]  770  639  792  868  841  158  337  970  991   341 #>  [615,]   24  269  306  745  836  340   70  344  161   597 #>  [616,]  751  937   21  902  914  665  203  386  184   704 #>  [617,]  846  895  365  357  985  869  467  698  888   518 #>  [618,]  647  450  300  295  673  894  946  981  119   473 #>  [619,]  603  867  539  641  980  809  828  648  920   883 #>  [620,]  646  260  249  819  109  584  589  552  327    26 #>  [621,]  714  912  128  904   69  585  184  783  356   103 #>  [622,]  752  740  812  179   79  598  578  188  237   762 #>  [623,]  521  860  384  278  469  728  963  713  970   417 #>  [624,]  528  249  716  767   26  649  260  164  876   179 #>  [625,]  133  139  175  627  165  263  637  299  530   599 #>  [626,]  866   59  195  441  269  768  443   70  755   836 #>  [627,]  165  922  393  808  217  230  113  263  953   625 #>  [628,]  204  869  785  684  518  913  150  357  409   753 #>  [629,]  492  861  458  840  965  476  302   64  484    38 #>  [630,]  298  880   51  842  847  334  167  413  443   314 #>  [631,]  331  128  946  608  759  356  948  119  450   831 #>  [632,]  308  150  393  420  347  601  230  365  406   886 #>  [633,]  172  442  693  974  680  531  389  400  944   760 #>  [634,]  886  909  275  200  644  308  347  748  475   323 #>  [635,]   77  731  246  800  242  493  315  144  923   700 #>  [636,]  382  779  164  849  438  491  586  890  772   169 #>  [637,]  175  165  572  211  270  863   87  875  692   526 #>  [638,]  676  127  395  361  575  712  777  265  238    48 #>  [639,]  600  590  245  963   14  614  754  770  710   921 #>  [640,]  910  115  806  219  317  381  419  738  757   362 #>  [641,]  191  834  335   48  711  289  648  121  619   987 #>  [642,]   56  241  490  729  781  439  276  779  491   525 #>  [643,]  776   80  711  648  774  100  501  190   14   809 #>  [644,]  909  430  475  886   21  634  184  937  751   323 #>  [645,]  887   28  382  470  427  379  358   29   32   826 #>  [646,]  260  829  589   26  819  118  240  575  649   620 #>  [647,]  473  618  239  981  460  450  295  300  946   108 #>  [648,]  774  828   42  335  987  892  834  641  643   711 #>  [649,]  281  829  489  838  240  496   20  575  982   462 #>  [650,]    7  363  554  769  527  480  513  989  678   786 #>  [651,]  806  282  687  910  727  394  738  408  538   689 #>  [652,]  226  580  448  953  526  412  211  438  761   281 #>  [653,]  775  472   60  606  830  218  107  152  864   997 #>  [654,]  106   57  778  966  747  322  507  148  227   255 #>  [655,]  307   92  436  592   46  349  597  555  497    27 #>  [656,]  975  797  476  492  915  484  354  629  279   920 #>  [657,]  672  879  677  221  874  500  207  898  736   681 #>  [658,]  456  744  718  416  283  418  135  417  898    35 #>  [659,]  330  375  348  901  162  406  303  113  477    12 #>  [660,]  972  434  468  538  275  377  524  167  291   533 #>  [661,]  734  429  818  958  695  440  559  421  480    81 #>  [662,]  798  814  425  897  548  945   49  268  445   132 #>  [663,]  776  588  182   42  926  997  648  589  312   752 #>  [664,]  461   37   62  988  101  229  344  836  891   253 #>  [665,]  203  334  325  101  616  216  213  847  386   945 #>  [666,]  670  309  587  277  725  544  431  927   31   547 #>  [667,]  225  782  194  568  938  671    2  217  187   284 #>  [668,]  598  892   95  188  605   18  504  237  828   987 #>  [669,]  825  264  732  397  479  285   86  998   61   466 #>  [670,]  309  666  587    3  927  789  707  277  544   725 #>  [671,]  225  568  777  915  370  407  782  217  667   715 #>  [672,]  221  500  434  236  321  657  879  906  660   524 #>  [673,]  894  428  780   72   33  457  160  618  213   942 #>  [674,]  385  968  555  483   91  232   27  719  310   974 #>  [675,]   58  170  251   31  982  960  208  265  387   389 #>  [676,]  127  777  638  839   48  194  225  715  671   261 #>  [677,]  416   85   35  898  209  418   64  456  658   272 #>  [678,]  366   76  313  943  234  527  989  105  650   528 #>  [679,]  983  199  174  345  369  121  437  710  259   452 #>  [680,]  389   45  686  442  839  251  801  319  172   693 #>  [681,]  487  207  273  956  560  657  396  524  768   855 #>  [682,]  223   86  998   61  285  371  921  163  466   341 #>  [683,]  875  764  270  757  282   21  806  748  362    87 #>  [684,]  628  967  785  204  869  877  536  518  357   417 #>  [685,]  548  253  934  516  882  413  111  881  298   177 #>  [686,]   15   25  265  170  351  839  680  433  208   863 #>  [687,]  651  508  738  939  595  141  910  727  806   419 #>  [688,]  793  734  769  740  215  812  480  105  244   622 #>  [689,]  914  203   21  937  430  616  184  909   51   847 #>  [690,]  730  738  248  517  350  931  256  989  687   703 #>  [691,]  394  727  687  651 1000  419  478  282  103    84 #>  [692,]   87  748  165  757  572  875  471  393  308   873 #>  [693,]  400  944  465  319  557  532  401  446  345   680 #>  [694,]  978  488  179   34  312  752  258  622  720   491 #>  [695,]   81   44  429  818  421   89  872  176  559   941 #>  [696,]  402  510  841  520  185  390  129  186  509   713 #>  [697,]  486  976  237   18  144  905  668   95  388   545 #>  [698,]  596  895  846  214  947  701  721  888  773   148 #>  [699,]  811  701  895  805  565  773  272  196  846   560 #>  [700,]  817   30  242  731  310  161  986  493  788   574 #>  [701,]  811  699  895  196  467  773  888  846  805   698 #>  [702,]   61  126  563  573  614  682  998  285  371   792 #>  [703,]  804  138  305   11  737  132  730   50  738   145 #>  [704,]  324  270  616  783  737   21  184  751  937   526 #>  [705,]  451  414  717  967  183  877  286  536  684   417 #>  [706,]  593  975  279  326  235  245  120  189  996   754 #>  [707,]  927  422  309  796  952  387  999    3  789    19 #>  [708,]  243  338  250  969  221  346   73  672  591   166 #>  [709,]  287  210  977  794  427  928  212  525   55   781 #>  [710,]  452  437  245   14  754  711  590  199  600   121 #>  [711,]  335  452  643  641   14  648  100  710  883   848 #>  [712,]  395   97  452  575  360  437  638  335  121   361 #>  [713,]  970  509  728  963  520  860  296  623  521   758 #>  [714,]  621  128  783  585  831  184  912  475  267   904 #>  [715,]  777  361  217  568  676  823  671  808  263   953 #>  [716,]  105  528  622  179  767  605  742  752  598    26 #>  [717,]  705  967  451  877  414  286  536  639  860   684 #>  [718,]  416  384  658  380  418   85  417  469  744    75 #>  [719,]  549   91  555  288  567  968  286  497  827   385 #>  [720,]  813  449  301  851  537  488   42  803  980   304 #>  [721,]  916  214  698  832  131  596  846  156  444   773 #>  [722,]  257  919  160  255  316  197  773  880  506   891 #>  [723,]  158  230  150  339  753  792  921  770  296    74 #>  [724,]  765  479  940  581  759   22  473  123   69   495 #>  [725,]  424  838  173  865  850  982  675  208  431   265 #>  [726,]   36  178  541   75  472   85  543  964  718   416 #>  [727,] 1000  485  651  478  415  954  538  275  687   282 #>  [728,]  713   67  963  137  129  970  278  623  758   373 #>  [729,]  490  579  525  439  885  169  897  854  781   210 #>  [730,]  690  703  350  114  804  738   50  989  124   138 #>  [731,]  242  493  635   77  700  315  907  574  310   144 #>  [732,]  669  825  426  785  352  285  913  628   53   264 #>  [733,]  984  992  108   88  581  197  364  556   22   151 #>  [734,]  429  661  480  559  943  793  872  410  276   140 #>  [735,]  168  529  607  993  802  379  990  924  887   299 #>  [736,]  511  874  611  893  612   52  803  949  879    67 #>  [737,]   11  704  448  270  132  324   50   65  804   850 #>  [738,]  910  640   71  320  248  219  687  939  517   268 #>  [739,]  957   46  161   30  857  155  423  404  859   205 #>  [740,]  812  622  215   79  237  578  793  976  752   762 #>  [741,]  553  743  404  484  807  797  790  112  290   349 #>  [742,]  527   18   95  313  234  605  854  474  668   762 #>  [743,]  807  553  741  112    5  962  349  797  484   535 #>  [744,]  135  658  898  416  283  718  243  623  456   338 #>  [745,]  836   70  306  900  615  569  457  664   24   554 #>  [746,] 1000  904  570  222  884  394   84  727  764   691 #>  [747,]  935  871  386  654  325  902  966  106  227   937 #>  [748,]  757   87  408  692  875  751  909   21  634   308 #>  [749,]  318  194  462  798  908   20  274  539  761   187 #>  [750,]  399  532  856  343   19  136   57  117  342   507 #>  [751,]  616   87  937   21  909  748  902  644  270   692 #>  [752,]  622  179  978  598  740  663  668  694  976    26 #>  [753,]  230  192  723  150  409  110  158  292  126   792 #>  [754,]  245  600  593  710  823  326   14  437  279   121 #>  [755,]   70  306  836  506  745  626  428   59  269   160 #>  [756,]  938  453  902    2  783  782  871  184   25   704 #>  [757,]  748  875  408   87  692  219  471  381  683   270 #>  [758,]  296  901  186  509  339  292  728  406  515    74 #>  [759,]  948  123  356  608   22  871  332  435   69   581 #>  [760,]  546  952  422  387  557  974  547  944  531    19 #>  [761,]  462  604  489  749  897  169  918  854  580   602 #>  [762,]  578  605  188   90   43  870  918  604  812    79 #>  [763,]  497   92  307  827  961  655  555  817   91   788 #>  [764,]  683  875  222  806  475  757  748  270  282   408 #>  [765,]  724  479  581   22  759  940  123  733  473   435 #>  [766,]  107  125  911  171   79   52  949  140  612   304 #>  [767,]  982  424  528  228  716  838  649  742   18    26 #>  [768,]  441  560  844  971  443  141  195   44  833   231 #>  [769,]  215  613  480  481  105  513  740  429    7   650 #>  [770,]  158  792  614  723  970  841  639  713  509   963 #>  [771,]  329  852  681  843  657  956  524  672  221   207 #>  [772,]  876  438  890  164  512  238  636  118  779   153 #>  [773,]  811  916  257  701  197  699  316  698  722    88 #>  [774,]   42  828  648  821  987  190  851  643  892   834 #>  [775,]  653  102  472   60   41  830  152  107  864   606 #>  [776,]  218  643  501   80  606  864  663  190  774   926 #>  [777,]  715  676  671  225  568  217  127  808  370   867 #>  [778,]  942  255  919  213  654  322  992   37  891   325 #>  [779,]  164  439  865  636  729  438  169  173  490   579 #>  [780,]  428  942  160  894  673  213  778   72  457    70 #>  [781,]  542  525  210  427  729  305  358  362  115   640 #>  [782,]    2  407  225  667  938  568  671  386  955   839 #>  [783,]  184  704  756  937   21  585  831  270  902   938 #>  [784,]  323  886  634  947  200  166  596    9  275   378 #>  [785,]  869  628  684  518  352  896  204  357  338    53 #>  [786,]  124   33  350  989   62  527  939  334  253   664 #>  [787,]  369  983  679  174  201  259  563  345  199   371 #>  [788,]  817  961  700  161   30  242   66   77  310   635 #>  [789,]    3  333  988  707  309  228  796  960   68   900 #>  [790,]  484  436  741  467  196  290  349  553  592   807 #>  [791,]   94  561  227  495  148  365  966    9  947   357 #>  [792,]  158  126  770  723  192  509  753  970  614   341 #>  [793,]   16  812  578  740  870  762  622  276  872    79 #>  [794,]  212   83  885  210  525   78  870  559  872   577 #>  [795,]  256  440  176  818  939   59  363  248  508   350 #>  [796,]  328  117  856   19  387  422  707  229  454   247 #>  [797,]  975  540  656  279  120  484  741  354  743   290 #>  [798,]  662  425  749  897  462  814  548  187  854    49 #>  [799,]  889  231  494  171  610  403  840  353  594   516 #>  [800,]  635  246   77  731  493  994  242  315  109   455 #>  [801,]  389  172  251  680  675  442  686  531  170   265 #>  [802,]  990  168  153  607  512  299  529  412  924   379 #>  [803,]  813  893  301  537  449  720  162  610  494   980 #>  [804,]  138   50  703  132   11  737  313  850   76   145 #>  [805,]  418  196  467  272  895   35  565  699  701   209 #>  [806,]  910  640  408  651  317  757  538  115  683   282 #>  [807,]  743  342  507  112  741  962  399  484  553   535 #>  [808,]  922  294  627  339  122  113  393  777  217   715 #>  [809,]  100  883  848   42  851  459  619  711  643   774 #>  [810,]  881  476  111  302  413  284  516  807  548   274 #>  [811,]  699  773  257  701  565  916  560  505  272   316 #>  [812,]  740   79  578  793  622  762   16  582   43   215 #>  [813,]  720  449  301  803  918  851  537  821   43   980 #>  [814,]  897  662  268   83  602  798   49  445  425   885 #>  [815,]  261   48  233  289  194  142  127  454  955   318 #>  [816,]  542  355  305  362  781   65  358  703   11   737 #>  [817,]  700  788   30  161  961  310  242   46  731   349 #>  [818,]  440  176  695   44   81  429  661  248   89   795 #>  [819,]  589  182  646  552  829  663   26  240  260   118 #>  [820,]  944  319  546  401  465   22  123  332  343   435 #>  [821,]   43  188   23   90  828  774   79  918  539   604 #>  [822,]  498  858   96  755   59  374   66  297  866   626 #>  [823,]  754  437  715  867  600  777  452  121  339   361 #>  [824,]   98  827  763  788  310  961  463  493  497    91 #>  [825,]  913  285  998  357  466  669  561  536  163   985 #>  [826,]   29  929  530  470  110  884  292  143  515   346 #>  [827,]  497  719  763   91  541  567  555  502  933    36 #>  [828,]  987  892  774  648  834  821  539   42  188   598 #>  [829,]  240  589   26  649  598  575  646  496  892   668 #>  [830,]   60  218   93  304  102  373  190  864  859   776 #>  [831,]  608  783  356  756  128  267   25  714  585   184 #>  [832,]  916  721  396  773  699  131  811  316  846   906 #>  [833,]  959  441  768  134  560  866  626  971  257   811 #>  [834,]  987  289  504  828  641  892  202  648  191   551 #>  [835,]  958    8  577  116  421  517  595  951  212   661 #>  [836,]   70  306  745  615  664  891   37  269    4   900 #>  [837,]  367  412   32  294  122  398  890  360  991   382 #>  [838,]  424  982  649  173  865  281  725  228  908   767 #>  [839,]  170  676  955  261  265  782  127  407  225   686 #>  [840,]  458  594  861  403  629  965   40   64  799   889 #>  [841,]  402  186  696  390  520  770  713  509  970   296 #>  [842,]  314  167  630  880   51  972  443  298  468   979 #>  [843,]  266  977  771  928  709  511  329  116  212   862 #>  [844,]  995  423  768   89  971  936  231  171  866   155 #>  [845,]  535    4  404  112  458  741  322  891  413   505 #>  [846,]  895  888  698  617  701  467  196  699  899   805 #>  [847,]   51  979  630  298  665  842  167  203  334   314 #>  [848,]  100  883  809   14  711  963  459  920  643   390 #>  [849,]  411  973  636  382  837  890  118  523  438   930 #>  [850,]  173  865   11  226  580  448   65  737  145   804 #>  [851,]  301  304  720  809   42  459  774  813  449   373 #>  [852,]  771  329   84  321  221  262  419  396  862   672 #>  [853,]  140  421  582  949  125  171  874   81  911   695 #>  [854,]  579  462  897  489  798  662  169  605  761   814 #>  [855,]  273  971  441  959  956  768  833  176   44    81 #>  [856,]   19  117  328  750  343  399  796  229  136   340 #>  [857,]  423  514  866   41  936  739  102  917  859    96 #>  [858,]  374   66  513  613  564    7  650  822   24   486 #>  [859,]  155  423  205  102  404  190  957  157  864   995 #>  [860,]  623  877  963  970  521  469  417   74  384   713 #>  [861,]  458  629   40  840  403  594  492   64  484   476 #>  [862,]  143  884  826  346  843   29  932  311  929    84 #>  [863,]  211  953  351  637  526  175  263  217  299    25 #>  [864,]  606  501  218  205  776   80   60  190  859   830 #>  [865,]  173  850  838  226  779  439  580   11  725   424 #>  [866,]  626  857  936  423  844  971  833  995  768    96 #>  [867,]  122  360  619  823  777  603  452  294  361   883 #>  [868,]  991  361  398  341  437  367  360  614  823   770 #>  [869,]  785  518  628  204  357  684  352  365  913   617 #>  [870,]   16  918  578   43  762  604   83  872  582   813 #>  [871,]  453  747   69  935  435  902  356  227  561   123 #>  [872,]  559  582   16  870  429  695  140   78   83    71 #>  [873,]  445  425   49   12  692   87  667  798  757   471 #>  [874,]   52  736  949  893  911  612  879  171  803   511 #>  [875,]  270   87  757  748  683  692  764  637  572    21 #>  [876,]  260  772  118  646  649  238  584  890  438   982 #>  [877,]  860  417  967  921  536  684  717  996  469   204 #>  [878,]  951  517  931    8  835  958  241  577   56   116 #>  [879,]  494  330  893  889  874  456  434  610   64    35 #>  [880,]  443  630  195  842  298   51  847  314  891   257 #>  [881,]  111  274  810  882  302  476  516  685  548   318 #>  [882,]  274   95  881   23  685  905  111  253   90   359 #>  [883,]  848  100  809   14  920  619  963  711  867   296 #>  [884,]  826   29  110    1  311  519  222  530  200   929 #>  [885,]  268  525   71  794   83  814  897   49  729    78 #>  [886,]  634  909  644  323  308  200  784  430  475   275 #>  [887,]  645   32  379  470  529  607  530  299   28   168 #>  [888,]  467  846  196  895  701  899  698  151  432   617 #>  [889,]  799  231  494  171  840  610  594  403  353   207 #>  [890,]  438  238  412  118  837  360  652  281  122   398 #>  [891,]    4   37  322  413  535  845  306  269  298    70 #>  [892,]  828  668  987  598  496  648  834  504  605   188 #>  [893,]  301  803   52  373  611  304   67  736  494   137 #>  [894,]  673  780  428  457   33   72  216  160  213   942 #>  [895,]  846  701  467  698  888  196  805  699  617   418 #>  [896,]  785  352  869   53  444  617  684  518  628   591 #>  [897,]  814  662  604  798  854  462  579  602   49    83 #>  [898,]   67  744  677  416  135  658  456  728  373   879 #>  [899,]  464  888  846   75  196  895  432  151  467   617 #>  [900,]  569  554  745  457  836  664   70  306  229   988 #>  [901,]  406  758  330  659  292  375  113  515  303   162 #>  [902,]  386  938  937    2  616  935  453  756  751   747 #>  [903,]  431  624  876  164  772  528  779  767  249   865 #>  [904,]  222  570  475  764 1000  621  784  714  644   282 #>  [905,]  157  237   23  882   95  359  987  274  190   188 #>  [906,]  500   35  291  660  272  895  236  321  434   543 #>  [907,]  574  242  493  199  310  731  259  552  224   345 #>  [908,]  318  496  194   20  749  127  462  281  187   815 #>  [909,]  644  430  886  634  475  751   21  937  184   748 #>  [910,]  640  806  115  738  419  317  219  651  683   757 #>  [911,]   52  949  612  125  766  874  107  171  853   304 #>  [912,]  621  714  904  128  585  426   69  570  222   475 #>  [913,]  420  285  357  561  825  998  150  628  230   223 #>  [914,]  689  937   21  184  203  616  430  909  644   902 #>  [915,]  671  656  225  370  476  279  326  667  568   407 #>  [916,]  773  832  721  811  699  316  698  701  846   895 #>  [917,]  102  957  130  404  152  859  290  423  380   502 #>  [918,]  604   43  870  602   90  821  578  813  762   897 #>  [919,]  255  778  722  942  197  322  257  891  160   992 #>  [920,]  975  593  120  354  100   14  883  279  754   656 #>  [921,]  996  326  998  466  223  723  877  600  754   158 #>  [922,]  808  294  627  113  122  339   54  393  165   953 #>  [923,]  925  336  455  246  976   77  315  144  182   635 #>  [924,]  512  990  802  168  153  735  607  529  772   433 #>  [925,]  923  606  864  501  205  336  455  218  776    30 #>  [926,]  504  182  648  834  501  551  776  987  552   892 #>  [927,]  707  309  952  422  387  277  670  760  796   999 #>  [928,]  276  252  116   16  794  709  212  870  582   559 #>  [929,]  515   29  292  826  110  287  303  659  470    54 #>  [930,]  390  360  809  198  848  883  335  411  867   100 #>  [931,]  517  248  577  440  951   71  241  958  989   320 #>  [932,]  266  515  346  250  511  929  287  509  696   826 #>  [933,]  384  469  278  472  541  623  521  583  152   502 #>  [934,]  941  685  516  548  177  268  253  298  320   814 #>  [935,]  747  325  386  902  871  203  937  654  966   665 #>  [936,]  564  995  844  971  866  857  423  514  125    41 #>  [937,]  184  616  914   21  902  430  751  909  689   644 #>  [938,]  782  902  568    2  756  453  667  217  225   407 #>  [939,]  941  334  176  248  320  630  934  508  440   141 #>  [940,]  495  193  214  378   94  984    9  791  581   985 #>  [941,]  934  268  177   78  320   71   44  685  939   516 #>  [942,]  778  780  213  919  255  992  160  216  654   322 #>  [943,]  410  480  366  234   76  734  490  559  762   241 #>  [944,]  693  557  546  319  820  532  465  400  136   401 #>  [945,]  548  132  662  685  320  425  334  798  187   665 #>  [946,]  295  450  300  159  119  128  114  618  576   647 #>  [947,]  596  365  415  954  698  275   94  784  634   886 #>  [948,]  759  123   45   22  952  332  319  422  820   608 #>  [949,]  612  911   52  874  766  853  736  140  125   582 #>  [950,]  409  519    1  338  192  628  243  785  753   110 #>  [951,]  878    8  517  241  525  577  931  116   56   835 #>  [952,]  422  547  760  707   45  948  927  796  387   251 #>  [953,]  863  211  217  351  627  263  526  715  652   122 #>  [954,]  415  485  947  596  275   51  698  784  167     9 #>  [955,]  247  454  261  839  170  208  815    2  782   194 #>  [956,]  855  273  681  524  396  441  141  478  207   560 #>  [957,]  404  739    5   46  155  553  112  741  535   859 #>  [958,]  835  517  440  661  931  818  577  248  176   256 #>  [959,]  833  441  768  855  866  971  560  134  273   626 #>  [960,]   68  228   58  392  142  387  551  675   63   982 #>  [961,]  788  817  483  655  555  161  700  763  310    66 #>  [962,]  112  344  743    5  807  545  535  553  233   741 #>  [963,]  600  970  296  860  728  713  883  848   14   920 #>  [964,]   75   85  380  917  487   41  152  699  102   502 #>  [965,]  302  516  629  840  571  492  458   38  403   476 #>  [966,]  106  386  148  342  507  654  747  979   38   322 #>  [967,]  536  684  877  717  451  705  414  998  921   417 #>  [968,]  385  674  719  259   91  549  974  288  555   465 #>  [969,]  243  950   99  338  250  708   53  409  558   135 #>  [970,]  713  509  963  860  158  296  770  728  758   623 #>  [971,]  844  936  768  866  995  855   81  125   44   695 #>  [972,]  468  377  167  314  291  533  571  660  842   434 #>  [973,]  849  153  837  367  887  382   32  411  645   398 #>  [974,]  546  566  557  391  760  259  633  345  944   224 #>  [975,]  593  120  279  920  797  656  706  326  540   245 #>  [976,]  697  486  237  144  205  668  504  315  215   905 #>  [977,]  212  709  210  287  659  794  330  317  610   381 #>  [978,]  694  488  179  752  622   34  312   42  720   588 #>  [979,]   38  314  847   51  167  533  148  842  571   966 #>  [980,]  162  375  539  449  603  619  537  602  301   477 #>  [981,]  992  450  119  935  203  473  747  942  213   914 #>  [982,]  424  228  838  767  675  960  544  649  281   646 #>  [983,]  679  174  369  199  437  121  710  345  452   787 #>  [984,]   88  214  197  940  698  888  721  733  151   846 #>  [985,]  357  503  617  495   94  536  432  940  825   869 #>  [986,]  130  540  290   80  497  501  120  502  574   700 #>  [987,]  834  828  892  289  504  648  774  641  202   668 #>  [988,]  461  333  181  474  392  142  664  344  383    62 #>  [989,]  350  248  363  786  124  320  234  440  527   138 #>  [990,]  802  153  168  512  924  607  735  529  412   299 #>  [991,]  868  361  341  367  398  715  823  294  360   122 #>  [992,]  942  778   88  255  981  919  654  332  747   197 #>  [993,]  529  139  607  175  379  299  625  530  168   637 #>  [994,]  800  961  788  635   98   66  493  483  246    82 #>  [995,]  844  423  936   89  171  155  125  859  359   481 #>  [996,]  921  466  235  326  706  446  754  998  189   223 #>  [997,]  588  312  663  978  776  218  606  336  104   752 #>  [998,]  285  466  223  921  682  163  913   86  996   825 #>  [999,]  340  343   19  368  707  422  856  796  569   900 #> [1000,]  727  570  904  222  485  784  746  475  275   415 #>  #> $neighbor_distances #>              [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.7048266 0.8083694 0.8882599 0.9421757 1.0040249 1.0144722 1.0248596 #>    [2,] 0.2646638 0.4447534 0.4508229 0.4509399 0.4834092 0.5247719 0.5497563 #>    [3,] 0.5625080 0.7485735 0.8228400 0.8580177 0.9447221 1.0220488 1.0268545 #>    [4,] 0.2337535 0.3869610 0.3987572 0.4311430 0.4322313 0.5076585 0.5243604 #>    [5,] 0.3071985 0.4135715 0.4187607 0.4275021 0.4449949 0.4480393 0.4862072 #>    [6,] 0.8162260 1.3583798 1.5773534 1.6751377 1.8243273 1.8572698 1.8800572 #>    [7,] 0.6913829 0.7541327 0.8888739 0.9243094 0.9559779 0.9618115 0.9714105 #>    [8,] 0.5987923 0.6929355 0.7099335 0.7234910 0.7436081 0.7586708 0.7788853 #>    [9,] 0.5972976 0.6019840 0.6145234 0.6544568 0.6621461 0.7077951 0.7314612 #>   [10,] 0.8162260 1.1388998 1.5691586 1.6517703 1.7160733 1.8003366 1.8312074 #>   [11,] 0.4387941 0.4894021 0.5311648 0.5452097 0.6617801 0.6809391 0.7264780 #>   [12,] 0.3486888 0.3676536 0.4109260 0.4335793 0.4539022 0.4627766 0.5623945 #>   [13,] 1.6469234 1.7292788 1.8007623 1.8432932 1.8877758 1.9391614 1.9416047 #>   [14,] 0.3999155 0.4020145 0.4489713 0.4504919 0.4615817 0.4779987 0.5029892 #>   [15,] 0.2436403 0.3935127 0.4089076 0.5083646 0.5488945 0.6392918 0.6604720 #>   [16,] 0.3293306 0.4893257 0.5458239 0.5741937 0.5897778 0.6447046 0.6659995 #>   [17,] 0.6977377 0.8617257 1.0572980 1.1038723 1.1918617 1.2138401 1.2184243 #>   [18,] 0.5040802 0.5627145 0.5672224 0.5718031 0.6170351 0.6306272 0.6928692 #>   [19,] 0.2857866 0.2940478 0.5034045 0.5351798 0.5760647 0.5784438 0.5962825 #>   [20,] 0.2286886 0.4625997 0.4797133 0.4798772 0.5166952 0.5390328 0.5771252 #>   [21,] 0.3915093 0.4433784 0.4566071 0.4575790 0.4861910 0.5110320 0.5232558 #>   [22,] 0.4862339 0.5522699 0.7315827 0.7898797 0.8151923 0.8296489 0.8669828 #>   [23,] 0.3284029 0.3912126 0.4004372 0.4007780 0.4112151 0.4410145 0.4468764 #>   [24,] 0.4052950 0.5732842 0.6229928 0.6652722 0.6817741 0.7026462 0.7338538 #>   [25,] 0.3843435 0.4089076 0.4893418 0.6487378 0.6911578 0.7590991 0.7672499 #>   [26,] 0.5589624 0.6996202 0.7212007 0.7595346 0.7693359 0.7742780 0.8258053 #>   [27,] 0.5874171 0.7553784 0.8066190 0.9306648 0.9755979 1.0063360 1.0732831 #>   [28,] 0.5737651 0.5889834 0.6094010 0.6560304 0.7157484 0.7175131 0.7469774 #>   [29,] 0.3036663 0.5015118 0.5242928 0.6236399 0.7883728 0.8257304 0.9218299 #>   [30,] 0.4241206 0.5605815 0.6033279 0.6619944 0.6658839 0.6841600 0.7411967 #>   [31,] 0.7023488 0.7160217 0.8238013 0.8848219 0.9756494 0.9797639 0.9837719 #>   [32,] 0.5225561 0.5611636 0.5643889 0.6709421 0.6924779 0.7095881 0.7157484 #>   [33,] 0.5907024 0.5912506 0.6060134 0.6538817 0.7120533 0.8081701 0.8266657 #>   [34,] 0.7235467 0.7685739 0.7745123 0.8247635 0.8285483 0.9214560 0.9243558 #>   [35,] 0.4614993 0.4723733 0.4747357 0.5278493 0.5339777 0.5495823 0.6000009 #>   [36,] 1.0280044 1.3326072 1.4438542 1.4950672 1.5100762 1.5186078 1.5462172 #>   [37,] 0.3299522 0.3549475 0.4322313 0.4429551 0.5124888 0.5439571 0.5654315 #>   [38,] 0.2847934 0.4855697 0.4862419 0.4930848 0.4956664 0.5022562 0.5031505 #>   [39,] 1.2646007 1.2969284 1.3367225 1.3488551 1.4737490 1.4945992 1.5523904 #>   [40,] 0.3035479 0.3186834 0.3551038 0.4236751 0.4554516 0.4722940 0.4805071 #>   [41,] 0.4353166 0.5238137 0.6346238 0.7027129 0.8082479 0.8549699 0.8945612 #>   [42,] 0.3158758 0.4122767 0.5134259 0.5156644 0.5397715 0.5698328 0.5908687 #>   [43,] 0.3112028 0.3118351 0.3385731 0.3728544 0.4352734 0.4380835 0.4468764 #>   [44,] 0.3042617 0.4165118 0.4180805 0.5900513 0.6286326 0.6854924 0.7085806 #>   [45,] 0.6570087 0.6574265 0.7661296 0.7933378 0.7996498 0.8144727 0.8169656 #>   [46,] 0.4739766 0.5013117 0.6193471 0.6287011 0.6384725 0.7145823 0.7185547 #>   [47,] 0.8716038 1.1291670 1.2601548 1.2731740 1.4309672 1.5484044 1.6242022 #>   [48,] 0.3418835 0.3449666 0.3816936 0.3847305 0.3990696 0.4634436 0.4700327 #>   [49,] 0.1960542 0.3481627 0.4300678 0.4569880 0.4627766 0.5043400 0.5348194 #>   [50,] 0.5048296 0.6151931 0.7414556 0.7697675 0.7865517 0.7933014 0.8135147 #>   [51,] 0.3107841 0.3815946 0.4300301 0.4810555 0.4820274 0.4976498 0.5715760 #>   [52,] 0.4401777 0.4851220 0.5566957 0.5749747 0.5953573 0.6111659 0.6666715 #>   [53,] 0.8284443 0.9455623 1.0445572 1.1584753 1.2246511 1.2271954 1.2533244 #>   [54,] 0.5165410 0.5483363 0.5577906 0.5610397 0.6063109 0.6596769 0.6916249 #>   [55,] 0.3401918 0.3740531 0.5727056 0.7549157 0.8370006 0.8412854 0.8601071 #>   [56,] 0.7918233 0.8732220 0.9036908 0.9597329 0.9924884 1.1504494 1.1632732 #>   [57,] 0.3175616 0.3724500 0.4292543 0.4828516 0.4994282 0.4997180 0.5676278 #>   [58,] 0.4791532 0.5493708 0.5503179 0.6035151 0.6610069 0.6694261 0.7053166 #>   [59,] 0.6290930 0.9289136 0.9689169 0.9733285 1.0257024 1.0359829 1.0698120 #>   [60,] 0.1793892 0.4433549 0.5704134 0.6528788 0.6883512 0.7304316 0.7677203 #>   [61,] 0.6116325 0.6763739 0.6778514 0.6978583 0.7198049 0.7402864 0.7830806 #>   [62,] 0.3478599 0.3490601 0.3556601 0.4149381 0.5310006 0.5597738 0.6224384 #>   [63,] 0.3444005 0.5210476 0.5378630 0.5725214 0.5962825 0.6565383 0.6822445 #>   [64,] 0.2266562 0.3956464 0.4746320 0.4763757 0.4905728 0.5245846 0.5899013 #>   [65,] 0.5080052 0.7771783 0.8011727 0.8205875 0.9891684 1.0671992 1.0835386 #>   [66,] 0.8743386 1.0018150 1.1016418 1.1232248 1.1248432 1.1419690 1.1658660 #>   [67,] 0.3534918 0.5119499 0.5529916 0.5719831 0.5959716 0.6538127 0.7144411 #>   [68,] 0.4588987 0.5010224 0.5109920 0.5944829 0.6216318 0.6928692 0.6936148 #>   [69,] 0.5602409 0.6469960 0.7002396 0.7106937 0.7325301 0.8068203 0.8211363 #>   [70,] 0.2020652 0.2218200 0.4595513 0.6095924 0.6650239 0.6690871 0.6998387 #>   [71,] 0.3062630 0.4370194 0.4648428 0.4746678 0.5015561 0.6170349 0.6515960 #>   [72,] 0.6308904 0.7111541 0.7114052 0.7174661 0.7458210 0.7520065 0.7886171 #>   [73,] 0.4637712 0.7955241 0.8066526 0.8093809 1.0033759 1.0384308 1.0415756 #>   [74,] 0.4819553 0.5052221 0.5255958 0.5520613 0.5833905 0.6326745 0.6415663 #>   [75,] 0.7557878 0.7656519 0.7914277 0.8048466 0.8943719 0.9215540 0.9592574 #>   [76,] 0.5677734 0.6241592 0.6257073 0.6401146 0.6488231 0.6922880 0.7164694 #>   [77,] 0.4402712 0.4445392 0.4796866 0.5374811 0.5765453 0.7042095 0.7100582 #>   [78,] 0.4369430 0.4746678 0.5246621 0.5705223 0.5949956 0.6440177 0.6726832 #>   [79,] 0.4590312 0.4811924 0.4847473 0.4859729 0.4906804 0.5147732 0.5902184 #>   [80,] 0.2734565 0.4826327 0.5053076 0.5955601 0.5985745 0.6196470 0.6214573 #>   [81,] 0.2202836 0.3042617 0.5492871 0.6267163 0.6952081 0.7114169 0.7539298 #>   [82,] 1.1691834 1.3014405 1.3326076 1.3625383 1.4254770 1.5510179 1.5517087 #>   [83,] 0.3844678 0.4266016 0.4934404 0.5010035 0.5011315 0.5246621 0.5409899 #>   [84,] 0.8915097 1.1654770 1.1700043 1.3160452 1.3369395 1.4012029 1.4224582 #>   [85,] 0.4650003 0.5372201 0.7173710 0.7750321 0.8502619 0.8524977 0.8613864 #>   [86,] 0.4552099 0.5632050 0.6270920 0.6319328 0.6451453 0.6526862 0.6801134 #>   [87,] 0.2697039 0.2989971 0.3722417 0.3864791 0.3979419 0.5044755 0.5115880 #>   [88,] 0.5890583 0.6303962 0.6972553 0.8012599 0.8484478 0.8800725 0.8999855 #>   [89,] 0.4085959 0.6081224 0.6106471 0.6470521 0.6488359 0.6704771 0.7069878 #>   [90,] 0.2682098 0.3385731 0.3977697 0.4007780 0.4088687 0.4110661 0.4334255 #>   [91,] 0.2751204 0.5993097 0.7266816 0.7926226 0.9236902 1.0381235 1.0600730 #>   [92,] 0.3414077 0.6613483 0.7949358 0.9309210 0.9628605 1.0047288 1.0271264 #>   [93,] 0.4188806 0.4482251 0.4985003 0.5105230 0.5590794 0.6109957 0.6160324 #>   [94,] 0.2915407 0.4006096 0.5662374 0.5703396 0.6104983 0.6254522 0.6571560 #>   [95,] 0.3570338 0.4294050 0.4334255 0.4494573 0.4615580 0.4654187 0.4721043 #>   [96,] 0.8064250 0.8357599 0.8473472 0.8582234 0.8847025 0.9628605 0.9966873 #>   [97,] 0.3610341 0.3774352 0.4789762 0.4862033 0.5030681 0.5503179 0.6050880 #>   [98,] 1.0499795 1.0643079 1.2747939 1.2884228 1.3809873 1.4183431 1.4441306 #>   [99,] 0.8425571 1.0012882 1.0613208 1.1160400 1.2090369 1.2196290 1.2271954 #>  [100,] 0.1719823 0.2005349 0.3995663 0.4020145 0.5419647 0.5490831 0.5606193 #>  [101,] 0.2832737 0.4051340 0.4424304 0.5553900 0.5557919 0.5561115 0.6074579 #>  [102,] 0.5238137 0.5270508 0.5384865 0.5802341 0.6482590 0.6528788 0.7393022 #>  [103,] 0.7780846 0.9160502 1.0251646 1.0758883 1.2273985 1.3250280 1.3650345 #>  [104,] 0.8402520 0.9372123 0.9846061 1.1511613 1.2117447 1.3488551 1.3855672 #>  [105,] 0.6289333 0.8665598 0.8765106 0.9286206 0.9619865 0.9700839 0.9714105 #>  [106,] 0.2661266 0.2988244 0.3085853 0.3724500 0.4407825 0.4594065 0.5107381 #>  [107,] 0.4815630 0.7025629 0.7512546 0.8192894 0.8972547 0.9296012 0.9443613 #>  [108,] 0.9098251 0.9994496 1.0043093 1.0074580 1.0819849 1.2459773 1.3049420 #>  [109,] 0.8127954 0.8848219 1.0958495 1.1919957 1.2672147 1.2879393 1.3004464 #>  [110,] 0.3765864 0.5735751 0.6231267 0.6317110 0.6976519 0.7089059 0.7372494 #>  [111,] 0.2312386 0.3439918 0.3618488 0.3632050 0.3725628 0.3938001 0.4741794 #>  [112,] 0.2479778 0.3071985 0.3768641 0.3914624 0.4080576 0.4565760 0.4807659 #>  [113,] 0.3536279 0.4134636 0.4428247 0.4719349 0.4721957 0.5400492 0.5448039 #>  [114,] 0.4448283 0.7417602 0.7560302 0.7727866 0.8194439 0.8326412 0.8550672 #>  [115,] 0.3670521 0.4335027 0.4463284 0.5121596 0.6746002 0.6782024 0.7550491 #>  [116,] 0.7586708 0.7918233 0.8495530 0.8584823 0.8656548 0.8673209 0.8829771 #>  [117,] 0.2824080 0.3407325 0.5028377 0.5034045 0.5364504 0.5724725 0.6111820 #>  [118,] 0.6011015 0.6568896 0.6970957 0.7760345 0.7873279 0.8389859 0.8612169 #>  [119,] 0.4645052 0.7627281 0.7664906 0.8466935 0.8795198 0.9012175 0.9062407 #>  [120,] 0.3015907 0.3781865 0.4005184 0.4426711 0.4985003 0.5100151 0.5129489 #>  [121,] 0.3449666 0.4175508 0.5115338 0.5185349 0.5413713 0.5454344 0.5565225 #>  [122,] 0.2218137 0.4422711 0.4834617 0.4870908 0.6026000 0.6130869 0.6203350 #>  [123,] 0.3457117 0.4862339 0.4869867 0.5838292 0.5907311 0.6927150 0.7224404 #>  [124,] 0.3859147 0.5860999 0.6060134 0.6827474 0.8100991 0.8135147 0.8984934 #>  [125,] 0.5688090 0.5920986 0.6839222 0.7025629 0.7132284 0.7472718 0.7557377 #>  [126,] 0.3214490 0.4776311 0.7167084 0.7890833 0.8072259 0.8133698 0.8167129 #>  [127,] 0.2652173 0.3418835 0.4172473 0.4641082 0.4797133 0.4834878 0.5094085 #>  [128,] 0.8132454 0.8566013 0.8912662 0.9567154 0.9995281 1.0529038 1.0892656 #>  [129,] 0.5173034 0.5385999 0.5909574 0.6495746 0.7144411 0.7530588 0.7793916 #>  [130,] 0.3016603 0.3589144 0.3798359 0.5123829 0.6620639 0.6644755 0.6849573 #>  [131,] 0.7945027 0.8052348 1.0094416 1.0380981 1.1226155 1.1483449 1.1911871 #>  [132,] 0.4773687 0.4896124 0.5876542 0.6151931 0.6152917 0.6525114 0.6617801 #>  [133,] 0.2957885 0.5998256 0.6250829 0.6819637 0.6955587 0.7119675 0.7181709 #>  [134,] 0.8466075 0.9559963 0.9653752 0.9709938 0.9928338 1.0115360 1.0325245 #>  [135,] 0.1418194 0.6279938 0.6904804 0.7189922 0.7214698 0.8149124 0.8672728 #>  [136,] 0.3444005 0.3513501 0.4608625 0.5105701 0.5202147 0.5617529 0.5724725 #>  [137,] 0.3534918 0.3892923 0.5173034 0.5489988 0.5815853 0.6398496 0.6930631 #>  [138,] 0.4773687 0.4978547 0.6620687 0.6726346 0.6922880 0.7011757 0.7414556 #>  [139,] 0.4446937 0.4528535 0.5435197 0.5998256 0.6946994 0.7683952 0.7739046 #>  [140,] 0.3638288 0.4680880 0.6973555 0.7250861 0.7494283 0.7619575 0.7656392 #>  [141,] 0.5383358 0.5900513 0.6787596 0.7081918 0.7108781 0.7493679 0.7631740 #>  [142,] 0.2109421 0.3381355 0.4371760 0.4410435 0.5464723 0.5576133 0.5636682 #>  [143,] 0.9889649 1.0560097 1.1533725 1.1601190 1.2254556 1.2703172 1.3124793 #>  [144,] 0.2954659 0.4437187 0.4796866 0.5504881 0.6164471 0.6256895 0.6496666 #>  [145,] 0.5080052 0.8341716 0.8432496 0.9130185 0.9294930 0.9832351 0.9880707 #>  [146,] 1.4565224 1.7843633 1.7996840 1.8705359 1.8760104 1.8799524 1.9060669 #>  [147,] 0.9372123 1.0059526 1.1388661 1.3188446 1.3606501 1.3640721 1.5037697 #>  [148,] 0.4468204 0.5485547 0.5751650 0.5758143 0.6294308 0.6353628 0.6354754 #>  [149,] 0.8402520 1.0644100 1.1333596 1.2646007 1.3188446 1.3367809 1.4007968 #>  [150,] 0.3891018 0.4304763 0.4883660 0.4925399 0.5255958 0.6052847 0.6073665 #>  [151,] 0.3124576 0.7553784 0.7786041 0.9153356 0.9816910 0.9895036 1.0228704 #>  [152,] 0.4181309 0.4396069 0.5606495 0.7003802 0.7263227 0.8679645 0.8940518 #>  [153,] 0.5745431 0.6589509 0.8750195 0.8975972 0.9072083 0.9513614 0.9557934 #>  [154,] 1.0687995 1.2359980 1.5919794 1.6551029 1.8572032 1.8726503 1.9143099 #>  [155,] 0.3525775 0.4188517 0.4430698 0.5028352 0.5053819 0.5655088 0.5838935 #>  [156,] 0.3304958 0.4964543 0.6085589 0.7224517 0.7508667 0.7620922 0.7791763 #>  [157,] 0.3737895 0.3898532 0.4004372 0.4822703 0.5067166 0.5655088 0.5766819 #>  [158,] 0.2298626 0.4305420 0.4738325 0.5797168 0.6287894 0.6676141 0.6826555 #>  [159,] 0.5807290 0.7780846 0.8875493 1.0127100 1.1450179 1.1916313 1.2690950 #>  [160,] 0.4289125 0.5011922 0.5540639 0.6948436 0.7208311 0.7520065 0.8818430 #>  [161,] 0.4241206 0.6107870 0.6229928 0.6529928 0.7129272 0.7185547 0.7243970 #>  [162,] 0.3859954 0.4109260 0.4555023 0.4626248 0.4633659 0.4918698 0.5110051 #>  [163,] 0.4552099 0.4855611 0.5240031 0.6194519 0.7022538 0.7035018 0.7373904 #>  [164,] 0.5278035 0.7871674 0.9289076 0.9783975 1.0084421 1.0511804 1.0655496 #>  [165,] 0.3799644 0.3806210 0.3934462 0.4135310 0.4970086 0.5115880 0.5358688 #>  [166,] 0.5511508 0.6390218 0.6504903 0.7225953 0.7955241 0.8164118 0.8319241 #>  [167,] 0.2105175 0.3815946 0.3900844 0.4083693 0.4314051 0.4369799 0.4537252 #>  [168,] 0.5598617 0.6075112 0.6221261 0.6616265 0.6686554 0.9067763 0.9191234 #>  [169,] 0.4829863 0.5799477 0.5957137 0.5966500 0.6040105 0.6383378 0.6721866 #>  [170,] 0.2656860 0.3399969 0.4277456 0.4720053 0.5953922 0.6416989 0.6518913 #>  [171,] 0.4612447 0.4740072 0.4972074 0.5100298 0.5698245 0.6111659 0.6466797 #>  [172,] 0.6097647 0.6132011 0.6296337 0.6743795 0.8499388 0.8502969 0.8613284 #>  [173,] 0.2503394 0.2994409 0.5889596 0.6348820 0.7158948 0.7264780 0.8250275 #>  [174,] 0.3672958 0.4160685 0.4725977 0.5723332 0.5830259 0.7428737 0.7919458 #>  [175,] 0.3196900 0.5194182 0.5298376 0.5435197 0.5572317 0.5750432 0.5840255 #>  [176,] 0.4165118 0.5049022 0.5466477 0.6267163 0.6787596 0.6830429 0.7427972 #>  [177,] 0.4497791 0.5191472 0.5219601 0.5395790 0.5416235 0.6160995 0.6362140 #>  [178,] 0.9989923 1.0082055 1.1357055 1.1672237 1.1891288 1.2180572 1.2978906 #>  [179,] 0.4670087 0.5287582 0.5334193 0.5478272 0.5721634 0.5743282 0.6294766 #>  [180,] 0.7664906 0.8228400 0.8585636 0.8969156 0.9115949 1.0017615 1.0335018 #>  [181,] 0.1362916 0.3588431 0.4794574 0.5286231 0.5310006 0.5579764 0.5622382 #>  [182,] 0.4579561 0.6701687 0.6773683 0.6883186 0.6996202 0.7164687 0.7429378 #>  [183,] 0.7755421 0.8804326 0.9078180 1.1672237 1.1684649 1.1729379 1.2657212 #>  [184,] 0.3119060 0.4224714 0.4575790 0.4683933 0.5423035 0.5515163 0.5919193 #>  [185,] 0.5909574 0.6332117 0.6853056 0.7348973 0.7398255 0.7435528 0.7496748 #>  [186,] 0.5069319 0.5264586 0.5577906 0.5580674 0.6443203 0.7141846 0.7309459 #>  [187,] 0.3943873 0.3955992 0.4359817 0.4794574 0.4972336 0.5284220 0.5321714 #>  [188,] 0.2682098 0.3284029 0.3530090 0.3678781 0.3728544 0.4075196 0.4294050 #>  [189,] 0.2991949 0.3692605 0.5451733 0.5594507 0.5624723 0.6126309 0.6801919 #>  [190,] 0.3898532 0.5403542 0.5727275 0.6038711 0.6124425 0.6162748 0.6253421 #>  [191,] 0.4279815 0.4480237 0.4493396 0.4829012 0.4842416 0.4862033 0.4921528 #>  [192,] 0.3214490 0.5980038 0.6570703 0.8534005 0.9127974 0.9277686 0.9352843 #>  [193,] 0.3394844 0.3853540 0.5972976 0.6104983 0.6413421 0.6960078 0.7603939 #>  [194,] 0.2752557 0.4161253 0.4172473 0.4176578 0.4396160 0.4940575 0.4972336 #>  [195,] 0.2578455 0.4328642 0.6321894 0.6537618 0.6839005 0.7108781 0.7116276 #>  [196,] 0.2791779 0.4024938 0.4860003 0.5316131 0.5517135 0.5688071 0.5936018 #>  [197,] 0.5488358 0.5890583 0.5960984 0.6170807 0.6979232 0.7174303 0.7531728 #>  [198,] 0.6311555 0.6573906 0.7012529 0.7290197 0.7398255 0.7983180 0.8183816 #>  [199,] 0.3642713 0.5072499 0.5454344 0.5506138 0.5703296 0.5830259 0.6540970 #>  [200,] 0.4726632 0.5489127 0.5812676 0.6390218 0.6806105 0.6894002 0.7998378 #>  [201,] 0.8613284 0.8640089 0.8871901 1.0109677 1.0149250 1.0495105 1.1598583 #>  [202,] 0.2164501 0.2860089 0.3381355 0.4283662 0.4480237 0.4736562 0.4737440 #>  [203,] 0.3527183 0.4759184 0.5130482 0.5664733 0.5982752 0.6008386 0.6296641 #>  [204,] 0.4037595 0.4106354 0.4734001 0.5075357 0.6279512 0.6381214 0.6766374 #>  [205,] 0.4613472 0.5733389 0.6536408 0.6658839 0.7161500 0.7405805 0.7691944 #>  [206,] 0.7557748 1.9032298 1.9909608 2.0085635 2.1575094 2.1825889 2.2086869 #>  [207,] 0.5352316 0.5703028 0.6775417 0.8012966 0.8110856 0.8860435 0.8907570 #>  [208,] 0.3399969 0.5087585 0.5108792 0.5812280 0.6684315 0.7307516 0.7418706 #>  [209,] 0.2266562 0.4415222 0.5105230 0.5281845 0.5290100 0.5508943 0.5960563 #>  [210,] 0.5144181 0.6123625 0.6639630 0.6989697 0.7102417 0.7557781 0.7588572 #>  [211,] 0.2442281 0.3479301 0.4439951 0.4642895 0.4872823 0.5358688 0.5773974 #>  [212,] 0.4894648 0.5949956 0.6911686 0.6929355 0.6989893 0.7356213 0.7939766 #>  [213,] 0.3559836 0.4992742 0.5002217 0.5591558 0.5654315 0.5836867 0.5955450 #>  [214,] 0.5745717 0.5981669 0.6085589 0.6228606 0.6447953 0.6589045 0.6828360 #>  [215,] 0.4768436 0.5065259 0.5627565 0.7367339 0.7530721 0.7609732 0.7615598 #>  [216,] 0.3559836 0.4424304 0.4907152 0.4921030 0.5727925 0.5907024 0.6593339 #>  [217,] 0.3052188 0.4374722 0.4523524 0.4868032 0.5092464 0.5101514 0.5210982 #>  [218,] 0.3974524 0.4433549 0.4991711 0.5081086 0.5470574 0.6239051 0.6253421 #>  [219,] 0.4592319 0.4923259 0.4934713 0.5198035 0.5287760 0.5481299 0.5616279 #>  [220,] 0.9243558 0.9301088 1.1803583 1.1868249 1.2316803 1.3025945 1.3337114 #>  [221,] 0.1765483 0.6991221 0.7436371 0.8061793 0.8457712 0.8822349 0.9095427 #>  [222,] 0.4114465 0.6579970 0.7081140 0.7223757 1.0008298 1.0602373 1.0841085 #>  [223,] 0.4855611 0.5070293 0.5399607 0.5737582 0.5895435 0.6067046 0.6136829 #>  [224,] 0.5725214 0.6602495 0.7616623 0.7667874 0.8101183 0.8179785 0.8180067 #>  [225,] 0.2694920 0.2950353 0.3692134 0.3719505 0.4592028 0.4992582 0.4999803 #>  [226,] 0.3343100 0.4750387 0.4832977 0.5889596 0.6089304 0.6234424 0.6648360 #>  [227,] 0.4123463 0.4757520 0.5777199 0.5832221 0.6133775 0.6400521 0.6722586 #>  [228,] 0.4657427 0.5010224 0.5418577 0.6170351 0.6605389 0.6997621 0.7465732 #>  [229,] 0.4051340 0.4735834 0.4921030 0.5809545 0.5859734 0.6244618 0.6464568 #>  [230,] 0.3891018 0.4681615 0.4966708 0.5392035 0.5647906 0.5702987 0.5720533 #>  [231,] 0.2547535 0.3056966 0.4740072 0.5703028 0.5714908 0.5925200 0.5940281 #>  [232,] 0.9555092 1.1303360 1.1388998 1.1594726 1.2539825 1.2605820 1.2764892 #>  [233,] 0.2109421 0.2860089 0.3835569 0.4145382 0.4747144 0.5700085 0.5719874 #>  [234,] 0.5355423 0.5872310 0.6488231 0.6511711 0.6514708 0.6620687 0.6808537 #>  [235,] 0.3692605 0.4257540 0.5174856 0.5175952 0.5428824 0.5457228 0.6078203 #>  [236,] 0.5011913 0.5154095 0.5271494 0.6122418 0.6528631 0.6848110 0.7000411 #>  [237,] 0.3951226 0.4605785 0.4844073 0.4856967 0.5214682 0.5475801 0.5896545 #>  [238,] 0.5555567 0.6041729 0.6486946 0.6611702 0.7187924 0.7520435 0.7555620 #>  [239,] 0.4374822 0.9087339 0.9675360 1.0043093 1.0416752 1.1352041 1.2382200 #>  [240,] 0.3848214 0.4431134 0.6011015 0.6048017 0.6541363 0.7072750 0.7132638 #>  [241,] 0.7002668 0.8351929 0.9067863 0.9174519 0.9210116 0.9361946 0.9924884 #>  [242,] 0.2230059 0.3106024 0.5786764 0.6139568 0.6573238 0.6714148 0.7042095 #>  [243,] 0.3631836 0.7214698 0.7647506 0.7948385 0.8413211 0.8450892 0.8465010 #>  [244,] 0.8610764 0.9358077 0.9801249 0.9993196 1.0108796 1.0252545 1.0280008 #>  [245,] 0.3080751 0.3107541 0.3160396 0.3999155 0.4615110 0.5349535 0.5481820 #>  [246,] 0.5765453 0.6558690 0.7005177 0.8138565 0.8658315 0.8670046 1.0029064 #>  [247,] 0.3342053 0.4390372 0.4789193 0.4895538 0.5284220 0.5497563 0.5579764 #>  [248,] 0.5187787 0.5655398 0.5926421 0.6029241 0.6503403 0.6525829 0.7330386 #>  [249,] 0.7742780 0.8390463 0.8879565 0.8886585 0.9933613 1.0113779 1.1279124 #>  [250,] 0.8413211 0.9289766 0.9943680 1.0636714 1.1219632 1.1385667 1.1523223 #>  [251,] 0.4423658 0.4739314 0.6919364 0.7125685 0.7307516 0.7743503 0.7797978 #>  [252,] 0.7704966 0.7745123 0.9301088 0.9765920 0.9806921 1.0033158 1.0061996 #>  [253,] 0.3183395 0.3478599 0.4142914 0.4497791 0.4867866 0.5707005 0.5740675 #>  [254,] 0.6927369 1.1663722 1.3124793 1.3924713 1.6727395 1.6976233 1.7778336 #>  [255,] 0.1963591 0.4167413 0.5624760 0.5832461 0.6152891 0.6170807 0.6645390 #>  [256,] 0.3642874 0.6713886 0.8404900 0.8498604 0.8597038 0.9465393 0.9807787 #>  [257,] 0.4127776 0.4727399 0.4924958 0.6556979 0.6588958 0.6865332 0.6979232 #>  [258,] 0.4670087 0.4929666 0.5014880 0.5799477 0.6056041 0.6182922 0.6302956 #>  [259,] 0.4788930 0.7232206 0.7920760 0.8184894 0.8846523 0.8963857 0.9163078 #>  [260,] 0.3298885 0.6568896 0.6602341 0.8319435 0.8572144 0.8684830 0.8820444 #>  [261,] 0.3461297 0.3779047 0.3847305 0.4344955 0.4791532 0.5155695 0.5202147 #>  [262,] 0.4019718 0.5540441 0.6682981 0.6746002 0.7254377 0.8308921 0.8470057 #>  [263,] 0.4523524 0.4550712 0.4623505 0.5549466 0.5637004 0.5863843 0.5943596 #>  [264,] 0.2353301 0.6801134 0.7381024 0.7402864 0.7923956 0.8268060 0.8741396 #>  [265,] 0.2656860 0.4940036 0.5083646 0.5087585 0.5427427 0.6460751 0.6637709 #>  [266,] 0.6714131 0.8008904 0.9622620 1.2575237 1.2897530 1.2925865 1.3800389 #>  [267,] 0.7923956 0.8258942 0.8966985 0.9029819 1.0015818 1.0553813 1.1269123 #>  [268,] 0.3062630 0.3782222 0.4369430 0.4465721 0.4803380 0.5010035 0.5324977 #>  [269,] 0.5009687 0.5250248 0.5428234 0.5473297 0.5942332 0.5955329 0.6020509 #>  [270,] 0.3694694 0.4990745 0.5044755 0.5073828 0.5221797 0.5618657 0.6075119 #>  [271,] 2.1686806 2.2086869 2.2810268 2.3181527 2.3606029 2.4186803 2.4244825 #>  [272,] 0.3530585 0.4734049 0.4747357 0.4937261 0.5221003 0.5710723 0.6007936 #>  [273,] 0.7566811 0.9849265 1.0073145 1.0687995 1.0916150 1.2922580 1.3093768 #>  [274,] 0.2474450 0.2828653 0.3439918 0.4110661 0.4494573 0.4789884 0.5098917 #>  [275,] 0.4648660 0.5489127 0.5699855 0.5739238 0.5982141 0.6347572 0.6426404 #>  [276,] 0.6293818 0.6993759 0.8308841 0.8464172 0.8495530 0.8732220 0.9309170 #>  [277,] 0.9493566 0.9797639 1.1373486 1.1400396 1.1867739 1.1919957 1.1947125 #>  [278,] 0.5676543 0.5906277 0.6551925 0.6584415 0.6663706 0.7028327 0.7198973 #>  [279,] 0.3376254 0.3556077 0.4071768 0.4304381 0.4513943 0.5140644 0.5481116 #>  [280,] 0.4443316 1.0295641 1.0404369 1.1279124 1.1370093 1.1961986 1.2268191 #>  [281,] 0.4701398 0.4753663 0.4798772 0.5016437 0.5879416 0.6611702 0.6612903 #>  [282,] 0.5963667 0.6405775 0.7198823 0.7262374 0.7851440 0.7967534 0.8175944 #>  [283,] 0.4734001 0.4819553 0.5610950 0.6125552 0.6348908 0.6632266 0.7207668 #>  [284,] 0.3943873 0.4328513 0.4789193 0.4850523 0.5263223 0.5286231 0.5301923 #>  [285,] 0.3747992 0.5221909 0.5895435 0.6116325 0.6512875 0.6895740 0.7035018 #>  [286,] 0.6183229 0.7769803 0.7859109 0.8773568 0.9343448 0.9549166 0.9764120 #>  [287,] 0.6583572 0.7055782 0.7864954 0.8128896 0.8280572 0.8424534 0.8690105 #>  [288,] 0.6183229 0.6824711 0.6825961 0.6918185 0.7775237 0.7884203 0.7974064 #>  [289,] 0.3075964 0.3862536 0.4024244 0.4145382 0.4283662 0.4921528 0.5025113 #>  [290,] 0.1998153 0.3016603 0.4811913 0.5119983 0.5129489 0.5203712 0.5852687 #>  [291,] 0.3000201 0.4148677 0.4633867 0.4723733 0.4938870 0.5325850 0.5666957 #>  [292,] 0.5232328 0.5400492 0.5425748 0.5460978 0.5610397 0.6117036 0.6231267 #>  [293,] 0.4257540 0.4292543 0.4966009 0.5107381 0.5594507 0.6267861 0.6400521 #>  [294,] 0.2218137 0.3576403 0.4037885 0.6063109 0.6104833 0.6138500 0.6443203 #>  [295,] 0.5807290 0.6296239 0.7645480 0.9160502 0.9723325 1.0319325 1.1000059 #>  [296,] 0.3246618 0.4604986 0.5069319 0.5312717 0.5520613 0.6287894 0.6300649 #>  [297,] 1.3482078 1.4732361 1.4893027 1.5836625 1.6339643 1.6551029 1.6707667 #>  [298,] 0.2296156 0.3813579 0.5184814 0.5243604 0.5431865 0.5595356 0.5634057 #>  [299,] 0.3972822 0.4965400 0.5194182 0.6076082 0.6290822 0.6760092 0.6789478 #>  [300,] 0.4448283 0.5734645 0.7645480 0.7941773 0.8390236 0.8422752 0.8519435 #>  [301,] 0.3365770 0.4171835 0.4481301 0.4496889 0.4506818 0.4891075 0.5171006 #>  [302,] 0.2569293 0.3341905 0.3618488 0.4208733 0.4286491 0.4562478 0.4609700 #>  [303,] 0.3582576 0.4393601 0.4750677 0.4935474 0.5200496 0.6106381 0.6153815 #>  [304,] 0.3985065 0.4481301 0.5704134 0.5758475 0.6468491 0.6484340 0.6493102 #>  [305,] 0.5517353 0.6800489 0.8270838 0.8313950 0.8533623 0.8767628 0.8883322 #>  [306,] 0.2020652 0.2753051 0.4636687 0.5449661 0.5473297 0.5852984 0.6668215 #>  [307,] 0.3414077 0.3471195 0.6384725 0.7448607 0.7551961 0.8762055 0.9248971 #>  [308,] 0.3537939 0.4440057 0.4910911 0.5114391 0.5476241 0.5530247 0.5760182 #>  [309,] 0.4916895 0.5995342 0.6447800 0.7485735 0.8892563 0.9886686 0.9982018 #>  [310,] 0.5312083 0.6139568 0.6994112 0.7266816 0.7379023 0.8330002 0.8425017 #>  [311,] 0.6927369 0.8882599 1.0306228 1.0560097 1.2125442 1.3396713 1.3635505 #>  [312,] 0.4636346 0.5320051 0.7262585 0.7761523 0.7983180 0.8087218 0.9527683 #>  [313,] 0.5474971 0.5872310 0.6326847 0.6726346 0.7840795 0.7865517 0.8100991 #>  [314,] 0.3160586 0.3882206 0.4023933 0.4537252 0.4826127 0.4930848 0.5560572 #>  [315,] 0.2954659 0.4402712 0.6798214 0.6936148 0.7349776 0.7459878 0.7593610 #>  [316,] 0.6696794 0.6865332 0.6996609 0.7618664 0.7626236 0.7792351 0.8628118 #>  [317,] 0.4335027 0.4585807 0.5434027 0.5540441 0.6385622 0.6481007 0.6811298 #>  [318,] 0.2752557 0.2994951 0.3710504 0.4359817 0.5036908 0.5098917 0.5263223 #>  [319,] 0.5254022 0.6111820 0.6481640 0.6570087 0.6724047 0.6794556 0.7683324 #>  [320,] 0.4465721 0.4648428 0.5395790 0.5984565 0.6111190 0.6136581 0.6233926 #>  [321,] 0.7127578 0.7436371 0.7673176 0.8291398 0.8413863 0.8558235 1.0156060 #>  [322,] 0.4470890 0.5076585 0.5124888 0.5231660 0.5373169 0.5393927 0.5440362 #>  [323,] 0.4066972 0.4586935 0.6145234 0.6310264 0.6404431 0.6568517 0.6626158 #>  [324,] 0.4874757 0.7017439 0.7727866 0.7933014 0.8831344 0.9190963 0.9253171 #>  [325,] 0.2832737 0.4406743 0.4510282 0.4699401 0.4907152 0.5575169 0.5591558 #>  [326,] 0.4557063 0.4871143 0.4931461 0.5019206 0.5051712 0.5052221 0.5481116 #>  [327,] 0.7143952 0.7606851 0.7677387 0.7730754 0.7746293 0.7919458 0.8392739 #>  [328,] 0.2824080 0.3459307 0.3787681 0.4735834 0.5561115 0.5666532 0.5784076 #>  [329,] 1.0676613 1.5983391 1.7461672 1.8718903 1.9509921 1.9752659 1.9934865 #>  [330,] 0.2656600 0.4197421 0.4314120 0.4393601 0.5153055 0.5641456 0.6239847 #>  [331,] 0.8832363 0.9567154 1.2394640 1.4999657 1.5093249 1.5724634 1.6109561 #>  [332,] 0.3457117 0.5522699 0.6965300 0.7437559 0.7467575 0.7628491 0.7762495 #>  [333,] 0.3895432 0.4687791 0.5209139 0.5944829 0.6893626 0.7648775 0.7656143 #>  [334,] 0.4374755 0.5166567 0.5836867 0.6258101 0.6296641 0.6343839 0.6538817 #>  [335,] 0.2724458 0.4483847 0.4595417 0.5615556 0.5907221 0.6050880 0.6080600 #>  [336,] 0.4443316 0.6424847 0.8610764 0.8815996 0.9384542 0.9568739 1.0199679 #>  [337,] 0.8617257 0.8710661 0.9524282 1.0021075 1.0310961 1.0416989 1.0630547 #>  [338,] 0.3631836 0.5953177 0.6319675 0.6528631 0.7359611 0.7627102 0.8105955 #>  [339,] 0.4309298 0.4604986 0.4925399 0.4966708 0.4968930 0.5229099 0.5622740 #>  [340,] 0.5696837 0.5945664 0.6140291 0.6607465 0.6679704 0.6915614 0.7433810 #>  [341,] 0.5259341 0.6778514 0.7219848 0.7570375 0.7698148 0.8017146 0.8072259 #>  [342,] 0.2217617 0.2988244 0.3202706 0.3326814 0.4828516 0.4954094 0.6143176 #>  [343,] 0.2857866 0.4578845 0.5097455 0.5696837 0.7037830 0.7221809 0.7342913 #>  [344,] 0.2499468 0.4080576 0.5500536 0.5505802 0.5763671 0.5945664 0.6108302 #>  [345,] 0.4725977 0.5025481 0.5506138 0.6319652 0.7194182 0.7232206 0.7233274 #>  [346,] 0.7372494 0.7678418 0.7828068 0.8265162 0.8465010 0.8489286 0.8980172 #>  [347,] 0.4087473 0.4442985 0.4910911 0.4938870 0.4999916 0.5135788 0.5271494 #>  [348,] 0.3932012 0.4194612 0.4335793 0.4401427 0.4459262 0.4721957 0.4750677 #>  [349,] 0.2273583 0.3806511 0.4652016 0.4704623 0.4829322 0.5894456 0.5898104 #>  [350,] 0.1983044 0.5860999 0.5923463 0.6525829 0.6622607 0.8927730 0.9317428 #>  [351,] 0.3935127 0.4116965 0.4475573 0.4893418 0.5434911 0.5978571 0.6817049 #>  [352,] 0.6198571 0.6364684 0.6631117 0.7236107 0.7350833 0.7603939 0.8215576 #>  [353,] 0.3747890 0.4972074 0.5067166 0.5456494 0.5765121 0.5823562 0.6178335 #>  [354,] 0.4482251 0.4768116 0.4777298 0.4975465 0.5205927 0.5351490 0.5767044 #>  [355,] 0.5921002 0.8509328 0.8883322 1.3493029 1.4194159 1.5123797 1.5465838 #>  [356,] 0.6469960 0.6535593 0.6651903 0.6765484 0.7467857 0.8138460 0.8155243 #>  [357,] 0.5297576 0.5460581 0.5752158 0.6501874 0.6887962 0.6977100 0.7395676 #>  [358,] 0.4777599 0.5337423 0.5889834 0.6460212 0.6903412 0.7210871 0.8240193 #>  [359,] 0.4142914 0.5176881 0.5277014 0.6106471 0.6123415 0.6224384 0.6269097 #>  [360,] 0.4919594 0.5453030 0.5484186 0.5550756 0.6550249 0.6896709 0.7104783 #>  [361,] 0.4577316 0.5203527 0.5270669 0.5484186 0.6130869 0.6325047 0.6629479 #>  [362,] 0.5048736 0.6315611 0.6460212 0.6517485 0.7300337 0.7449540 0.7578651 #>  [363,] 0.6151594 0.6622607 0.9363069 0.9611949 0.9692649 0.9902827 1.0039163 #>  [364,] 0.6645390 0.7595542 0.7690297 0.8238071 0.8250804 0.9323085 0.9492159 #>  [365,] 0.4801832 0.5703396 0.6265655 0.6522410 0.6744898 0.6847840 0.6887962 #>  [366,] 0.6241592 0.6385163 0.6849981 0.7652407 0.8636321 0.8665598 0.8747543 #>  [367,] 0.4036686 0.4074138 0.5643889 0.5962516 0.6315293 0.7345245 0.7536984 #>  [368,] 0.5929305 0.7351369 0.8083417 0.9341815 0.9427737 1.0242711 1.0624381 #>  [369,] 0.4695051 0.4996085 0.5723332 0.6187645 0.8859597 0.8961061 0.9085786 #>  [370,] 0.3556077 0.3990696 0.4175508 0.4701749 0.5415097 0.5704060 0.5748674 #>  [371,] 0.5189913 0.6270920 0.7058054 0.7151584 0.7381024 0.7822497 0.8412011 #>  [372,] 0.1821476 0.4550712 0.5155402 0.6817049 0.7198049 0.7698148 0.7935792 #>  [373,] 0.4188806 0.5119499 0.5290100 0.5673679 0.6157251 0.6398496 0.6468491 #>  [374,] 0.6158580 0.7952401 0.8465456 0.9759081 0.9771859 1.0338753 1.0490758 #>  [375,] 0.3524337 0.3536279 0.3891551 0.4401427 0.4555023 0.4699200 0.5623945 #>  [376,] 1.2005248 1.2138753 1.3149943 1.3170209 1.3290479 1.3774349 1.4527436 #>  [377,] 0.3000201 0.3066120 0.3272235 0.3809927 0.4125014 0.4249279 0.4442985 #>  [378,] 0.3853540 0.4068972 0.4964543 0.5422557 0.6198571 0.6254522 0.6384770 #>  [379,] 0.3454563 0.3713510 0.4965400 0.5224370 0.6194128 0.6682066 0.7175131 #>  [380,] 0.3392109 0.4181309 0.6375285 0.7202229 0.7429733 0.7588076 0.7750321 #>  [381,] 0.3905628 0.4585807 0.5287760 0.6011118 0.6414148 0.6638869 0.6706265 #>  [382,] 0.6376604 0.6560304 0.7972184 0.8490657 0.8542834 0.9027296 0.9437868 #>  [383,] 0.1362916 0.3912933 0.3955992 0.4328513 0.4390372 0.5727553 0.6178691 #>  [384,] 0.3091575 0.5322739 0.5451491 0.5872667 0.6306143 0.6480375 0.6584415 #>  [385,] 0.1628608 0.7103740 1.0996304 1.1373904 1.1416821 1.1607203 1.2325702 #>  [386,] 0.3784988 0.4051373 0.4406743 0.4447534 0.4783833 0.4970822 0.5196511 #>  [387,] 0.4739314 0.5851950 0.6565383 0.6904380 0.7537516 0.8005908 0.8106037 #>  [388,] 0.4437187 0.4687791 0.5177161 0.5509537 0.5732842 0.6291464 0.6798214 #>  [389,] 0.3113292 0.4423658 0.6108399 0.6132011 0.8419828 0.8532589 0.8539395 #>  [390,] 0.5042632 0.5047298 0.6332989 0.6573906 0.6640788 0.7308810 0.7348973 #>  [391,] 0.7233274 0.7667874 0.7677387 0.8072730 0.8238013 0.8640089 0.8686242 #>  [392,] 0.3895432 0.4814243 0.5017388 0.5109920 0.5509537 0.5559009 0.5684539 #>  [393,] 0.3934241 0.4134636 0.4875948 0.4968930 0.4970086 0.5114391 0.5413453 #>  [394,] 0.7262374 0.7883433 0.8249225 0.8961636 0.9529310 1.0486522 1.0517503 #>  [395,] 0.1257555 0.4669204 0.4789762 0.5074462 0.5550756 0.6272511 0.6629479 #>  [396,] 0.7127578 0.9761487 1.0934914 1.1792269 1.2529735 1.2647336 1.2691116 #>  [397,] 0.2353301 0.5189913 0.6319328 0.6763739 0.8770099 0.9029819 0.9047004 #>  [398,] 0.4036686 0.6553439 0.7098716 0.7248484 0.7313914 0.7385971 0.8750195 #>  [399,] 0.3202706 0.3913705 0.4149331 0.4594065 0.4824973 0.4997180 0.5302900 #>  [400,] 0.3830567 0.4335794 0.6856147 0.7246882 0.7279501 0.8605461 0.8679605 #>  [401,] 0.3458029 0.6856147 0.6893942 0.7525894 0.7639661 0.7671241 0.8066190 #>  [402,] 0.3184559 0.4518358 0.5047298 0.6410868 0.6615776 0.7332994 0.7435528 #>  [403,] 0.3710223 0.3747890 0.3890036 0.4005514 0.4566556 0.4822703 0.4933322 #>  [404,] 0.3525775 0.3633023 0.3969505 0.4275021 0.4805071 0.4826465 0.5098671 #>  [405,] 0.7915908 1.0149250 1.1095494 1.1976677 1.2020657 1.2915119 1.4095128 #>  [406,] 0.3285568 0.4314120 0.4459262 0.4767470 0.4802200 0.4935474 0.5290869 #>  [407,] 0.3213510 0.4834092 0.5131636 0.5381790 0.5893552 0.5904987 0.6029693 #>  [408,] 0.3178739 0.3953197 0.5304649 0.5385771 0.5808212 0.6046218 0.6353393 #>  [409,] 0.4980218 0.5544410 0.5735751 0.6319675 0.6597138 0.7081038 0.7502911 #>  [410,] 0.4111658 0.6511711 0.6553934 0.7264462 0.7492739 0.7716554 0.8001210 #>  [411,] 0.6332989 0.7615951 0.8218535 0.8311973 0.9326075 0.9754550 0.9913331 #>  [412,] 0.5250252 0.6174626 0.6315293 0.6413620 0.6457151 0.6603378 0.6631487 #>  [413,] 0.2296156 0.3987572 0.4429551 0.4651612 0.4720911 0.5008382 0.5440362 #>  [414,] 0.4051202 0.4769180 0.7755421 0.9211892 0.9332052 0.9669258 1.0150922 #>  [415,] 0.1457126 0.5002871 0.5610436 0.5681428 0.5699855 0.7477874 0.7981500 #>  [416,] 0.4056079 0.5185333 0.5372201 0.5717254 0.6669696 0.6682361 0.6959216 #>  [417,] 0.5261482 0.5872667 0.5905954 0.6268633 0.6326371 0.6944146 0.7490721 #>  [418,] 0.2546616 0.5221003 0.5281845 0.5339777 0.5899013 0.5936018 0.6222072 #>  [419,] 0.5121596 0.6132402 0.7254377 0.7297429 0.7689811 0.7979053 0.8296740 #>  [420,] 0.5019129 0.5067543 0.5348742 0.5720533 0.6073665 0.6227840 0.6371878 #>  [421,] 0.5492871 0.6242689 0.6266138 0.7856933 0.8007903 0.8282300 0.8867929 #>  [422,] 0.4955922 0.5857594 0.5938233 0.6401902 0.6480952 0.6741597 0.6915875 #>  [423,] 0.4430698 0.4549399 0.4942273 0.5141040 0.5802341 0.5968755 0.6428334 #>  [424,] 0.3802711 0.3884973 0.6605389 0.7177136 0.7344810 0.8601750 0.8970716 #>  [425,] 0.3481627 0.3920226 0.3926587 0.4059614 0.4381897 0.4934713 0.5628062 #>  [426,] 0.9883830 1.0004716 1.0509800 1.0558282 1.1139603 1.1253654 1.1421931 #>  [427,] 0.4777599 0.7755872 0.8128896 0.8477208 0.8490090 0.8849198 0.9162768 #>  [428,] 0.3918320 0.4289125 0.6084791 0.6263253 0.7111541 0.8128610 0.8505465 #>  [429,] 0.5138186 0.6642021 0.6690111 0.6806061 0.6947922 0.7058257 0.7114169 #>  [430,] 0.3688427 0.3948392 0.4609358 0.5423035 0.5549392 0.5716828 0.6080963 #>  [431,] 1.0730223 1.4578942 1.4752809 1.5188541 1.5335735 1.5639044 1.5855170 #>  [432,] 0.6152174 0.6268633 0.6339550 0.7537199 0.8068748 0.8384083 0.8432481 #>  [433,] 0.4116965 0.5155402 0.5488945 0.5653569 0.7218092 0.7590991 0.7820999 #>  [434,] 0.4125014 0.4983567 0.4999916 0.5154095 0.5325850 0.5391964 0.5422872 #>  [435,] 0.4123463 0.4869867 0.5505204 0.5944104 0.6481640 0.6965300 0.7600829 #>  [436,] 0.3806511 0.3838156 0.4368219 0.4897840 0.5797199 0.6907963 0.6946080 #>  [437,] 0.2618901 0.4174240 0.5035822 0.5413713 0.5488100 0.5831975 0.5879309 #>  [438,] 0.4959007 0.6457151 0.7176706 0.7920279 0.8368992 0.8614404 0.9128021 #>  [439,] 0.4485787 0.5459737 0.5677734 0.6356550 0.6956782 0.7170209 0.7448506 #>  [440,] 0.3514631 0.5187787 0.5466477 0.6713886 0.6968107 0.8028419 0.8264479 #>  [441,] 0.5425146 0.7626236 0.7633689 0.7675038 0.7677695 0.7694295 0.7838109 #>  [442,] 0.6296337 0.7434690 0.7822497 0.8595808 0.8613229 0.8841422 0.8859597 #>  [443,] 0.2578455 0.3417088 0.5196555 0.5383358 0.6234864 0.6611541 0.6897736 #>  [444,] 0.3304958 0.5745717 0.6384770 0.8066526 0.8386210 0.8411821 0.8508133 #>  [445,] 0.1960542 0.3676536 0.3926587 0.3980096 0.4613971 0.5085484 0.5577556 #>  [446,] 0.2991949 0.5174856 0.5902651 0.6158555 0.6207376 0.6400436 0.6540970 #>  [447,] 0.5555567 0.8119474 0.9274681 0.9510667 0.9553364 0.9636199 0.9896622 #>  [448,] 0.3136491 0.4379508 0.4750387 0.4872823 0.5311648 0.6108173 0.6707253 #>  [449,] 0.2922924 0.2928507 0.3874939 0.4891075 0.4980564 0.5681757 0.5693549 #>  [450,] 0.4645052 0.5734645 0.6892862 0.7327970 0.8550672 0.9059494 0.9226508 #>  [451,] 0.3776611 0.4051202 0.7571150 0.7891617 0.8804326 0.9623114 1.1344319 #>  [452,] 0.2618901 0.3390154 0.4804254 0.5135363 0.5185349 0.5615556 0.5796006 #>  [453,] 0.4366422 0.5072311 0.5238620 0.5409284 0.5454542 0.7176306 0.7218152 #>  [454,] 0.3352511 0.3513501 0.3779047 0.4895538 0.5026705 0.5364504 0.5378630 #>  [455,] 0.6907413 0.7005177 0.9384542 1.0699758 1.0746198 1.0962976 1.1049130 #>  [456,] 0.4614993 0.5081797 0.5610950 0.5666957 0.6122418 0.6170191 0.6381189 #>  [457,] 0.5955406 0.6458231 0.7036961 0.7863549 0.8026338 0.8140232 0.8283215 #>  [458,] 0.2289517 0.3067851 0.3186834 0.3819500 0.4005514 0.4741237 0.4938784 #>  [459,] 0.5252485 0.5339298 0.5489988 0.5691434 0.6311555 0.6720264 0.6812624 #>  [460,] 0.4374822 0.7195262 0.9098251 0.9343713 0.9505368 0.9764738 1.0424884 #>  [461,] 0.2996762 0.3490601 0.3588431 0.3912933 0.5119789 0.5439571 0.5553900 #>  [462,] 0.3660383 0.3848525 0.4423240 0.4423984 0.4764335 0.5007229 0.5412566 #>  [463,] 1.1788565 1.3423411 1.4133923 1.4198957 1.4895292 1.5667001 1.6822037 #>  [464,] 0.6225775 0.9153356 1.0056298 1.0156434 1.0508046 1.1443681 1.1523387 #>  [465,] 0.3458029 0.3830567 0.5383580 0.6264371 0.7775237 0.7781291 0.8263970 #>  [466,] 0.3757904 0.4253779 0.5240031 0.5697414 0.6078203 0.6136829 0.6402618 #>  [467,] 0.2791779 0.4828984 0.4913224 0.5192799 0.5194278 0.5242562 0.6222072 #>  [468,] 0.1412353 0.3066120 0.3913374 0.4314051 0.4435253 0.4633867 0.4826127 #>  [469,] 0.3091575 0.5814689 0.5906277 0.5992562 0.6326371 0.6469669 0.6984444 #>  [470,] 0.5165410 0.5225561 0.5504840 0.6094010 0.6236399 0.7190391 0.7255185 #>  [471,] 0.3905628 0.4570374 0.4923259 0.5048736 0.5072869 0.5268461 0.5910757 #>  [472,] 0.5606495 0.7588076 0.7928859 0.8473664 0.9024861 0.9034418 0.9504198 #>  [473,] 0.6265314 0.7195262 0.8195750 0.9087339 0.9994496 1.0561105 1.1280151 #>  [474,] 0.3556601 0.5642782 0.5707005 0.5888508 0.6033136 0.6389466 0.6528188 #>  [475,] 0.4024483 0.5136618 0.6266999 0.6293683 0.6331598 0.6568448 0.7223757 #>  [476,] 0.2569293 0.3657331 0.4026997 0.4276793 0.4572070 0.4812868 0.5029748 #>  [477,] 0.3524337 0.5567038 0.5635622 0.5871811 0.6359616 0.6450181 0.6596769 #>  [478,] 0.6504698 0.8628118 0.8934793 0.9492043 0.9711269 1.0379094 1.0430789 #>  [479,] 0.7279501 0.8232968 0.8815718 0.8875119 0.9731088 1.0534073 1.0644012 #>  [480,] 0.5943301 0.6619937 0.6947922 0.7085971 0.8332180 0.8358105 0.9264773 #>  [481,] 0.4085959 0.4556442 0.6605592 0.6979482 0.7189606 0.7891139 0.7960983 #>  [482,] 0.7915908 1.0648047 1.2543197 1.3099819 1.4000270 1.4309635 1.4379298 #>  [483,] 0.5929305 0.8490390 0.9457200 1.0348564 1.0396577 1.1022982 1.1396698 #>  [484,] 0.3525252 0.4063249 0.4582774 0.4732585 0.4942109 0.5168748 0.5171654 #>  [485,] 0.5038661 0.5610436 0.6504698 0.7018391 0.9611765 0.9764738 1.0006022 #>  [486,] 0.3358029 0.4505269 0.5504881 0.6291464 0.7264237 0.7367339 0.7541327 #>  [487,] 0.5383990 0.6707741 0.7384176 0.8436659 0.9150972 0.9363727 0.9406192 #>  [488,] 0.4432166 0.4470028 0.5287582 0.5528294 0.6302956 0.6820235 0.7083550 #>  [489,] 0.3660383 0.4829863 0.4848390 0.5014880 0.5230184 0.5234596 0.5705091 #>  [490,] 0.4485787 0.4863853 0.5623340 0.6401146 0.6553934 0.7002668 0.8068167 #>  [491,] 0.6932394 0.7742510 0.8789513 0.8817063 0.9108048 0.9883042 1.0338475 #>  [492,] 0.2094617 0.4414033 0.4572070 0.4609700 0.4661846 0.4746320 0.4855697 #>  [493,] 0.3106024 0.4460617 0.5312083 0.6673814 0.7340519 0.8070216 0.8581231 #>  [494,] 0.3301119 0.3437702 0.3669123 0.4918698 0.5940281 0.6070454 0.6111134 #>  [495,] 0.3394844 0.4006096 0.4068972 0.4172339 0.6019840 0.6138800 0.6667747 #>  [496,] 0.2286886 0.3686147 0.4272458 0.5016437 0.5448599 0.5484320 0.5511875 #>  [497,] 0.5624785 0.5993097 0.7017688 0.7706361 0.8810112 0.9182541 0.9193467 #>  [498,] 0.8064250 1.0526432 1.1023809 1.1811835 1.2005248 1.2230364 1.2752681 #>  [499,] 2.4787351 2.5249703 2.6359338 2.6802160 2.6815841 2.6952508 2.7314304 #>  [500,] 0.4542098 0.5011913 0.5495823 0.6193803 0.6722716 0.6991221 0.7031971 #>  [501,] 0.2734565 0.4199832 0.4287305 0.4473554 0.5979192 0.6239051 0.6380812 #>  [502,] 0.3392109 0.4396069 0.5123829 0.6164692 0.7387613 0.7750119 0.7871300 #>  [503,] 0.5428824 0.6339550 0.6402618 0.6501874 0.6507848 0.7304828 0.7361710 #>  [504,] 0.3386233 0.3930878 0.4120583 0.4747824 0.4762068 0.5085280 0.5215113 #>  [505,] 0.2612405 0.3551038 0.4938784 0.5573365 0.5755479 0.5987590 0.6044852 #>  [506,] 0.3083919 0.5942332 0.7722180 0.7991157 0.8329750 0.8516392 0.8547082 #>  [507,] 0.2217617 0.2661266 0.3175616 0.4149331 0.4537911 0.4966009 0.5105782 #>  [508,] 0.6308904 0.7466674 0.7903432 0.9064238 0.9807787 1.0042939 1.0348121 #>  [509,] 0.4242651 0.4347131 0.5480419 0.6643007 0.6676141 0.7039359 0.7141846 #>  [510,] 0.5904378 0.6410868 0.8222237 0.9754550 1.0094423 1.0567393 1.0831111 #>  [511,] 0.4332651 0.6714131 0.7998238 0.8317753 0.8457471 0.8535646 0.8628611 #>  [512,] 0.5671601 0.7282968 0.8362417 0.9513614 1.1567506 1.1991442 1.3318198 #>  [513,] 0.6913829 0.8888571 0.9334695 0.9759081 0.9892210 1.0252545 1.0327843 #>  [514,] 0.4353166 0.5455117 0.7431773 0.8553774 0.8819996 0.9236206 0.9959342 #>  [515,] 0.4870615 0.5425748 0.6153536 0.6784835 0.6855743 0.7353062 0.7886938 #>  [516,] 0.3604918 0.3632050 0.3890036 0.4383867 0.4599237 0.4645308 0.4826099 #>  [517,] 0.3329671 0.5828192 0.6029241 0.7347236 0.7795816 0.8302082 0.8375110 #>  [518,] 0.3944994 0.4106354 0.5612706 0.5953177 0.6034767 0.6522410 0.6632266 #>  [519,] 0.3765864 0.4980218 0.7048266 0.7224488 0.7627102 0.7678418 0.8104953 #>  [520,] 0.5385999 0.6332117 0.6527146 0.6615776 0.6865330 0.7093842 0.7124826 #>  [521,] 0.1923351 0.5812571 0.6480375 0.6551925 0.7185370 0.7214546 0.7555407 #>  [522,] 1.4254770 1.4553427 1.5319170 1.5682789 1.5691586 1.6937886 1.8572698 #>  [523,] 0.3401918 0.4893371 0.5681757 0.7157430 0.7289997 0.8183816 0.8595664 #>  [524,] 0.5352316 0.6435275 0.7486387 0.7818217 0.8367021 0.8470057 0.8558235 #>  [525,] 0.4876600 0.5144181 0.5706278 0.6483658 0.6916804 0.7436081 0.8408944 #>  [526,] 0.2442281 0.4379508 0.5443972 0.5917659 0.5943638 0.6069509 0.6195639 #>  [527,] 0.5355423 0.5474971 0.5550847 0.6033136 0.6927700 0.6934277 0.7839221 #>  [528,] 0.6849981 0.7236067 0.7239378 0.7559130 0.9286206 0.9476253 1.0313606 #>  [529,] 0.3109425 0.3454563 0.4489389 0.6076082 0.6686554 0.7683952 0.7746529 #>  [530,] 0.5224370 0.5242928 0.5504840 0.6955587 0.7028009 0.7331899 0.7756818 #>  [531,] 0.2686635 0.8502969 0.8539395 0.8875681 0.9449080 0.9607605 0.9725843 #>  [532,] 0.3968053 0.4608625 0.5451733 0.5693529 0.5913540 0.6207376 0.6556169 #>  [533,] 0.2105175 0.2849864 0.4435253 0.4451457 0.4976498 0.5039508 0.5385771 #>  [534,] 1.0056298 1.0063360 1.0228704 1.1758045 1.3061648 1.3131092 1.3539577 #>  [535,] 0.1795017 0.3914624 0.4311430 0.4808685 0.5177915 0.5188129 0.5231660 #>  [536,] 0.3886122 0.6940858 0.7367848 0.7859109 0.7948439 0.8092575 0.8410188 #>  [537,] 0.2922924 0.3740531 0.4893371 0.5506097 0.5691912 0.5700471 0.5963322 #>  [538,] 0.5304649 0.5727852 0.5982141 0.5984345 0.6064560 0.6682981 0.6768179 #>  [539,] 0.3723138 0.4811191 0.4975465 0.5152524 0.5242217 0.5337690 0.5374942 #>  [540,] 0.1998153 0.3781865 0.3798359 0.4114479 0.5380592 0.5418090 0.5437751 #>  [541,] 0.8346431 0.9989923 1.0280044 1.2451451 1.2641855 1.3222055 1.3797486 #>  [542,] 0.5150732 0.5405132 0.5517353 0.8327506 0.8509328 1.0145762 1.0188366 #>  [543,] 0.6707741 0.8546885 0.8712047 0.9233843 0.9337107 0.9400282 1.0088752 #>  [544,] 0.7023488 0.7678536 0.8127954 0.8866871 0.9579694 1.0152249 1.0761013 #>  [545,] 0.4737440 0.4814243 0.5159818 0.5177161 0.5302001 0.5374756 0.6089900 #>  [546,] 0.4570762 0.4936120 0.5217608 0.6644822 0.7165986 0.7342913 0.7596182 #>  [547,] 0.2686635 0.6729536 0.8144727 0.8584639 0.8972973 0.9212723 0.9984089 #>  [548,] 0.2965186 0.3938001 0.4227960 0.4627563 0.5003201 0.5122100 0.5155835 #>  [549,] 0.7471292 1.0120172 1.0738716 1.0850179 1.1114957 1.1788565 1.2134379 #>  [550,] 0.7557748 1.9640711 2.0158992 2.1958536 2.2025514 2.2810268 2.3287320 #>  [551,] 0.2164501 0.4410435 0.4493396 0.4747144 0.4762068 0.5017388 0.5159818 #>  [552,] 0.3774352 0.5874570 0.6080600 0.6632698 0.6701687 0.6766880 0.6805240 #>  [553,] 0.2273583 0.3103047 0.3158317 0.4449949 0.4897840 0.5127951 0.5189196 #>  [554,] 0.4215890 0.4280685 0.7515559 0.8982119 0.9799687 0.9824180 1.0017711 #>  [555,] 0.2751204 0.5624785 0.8821678 0.8904358 0.9163542 0.9306648 0.9887995 #>  [556,] 0.3124576 0.5874171 0.9109125 0.9132635 0.9570289 0.9756815 0.9871541 #>  [557,] 0.4570762 0.4896084 0.5105701 0.5210476 0.5693529 0.6319652 0.6602495 #>  [558,] 0.6977377 0.8379934 0.8425571 0.9253071 0.9524282 0.9583905 1.0047693 #>  [559,] 0.2618401 0.6252074 0.6447046 0.6806061 0.6927381 0.7264462 0.7378000 #>  [560,] 0.5383990 0.5511466 0.6680109 0.7092152 0.7109173 0.7745257 0.8069808 #>  [561,] 0.4650941 0.5238620 0.5348742 0.5662374 0.6147478 0.6925079 0.7901603 #>  [562,] 1.4131752 1.4267515 1.5172372 1.6144240 1.7843633 1.9143099 2.0157166 #>  [563,] 1.0995921 1.1604199 1.2860329 1.3602894 1.4155908 1.4740372 1.5191169 #>  [564,] 0.5700973 0.9030833 1.0028225 1.0354115 1.0786533 1.0800418 1.0995374 #>  [565,] 0.2612405 0.3530585 0.4722940 0.5048796 0.5476488 0.5617994 0.5865857 #>  [566,] 0.4788930 0.8072730 0.8456541 0.8498218 0.8716038 0.9956315 1.0053389 #>  [567,] 0.6152174 0.9260792 0.9534972 0.9594619 1.0066028 1.0099486 1.0219929 #>  [568,] 0.3052188 0.3113680 0.3719505 0.4422055 0.4989853 0.5074590 0.5246449 #>  [569,] 0.2343413 0.4280685 0.6458231 0.6796532 0.9604054 0.9616049 1.0077803 #>  [570,] 0.6254268 0.6579970 0.8277229 0.9013307 0.9356341 0.9553533 1.0004716 #>  [571,] 0.2849864 0.3809927 0.3913374 0.4213421 0.4369799 0.4488936 0.4956664 #>  [572,] 0.3799644 0.3981264 0.4570374 0.5037029 0.5298376 0.5905216 0.5940546 #>  [573,] 0.7058054 0.9816568 1.1095494 1.1333906 1.1793584 1.2026618 1.2271717 #>  [574,] 0.4938878 0.7164475 0.7231428 0.7274085 0.7840491 0.8155527 0.8425017 #>  [575,] 0.3610341 0.4669204 0.4753663 0.5390328 0.5429686 0.5484320 0.5824740 #>  [576,] 0.9832351 1.1916313 1.2309731 1.2885887 1.3348366 1.4022129 1.4999657 #>  [577,] 0.4370194 0.5828192 0.5987923 0.6252074 0.6440177 0.7103820 0.7120553 #>  [578,] 0.1907358 0.4380835 0.4398420 0.4453320 0.4968742 0.5043623 0.5147732 #>  [579,] 0.3394250 0.5017704 0.5073744 0.5459737 0.5623340 0.5957137 0.6257073 #>  [580,] 0.3136491 0.4832977 0.5452097 0.5469488 0.5943638 0.6684409 0.6788909 #>  [581,] 0.4757520 0.5505204 0.5907311 0.7315827 0.7437559 0.8815718 0.8903385 #>  [582,] 0.3638288 0.5512129 0.5698245 0.5741937 0.6482118 0.6834861 0.6927381 #>  [583,] 0.7201322 0.8014768 0.9182950 0.9211684 0.9495949 0.9767439 0.9846061 #>  [584,] 0.8286330 0.8392739 0.9274681 0.9415304 0.9662324 0.9756150 1.0326113 #>  [585,] 0.7150264 0.8001651 0.8241293 0.8258942 0.8378235 0.8571228 0.8893262 #>  [586,] 0.5337423 0.5635622 0.5737651 0.6376604 0.7493295 0.7755872 0.8280572 #>  [587,] 0.9260981 0.9886686 1.0634161 1.2119385 1.3173416 1.4022129 1.4536936 #>  [588,] 0.2770382 0.4636346 0.6602455 0.8192408 0.9824257 0.9941006 1.0064931 #>  [589,] 0.4431134 0.4585248 0.4858187 0.5874570 0.5907221 0.6573963 0.6631667 #>  [590,] 0.5029892 0.5650864 0.6707272 0.6804693 0.7201322 0.7361470 0.7548057 #>  [591,] 0.4637712 0.5511508 0.7224517 0.7236107 0.7981595 0.8298472 0.8386210 #>  [592,] 0.3838156 0.4704623 0.4808685 0.5406582 0.6070318 0.6076115 0.6214845 #>  [593,] 0.2780944 0.2938909 0.3160396 0.4005184 0.4071768 0.4305712 0.4557063 #>  [594,] 0.3080777 0.3956464 0.4415222 0.4554516 0.4652289 0.4734049 0.5048796 #>  [595,] 0.4019718 0.7367865 0.7486387 0.7984211 0.8065179 0.8296740 0.8335389 #>  [596,] 0.3458876 0.5025590 0.5422557 0.5644321 0.5681428 0.6667747 0.6730841 #>  [597,] 0.3083919 0.5009687 0.6214845 0.6287011 0.7551961 0.7690297 0.7985806 #>  [598,] 0.3176937 0.3592673 0.4412460 0.5300126 0.5439430 0.5769023 0.6025091 #>  [599,] 0.1821476 0.4623505 0.5653569 0.6789478 0.6922921 0.7219848 0.7308414 #>  [600,] 0.3080751 0.3136977 0.4504919 0.4725017 0.4993532 0.5012870 0.5669852 #>  [601,] 0.3582576 0.4087473 0.4194612 0.4249279 0.4440057 0.4767470 0.4961666 #>  [602,] 0.3486888 0.3844678 0.4569880 0.4613971 0.4621962 0.4693899 0.4812505 #>  [603,] 0.2676504 0.3723138 0.5245181 0.5998886 0.6102405 0.6116010 0.6204448 #>  [604,] 0.1880397 0.4352734 0.4621962 0.4660285 0.4711256 0.4978754 0.5305005 #>  [605,] 0.3678781 0.4005174 0.4088687 0.4412460 0.4848390 0.4860993 0.4929666 #>  [606,] 0.3445994 0.4287305 0.5211516 0.5470574 0.6196470 0.7423847 0.8015919 #>  [607,] 0.3109425 0.3713510 0.3972822 0.5843780 0.6075112 0.6639107 0.7612510 #>  [608,] 0.6211108 0.6765484 0.7801991 0.9374454 0.9723720 1.0410421 1.0413188 #>  [609,] 0.7620922 0.7945027 0.9671000 1.0241726 1.0526528 1.0645023 1.0721897 #>  [610,] 0.3301119 0.4539022 0.4626248 0.4929649 0.5011315 0.5038229 0.5371010 #>  [611,] 0.3892923 0.5719831 0.6193540 0.6307219 0.6754799 0.6939600 0.7055080 #>  [612,] 0.3590217 0.5622607 0.5749747 0.7050365 0.7092287 0.7328549 0.7642209 #>  [613,] 0.4556442 0.5065259 0.6415368 0.7681048 0.7847803 0.7952401 0.7995223 #>  [614,] 0.4841278 0.7330356 0.8625143 0.8627456 0.8871369 0.9040311 1.0021075 #>  [615,] 0.4052950 0.5250248 0.5449661 0.5487680 0.5836566 0.6140291 0.7035311 #>  [616,] 0.3342382 0.3528047 0.4566071 0.4588823 0.5595899 0.5650627 0.5664733 #>  [617,] 0.5910692 0.6109909 0.7725971 0.7880406 0.8080487 0.8162246 0.8352604 #>  [618,] 0.8995747 0.9059494 1.0124701 1.0319325 1.0337591 1.1374333 1.1429259 #>  [619,] 0.2676504 0.4989698 0.5152524 0.5376920 0.5667576 0.5704259 0.5736706 #>  [620,] 0.8284279 0.8684830 0.9933613 0.9954375 1.0958495 1.1693827 1.2511751 #>  [621,] 0.7137572 0.7962522 0.8566013 1.1097381 1.1318377 1.1977082 1.2191116 #>  [622,] 0.3788236 0.4559011 0.5616415 0.5721634 0.5902184 0.6025091 0.6110487 #>  [623,] 0.1923351 0.4792305 0.5322739 0.5676543 0.5992562 0.6682089 0.7108051 #>  [624,] 0.7236067 0.8886585 0.9266796 0.9953299 1.1276024 1.2146687 1.2330272 #>  [625,] 0.2957885 0.4446937 0.5750432 0.5765267 0.5925585 0.6037244 0.6568023 #>  [626,] 0.5509826 0.6290930 0.6537618 0.8620734 0.8626699 0.8700212 0.8840395 #>  [627,] 0.3806210 0.3815088 0.3934241 0.4213650 0.4374722 0.5392035 0.5448039 #>  [628,] 0.4037595 0.4367022 0.4729371 0.5086459 0.5612706 0.7159270 0.7336171 #>  [629,] 0.2094617 0.3032933 0.3819500 0.3945596 0.3978667 0.4026997 0.4286491 #>  [630,] 0.3813579 0.4197812 0.4300301 0.4399549 0.4519320 0.5166567 0.5815696 #>  [631,] 0.8832363 1.3477283 1.3545155 1.4381920 1.4890247 1.5271940 1.5304553 #>  [632,] 0.3537939 0.4304763 0.4875948 0.5019129 0.5135788 0.5934187 0.6370304 #>  [633,] 0.6097647 0.8841422 0.9312233 0.9659309 0.9901034 1.0455495 1.0524537 #>  [634,] 0.2411622 0.4635766 0.4648660 0.4726632 0.5298530 0.5476241 0.6141360 #>  [635,] 0.4445392 0.5229273 0.6558690 0.6608258 0.6714148 0.7340519 0.7681936 #>  [636,] 0.8490657 0.9090991 0.9289076 0.9717083 1.0127865 1.0738554 1.1702953 #>  [637,] 0.3196900 0.3934462 0.3981264 0.4439951 0.4990745 0.5239454 0.5315435 #>  [638,] 0.3856247 0.4641082 0.5074462 0.5270669 0.5824740 0.5874906 0.6256009 #>  [639,] 0.4993532 0.6707272 0.6866497 0.7076178 0.7314473 0.7330356 0.7394303 #>  [640,] 0.2615611 0.3670521 0.5169540 0.5198035 0.5434027 0.7077364 0.7297429 #>  [641,] 0.4279815 0.4513086 0.4595417 0.4634436 0.4923078 0.5025113 0.5047042 #>  [642,] 0.9597329 1.1546740 1.1975968 1.3252038 1.3591368 1.3595380 1.3768743 #>  [643,] 0.4094364 0.4826327 0.4858038 0.5331247 0.5526499 0.5606193 0.5979192 #>  [644,] 0.1502014 0.3948392 0.4024483 0.4363727 0.5110320 0.5298530 0.5515163 #>  [645,] 0.7483794 0.7660779 0.7972184 0.8423217 0.8477208 0.9264165 0.9535310 #>  [646,] 0.3298885 0.6257554 0.6793500 0.7212007 0.7591843 0.7873279 0.7969979 #>  [647,] 0.6265314 0.8995747 0.9675360 1.0166948 1.0424884 1.0450260 1.1418658 #>  [648,] 0.3706053 0.3744725 0.4122767 0.4483847 0.4539152 0.4645888 0.4827478 #>  [649,] 0.4701398 0.5616011 0.5705091 0.6293527 0.6541363 0.6560097 0.7152830 #>  [650,] 0.9559779 0.9902827 1.0017711 1.0408619 1.0470346 1.2111807 1.2288811 #>  [651,] 0.5931816 0.5963667 0.6109270 0.7269927 0.7596997 0.7883433 0.8504473 #>  [652,] 0.3343100 0.5469488 0.6108173 0.6170841 0.6329588 0.6413620 0.6597046 #>  [653,] 0.8118327 1.0229776 1.2321380 1.3246079 1.3556170 1.3676437 1.4039970 #>  [654,] 0.4407825 0.4994282 0.5063334 0.5119253 0.5206700 0.5721931 0.5740050 #>  [655,] 0.3471195 0.6613483 0.7012632 0.7894252 0.7945076 0.8148472 0.8189127 #>  [656,] 0.4028254 0.4151472 0.4276793 0.4414033 0.4663869 0.4732585 0.4777298 #>  [657,] 0.8341872 0.8865120 0.9124553 0.9776484 0.9869563 0.9919096 1.0184556 #>  [658,] 0.5081797 0.5225944 0.5464530 0.5717254 0.6125552 0.6259600 0.6279938 #>  [659,] 0.2656600 0.3891551 0.3932012 0.4618651 0.4633659 0.4802200 0.5200496 #>  [660,] 0.4583481 0.4983567 0.5065117 0.5727852 0.5739238 0.6249346 0.6435275 #>  [661,] 0.7064498 0.7354697 0.7449229 0.8980629 0.9261128 0.9273094 0.9797472 #>  [662,] 0.2599636 0.3310614 0.3920226 0.4318124 0.4627563 0.5120180 0.5462467 #>  [663,] 0.6329682 0.6602455 0.6773683 0.7154039 0.7537751 0.7591667 0.7627073 #>  [664,] 0.2996762 0.3549475 0.4149381 0.6040388 0.6074579 0.6244618 0.6274167 #>  [665,] 0.3527183 0.4374755 0.4699401 0.5557919 0.5650627 0.5727925 0.5955450 #>  [666,] 0.8355623 1.1958227 1.3173416 1.3620397 1.3930836 1.4061571 1.5639044 #>  [667,] 0.2694920 0.4093251 0.4940575 0.5246449 0.5301315 0.5522417 0.5525923 #>  [668,] 0.3176937 0.3298639 0.4615580 0.4781089 0.4860993 0.5040802 0.5085280 #>  [669,] 0.8076283 0.8741396 0.9529027 1.0189253 1.1386040 1.1676503 1.2302778 #>  [670,] 0.4916895 0.8355623 0.9260981 0.9447221 0.9853316 1.0694053 1.1113730 #>  [671,] 0.2950353 0.3113680 0.4127848 0.4388591 0.4701749 0.5131636 0.5181448 #>  [672,] 0.1765483 0.6193803 0.7609701 0.7924176 0.8291398 0.8341872 0.8631459 #>  [673,] 0.1882941 0.6084791 0.6591222 0.8985321 0.9114107 0.9670695 0.9727846 #>  [674,] 0.7103740 0.7996086 1.1310247 1.1396698 1.1415995 1.1594726 1.2106312 #>  [675,] 0.6694261 0.7091689 0.7125685 0.7160217 0.7290825 0.7359664 0.7543159 #>  [676,] 0.2652173 0.3591586 0.3856247 0.4302680 0.4700327 0.5284957 0.5455016 #>  [677,] 0.4056079 0.4650003 0.6410389 0.6644238 0.7346686 0.7799487 0.7987587 #>  [678,] 0.7652407 1.0127818 1.1077200 1.1214226 1.1279028 1.2002891 1.2068199 #>  [679,] 0.3086478 0.3642713 0.3672958 0.5025481 0.6187645 0.7493980 0.7529638 #>  [680,] 0.6108399 0.6574265 0.6846185 0.7434690 0.7667026 0.7743503 0.8051438 #>  [681,] 0.9406192 0.9900879 1.0073145 1.0223147 1.0868001 1.1268332 1.1792269 #>  [682,] 0.5070293 0.5632050 0.6182612 0.6978583 0.7107505 0.7151584 0.7312178 #>  [683,] 0.4334864 0.4357644 0.5221797 0.6035912 0.6405775 0.6628211 0.6794570 #>  [684,] 0.5086459 0.5793263 0.5985444 0.6381214 0.6499291 0.7309148 0.8410188 #>  [685,] 0.2965186 0.3183395 0.3937665 0.4383867 0.4429527 0.4651612 0.4741794 #>  [686,] 0.2436403 0.3843435 0.4940036 0.5953922 0.5978571 0.6161363 0.6846185 #>  [687,] 0.6109270 0.7466674 0.8328029 0.8611830 0.9437925 0.9840271 0.9916199 #>  [688,] 1.1609350 1.1780794 1.2971786 1.2993309 1.3046307 1.3752090 1.4155252 #>  [689,] 0.3227764 0.5130482 0.5373405 0.5434537 0.5549392 0.6665069 0.7139751 #>  [690,] 0.6298396 0.9606412 0.9806925 1.0191859 1.0786642 1.0977456 1.1067650 #>  [691,] 1.1912198 1.2343525 1.3290869 1.3660693 1.3753267 1.5181986 1.6123363 #>  [692,] 0.2697039 0.3892588 0.4135310 0.4528358 0.5037029 0.5203917 0.5268461 #>  [693,] 0.4335794 0.4556055 0.5383580 0.6724047 0.7737363 0.7917263 0.8150843 #>  [694,] 0.3496784 0.4470028 0.5743282 0.7685739 0.8087218 0.8201508 0.9122154 #>  [695,] 0.2202836 0.4180805 0.5138186 0.6213372 0.6242689 0.6470521 0.6813480 #>  [696,] 0.3184559 0.5904378 0.6486461 0.6865330 0.7496748 0.7809224 0.8325244 #>  [697,] 0.3358029 0.3893338 0.4844073 0.5672224 0.6164471 0.6320225 0.6561801 #>  [698,] 0.5025590 0.5278623 0.5865902 0.5981669 0.6182001 0.6365512 0.6947839 #>  [699,] 0.3784456 0.4625917 0.6006478 0.6319259 0.6326365 0.6393936 0.6485100 #>  [700,] 0.4097627 0.5605815 0.5786764 0.6970361 0.6994112 0.7243970 0.7910807 #>  [701,] 0.4532875 0.4625917 0.4769697 0.4860003 0.4913224 0.5144246 0.5899088 #>  [702,] 1.0514347 1.1351614 1.1604199 1.2314421 1.2675142 1.2719898 1.2757552 #>  [703,] 0.6039762 0.8073952 0.8313950 0.8410883 0.8428926 0.8934076 0.8941275 #>  [704,] 0.4874757 0.5073828 0.6075559 0.6104783 0.6204127 0.6582852 0.7073790 #>  [705,] 0.3776611 0.4769180 0.5101209 0.8239215 0.9078180 0.9702416 1.0187160 #>  [706,] 0.2938909 0.4308291 0.4513943 0.4871143 0.5175952 0.5349535 0.5568170 #>  [707,] 0.4360400 0.5857594 0.6447800 0.6451698 0.7482271 0.8122301 0.8444847 #>  [708,] 0.9514395 1.0606779 1.0636714 1.1426683 1.2643485 1.2781764 1.2947481 #>  [709,] 0.6583572 0.6639630 0.7268477 0.9004944 0.9162768 0.9609299 1.0435224 #>  [710,] 0.3390154 0.4174240 0.4615110 0.4615817 0.4617750 0.5644427 0.5650864 #>  [711,] 0.2724458 0.4804254 0.4858038 0.4923078 0.5294087 0.5417924 0.5419647 #>  [712,] 0.1257555 0.5030681 0.5135363 0.5429686 0.5453030 0.5831975 0.5874906 #>  [713,] 0.2316066 0.4242651 0.5503053 0.5668125 0.6527146 0.6826380 0.7104982 #>  [714,] 0.7137572 0.8132454 0.8288236 0.8378235 0.9917530 1.0033330 1.1027254 #>  [715,] 0.3445357 0.5203527 0.5210982 0.5302128 0.5474013 0.5504232 0.5537372 #>  [716,] 0.6289333 0.7239378 0.7605889 0.8364011 0.8404026 0.8441677 0.8458550 #>  [717,] 0.5101209 0.7502501 0.7571150 0.7914278 0.9332052 0.9764120 1.0077118 #>  [718,] 0.5185333 0.5451491 0.5464530 0.6375285 0.7150237 0.7173710 0.7490721 #>  [719,] 0.7471292 0.7926226 0.9163542 0.9244381 0.9594619 0.9813975 0.9902617 #>  [720,] 0.2798545 0.2928507 0.4171835 0.4241446 0.5506097 0.5528294 0.5698328 #>  [721,] 0.5810662 0.6228606 0.6947839 0.6994219 0.8052348 0.8134730 0.8163599 #>  [722,] 0.4924958 0.4981826 0.5540639 0.6878055 0.6996609 0.7174303 0.7634109 #>  [723,] 0.2298626 0.4681615 0.4883660 0.5622740 0.6198420 0.6236002 0.6291796 #>  [724,] 0.2985586 1.2498559 1.3073808 1.3259615 1.4278049 1.4933361 1.5392211 #>  [725,] 0.7177136 0.7769373 0.8442932 0.9119135 0.9680577 0.9692823 1.0137121 #>  [726,] 1.6054625 2.0848020 2.2737335 2.3440355 2.4777165 2.4800381 2.5488145 #>  [727,] 0.6776881 0.7018391 0.7596997 0.8934793 0.8953289 0.9017456 0.9556454 #>  [728,] 0.5503053 0.5529916 0.5644517 0.5815853 0.6495746 0.6587434 0.6663706 #>  [729,] 0.4863853 0.5017704 0.5706278 0.6356550 0.6714550 0.7973914 0.8065675 #>  [730,] 0.6298396 0.8941275 1.0586703 1.1020911 1.1238132 1.1308614 1.1605411 #>  [731,] 0.2230059 0.4460617 0.5229273 0.5374811 0.6970361 0.7349776 0.7393258 #>  [732,] 0.9529027 1.0492829 1.0509800 1.2951662 1.3222785 1.3498134 1.4098043 #>  [733,] 0.9483649 0.9880734 1.0074580 1.0216102 1.1741660 1.2103866 1.2133149 #>  [734,] 0.6690111 0.7064498 0.7085971 0.8331035 0.8896609 0.9334063 0.9730671 #>  [735,] 0.6221261 0.8075866 0.9425628 1.0028363 1.0798067 1.1136847 1.1192310 #>  [736,] 0.4332651 0.5409303 0.6307219 0.6624071 0.7050365 0.7191833 0.7874377 #>  [737,] 0.4387941 0.6204127 0.6707253 0.6965939 0.6972482 0.7017439 0.7697675 #>  [738,] 0.5950760 0.7354020 0.7369217 0.7641021 0.8088560 0.8308253 0.8328029 #>  [739,] 0.4441841 0.4739766 0.6529928 0.6619944 0.7024932 0.7527359 0.7571572 #>  [740,] 0.3433086 0.4559011 0.4768436 0.6148437 0.6968936 0.7092597 0.7328150 #>  [741,] 0.3158317 0.3165580 0.3969505 0.4063249 0.4579166 0.4631483 0.4714148 #>  [742,] 0.5550847 0.5627145 0.6103244 0.6326847 0.6514708 0.7510046 0.7562212 #>  [743,] 0.3056034 0.3103047 0.3165580 0.3768641 0.4135715 0.4179349 0.4652016 #>  [744,] 0.1418194 0.5225944 0.6063061 0.6682361 0.7811779 0.7920934 0.7948385 #>  [745,] 0.3113118 0.4595513 0.4636687 0.5151912 0.5487680 0.6796532 0.7036961 #>  [746,] 1.2094194 1.2693452 1.2838527 1.2862101 1.5435401 1.6377179 1.6807627 #>  [747,] 0.1921174 0.4963909 0.4970822 0.5206700 0.5575169 0.5603175 0.5684175 #>  [748,] 0.2709125 0.2989971 0.3178739 0.3892588 0.3984968 0.5257014 0.6096382 #>  [749,] 0.3710504 0.4176578 0.4423984 0.4646938 0.4921990 0.5166952 0.5442631 #>  [750,] 0.3913705 0.3968053 0.4414737 0.5097455 0.5351798 0.5617529 0.5676278 #>  [751,] 0.3342382 0.3864791 0.4802595 0.4861910 0.5138721 0.5257014 0.5507399 #>  [752,] 0.3788236 0.5478272 0.5989136 0.6381861 0.7703288 0.8092654 0.8158994 #>  [753,] 0.5702987 0.5980038 0.6198420 0.6559528 0.6597138 0.7089059 0.7139787 #>  [754,] 0.3107541 0.3136977 0.4305712 0.4617750 0.4785309 0.4931461 0.5282038 #>  [755,] 0.6690871 0.6860968 0.7725749 0.8556933 0.8632565 0.9030162 0.9208716 #>  [756,] 0.4915624 0.5409284 0.5495761 0.5752191 0.6137225 0.7168790 0.7279401 #>  [757,] 0.2709125 0.3940243 0.3953197 0.3979419 0.4528358 0.4592319 0.5072869 #>  [758,] 0.3246618 0.4099349 0.5264586 0.5480419 0.5910737 0.6117036 0.6689205 #>  [759,] 0.5578534 0.5838292 0.6651903 0.7801991 0.8151923 0.8256253 0.8408133 #>  [760,] 0.4936120 0.7140313 0.8417973 0.8946692 0.9161463 0.9171797 0.9212723 #>  [761,] 0.4423240 0.4711256 0.5230184 0.5773746 0.5822046 0.5966500 0.6572810 #>  [762,] 0.1907358 0.4005174 0.4075196 0.4639866 0.4674898 0.5261269 0.5539596 #>  [763,] 0.9182541 1.0350864 1.1025945 1.1219863 1.1424055 1.1723399 1.1851861 #>  [764,] 0.4357644 0.5396707 0.7081140 0.7458473 0.7559599 0.7662393 0.7817104 #>  [765,] 0.2985586 1.2673941 1.3162858 1.3490841 1.3812083 1.4572480 1.4857447 #>  [766,] 0.4815630 0.5688090 0.6190446 0.7048870 0.7183197 0.7194659 0.7259945 #>  [767,] 0.7216168 0.7344810 0.7559130 0.8101955 0.8404026 0.8766603 0.8847948 #>  [768,] 0.5425146 0.5511466 0.6194563 0.6747291 0.6897736 0.7081918 0.7287542 #>  [769,] 0.5627565 0.6415368 0.6619937 0.7960983 0.8765106 0.8888571 0.8970740 #>  [770,] 0.4305420 0.4811124 0.4841278 0.6360874 0.6567670 0.7184861 0.7732483 #>  [771,] 1.0676613 1.4296416 1.4939067 1.5614253 1.5694705 1.7011895 1.7708172 #>  [772,] 0.7779108 0.8614404 1.0133924 1.0792046 1.1991442 1.2035680 1.2053993 #>  [773,] 0.3852675 0.4621747 0.4727399 0.5144246 0.5488358 0.6393936 0.6696794 #>  [774,] 0.3158758 0.3585868 0.3706053 0.4252485 0.4941148 0.5403542 0.5470744 #>  [775,] 0.8118327 0.8399439 0.8473664 0.8689506 0.9741627 0.9763009 0.9807302 #>  [776,] 0.3974524 0.4094364 0.4199832 0.5053076 0.5211516 0.6099352 0.6329682 #>  [777,] 0.3445357 0.3591586 0.4127848 0.4592028 0.4989853 0.5092464 0.5094085 #>  [778,] 0.3027772 0.4167413 0.4696109 0.5002217 0.5063334 0.5373169 0.6704545 #>  [779,] 0.5278035 0.6956782 0.8427137 0.9090991 0.9683068 0.9759108 0.9917875 #>  [780,] 0.3918320 0.4896400 0.5011922 0.6041616 0.6591222 0.7215146 0.7815183 #>  [781,] 0.5405132 0.6916804 0.6989697 0.8490090 0.8606617 0.8767628 0.9370817 #>  [782,] 0.2646638 0.3213510 0.3692134 0.4093251 0.4185317 0.5074590 0.5181448 #>  [783,] 0.4224714 0.6104783 0.6137225 0.6729815 0.7095745 0.7150264 0.7208141 #>  [784,] 0.4066972 0.6110123 0.6401066 0.6787280 0.6894002 0.7225953 0.7293708 #>  [785,] 0.2995764 0.4729371 0.5985444 0.6034767 0.6364684 0.6724590 0.6766374 #>  [786,] 0.3859147 0.5912506 0.5923463 0.6539348 0.7856543 0.8075600 0.8499710 #>  [787,] 0.4695051 0.8063933 0.8487997 0.9466795 1.0495105 1.0972245 1.0995921 #>  [788,] 0.5394996 0.7051774 0.8265935 0.8760955 0.8869731 0.9950556 1.0018150 #>  [789,] 0.5625080 0.8329584 0.8397169 0.8863304 0.8892563 0.8977614 0.9131567 #>  [790,] 0.3525252 0.4368219 0.4714148 0.5242562 0.5316131 0.5881955 0.5894456 #>  [791,] 0.2915407 0.4650941 0.5777199 0.6138800 0.6294308 0.6847840 0.7266085 #>  [792,] 0.4738325 0.4776311 0.4811124 0.6236002 0.6570703 0.7039359 0.7526110 #>  [793,] 0.4893257 0.5173880 0.6514329 0.7328150 0.7466487 0.7937440 0.7984116 #>  [794,] 0.4894648 0.4934404 0.5353879 0.6123625 0.6483658 0.6927912 0.7029612 #>  [795,] 0.3642874 0.6968107 0.7434605 0.8517166 0.9269132 0.9289136 1.0205662 #>  [796,] 0.3459307 0.5028377 0.5434625 0.5760647 0.5851950 0.5938233 0.6451698 #>  [797,] 0.3974026 0.4114479 0.4151472 0.4304381 0.4426711 0.4582774 0.4631483 #>  [798,] 0.2599636 0.4381897 0.4646938 0.4704474 0.4764335 0.4929968 0.5003201 #>  [799,] 0.1603362 0.3056966 0.3669123 0.4612447 0.4929649 0.5254921 0.5291550 #>  [800,] 0.6608258 1.0429812 1.0439467 1.1099186 1.1286047 1.2167245 1.2207269 #>  [801,] 0.3113292 0.6743795 0.6919364 0.8051438 0.8565539 0.8595808 0.8784011 #>  [802,] 0.3474395 0.5598617 0.6589509 0.7612510 0.8362417 0.9492731 0.9708233 #>  [803,] 0.4604155 0.4981237 0.5171006 0.5691912 0.5693549 0.6212383 0.6379603 #>  [804,] 0.4978547 0.5048296 0.6039762 0.6525114 0.6809391 0.8173460 0.8338392 #>  [805,] 0.2546616 0.4024938 0.4828984 0.4937261 0.5813304 0.6000009 0.6202705 #>  [806,] 0.4080902 0.5169540 0.5808212 0.5931816 0.6385622 0.6709518 0.6768179 #>  [807,] 0.3056034 0.3326814 0.4537911 0.4565760 0.4579166 0.4781016 0.4824973 #>  [808,] 0.2136091 0.4037885 0.4213650 0.4309298 0.4422711 0.4428247 0.5413453 #>  [809,] 0.3995663 0.4340247 0.4436905 0.5134259 0.5156347 0.5339298 0.5704259 #>  [810,] 0.3092599 0.3657331 0.3725628 0.4208733 0.4720911 0.4850523 0.5555859 #>  [811,] 0.3784456 0.3852675 0.4127776 0.4532875 0.6210650 0.6525644 0.6680109 #>  [812,] 0.3433086 0.4590312 0.4968742 0.5173880 0.5616415 0.6270975 0.6659995 #>  [813,] 0.2798545 0.3874939 0.4496889 0.4604155 0.5485144 0.5682557 0.5700471 #>  [814,] 0.3082097 0.3310614 0.3782222 0.4266016 0.4693899 0.4929968 0.5043400 #>  [815,] 0.3461297 0.3816936 0.3835569 0.4024244 0.4161253 0.4371760 0.4834878 #>  [816,] 0.5150732 0.5921002 0.6800489 0.9387221 1.0449819 1.1255987 1.2031884 #>  [817,] 0.4097627 0.5394996 0.6033279 0.6107870 0.7756786 0.8485907 0.8577339 #>  [818,] 0.3514631 0.5049022 0.6213372 0.6854924 0.6952081 0.7058257 0.7449229 #>  [819,] 0.4858187 0.7164687 0.7591843 0.8094750 0.8311792 0.8322227 0.8456569 #>  [820,] 0.5556390 0.6794556 0.7165986 0.7671241 0.7781291 0.7898797 0.8203556 #>  [821,] 0.3112028 0.3530090 0.3912126 0.3977697 0.4197831 0.4252485 0.4859729 #>  [822,] 1.1811835 1.4155497 1.6946680 1.7408778 1.7963002 1.9419126 2.0003276 #>  [823,] 0.4785309 0.5035822 0.5504232 0.5581019 0.5920239 0.6022480 0.6114413 #>  [824,] 1.4441306 1.9944252 2.0704969 2.2442786 2.2650094 2.3348776 2.3617711 #>  [825,] 0.6218947 0.6512875 0.6732712 0.7395676 0.7976003 0.8076283 0.8764037 #>  [826,] 0.3036663 0.6271310 0.7331899 0.8259215 0.9237299 0.9609905 0.9817945 #>  [827,] 0.9193467 1.0772629 1.1219863 1.2334469 1.2451451 1.2538902 1.3005034 #>  [828,] 0.2696111 0.2853528 0.3585868 0.3744725 0.4054881 0.4197831 0.5242217 #>  [829,] 0.3848214 0.4585248 0.5589624 0.5616011 0.5769023 0.6223452 0.6257554 #>  [830,] 0.1793892 0.4991711 0.5590794 0.5758475 0.6482590 0.6809989 0.6897370 #>  [831,] 0.6211108 0.7208141 0.7467857 0.7814715 0.8912662 0.8966985 0.9665416 #>  [832,] 0.5439116 0.6994219 0.9761487 0.9915919 1.0092772 1.0094416 1.0673060 #>  [833,] 0.3097309 0.7838109 0.8271271 0.8466075 0.8590657 0.8687430 1.0163926 #>  [834,] 0.1657857 0.3075964 0.3930878 0.4054881 0.4513086 0.4665484 0.4736562 #>  [835,] 0.6569257 0.7234910 0.8336439 0.8673209 0.9341469 0.9458068 0.9533946 #>  [836,] 0.2218200 0.2753051 0.3113118 0.5836566 0.6286956 0.6558379 0.6649380 #>  [837,] 0.4074138 0.5250252 0.5611636 0.6104833 0.6594435 0.7098716 0.7220400 #>  [838,] 0.3802711 0.5821115 0.6293527 0.6348820 0.6427768 0.6612903 0.7769373 #>  [839,] 0.4277456 0.4302680 0.4351358 0.5361542 0.5427427 0.5441774 0.5844532 #>  [840,] 0.3067851 0.3080777 0.3261829 0.3710223 0.3945596 0.4150834 0.4236751 #>  [841,] 0.4518358 0.5580674 0.6486461 0.6640788 0.7124826 0.7184861 0.7256895 #>  [842,] 0.3160586 0.4083693 0.4399549 0.4689018 0.4820274 0.5174262 0.5196555 #>  [843,] 1.5311992 1.5536753 1.5614253 1.6258930 1.7115210 1.7434298 1.7461672 #>  [844,] 0.2972695 0.5968755 0.6194563 0.6488359 0.6492446 0.6546223 0.7091232 #>  [845,] 0.1795017 0.3869610 0.4826465 0.4837839 0.4985066 0.5214377 0.5393927 #>  [846,] 0.2536980 0.5370576 0.5865902 0.5910692 0.6302841 0.6917589 0.7002640 #>  [847,] 0.3107841 0.4453761 0.4519320 0.5431865 0.6136417 0.6244927 0.6254025 #>  [848,] 0.1719823 0.1765733 0.4436905 0.4489713 0.6157921 0.6186984 0.6720264 #>  [849,] 0.8311973 0.8747926 0.9717083 1.0013779 1.0122960 1.0163732 1.2066618 #>  [850,] 0.2994409 0.4768582 0.4894021 0.6089304 0.6684409 0.7042698 0.8011727 #>  [851,] 0.3365770 0.3985065 0.4241446 0.5156347 0.5156644 0.5252485 0.5470744 #>  [852,] 1.4296416 1.5983391 1.9137894 2.0242065 2.0456072 2.0512273 2.0535124 #>  [853,] 0.4680880 0.6266138 0.6834861 0.7391465 0.7472718 0.8071015 0.8707201 #>  [854,] 0.3394250 0.3848525 0.4798373 0.5234596 0.5509819 0.6162140 0.6383378 #>  [855,] 0.7566811 0.8401697 0.8518542 0.9411251 0.9457062 0.9563972 1.1295818 #>  [856,] 0.2940478 0.3407325 0.3787681 0.4414737 0.4578845 0.5302900 0.5434625 #>  [857,] 0.4942273 0.5455117 0.6028087 0.6346238 0.6826033 0.7024932 0.7393022 #>  [858,] 0.6158580 1.1232248 1.2848476 1.3117549 1.3278298 1.3405774 1.3982930 #>  [859,] 0.4188517 0.4549399 0.4613472 0.5384865 0.6145878 0.6387264 0.6612431 #>  [860,] 0.4792305 0.5141196 0.5410854 0.5430704 0.5812571 0.5814689 0.5905954 #>  [861,] 0.2289517 0.3032933 0.3035479 0.3261829 0.4566556 0.4652289 0.4926226 #>  [862,] 1.3375979 1.5159084 1.7651675 1.7951556 1.8873251 1.9282501 1.9311304 #>  [863,] 0.3479301 0.4158467 0.4475573 0.5239454 0.5443972 0.5572317 0.5943596 #>  [864,] 0.3445994 0.4473554 0.5081086 0.5733389 0.6099352 0.6214573 0.6883512 #>  [865,] 0.2503394 0.4768582 0.6427768 0.7949227 0.8427137 0.8543760 0.8600206 #>  [866,] 0.5509826 0.6028087 0.6743603 0.7374324 0.7572010 0.8214049 0.8687430 #>  [867,] 0.4870908 0.4919594 0.4989698 0.5581019 0.5980778 0.5998886 0.6074706 #>  [868,] 0.4299956 0.6966550 0.7385971 0.7570375 0.8153590 0.8393366 0.8576094 #>  [869,] 0.2995764 0.3944994 0.4367022 0.5075357 0.5297576 0.6499291 0.6631117 #>  [870,] 0.3293306 0.3850889 0.4398420 0.4766956 0.5261269 0.5305005 0.6059146 #>  [871,] 0.4366422 0.4963909 0.5602409 0.5644773 0.5944104 0.6285445 0.6535593 #>  [872,] 0.2618401 0.5512129 0.5897778 0.6207546 0.6642021 0.6813480 0.6973555 #>  [873,] 0.3980096 0.4059614 0.4300678 0.5654316 0.5859741 0.5926003 0.6126095 #>  [874,] 0.4401777 0.5409303 0.6310690 0.6985039 0.7151776 0.7328549 0.7661509 #>  [875,] 0.3694694 0.3722417 0.3940243 0.3984968 0.4334864 0.5203917 0.5396707 #>  [876,] 0.6602341 0.7779108 0.8882337 0.9693348 1.0649957 1.0676211 1.1084016 #>  [877,] 0.5141196 0.5261482 0.5798880 0.6404703 0.6940858 0.7309148 0.7914278 #>  [878,] 0.6389136 0.9553313 1.0718025 1.1883763 1.2044469 1.2161923 1.2191719 #>  [879,] 0.6111134 0.6330021 0.7264062 0.7466766 0.7661509 0.7662488 0.7706794 #>  [880,] 0.3417088 0.4197812 0.4328642 0.4689018 0.5634057 0.6811357 0.6952935 #>  [881,] 0.2312386 0.2828653 0.3092599 0.3927840 0.4562478 0.4812868 0.4826099 #>  [882,] 0.2474450 0.3570338 0.3927840 0.4410145 0.4429527 0.4597591 0.4845243 #>  [883,] 0.1765733 0.2005349 0.4340247 0.4779987 0.5640750 0.5933102 0.5941373 #>  [884,] 0.9609905 0.9755831 1.0158348 1.0248596 1.0306228 1.0421030 1.0602373 #>  [885,] 0.4803380 0.4876600 0.5015561 0.5353879 0.5473466 0.5765421 0.6334912 #>  [886,] 0.2411622 0.3859884 0.4363727 0.4586935 0.5530247 0.5812676 0.6110123 #>  [887,] 0.7483794 0.7858414 0.7975968 0.8328092 0.8531193 0.9108383 0.9761211 #>  [888,] 0.5192799 0.5370576 0.5517135 0.5649657 0.5899088 0.6580907 0.6966668 #>  [889,] 0.1603362 0.2547535 0.3437702 0.5100298 0.5368799 0.5371010 0.5595756 #>  [890,] 0.4959007 0.6041729 0.6174626 0.6970957 0.7220400 0.7628530 0.9100871 #>  [891,] 0.2337535 0.3299522 0.4470890 0.5008382 0.5391656 0.5486938 0.5852984 #>  [892,] 0.2853528 0.3298639 0.3561649 0.3592673 0.4272458 0.4645888 0.4665484 #>  [893,] 0.4506818 0.4981237 0.5566957 0.5673679 0.6193540 0.6484340 0.6538127 #>  [894,] 0.1882941 0.6041616 0.6263253 0.8026338 0.8081701 0.9258872 0.9768949 #>  [895,] 0.2536980 0.4769697 0.5194278 0.5278623 0.5649657 0.5688071 0.5813304 #>  [896,] 0.6724590 0.7350833 0.8214040 0.8284443 0.9983396 1.0588523 1.0601857 #>  [897,] 0.3082097 0.4318124 0.4660285 0.4704474 0.4798373 0.5007229 0.5073744 #>  [898,] 0.5959716 0.6063061 0.6644238 0.6669696 0.6904804 0.7117599 0.7358067 #>  [899,] 0.6225775 0.6580907 0.7458233 0.7656519 0.8636642 0.9055562 0.9134872 #>  [900,] 0.2343413 0.4215890 0.5151912 0.5955406 0.7681511 0.8515844 0.8669462 #>  [901,] 0.3285568 0.4099349 0.4197421 0.4618651 0.5232328 0.5740169 0.6015343 #>  [902,] 0.3784988 0.4220740 0.4358854 0.4508229 0.4588823 0.5052489 0.5454542 #>  [903,] 2.0556048 2.1108382 2.1577122 2.1925334 2.2083299 2.2801831 2.5363151 #>  [904,] 0.4114465 0.6254268 0.8252143 1.0101165 1.0390967 1.1097381 1.1741516 #>  [905,] 0.3737895 0.3951226 0.4112151 0.4597591 0.4654187 0.5176881 0.5691951 #>  [906,] 0.4542098 0.5278493 0.6860703 0.7970234 0.8091093 0.8225765 0.8265693 #>  [907,] 0.4938878 0.6573238 0.6673814 0.7260920 0.7379023 0.7393258 0.7920760 #>  [908,] 0.2994951 0.3686147 0.4396160 0.4625997 0.4921990 0.5790150 0.5847977 #>  [909,] 0.1502014 0.3688427 0.3859884 0.4635766 0.5136618 0.5138721 0.5232558 #>  [910,] 0.2615611 0.4080902 0.4463284 0.5950760 0.6132402 0.6481007 0.6598114 #>  [911,] 0.4851220 0.5057987 0.5622607 0.5920986 0.6190446 0.7151776 0.7512546 #>  [912,] 0.7962522 1.1027254 1.3672287 1.3807148 1.4204162 1.4331734 1.6037038 #>  [913,] 0.5067543 0.5221909 0.5752158 0.6147478 0.6218947 0.6348818 0.6790847 #>  [914,] 0.3227764 0.3627995 0.4433784 0.4683933 0.4759184 0.5595899 0.5716828 #>  [915,] 0.4388591 0.4663869 0.4992582 0.5415097 0.5598902 0.5853602 0.5982363 #>  [916,] 0.4621747 0.5439116 0.5810662 0.6525644 0.7261151 0.7618664 0.7742697 #>  [917,] 0.5270508 0.6896589 0.6949101 0.6962610 0.7263227 0.7282629 0.7321677 #>  [918,] 0.1880397 0.3118351 0.3850889 0.4812505 0.4999104 0.5074146 0.5335917 #>  [919,] 0.1963591 0.4696109 0.4981826 0.5449325 0.5960984 0.6329302 0.6556979 #>  [920,] 0.3811083 0.4901664 0.5100151 0.5351490 0.5490831 0.5580313 0.5640750 #>  [921,] 0.3875109 0.5019206 0.5601844 0.5697414 0.5737582 0.6291796 0.6404703 #>  [922,] 0.2136091 0.3576403 0.3815088 0.4719349 0.4834617 0.5229099 0.5483363 #>  [923,] 0.6154598 0.6424847 0.6907413 0.8670046 0.8818672 0.8885824 0.8975248 #>  [924,] 0.5671601 0.8629524 1.0250429 1.0556881 1.2399047 1.2926398 1.5970988 #>  [925,] 0.6154598 0.7423847 0.8346140 1.0411140 1.0660808 1.0823524 1.1049130 #>  [926,] 0.3386233 0.4579561 0.6172867 0.6309674 0.6380812 0.6801436 0.6812344 #>  [927,] 0.4360400 0.5995342 0.8487750 0.8763325 0.9250326 0.9493566 0.9853316 #>  [928,] 0.6293818 0.7704966 0.8845181 0.9375603 0.9499213 0.9609299 1.0233418 #>  [929,] 0.4870615 0.5015118 0.5460978 0.6271310 0.6976519 0.7055782 0.8089936 #>  [930,] 0.5042632 0.6896709 0.7113964 0.7290197 0.7380223 0.7713337 0.7809407 #>  [931,] 0.3329671 0.5655398 0.7402701 0.8392612 0.8733825 0.8951593 0.9067863 #>  [932,] 0.8008904 0.8786278 0.8980172 0.9943680 1.0081010 1.0912510 1.3251528 #>  [933,] 0.6306143 0.6469669 0.7280660 0.7928859 0.8346431 0.8725721 0.8731730 #>  [934,] 0.2743603 0.3937665 0.4599237 0.5155835 0.5191472 0.5414595 0.5740675 #>  [935,] 0.1921174 0.4510282 0.4783833 0.5052489 0.5644773 0.6008386 0.6455745 #>  [936,] 0.5700973 0.6075683 0.6546223 0.6574239 0.6743603 0.6826033 0.6853944 #>  [937,] 0.3119060 0.3528047 0.3627995 0.3915093 0.4358854 0.4609358 0.4802595 #>  [938,] 0.4185317 0.4220740 0.4422055 0.4509399 0.4915624 0.5072311 0.5301315 #>  [939,] 0.6726428 0.7354445 0.7427972 0.7515865 0.7576142 0.7620362 0.7784925 #>  [940,] 0.4172339 0.6413421 0.6954323 0.7064193 0.7385654 0.8145048 0.8370775 #>  [941,] 0.2743603 0.5324977 0.5416235 0.5705223 0.5984565 0.6170349 0.6286326 #>  [942,] 0.3027772 0.4896400 0.4992742 0.5449325 0.5624760 0.6325971 0.6948436 #>  [943,] 0.4111658 0.5943301 0.6385163 0.6979967 0.8446133 0.8896609 0.9001202 #>  [944,] 0.4556055 0.4896084 0.5217608 0.5254022 0.5556390 0.5913540 0.6264371 #>  [945,] 0.4227960 0.4896124 0.5120180 0.5913042 0.6111190 0.6146042 0.6258101 #>  [946,] 0.6296239 0.6892862 0.8390236 0.8875493 0.9461592 1.0529038 1.1175567 #>  [947,] 0.3458876 0.4801832 0.5002871 0.5415791 0.6182001 0.6493688 0.6571560 #>  [948,] 0.5578534 0.7378963 0.8169656 0.8296489 0.8388325 0.8670486 0.8909451 #>  [949,] 0.3590217 0.5057987 0.5953573 0.6310690 0.7259945 0.7391465 0.8038318 #>  [950,] 0.5544410 0.7224488 0.8083694 0.8105955 0.8534005 0.8792767 0.8823584 #>  [951,] 0.6389136 0.7099335 0.7347236 0.8351929 0.8554912 0.8708675 0.8733825 #>  [952,] 0.4955922 0.6729536 0.7140313 0.7482271 0.7661296 0.8388325 0.8487750 #>  [953,] 0.4158467 0.4642895 0.4868032 0.5434911 0.5755035 0.5863843 0.5917659 #>  [954,] 0.1457126 0.5038661 0.5415791 0.5644321 0.6778771 0.7278628 0.8170445 #>  [955,] 0.3342053 0.3352511 0.4344955 0.4351358 0.4720053 0.5108792 0.5189029 #>  [956,] 0.9457062 0.9849265 1.0223147 1.0483017 1.0934914 1.0951222 1.1603080 #>  [957,] 0.3633023 0.4441841 0.4480393 0.5013117 0.5053819 0.5627093 0.6093778 #>  [958,] 0.6569257 0.8302082 0.8922407 0.8980629 0.9490880 0.9769237 1.0046860 #>  [959,] 0.3097309 0.7675038 0.9328969 0.9411251 1.0235728 1.0326252 1.0389430 #>  [960,] 0.4588987 0.4657427 0.6035151 0.6461901 0.6718601 0.6904380 0.7021603 #>  [961,] 0.7051774 0.7756786 0.9457200 1.0963949 1.1187557 1.1253954 1.1275522 #>  [962,] 0.2479778 0.2499468 0.4179349 0.4187607 0.4781016 0.5302001 0.5350829 #>  [963,] 0.5012870 0.5258843 0.5312717 0.5410854 0.5644517 0.5668125 0.5941373 #>  [964,] 0.7557878 0.8613864 0.9285815 0.9622023 1.0018294 1.0047035 1.0277976 #>  [965,] 0.3341905 0.3604918 0.3978667 0.4150834 0.4213421 0.4661846 0.4741237 #>  [966,] 0.3085853 0.4051373 0.4468204 0.4954094 0.5105782 0.5119253 0.5684175 #>  [967,] 0.3886122 0.5793263 0.5798880 0.7502501 0.7891617 0.8239215 0.9211892 #>  [968,] 0.1628608 0.7996086 0.9813975 1.0457239 1.0600730 1.0738716 1.1739681 #>  [969,] 0.8815454 0.9994666 1.0613208 1.1361912 1.1385667 1.1426683 1.2533244 #>  [970,] 0.2316066 0.4347131 0.5258843 0.5430704 0.5797168 0.6455426 0.6567670 #>  [971,] 0.6492446 0.6574239 0.6747291 0.8214049 0.8362544 0.8401697 0.8707394 #>  [972,] 0.1412353 0.3272235 0.3900844 0.4023933 0.4148677 0.4451457 0.4488936 #>  [973,] 0.8747926 1.0726503 1.1068952 1.1648686 1.2204814 1.2386833 1.2633442 #>  [974,] 0.8193688 0.8456541 0.8527007 0.8686242 0.9171797 0.9520110 0.9659309 #>  [975,] 0.2780944 0.3015907 0.3376254 0.3811083 0.3974026 0.4028254 0.4308291 #>  [976,] 0.3893338 0.4505269 0.4605785 0.6256895 0.6536408 0.7331622 0.7586668 #>  [977,] 0.6911686 0.7268477 0.8231290 0.8424534 0.9000961 0.9033437 0.9233767 #>  [978,] 0.3496784 0.4432166 0.5334193 0.5989136 0.7096008 0.7235467 0.7262585 #>  [979,] 0.2847934 0.3882206 0.4453761 0.4810555 0.5301634 0.5475485 0.5485547 #>  [980,] 0.3859954 0.4699200 0.4811191 0.4980564 0.5245181 0.5667576 0.5963322 #>  [981,] 0.7278976 0.7327970 0.7627281 0.7788747 0.7951149 0.8195750 0.8378108 #>  [982,] 0.3884973 0.5418577 0.5821115 0.7216168 0.7290825 0.7671997 0.7678536 #>  [983,] 0.3086478 0.4160685 0.4996085 0.5072499 0.5879309 0.7115002 0.7117846 #>  [984,] 0.6303962 0.6589045 0.8001376 0.8145048 0.8338672 0.9112486 0.9150192 #>  [985,] 0.5460581 0.6507848 0.8080487 0.8499740 0.8614721 0.8856987 0.8991177 #>  [986,] 0.3589144 0.5418090 0.5852687 0.5985745 0.7017688 0.7516601 0.7699749 #>  [987,] 0.1657857 0.2696111 0.3561649 0.3862536 0.4120583 0.4539152 0.4941148 #>  [988,] 0.5119789 0.5209139 0.5622382 0.5642782 0.5787497 0.5996913 0.6040388 #>  [989,] 0.1983044 0.5926421 0.6151594 0.6539348 0.6827474 0.8271119 0.8582468 #>  [990,] 0.3474395 0.5745431 0.6616265 0.7282968 0.8629524 1.0278892 1.1192310 #>  [991,] 0.4299956 0.4577316 0.5259341 0.5962516 0.6553439 0.7172299 0.7221793 #>  [992,] 0.6325971 0.6704545 0.6972553 0.7056987 0.7278976 0.7571621 0.7676339 #>  [993,] 0.4489389 0.4528535 0.5843780 0.6116490 0.6194128 0.7036732 0.8328092 #>  [994,] 1.2167245 1.4022221 1.4315399 1.4493745 1.4979496 1.5439557 1.6053293 #>  [995,] 0.2972695 0.5141040 0.6075683 0.6081224 0.6466797 0.6477152 0.6839222 #>  [996,] 0.3875109 0.4253779 0.5457228 0.5545367 0.5935204 0.6400436 0.6516956 #>  [997,] 0.2770382 0.5320051 0.7591667 1.0625637 1.1118740 1.1502454 1.1741015 #>  [998,] 0.3747992 0.3757904 0.5399607 0.5601844 0.6182612 0.6194519 0.6348818 #>  [999,] 0.6915614 0.7037830 0.7320299 0.8083417 0.8444847 0.8632591 0.9026419 #> [1000,] 0.6776881 0.9553533 1.0390967 1.1113306 1.1381286 1.1394759 1.2094194 #>              [,8]      [,9]     [,10] #>    [1,] 1.0948143 1.1253654 1.1294703 #>    [2,] 0.5525923 0.5752191 0.5948832 #>    [3,] 1.0433555 1.0634161 1.0639414 #>    [4,] 0.6020509 0.6321894 0.6900302 #>    [5,] 0.5374756 0.5838935 0.6076137 #>    [6,] 1.9607194 1.9707421 1.9894195 #>    [7,] 0.9771859 1.0105006 1.0358824 #>    [8,] 0.7905344 0.7948463 0.8065179 #>    [9,] 0.7325301 0.7529760 0.7644297 #>   [10,] 1.8648328 1.8954785 1.9155196 #>   [11,] 0.7809546 0.8205875 0.8244164 #>   [12,] 0.5654316 0.5838902 0.5863865 #>   [13,] 1.9906122 2.0133325 2.0347324 #>   [14,] 0.5282038 0.5294087 0.5580313 #>   [15,] 0.6695476 0.6720961 0.7860751 #>   [16,] 0.6848587 0.6942770 0.6993759 #>   [17,] 1.2454930 1.2909212 1.3323128 #>   [18,] 0.7167810 0.7366055 0.7377562 #>   [19,] 0.6401902 0.6607465 0.6644822 #>   [20,] 0.5855031 0.5910505 0.6080686 #>   [21,] 0.5373405 0.5618657 0.5968875 #>   [22,] 1.0337314 1.1039228 1.1077311 #>   [23,] 0.4721043 0.4789884 0.4811924 #>   [24,] 0.7415321 0.7484844 0.7656143 #>   [25,] 0.8201046 0.8592889 0.8610294 #>   [26,] 0.8449646 0.8456569 0.8807989 #>   [27,] 1.1437594 1.1803415 1.2018161 #>   [28,] 0.7660779 0.7776805 0.8061198 #>   [29,] 0.9298050 0.9307238 0.9379767 #>   [30,] 0.7981114 0.8339729 0.8374160 #>   [31,] 0.9943953 1.0235233 1.0283907 #>   [32,] 0.7459984 0.7858414 0.7963569 #>   [33,] 0.8277493 0.8512057 0.8969156 #>   [34,] 0.9271726 0.9673539 0.9850058 #>   [35,] 0.6410389 0.6600794 0.6959216 #>   [36,] 1.6054625 1.6865838 1.6911640 #>   [37,] 0.5849180 0.6452064 0.6531977 #>   [38,] 0.5227291 0.5905755 0.6106738 #>   [39,] 1.5553362 1.6244928 1.6247010 #>   [40,] 0.5028352 0.5363079 0.5814556 #>   [41,] 0.9051968 0.9132779 0.9296012 #>   [42,] 0.6478459 0.6729798 0.6803337 #>   [43,] 0.4674898 0.4766956 0.4847473 #>   [44,] 0.7856933 0.8096945 0.8112277 #>   [45,] 0.8419828 0.8642496 0.9374454 #>   [46,] 0.7466119 0.7722180 0.7869417 #>   [47,] 1.6690312 1.6896383 1.6958277 #>   [48,] 0.4829012 0.5538597 0.5852644 #>   [49,] 0.5462467 0.5481299 0.5585343 #>   [50,] 0.8244164 0.8805266 0.9358046 #>   [51,] 0.6613715 0.6811357 0.7124117 #>   [52,] 0.7191833 0.7194659 0.7649574 #>   [53,] 1.2564305 1.3031879 1.3709338 #>   [54,] 0.7095881 0.7101002 0.7457393 #>   [55,] 0.8632450 0.9452734 0.9582362 #>   [56,] 1.2330285 1.2860053 1.2878207 #>   [57,] 0.6133775 0.6570875 0.6647266 #>   [58,] 0.7066226 0.7161633 0.7200286 #>   [59,] 1.1455786 1.1821034 1.2087668 #>   [60,] 0.7898192 0.7939243 0.8015919 #>   [61,] 0.8167129 0.8387293 0.8398155 #>   [62,] 0.6275538 0.6390093 0.6403610 #>   [63,] 0.6823798 0.6855014 0.6864298 #>   [64,] 0.6007936 0.6157251 0.6158978 #>   [65,] 1.0931949 1.1069983 1.1255987 #>   [66,] 1.1747662 1.1762794 1.1793043 #>   [67,] 0.7198973 0.8448278 0.8528679 #>   [68,] 0.7744335 0.8008949 0.8113809 #>   [69,] 0.8337477 0.8546016 0.8666153 #>   [70,] 0.7035311 0.7185677 0.7657909 #>   [71,] 0.6959320 0.7141490 0.7330386 #>   [72,] 0.8266657 0.8555373 0.8824980 #>   [73,] 1.0689941 1.0765964 1.0970276 #>   [74,] 0.6422858 0.6753351 0.6794117 #>   [75,] 0.9881594 1.0049256 1.0092698 #>   [76,] 0.7840795 0.8029412 0.8446133 #>   [77,] 0.8339729 0.8852561 0.8885824 #>   [78,] 0.6776343 0.6783473 0.6927912 #>   [79,] 0.5990214 0.6148437 0.6178335 #>   [80,] 0.6261561 0.6705603 0.6917049 #>   [81,] 0.8183042 0.8248413 0.8452508 #>   [82,] 1.5711966 1.5921858 1.6799638 #>   [83,] 0.5473466 0.5577556 0.5585343 #>   [84,] 1.4575733 1.4748398 1.5450134 #>   [85,] 0.9101200 0.9215540 0.9400282 #>   [86,] 0.6895740 0.6964980 0.8398155 #>   [87,] 0.5315435 0.5926003 0.5940546 #>   [88,] 0.9466164 0.9505368 0.9819191 #>   [89,] 0.7085806 0.7539298 0.7576612 #>   [90,] 0.4639866 0.4886340 0.4978754 #>   [91,] 1.0661671 1.0703207 1.0850179 #>   [92,] 1.0350864 1.1246410 1.1410353 #>   [93,] 0.6273846 0.6396846 0.6729936 #>   [94,] 0.6621461 0.6730841 0.6755372 #>   [95,] 0.5589076 0.5718031 0.5726976 #>   [96,] 1.0967401 1.1063678 1.1619855 #>   [97,] 0.6227062 0.6631667 0.7028310 #>   [98,] 1.4545619 1.4804709 1.4940935 #>   [99,] 1.2369132 1.2409701 1.2629280 #>  [100,] 0.6414267 0.6420026 0.6812624 #>  [101,] 0.6256541 0.6270762 0.6340315 #>  [102,] 0.8030102 0.8399439 0.8470966 #>  [103,] 1.3906688 1.4321209 1.4531103 #>  [104,] 1.4258069 1.4359298 1.4368440 #>  [105,] 0.9993196 1.0286461 1.0327843 #>  [106,] 0.5507339 0.5758143 0.6218453 #>  [107,] 0.9608068 0.9634866 0.9682306 #>  [108,] 1.3341929 1.3603603 1.4866068 #>  [109,] 1.3107763 1.3393935 1.3667934 #>  [110,] 0.8175726 0.8257304 0.8447845 #>  [111,] 0.4845243 0.5029748 0.5270942 #>  [112,] 0.4837839 0.5098671 0.5127951 #>  [113,] 0.5567038 0.5651490 0.5693620 #>  [114,] 0.8781318 0.9038817 0.9218376 #>  [115,] 0.7588572 0.7636821 0.7788853 #>  [116,] 0.8845181 0.9186031 0.9341500 #>  [117,] 0.6133688 0.6480952 0.6680145 #>  [118,] 0.8748226 0.8857262 0.8882337 #>  [119,] 0.9168692 0.9190963 0.9461592 #>  [120,] 0.5529531 0.5568170 0.5956290 #>  [121,] 0.5807087 0.5853281 0.6225125 #>  [122,] 0.6371422 0.6550249 0.6594435 #>  [123,] 0.7378963 0.8014425 0.8158279 #>  [124,] 0.9562657 0.9765916 0.9771331 #>  [125,] 0.7866932 0.7870167 0.8082479 #>  [126,] 0.8753202 0.9776262 0.9876411 #>  [127,] 0.5155695 0.5517497 0.5578328 #>  [128,] 1.1372116 1.2638671 1.2847125 #>  [129,] 0.8325244 0.8735306 0.8902842 #>  [130,] 0.6917049 0.6949101 0.7003802 #>  [131,] 1.2206230 1.2382200 1.2576681 #>  [132,] 0.6918563 0.6972482 0.6981607 #>  [133,] 0.7293444 0.7451747 0.7648917 #>  [134,] 1.0767381 1.1098807 1.1120624 #>  [135,] 0.8793499 0.9069460 0.9134570 #>  [136,] 0.6395725 0.6667419 0.6688439 #>  [137,] 0.7184914 0.7327227 0.7652532 #>  [138,] 0.7553037 0.8062697 0.8073952 #>  [139,] 0.7791502 0.8055212 0.8210332 #>  [140,] 0.7756952 0.7866932 0.8007903 #>  [141,] 0.7677695 0.7754018 0.7818217 #>  [142,] 0.5684539 0.5996913 0.6007714 #>  [143,] 1.3375979 1.4037835 1.4188600 #>  [144,] 0.7343907 0.7648775 0.7744335 #>  [145,] 1.0005149 1.0839008 1.1359603 #>  [146,] 1.9247666 2.0528754 2.1450529 #>  [147,] 1.5396802 1.5606996 1.5799396 #>  [148,] 0.6387329 0.6418468 0.7399409 #>  [149,] 1.4024336 1.4556944 1.4722021 #>  [150,] 0.6279512 0.6348908 0.6559528 #>  [151,] 1.0326327 1.0389256 1.0914895 #>  [152,] 0.9378915 0.9794508 0.9807302 #>  [153,] 1.0243505 1.0493163 1.0726503 #>  [154,] 1.9435902 2.0558332 2.0685179 #>  [155,] 0.6269097 0.6477152 0.6494768 #>  [156,] 0.8093809 0.8215576 0.8361150 #>  [157,] 0.5778372 0.5838077 0.5843167 #>  [158,] 0.6856160 0.6878116 0.6889679 #>  [159,] 1.3000231 1.3299072 1.4954100 #>  [160,] 0.9060245 0.9248323 0.9391637 #>  [161,] 0.7344118 0.7827488 0.8158820 #>  [162,] 0.5290869 0.5333304 0.5641456 #>  [163,] 0.7405819 0.7453283 0.7493836 #>  [164,] 1.0792046 1.1108133 1.1561070 #>  [165,] 0.5784775 0.5840255 0.5874667 #>  [166,] 0.8497432 0.8526097 0.8793478 #>  [167,] 0.5301634 0.5773118 0.5815696 #>  [168,] 0.9205566 1.0556881 1.0748362 #>  [169,] 0.6847138 0.6932394 0.7051132 #>  [170,] 0.6720961 0.6875287 0.7077823 #>  [171,] 0.6625082 0.6636391 0.7048870 #>  [172,] 0.9430009 0.9596114 1.0043056 #>  [173,] 0.8368947 0.8442932 0.9303547 #>  [174,] 0.8347588 0.8516636 0.8723330 #>  [175,] 0.6116490 0.6363949 0.6639107 #>  [176,] 0.7434605 0.7671118 0.8219937 #>  [177,] 0.6475037 0.6693719 0.6704771 #>  [178,] 1.3141811 1.3641529 1.3654928 #>  [179,] 0.7288562 0.7513864 0.8175451 #>  [180,] 1.0607921 1.0778866 1.0892902 #>  [181,] 0.5993173 0.6505006 0.6528188 #>  [182,] 0.7856517 0.8236180 0.8815996 #>  [183,] 1.2932255 1.2943257 1.3099257 #>  [184,] 0.5943086 0.6065965 0.6508316 #>  [185,] 0.8558937 1.0087461 1.0173097 #>  [186,] 0.7332994 0.7524957 0.7620211 #>  [187,] 0.5388128 0.5724169 0.5871660 #>  [188,] 0.4453320 0.4781089 0.4906804 #>  [189,] 0.6825961 0.7315208 0.7662661 #>  [190,] 0.6261561 0.6322562 0.6387264 #>  [191,] 0.5431800 0.5493708 0.5842524 #>  [192,] 0.9366650 1.0115112 1.0139018 #>  [193,] 0.7791763 0.7877686 0.8267271 #>  [194,] 0.4999803 0.5224957 0.5284957 #>  [195,] 0.7287542 0.7338708 0.7382701 #>  [196,] 0.6793757 0.7002640 0.7527591 #>  [197,] 0.8001376 0.8348291 0.8683633 #>  [198,] 0.8281828 0.8604421 0.8701024 #>  [199,] 0.7081871 0.7107376 0.7260920 #>  [200,] 0.8064651 0.8132218 0.8245745 #>  [201,] 1.1696744 1.1757446 1.1955097 #>  [202,] 0.5215113 0.5506487 0.5559009 #>  [203,] 0.6368902 0.6431490 0.6779259 #>  [204,] 0.7081038 0.7217274 0.7359611 #>  [205,] 0.7783967 0.7897575 0.8099471 #>  [206,] 2.2261040 2.2775297 2.3224374 #>  [207,] 0.9126229 0.9135974 0.9346452 #>  [208,] 0.7500319 0.7543159 0.8307144 #>  [209,] 0.5990616 0.6094973 0.6518840 #>  [210,] 0.7939766 0.7948463 0.8174748 #>  [211,] 0.6363949 0.6399279 0.6597046 #>  [212,] 0.7984211 0.8140872 0.8308921 #>  [213,] 0.6526012 0.6779259 0.7076093 #>  [214,] 0.6954323 0.7328516 0.8023101 #>  [215,] 0.7891139 0.8550059 0.8793124 #>  [216,] 0.6767596 0.6819420 0.7056023 #>  [217,] 0.5446488 0.5520749 0.5598840 #>  [218,] 0.6493102 0.6569956 0.7001344 #>  [219,] 0.6517485 0.6598114 0.6637741 #>  [220,] 1.3616232 1.3623973 1.3651631 #>  [221,] 0.9490913 0.9776484 1.0237415 #>  [222,] 1.0844905 1.0989884 1.1113306 #>  [223,] 0.6221887 0.6253999 0.6451453 #>  [224,] 0.8194787 0.8278785 0.8498218 #>  [225,] 0.5101514 0.5381790 0.5455016 #>  [226,] 0.7723712 0.7773210 0.7809546 #>  [227,] 0.6798027 0.6873260 0.6927150 #>  [228,] 0.7488809 0.7905154 0.8101955 #>  [229,] 0.6734346 0.6924004 0.7396594 #>  [230,] 0.6067046 0.6370304 0.6404394 #>  [231,] 0.6918033 0.7091232 0.7606984 #>  [232,] 1.2896599 1.3014405 1.3156883 #>  [233,] 0.5900934 0.6004548 0.6081852 #>  [234,] 0.6822182 0.6979967 0.7666046 #>  [235,] 0.6520138 0.6824711 0.6960982 #>  [236,] 0.7053574 0.7241683 0.7403172 #>  [237,] 0.5986689 0.5990214 0.6377405 #>  [238,] 0.7920279 0.8213955 0.8286330 #>  [239,] 1.2819247 1.2855510 1.3117287 #>  [240,] 0.7161184 0.7414333 0.7443708 #>  [241,] 1.0238656 1.0239953 1.0652112 #>  [242,] 0.7274085 0.8577339 0.9286956 #>  [243,] 0.8815454 0.8823584 0.9279361 #>  [244,] 1.0295641 1.0425783 1.0451755 #>  [245,] 0.5792627 0.5956290 0.5963923 #>  [246,] 1.0161725 1.0426072 1.0429812 #>  [247,] 0.5784076 0.5812280 0.6161878 #>  [248,] 0.7515865 0.8088560 0.8094516 #>  [249,] 1.1293264 1.1461501 1.1804159 #>  [250,] 1.1818696 1.1882331 1.1978149 #>  [251,] 0.7825243 0.7996498 0.8301877 #>  [252,] 1.0085870 1.0653633 1.0755396 #>  [253,] 0.5808555 0.5864900 0.6044754 #>  [254,] 1.7971424 1.8032660 1.8215755 #>  [255,] 0.6878055 0.7056987 0.7316238 #>  [256,] 0.9891129 1.0039163 1.0513837 #>  [257,] 0.7224331 0.7338708 0.7404499 #>  [258,] 0.6437494 0.6840457 0.6865839 #>  [259,] 0.9520110 1.0119328 1.0333963 #>  [260,] 0.8879565 0.8959714 0.9304029 #>  [261,] 0.5361542 0.5636682 0.5842524 #>  [262,] 0.8899253 0.8908305 0.9057293 #>  [263,] 0.6037244 0.6114538 0.6404394 #>  [264,] 1.0037048 1.0046564 1.0069419 #>  [265,] 0.6911578 0.7127932 0.7773210 #>  [266,] 1.4057024 1.4076882 1.4225578 #>  [267,] 1.1279720 1.1550765 1.1581750 #>  [268,] 0.5414595 0.5564536 0.6357178 #>  [269,] 0.6076115 0.6193471 0.6276841 #>  [270,] 0.6143492 0.6556173 0.6836048 #>  [271,] 2.4496041 2.5344793 2.5391836 #>  [272,] 0.6044852 0.6194560 0.6485100 #>  [273,] 1.3404538 1.4055332 1.4131752 #>  [274,] 0.5337690 0.5394863 0.5442631 #>  [275,] 0.6493688 0.6504903 0.6757886 #>  [276,] 0.9664330 1.0029752 1.0502675 #>  [277,] 1.2916295 1.3270275 1.3620397 #>  [278,] 0.7264431 0.7280660 0.7652532 #>  [279,] 0.5512399 0.5529531 0.5653469 #>  [280,] 1.2674576 1.2947856 1.3007113 #>  [281,] 0.6846347 0.6856328 0.7447192 #>  [282,] 0.8194439 0.8902137 0.9103053 #>  [283,] 0.7289972 0.7363352 0.7464540 #>  [284,] 0.5464866 0.5698526 0.5700085 #>  [285,] 0.7070283 0.7107505 0.7586351 #>  [286,] 0.9786823 0.9902617 1.0043523 #>  [287,] 0.8835670 0.9166792 0.9298050 #>  [288,] 0.8211376 0.8313677 0.8479914 #>  [289,] 0.5036908 0.5224957 0.5538597 #>  [290,] 0.5881955 0.5898104 0.6164692 #>  [291,] 0.5928864 0.6194560 0.6233224 #>  [292,] 0.6303293 0.6526242 0.6651987 #>  [293,] 0.6756108 0.6893942 0.7012269 #>  [294,] 0.6567613 0.6709421 0.6779583 #>  [295,] 1.1418658 1.3219935 1.3361117 #>  [296,] 0.6455426 0.6471754 0.6570015 #>  [297,] 1.6822661 1.7729263 1.7731140 #>  [298,] 0.5762717 0.5778650 0.5849180 #>  [299,] 0.6902308 0.6924779 0.6946994 #>  [300,] 0.9062407 0.9221555 1.0124701 #>  [301,] 0.5691434 0.6206144 0.6520764 #>  [302,] 0.4645308 0.5022562 0.5374942 #>  [303,] 0.6195858 0.6303293 0.6317110 #>  [304,] 0.6666715 0.6754799 0.6776307 #>  [305,] 0.9657700 1.0268108 1.0743191 #>  [306,] 0.6860968 0.7290304 0.7363749 #>  [307,] 0.9330724 1.0323207 1.0533723 #>  [308,] 0.6227840 0.6391521 0.6412936 #>  [309,] 1.0081923 1.0499037 1.1157758 #>  [310,] 0.8485907 0.8904358 1.0119328 #>  [311,] 1.4585826 1.5491043 1.5699872 #>  [312,] 1.0084942 1.0480537 1.1049122 #>  [313,] 0.8173120 0.8294177 0.8338392 #>  [314,] 0.5715760 0.5716476 0.5847812 #>  [315,] 0.7681936 0.7818949 0.7836927 #>  [316,] 0.8939884 0.9396375 0.9799018 #>  [317,] 0.6936951 0.7488810 0.7905965 #>  [318,] 0.5284969 0.5448599 0.5563110 #>  [319,] 0.7708202 0.7891957 0.7910154 #>  [320,] 0.6448727 0.6503403 0.6822182 #>  [321,] 1.0162726 1.0430789 1.0781098 #>  [322,] 0.5721931 0.5832461 0.6130888 #>  [323,] 0.6755372 0.6960078 0.7344727 #>  [324,] 0.9294930 0.9347328 0.9469777 #>  [325,] 0.5809545 0.6368902 0.6649969 #>  [326,] 0.5545367 0.5669852 0.5982363 #>  [327,] 0.8570095 0.8741171 0.9018141 #>  [328,] 0.5784438 0.6741597 0.6947247 #>  [329,] 2.1946260 2.1992391 2.2446966 #>  [330,] 0.6299160 0.6330021 0.6784835 #>  [331,] 1.6457078 1.6651054 1.7061774 #>  [332,] 0.8167660 0.8280890 0.8350104 #>  [333,] 0.7697932 0.7825019 0.8039611 #>  [334,] 0.6594180 0.6819420 0.7174661 #>  [335,] 0.6489326 0.6538819 0.6575023 #>  [336,] 1.0346965 1.0823524 1.1103062 #>  [337,] 1.1231594 1.1492845 1.1676271 #>  [338,] 0.8149124 0.8261038 0.8263901 #>  [339,] 0.5833905 0.5875335 0.5910737 #>  [340,] 0.7484844 0.7489488 0.8072147 #>  [341,] 0.8174948 0.8685083 0.8690115 #>  [342,] 0.6255115 0.6255987 0.6267861 #>  [343,] 0.7351369 0.7598897 0.7924194 #>  [344,] 0.6258388 0.6274167 0.6378654 #>  [345,] 0.7616623 0.7817998 0.7882697 #>  [346,] 0.9191435 0.9289766 0.9628716 #>  [347,] 0.6106381 0.6141360 0.6265655 #>  [348,] 0.5110051 0.5153055 0.5965174 #>  [349,] 0.6150592 0.6544731 0.6558452 #>  [350,] 0.9379206 0.9586946 0.9891129 #>  [351,] 0.6922921 0.7232509 0.7310245 #>  [352,] 0.8284646 0.8411821 0.8562097 #>  [353,] 0.6232940 0.6251972 0.6336534 #>  [354,] 0.5802153 0.5900908 0.5905871 #>  [355,] 1.6016927 1.6183683 1.6376652 #>  [356,] 0.8466935 0.8662803 0.8833108 #>  [357,] 0.7460089 0.7497731 0.7529493 #>  [358,] 0.8835670 0.9017609 0.9370817 #>  [359,] 0.6362140 0.6389466 0.6555353 #>  [360,] 0.7257879 0.7571024 0.7628530 #>  [361,] 0.6661770 0.6735804 0.6826631 #>  [362,] 0.7604367 0.7631046 0.7719649 #>  [363,] 1.0205662 1.0823203 1.1001316 #>  [364,] 0.9601521 0.9658617 0.9756815 #>  [365,] 0.7093827 0.7349957 0.7540449 #>  [366,] 0.9733015 0.9780837 0.9795397 #>  [367,] 0.8142208 0.8174948 0.8393366 #>  [368,] 1.1288409 1.1303360 1.1309967 #>  [369,] 0.9086849 0.9438448 1.0109677 #>  [370,] 0.5769253 0.5848354 0.5854538 #>  [371,] 0.9085786 1.0613554 1.0737194 #>  [372,] 0.8003550 0.8014943 0.8155339 #>  [373,] 0.6520764 0.6809989 0.6925582 #>  [374,] 1.0800418 1.0875153 1.1016418 #>  [375,] 0.5740169 0.5790913 0.6239847 #>  [376,] 1.4694834 1.4839979 1.5690349 #>  [377,] 0.5039508 0.5773118 0.6093329 #>  [378,] 0.6447953 0.7064193 0.7456880 #>  [379,] 0.7255185 0.7739046 0.7975968 #>  [380,] 0.7766619 0.7914277 0.7957228 #>  [381,] 0.6988580 0.7077364 0.7449540 #>  [382,] 0.9485530 0.9536875 0.9786161 #>  [383,] 0.6256541 0.6275538 0.6362574 #>  [384,] 0.6720682 0.7787870 0.7957228 #>  [385,] 1.2687172 1.2802805 1.3047140 #>  [386,] 0.5507339 0.6064328 0.6108049 #>  [387,] 0.8122301 0.8179785 0.8191682 #>  [388,] 0.7100582 0.7123172 0.7344118 #>  [389,] 0.8584639 0.8613229 0.8715004 #>  [390,] 0.7809224 0.7943283 0.8036352 #>  [391,] 0.8789989 0.8846523 0.9430009 #>  [392,] 0.5787497 0.6434306 0.6461901 #>  [393,] 0.5508534 0.5647906 0.5816181 #>  [394,] 1.0615136 1.0758883 1.1293451 #>  [395,] 0.6867323 0.7006231 0.7072118 #>  [396,] 1.3040997 1.3157568 1.3392170 #>  [397,] 0.9589776 0.9816568 1.0123912 #>  [398,] 0.8932279 0.9187887 0.9317281 #>  [399,] 0.5505802 0.6370801 0.6504363 #>  [400,] 0.9190036 0.9236847 0.9552591 #>  [401,] 0.8119278 0.8150843 0.8183023 #>  [402,] 0.7615951 0.9273662 0.9407729 #>  [403,] 0.5254921 0.5363079 0.5819930 #>  [404,] 0.5177915 0.5189196 0.5980605 #>  [405,] 1.4713607 1.4878362 1.5052571 #>  [406,] 0.5693620 0.5790913 0.6271961 #>  [407,] 0.6229257 0.6454792 0.6617013 #>  [408,] 0.6365288 0.6380717 0.6629856 #>  [409,] 0.7639416 0.7647506 0.7828068 #>  [410,] 0.8029412 0.8332180 0.8366698 #>  [411,] 1.0092043 1.1255428 1.1476501 #>  [412,] 0.7288516 0.7313914 0.7520435 #>  [413,] 0.5735514 0.5819185 0.5864900 #>  [414,] 1.1381939 1.2571642 1.2603551 #>  [415,] 0.8042587 0.8070106 0.8208756 #>  [416,] 0.7189922 0.7228040 0.7890711 #>  [417,] 0.8023364 0.8728391 0.8812638 #>  [418,] 0.6259600 0.6381189 0.6573023 #>  [419,] 0.8915097 0.9321882 0.9529310 #>  [420,] 0.6882820 0.7178746 0.7298191 #>  [421,] 0.8980328 0.9007722 0.9341469 #>  [422,] 0.7858526 0.8211451 0.8417973 #>  [423,] 0.6611121 0.6853944 0.7027129 #>  [424,] 0.9034129 0.9303547 0.9338346 #>  [425,] 0.6103830 0.6146042 0.6152917 #>  [426,] 1.2741930 1.3048889 1.3166447 #>  [427,] 0.9660454 0.9786161 1.0160631 #>  [428,] 0.9027740 0.9208716 0.9272575 #>  [429,] 0.7189606 0.7354697 0.8051510 #>  [430,] 0.6149044 0.6544568 0.6568448 #>  [431,] 1.6014659 1.6124795 1.6464965 #>  [432,] 0.8645507 0.8864328 0.8991177 #>  [433,] 0.7941475 0.7968045 0.8960429 #>  [434,] 0.5584686 0.6195858 0.6347572 #>  [435,] 0.7867618 0.7902651 0.8077762 #>  [436,] 0.7012632 0.7241992 0.7251975 #>  [437,] 0.6840500 0.6843970 0.6867323 #>  [438,] 0.9685332 0.9759108 0.9967674 #>  [439,] 0.7871674 0.8543760 0.9412158 #>  [440,] 0.8392612 0.8716437 0.8721196 #>  [441,] 0.8069808 0.8518542 0.8620734 #>  [442,] 0.8871901 0.9332700 1.0400032 #>  [443,] 0.7402080 0.7404499 0.7449671 #>  [444,] 0.9053295 0.9441010 0.9513810 #>  [445,] 0.5589335 0.5616279 0.6127602 #>  [446,] 0.6576721 0.6804033 0.7033662 #>  [447,] 0.9927727 0.9967219 1.0073378 #>  [448,] 0.7042698 0.7459097 0.7554355 #>  [449,] 0.5727056 0.5983884 0.7005419 #>  [450,] 0.9723325 0.9768080 1.0335018 #>  [451,] 1.1559923 1.2082916 1.3320827 #>  [452,] 0.5845112 0.6074706 0.6114413 #>  [453,] 0.7398085 0.7490561 0.7493836 #>  [454,] 0.5464723 0.5666532 0.6183374 #>  [455,] 1.1370093 1.2190428 1.2428198 #>  [456,] 0.6722716 0.6847392 0.6861309 #>  [457,] 0.8434437 0.8982119 0.9272575 #>  [458,] 0.4985066 0.5338072 0.5382786 #>  [459,] 0.6853056 0.6895883 0.7055080 #>  [460,] 1.0526528 1.0920031 1.1344009 #>  [461,] 0.5698526 0.5888508 0.6044754 #>  [462,] 0.5562461 0.5621462 0.5847977 #>  [463,] 1.7375101 1.8041639 1.8503639 #>  [464,] 1.2224570 1.2429012 1.2841455 #>  [465,] 0.8482913 0.8697166 0.8788324 #>  [466,] 0.6964980 0.7070283 0.7537934 #>  [467,] 0.6418468 0.6671150 0.6917589 #>  [468,] 0.5065117 0.5391964 0.5705462 #>  [469,] 0.7010090 0.7214546 0.7667716 #>  [470,] 0.7275787 0.8099892 0.8246746 #>  [471,] 0.6374177 0.6419992 0.6515068 #>  [472,] 0.9687647 0.9824862 1.0229776 #>  [473,] 1.1807701 1.2286957 1.2921542 #>  [474,] 0.6557559 0.6844510 0.7066562 #>  [475,] 0.7262108 0.7448291 0.7559599 #>  [476,] 0.5164314 0.5171654 0.5205927 #>  [477,] 0.6980515 0.7317562 0.7372731 #>  [478,] 1.0509450 1.0538652 1.0635850 #>  [479,] 1.1200334 1.1386040 1.1417755 #>  [480,] 0.9911805 1.0084563 1.0218342 #>  [481,] 0.7985012 0.8332130 0.8358105 #>  [482,] 1.4960626 1.5213869 1.5779222 #>  [483,] 1.1499770 1.1650330 1.1797567 #>  [484,] 0.5254051 0.5810606 0.5872490 #>  [485,] 1.0248897 1.0299032 1.0416752 #>  [486,] 0.7847803 0.8099471 0.8112365 #>  [487,] 0.9444033 0.9586442 0.9673000 #>  [488,] 0.7103499 0.7157430 0.8285483 #>  [489,] 0.6194508 0.6614908 0.6766100 #>  [490,] 0.8434020 0.8588308 0.9001202 #>  [491,] 1.0468715 1.0511804 1.0698476 #>  [492,] 0.4926226 0.5391086 0.5810606 #>  [493,] 0.9021870 1.0212893 1.0643079 #>  [494,] 0.6158978 0.6229634 0.6336534 #>  [495,] 0.7328516 0.8080500 0.8320779 #>  [496,] 0.5578328 0.5877514 0.5907850 #>  [497,] 0.9729825 0.9912929 1.0054113 #>  [498,] 1.3147718 1.3647384 1.3662988 #>  [499,] 2.7978178 2.8484729 2.9330105 #>  [500,] 0.7264557 0.8516435 0.8679878 #>  [501,] 0.6613612 0.7231428 0.7516601 #>  [502,] 0.8481883 0.8585328 0.8599669 #>  [503,] 0.7367848 0.7974064 0.8334096 #>  [504,] 0.5542075 0.5820559 0.5893635 #>  [505,] 0.6116252 0.6465721 0.7169874 #>  [506,] 0.8556933 0.8736286 0.9100260 #>  [507,] 0.5740050 0.6339344 0.6344504 #>  [508,] 1.0379094 1.0471588 1.0521241 #>  [509,] 0.7351449 0.7733922 0.7906739 #>  [510,] 1.1501040 1.1827899 1.2138401 #>  [511,] 1.0081010 1.0269155 1.0403183 #>  [512,] 1.5049288 1.5205302 1.5471490 #>  [513,] 1.1290831 1.1957300 1.2288811 #>  [514,] 1.0214357 1.0770711 1.1021957 #>  [515,] 0.8460879 0.8489286 0.8553952 #>  [516,] 0.5122100 0.5338072 0.5555859 #>  [517,] 0.8566329 0.8780640 0.9458068 #>  [518,] 0.7053574 0.7396663 0.7529493 #>  [519,] 0.8132218 0.8619528 0.8794552 #>  [520,] 0.7932397 0.8036352 0.8371247 #>  [521,] 0.7600011 0.8030624 0.8731730 #>  [522,] 1.9339702 1.9723446 2.0921342 #>  [523,] 0.8728979 0.8798903 0.9108048 #>  [524,] 0.8602468 0.8898735 0.9355186 #>  [525,] 0.8434020 0.8554912 0.8611303 #>  [526,] 0.6234424 0.6281006 0.6329588 #>  [527,] 0.8075600 0.8575611 0.8953935 #>  [528,] 1.0731621 1.1108133 1.1127074 #>  [529,] 0.8029918 0.8075866 0.8531193 #>  [530,] 0.7844424 0.8029918 0.8055212 #>  [531,] 0.9918341 1.0455495 1.2020781 #>  [532,] 0.6647266 0.6756108 0.6823798 #>  [533,] 0.5475485 0.5560572 0.5752051 #>  [534,] 1.4061900 1.4145051 1.4499503 #>  [535,] 0.5350829 0.5391656 0.5428234 #>  [536,] 0.8666887 0.8838251 0.8856987 #>  [537,] 0.6450181 0.6989626 0.7645513 #>  [538,] 0.6936951 0.6942788 0.7069361 #>  [539,] 0.5448491 0.5483102 0.5591494 #>  [540,] 0.5762100 0.5955601 0.6073795 #>  [541,] 1.3941351 1.4337750 1.4711072 #>  [542,] 1.1020501 1.1086187 1.1164041 #>  [543,] 1.0664033 1.0783751 1.0789541 #>  [544,] 1.1373486 1.1421385 1.1896530 #>  [545,] 0.6098957 0.6264674 0.6398529 #>  [546,] 0.7891117 0.7891957 0.8193688 #>  [547,] 1.0043056 1.0920505 1.1169794 #>  [548,] 0.5197251 0.5388128 0.5394863 #>  [549,] 1.2325702 1.3233724 1.3253074 #>  [550,] 2.3698032 2.4459672 2.4605241 #>  [551,] 0.5694467 0.5983994 0.6216318 #>  [552,] 0.7072118 0.7211100 0.7239720 #>  [553,] 0.5203712 0.5367804 0.5406582 #>  [554,] 1.0371558 1.0512924 1.0639414 #>  [555,] 0.9910236 1.0217891 1.0661520 #>  [556,] 1.0388253 1.0509622 1.0759924 #>  [557,] 0.7511114 0.7523335 0.7737363 #>  [558,] 1.0436830 1.0595302 1.1315020 #>  [559,] 0.7485221 0.7555543 0.7562221 #>  [560,] 0.8110856 0.8442247 0.8590657 #>  [561,] 0.7910970 0.8125575 0.8269329 #>  [562,] 2.0329060 2.0464947 2.1051615 #>  [563,] 1.5614089 1.5792095 1.6496802 #>  [564,] 1.1087357 1.1345552 1.1487033 #>  [565,] 0.6202705 0.6210650 0.6326365 #>  [566,] 1.0882388 1.1474096 1.1573929 #>  [567,] 1.0228863 1.0319975 1.0508046 #>  [568,] 0.5302128 0.5637004 0.5904987 #>  [569,] 1.0220488 1.0539673 1.0574935 #>  [570,] 1.0401324 1.0888612 1.1436175 #>  [571,] 0.4961666 0.5716476 0.5838902 #>  [572,] 0.6315611 0.6399279 0.6997841 #>  [573,] 1.2314421 1.2539958 1.2860329 #>  [574,] 0.8483180 0.8519278 0.8581231 #>  [575,] 0.6048017 0.6223452 0.6331574 #>  [576,] 1.5010928 1.5378015 1.5387295 #>  [577,] 0.7322894 0.7402701 0.7722186 #>  [578,] 0.5335917 0.5458239 0.5537864 #>  [579,] 0.6568820 0.7080392 0.7319985 #>  [580,] 0.6873511 0.7011420 0.7050837 #>  [581,] 0.8928800 0.9238549 0.9298428 #>  [582,] 0.7118597 0.7422491 0.7729236 #>  [583,] 0.9892560 1.0059526 1.0644100 #>  [584,] 1.0792311 1.0849133 1.1084016 #>  [585,] 0.8916000 0.9396140 0.9467054 #>  [586,] 0.8400040 0.8639699 0.9180399 #>  [587,] 1.4627325 1.4824280 1.5210347 #>  [588,] 1.0141649 1.1053538 1.1212797 #>  [589,] 0.6793500 0.6883186 0.7481124 #>  [590,] 0.7648148 0.7906054 0.7945961 #>  [591,] 0.9025918 0.9716701 1.0721897 #>  [592,] 0.6423844 0.6449319 0.6724115 #>  [593,] 0.4725017 0.4901664 0.6232102 #>  [594,] 0.5382786 0.5595756 0.5714908 #>  [595,] 0.8342513 0.8361073 0.9158839 #>  [596,] 0.6828360 0.7077951 0.7093827 #>  [597,] 0.8045615 0.8189127 0.8202734 #>  [598,] 0.6056041 0.6122406 0.6294766 #>  [599,] 0.7319659 0.7665120 0.7830806 #>  [600,] 0.5793024 0.5920239 0.5944527 #>  [601,] 0.5422872 0.5934187 0.6225972 #>  [602,] 0.5038229 0.5088133 0.5333304 #>  [603,] 0.6339928 0.6344587 0.6415068 #>  [604,] 0.5621462 0.5822668 0.5928315 #>  [605,] 0.5043623 0.5152282 0.5412566 #>  [606,] 0.8514101 0.8581030 0.8976943 #>  [607,] 0.8099237 0.8210332 0.8644987 #>  [608,] 1.0553813 1.0852216 1.0892656 #>  [609,] 1.0876542 1.0967448 1.0970276 #>  [610,] 0.6575762 0.6783473 0.6829099 #>  [611,] 0.7092287 0.7793916 0.8176927 #>  [612,] 0.7845856 0.8247635 0.8874659 #>  [613,] 0.8388916 0.8632137 0.9030833 #>  [614,] 1.0231618 1.0235836 1.0425666 #>  [615,] 0.7166701 0.7827488 0.8202734 #>  [616,] 0.6064328 0.6065965 0.6075559 #>  [617,] 0.8378213 0.8425124 0.8486141 #>  [618,] 1.2220645 1.3184867 1.3757140 #>  [619,] 0.5756904 0.5858072 0.5933102 #>  [620,] 1.2608402 1.2822373 1.2869762 #>  [621,] 1.2739743 1.3099188 1.3250280 #>  [622,] 0.6619830 0.6699510 0.7000377 #>  [623,] 0.7164536 0.7257358 0.8023364 #>  [624,] 1.2374534 1.2635508 1.2643068 #>  [625,] 0.6902308 0.7028009 0.7319659 #>  [626,] 0.8958902 0.9030162 0.9093301 #>  [627,] 0.5549466 0.5755035 0.5765267 #>  [628,] 0.7460089 0.7639416 0.8313206 #>  [629,] 0.4905728 0.4942109 0.5031505 #>  [630,] 0.6007005 0.6234864 0.6677731 #>  [631,] 1.5964418 1.6594767 1.6659284 #>  [632,] 0.6744898 0.6937754 0.6943448 #>  [633,] 1.0761527 1.0898412 1.1706041 #>  [634,] 0.6242899 0.6293683 0.6310264 #>  [635,] 0.8992914 1.0140728 1.0649797 #>  [636,] 1.1882590 1.2053993 1.2229430 #>  [637,] 0.5477302 0.6005423 0.6195639 #>  [638,] 0.6460751 0.6486946 0.6554590 #>  [639,] 0.7732483 0.7848387 0.8093511 #>  [640,] 0.7354020 0.7401168 0.7578651 #>  [641,] 0.5115338 0.5376920 0.5490150 #>  [642,] 1.3809669 1.3931236 1.3963649 #>  [643,] 0.6162748 0.6355525 0.6373189 #>  [644,] 0.5609127 0.5977554 0.6404431 #>  [645,] 0.9621100 1.0284746 1.0561041 #>  [646,] 0.8011934 0.8153516 0.8284279 #>  [647,] 1.1757033 1.2322491 1.3049420 #>  [648,] 0.5047042 0.5331247 0.5417924 #>  [649,] 0.7390150 0.7774246 0.7941222 #>  [650,] 1.2468155 1.2588606 1.2648697 #>  [651,] 0.8700253 0.9101938 0.9348567 #>  [652,] 0.7176706 0.7422686 0.7525945 #>  [653,] 1.4647242 1.4649795 1.4841694 #>  [654,] 0.5751650 0.5832221 0.6152891 #>  [655,] 0.8821678 0.9729825 0.9755979 #>  [656,] 0.5068300 0.5140644 0.5700511 #>  [657,] 1.0711251 1.1204842 1.1268332 #>  [658,] 0.6944146 0.7117599 0.7210043 #>  [659,] 0.5651490 0.5871811 0.6401649 #>  [660,] 0.6530109 0.6705030 0.7392660 #>  [661,] 0.9938395 1.0084563 1.0115921 #>  [662,] 0.5564536 0.5589335 0.5876542 #>  [663,] 0.7698231 0.7761523 0.8092654 #>  [664,] 0.6286956 0.6359375 0.6481956 #>  [665,] 0.6136417 0.6709636 0.6793446 #>  [666,] 1.5772505 1.5959408 1.7235659 #>  [667,] 0.5598840 0.5724169 0.5938387 #>  [668,] 0.5214682 0.5598422 0.5650591 #>  [669,] 1.2304458 1.3551871 1.3687091 #>  [670,] 1.1947125 1.2882108 1.2936240 #>  [671,] 0.5446488 0.5522417 0.5537372 #>  [672,] 0.8751083 0.8829570 1.0368283 #>  [673,] 1.0337591 1.0884658 1.0925525 #>  [674,] 1.3091289 1.4285975 1.4426094 #>  [675,] 0.7962729 0.8106037 0.8532589 #>  [676,] 0.5474013 0.5836521 0.6108524 #>  [677,] 0.8050155 0.8197892 0.8250720 #>  [678,] 1.2499746 1.2588606 1.2623633 #>  [679,] 0.7672906 0.8184894 0.8372153 #>  [680,] 0.8309062 0.8499388 0.8522157 #>  [681,] 1.2357405 1.2813162 1.2881833 #>  [682,] 0.7512256 0.7537934 0.8017146 #>  [683,] 0.6924338 0.7604367 0.7621253 #>  [684,] 0.8923240 0.9105257 0.9758638 #>  [685,] 0.5165238 0.5184814 0.5219601 #>  [686,] 0.7218092 0.7418706 0.8362253 #>  [687,] 1.0000655 1.0190872 1.0434870 #>  [688,] 1.4733664 1.4897250 1.5071121 #>  [689,] 0.7361053 0.7372937 0.7560528 #>  [690,] 1.1736718 1.2135157 1.2144153 #>  [691,] 1.6315990 1.6820170 1.6940504 #>  [692,] 0.5508534 0.5760182 0.5859741 #>  [693,] 0.8191035 0.8410250 0.8522157 #>  [694,] 0.9218645 0.9487543 0.9883042 #>  [695,] 0.6830429 0.7555543 0.7700034 #>  [696,] 0.8328559 0.8566730 0.8788406 #>  [697,] 0.7060284 0.7123172 0.7189718 #>  [698,] 0.6966668 0.7095384 0.7583497 #>  [699,] 0.6793757 0.7066244 0.7092152 #>  [700,] 0.8070216 0.8265935 0.8519278 #>  [701,] 0.6302841 0.6342402 0.6365512 #>  [702,] 1.2890853 1.2964382 1.3010610 #>  [703,] 0.9358046 1.1144320 1.1393480 #>  [704,] 0.7081493 0.7151052 0.7405949 #>  [705,] 1.0195369 1.2259891 1.2269391 #>  [706,] 0.5624723 0.5935204 0.6081886 #>  [707,] 0.8580177 0.8863304 0.9252928 #>  [708,] 1.3400658 1.3529517 1.3630672 #>  [709,] 1.0605147 1.0743078 1.0866625 #>  [710,] 0.5703296 0.5793024 0.5853281 #>  [711,] 0.5644427 0.6095891 0.6157921 #>  [712,] 0.6489326 0.6562908 0.6735804 #>  [713,] 0.7164536 0.7185370 0.7198287 #>  [714,] 1.1301325 1.1696451 1.1861796 #>  [715,] 0.6106142 0.6114538 0.6166628 #>  [716,] 0.8472093 0.8533833 0.8807989 #>  [717,] 1.0511908 1.0913276 1.0950373 #>  [718,] 0.7813662 0.7920934 0.8048466 #>  [719,] 1.0322897 1.0772629 1.0996304 #>  [720,] 0.6212383 0.6707692 0.6776307 #>  [721,] 0.8476778 0.8508133 0.9056069 #>  [722,] 0.7818596 0.7991157 0.8047440 #>  [723,] 0.6360874 0.6570015 0.6794117 #>  [724,] 1.5425863 1.5770401 1.5775648 #>  [725,] 1.0469513 1.0730223 1.1365501 #>  [726,] 2.5499001 2.5877972 2.5973348 #>  [727,] 0.9649681 1.0000655 1.0105031 #>  [728,] 0.6682089 0.6689205 0.6925582 #>  [729,] 0.8289745 0.8606617 0.8995628 #>  [730,] 1.1909792 1.2032655 1.2214736 #>  [731,] 0.8155527 0.8330002 0.8910643 #>  [732,] 1.4129700 1.4257205 1.4269882 #>  [733,] 1.2326746 1.2666659 1.2807269 #>  [734,] 0.9759457 1.0941410 1.1131137 #>  [735,] 1.2926398 1.2943778 1.3189782 #>  [736,] 0.8038318 0.9191734 0.9259836 #>  [737,] 0.7771783 0.8173460 0.8183498 #>  [738,] 0.8342751 0.8375110 0.8468821 #>  [739,] 0.7669882 0.7769399 0.7783967 #>  [740,] 0.7676540 0.7703288 0.7959924 #>  [741,] 0.4807659 0.4811913 0.4829322 #>  [742,] 0.7628195 0.7722913 0.8143765 #>  [743,] 0.5038506 0.5872490 0.5902789 #>  [744,] 0.8199415 0.8279275 0.8672934 #>  [745,] 0.7083628 0.7338538 0.7515559 #>  [746,] 1.7624131 1.7831930 1.8529676 #>  [747,] 0.6527544 0.6722586 0.7173171 #>  [748,] 0.6165924 0.6242899 0.6525633 #>  [749,] 0.5591494 0.5773746 0.5871660 #>  [750,] 0.6133688 0.6143176 0.6344504 #>  [751,] 0.5977554 0.6075119 0.6081672 #>  [752,] 0.8201508 0.8217113 0.8258053 #>  [753,] 0.7158419 0.7167084 0.7526110 #>  [754,] 0.5488100 0.5512399 0.5565225 #>  [755,] 0.9689169 0.9702371 0.9763988 #>  [756,] 0.7403582 0.7672499 0.7689766 #>  [757,] 0.6011118 0.6035912 0.6143492 #>  [758,] 0.6690084 0.6855743 0.6954385 #>  [759,] 0.8650603 0.9300395 1.0290951 #>  [760,] 0.9413051 0.9449080 0.9541890 #>  [761,] 0.6814680 0.6873511 0.6933264 #>  [762,] 0.6146394 0.6270975 0.6384403 #>  [763,] 1.2295889 1.2969550 1.3012819 #>  [764,] 0.7912666 0.8175944 0.8652332 #>  [765,] 1.5165658 1.5632683 1.6220706 #>  [766,] 0.7619575 0.7845856 0.7903842 #>  [767,] 0.9105072 0.9167320 0.9350408 #>  [768,] 0.8096945 0.8271271 0.8438052 #>  [769,] 1.0189938 1.0358824 1.0408619 #>  [770,] 0.7793938 0.7906739 0.8376128 #>  [771,] 1.7807055 1.7927447 1.7961446 #>  [772,] 1.2081725 1.2300703 1.2320259 #>  [773,] 0.7095384 0.7634109 0.8012599 #>  [774,] 0.5526499 0.5690779 0.5941848 #>  [775,] 1.0034701 1.0198180 1.0597253 #>  [776,] 0.6628386 0.6747995 0.6812344 #>  [777,] 0.5489606 0.5848354 0.5980778 #>  [778,] 0.6729456 0.6753574 0.6895843 #>  [779,] 0.9989262 1.0340941 1.0549130 #>  [780,] 0.7886171 0.8140232 0.8596395 #>  [781,] 0.9398637 1.0138404 1.0257756 #>  [782,] 0.5196511 0.5300860 0.5441774 #>  [783,] 0.7712708 0.7785486 0.7933427 #>  [784,] 0.7314612 0.7390954 0.7903991 #>  [785,] 0.7497731 0.8423679 0.9455623 #>  [786,] 0.8584332 0.8779746 0.8886868 #>  [787,] 1.1090116 1.1598086 1.1838323 #>  [788,] 1.0667274 1.0709461 1.0753148 #>  [789,] 0.9512250 1.0026992 1.0055707 #>  [790,] 0.6047498 0.6423844 0.6672514 #>  [791,] 0.7644297 0.7823320 0.8289601 #>  [792,] 0.7533340 0.8625143 0.8690115 #>  [793,] 0.8308841 0.8392308 0.8533834 #>  [794,] 0.7378000 0.7576315 0.7722186 #>  [795,] 1.0377217 1.0471588 1.1430132 #>  [796,] 0.6464568 0.6722230 0.7071145 #>  [797,] 0.4768116 0.5038506 0.5119983 #>  [798,] 0.5321714 0.5509819 0.5825465 #>  [799,] 0.5765121 0.6117266 0.6334817 #>  [800,] 1.2780696 1.2879393 1.3291877 #>  [801,] 0.9607605 0.9730312 0.9790967 #>  [802,] 0.9759251 1.0250429 1.0486243 #>  [803,] 0.6575762 0.6844912 0.6890709 #>  [804,] 0.8679566 0.9108230 1.0005149 #>  [805,] 0.6319259 0.6342402 0.7315519 #>  [806,] 0.6782024 0.6794570 0.7198823 #>  [807,] 0.5168748 0.5367804 0.5435968 #>  [808,] 0.5489606 0.6098179 0.6106142 #>  [809,] 0.6365382 0.6373189 0.6435149 #>  [810,] 0.5801760 0.5845530 0.5859639 #>  [811,] 0.7177089 0.7441591 0.7792351 #>  [812,] 0.7422491 0.7606548 0.7615598 #>  [813,] 0.5879726 0.5909601 0.6122462 #>  [814,] 0.5085484 0.5628062 0.5765421 #>  [815,] 0.5026705 0.5189029 0.5284969 #>  [816,] 1.2496203 1.2682469 1.2889422 #>  [817,] 0.9497079 0.9783047 0.9847914 #>  [818,] 0.8094516 0.8416187 0.8517166 #>  [819,] 0.8513099 0.9304029 0.9474305 #>  [820,] 0.8280890 0.8349683 0.8424210 #>  [821,] 0.5074146 0.5448491 0.5822668 #>  [822,] 2.0027772 2.0190620 2.0273821 #>  [823,] 0.6307234 0.6482195 0.6661770 #>  [824,] 2.3750614 2.3903208 2.3941222 #>  [825,] 0.8838251 0.9023417 0.9142908 #>  [826,] 0.9889649 1.0167606 1.0442092 #>  [827,] 1.3254673 1.3315739 1.3326072 #>  [828,] 0.5397715 0.5425306 0.5439430 #>  [829,] 0.6322275 0.6484510 0.7294171 #>  [830,] 0.7303706 0.7766673 0.7895184 #>  [831,] 0.9917530 1.0002187 1.0179955 #>  [832,] 1.0934972 1.0939917 1.1230953 #>  [833,] 1.0198930 1.0874022 1.1050338 #>  [834,] 0.4827478 0.4842416 0.5694467 #>  [835,] 0.9877948 1.1083030 1.1223708 #>  [836,] 0.6776030 0.7596441 0.7681511 #>  [837,] 0.8056446 0.8448444 0.8542834 #>  [838,] 0.8195514 0.8665423 0.8766603 #>  [839,] 0.5893552 0.6070066 0.6161363 #>  [840,] 0.4763757 0.5291550 0.5368799 #>  [841,] 0.7351449 0.8048950 0.8117724 #>  [842,] 0.5595356 0.5705462 0.5735618 #>  [843,] 1.8124457 1.8751240 1.8873251 #>  [844,] 0.7224461 0.7572010 0.7808384 #>  [845,] 0.5486938 0.5735514 0.5755479 #>  [846,] 0.7066244 0.7458233 0.7714272 #>  [847,] 0.6431490 0.6594180 0.6620760 #>  [848,] 0.6721738 0.7166255 0.7308810 #>  [849,] 1.2402478 1.2403056 1.2798592 #>  [850,] 0.8183498 0.8341716 0.8679566 #>  [851,] 0.5682557 0.5983884 0.7436629 #>  [852,] 2.0901283 2.1193404 2.1453606 #>  [853,] 0.8889776 0.9101522 0.9120216 #>  [854,] 0.6801136 0.6814680 0.7064047 #>  [855,] 1.1362938 1.1583177 1.1843568 #>  [856,] 0.5859734 0.6395725 0.6679704 #>  [857,] 0.7928113 0.8106336 0.8582234 #>  [858,] 1.4155497 1.4261048 1.4362454 #>  [859,] 0.6932967 0.7067968 0.7267149 #>  [860,] 0.6422858 0.6720682 0.6826380 #>  [861,] 0.5245846 0.5254051 0.5499494 #>  [862,] 1.9490004 1.9533986 1.9915554 #>  [863,] 0.6024946 0.6290822 0.6487378 #>  [864,] 0.7039406 0.7067968 0.7303706 #>  [865,] 0.8614348 0.9119135 0.9338346 #>  [866,] 0.8723443 0.8807200 0.8847025 #>  [867,] 0.6138500 0.6325047 0.6444264 #>  [868,] 0.8627456 0.9297663 0.9506089 #>  [869,] 0.7957403 0.8158396 0.8162246 #>  [870,] 0.6207546 0.6482118 0.6815168 #>  [871,] 0.6873260 0.6925079 0.7224404 #>  [872,] 0.7004519 0.7115287 0.7141490 #>  [873,] 0.6206424 0.6294411 0.6419992 #>  [874,] 0.7751067 0.7927907 0.8317753 #>  [875,] 0.5477302 0.5905216 0.5968875 #>  [876,] 1.1172828 1.1568073 1.1668856 #>  [877,] 0.8027620 0.8289667 0.8584660 #>  [878,] 1.3446773 1.3871050 1.4087059 #>  [879,] 0.7947447 0.8026697 0.8187020 #>  [880,] 0.7095780 0.7120531 0.7224331 #>  [881,] 0.5165238 0.5197251 0.5563110 #>  [882,] 0.4867866 0.4886340 0.5277014 #>  [883,] 0.6095891 0.6444264 0.6471754 #>  [884,] 1.1103547 1.1321855 1.1509306 #>  [885,] 0.6683102 0.6714550 0.6776343 #>  [886,] 0.6149044 0.6266999 0.6792860 #>  [887,] 1.0134636 1.0375347 1.0748362 #>  [888,] 0.7786041 0.8384083 0.8425124 #>  [889,] 0.6276169 0.6734215 0.6775417 #>  [890,] 0.9176432 0.9291135 0.9400309 #>  [891,] 0.5955329 0.6026508 0.6095924 #>  [892,] 0.4747824 0.5152282 0.5298413 #>  [893,] 0.6624071 0.6869585 0.6930631 #>  [894,] 0.9902618 0.9946636 1.0059933 #>  [895,] 0.6006478 0.6109909 0.7827485 #>  [896,] 1.0739924 1.1353441 1.1362353 #>  [897,] 0.5088133 0.5348194 0.5409899 #>  [898,] 0.8149680 0.8505206 0.8677531 #>  [899,] 0.9816910 0.9847571 0.9914863 #>  [900,] 0.9081888 0.9153452 0.9188084 #>  [901,] 0.6153536 0.6153815 0.6182721 #>  [902,] 0.5495761 0.5507399 0.5603175 #>  [903,] 2.5840580 2.5929933 2.6234895 #>  [904,] 1.1861796 1.1973393 1.2292255 #>  [905,] 0.5724835 0.6038711 0.6115347 #>  [906,] 0.8413863 0.8465449 0.8546885 #>  [907,] 0.8071671 0.8180067 0.8939851 #>  [908,] 0.5879416 0.6358956 0.6381506 #>  [909,] 0.5240560 0.5919193 0.6096382 #>  [910,] 0.7269927 0.8232129 0.8276135 #>  [911,] 0.7996571 0.9101522 0.9129058 #>  [912,] 1.6359869 1.7033136 1.7092960 #>  [913,] 0.7159270 0.7256828 0.7342817 #>  [914,] 0.7425863 0.7431353 0.7449256 #>  [915,] 0.6427402 0.6471053 0.6617013 #>  [916,] 0.7987813 0.8538310 0.8605647 #>  [917,] 0.7536898 0.7766619 0.7871300 #>  [918,] 0.5485144 0.5539596 0.5594923 #>  [919,] 0.6752461 0.7208311 0.7571621 #>  [920,] 0.5653469 0.5664138 0.5700511 #>  [921,] 0.6455285 0.6785113 0.6878116 #>  [922,] 0.5816181 0.6417378 0.6576109 #>  [923,] 0.9541905 0.9633048 1.0140728 #>  [924,] 1.7120622 1.7506400 1.7786597 #>  [925,] 1.1356111 1.1501145 1.1861868 #>  [926,] 0.6844323 0.7211100 0.7277595 #>  [927,] 0.9919870 1.0046539 1.0585988 #>  [928,] 1.0909418 1.0970285 1.1137077 #>  [929,] 0.8215322 0.8246746 0.8262601 #>  [930,] 0.8218535 0.8307444 0.8410435 #>  [931,] 0.9490880 0.9559149 1.0106206 #>  [932,] 1.3404173 1.3431972 1.3540991 #>  [933,] 0.9182950 0.9930687 1.0316881 #>  [934,] 0.5778650 0.6233926 0.6552800 #>  [935,] 0.6513649 0.6688012 0.6800487 #>  [936,] 0.7431773 0.7557377 0.8549699 #>  [937,] 0.5240560 0.5434537 0.5609127 #>  [938,] 0.5520749 0.5642003 0.6029693 #>  [939,] 0.7903432 0.8028419 0.8341896 #>  [940,] 0.8409575 0.8928800 0.9019933 #>  [941,] 0.6343338 0.6726428 0.6845662 #>  [942,] 0.7056023 0.7745546 0.8093433 #>  [943,] 0.9929385 0.9997025 1.0238656 #>  [944,] 0.7246882 0.7409949 0.7639661 #>  [945,] 0.6295790 0.6592961 0.6793446 #>  [946,] 1.1429259 1.2309731 1.2322491 #>  [947,] 0.6787280 0.6887799 0.7126490 #>  [948,] 0.9650437 0.9661742 0.9723720 #>  [949,] 0.8346578 0.8391675 0.8997573 #>  [950,] 0.9614591 0.9675984 0.9725935 #>  [951,] 0.8829771 0.9036908 0.9877948 #>  [952,] 0.8512426 0.8532802 0.8848484 #>  [953,] 0.6166628 0.6170841 0.6371422 #>  [954,] 0.8329126 0.8530069 0.8645209 #>  [955,] 0.5247719 0.5300860 0.6102380 #>  [956,] 1.1619952 1.2036054 1.2282273 #>  [957,] 0.6391615 0.6557125 0.6612431 #>  [958,] 1.0725884 1.0784070 1.1014701 #>  [959,] 1.0767381 1.0916150 1.1107009 #>  [960,] 0.7359664 0.7421168 0.7671997 #>  [961,] 1.1424055 1.1488222 1.1747662 #>  [962,] 0.5546416 0.5719874 0.6326870 #>  [963,] 0.6186984 0.6290006 0.6319184 #>  [964,] 1.0452503 1.0807821 1.0947882 #>  [965,] 0.4862419 0.4933322 0.5164314 #>  [966,] 0.6015028 0.6106738 0.6130888 #>  [967,] 0.9397593 0.9456987 0.9475875 #>  [968,] 1.1989367 1.2039149 1.2430222 #>  [969,] 1.2733077 1.2977592 1.3079020 #>  [970,] 0.6587434 0.7021421 0.7257358 #>  [971,] 0.9298788 0.9332233 0.9786370 #>  [972,] 0.4583481 0.5174262 0.5584686 #>  [973,] 1.2784206 1.3214717 1.3237718 #>  [974,] 0.9892116 0.9895480 1.0097542 #>  [975,] 0.5051712 0.5437751 0.5481820 #>  [976,] 0.7593610 0.7609732 0.7633887 #>  [977,] 0.9492200 0.9543498 0.9551139 #>  [978,] 0.7632394 0.7974951 0.8192408 #>  [979,] 0.5735618 0.5908839 0.6015028 #>  [980,] 0.6197546 0.6206144 0.6359616 #>  [981,] 0.8684410 0.8772932 0.9226718 #>  [982,] 0.7774246 0.7999180 0.8602760 #>  [983,] 0.7194182 0.7592156 0.8063933 #>  [984,] 0.9483649 0.9895036 1.0640046 #>  [985,] 0.9019933 0.9142908 0.9483463 #>  [986,] 0.7750119 0.7840491 0.7910807 #>  [987,] 0.5490150 0.5614692 0.5650591 #>  [988,] 0.6108302 0.6178691 0.6390093 #>  [989,] 0.8721196 0.8953935 0.9019052 #>  [990,] 1.1754947 1.2030136 1.2309854 #>  [991,] 0.7230304 0.7697567 0.7910246 #>  [992,] 0.8350104 0.8966890 0.9137141 #>  [993,] 0.8924814 0.9205566 0.9220425 #>  [994,] 1.6178327 1.6278497 1.6799638 #>  [995,] 0.7267149 0.7846327 0.7985012 #>  [996,] 0.6584006 0.6801919 0.6883392 #>  [997,] 1.1804192 1.2117447 1.2190261 #>  [998,] 0.6526862 0.6584006 0.6732712 #>  [999,] 0.9596488 0.9604054 1.0200492 #> [1000,] 1.2215756 1.2249653 1.2474735 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 1e-10"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample  cd45 pstat5  cd34 outcome class  multiclass event time_to_event #>    <chr>  <dbl>  <dbl> <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 65     0.822 0.619  0.815    5.72 class1 class3         1          7.41 #>  2 84     0.597 0.767  0.260    6.34 class1 class3         1         12.5  #>  3 17     0.902 0.723  0.749    2.97 class2 class1         0         12.4  #>  4 24     0.667 0.0417 0.801    3.15 class2 class1         0         10.2  #>  5 3      0.293 0.230  0.443    2.70 class2 class1         0         11.1  #>  6 49     0.374 0.951  0.286    4.82 class1 class2         1         11.0  #>  7 9      0.280 0.0778 0.509    1.96 class2 class1         0         10.3  #>  8 87     0.295 0.651  0.226    4.22 class1 class3         1          8.02 #>  9 53     0.231 0.793  0.335    5.00 class1 class2         1          8.03 #> 10 70     0.917 0.183  0.255    2.38 class2 class3         1         12.7  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>                cd45      pstat5        cd34 #>   [1,]  0.097430219  0.82910106 -0.94376493 #>   [2,] -1.311838342 -0.83388574  2.00234953 #>   [3,]  0.608982549  0.25588910 -0.45198780 #>   [4,] -0.302489013  0.63513275 -0.78947643 #>   [5,]  0.814591515  1.35424932 -0.06893559 #>   [6,] -1.490715046 -0.60767688  0.20873417 #>   [7,] -1.068171324 -0.98809671 -0.92545271 #>   [8,]  1.720644052  1.03349182 -0.61031206 #>   [9,]  0.344938617  1.45622241 -0.58876885 #>  [10,] -0.344691402 -1.64191753  1.46032139 #>  [11,] -0.316963867 -0.29841413 -0.19475752 #>  [12,] -1.364896702 -0.21680095  1.06028628 #>  [13,] -0.788463388  1.56784234  1.34496699 #>  [14,]  1.465392231 -0.02392575 -0.38715496 #>  [15,] -0.983790203  1.22733473 -0.57337552 #>  [16,] -1.351760250 -1.48437184 -1.45299400 #>  [17,] -1.021288982 -0.99886311 -0.84663647 #>  [18,] -1.389544154  0.53088546  1.88944653 #>  [19,] -1.218894884 -0.25109334  1.20528647 #>  [20,]  0.238289453 -0.60142456 -0.79626050 #>  [21,]  0.989845642 -0.56050792  1.00459207 #>  [22,] -1.449966131 -1.21051222 -0.26514832 #>  [23,] -1.482798231  0.09343527 -0.39684951 #>  [24,]  1.463977818  1.26356640  1.72149337 #>  [25,]  1.405791893  0.17131523 -1.38922709 #>  [26,] -0.620979465  1.69803167  0.91600303 #>  [27,] -0.629277673 -0.27514976  1.12814102 #>  [28,]  0.500584250  1.06722334  0.30449975 #>  [29,] -1.043556082  1.27808977  0.77334193 #>  [30,] -1.024425108 -0.97478798  0.84206340 #>  [31,]  1.554943783  1.06852314 -0.35906208 #>  [32,]  1.169379658  0.08050339 -0.16781256 #>  [33,] -1.177645648 -0.13092913 -0.02108945 #>  [34,] -0.172509694 -1.46016260  0.06155719 #>  [35,] -0.748479429 -1.13536404 -0.67258770 #>  [36,] -1.402700354  1.34348410 -0.05211684 #>  [37,] -1.062300509 -0.75774393  1.81266694 #>  [38,] -1.282857700  0.41580356  1.22121612 #>  [39,]  0.875433929  1.68290377 -1.39538817 #>  [40,] -1.164910939  0.56025763 -1.40528210 #>  [41,]  0.668840929  1.63436095 -0.41448278 #>  [42,] -0.002996884 -1.64653309 -0.59163196 #>  [43,]  0.172427732 -0.26530729 -0.91681641 #>  [44,]  1.468934435 -0.49443278  1.26750344 #>  [45,] -0.924013752 -0.96065024 -1.41537556 #>  [46,]  0.181290611  0.45321197 -0.55039255 #>  [47,]  0.274956688 -0.03118150  0.48177377 #>  [48,] -0.282324875  1.57603526  0.23943288 #>  [49,]  1.147478504 -1.24884927  0.19638588 #>  [50,]  1.010348840  0.61371718 -0.76901762 #>  [51,]  1.110491475  1.29781210 -1.04943965 #>  [52,]  1.078293933  0.56541751 -0.10336833 #>  [53,] -0.176056382 -0.71155325 -1.09782905 #>  [54,]  0.621151974 -1.64261801 -0.69870671 #>  [55,] -1.656946890 -0.83395761 -0.06055877 #>  [56,] -0.305423555  0.57731463 -1.08112087 #>  [57,]  0.702750034  0.06664733  1.73234041 #>  [58,] -0.513923518 -1.59376747  1.88020934 #>  [59,]  0.401774984  0.90797477  1.00688706 #>  [60,] -1.251357033  0.27391588 -1.47560501 #>  [61,]  0.249423289  0.54384053 -0.57632363 #>  [62,] -0.563953322  0.18670903 -0.87890035 #>  [63,] -0.134333347 -1.47950062  0.52142003 #>  [64,] -0.447376307 -1.63419639 -1.17733125 #>  [65,]  1.056123410 -0.77591397  1.55592024 #>  [66,] -0.649333161 -1.60929699  0.36112138 #>  [67,] -0.314440154 -0.15318593 -1.57390336 #>  [68,] -1.574189375  1.36296254  0.43201458 #>  [69,] -1.236690266  0.39641178  1.61239377 #>  [70,]  1.059948573 -0.91541842 -1.36370039 #>  [71,]  1.660572266 -0.70944415  1.05667214 #>  [72,] -1.493476736 -0.49845220 -1.63788023 #>  [73,]  1.655897949 -0.39093657  0.29411358 #>  [74,]  0.451123291  0.98262889  1.98757738 #>  [75,] -0.414424253 -1.07530968  0.31514068 #>  [76,]  0.453726423  0.85686567  1.01130980 #>  [77,]  0.999958797 -1.57167820 -1.63538826 #>  [78,]  1.423268538  1.18211735  0.61977295 #>  [79,]  0.599291206 -0.11074027 -1.43890299 #>  [80,] -0.283921239 -0.69847066  1.61055618 #>  [81,]  1.233219158  0.37126964  1.08175076 #>  [82,]  0.803109507  1.66628276 -0.70233496 #>  [83,]  0.694205481  1.36237235  0.33442099 #>  [84,] -0.227147094 -0.07495812 -1.03451647 #>  [85,]  0.316764480 -1.28795998 -0.58610671 #>  [86,]  1.566441362  0.32637161 -0.12839293 #>  [87,]  0.442802106 -0.54085031 -0.07227478 #>  [88,]  1.197063319  0.26925504 -1.00240896 #>  [89,] -0.135714814 -1.60973478 -0.74200950 #>  [90,] -1.478638693  0.60936144  0.52842898 #>  [91,]  0.264647737  0.60063557 -1.04296196 #>  [92,]  1.531517096 -1.16694306 -0.11886303 #>  [93,]  1.526609706  0.46163629  0.26221660 #>  [94,] -1.248391947  0.26145114 -1.14140504 #>  [95,] -0.116980597  0.41800529 -0.30383907 #>  [96,] -1.150374900 -0.89023524  0.88019565 #>  [97,]  1.376741715  1.42083375  0.32368321 #>  [98,] -0.065986285 -0.07541222  0.28225801 #>  [99,]  0.551185862 -1.35040975  0.34747512 #> [100,] -0.338277123  1.64082156  0.95628936"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  5.7621216  2.2316713  0.6277567  3.8226163  3.4438041  3.2022874 #>   [7]  4.6158093  2.9033474  3.6741484  3.1352677  2.4676448  5.1249311 #>  [13]  4.7087302  6.2543310  1.1120282  4.7324417  5.9082607  2.0386707 #>  [19]  5.4174583  3.5122708  4.8392255  0.8281352  5.2922102  5.3983678 #>  [25]  3.5386303  4.1805624  3.7113123  0.8101075  2.2566154  7.1559778 #>  [31]  5.1942710  4.4812019  3.2366547  1.4674999  0.8180363  2.3338306 #>  [37]  0.8810946  3.6455296  3.3840711  5.5595769  4.7384607  4.4243745 #>  [43]  4.7496679  2.0974114  2.7392128  4.5135190  2.7730292  3.1200798 #>  [49]  2.7923983  2.4138013  4.5699212  4.5719286  0.7985220  1.0197147 #>  [55]  3.5951921  2.8275037  4.5476347  3.3280893  3.6705805  2.8785254 #>  [61]  6.7006236  1.5374820  1.2341384  2.6680193  2.7916082  5.3360892 #>  [67] -0.2466384  5.0882917  1.9183955  2.9068708  5.0615714  5.6398780 #>  [73]  1.1183529  1.6471065  5.3397798  3.8092044  3.4540926  1.2882773 #>  [79]  1.9441636  2.3991209  5.9633846  5.1459914  3.5421044  6.5684994 #>  [85]  1.6638710  2.6644894  3.1831984  2.6593735  2.0910804  4.8734370 #>  [91]  1.8225112  4.0398150  2.8298920  3.1629248  2.0121100  3.8578668 #>  [97]  0.8822519  3.6211117  4.9356237  6.4689079"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>      cd45   cd38   cd34    cd19 cluster_id .flowsom_metacluster #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>      <chr>                #>  1 -0.443  1.22  -0.322  0.477  z          1                    #>  2  0.342  0.282  0.616  1.37   z          1                    #>  3 -1.67  -1.54   0.615 -0.475  l          2                    #>  4 -1.53  -0.707  0.280 -1.11   a          1                    #>  5 -0.539 -0.923 -0.239  0.145  w          1                    #>  6  1.19  -0.295 -0.661  0.493  f          3                    #>  7 -0.418 -0.110 -0.557 -1.10   z          1                    #>  8 -0.315  0.803 -2.72   0.0648 m          4                    #>  9 -0.846  0.127  0.117 -0.162  f          3                    #> 10 -0.669  2.21  -0.608 -0.494  o          1                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>      cd45   cd38   cd34    cd19 cluster_id .phenograph_metacluster #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>      <chr>                   #>  1 -0.443  1.22  -0.322  0.477  z          1                       #>  2  0.342  0.282  0.616  1.37   z          1                       #>  3 -1.67  -1.54   0.615 -0.475  l          3                       #>  4 -1.53  -0.707  0.280 -1.11   a          1                       #>  5 -0.539 -0.923 -0.239  0.145  w          2                       #>  6  1.19  -0.295 -0.661  0.493  f          4                       #>  7 -0.418 -0.110 -0.557 -1.10   z          1                       #>  8 -0.315  0.803 -2.72   0.0648 m          3                       #>  9 -0.846  0.127  0.117 -0.162  f          4                       #> 10 -0.669  2.21  -0.608 -0.494  o          1                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 1                      #>  2 1                      #>  3 5                      #>  4 2                      #>  5 1                      #>  6 1                      #>  7 1                      #>  8 5                      #>  9 2                      #> 10 7                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 3                    #>  2 4                    #>  3 3                    #>  4 4                    #>  5 4                    #>  6 3                    #>  7 4                    #>  8 2                    #>  9 4                    #> 10 1                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 2                    #>  2 1                    #>  3 1                    #>  4 1                    #>  5 1                    #>  6 2                    #>  7 1                    #>  8 4                    #>  9 1                    #> 10 2                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 10                        #>  2 5                         #>  3 3                         #>  4 6                         #>  5 8                         #>  6 7                         #>  7 7                         #>  8 7                         #>  9 2                         #> 10 3                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 3                   #>  2 8                   #>  3 9                   #>  4 2                   #>  5 5                   #>  6 3                   #>  7 8                   #>  8 2                   #>  9 4                   #> 10 7                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 2                       #>  2 1                       #>  3 3                       #>  4 1                       #>  5 1                       #>  6 2                       #>  7 1                       #>  8 1                       #>  9 3                       #> 10 2                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1  3.57 #>  2  2.35 #>  3  4.91 #>  4  4.72 #>  5  2.93 #>  6  1.97 #>  7  3.57 #>  8  3.52 #>  9  5.53 #> 10  2.48 #> 11  2.21 #> 12  3.35 #> 13  2.38 #> 14  2.91 #> 15  3.89 #> 16  3.45 #> 17  5.20 #> 18  5.53 #> 19  3.45 #> 20  3.69"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>       cd45    cd38    cd34   cd19   .pc1    .pc2    .pc3    .pc4 #>      <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl> #>  1 -0.435  -1.61    0.636   0.405  1.04   0.0683 -1.27    0.666  #>  2 -1.43   -1.12    0.532   0.673  0.138 -0.144  -1.95    0.503  #>  3 -0.506  -0.435  -0.170  -0.587 -0.203  0.702  -0.453   0.0480 #>  4  1.38   -0.210   0.971  -0.444  1.41  -0.0798  0.697  -0.790  #>  5 -0.755   0.0102 -0.913  -1.88  -1.05   1.85   -0.0182 -0.250  #>  6  1.45   -0.217   0.0959  1.06   0.835 -1.07    0.949   0.387  #>  7 -0.164   0.0759  0.638   0.248  0.172 -0.426  -0.459  -0.510  #>  8 -0.0347 -1.10   -1.07    1.47  -0.198 -0.565  -0.135   1.90   #>  9 -0.528   0.557  -3.12    0.487 -2.77   0.297   1.04    1.80   #> 10  0.520  -0.244   0.676  -2.51   0.837  1.83    0.352  -1.38   #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>       cd45    cd38    cd34   cd19 .tsne1 .tsne2 #>      <dbl>   <dbl>   <dbl>  <dbl>  <dbl>  <dbl> #>  1 -0.435  -1.61    0.636   0.405 -2.95   3.44  #>  2 -1.43   -1.12    0.532   0.673 -2.36   4.03  #>  3 -0.506  -0.435  -0.170  -0.587 -0.234  2.25  #>  4  1.38   -0.210   0.971  -0.444 -3.05  -0.949 #>  5 -0.755   0.0102 -0.913  -1.88   0.443  3.37  #>  6  1.45   -0.217   0.0959  1.06   2.10  -3.11  #>  7 -0.164   0.0759  0.638   0.248 -0.676 -0.522 #>  8 -0.0347 -1.10   -1.07    1.47   0.142 -3.74  #>  9 -0.528   0.557  -3.12    0.487  4.06   1.46  #> 10  0.520  -0.244   0.676  -2.51  -3.85   1.09  #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>       cd45    cd38    cd34   cd19 .umap1 .umap2 #>      <dbl>   <dbl>   <dbl>  <dbl>  <dbl>  <dbl> #>  1 -0.435  -1.61    0.636   0.405  2.01   4.48  #>  2 -1.43   -1.12    0.532   0.673  2.85   4.72  #>  3 -0.506  -0.435  -0.170  -0.587  1.76  -1.98  #>  4  1.38   -0.210   0.971  -0.444  2.21   2.25  #>  5 -0.755   0.0102 -0.913  -1.88   2.20  -2.82  #>  6  1.45   -0.217   0.0959  1.06  -3.10  -1.22  #>  7 -0.164   0.0759  0.638   0.248  0.942 -0.870 #>  8 -0.0347 -1.10   -1.07    1.47  -4.01  -0.354 #>  9 -0.528   0.557  -3.12    0.487 -0.849 -0.123 #> 10  0.520  -0.244   0.676  -2.51   2.54   0.216 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>       .pc1   .pc2 #>      <dbl>  <dbl> #>  1 -0.489   0.432 #>  2 -0.486  -0.514 #>  3  0.422  -0.325 #>  4 -0.565   1.28  #>  5  1.55   -2.16  #>  6  0.664   0.406 #>  7 -1.20   -0.136 #>  8  0.518   0.481 #>  9 -0.0566  0.370 #> 10  0.739  -1.34  #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1     PC2      PC3       PC4 #>     <dbl>   <dbl>    <dbl>     <dbl> #>  1 -0.737  0.656  -0.752   -0.199    #>  2 -0.938  0.936  -0.101   -0.158    #>  3  0.290 -0.395  -0.00400 -0.517    #>  4 -0.157 -0.421  -0.593    1.12     #>  5 -1.31   1.01    0.753   -0.205    #>  6 -0.617 -2.82    0.273   -0.925    #>  7 -0.404 -0.134   0.271    0.228    #>  8  0.929 -0.0137  0.839    0.000129 #>  9  0.312  2.42    1.67    -0.0232   #> 10 -1.89   2.14   -1.09     0.0440   #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  0.491   4.86 #>  2  5.76    1.73 #>  3  3.00   -4.96 #>  4 -2.56   -4.14 #>  5 -4.99   -4.90 #>  6  2.02   -3.28 #>  7 -1.76   -7.35 #>  8  1.36   -6.55 #>  9 -5.08    4.51 #> 10  4.82    7.52 #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  3.22  -5.14  #>  2  5.77  -8.41  #>  3  0.381  2.88  #>  4 -6.70   3.60  #>  5 -5.71   7.82  #>  6 -3.06   0.412 #>  7 -7.00   6.05  #>  8  1.10   3.51  #>  9  4.94   2.74  #> 10 -5.72  -5.85  #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>    .umap1  .umap2 #>     <dbl>   <dbl> #>  1 -2.83  -2.74   #>  2  0.581 -1.52   #>  3  3.81   0.0325 #>  4 -3.04   0.595  #>  5  0.267 -0.993  #>  6 -3.85  -0.836  #>  7 -1.89   1.52   #>  8  5.78  -0.180  #>  9  3.51  -1.97   #> 10 -2.14   0.703  #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  -7.59 -1.06  #>  2  -1.97  5.26  #>  3  -1.46 -4.92  #>  4  -4.09  0.256 #>  5  -2.76  4.66  #>  6  -5.98 -1.23  #>  7   3.30 -0.344 #>  8   7.05  2.68  #>  9   1.88  7.55  #> 10  -3.34  1.99  #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>       UMAP1  UMAP2 #>       <dbl>  <dbl> #>  1 -0.114    3.45  #>  2  2.39    -2.68  #>  3  2.72    -0.965 #>  4  1.07     3.15  #>  5  2.33     1.42  #>  6 -4.80    -1.13  #>  7 -5.03    -0.379 #>  8 -0.114    2.93  #>  9 -0.00782 -3.22  #> 10  2.49     2.88  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            1   #>  2            1   #>  3            1   #>  4            1   #>  5            1   #>  6            1   #>  7            1   #>  8            1   #>  9            0.6 #> 10            1   #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.375 #>  2          0.125 #>  3          0.125 #>  4          0.375 #>  5          0.25  #>  6          0.75  #>  7          0.25  #>  8          0.25  #>  9          0.25  #> 10          0.375 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            0.9 #>  2            0.3 #>  3            0   #>  4            1   #>  5            0.1 #>  6            1   #>  7            0.4 #>  8            0.1 #>  9            0   #> 10            1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/39]> Bootstrap01 #>  2 <split [100/35]> Bootstrap02 #>  3 <split [100/35]> Bootstrap03 #>  4 <split [100/39]> Bootstrap04 #>  5 <split [100/34]> Bootstrap05 #>  6 <split [100/33]> Bootstrap06 #>  7 <split [100/38]> Bootstrap07 #>  8 <split [100/33]> Bootstrap08 #>  9 <split [100/39]> Bootstrap09 #> 10 <split [100/41]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)      3.61   #> 2 pstat5           1.16   #> 3 cd45             0.749  #> 4 cd34             0.0891  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0.25 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 2 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5      -0.0512     #> 2 (Intercept)  0.00000244  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 3 × 2 #>   feature coefficient #>   <chr>         <dbl> #> 1 cd45         -0.314 #> 2 cd34          0.238 #> 3 pstat5       -0.145"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38    cd34   cd19 .upsample_cluster #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>             #>  1 -0.814  0.0914  0.0564 -0.667 a                 #>  2 -0.450 -1.16    0.0757  1.25  a                 #>  3 -0.459  0.707  -0.119   1.27  a                 #>  4 -0.973 -0.875  -0.715   0.809 a                 #>  5 -0.994  1.14   -0.691  -1.24  b                 #>  6  0.471 -1.62    0.389   0.621 b                 #>  7  0.490 -0.331   1.02   -0.268 a                 #>  8  0.395  0.234  -0.0729  1.65  b                 #>  9 -0.789  0.679   0.464  -1.01  b                 #> 10  0.199 -1.54   -0.116   0.434 b                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38    cd34   cd19 .upsample_cluster #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>             #>  1 -0.814  0.0914  0.0564 -0.667 a                 #>  2 -0.450 -1.16    0.0757  1.25  b                 #>  3 -0.459  0.707  -0.119   1.27  b                 #>  4 -0.973 -0.875  -0.715   0.809 a                 #>  5 -0.994  1.14   -0.691  -1.24  a                 #>  6  0.471 -1.62    0.389   0.621 b                 #>  7  0.490 -0.331   1.02   -0.268 b                 #>  8  0.395  0.234  -0.0729  1.65  b                 #>  9 -0.789  0.679   0.464  -1.01  b                 #> 10  0.199 -1.54   -0.116   0.434 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 b                 #>  4 b                 #>  5 b                 #>  6 b                 #>  7 a                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 b                 #>  4 b                 #>  5 a                 #>  6 b                 #>  7 a                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 a                 #>  4 a                 #>  5 a                 #>  6 b                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 a                 #>  4 a                 #>  5 b                 #>  6 b                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0995","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.5","title":"tidytof 0.99.5","text":"NEW FEATURES Update dependencies. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0994","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.4","title":"tidytof 0.99.4","text":"NEW FEATURES Update tests. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0993","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.3","title":"tidytof 0.99.3","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992-1","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Removed unnecessary files caused build fail. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
