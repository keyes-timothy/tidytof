[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.35     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.9        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.3.0        bslib_0.6.2       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.3              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [89] tidyselect_1.2.1              Biostrings_2.70.3             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] readr_2.1.5                   blob_1.2.4                    #> [119] bitops_1.0-7                  listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #> 1   0.224  -9.76 #> 2  -4.58  -13.5  #> 3  -7.48  -35.4  #> 4 -11.2   -18.2  #> 5  -0.978 -12.8  #> 6  -7.19  -24.6 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  -9.57   2.30 #>  2 -12.5    5.25 #>  3 -13.8   30.0  #>  4 -18.7   12.1  #>  5 -11.9    2.54 #>  6 -15.1   20.1  #>  7 -11.2   10.9  #>  8 -13.3   23.4  #>  9 -14.7   16.8  #> 10  -5.65   5.62 #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1  .umap2 #>     <dbl>   <dbl> #>  1 -5.65  -5.43   #>  2 -5.87  -4.25   #>  3 -4.75  -2.44   #>  4 -2.89   1.62   #>  5 -5.49  -5.35   #>  6 -0.455  2.30   #>  7 -5.11  -5.04   #>  8 -1.99   0.691  #>  9 -6.76  -0.0743 #> 10 -7.27  -5.62   #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         stringr_1.5.1       #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [22] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [25] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [28] tweenr_2.0.3        irlba_2.3.5.1       parallel_4.3.3      #>  [31] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [34] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [37] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [40] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [43] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [46] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [49] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [52] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [55] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [58] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [61] Rtsne_0.17          future_1.33.1       desc_1.4.3          #>  [64] survival_3.5-8      polyclip_1.10-6     embed_1.1.4         #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [73] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [76] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [79] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [82] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [85] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [88] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [91] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [94] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [97] lava_1.8.0          uwot_0.1.16         gtable_0.3.4        #> [100] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [103] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [106] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [109] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.2         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.2     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.3        timechange_0.3.0    tidyselect_1.2.1    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [94] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.3              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 philentropy_0.8.0             #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     emdist_0.3-3                  #>  [89] RProtoBufLib_2.14.1           tidyselect_1.2.1              #>  [91] Biostrings_2.70.3             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   ggplot2_3.5.0                 #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  scales_1.3.0                  #> [127] prodlim_2023.08.28            purrr_1.0.2                   #> [129] crayon_1.5.2                  rlang_1.1.3                   #> [131] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.1       bslib_0.6.2         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.2     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.3        #>  [49] timechange_0.3.0    tidyselect_1.2.1    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.1     tidyr_1.3.1         RProtoBufLib_2.14.1 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.9          #> [103] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  2.82   1.14 #> 2  229. -1.32  11.0  #> 3  293.  4.36   1.04 #> 4  431. -0.364 13.0  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.3              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  tidyr_1.3.1                   #>  [73] data.table_1.15.2             hms_1.1.3                     #>  [75] tidygraph_1.3.1               utf8_1.2.4                    #>  [77] XVector_0.42.0                ggrepel_0.9.5                 #>  [79] BiocVersion_3.18.1            foreach_1.5.2                 #>  [81] pillar_1.9.0                  stringr_1.5.1                 #>  [83] RcppHNSW_0.6.0                later_1.3.2                   #>  [85] splines_4.3.3                 tweenr_2.0.3                  #>  [87] lattice_0.22-5                survival_3.5-8                #>  [89] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [91] tidyselect_1.2.1              Biostrings_2.70.3             #>  [93] knitr_1.45                    gridExtra_2.3                 #>  [95] xfun_0.42                     graphlayouts_1.1.1            #>  [97] hardhat_1.3.1                 timeDate_4032.109             #>  [99] stringi_1.8.3                 yaml_2.3.8                    #> [101] evaluate_0.23                 codetools_0.2-19              #> [103] ggraph_2.2.1                  tibble_3.2.1                  #> [105] BiocManager_1.30.22           cli_3.6.2                     #> [107] rpart_4.1.23                  xtable_1.8-4                  #> [109] systemfonts_1.0.6             munsell_0.5.0                 #> [111] jquerylib_0.1.4               Rcpp_1.0.12                   #> [113] globals_0.16.3                png_0.1-8                     #> [115] parallel_4.3.3                ellipsis_0.3.2                #> [117] pkgdown_2.0.7                 gower_1.0.1                   #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  ggridges_0.5.6                #> [127] scales_1.3.0                  prodlim_2023.08.28            #> [129] purrr_1.0.2                   crayon_1.5.2                  #> [131] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [97] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.3 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T, Davis K, Nolan G (2024). tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis. doi:10.18129/B9.bioc.tidytof, https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.3, http://www.bioconductor.org/packages/tidytof. Keyes, J. T, Koladiya, Abhishek, Lo, Yu-Chen, Nolan, P. G, Davis, L. K (2023). “tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis.” Bioinformatics Advances, 3(1). doi:10.1093/bioadv/vbad071, https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984.","code":"@Manual{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {Timothy Keyes and Kara Davis and Garry Nolan},   year = {2024},   url = {http://www.bioconductor.org/packages/tidytof},   note = {https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.3},   doi = {10.18129/B9.bioc.tidytof}, } @Article{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {{Keyes} and Timothy J. and {Koladiya} and {Abhishek} and {Lo} and {Yu-Chen} and {Nolan} and Garry P. and {Davis} and Kara L.},   year = {2023},   journal = {Bioinformatics Advances},   volume = {3},   number = {1},   doi = {10.1093/bioadv/vbad071},   url = {https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"See documentation object's original package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"# See examples in each object's original package NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `{cluster_col}_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_{cluster_name}\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 17              #>  2 16              #>  3 19              #>  4 2               #>  5 8               #>  6 1               #>  7 6               #>  8 13              #>  9 4               #> 10 8               #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 11              #>  2 6               #>  3 7               #>  4 1               #>  5 19              #>  6 17              #>  7 16              #>  8 12              #>  9 6               #> 10 19              #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 1                   #>  2 8                   #>  3 1                   #>  4 4                   #>  5 9                   #>  6 6                   #>  7 11                  #>  8 10                  #>  9 1                   #> 10 2                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 12                  #>  2 11                  #>  3 10                  #>  4 1                   #>  5 1                   #>  6 2                   #>  7 7                   #>  8 4                   #>  9 10                  #> 10 1                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>       cd45    cd38    cd34    cd19 cluster_id #>      <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1  0.625  -1.74    1.57   -1.23   l          #>  2 -1.25   -1.26    0.309  -2.21   h          #>  3 -0.630  -0.888   0.0650  0.594  t          #>  4  0.677   1.10    0.277   1.57   c          #>  5 -1.18    1.36    0.163   0.693  j          #>  6 -0.893   0.297   0.104   0.313  h          #>  7  0.0880 -0.0574 -1.25   -0.0471 e          #>  8 -0.492  -1.54    0.843   1.72   h          #>  9 -0.671   2.44   -1.24   -1.52   u          #> 10  0.754  -0.151  -0.713  -1.14   p          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>      cd45     cd38    cd34   cd19 cluster_id #>     <dbl>    <dbl>   <dbl>  <dbl> <chr>      #>  1  0.535  0.00473 -2.39   -0.779 f          #>  2 -0.936  2.21    -0.0377 -1.82  y          #>  3  0.236  0.838   -0.583  -1.43  w          #>  4 -2.38   1.77     0.0560 -2.49  r          #>  5  0.681  2.00     1.19   -0.131 x          #>  6  1.65   0.498   -1.03    1.32  a          #>  7 -0.689  3.48     1.03    0.336 q          #>  8  0.861 -1.61    -0.994   0.194 c          #>  9 -0.460  0.0989   0.799   0.851 g          #> 10 -2.23  -1.51     1.63   -0.479 h          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 97 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1 -0.0975 -0.367 -0.969  1.80  z          #>  2  1.08    1.06  -1.30   0.403 z          #>  3  1.29    1.12  -0.459  2.23  k          #>  4 -0.0380 -0.324 -0.514 -0.149 f          #>  5  0.234  -0.571  1.56  -0.896 q          #>  6 -2.51   -1.09  -0.262  0.800 v          #>  7 -0.972   0.939 -0.731  1.09  h          #>  8 -2.92    0.381  0.427 -0.240 j          #>  9 -1.73   -1.73   0.146  1.54  c          #> 10 -0.764  -1.05   0.769 -1.19  y          #> # ℹ 87 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>      cd45    cd38   cd34   cd19 cluster_id #>     <dbl>   <dbl>  <dbl>  <dbl> <chr>      #>  1 -0.126  0.0672  1.02   0.866 w          #>  2 -1.28  -0.423  -0.471  1.51  d          #>  3  1.01   1.17    1.06   0.283 x          #>  4 -2.05  -0.615   1.16  -0.274 m          #>  5  0.396 -0.0849 -0.457  0.102 p          #>  6 -1.11   0.172   0.736 -0.403 d          #>  7 -1.39  -2.01   -1.14   0.176 w          #>  8  0.639 -0.419  -1.02   0.365 q          #>  9  0.200 -1.04   -0.567 -0.372 q          #> 10 -0.230 -0.791  -0.701 -0.911 f          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>      cd45    cd38   cd34    cd19 cluster_id #>     <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1 -0.126  0.0672  1.02   0.866  w          #>  2  1.01   1.17    1.06   0.283  x          #>  3 -0.107 -1.21   -1.68   0.645  z          #>  4 -2.05  -0.615   1.16  -0.274  m          #>  5  0.655  1.01   -0.853  0.0343 a          #>  6 -1.07   0.855  -0.798 -0.544  i          #>  7 -1.39  -2.01   -1.14   0.176  w          #>  8 -0.589 -1.01    1.08   0.264  z          #>  9  0.200 -1.04   -0.567 -0.372  q          #> 10  1.39   0.916  -0.542  0.369  b          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 483 × 4 #>      cd45   cd38   cd34    cd19 #>     <dbl>  <dbl>  <dbl>   <dbl> #>  1  1.45  -0.950 -1.06  -0.208  #>  2 -0.238  0.982 -2.22   0.134  #>  3 -0.209  0.181 -0.135 -0.0840 #>  4  0.286 -0.373  1.18  -0.0262 #>  5  0.150  1.97   0.587  0.734  #>  6 -0.958  0.805 -0.639  1.51   #>  7  0.406  1.01   0.684  1.67   #>  8  0.785 -0.643 -1.46   0.321  #>  9  0.273 -0.218 -0.461  1.81   #> 10  0.849 -1.72  -0.364 -0.0554 #> # ℹ 473 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 213 × 4 #>       cd45    cd38   cd34   cd19 #>      <dbl>   <dbl>  <dbl>  <dbl> #>  1 -0.0394  0.298  -1.19   0.183 #>  2  0.419   1.74   -1.81   0.889 #>  3  0.785  -0.643  -1.46   0.321 #>  4  0.0398 -0.358   1.05   0.924 #>  5  0.0422  1.87   -0.426 -0.118 #>  6 -0.619   0.279  -0.360  0.363 #>  7  1.61    0.0717  0.401 -2.06  #>  8 -0.458   2.43    0.180 -0.114 #>  9 -1.26   -1.30   -1.11  -0.565 #> 10  1.53    0.546  -0.934 -0.127 #> # ℹ 203 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 215 × 4 #>       cd45    cd38   cd34   cd19 #>      <dbl>   <dbl>  <dbl>  <dbl> #>  1 -0.0394  0.298  -1.19   0.183 #>  2  0.314   1.02   -1.14  -1.12  #>  3 -1.91    1.39   -0.982 -0.707 #>  4  0.0398 -0.358   1.05   0.924 #>  5  0.356  -0.781   0.116 -0.565 #>  6 -1.26   -1.30   -1.11  -0.565 #>  7 -2.16   -0.461  -1.01  -2.01  #>  8  0.0743 -0.0657  1.12   0.368 #>  9 -0.198  -0.245   0.561  0.479 #> 10 -1.82   -0.735  -0.787  0.499 #> # ℹ 205 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>       cd45    cd38    cd34   cd19 cluster_id #>      <dbl>   <dbl>   <dbl>  <dbl> <chr>      #>  1  1.95   -0.0523 -0.728  -0.640 p          #>  2  1.10   -0.735   1.73    0.199 b          #>  3 -0.200   1.46   -0.257   0.447 m          #>  4  0.0412 -0.340   0.0999  0.421 w          #>  5  0.435  -0.489   0.762  -0.235 h          #>  6 -1.46    1.12    1.64   -1.56  y          #>  7  1.60   -0.692   1.18    0.486 d          #>  8  0.194  -1.97    0.933   0.701 m          #>  9  0.853   0.599  -0.138  -0.277 e          #> 10  0.207  -0.348   0.279  -0.976 z          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 89 × 5 #>       cd45   cd38    cd34    cd19 cluster_id #>      <dbl>  <dbl>   <dbl>   <dbl> <chr>      #>  1 -0.195   1.59  -1.11    0.279  a          #>  2  0.143  -0.678  1.29   -0.0717 a          #>  3 -1.49    1.51  -1.01    0.839  a          #>  4  1.10   -0.735  1.73    0.199  b          #>  5  0.260   0.662 -1.71   -0.849  b          #>  6  0.834  -1.25   2.37   -1.66   b          #>  7 -1.28    0.720 -1.32   -1.55   b          #>  8 -0.0209  1.64  -1.40   -2.27   c          #>  9  1.96   -1.53  -0.0435 -0.927  c          #> 10  0.512  -0.307 -0.545   1.72   c          #> # ℹ 79 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>      cd45    cd38   cd34   cd19 .spade_density #>     <dbl>   <dbl>  <dbl>  <dbl>          <dbl> #>  1 -0.961 -1.83   -0.958 -1.94               1 #>  2 -0.442 -1.65   -1.02   1.39               1 #>  3 -1.06   0.877  -1.07  -1.32               1 #>  4  0.480  0.644  -0.204 -0.295              1 #>  5 -0.770  0.0642 -2.18   0.474              1 #>  6 -0.831  0.0398  0.259 -1.45               1 #>  7  0.445 -0.720   1.26  -0.486              1 #>  8  2.69   0.523   1.01   0.125              1 #>  9  0.766 -0.186  -0.341  1.08               1 #> 10  1.78  -0.0702 -0.160  0.378              1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38   cd34   cd19 .spade_density #>     <dbl>   <dbl>  <dbl>  <dbl>          <dbl> #>  1 -0.961 -1.83   -0.958 -1.94             0.2 #>  2 -0.442 -1.65   -1.02   1.39             0.1 #>  3 -1.06   0.877  -1.07  -1.32             0.4 #>  4  0.480  0.644  -0.204 -0.295            1   #>  5 -0.770  0.0642 -2.18   0.474            0.2 #>  6 -0.831  0.0398  0.259 -1.45             1   #>  7  0.445 -0.720   1.26  -0.486            1   #>  8  2.69   0.523   1.01   0.125            0.2 #>  9  0.766 -0.186  -0.341  1.08             1   #> 10  1.78  -0.0702 -0.160  0.378            1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby        -0.229       0.221     -0.0630      0.325      -0.0154 #> 2 mario         0.218       0.483      0.241      -0.0771     -0.0972 #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45    -0.229  #>  2 kirby   a          cd38     0.221  #>  3 kirby   a          cd34    -0.0630 #>  4 kirby   a          cd19     0.325  #>  5 kirby   b          cd45    -0.0154 #>  6 kirby   b          cd38     0.0414 #>  7 kirby   b          cd34     0.221  #>  8 kirby   b          cd19    -0.0903 #>  9 kirby   c          cd45    -0.111  #> 10 kirby   c          cd38    -0.573  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@n_emd` `stim_cd38@n_emd` `stim_cd34@n_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby                16.3              8.52              6.13 #> 2 mario                NA               NA                NA    #> # ℹ 101 more variables: `stim_cd19@n_emd` <dbl>, `stim_cd45@v_emd` <dbl>, #> #   `stim_cd38@v_emd` <dbl>, `stim_cd34@v_emd` <dbl>, `stim_cd19@v_emd` <dbl>, #> #   `stim_cd45@r_emd` <dbl>, `stim_cd38@r_emd` <dbl>, `stim_cd34@r_emd` <dbl>, #> #   `stim_cd19@r_emd` <dbl>, `stim_cd45@f_emd` <dbl>, `stim_cd38@f_emd` <dbl>, #> #   `stim_cd34@f_emd` <dbl>, `stim_cd19@f_emd` <dbl>, `stim_cd45@p_emd` <dbl>, #> #   `stim_cd38@p_emd` <dbl>, `stim_cd34@p_emd` <dbl>, `stim_cd19@p_emd` <dbl>, #> #   `stim_cd45@l_emd` <dbl>, `stim_cd38@l_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 n          cd45   stim        10.5  #>  2 n          cd38   stim         5.89 #>  3 n          cd34   stim         4.51 #>  4 n          cd19   stim         4.58 #>  5 v          cd45   stim         9.61 #>  6 v          cd38   stim        12.4  #>  7 v          cd34   stim         6.32 #>  8 v          cd19   stim         9.58 #>  9 r          cd45   stim         7.46 #> 10 r          cd38   stim         6.00 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0251   0.0209   0.0501   0.0355   0.0543   0.0355   0.0501 #> 2 mario     0.0499   0.0422   0.0326   0.0365   0.0288   0.0422   0.0480 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0251   0.0209   0.0501   0.0355   0.0543   0.0355   0.0501 #> 2 mario     0.0499   0.0422   0.0326   0.0365   0.0288   0.0422   0.0480 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@a_jsd` `stim_cd38@a_jsd` `stim_cd34@a_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                 0.7               0.9                 1 #> 2 kirby                NA                NA                  NA #> # ℹ 101 more variables: `stim_cd19@a_jsd` <dbl>, `stim_cd45@v_jsd` <dbl>, #> #   `stim_cd38@v_jsd` <dbl>, `stim_cd34@v_jsd` <dbl>, `stim_cd19@v_jsd` <dbl>, #> #   `stim_cd45@t_jsd` <dbl>, `stim_cd38@t_jsd` <dbl>, `stim_cd34@t_jsd` <dbl>, #> #   `stim_cd19@t_jsd` <dbl>, `stim_cd45@p_jsd` <dbl>, `stim_cd38@p_jsd` <dbl>, #> #   `stim_cd34@p_jsd` <dbl>, `stim_cd19@p_jsd` <dbl>, `stim_cd45@h_jsd` <dbl>, #> #   `stim_cd38@h_jsd` <dbl>, `stim_cd34@h_jsd` <dbl>, `stim_cd19@h_jsd` <dbl>, #> #   `stim_cd45@f_jsd` <dbl>, `stim_cd38@f_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 a          cd45   stim        0.667 #>  2 a          cd38   stim        0.778 #>  3 a          cd34   stim        0.944 #>  4 a          cd19   stim        0.868 #>  5 v          cd45   stim        0.676 #>  6 v          cd38   stim        0.913 #>  7 v          cd34   stim        0.764 #>  8 v          cd19   stim        0.687 #>  9 t          cd45   stim        0.747 #> 10 t          cd38   stim        0.693 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0351   0.0429   0.0292   0.0390   0.0585   0.0487   0.0331 #> 2 mario     0.0349   0.0431   0.0349   0.0472   0.0390   0.0472   0.0349 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0351 #>  2 kirby   b          0.0429 #>  3 kirby   c          0.0292 #>  4 kirby   d          0.0390 #>  5 kirby   e          0.0585 #>  6 kirby   f          0.0487 #>  7 kirby   g          0.0331 #>  8 kirby   h          0.0526 #>  9 kirby   i          0.0292 #> 10 kirby   j          0.0370 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby                    0             0                  0.0526 #> 2 mario                    0             0.0476             0      #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0      #>  2 kirby   a          cd38    0      #>  3 kirby   a          cd34    0.0526 #>  4 kirby   a          cd19    0.0526 #>  5 kirby   b          cd45    0.0625 #>  6 kirby   b          cd38    0.125  #>  7 kirby   b          cd34    0.0625 #>  8 kirby   b          cd19    0      #>  9 kirby   c          cd45    0      #> 10 kirby   c          cd38    0.0526 #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  592  383  479  543  221   93  874   32  452   807 #>    [2,]  947  101   26  686  389  835  522  156  607   790 #>    [3,]  661  118  616  872  217  252  700  961  528   219 #>    [4,]   15  457   12  170  784  137  541  292  831   380 #>    [5,]  702  354  108  566  893  692   34  626  769   181 #>    [6,]  807  268  708  458  112  730  337   20  713   129 #>    [7,]  324  672   94  746  332  846  586  343  462   513 #>    [8,]  395   70  112  422  408  681  659  207  355   936 #>    [9,]  256  430  486  952  793  464  991  530  448   782 #>   [10,]  134  597  303  376  678   77  808  668  199   877 #>   [11,]  381  707  233  595  244  459  663  153  655   747 #>   [12,]   15  457  137    4  292  215  492  485  670    71 #>   [13,]  896  511  293  510  893  791  769  702  326   806 #>   [14,]  306  414  251  752  568  717  932  119  397   270 #>   [15,]   12    4  457  137  292  215  492  784  541   170 #>   [16,]  627  335  656   87  881  416  425  386  989   898 #>   [17,]  406  490  506  970  229  639  813  308  620   314 #>   [18,]  925  616  226  756  277   50  121  762  321   694 #>   [19,]  274  923  252  217   51  218  720  610  869   377 #>   [20,]  268  443  708  856  231  337  408  140  483    65 #>   [21,]  860  180  811  748  531  372  920  997  371   559 #>   [22,]  255  213  103  717  358  309  251  306   14   710 #>   [23,]  879  110  696  452  468  973  227  479  185   786 #>   [24,]  319  945  943  206  382  423  688  179  145   918 #>   [25,]  698  900  646   79  122  113  320  734  364   544 #>   [26,]  389  101    2  947  156  686   60  964  694   643 #>   [27,]  396  125  192  516  548   95  402  747  673   910 #>   [28,]  348   74  985  157  713  778   53  424  591   779 #>   [29,]  515  164    8  395   70  681  444  207  322   355 #>   [30,]  403  120  629  301  750  819  311  582  411   276 #>   [31,]  833  533  658  450  115  208   85  599  774   809 #>   [32,]  263  221  543  479  191  874  781  970  468     1 #>   [33,]  280  968  278  884  654  761  892   96  259   258 #>   [34,]  692  867  566  498  905  897  108   73    5   541 #>   [35,]  972  802  784  921  211  945  695  179  537   206 #>   [36,]  177  799  485   64  206  924  319  804  688   470 #>   [37,]  365  580  557  400  494   63  990  891  868   351 #>   [38,]  924  369  212  391  432  943  728  170  541   740 #>   [39,]   62  440  229  298  130  490  620  506  333   587 #>   [40,]  868  265  739  578  570  979  817   59  500   662 #>   [41,]  818  504  556  155  502  579  523  417  916   491 #>   [42,]  549  944  588  994  596  150  976  433  144   384 #>   [43,]  496  250  633  781  774  664  841  263  683   757 #>   [44,]  135  222  590  385  841  928  664  209  221   970 #>   [45,]  535  885    3  118   97  109  252  872  249   628 #>   [46,]  114  599  397  633  617  745  461  214  190   710 #>   [47,]   81  398  427  836  236  659  547  621  207   878 #>   [48,]  939  299   98  794  111  805  755  623  338   421 #>   [49,]  822  733  730  139  660  936  816  713  424   112 #>   [50,]  558  226  121  925  694  762  829  616   18    60 #>   [51,]  156  726  923  447   19  442  281  610  709   725 #>   [52,]  826  649  510  497  293  524  146  972  304   791 #>   [53,]  939  779  161  550  602  755  828  348  805   394 #>   [54,]  223  328  780  474  429  643  506  333  209   584 #>   [55,]  136  782  641  457  141  840  667  950  137   991 #>   [56,]   85  658  651  608  568  624  833  362  932   766 #>   [57,]  771  480  555  350  423  266  930  636  724   758 #>   [58,]  538  585  917  322  783  690  288  331  785   240 #>   [59,]  637  751   76   98  979   40  709  607  281   327 #>   [60,]  829  558  101  521   26  321  694   50  128   947 #>   [61,]  264  241  994  305  561  583  972  974  549   596 #>   [62,]  440   39  229  333  130  490  536  864  314   197 #>   [63,]  400  216  155  891    9  351   55  782  641   530 #>   [64,]  177  796  812   36  470  294  419  688  980   407 #>   [65,]  248  465  125  443  960  475  296  402   20   231 #>   [66,]  619  660  592  310    1  383  250  730  139   841 #>   [67,]  167  171  824  338  552  142  623  421  761   982 #>   [68,]  964  493  389   26  253  130  409    2  156   788 #>   [69,]  690   78  204  283  503  187   86  963  817   794 #>   [70,]    8  936  395  908  422  112   29  659  733   207 #>   [71,]  404  722  492  215  144  950  235  524  598   431 #>   [72,]  141  136  627  472   55  891  168  990  957    75 #>   [73,]  541  100  581  867  905  417   34  359  146   380 #>   [74,]   28  985  348  444  713  157  907  395  779   164 #>   [75,]  152  472  843  352  141  614  834  136   72   453 #>   [76,]  607  835  637  709  522  374   59  384  291   915 #>   [77,]  877  935  376  914   10  678  303  668  597   481 #>   [78,]  503  979   69  963  283   86  880  603  187   653 #>   [79,]  323  646  565  734  330   25  698  995  900   364 #>   [80,]  347  313  353  553  563  693  123  426  859   855 #>   [81,]   47  829  249  621  603  558  118  953  121   880 #>   [82,]  148  959  958  703  842   38  359  131  859   629 #>   [83,]  302  183  304  699  497   52  843  202  649   152 #>   [84,]  246  661  659  746  422  765  756  129  334   559 #>   [85,]   56  658  651  568  932  397  624  608  766   833 #>   [86,]   97  880   78  628  187  603  249   69  118   207 #>   [87,]  650  980  729  851   64   16    4  419  453   141 #>   [88,]   56  132  290  833  651   85   31  658  196   999 #>   [89,]  441  367  308  895  126  507  488  772  273   830 #>   [90,]  732  975  965  854  176  344  312  334  628   765 #>   [91,]  420  134  376  514  877  128  287  726  519   594 #>   [92,]   95  685  887  759  299  793  396  460  938    27 #>   [93,]  874  525  244  543  166  663  912  383    1   807 #>   [94,]  332    7  343  262  672  324  846  756  586   746 #>   [95,]   92  759  299   27  516  460  396  125  378   192 #>   [96,]  884  228  138  259  539  992  194  654  178   356 #>   [97,]  118  249   86  661  880  885   81  872  207   603 #>   [98,]   48   59  338  508  548  283  111  402  396   637 #>   [99,]  954  205  791  235  902  806  144  967  524   950 #>  [100,]  417   73  803  359  491  520  546  123  148   959 #>  [101,]   26    2   60  389  947  150  861  156  321   521 #>  [102,]  117  601  187   69  164  805  444  602  690   481 #>  [103,]  358   22  225  255  534  182  234  213  415   717 #>  [104,] 1000  143  911  626  537  264  940  695   35   382 #>  [105,]  362  312   56  435  437  975   85  833  269   331 #>  [106,]  170  959  484  719  670  391  729  491  916   477 #>  [107,]  832  536  333  314  540  277  229  506   62   762 #>  [108,]  566    5  702  893  354   34  769  692  927   626 #>  [109,]  687   19  377  274  720  252  535  174  217    45 #>  [110,]  696  883  786  912  166  227  631  383  479   452 #>  [111,]  465  402  418  204  860  299  547  960  748   476 #>  [112,]  713  733  730    6  424    8  395  936  822    47 #>  [113,]  646   25  993  122  698  900   79  323  320   195 #>  [114,]  633   46  589  745  329  397  115  781  214   267 #>  [115,]  589  114  363  450  809  774   31  955  329   633 #>  [116,]  285  570  476  500  960  180  685  349  949   530 #>  [117,]  102   69  187  805  283  601  935  794  508   503 #>  [118,]   97  249  661  872   81    3  953  880  252   659 #>  [119,]  251  630  938  851  414   14  477  106  804   484 #>  [120,]  819  615  736  311  213  309   30  182  411    22 #>  [121,]  925  226  756   50  398  558  129   18  246    81 #>  [122,]  320  900  646  224  195  698  704   25  679   942 #>  [123,]  347  498  958   80  100  867   82  606  553   487 #>  [124,]  988  955  757  984  345  350  534  329  771   683 #>  [125,]   27  396  516   65   95  402  296  192  460   747 #>  [126,]  308   89  209  203  441  848  367  186  199   507 #>  [127,]  722  919  215  492  428  994  588  499  404    71 #>  [128,]  514  726  607  829   60  947  522   76  156   709 #>  [129,]  246  398  343  731  483  436  121  236  268   231 #>  [130,]   62  298   39  788  440  815  964  333  389   229 #>  [131,]  184  958  173  373  577  792  703  336  604   842 #>  [132,]  290  386  495  335  568  306  416  196  651   937 #>  [133,]  865  107  928  434  250  841  832  135  540   536 #>  [134,]   10  597  376  514   91  678  420  668  429   877 #>  [135,]   44  928  590  385  222  841  970  209  664   536 #>  [136,]  472   55  141  667  152  453  292  990  137   318 #>  [137,]  292   12   15  457  950  485   71  598  492   215 #>  [138,]  438  194   96  992  356  889  539  884  178   341 #>  [139,]  310  619   49  660  489   44  705  135  822   730 #>  [140,]  443  408  856  708  798   20  681  390  475   268 #>  [141,]  136  627   72  453  472   55  957   87  650   152 #>  [142,]  808  665  471  776  303   67  824  507  761   282 #>  [143,]  911  561  181  264   61  815 1000  626  994   871 #>  [144,]  549  404   71  598  235  997  994  431  318    99 #>  [145,]  688  787  206  652  319  921  796  382  177   899 #>  [146,]  784  695  701  260  972  497    4   35  876   541 #>  [147,]  451  639  838  644  714  273  529   17  210   620 #>  [148,]   82  959  359  520  170  803  983  432   38   676 #>  [149,]  842  792  703  567  373  875  958  910  772   760 #>  [150,]  861  384  725  610  976  101  709  588  545   944 #>  [151,]  529  554  780  266  758  569  130  223  933   243 #>  [152,]  472   75  614  352  136  843  497  453  834   304 #>  [153,]  262  707  545  459  595  291   94  777  381   332 #>  [154,]  413  198  611  425  971  699  721  453  881   335 #>  [155,]  641  417  216  491   41   63  579  782  426   818 #>  [156,]   26  101   51  947    2  389  610   60  725   709 #>  [157,]  778  471  424   28  348  985  863  713  807   439 #>  [158,]  458  779  956  360  390  208  789  550  617   907 #>  [159,]  307  850  760  857  191  392  401  842  582   149 #>  [160,]  837  712  904  399  576  537  701  695  831   380 #>  [161,]  473  755  828   53  550  759  394   95  337   360 #>  [162,]  449  593  918  888  589  634  363  532  966   329 #>  [163,]  862  811  920  372  475  998  230  418   21   798 #>  [164,]  395  602  444  805  681    8  794   29   53   355 #>  [165,]  987  202  723  574  906  806  720  205  511   442 #>  [166,]   93  912  778  696  874  439  525  473  543   471 #>  [167,]   67  635  171  982  552  351  824  338  512   810 #>  [168,]  627   72  898  141   16  881  572  505  957   425 #>  [169,]  853  504  982  735  563  767  579  351  818   916 #>  [170,]  359  106  959    4  541   38  148  391   15    12 #>  [171,]  552   67  810  338  486  623  508  887  394   512 #>  [172,]  971  682  980  689  645  576  721  650  812   495 #>  [173,]  361  184  577  370  131  258  892  792  703   958 #>  [174,]  377  614  549  352  948  741  241   42  596   574 #>  [175,]  845  977  882  998  995  407  920  470  946   894 #>  [176,]  765  533  542  344  731  975   84  330  437   246 #>  [177,]   36   64  688  206  921  796  319  812  470   799 #>  [178,]  764  691  259  138   96  820  289  889  438   539 #>  [179,]  211  802  945  206  215  492  319  921  127   972 #>  [180,]  476  960   21  465  402  500  811  116  860   531 #>  [181,]  499  815  728  260  740  212  143  640  127   976 #>  [182,]  411  615  358  631  103  120  710  819   22   534 #>  [183,]  699  302  581  304   83  453  497  701  339   154 #>  [184,]  577  131  792  173  258  703  361  842  370   958 #>  [185,]  452  203  157  863  696  660  592    1  166   479 #>  [186,]  655  222  291  562  282  951  488  427  813   830 #>  [187,]  601  503  283   86   78   69  603  117  102   880 #>  [188,]  237  886  821  573  350  852  636  345  669   336 #>  [189,]  317  693  313  228  353  340  858  612   80   806 #>  [190,]  599   46  208  774  114  786  956  461  883   397 #>  [191,]  745  663  781  329  449  749  159  307  543    32 #>  [192,]  548  673   27  396  327  797  402  684  910   374 #>  [193,]  364  843  544  734   79   75  286  497  876   152 #>  [194,]  992  356  138  539  671  715  915  438  564   684 #>  [195,]  646  122  900  565  942  330  974   79  528   323 #>  [196,]  937  306  717  255  132   14  789  568   22   397 #>  [197,]  737  375  864  314  440  490  738  459  201   406 #>  [198,]  413  721  154  962  546  971  380  425  576   611 #>  [199,]  808  776  507  665  863  126  439  471   10   303 #>  [200,]  914  935  877   77  376  668  605  776   10   678 #>  [201,]  738  930  314  375  532  197  771  536  737   406 #>  [202,]  987  165  574  906  293  649  511  990  304   791 #>  [203,]  452  126  479  874  439  600    1  199  367   469 #>  [204,]  418  794  111  283  939   69  805  748   48   355 #>  [205,]  954   99  806  511  235  902  326  791  987   967 #>  [206,]  319  688  211  921  179  945  145  802  787   177 #>  [207,]  659  355  422   47  621    8  395  794  408   603 #>  [208,]  956  599  437  833  158   31  362   46   85   390 #>  [209,]  813  643  790  328  474  229  506  308  126   222 #>  [210,]  577  697  361  527  403  892  451  173  934   838 #>  [211,]  802  179  945  206  921  215  492   35  972   319 #>  [212,]  740  728  369   38  753  341  181  260  499   564 #>  [213,]   22  309  255  311  120  477  251  615  119   630 #>  [214,]  267  801  296  752  749  663  397  888  294   114 #>  [215,]  492  802  127  722  211  179   71  972  994    15 #>  [216,]  855  426  641  949  853  563  155   55   63   967 #>  [217,]  274  252  218  463  944   19  647  609    3   610 #>  [218,]  217  274  252  463   19  609  944  872  287   156 #>  [219,]  433  700  596  944  462  873  528  588  647   756 #>  [220,]  394  828  922  161  309  473  625  736  810   613 #>  [221,]  263   32  479  543    1  928  468  841  592   664 #>  [222,]  590   44  385  186  135  655  813  427  209   707 #>  [223,]   54  780  506  584  328  474  333  643  429   209 #>  [224,]  450  679  320  942  122  966  363  809  652   900 #>  [225,]  676  358  393  983  666  357  346  560  103   392 #>  [226,]   50  925  121  762  558  756   18  321  694   385 #>  [227,]  879   32  468  969  696  479  263  411  221   110 #>  [228,]   96  884  539  289  259  992  138  353  693   356 #>  [229,]  506  333  813   62  490   39  536  643  440   314 #>  [230,]  538  418  163  854  743  798  862  811  355   475 #>  [231,]  483   20  547  443  856  268  708  343  236   248 #>  [232,]  342  913  476  957  418  811  743  180  505   960 #>  [233,]  747  707  655   11  441  910  307  149  595   516 #>  [234,]  103  866   22  255  132  358  482  495  225   386 #>  [235,]  902  431   71  715   99  524  499  144  404   941 #>  [236,]  398  427  846  547  343  231  562  595  951   129 #>  [237,]  821  753  669  456  188  498  943  373  466   636 #>  [238,]   75  575  977  445  882  965  175  675  845   193 #>  [239,]  459  777  864  919  728  740  924  319  401   369 #>  [240,]  271  898  505  538  585  608  785  743  890   230 #>  [241,]  583   61  596  873  305  948  264  174  974   561 #>  [242,]  742  767  949  719  563  578  797  670  859   327 #>  [243,]  714  554  870  298  644  297  456  820  587   620 #>  [244,]  525  663   93  337  543  874   11  562  951   807 #>  [245,]  540  844  571  107  832  961  865  909  133   814 #>  [246,]  129  731  398   84  483  436  343  121  765   756 #>  [247,]  366  557  365  657  447  580  868   37  635   351 #>  [248,]  475   65  862  798  766  465  372  811  231   913 #>  [249,]  118   97  880   81  953  872  252  603   86   661 #>  [250,]  841   43  928  496  664  263  221  619  133   865 #>  [251,]  119  630   14  414  851  306  938  568  309   752 #>  [252,]  217  274  218   19  249  118  872  944  610     3 #>  [253,]   68  493  964  409  389  340  933   26  156   554 #>  [254,]  823  463  218  609  368  571  647  274  217   674 #>  [255,]   22  717  213  103  306  937  309   14  196   358 #>  [256,]    9  430  464  952  793  486  551  991  526   685 #>  [257,]  620  587  569  604  737  724  639  373  406   480 #>  [258,]  361  278  370  892  792  875  184  173  577   703 #>  [259,]  478   96  968  178  228  884  678   33  138   289 #>  [260,]  524  802  215  541  940  972  492  179  181   692 #>  [261,]  612  272  764  691  820  968  178  478  147   259 #>  [262,]  153  545   94  332  595  521  672  291  586     7 #>  [263,]  221   32  468  479  781  664  683  543  970   841 #>  [264,]  974   61  305  899   35  382  241  143  561   972 #>  [265,]  662   40  751  868  578  967  570  739  742   949 #>  [266,]  480  517  569  758   57  771  529  930  639   257 #>  [267,]  214  801  296  752  663  443  397  114  436   617 #>  [268,]  708   20  483  231    6  443  337  408  856   436 #>  [269,]  390  932  783  789  550  140  331  798  585   538 #>  [270,]  551  989  526  414  624  743  938  685  851    14 #>  [271,]  608  743  624  505  898  989  240  913  585   270 #>  [272,]  612  261  820  297  764  691  933  178  554   714 #>  [273,]  367  441  527   89  772  770  469  308  895   792 #>  [274,]  217  252  218   19  463  944  647  609  674   610 #>  [275,]  104  626  893  911  108  871  769  143  509   405 #>  [276,]  850  792  184  307  582  706  577  258  978   403 #>  [277,]  385   18  762  775  226  532  925  332  536   756 #>  [278,]  258  875  361  892  711  370  553   33  884   654 #>  [279,]  727  993  833   31  533  113  450  176  999   224 #>  [280,]   33  761  278  968  735  884  501  892  839   824 #>  [281,]  709  662  725  726  384  751  610  442   59   607 #>  [282,]  830  488  655  507  562  186  951  747  516    89 #>  [283,]  204  508   98  794   69  817  111  503   78   979 #>  [284,]  849  689  682  904  984  399  573  446  712   718 #>  [285,]  116  949  570  500  530  673  578  476  349   242 #>  [286,]  405  509  986  974  264  305  241  843  996    61 #>  [287,]   60  558  156   26  218   91  429   50  128   872 #>  [288,]  917  785  256  464  810    9   58  430  486   394 #>  [289,]  228  539  662   96  726  178  281  259  835   138 #>  [290,]  132  335  416  651   16   56  568  495  881   386 #>  [291,]  595  915  545  153  707  655  262  521  186   374 #>  [292,]  137   15   12  485  371  667  457  492  598   531 #>  [293,]  510  791  511   13  649  826  769   52  524    99 #>  [294,]  415  812  357  560  888  593  804  446  749    64 #>  [295,]  961  489    3  705  844  616  661  872  422   936 #>  [296,]  325  460  214  752  267  125   65  759  804   799 #>  [297,]  820  870  243  644  714  554  648    5  566   612 #>  [298,]  714   39  130  889  438   62  440  686  243   931 #>  [299,]   95   48  465  939  111   92  685  526  402   960 #>  [300,]  908  733   49  936   70  822  730  139  660   713 #>  [301,]  803  629  556  750  520  523  148  706   30   666 #>  [302,]  304  183   83  699  152  497   75  453  472   843 #>  [303,]  816  591   10  878  142  863  199  424  985    77 #>  [304,]  302  649   52  497  840  826  152  990  202   472 #>  [305,]  974  264  241  583   61  596  873  561  433   899 #>  [306,]   14  568  251  717  397  651  937  414  386   196 #>  [307,]  850  159  760  325  233  276  663  191  392   842 #>  [308,]  126  848   89  895  488  441  813  772  790   209 #>  [309,]  414  213  938  119  251   14  717  736  311   613 #>  [310,]  139  619  489  705   66  865  660   49  841   928 #>  [311,]  613  120  213  736  800  309  477  523  706   819 #>  [312,]  975  538  362  435  437  230  681  105  854   269 #>  [313,]  693   80  735  579  347  353  169  853  858   563 #>  [314,]  490  406  536  197  201  970  375  229  737   440 #>  [315,]  665  316  776  808  142  761  825  668  199   507 #>  [316,]  665  808  776  315  668  478  199  968   10   507 #>  [317,]  723  189  693  313  806  353  855  426  897   366 #>  [318,]  667  349  598  653  531  371  997  137  144   485 #>  [319,]  206  688   24  179  145  787  945  211  177   652 #>  [320,]  122  900  224  363  955  698  679   25  450   704 #>  [321,]  762  694  521  545  226  101  262   60  925   756 #>  [322,]  854  538  690  515  230   58  312  681  890    69 #>  [323,]   79  330  565  995  946  882  734  646  977   698 #>  [324,]    7  672  462   94  428  586  588  559  746   332 #>  [325,]  760  296  460  910  392  804  307  759  850   378 #>  [326,]  806  205   99   13  235  954  902  511  431   791 #>  [327,]  673  578  548  192  751  941  742  500  797   374 #>  [328,]  643  209  429  790   54  694  813  506  762   333 #>  [329,]  745  449  781  888  633  749  589  162  191   634 #>  [330,]  323  995  565  946   79  334  344  977  882   195 #>  [331,]  783  585  269  789  390  677  932  538  937   271 #>  [332,]   94  343    7  262  586  513  462  746  381   672 #>  [333,]  506  229  832   62  643  536  107   39  130   694 #>  [334,]  894  559  732  445  995  175  330  998   84   344 #>  [335,]  416  495  971   16  881  290  413  656  386   425 #>  [336,]  582  750  131  629  969  184  857  886  373   604 #>  [337,]   20  244  268  525  807  443  708  856  125   161 #>  [338,]  824  552  171   98  508   67   48   95  767   299 #>  [339,]  426  304  840  990  216  183  155  987   63    37 #>  [340,]  896  326  493  289  189  869  178   13  409    51 #>  [341,]  356  438  992  889  711  931  194  539  212   567 #>  [342,]  232  957  920  811  845  163  505  963  575   913 #>  [343,]   94  332  846  381  398  236    7  746  483   231 #>  [344,]  965  946  998  995  175  975  330  977  334   176 #>  [345,]  886  634  718  350  449  918  573  357  346   329 #>  [346,]  357  446  718  393  918  634  415  812  225   849 #>  [347,]   80  553  123  711  487  958  859  278  567   875 #>  [348,]   28  591  985  424  713  157  755   53   74   778 #>  [349,]  739  570  318  500  997  653  116  967  667   180 #>  [350,]  636  423  573  345  718  188   57  771  555   886 #>  [351,]  512  853   40  552  868  817  949  982  169   167 #>  [352,]  614  834  174  948  152  472  241   61  549    75 #>  [353,]  855  693  742   80  228  662  954  265  902   205 #>  [354,]    5  626  702  108  566  692  893  181   34   871 #>  [355,]  408  856  207  418  681  372  862  230  794   140 #>  [356,]  992  341  194  438  539  138  711  889  884   567 #>  [357,]  346  634  393  918  888  593  749  446  718   294 #>  [358,]  103  225  182   22  534  213  255  750  392   749 #>  [359,]  170  148  520  380  959  541  803  432   38    82 #>  [360,]  550  617  789  828  754  161  752  932  390   717 #>  [361,]  892  370  258  173  278  577  184  792  875   553 #>  [362,]  437  435  312  105  833  975  269  956  390    56 #>  [363,]  966  589  955  809  162  918  450  224  320   115 #>  [364,]  544  193  734   79   25  698  646  323  843   900 #>  [365,]  580   37  557  494  868  400  891  963  990    63 #>  [366,]  247  317  657  189  693  858  723  635  313   735 #>  [367,]  273  469  527  600   89  441  308  772  126   507 #>  [368,]  609  647  674  463  823  788  561  433  583   996 #>  [369,]  924  901  728  564  740  212   38  919  797   567 #>  [370,]  361  258  892  173  278  553  467  703  875   763 #>  [371,]  531  485  598  470  667  292  318   21  137   404 #>  [372,]  862  811  163  418  860   21  621  748  475   920 #>  [373,]  604  456  131  587  958  149  669  620  257   184 #>  [374,]  941  715  684  327  797  901  722  404  564   595 #>  [375,]  197  737  738  930  201  314  864  440  480   423 #>  [376,]  877  134   77   10  668  420  678  597   91   514 #>  [377,]  174  741  953  906  880  549  610  948   42   923 #>  [378,]  516  716  747  910  978  460  759  625   95    27 #>  [379,]  934  600  527  367  210  469  273  147  203   838 #>  [380,]  359  831  721    4  576  170  520  784  980   695 #>  [381,]   11  343  595  707  332  153   94  262  436   846 #>  [382,]  787  945  145   24  206   35  264  211 1000   921 #>  [383,]    1  592  543   93  479  807  221  912  874   786 #>  [384,]  725  709  861  150  610  281   76  607  835    42 #>  [385,]   44  222  135  277  590  226  762  536  925   321 #>  [386,]  482  495  568  306  132  656  937  251   16   335 #>  [387,]  952  744  464  430  256  613  448    9  412   656 #>  [388,]  622  124   57  988  555  517  771  266  680   350 #>  [389,]   26  964  101    2   68  156  493  686  788   947 #>  [390,]  269  932  789  783  550  140  956  779  360   798 #>  [391,]  859  719  670  901   38  797  959  170  567   106 #>  [392,]  760  804  749  325  983  850  159  477  393   307 #>  [393,]  983  676  432  357  560  718  346  225  804   812 #>  [394,]  299  828  161  939  755  171  220  793  623   526 #>  [395,]    8  164  112  444  602  713  408  207  681   355 #>  [396,]   27  548  402  192  125  673  465   95   92   516 #>  [397,]  415  651  214  114  267   46  306  801  568   294 #>  [398,]  236  129  343  427  846  121  246  231  756   547 #>  [399,]  904  712  160  284  837  573  682  849  576   984 #>  [400,]   63  580  351   37  557  365  512  216  982   853 #>  [401,]  634  943  593  449  669  239  918  432  162   888 #>  [402,]  465  396  548  111  960  860  500  673  180   476 #>  [403,]  892  577  527  276  361  173  184  370  258   792 #>  [404,]   71  722  598  144  941  127  492  374  997   485 #>  [405,]  509  286  305  241  974  264  583  996   61   986 #>  [406,]  490  314  970  536   17  229  197  257  569   620 #>  [407,]  470  845  175  419  920  531  957  667  371   998 #>  [408,]  856  708  355  140   20  231  268  681  443   547 #>  [409,]  493  871  893   13  702  896   68  626  964   674 #>  [410,]  513  998  746  796  946  652  995  542  565   470 #>  [411,]  182  615  582  969  819  227  750  276  120   850 #>  [412,]  546  656  482  425  413  491  729  556  803   484 #>  [413,]  198  154  425  546  721  656  971  412  335   729 #>  [414,]   14  752  938  309  251  119  270  717  759   460 #>  [415,]  294  397  357  560  446  346  749  812  888   651 #>  [416,]  335   16  290  881  495  656  132  386  971   611 #>  [417,]  491  641  100  155   73  916  546  563  803   818 #>  [418,]  204  811  111  372  862  475  465  355  913   230 #>  [419,]  851  799  407  989  470  960   64  913   36   485 #>  [420,]   91  376  877  519  134  447  726  514  128    77 #>  [421,]  623  755  591  805   48  922  939  171  348   338 #>  [422,]  659  207   84  661    8   47  246  936  408   355 #>  [423,]  350  636  738   24  771  375  943  555  201   918 #>  [424,]  816  713  951  878  427  807  562  112  822   348 #>  [425,]  656  413  154  412  611   16  546  729  335   198 #>  [426,]  216  855  579   80  840  905  641  155  417   563 #>  [427,]  951  236  562  398  424  836  547  186  878    47 #>  [428,]  586  462  588  127  994  324  640  492  802   211 #>  [429,]  328  790  643  209   54  474  686  584  947     2 #>  [430,]  256    9  952  464  551  991  782  448  793   486 #>  [431,]  235  902  499  715  976  671   71  404  722   127 #>  [432,]  983  393  718  943   38  676  401  148  359   804 #>  [433,]  219  596  700  944  462  873  588   42  561   583 #>  [434,]  928  973  135  133   17  474  841  221  250   970 #>  [435,]  437  362  312  681  975  956  390  269  140   208 #>  [436,]  483  731  343  381  542  268  129  246  801   231 #>  [437,]  435  362  956  975  312  140  208  681  390   269 #>  [438,]  889  138  356  992  341  194  931  539  298   714 #>  [439,]  469  471  600  778  166  874  507  367   89   203 #>  [440,]   62   39  864  197  737  490  229  375  314   130 #>  [441,]   89  233  273  772  895  308  367  970  307   655 #>  [442,]  923  720  281  906  326   51  662   99  726   574 #>  [443,]   20  140  231  483  798  708  856  475  268   766 #>  [444,]  164  395  602  591  348  985   74  713    8    28 #>  [445,]  575  334  834  948  732  894  175  965  675   977 #>  [446,]  812  346  357  689  918  294  849  415  718   593 #>  [447,]   51  726  442  420  923  281  289  720  519   156 #>  [448,]  991  782  530  484  551  729  491  430  916   938 #>  [449,]  888  634  593  162  749  329  918  401  589   781 #>  [450,]  224  966  809  679  363  115  533  589  320    31 #>  [451,]  604  838  644  639  770  147  373  620  257   587 #>  [452,]  203  696  479    1  592  874  185  166  221   383 #>  [453,]  650  141  136  699  497   87  472  152  154     4 #>  [454,]  481  601  187  885   97  249   91   86  102   877 #>  [455,]  613  937  255   22  309  196  717  120  744   311 #>  [456,]  373  753  604  870  587  958  212  644  237   821 #>  [457,]   12   15  137    4  670  292  950  170  541    55 #>  [458,]  708  779  158    6  268  956  807   20  140   337 #>  [459,]  864  239  777  707  153  532  197  919  262    11 #>  [460,]  759  325  296   95  716  625  378   92  938   516 #>  [461,]  534  745  633  329  757   46  631  781  114   191 #>  [462,]  586  428  588  324    7  433  332   94  640   262 #>  [463,]  609  647  368  674  823  274  217  218  944   583 #>  [464,]  256  952  430    9  387  744  551  270  448   793 #>  [465,]  402  960  111  476  180  396   65  299  248   548 #>  [466,]  606  821  237  498  753  188  867  648  123   456 #>  [467,]  716  523  370  800  706  719  553  477  875   916 #>  [468,]  263  973  221   32  227  757  879  479  683   970 #>  [469,]  600  367  527  439   89  273  507  874  441   203 #>  [470,]  531  371  407  485  292  998  845  177  419   667 #>  [471,]  778  439  157  142  755  830  348  282  473   424 #>  [472,]  152  136   75  141  614  667  352  990  318   292 #>  [473,]  161  525  778  625  759  755  337  460  166    95 #>  [474,]  209   54  328  429  506  643  126  223  135    17 #>  [475,]  798  248  862  766  913  443  372  811  163   418 #>  [476,]  960  180  465  116  685  402  526  500  913   111 #>  [477,]  706  716  467  523  106  119  719  484  392   938 #>  [478,]  259  968  668   96  678  858   33  178  657   228 #>  [479,]  221    1   32  543  263  592  452  383  874   696 #>  [480,]  569  771  930  758  375  737   57  738  257   201 #>  [481,]  601  454  935  877   77  187  102  117  444   914 #>  [482,]  656  386  412  744  495  335  425  546  630   413 #>  [483,]  231  436  443  268  343   20  542  708  746   731 #>  [484,]  916  491  448  106  818  729  530  670  477   523 #>  [485,]  371  531  598  470  292  137  492  404  215    36 #>  [486,]  793  552    9  685  256  887  817  526  512   116 #>  [487,]  711  870  958  347  278  173  931  361  131   456 #>  [488,]  848  654  895  282  507  655  830  308   89   772 #>  [489,]  705  310  139  936  865  961  844  616  121    18 #>  [490,]  314  406  536  229  970  197  440   62   39   813 #>  [491,]  417  484  729  641  916  106  670  448  818   546 #>  [492,]  215  802   71  127  722  211  179  972  994    15 #>  [493,]  964   68  409  389  298  130  253   26  889   554 #>  [494,]  963  891  653   78  580  990  365  342  557   739 #>  [495,]  335  560  386  630  971  980  482   87  413   568 #>  [496,]  633   43  781  664  774  841  966  250  114   775 #>  [497,]  876  146   52  826  453  843  784   35  972   152 #>  [498,]  753  867   34  123  456  237  212  541  692    82 #>  [499,]  431  671  181  976  127  235  564  902  728   919 #>  [500,]  673  570  548  116  349  327  402  285  578   739 #>  [501,]  761  839  800  892  825  978  280  467  258   824 #>  [502,]  504   41  818  800  982  169  311  763  839   613 #>  [503,]   78  979  187  283  868   69  817   40   86   508 #>  [504,]  502  169   41  818  982  853  916  563  579   155 #>  [505,]  957  898  271  627  608  743  232  913  989   624 #>  [506,]  333  229  643   39  813  536   62  832  209    17 #>  [507,]  488  282   89  830  808  654  848  665  469   199 #>  [508,]  817  283   98  338  552   40   48  512  171   486 #>  [509,]  405  286  305  264  241  974   61  583  996   986 #>  [510,]  293  791  511  524   13  826  649  769   52    99 #>  [511,]  293  510  769   13  806  927  791  205  954    99 #>  [512,]  817  351  552  486  508  171  810   40    9   982 #>  [513,]  410  746  942  652  332    7  586  462   94   324 #>  [514,]  128  522  829  947  836  597   60  607   76   726 #>  [515,]   29  322  164  854  681  102  538  690   58   395 #>  [516,]  747  378   27  125   95  910  830  396  460   759 #>  [517,]  266   57  529  480  639  622  771  838  569   758 #>  [518,]  566  773  108  297  354  498    5  933  821   243 #>  [519,]  420  178  289  764  134   91  447  376  691   340 #>  [520,]  148  359  666  803  676  380  959   82  983   170 #>  [521,]  545  321  829  262  756  762   60  291  925   153 #>  [522,]  947  607  835   76  597  514    2  637  829   291 #>  [523,]  818  706  467  763  916  477  484  370  800   959 #>  [524,]   71  826  260  235  510  791  492  902  215   431 #>  [525,]  244   93  663  337  874  473  543  912  460   759 #>  [526,]  685  793  960  551  476  299  465  913   92   270 #>  [527,]  367  469  600  273  577  403  792  276   89   892 #>  [528,]  700  219  642  903  961  195  433  909   18   618 #>  [529,]  147  266  639   17  569  257  620  451  644   480 #>  [530,]  991  782  285  448  116  793  670  949  887   916 #>  [531,]  371  485  598  470   21  667  318  180  292   407 #>  [532,]  777  459  201  162  738  239  664  966  197   277 #>  [533,]   31  176  542  765  833  450  731  658  224   410 #>  [534,]  461  329  745  345  358  749  757  103  346   357 #>  [535,]   45  885  109    3  252  118  687   97  872   217 #>  [536,]  314  490  229  406  107  832   62  333  197   440 #>  [537,]  695  831  784   35  876  940  645  945 1000   382 #>  [538,]  230  312  322  585  783  743  854  681  269   271 #>  [539,]  992  356  194  138  889  438  228   96  715   341 #>  [540,]  245  107  844  832   18  277  865  909  775   528 #>  [541,]  170    4  260  359   15   38   73  391  457    12 #>  [542,]  483  731  410  746  998  765  436  766  533   443 #>  [543,]   93   32  874    1  383  244  663  479  221   525 #>  [544,]  364  193   25  698  734   79  843  900  876   646 #>  [545,]  521  262  153  291  321  915  595  762  150   861 #>  [546,]  412  803  413  491  729  417  198  425  656   100 #>  [547,]  231  236  621  846  860  856  111  748  402   398 #>  [548,]  673  192  396  327  402  500   27  578  465    92 #>  [549,]  144   42  994  174  598  404   71  588   61   492 #>  [550,]  360  828  390  932   53  161  789  779  269   752 #>  [551,]  991  526  270  685  448  793  989  851  430   938 #>  [552,]  171  486  338  887  512  508  793  817   67   351 #>  [553,]  875  859  370  278  347  711  567  467  258   719 #>  [554,]  933  243  298  297  130  493  820  714  354     5 #>  [555,]  771  930  423   57  758  636  350  738  480   768 #>  [556,]  301   41  412  546  803  523  818  866  100   311 #>  [557,]  580  365   37  868  351  503  512  494  817    40 #>  [558,]   50   60  829  226  694  925  521  121  762   321 #>  [559,]  894  324   21  334    7  746  531  953  998   672 #>  [560,]  393  294  630  980  983  812  676  415  357   804 #>  [561,]  143  911  994  588  433   61  976  583   42   640 #>  [562,]  951  427  655  830  186  236  282  424  516   244 #>  [563,]  916  242  818  670  859  553  853  719  949   216 #>  [564,]  671  369  901  915  919  194  374  715  728   499 #>  [565,]  995  323  330  899  796   79  946  787  410   900 #>  [566,]  108    5   34  354  702  692  893  518  773   498 #>  [567,]  875  711  901  797  149  859  356  369  553   910 #>  [568,]  306  651   14  624  989   85  851  251  397   658 #>  [569,]  480  257  620  758  737  406   39  375  314   930 #>  [570,]  349  739  500  116  285  949  578  673  967    40 #>  [571,]  616  694   50  832   18  540  245   54  226   762 #>  [572,]  952  744  464  430   16  656  387  677  898   627 #>  [573,]  350  718  636  984  284  399  345  188  904   886 #>  [574,]  906  791  202  293  987   99  174  720  649   741 #>  [575,]  965  445  845  175  342  732  977  163  344   920 #>  [576,]  721  876  712  831  380  682  160  645  701   695 #>  [577,]  184  792  173  131  361  258  892  370  276   403 #>  [578,]  327  742  673  949  751  500  570  548  941   285 #>  [579,]  313  426  216  155  169  563   80   41  853   504 #>  [580,]  365   37  557  494  400  891   63  963  868   351 #>  [581,]  701   73  146  905  380  840  876  497  867   541 #>  [582,]  750  336  629  969  276  850  184  159  411   131 #>  [583,]  241  596  873  305  647   61  433  561  674   948 #>  [584,]  223   54  429  474  827  328  691  506  790   686 #>  [585,]  783  331  271  538  269  270  743   58  390   240 #>  [586,]  428  462  332    7  324  588  777   94  640   919 #>  [587,]  620  931  257  373  604  772  456  870   39   149 #>  [588,]  462  428   42  127  994  586  324  640  433   919 #>  [589,]  809  888  593  363  162  966  918  449  329   114 #>  [590,]  222   44  135  385  970  707  186   11  664   813 #>  [591,]  878  421  348  623  816  303   48  755  424   805 #>  [592,]    1  383  479  660   66  221  619  543  452    44 #>  [593,]  888  634  918  449  162  749  357  589  401   294 #>  [594,]   91  447  287  420   51  519  156  218   19   726 #>  [595,]  291  707  153  262  381  846  655  374   11   545 #>  [596,]  873  433  583  241   42  948  944  219  700   305 #>  [597,]  522  678   10  134  514  947  488  282  637   259 #>  [598,]  371  485  531  404  318  144   71  997  137   667 #>  [599,]   46  208  190  774  114  956  633   31  397   115 #>  [600,]  469  367  527  439  273   89  203  934  874   166 #>  [601,]  187  481  454  102  207  117  283   86  444    47 #>  [602,]  805  794  939  164   53   48  395  204  355   856 #>  [603,]  880  748  621  860  953  997   21  372   81   283 #>  [604,]  373  451  257  587  620  131  456  770  857   724 #>  [605,]  200  914  657  635  668  167  315  935  316   376 #>  [606,]  466  123  648  498   82  867  237  131  958   821 #>  [607,]  835   76  522  637  709  947  384  915  725   861 #>  [608,]  624  271  989  743  505  913  766  407   85    56 #>  [609,]  368  647  463  674  823  433  996  583  219   788 #>  [610,]  725  384  709  150  861  944   42  156  281   953 #>  [611,]  154  425  413  416  198  335  656  881  971   699 #>  [612,]  261  272  820  297  189  858  178  968  764   870 #>  [613,]  311  309  744  213  387  120  220  502  464   736 #>  [614,]  352  834  174  948  152  549  472   61  241   318 #>  [615,]  819  120  182  710  411  736  213  276   22   850 #>  [616,]   18   50  961  925  226  121  558    3  756   219 #>  [617,]  710  360  912  717  752  214  267   46  663   550 #>  [618,]  195  330  528  993  646  675  323   79  176   700 #>  [619,]   66  139  310  592  928  660  841   44  250   135 #>  [620,]  257  587  931  604   39  569  373  737  440   490 #>  [621,]  748  860  603  547  372  846   21  111  672   811 #>  [622,]  388  517  266   57  555  771  758  124  480   768 #>  [623,]  421  755  805   48  591  939  171  922  394   338 #>  [624,]  608  989  271  743  568  851  270  766  913   505 #>  [625,]  978  759  716  460  378  736  473   95  800   516 #>  [626,]  354  871  911  893  143  702  181    5  815   104 #>  [627,]  141  898  505   16  168  957   72   87  881   650 #>  [628,]   86   97  885  732  854  207   90   69  187   880 #>  [629,]  750  582  706  336   82  148  842  703  477   392 #>  [630,]  119  251  560  106  851  804  495  729  676   983 #>  [631,]  461  883  182  981  110  879  534  411  745   227 #>  [632,]  642  903  996  618  528  823  961  986    3   844 #>  [633,]  781  114  745  496  329  774  461   43  191    46 #>  [634,]  593  449  918  888  357  749  401  718  162   345 #>  [635,]  657  167  735  858  280   67  693  169  761   824 #>  [636,]  350  423  573  837  718   24  943  555  188   237 #>  [637,]   76  607  835  751  684   59  327  374  522   194 #>  [638,]  245  814  133  540  844  704  107  780  865   832 #>  [639,]  770  838  257  451  724  604  620   17  857   273 #>  [640,]  919  777  586  864  588  428  462  127  239   728 #>  [641,]  491  417  782  155   55  670  216  729  530   457 #>  [642,]  903  528  996  700  609  647  823  219  463   368 #>  [643,]  328  790  813  209  229  506  333  686  321   694 #>  [644,]  870  451  648  456  243  604  714  587  487   620 #>  [645,]  682  831  980  812  537  695  784  688  921   145 #>  [646,]  113  122   79  900  195   25  698  323  565   320 #>  [647,]  609  368  674  463  583  823  433  996  219   561 #>  [648,]  644  487  456  870  451  604  131  606  958   373 #>  [649,]  826   52  293  510  791  524  304  511  574   840 #>  [650,]   87  980  453  881  971   64  141    4  645   172 #>  [651,]   85  658  568   56  397  306  415  624  608    14 #>  [652,]  688  145  809  796  513  787  319  410  942   177 #>  [653,]  741  349  739  318  997  963  667  570  979    21 #>  [654,]  488  895  884  848  772  278   33  684  875    96 #>  [655,]  186  747  233  291  830  562  595  707  282   488 #>  [656,]  425  482  412   16  413  386  729  335  546   744 #>  [657,]  858  635  478  668  735  693  259  228  678   968 #>  [658,]   85  651   56  766  397  568  801   31  624   608 #>  [659,]  422  207  661   84   47  355  408    8  621    81 #>  [660,]  730   66  592  619   49  139    1    6  713   807 #>  [661,]  118   84  659   97  422    3   81  872  121   732 #>  [662,]  265  281  751   40  868   59  353  578  709   637 #>  [663,]  244  525  191  543  214  296   11  307  267    93 #>  [664,]  841  781  532  496  970  263  683  590  135   201 #>  [665,]  808  776  316  142  507  315  199  761  439   668 #>  [666,]  676  520  983  393  225  803  359  560  432   148 #>  [667,]  318  531  371  292  598  137  349  485  470   180 #>  [668,]  678  478  376  808  259   10  316  597  968   134 #>  [669,]  401  724  857  943  373  737  237  740  604   886 #>  [670,]  457  391  916  242  106  530  719  563   12   949 #>  [671,]  564  915  499  194  715  431  992  374  919   861 #>  [672,]    7  324  846   94  262  343  746  332  860    21 #>  [673,]  548  327  192  500  578  396  402  941   27   751 #>  [674,]  368  647  609  463  583  823  561  911  871   944 #>  [675,]  445  986  618  330  834   79  334  323  948   995 #>  [676,]  666  983  393  225  432  520  560  148  718   359 #>  [677,]  331  937  572  585  386  196  271  783  744   132 #>  [678,]  668  597   10  259  376  478   77  808  134   824 #>  [679,]  224  942  966  450  320  122  363  775  532   652 #>  [680,]  727  774   43  124  988  115  496  461  250   633 #>  [681,]  140  408  355  312  856  435  779  538  230     8 #>  [682,]  645  689  284  172  812  849  980  831  576   446 #>  [683,]  757  781  449  162  329  664  263  201  970   724 #>  [684,]  374  797  637  747  327  192  194  291  901   910 #>  [685,]  526  793  960   92  476  551  299  465  116   486 #>  [686,]  790    2   26  947  643  101  298  813  389   438 #>  [687,]  109   86  377  720   78  628  535   45   97   249 #>  [688,]  145  206  319  787  652  177  921  796  812   211 #>  [689,]  849  682  284  446  812  645  172  346  698   955 #>  [690,]   69  917  322  785  232  204  538  854  230   890 #>  [691,]  764  178  259  686  820  478  714  138   96   261 #>  [692,]   34  260  702    5  524  905  354  499  181   897 #>  [693,]  313  735  353  228  858   80  853  855  189   767 #>  [694,]  762  321  226   50  558   60  328  643  101   521 #>  [695,]  537  831  784   35  876  940  146  945  645   972 #>  [696,]  110  452  166  479  227  912    1  383  883    93 #>  [697,]  210  403  361  892  173  763  370  577  839    33 #>  [698,]   25  900   79  646  320  122  734  565  689   323 #>  [699,]  453  154  183  497  876  581  701  650  576   198 #>  [700,]  219  433  528  873  596  462  894  944  903   305 #>  [701,]  876  146  581  695  576  380  537  831  497   160 #>  [702,]  893    5  108  769  692  354  511   13  927   566 #>  [703,]  842  958  149  875  184   82  131  792  258   859 #>  [704,]  122  320  679  224  195  450  900  646  909   113 #>  [705,]  489  865  936  775  121  310   18  139  246   844 #>  [706,]  477  523  467  629  703  842  959  716  276   719 #>  [707,]  153  595   11  459  233  381  291  655  262   239 #>  [708,]  268   20  408  140  443  231  856  483    6   458 #>  [709,]  384  725  281  607  610  835   76  861  150   751 #>  [710,]  617  717  912  615  883  360  752   22  754   255 #>  [711,]  567  875  356  884  278  487  553  341  958   347 #>  [712,]  399  904  160  576  284  837  682  721  666   380 #>  [713,]  112  424  733  730  807  348  816    6  822   985 #>  [714,]  298  870  931  243  438  820   39  587  889   620 #>  [715,]  941  902  431  374  194  235  671  992  751   901 #>  [716,]  378  978  467  625  719  460  759  477  800   706 #>  [717,]   14  710  255  617  306   22  414  309  752   360 #>  [718,]  432  393  357  346  634  918  983  943  345   573 #>  [719,]  859  391  242  716  467  875  106  910  916   670 #>  [720,]  923  442  906  574   19  869  377  741   51   165 #>  [721,]  198  576  380  971  980  413  712  666  831   172 #>  [722,]  127  404   71  215  492  919  941  924  901   374 #>  [723,]  317  165  987  806  927  202  897  205  896   954 #>  [724,]  857  669  770  257  604  639  620  373  159   683 #>  [725,]  384  610  709  861  150  281  607   76  835   944 #>  [726,]  281  128  709   51  156  289  607  725  514   947 #>  [727,]  774  450  279  496  775  533  224   31  115   679 #>  [728,]  740  919  369  212  239  864  924  179  127   564 #>  [729,]  491  448  106  782  484   87  641  170  457   991 #>  [730,]  660  713  112   49    6  733  822  807  424   936 #>  [731,]  246  436  765  542  483  129  533   84  343   176 #>  [732,]  334  965  163   90   84  445  575  661  344   854 #>  [733,]  822  713  112   49  816  730  424  936  985    47 #>  [734,]  882   79  323  364  698   25  977  946  565   995 #>  [735,]  693  858  313  280  635  169  853  767  839   228 #>  [736,]  819  120  978  625  615  800  311  309  276   716 #>  [737,]  197  375  864  440  738  740  314  490  257   669 #>  [738,]  201  375  930  197  423  737  532  314  771   480 #>  [739,]  349  570  500  653   40  997  868  116  979   265 #>  [740,]  728  212  369  864  239  919  943  737   38   564 #>  [741,]  653  906  377  997  144  174  318  349  739   549 #>  [742,]  578  242  327  949  941  767  751  797  673   715 #>  [743,]  913  271  608  624  798  989  475  766  230   232 #>  [744,]  387  952  464  482  656  572  613  412  386   430 #>  [745,]  191  781  329  633  114  749  449  663  461   888 #>  [746,]    7  513  343   94  332  410  483  672  998   324 #>  [747,]  516  910  655  233  378   27  684  830  595   125 #>  [748,]  860  621  603   21  372  111  997  547  402   811 #>  [749,]  888  634  449  593  357  392  329  214  294   191 #>  [750,]  629  582  336  706  392  850  886  276   82   842 #>  [751,]  327  941  578  715  637  742  265  374  662   673 #>  [752,]  414  296   14  214  267  932   65  460  617   759 #>  [753,]  237  498  212  456  821  943  940   82   38   740 #>  [754,]  360  912  617  710  473  717  828  550  161   158 #>  [755,]  421  623  161   48   53  591  473  348   95   299 #>  [756,]  925   94  226  121  521  332  262   18  343   398 #>  [757,]  683  329  781  461  745  263  468  534  345   191 #>  [758,]  930  480  569  768  375  555  771  738  201   266 #>  [759,]  460   95   92  625  716  938  516  378  296   325 #>  [760,]  325  307  850  392  842  159  910  804  149   703 #>  [761,]  280  501  839   33  824  892  968  665  507   808 #>  [762,]  321  694  226  521  925  545   50  756  558   277 #>  [763,]  523  370  467  553  818  361  892  173  800   706 #>  [764,]  691  178  259  820  478  686  261  138   96   714 #>  [765,]  176  731  542  533  246   84  410  344  483   436 #>  [766,]  798  475  248  443  801  913  998  743  542   862 #>  [767,]  242  742  578  853  824  949  327  338  673   797 #>  [768,]  758  555  930  375  480  569  626  815 1000   737 #>  [769,]  927  511  893  702  897  510  293   13  108   896 #>  [770,]  639  857  838  969  724  273  604  451  257   441 #>  [771,]   57  480  930  555  423  738  201  758  375   350 #>  [772,]  895  654  848  931  792  441  149  488  587    89 #>  [773,]  933  566  518  297  108    5  554  354  702   820 #>  [774,]  496  633  599  115  114   43  727   46   31   450 #>  [775,]  865  277  841  679  966  731  664  496   18   246 #>  [776,]  808  665  316  142  199  315  303   10  863   471 #>  [777,]  459  239  532  864  586  640  919  153  332   262 #>  [778,]  471  157  473  166  439   93  348  755   28   525 #>  [779,]  458   53  550  158  907  390  360  681  140   337 #>  [780,]  223  333   54  832  506  107  229  643  571   130 #>  [781,]  633  745  329  191  683  496  449  664  263   114 #>  [782,]  991  530  448  641   55  729  551  430  491   670 #>  [783,]  269  585  390  331  789  932  550  538  828   743 #>  [784,]  831  695   35  972  146    4  921  537  211   802 #>  [785,]  917  690  232  288  430  256  891  898  505   240 #>  [786,]  883  383  110  912    1  696  592  543  158   599 #>  [787,]  145  688  206  319  382  652  942  921  899   796 #>  [788,]  815  130   62  368  321  694  389  762  333   640 #>  [789,]  932  390  269  360  550  783  331  828   14   717 #>  [790,]  813  686  643  209  328  848  229  308    2   522 #>  [791,]  510  293   99  511  524  649  574  826  205    13 #>  [792,]  184  577  258  149  131  842  703  772  173   276 #>  [793,]  685  486  526  887   92  991  530  551  116   256 #>  [794,]  602  805  204  939   48  111  283  418  355   856 #>  [795,]  810  512  847  167  171  922  982  552   67   817 #>  [796,]   64  145  652  688  946  177  410  565  882   995 #>  [797,]  901  192  910  941  684  327  567  374  715   742 #>  [798,]  475  766  443  248  140  862  743  913  856    65 #>  [799,]   36  419  804  177  485  296  851  924   65   248 #>  [800,]  467  978  501  716  625  736  523  311  706   477 #>  [801,]  267  214  766  443  436  483  296  752  294   397 #>  [802,]  211  179  945  215  492  972   35  206  921   127 #>  [803,]  546  520  959  148  359  106  100  170  491   666 #>  [804,]  392  983  325  799  294   36  393  760  296   749 #>  [805,]  602  939  794   48  623  421  204  591   53   299 #>  [806,]  205  954  511  326   99   13  927  987  791   897 #>  [807,]    6  337  424  268  713  458  244  730   93   951 #>  [808,]  665  142  776  507  316  199  668   10  678   282 #>  [809,]  589  652  966  363  888  593  450  162  918   294 #>  [810,]  171  552  922  394  982  512  795  486  847    67 #>  [811,]  372  163  920  862   21  418  180  475  248   860 #>  [812,]  446  294  645   64  688  177  560  980  357   393 #>  [813,]  790  229  643  209  490  186  308  848  506   291 #>  [814,]  245  909  638  758  540  768  930  107  555   996 #>  [815,]  181  788  640  561  911  130  871  143  440    62 #>  [816,]  878  424  822  836  303  733  591  427  951   713 #>  [817,]  508  512  486   40  552  283  739  868  351   570 #>  [818,]  916  523  484  563  491   41  467  763  504   417 #>  [819,]  736  615  120  276  411  978  403  850  625   311 #>  [820,]  297  714  178  870  889  243  438  764  298   691 #>  [821,]  237  753  456  188  466  669  498  373  604   636 #>  [822,]   49  733  816  836  424  730  112  427  713   936 #>  [823,]  609  463  647  368  674  996  903  642  583   274 #>  [824,]  338   67  767  761  280  552  171  378  830   282 #>  [825,]  501  839  761  800  736  978  403  892   67   625 #>  [826,]   52  649  524  510  293  972  791   61  146   497 #>  [827,]  429  584   54  474  328  134  223  287   91    49 #>  [828,]  550  161  360  394   53  414  220  783  789   932 #>  [829,]   60  521  558  514   50  836  128  101  226    81 #>  [830,]  282  655  562  516  747  951  488  507   89   186 #>  [831,]  695  784  645  537  380  980  576    4  876    35 #>  [832,]  107  333  536  506  762  229  694  780  277   540 #>  [833,]   31  533   85  208  658  362   56  437  956   176 #>  [834,]  352  614  948  241  445  174  843  152   61   899 #>  [835,]  607   76  637  522  709  915  947  194  861   384 #>  [836,]  816  822  427  829  878  186   47  514  522   951 #>  [837,]  160  904  399  636  712  537  284  695  573   940 #>  [838,]  451  770  639  604  969  577  273  147  644   857 #>  [839,]  501  761  825  280  800  735  892   67  169   824 #>  [840,]  905  950  457  967  136   55  137  826  524   954 #>  [841,]  664  250  928  135   44  496  221  865  590   263 #>  [842,]  703  149  760  958  792   82  184  875  850   131 #>  [843,]  193  152  497  834   75  899  352  614  264   876 #>  [844,]  961  540  245  865   18  616  775  528  705   489 #>  [845,]  175  407  920  977  470  998  342  882  531   957 #>  [846,]  672  343  236   94  547    7  860  595  231   621 #>  [847,]  810  795  982  922  171  220  167  502  394   512 #>  [848,]  488  895  308  654  772  790   89  813  655   186 #>  [849,]  284  689  984  446  955  682  346  904  573   718 #>  [850,]  307  276  760  159  842  792  325  392  582   703 #>  [851,]  419  989  119  251  551  624  799   64  568    87 #>  [852,]  886  345  188  336  750  969  582  981  534   573 #>  [853,]  169  767  351  949  563  216  242  742  855   578 #>  [854,]  230  322  538  312  163  965  690  732  342   975 #>  [855,]  216  353  426  967  949  954  265  853  205   950 #>  [856,]  408   20  231  140  443  547  708  355  475   798 #>  [857,]  724  770  669  159  604  969  373  257  336   683 #>  [858,]  657  735  693  968  478  280  635  259  228    33 #>  [859,]  391  719  553  875  959  567  703  242  563   670 #>  [860,]  748  621   21  402  372  547  111  846  180   603 #>  [861,]  150  384  725  610  709  976  101  431  671   835 #>  [862,]  372  163  475  811  248  920  798  418  998    21 #>  [863,]  985  157  199  303  776  816  471  424  733   348 #>  [864,]  459  239  197  740  777  919  737  440  728   640 #>  [865,]  775  841  277  705  385  133  540   18  135   844 #>  [866,]  234  556  213   22  301  482  255  311  613   358 #>  [867,]  498   34   73  123  581  100  566  541  753   905 #>  [868,]   40  265  979  739  662  817  570  351  503    59 #>  [869,]  923  720   19  896   51  442   13  340  326   574 #>  [870,]  931  644  487  714  456  243  587  341  297   438 #>  [871,]  626  911  815  409  143  674  368  788  561   354 #>  [872,]  118  249  661    3   97  252   81  558  616    50 #>  [873,]  596  948  583  241  433  700  219  305  944    42 #>  [874,]   93  543  525  244  166   89   32  479    1   663 #>  [875,]  567  553  278  258  711  703  859  719  149   370 #>  [876,]  497  695  701  576  537  831  784  146   35   645 #>  [877,]   77  376  935  420   10  914  134  678  481    91 #>  [878,]  816  591  424  427  951  836   48  562   47   303 #>  [879,]  227  468  757  631  110  969  696  263  411   981 #>  [880,]  603  953   86  249  748  621   97   78   81   997 #>  [881,]  971  650  335   16   87  154  416  627  172   453 #>  [882,]  977  946  995  175  796  734  565  845  323   407 #>  [883,]  110  786  912  710  631  696  617   46  383   754 #>  [884,]   96  228  711  654  138  356  278  992  194    33 #>  [885,]   97   45  118  872  628  249   86  535  661     3 #>  [886,]  345  852  188  634  669  336  718  750  573   857 #>  [887,]   92  793  685  552  530  486   95  938  716   285 #>  [888,]  593  449  749  634  589  918  357  162  329   294 #>  [889,]  438  992  138  539  356  341  194  298  671   931 #>  [890,]  690  785  240  322  854  342  494  963  898   232 #>  [891,]  494  963   55  570  739  957  116  232   72   349 #>  [892,]  361  258  370  278  173  577  403  501  184   792 #>  [893,]  702  769    5   13  108  511  510  896  626   927 #>  [894,]  559  334  948  995  175  410  873  596  998   324 #>  [895,]  772  848  488  654  308   89  441  931  233   149 #>  [896,]   13  511  893  702  927  769  806  326  293   510 #>  [897,]  927  905  769  511   34  806  692  205  954   840 #>  [898,]  505  957  627  271  240  608  624  342   16   743 #>  [899,]  565  264  787  921  145  995  974  796   61    35 #>  [900,]  122  698   25  320  646  195  565  145  787    79 #>  [901,]  797  369  564  924  567  715  941  910  722   374 #>  [902,]  235  431  715   71  941   99  499  954  404   524 #>  [903,]  642  996  528  647  305  700  583  873  609   823 #>  [904,]  399  712  284  160  837  682  573  849  576   984 #>  [905,]  897  840   73   34  524  692  541  146  954   950 #>  [906,]  574  741  720  442   99  987  923  377  990   791 #>  [907,]  779  158   53  164  681   74   28  458  550   390 #>  [908,]   70  300  936  733    8  601  395  444  112   422 #>  [909,]  974  540  528  996  433  195  305  219  368   942 #>  [910,]  747  797  378  516  901  192  325   27  719   567 #>  [911,]  143  561  871  626  815  181  674  976   61   510 #>  [912,]  710  617  166  525   93  883  543  383  473   754 #>  [913,]  743  960  475  248  920  476  811  798  232   526 #>  [914,]  935  200   77  877  668  376  142  303  678    10 #>  [915,]  671  291  564  545  194  835  374   76  684   607 #>  [916,]  563  484  818  491  670  719  523  859  106   242 #>  [917,]  785  288  690   58  394  232  486  256  939   805 #>  [918,]  634  593  162  357  888  446  718  449  589   346 #>  [919,]  127  728  239  864  564  722  640  586  369   740 #>  [920,]  811  163  998  862   21  845  372  913  475   180 #>  [921,]  206  211   35  802  688  179  145  945  972   177 #>  [922,]  623  421  810  394  220  755  171   53  805   161 #>  [923,]  442  720   19   51  906  281  610  574  377   869 #>  [924,]  369  901   38  722  728  919  239  797   36   564 #>  [925,]  756  226  121   18   50  521  762  558  321    94 #>  [926,]  956  437  435  208  727  176  533  731  765   705 #>  [927,]  769  897  511  806  893  702   13  896  293   510 #>  [928,]  135  434  841   44  221  250  619  970  590   263 #>  [929,]  786  190  599  158  926  208  883  774  956   383 #>  [930,]  758  738  375  480  201  771  197  555  737   314 #>  [931,]  587  438  870  620  772  714  341  895  711   356 #>  [932,]  789  269  390  550  752   14  783  766  798    85 #>  [933,]  554  773    5  297  243  409  493  354  566   820 #>  [934,]  379  527  600  210  367  273  469  838  147   403 #>  [935,]   77  914  877  481  200  117  303  376  591   421 #>  [936,]  112  733  730  822  422   70  705  121   49     8 #>  [937,]  196  306  386  255  717   14   22  568  677   414 #>  [938,]  414  119  759  460   92  309  251  551  685   887 #>  [939,]  805   48  794  602  299   53  204  111  418   856 #>  [940,] 1000  945  695  260  537  943  179  784  211   802 #>  [941,]  715  404  327  751  797  374  742  673  722   901 #>  [942,]  513  679  787  652  224  410  565  145  966   688 #>  [943,]  432  401   24  740   38  669  718  728  940   945 #>  [944,]   42  433  596  219  610  150  588  873  861   725 #>  [945,]  211  179  802  206   35  921  940  319  972    24 #>  [946,]  995  882  796  977  410  323  565  330  175   344 #>  [947,]    2  522  101  607  835   26  686  156  514    60 #>  [948,]  873  596  834  241  174  894  614  352  583   559 #>  [949,]  285  578  742  242  570  116  530  670  967   673 #>  [950,]  967   71  137  144  840  457  404  235  318    99 #>  [951,]  562  427  424  655  830  236  186  282  878   244 #>  [952,]  430  464  387  256    9  448  744  782  551   572 #>  [953,]  880  603  559  377  997   81  748  249  621   944 #>  [954,]  205   99  806  967  235  902  511  950  791   987 #>  [955,]  363  988  849  984  320  918  446  689  284   115 #>  [956,]  208  437  158  458  390  140  708  269  443   268 #>  [957,]  505  898  342  407  232  627  667  845  913   920 #>  [958,]  703  131   82  842  373  149  487  184  567   711 #>  [959,]  148   82  106  170  359  859  391  803   38   703 #>  [960,]  476  465  180  402  685  526  913  116  111   248 #>  [961,]  844  616  528   18    3  705  540  700  489   642 #>  [962,]  198  413  721  546  666  520  712  803  154   971 #>  [963,]  494  653   78  891  342  739  232   69  349   741 #>  [964,]   68  389  493   26  130  298    2  686  788   101 #>  [965,]  344  575  175  163  732  975  334  845  977   998 #>  [966,]  809  363  679  589  162  450  224  532  652   942 #>  [967,]  950  349  570  954  265   99  949  855  318   205 #>  [968,]  478   33  259  280  858   96  761  884  668   654 #>  [969,]  582  770  336  857  411  227  159  724  838   750 #>  [970,]  406  490  314  590  664  536  441  135   17   263 #>  [971,]  172  721  881  335  650  980  413  495  154   198 #>  [972,]   35  802  211  492  215  784  921  179  945   260 #>  [973,]  468  434  928  221  263   17  479  970  639    32 #>  [974,]  305  264   61  382  899  241  583  561  509   596 #>  [975,]  312  437  344  965  176  435  681  230  362   140 #>  [976,]  431  499  861  150  994   42  235  588  561   127 #>  [977,]  882  175  995  946  845  344  330  407  323   565 #>  [978,]  625  716  378  800  736  759  460  467  276   516 #>  [979,]  868   78   59  503  739   40  283  265  741   603 #>  [980,]  645  560  831  812   87  721  650   64  172   682 #>  [981,]  534  757  852  631  461  124  879  182  886   345 #>  [982,]  169  504  167  810  552  171  853  351   67   512 #>  [983,]  393  432  676  804  718  560  666  392  148   357 #>  [984,]  849  284  955  988  573  689  350  346  904   399 #>  [985,]   74  348   28  863  713  157  424  733  816   303 #>  [986,]  286  405  509  305  195  974  903  675  646    79 #>  [987,]  165  202  205  954  806  574  906   99  511   990 #>  [988,]  124  955  984  363  849  350  345  573  115   918 #>  [989,]  624  851  608  270  743  419  551  271  913   568 #>  [990,]  136  472  906  967   55  840  987  653   72   304 #>  [991,]  782  551  530  448  793  685  116  285  526   430 #>  [992,]  539  356  194  138  889  438  715  341  671   884 #>  [993,]  113  646  618   79  323  279  330  195  122    25 #>  [994,]  549  428  127  492  588   42  215  802   61   561 #>  [995,]  946  565  330  882  977  323  410  175  796   899 #>  [996,]  903  647  823  305  609  583  368  974  642   674 #>  [997,]  349  598   21  404  144  748  500  318  739   860 #>  [998,]  410  920  746  862  175  163  470  475  766   542 #>  [999,]  279   88  113   31  115  833  680  727  993   450 #> [1000,]  940  382  945  537   24  143  104  695  181    35 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.30367763 0.3189377 0.5022339 0.5514441 0.6471885 0.7227294 0.7607222 #>    [2,] 0.31611199 0.3986617 0.4063124 0.4397339 0.5660203 0.6352324 0.6373228 #>    [3,] 0.77618890 0.7832220 0.8428776 0.8903777 0.9779215 0.9995880 1.0031178 #>    [4,] 0.27773209 0.3929281 0.3957470 0.5267343 0.5284198 0.5639318 0.5670843 #>    [5,] 0.38741373 0.4816144 0.5287803 0.5736083 0.6161224 0.6471684 0.8519912 #>    [6,] 0.37861406 0.4988367 0.6053571 0.6493884 0.6567100 0.6686249 0.7379414 #>    [7,] 0.24922698 0.2651667 0.2847783 0.3624200 0.4051397 0.4855495 0.4889940 #>    [8,] 0.39208336 0.6584391 0.6720151 0.7777200 0.8192563 0.8554963 0.8631583 #>    [9,] 0.28971304 0.3882579 0.5482922 0.6056146 0.6281717 0.6720855 0.7230541 #>   [10,] 0.61708580 0.6446556 0.7210090 0.7673380 0.7698627 0.8533280 0.8650517 #>   [11,] 0.33131086 0.4092090 0.5023153 0.5664329 0.6312816 0.6459179 0.6609956 #>   [12,] 0.16777155 0.3190093 0.3209453 0.3957470 0.4540583 0.5384774 0.5539903 #>   [13,] 0.43232576 0.4678759 0.5127112 0.5627866 0.6307705 0.6722208 0.6815875 #>   [14,] 0.34807209 0.4500258 0.4790189 0.5458356 0.5508784 0.6054630 0.6993777 #>   [15,] 0.16777155 0.2777321 0.3357817 0.3539487 0.4476562 0.5119588 0.5291112 #>   [16,] 0.66625663 0.7187429 0.7752320 0.7931116 0.8198742 0.8436682 0.8579464 #>   [17,] 0.57035582 0.7168058 0.7246445 0.7491982 0.7530066 0.8162021 0.8288660 #>   [18,] 0.48076809 0.5167243 0.5208469 0.5945959 0.6032790 0.6599381 0.6608388 #>   [19,] 0.62784677 0.6858109 0.7255370 0.8211741 0.8405453 0.8495073 0.8913669 #>   [20,] 0.32653339 0.3297438 0.3475076 0.3615799 0.3696358 0.4674592 0.4951532 #>   [21,] 0.39980349 0.4138907 0.4352259 0.4553390 0.4677349 0.4838522 0.4913767 #>   [22,] 0.20054471 0.5497455 0.7013420 0.7115204 0.7890003 0.8636245 0.9096278 #>   [23,] 1.59766073 1.8140469 1.8479836 1.8763075 1.9899516 2.0192030 2.0314789 #>   [24,] 0.47044061 0.5561324 0.5735371 0.5937835 0.6129487 0.6361924 0.6415175 #>   [25,] 0.16245955 0.4562634 0.6495057 0.6962885 0.7389172 0.7751526 0.7866790 #>   [26,] 0.26967089 0.3219926 0.4063124 0.6028364 0.6052945 0.6292521 0.6296830 #>   [27,] 0.19537667 0.2893713 0.3292229 0.3880748 0.4308946 0.4931665 0.5028380 #>   [28,] 0.29642767 0.5852239 0.7093901 0.7383232 0.7992780 0.8346928 0.8446898 #>   [29,] 0.80344391 0.9712402 1.0012976 1.0242004 1.0728371 1.1975509 1.3025483 #>   [30,] 0.96806557 1.0157016 1.0639564 1.0657454 1.0911481 1.1134685 1.1164093 #>   [31,] 0.46511426 0.5703910 0.8172884 0.8201898 0.8283556 0.9102593 0.9277102 #>   [32,] 0.33949275 0.3696891 0.4886666 0.5283609 0.7458085 0.7481699 0.7526285 #>   [33,] 0.41257476 0.5137401 0.5643063 0.6465333 0.6610257 0.7041642 0.7507789 #>   [34,] 0.50014270 0.6848902 0.6960458 0.6969554 0.7137058 0.7172498 0.7387811 #>   [35,] 0.25863836 0.4073137 0.4095338 0.4237070 0.4325420 0.4622313 0.5367162 #>   [36,] 0.29278185 0.3837736 0.5689921 0.5697790 0.5901890 0.6051639 0.6080732 #>   [37,] 0.36883237 0.5025390 0.8873071 1.1371078 1.1713231 1.1863721 1.1958053 #>   [38,] 0.48814421 0.4961252 0.5237942 0.5729799 0.5770340 0.5819360 0.5834036 #>   [39,] 0.33941803 0.3754397 0.4707616 0.5422675 0.6241927 0.6255342 0.6393391 #>   [40,] 0.36770154 0.4634537 0.5205964 0.5709223 0.5883729 0.6622619 0.6631391 #>   [41,] 0.69936267 0.7516564 0.8824587 0.8844316 0.8969079 1.0097853 1.0200318 #>   [42,] 0.38698005 0.4272722 0.4586803 0.4833049 0.5164599 0.6134898 0.6141483 #>   [43,] 0.55353367 0.6330332 0.7565907 0.8169748 0.8902770 0.8904212 0.9104038 #>   [44,] 0.28426095 0.4186933 0.4228273 0.4709998 0.6280365 0.6589560 0.8198883 #>   [45,] 0.30470045 0.9818811 1.2711771 1.4002254 1.4004609 1.4215972 1.4691090 #>   [46,] 0.53296178 0.6080911 0.7082552 0.7801990 0.8191638 0.8313822 0.8961031 #>   [47,] 0.63592775 0.6494387 0.6863261 0.7066064 0.7092643 0.7189989 0.7231306 #>   [48,] 0.47536524 0.4844387 0.5259831 0.5576279 0.5610902 0.5877933 0.6457227 #>   [49,] 0.42715519 0.6233717 0.6475451 0.8197280 0.8482179 0.8980201 0.9186528 #>   [50,] 0.27584498 0.3406013 0.5243238 0.5574091 0.6186931 0.6242459 0.6522395 #>   [51,] 0.63338943 0.7018136 0.7488429 0.8349200 0.8405453 0.8605995 0.9062774 #>   [52,] 0.25960412 0.3281155 0.6692771 0.6977846 0.7061298 0.7189198 0.7556228 #>   [53,] 0.60817696 0.6200436 0.6227712 0.6287948 0.6446448 0.7285364 0.7748308 #>   [54,] 0.34686816 0.6663983 0.7856639 0.8079631 0.8135336 0.8310274 0.8314521 #>   [55,] 0.51274597 0.6050368 0.6181783 0.7032168 0.7211204 0.7797068 0.7815730 #>   [56,] 0.27793558 0.4719857 0.4994111 0.8137052 0.8168902 0.8282280 0.8790021 #>   [57,] 0.46332526 0.7499718 0.7693236 0.8891796 0.9325850 0.9682084 0.9974631 #>   [58,] 0.92403334 0.9252681 0.9439273 0.9859609 1.0712693 1.1118712 1.1570095 #>   [59,] 0.51484193 0.5687870 0.5868571 0.5886812 0.5965382 0.6687545 0.6706275 #>   [60,] 0.33821302 0.4310662 0.4763699 0.5463553 0.6296830 0.6400075 0.6493819 #>   [61,] 0.39737131 0.4363509 0.5736721 0.5883733 0.6360160 0.6407702 0.6494413 #>   [62,] 0.23682031 0.3394180 0.4558186 0.5610141 0.5743369 0.5887694 0.5956980 #>   [63,] 0.70645852 0.8648866 0.8868743 0.9466200 1.0272904 1.0349415 1.0659482 #>   [64,] 0.37191861 0.4973031 0.5406853 0.5697790 0.6271420 0.6463037 0.6519820 #>   [65,] 0.45396878 0.4690910 0.4909545 0.5567332 0.5807384 0.5858078 0.6016178 #>   [66,] 0.59469549 0.7321369 0.7646562 1.0221741 1.0394747 1.1058191 1.1483679 #>   [67,] 0.54677347 0.5617653 0.5699939 0.6457079 0.7604528 0.9073662 0.9433478 #>   [68,] 0.27238596 0.5278967 0.6032922 0.8044423 0.8177762 0.9732008 1.0337359 #>   [69,] 0.63829921 0.6844912 0.6889476 0.7091801 0.8454624 0.8678373 0.9376009 #>   [70,] 0.65843910 0.8723733 0.8870624 0.9050116 1.0367442 1.0435866 1.0728371 #>   [71,] 0.31306891 0.3861039 0.3880287 0.4015922 0.4107817 0.4566687 0.4654570 #>   [72,] 0.56539174 0.7879028 0.8174459 0.8699523 0.9233875 0.9353015 0.9616592 #>   [73,] 0.61270654 0.6860518 0.6892273 0.6995688 0.7121696 0.7769678 0.7776278 #>   [74,] 0.58522390 0.6848985 0.7851221 0.9709874 1.0066256 1.1030517 1.1751207 #>   [75,] 0.54385134 0.6494621 0.8795893 0.9596434 0.9998074 1.0206369 1.0270447 #>   [76,] 0.19038741 0.2574256 0.3893229 0.5157965 0.5365264 0.5527177 0.5868571 #>   [77,] 0.40714166 0.5533565 0.7526739 0.8451082 0.8533280 0.8990936 0.9617648 #>   [78,] 0.47248714 0.5964775 0.6844912 0.7222080 0.7527496 0.7567860 0.7838123 #>   [79,] 0.39497632 0.5844039 0.5995118 0.6426036 0.6768769 0.6962885 0.7049578 #>   [80,] 0.51260471 0.6677600 0.6933721 0.8007227 0.8086333 0.8354859 0.8372658 #>   [81,] 0.63592775 0.6924888 0.6953589 0.7043307 0.7177605 0.7458507 0.7463989 #>   [82,] 0.32169585 0.3953977 0.5277830 0.5393037 0.5697428 0.6224058 0.6951822 #>   [83,] 1.01863778 1.2792347 1.5481816 1.8670274 1.9548026 2.0289420 2.0561684 #>   [84,] 0.62264430 0.6709897 0.6890226 0.7141786 0.7147230 0.7453049 0.7526447 #>   [85,] 0.27793558 0.3081597 0.3985069 0.7110701 0.7732601 0.7812368 0.7932387 #>   [86,] 0.63810798 0.6624797 0.7567860 0.8107556 0.8249317 0.8531857 0.8746924 #>   [87,] 0.39903161 0.6287029 0.6496414 0.7391644 0.7550117 0.7931116 0.8160507 #>   [88,] 1.25417109 1.2918730 1.2937787 1.3169346 1.3412284 1.3987194 1.4486985 #>   [89,] 0.45421022 0.5463658 0.5609010 0.6062415 0.6191247 0.6304755 0.6324031 #>   [90,] 0.87846302 0.9728359 1.0831559 1.1944013 1.2133692 1.2331036 1.3102309 #>   [91,] 0.61715715 0.9602818 1.0454655 1.0688511 1.1236397 1.1459006 1.1988398 #>   [92,] 0.35648233 0.4364238 0.4408212 0.4841213 0.5222144 0.5454352 0.5635151 #>   [93,] 0.28658879 0.4078948 0.4690796 0.4759723 0.6328515 0.6846895 0.7080893 #>   [94,] 0.22545990 0.2847783 0.3429035 0.3510628 0.3648472 0.4421383 0.4728477 #>   [95,] 0.35648233 0.3833873 0.4708465 0.4931665 0.5014736 0.5227236 0.5256869 #>   [96,] 0.35350199 0.3990995 0.4256113 0.4856390 0.5989840 0.6462501 0.6467032 #>   [97,] 0.45940639 0.5395319 0.6381080 0.7411336 0.7521742 0.8379244 0.8962983 #>   [98,] 0.52598306 0.5886812 0.6202368 0.6225515 0.6345432 0.6373488 0.6495173 #>   [99,] 0.29995848 0.3059037 0.4689411 0.4812125 0.5429289 0.5766667 0.5964905 #>  [100,] 0.54114132 0.6860518 0.7167214 0.7887749 0.8539675 0.8543964 0.8956357 #>  [101,] 0.32199260 0.3986617 0.4763699 0.4989373 0.5204300 0.5855872 0.5863483 #>  [102,] 0.41029234 0.9965006 1.0471668 1.0734060 1.1626933 1.1948878 1.1984193 #>  [103,] 0.41717956 0.7013420 0.7635375 0.7915812 0.9055612 0.9542071 1.0153344 #>  [104,] 0.75741933 0.8220782 0.9217080 0.9387848 0.9970039 1.0260254 1.0302210 #>  [105,] 0.73595178 0.8873318 1.0339644 1.1590104 1.1789478 1.1980882 1.2225401 #>  [106,] 0.43079200 0.4631901 0.5374600 0.5792412 0.5966526 0.6203439 0.6379251 #>  [107,] 0.23383132 0.5441506 0.6170781 0.7375200 0.7644017 0.8165081 0.8171025 #>  [108,] 0.33759104 0.5287803 0.5710901 0.6375183 0.6905039 0.7387811 0.7567007 #>  [109,] 1.08095059 1.1283139 1.1991036 1.2600004 1.2964554 1.3096673 1.3426851 #>  [110,] 0.50876598 0.5921473 0.9055819 0.9188776 0.9990895 1.0235102 1.0942546 #>  [111,] 0.35763033 0.3883184 0.4399064 0.4822963 0.4979787 0.5183784 0.5285273 #>  [112,] 0.38349958 0.5849528 0.6330408 0.6567100 0.6613668 0.6720151 0.6729114 #>  [113,] 0.57082109 0.7751526 0.7865709 0.8351459 0.8370909 0.9246755 0.9278242 #>  [114,] 0.47130864 0.5329618 0.6235000 0.6502335 0.6584162 0.6934661 0.7049387 #>  [115,] 0.63907666 0.7049387 0.7050752 0.7154684 0.7214980 0.8028655 0.8283556 #>  [116,] 0.22077414 0.3740513 0.3961501 0.4232905 0.5271446 0.5345596 0.5495628 #>  [117,] 0.41029234 1.0010745 1.0341682 1.0344150 1.0995188 1.1118281 1.1356830 #>  [118,] 0.45940639 0.4699254 0.5183063 0.6369554 0.7463989 0.7832220 0.7849576 #>  [119,] 0.28240870 0.4031214 0.4979656 0.6109754 0.6345847 0.6996239 0.6997147 #>  [120,] 0.56158911 0.6054975 0.6099468 0.6536085 0.7817072 0.9888181 1.0157016 #>  [121,] 0.40247404 0.4318578 0.5215311 0.5243238 0.5979154 0.6470008 0.6552868 #>  [122,] 0.40274924 0.4031844 0.5711022 0.5917579 0.5919549 0.7213135 0.7364091 #>  [123,] 0.60611621 0.7091463 0.8221479 0.8372658 0.8980069 0.9262264 0.9321404 #>  [124,] 0.41464789 1.0010197 1.0205604 1.0402824 1.0587114 1.1254864 1.1517230 #>  [125,] 0.28937131 0.3662641 0.4653283 0.4909545 0.5328843 0.5816380 0.5947235 #>  [126,] 0.46025151 0.6191247 0.7520811 0.7791901 0.8067468 0.8455930 0.8460332 #>  [127,] 0.29120843 0.3507802 0.3812827 0.3953375 0.4464647 0.4573723 0.4665327 #>  [128,] 0.34094852 0.6043055 0.6845878 0.6850045 0.6959121 0.7155374 0.7349928 #>  [129,] 0.27426835 0.3959033 0.5494167 0.6025337 0.6100318 0.6462167 0.6552868 #>  [130,] 0.57433686 0.5748293 0.6241927 0.6706325 0.6791553 0.7144693 0.7301924 #>  [131,] 0.31396699 0.4684905 0.4759154 0.4955614 0.5245070 0.5478489 0.5486822 #>  [132,] 0.76789248 0.8149008 0.9256861 0.9800573 0.9833751 1.0197463 1.0263979 #>  [133,] 0.88208721 0.9249866 0.9354684 0.9388637 0.9559000 0.9750528 1.0361692 #>  [134,] 0.61708580 0.6525094 0.6570089 0.9387570 0.9602818 0.9691437 1.0251930 #>  [135,] 0.28426095 0.4772932 0.4786090 0.5206393 0.5628856 0.6097864 0.7387415 #>  [136,] 0.44831558 0.5127460 0.5362471 0.6519500 0.7157729 0.7167543 0.7271102 #>  [137,] 0.24974358 0.3209453 0.3539487 0.3830015 0.5041247 0.5157016 0.5203094 #>  [138,] 0.31931648 0.4249690 0.4256113 0.4266652 0.4510702 0.4586192 0.4591229 #>  [139,] 0.69626912 0.7379103 0.8197280 0.9689982 0.9869404 0.9988823 1.0259321 #>  [140,] 0.41127247 0.4617760 0.4864286 0.4883893 0.4900019 0.5027172 0.6102615 #>  [141,] 0.53624709 0.5548242 0.5653917 0.6661856 0.6983874 0.7211204 0.8070542 #>  [142,] 0.54342734 0.6926599 0.7499269 0.7756645 0.8555060 0.9073662 0.9197812 #>  [143,] 0.25835248 0.4401716 0.6821274 0.7169472 0.7295887 0.7412124 0.7530223 #>  [144,] 0.37288401 0.3825208 0.4107817 0.4821423 0.5499731 0.5562115 0.5796410 #>  [145,] 0.21030639 0.2785462 0.4123985 0.4669716 0.4732558 0.4833977 0.5063226 #>  [146,] 0.51495523 0.5966214 0.6125103 0.6208414 0.6805892 0.6939378 0.6991962 #>  [147,] 0.78968624 0.9653123 1.0082087 1.0322469 1.0782839 1.1047671 1.1267392 #>  [148,] 0.32169585 0.3320582 0.4543437 0.4659716 0.6075639 0.6270983 0.6488636 #>  [149,] 0.38259165 0.4460856 0.4648490 0.5297408 0.5778744 0.5884685 0.6019538 #>  [150,] 0.10056470 0.3708057 0.4856941 0.5037734 0.5585040 0.5855872 0.5877707 #>  [151,] 1.66856627 1.9087929 1.9811330 1.9931557 2.1768281 2.2075089 2.2076426 #>  [152,] 0.35590767 0.5438513 0.6660228 0.6673668 0.7157729 0.7507198 0.8365011 #>  [153,] 0.26076896 0.3838781 0.3885606 0.4302828 0.4388808 0.4687455 0.5586428 #>  [154,] 0.56414338 0.5900342 0.6303282 0.6378671 0.8358980 0.8743122 0.8951446 #>  [155,] 0.59740752 0.7299565 0.7617586 0.8130695 0.8844316 0.8868743 0.9096114 #>  [156,] 0.60529448 0.6136487 0.6333894 0.6710937 0.6759023 0.6812683 0.6932412 #>  [157,] 0.56599222 0.6632949 0.7293174 0.7383232 0.7423494 0.7702519 0.8028673 #>  [158,] 0.62411959 0.6867864 0.6891382 0.8592858 0.9009264 0.9102488 0.9642903 #>  [159,] 0.32597475 0.4568094 0.4957509 0.6384628 0.6845168 0.6878079 0.7218700 #>  [160,] 0.38148904 0.5990851 0.6350829 0.6448165 0.7297972 0.8301513 0.8777101 #>  [161,] 0.39803275 0.5937464 0.6185920 0.6227712 0.6381425 0.7012953 0.7039399 #>  [162,] 0.38270641 0.4555315 0.4580005 0.4882100 0.5199340 0.5513287 0.5723590 #>  [163,] 0.31587034 0.3190670 0.3657419 0.3670938 0.5698535 0.5791075 0.6152388 #>  [164,] 0.61828202 0.6195973 0.6662157 0.9271101 0.9318509 0.9371674 0.9680270 #>  [165,] 0.52504943 0.5944451 0.8294644 1.0195868 1.0608577 1.0672808 1.1243613 #>  [166,] 0.63285154 0.6592368 0.6610078 0.7188794 0.7279027 0.7664387 0.8042323 #>  [167,] 0.54677347 0.7361906 0.8270926 0.8290750 0.9125749 0.9497276 0.9660846 #>  [168,] 0.69473354 0.9616592 0.9931887 1.0227616 1.0692522 1.1623481 1.2004560 #>  [169,] 0.44573936 0.6243000 0.7330188 0.7867289 0.7963011 0.8835100 0.9096943 #>  [170,] 0.35395550 0.4307920 0.4736711 0.5267343 0.5475338 0.5888996 0.6075639 #>  [171,] 0.40154463 0.5617653 0.5916264 0.5935852 0.7441780 0.7651050 0.7730793 #>  [172,] 0.56784506 0.6093244 0.7063232 0.7574482 0.7664078 0.8685334 0.8776936 #>  [173,] 0.33769735 0.3447957 0.4177351 0.4226236 0.4759154 0.5167833 0.5588748 #>  [174,] 0.48962163 0.5407679 0.5627468 0.5748926 0.5992676 0.6566602 0.7107093 #>  [175,] 0.25953878 0.4019837 0.5599294 0.5678492 0.5742560 0.5765909 0.6139482 #>  [176,] 0.34410590 0.5868205 0.7320507 0.8039579 0.8063443 0.8291370 0.9950724 #>  [177,] 0.29278185 0.3719186 0.4385573 0.4613315 0.5031218 0.5408100 0.5559240 #>  [178,] 0.56966735 0.6099044 0.6608253 0.6723007 0.6732952 0.8001775 0.8103694 #>  [179,] 0.12679254 0.1864310 0.2248328 0.3407851 0.3996061 0.4375315 0.4723229 #>  [180,] 0.28479612 0.3494694 0.4138907 0.4539024 0.4783321 0.5028935 0.5120228 #>  [181,] 0.48993914 0.5189979 0.5854674 0.6201832 0.6480980 0.6768170 0.6821274 #>  [182,] 0.58654924 0.6695603 0.7227365 0.9427269 0.9542071 1.0465231 1.0545909 #>  [183,] 0.91203576 0.9810805 1.1808772 1.1861232 1.2792347 1.3745899 1.4081281 #>  [184,] 0.27628951 0.3139670 0.3317759 0.3447957 0.5150510 0.5326546 0.5462745 #>  [185,] 0.99038843 1.2107548 1.2786223 1.3234541 1.4037951 1.4173231 1.4513638 #>  [186,] 0.38115813 0.5538736 0.5622796 0.5990162 0.6375915 0.6390126 0.6582599 #>  [187,] 0.55354689 0.7216736 0.8246774 0.8249317 0.8479728 0.8678373 1.0326800 #>  [188,] 0.75555398 0.7819278 0.8277119 0.8303102 0.8366766 0.8489872 0.9120400 #>  [189,] 0.90811931 0.9870404 1.1385499 1.1595015 1.1717044 1.1798927 1.2254410 #>  [190,] 0.63452219 0.9564062 1.0410290 1.2147722 1.3531829 1.3575329 1.4151685 #>  [191,] 0.30791665 0.5252708 0.5363580 0.6394326 0.6539556 0.6576891 0.6845168 #>  [192,] 0.28073323 0.2932371 0.3292229 0.3327545 0.3587896 0.4271709 0.5313588 #>  [193,] 0.71330157 0.7225138 0.8143040 1.0163228 1.2140269 1.2830488 1.3342254 #>  [194,] 0.27450751 0.3981525 0.4249690 0.4475695 0.4621890 0.4689227 0.4710634 #>  [195,] 0.59043796 0.5919549 0.6764644 0.6998761 0.7765169 0.8201133 0.8469276 #>  [196,] 0.63447005 0.7867034 0.8733144 0.9144469 1.0400980 1.0548417 1.0646003 #>  [197,] 0.22100633 0.2943064 0.4109986 0.4449462 0.5054382 0.5116342 0.5139755 #>  [198,] 0.43102573 0.5538839 0.5900342 0.7599598 0.8398301 0.8774304 0.9069330 #>  [199,] 0.74704159 0.7866294 0.8105152 0.8340287 0.8447951 0.8914623 0.9266496 #>  [200,] 0.64629859 1.1230261 1.1916183 1.2467229 1.3628229 1.4526076 1.4966425 #>  [201,] 0.27973032 0.5356038 0.5370802 0.5719231 0.5780882 0.5908807 0.7115535 #>  [202,] 0.54164140 0.5944451 0.6607913 0.8881241 0.9573510 0.9643234 1.0058374 #>  [203,] 0.44843365 0.7791901 0.7941644 0.8626945 0.9230259 0.9425263 0.9900598 #>  [204,] 0.43060313 0.4495803 0.4822963 0.5360585 0.6188506 0.6889476 0.6928561 #>  [205,] 0.10003140 0.3059037 0.3301901 0.5890308 0.6123248 0.6255605 0.6583311 #>  [206,] 0.25504031 0.3035717 0.3179326 0.3354104 0.3407851 0.3829726 0.4123985 #>  [207,] 0.44890335 0.5999442 0.6254448 0.7477292 0.8317344 0.8646222 0.8748692 #>  [208,] 0.44311855 0.6244780 0.8590320 0.8610191 0.9102488 0.9102593 0.9574631 #>  [209,] 0.48937734 0.4991117 0.5616403 0.5764544 0.5809511 0.7162433 0.7167224 #>  [210,] 0.90615374 0.9232588 0.9773986 0.9866050 0.9966387 0.9979840 1.0134549 #>  [211,] 0.11312551 0.1267925 0.2222364 0.3179326 0.3762831 0.3983835 0.4217009 #>  [212,] 0.38372323 0.4367137 0.4940608 0.5237942 0.6046815 0.6627981 0.6768170 #>  [213,] 0.54974549 0.6406177 0.7126520 0.7571741 0.7817072 0.7831441 0.8245258 #>  [214,] 0.20170135 0.4164333 0.4817499 0.5686104 0.6382653 0.6387487 0.6494516 #>  [215,] 0.06237336 0.3281642 0.3812827 0.3891145 0.3983835 0.3996061 0.4015922 #>  [216,] 0.48430292 0.5266183 0.6895173 0.7314808 0.7401930 0.7531130 0.7617586 #>  [217,] 0.29820803 0.3343835 0.4596104 0.7014713 0.7889590 0.8211741 0.9390143 #>  [218,] 0.45961037 0.4850578 0.5135069 0.8192250 0.8495073 1.1631608 1.1666677 #>  [219,] 0.28852184 0.3258461 0.5962003 0.5989130 0.6401751 0.6619468 0.7115883 #>  [220,] 0.81608911 0.8273200 0.9132853 0.9310469 0.9944217 1.0334463 1.0592761 #>  [221,] 0.33730881 0.3696891 0.3868504 0.6416400 0.6471885 0.7151517 0.7456964 #>  [222,] 0.28240549 0.4186933 0.4763591 0.5538736 0.5628856 0.7180531 0.7423165 #>  [223,] 0.34686816 0.6057450 0.8550270 0.8582309 0.9428898 0.9448337 0.9504230 #>  [224,] 0.38005335 0.3800747 0.5707808 0.5814598 0.5917579 0.6160297 0.6740929 #>  [225,] 0.50724200 0.5791509 0.6155668 0.7044269 0.7119055 0.7171147 0.7200326 #>  [226,] 0.34060129 0.3728348 0.4318578 0.4603738 0.4989522 0.5047237 0.5208469 #>  [227,] 0.67293328 0.7926819 0.8288348 0.8639238 0.9145132 0.9174458 0.9296704 #>  [228,] 0.39909945 0.4774861 0.5818249 0.6575424 0.6630173 0.7007192 0.7013467 #>  [229,] 0.35963449 0.4071866 0.4491155 0.4558186 0.4603304 0.4707616 0.4748896 #>  [230,] 0.52288869 0.6134511 0.6152388 0.6440173 0.6458077 0.6721886 0.6904608 #>  [231,] 0.34692508 0.3696358 0.4285596 0.4459778 0.4520388 0.4953181 0.5257532 #>  [232,] 0.49806188 0.5881837 0.6159628 0.6601572 0.6640917 0.6830155 0.6922257 #>  [233,] 0.44605107 0.4532209 0.4849425 0.5023153 0.5258581 0.5963303 0.6231800 #>  [234,] 1.01533440 1.1124254 1.1546458 1.1748527 1.2084617 1.2408402 1.3453886 #>  [235,] 0.12916052 0.2450875 0.4654570 0.4704883 0.4812125 0.5295769 0.5406676 #>  [236,] 0.32508856 0.3625790 0.4190897 0.4452314 0.4709804 0.5389230 0.5998565 #>  [237,] 0.33783236 0.4303649 0.7334364 0.7482847 0.7555540 0.8200852 0.8460011 #>  [238,] 1.12980073 1.1659380 1.2242362 1.3482937 1.4116386 1.4518397 1.4650148 #>  [239,] 0.33391831 0.3739773 0.3858004 0.4045377 0.5003845 0.5344081 0.5698197 #>  [240,] 0.70094912 0.7048947 0.9262634 0.9306163 0.9710873 1.0201009 1.0432042 #>  [241,] 0.29325502 0.4363509 0.4644053 0.5001015 0.5214372 0.5924313 0.6660390 #>  [242,] 0.39248472 0.4706914 0.4845098 0.4893066 0.5515104 0.5597947 0.5737190 #>  [243,] 0.62569799 0.6356856 0.6785159 0.7225286 0.7352189 0.8171197 0.8975463 #>  [244,] 0.33260636 0.4059391 0.4690796 0.5371530 0.5681552 0.6011079 0.6312816 #>  [245,] 0.63531461 0.8447652 1.1166358 1.1904564 1.2426880 1.2432725 1.2478461 #>  [246,] 0.27426835 0.4104077 0.6103806 0.6226443 0.6306354 0.6523336 0.6596056 #>  [247,] 1.29239340 1.4888683 1.6737001 1.7334310 1.7934003 1.8219172 1.8551121 #>  [248,] 0.27608770 0.4539688 0.4557234 0.4880879 0.5076537 0.5096409 0.5316686 #>  [249,] 0.46992544 0.5395319 0.6651942 0.6953589 0.7547695 0.8004019 0.8548397 #>  [250,] 0.50251465 0.6330332 0.7665035 0.7921936 0.8017882 0.8548522 0.8750616 #>  [251,] 0.28240870 0.4210821 0.4790189 0.5847960 0.6252018 0.6623799 0.6691254 #>  [252,] 0.33438348 0.4659409 0.5135069 0.7255370 0.8548397 0.8984973 0.9192912 #>  [253,] 0.81777624 0.9259112 1.0573715 1.1592447 1.3565031 1.3643718 1.5323545 #>  [254,] 1.21438781 1.2405605 1.3919226 1.4311952 1.4921667 1.5213085 1.5907052 #>  [255,] 0.20054471 0.6171070 0.7126520 0.7915812 0.8563788 0.8616238 0.8968271 #>  [256,] 0.28971304 0.3707839 0.4562021 0.5891600 0.6088008 0.6193188 0.6833704 #>  [257,] 0.22106863 0.4885859 0.5307926 0.5836023 0.6677843 0.6695752 0.6819306 #>  [258,] 0.33652297 0.3654640 0.3685023 0.3694885 0.4383526 0.4496146 0.5150510 #>  [259,] 0.37369136 0.4856390 0.6180733 0.6608253 0.6630173 0.7611525 0.7939054 #>  [260,] 0.52661028 0.5608562 0.5640670 0.5816437 0.5881306 0.5921908 0.5996711 #>  [261,] 0.61507154 0.9807046 1.0457623 1.0946166 1.1438024 1.1734915 1.2761728 #>  [262,] 0.26076896 0.3348563 0.3510628 0.4511197 0.4839174 0.5049179 0.5238480 #>  [263,] 0.33730881 0.3394927 0.6208742 0.6654872 0.6840454 0.6937567 0.6962139 #>  [264,] 0.36966777 0.3973713 0.4542989 0.5927909 0.6500048 0.6581890 0.6660390 #>  [265,] 0.35791447 0.4634537 0.5305669 0.5425849 0.5639063 0.6147151 0.6407498 #>  [266,] 0.81923510 0.9166847 0.9464026 0.9483903 0.9682084 1.0608891 1.1418788 #>  [267,] 0.20170135 0.2818860 0.5366242 0.5829580 0.6764767 0.6900815 0.7014768 #>  [268,] 0.24374289 0.3265334 0.4895387 0.4953181 0.4988367 0.5161810 0.5579855 #>  [269,] 0.17310963 0.4342294 0.4374592 0.5098522 0.7026075 0.7082772 0.7981211 #>  [270,] 0.49294064 0.5528531 0.5958516 0.6749671 0.6963642 0.7031327 0.7483772 #>  [271,] 0.39004384 0.4728779 0.4894367 0.5478101 0.6084304 0.6367130 0.7009491 #>  [272,] 0.96158690 0.9807046 1.0822543 1.2235410 1.4534768 1.5295320 1.5985022 #>  [273,] 0.38153693 0.5701367 0.6088014 0.6737083 0.6835653 0.6851201 0.7709186 #>  [274,] 0.29820803 0.4659409 0.4850578 0.6278468 0.6955521 0.8864970 0.9338659 #>  [275,] 1.13704606 1.4258287 1.5959207 1.6483454 1.6991704 1.7075687 1.7086818 #>  [276,] 0.39782692 0.6251502 0.6574272 0.6592062 0.6838218 0.7016447 0.7110242 #>  [277,] 0.53664864 0.6032790 0.6688923 0.6834491 0.6905167 0.6999357 0.7009884 #>  [278,] 0.36546396 0.4274962 0.4588231 0.4893826 0.4945966 0.5056786 0.5213313 #>  [279,] 1.13653112 1.1557354 1.1714900 1.1821645 1.2183352 1.3090915 1.3598180 #>  [280,] 0.41257476 0.5070013 0.6945692 0.7144696 0.7305451 0.7763432 0.8036528 #>  [281,] 0.33972136 0.5340011 0.5622254 0.5779482 0.5921362 0.6941670 0.6942430 #>  [282,] 0.23733572 0.5584803 0.5879825 0.6020466 0.6335905 0.6375915 0.6638127 #>  [283,] 0.53605849 0.5465433 0.6373488 0.6810191 0.7091801 0.7161525 0.7388246 #>  [284,] 0.33594014 0.4734747 0.5573738 0.5831771 0.5854302 0.6925495 0.7268457 #>  [285,] 0.22077414 0.3702470 0.3883577 0.4777292 0.4803287 0.5365068 0.5503466 #>  [286,] 0.32269791 0.3485468 0.7829960 0.9164836 0.9204376 0.9282334 1.0599396 #>  [287,] 1.07387851 1.1251817 1.1320876 1.1763971 1.1872227 1.1988398 1.2381729 #>  [288,] 0.72168795 0.9007362 0.9877518 1.0168117 1.0353316 1.0890537 1.1570095 #>  [289,] 0.65754236 0.7286136 0.7758408 0.7764995 0.7820887 0.8103694 0.8373761 #>  [290,] 0.76789248 0.8628406 0.9223129 0.9429318 0.9565190 1.0160730 1.0257365 #>  [291,] 0.36743034 0.4234922 0.4342407 0.4687455 0.5234093 0.5257939 0.5441846 #>  [292,] 0.24974358 0.4476562 0.4540583 0.5037920 0.5153965 0.5363595 0.5450023 #>  [293,] 0.18381135 0.3444157 0.3902208 0.5127112 0.5514441 0.6321338 0.6543625 #>  [294,] 0.41231658 0.4903930 0.5288898 0.5526200 0.5821148 0.5878515 0.6042681 #>  [295,] 1.29238528 1.4141908 1.5575175 1.5793369 1.6154122 1.6558265 1.6737986 #>  [296,] 0.39934030 0.4525171 0.4817499 0.5008473 0.5366242 0.5947235 0.6016178 #>  [297,] 0.69661282 0.7439207 0.8171197 0.9312089 1.0279502 1.0334923 1.0578420 #>  [298,] 0.53147942 0.5422675 0.5748293 0.6056330 0.6171181 0.6821222 0.6889750 #>  [299,] 0.47084654 0.4844387 0.5009334 0.5181280 0.5183784 0.5222144 0.5373822 #>  [300,] 0.95011997 1.1029254 1.1383477 1.2956666 1.3396734 1.3726962 1.3910654 #>  [301,] 0.76221454 0.8079962 0.8253231 0.9242239 0.9350174 0.9663867 0.9907151 #>  [302,] 0.75395965 0.9810805 1.0186378 1.2388547 1.2415977 1.2998242 1.3013222 #>  [303,] 0.64380839 0.6980883 0.7210090 0.7590943 0.8555060 0.8885611 0.9475778 #>  [304,] 0.75395965 0.7600832 0.8039594 0.8685312 0.9023792 0.9101261 0.9242493 #>  [305,] 0.24662311 0.4542989 0.5214372 0.5406911 0.5883733 0.6341445 0.6662300 #>  [306,] 0.34807209 0.4022682 0.6623799 0.6761416 0.7182650 0.7288808 0.7418384 #>  [307,] 0.31024644 0.3259748 0.4354366 0.5918586 0.6231800 0.6592062 0.6711536 #>  [308,] 0.46025151 0.4674005 0.5609010 0.5652339 0.6268110 0.6698877 0.6765744 #>  [309,] 0.49624645 0.6406177 0.6413148 0.7595406 0.7629489 0.8036407 0.8073717 #>  [310,] 0.69626912 0.7910070 0.9042358 1.0192058 1.0221741 1.1553878 1.2236201 #>  [311,] 0.65225534 0.6536085 0.7571741 0.7867300 0.7986403 0.8487066 0.9161415 #>  [312,] 0.54962933 0.6949470 0.7349250 0.7435730 0.7651919 0.7832102 0.8028022 #>  [313,] 0.53405169 0.6677600 0.7043262 0.7991679 0.9121599 0.9533139 1.0051645 #>  [314,] 0.26848903 0.3064760 0.3268519 0.4449462 0.5370802 0.5489821 0.5818562 #>  [315,] 0.77439205 0.8243138 0.9166967 1.0284754 1.2299463 1.3120232 1.4414857 #>  [316,] 0.66299150 0.7172106 0.7535922 0.8243138 0.8806144 1.0829208 1.1235612 #>  [317,] 0.81023138 0.9081193 1.1859445 1.2024897 1.2851820 1.3157841 1.3264332 #>  [318,] 0.29637797 0.4068758 0.4324694 0.5090084 0.5279757 0.5315649 0.5754244 #>  [319,] 0.25504031 0.3329727 0.4704406 0.4723229 0.4732558 0.4735625 0.5063648 #>  [320,] 0.40274924 0.5223158 0.5707808 0.6885382 0.6892676 0.7200664 0.7596961 #>  [321,] 0.16813932 0.3426724 0.4340501 0.4646078 0.5595632 0.6310664 0.6378771 #>  [322,] 0.68681034 0.7062886 0.7765049 0.8630667 0.9206367 0.9859609 1.0488570 #>  [323,] 0.39497632 0.4281465 0.4773379 0.5455625 0.5973498 0.7207007 0.7345945 #>  [324,] 0.24922698 0.2962279 0.4310395 0.4421383 0.4649365 0.4897806 0.4986950 #>  [325,] 0.37311763 0.3993403 0.4276626 0.5641802 0.5672217 0.5840366 0.5918586 #>  [326,] 0.55701506 0.6583311 0.6824848 0.7195371 0.7219725 0.7413311 0.7470579 #>  [327,] 0.21652698 0.3078444 0.3434401 0.3587896 0.3977728 0.4005302 0.4280700 #>  [328,] 0.30948032 0.5764544 0.5863580 0.6173242 0.6663983 0.6992488 0.7275705 #>  [329,] 0.46072337 0.4634209 0.4978219 0.5539711 0.5687607 0.5940066 0.6161049 #>  [330,] 0.42814646 0.4346553 0.5305800 0.6527600 0.6768769 0.7664590 0.7708566 #>  [331,] 0.57449256 0.6561775 0.7981211 0.8297055 0.8971917 0.9977043 1.0156162 #>  [332,] 0.22545990 0.3933605 0.4051397 0.4511197 0.4676353 0.5200766 0.5342223 #>  [333,] 0.33252077 0.4071866 0.4806709 0.5610141 0.5975155 0.6051104 0.6170781 #>  [334,] 0.37529437 0.5833360 0.6770280 0.7234684 0.7415980 0.7488292 0.7664590 #>  [335,] 0.40496380 0.6488948 0.7093362 0.7187429 0.8103730 0.8628406 0.8692157 #>  [336,] 0.44305823 0.5403873 0.5792892 0.6152616 0.6905251 0.7059558 0.8035696 #>  [337,] 0.46745924 0.5371530 0.5579855 0.5712262 0.5919851 0.6964608 0.6997563 #>  [338,] 0.48361281 0.5143612 0.5935852 0.6202368 0.6276762 0.6457079 0.6805079 #>  [339,] 1.24204296 1.3598701 1.3661622 1.3917012 1.4744153 1.4861716 1.5059206 #>  [340,] 1.01361560 1.0165571 1.1252671 1.1794667 1.1798927 1.2219324 1.2537686 #>  [341,] 0.31305527 0.4772068 0.4933858 0.5373854 0.5805057 0.6314675 0.6456870 #>  [342,] 0.49806188 0.6274640 0.6373658 0.6878646 0.7132435 0.7157198 0.7530425 #>  [343,] 0.34290353 0.3933605 0.4080253 0.4479085 0.4528264 0.4709804 0.4984035 #>  [344,] 0.40884313 0.6634642 0.6968299 0.7384885 0.7389519 0.7704630 0.7708566 #>  [345,] 0.37798439 0.5882473 0.6775239 0.7136654 0.7514302 0.7521384 0.7884753 #>  [346,] 0.31408833 0.4401017 0.5322650 0.5752485 0.5879520 0.6068689 0.6953001 #>  [347,] 0.51260471 0.5702912 0.6061162 0.6468376 0.6704437 0.7367035 0.7921567 #>  [348,] 0.29642767 0.6171963 0.6962368 0.6972758 0.7254041 0.7423494 0.7631248 #>  [349,] 0.28755861 0.2880371 0.4068758 0.4563416 0.4745169 0.4794331 0.5534957 #>  [350,] 0.32140092 0.5363439 0.5465911 0.7136654 0.7669481 0.8366766 0.8891796 #>  [351,] 0.61690196 0.6512854 0.7495431 0.7764858 0.8249347 0.8431606 0.9070890 #>  [352,] 0.22409788 0.4048721 0.5748926 0.6642547 0.6673668 0.7922034 0.8308174 #>  [353,] 0.59398002 0.6721093 0.6906294 0.6933721 0.7356157 0.7390581 0.7472374 #>  [354,] 0.48161441 0.5606364 0.6787768 0.6905039 0.7272528 0.7504286 0.7979589 #>  [355,] 0.45459312 0.5414680 0.5999442 0.6058660 0.6289278 0.6533093 0.6594240 #>  [356,] 0.24084440 0.3130553 0.3981525 0.4094005 0.4129417 0.4510702 0.4862663 #>  [357,] 0.31408833 0.3835731 0.4481376 0.4696448 0.4754801 0.4774937 0.4823782 #>  [358,] 0.41717956 0.5791509 0.7227365 0.7890003 0.8622857 0.8654571 0.9507295 #>  [359,] 0.35395550 0.4543437 0.4997880 0.5150896 0.5284405 0.5907524 0.6379505 #>  [360,] 0.43899779 0.5709945 0.6254839 0.6311965 0.7009539 0.7424594 0.7809488 #>  [361,] 0.25551588 0.2958697 0.3365230 0.3376974 0.4588231 0.5291259 0.5462745 #>  [362,] 0.50935871 0.5835107 0.7349250 0.7359518 0.8781376 0.9050770 0.9116382 #>  [363,] 0.50846774 0.5186946 0.5294617 0.5333304 0.5723590 0.5884338 0.6731677 #>  [364,] 0.56381089 0.7133016 0.7760770 0.8163529 0.8485114 0.9401014 1.0988320 #>  [365,] 0.35590457 0.3688324 0.5940864 1.0784581 1.2539646 1.2680164 1.3063491 #>  [366,] 1.29239340 1.3845542 1.3943162 1.5401999 1.6853033 1.6853937 1.7610387 #>  [367,] 0.38153693 0.4009567 0.4349614 0.4837910 0.5463658 0.6838549 0.8303093 #>  [368,] 0.18227980 0.2628687 0.3545224 0.4729282 0.6899521 0.7551578 0.7902501 #>  [369,] 0.32007767 0.3334947 0.3983338 0.4034628 0.4650741 0.4940608 0.4961252 #>  [370,] 0.29586971 0.3685023 0.4220473 0.4226236 0.5056786 0.5114604 0.5359278 #>  [371,] 0.09735444 0.1643995 0.2685922 0.3602101 0.4963281 0.5153965 0.5315649 #>  [372,] 0.24801648 0.2487663 0.3670938 0.4482313 0.4738569 0.4838522 0.4937624 #>  [373,] 0.34912835 0.4832421 0.4955614 0.5440183 0.5664347 0.5778744 0.6227113 #>  [374,] 0.44923049 0.4506019 0.4522367 0.5013145 0.5174165 0.5317469 0.5325773 #>  [375,] 0.29430641 0.3101462 0.3999176 0.4911459 0.5719231 0.5818562 0.5878719 #>  [376,] 0.55395825 0.6570089 0.7526739 0.7673380 0.7754143 0.8004349 0.8284948 #>  [377,] 0.48962163 0.5855157 0.7199582 0.8285624 0.8378106 0.8473923 0.8546371 #>  [378,] 0.35220545 0.4224768 0.4715766 0.4828756 0.5231355 0.5745785 0.5853759 #>  [379,] 0.44541726 1.1327041 1.2307620 1.2391210 1.3141368 1.3292366 1.3315340 #>  [380,] 0.51508962 0.5543547 0.6093411 0.6908479 0.7061402 0.7175165 0.7342958 #>  [381,] 0.33131086 0.4479085 0.4849873 0.5065164 0.5565556 0.5811051 0.5854508 #>  [382,] 0.48127425 0.5761027 0.5822661 0.6129487 0.6188615 0.6342056 0.6581890 #>  [383,] 0.31893772 0.5029773 0.5516628 0.7106489 0.7250558 0.8215553 0.8446975 #>  [384,] 0.21949760 0.3075317 0.3449783 0.3708057 0.3730016 0.5921362 0.6060649 #>  [385,] 0.47099983 0.4763591 0.5206393 0.5366486 0.5727180 0.6114677 0.7296207 #>  [386,] 0.57579131 0.7559029 0.7810171 0.7845990 0.8149008 0.8176516 0.8282442 #>  [387,] 0.50853144 0.5381417 0.7482004 0.9401900 1.0108819 1.0184738 1.0322367 #>  [388,] 0.93864143 1.8242921 1.9479036 2.0371693 2.0422655 2.1518826 2.1571819 #>  [389,] 0.26967089 0.4573467 0.4989373 0.5660203 0.6032922 0.6812683 0.7221586 #>  [390,] 0.17310963 0.4494449 0.4702629 0.5190144 0.6018848 0.6470945 0.7853063 #>  [391,] 0.28535116 0.4598954 0.5159915 0.5544514 0.5729799 0.5836548 0.5836884 #>  [392,] 0.44006400 0.4545223 0.5553345 0.5672217 0.6282674 0.6570071 0.6878079 #>  [393,] 0.26119835 0.4284616 0.4385677 0.4481376 0.4653900 0.4845996 0.5752485 #>  [394,] 0.67062183 0.6711518 0.7039399 0.7624154 0.7889039 0.7893445 0.8160891 #>  [395,] 0.39208336 0.6182820 0.6729114 0.6788292 0.7762689 0.8236196 0.8605349 #>  [396,] 0.19537667 0.2995544 0.3115275 0.3327545 0.3662641 0.4508113 0.4591989 #>  [397,] 0.52321156 0.6400180 0.6494516 0.6934661 0.7014768 0.7082552 0.7182650 #>  [398,] 0.32508856 0.3959033 0.4528264 0.5086825 0.5862215 0.5979154 0.6103806 #>  [399,] 0.22267723 0.3810402 0.6448165 0.6925495 0.7042345 0.7385607 0.9583539 #>  [400,] 0.70645852 1.0817737 1.1110863 1.1371078 1.2634538 1.2680164 1.2872191 #>  [401,] 0.46970502 0.5072248 0.5189072 0.5520579 0.5754394 0.5987662 0.6340124 #>  [402,] 0.24720870 0.3115275 0.3476196 0.3883184 0.4301169 0.4635072 0.4635884 #>  [403,] 0.67917816 0.7290735 0.7388536 0.7437475 0.7596093 0.7823101 0.8581043 #>  [404,] 0.31306891 0.3268734 0.3543427 0.3825208 0.3998673 0.5198844 0.5292979 #>  [405,] 0.09947667 0.3226979 0.8001386 0.8321950 0.8457977 0.8462796 0.8975319 #>  [406,] 0.27513618 0.3064760 0.4130221 0.5385586 0.5703558 0.6174585 0.6253631 #>  [407,] 0.38119404 0.4410883 0.5765909 0.5905353 0.5915874 0.6098532 0.6280555 #>  [408,] 0.34843217 0.4005937 0.4545931 0.4617760 0.4951532 0.5811154 0.6000184 #>  [409,] 0.66626567 0.7533800 0.9525372 0.9829197 1.0109494 1.0195382 1.0337359 #>  [410,] 0.36787849 0.4391753 0.5446270 0.5512763 0.5651005 0.5719809 0.5726413 #>  [411,] 0.58654924 0.7249216 0.7609576 0.8208914 0.8275535 0.9535711 0.9638774 #>  [412,] 0.50808500 0.5894556 0.7159509 0.7609458 0.8287256 0.8578024 0.8845843 #>  [413,] 0.43102573 0.5641434 0.5717329 0.6324392 0.6696040 0.8022839 0.8137485 #>  [414,] 0.45002581 0.4729230 0.4856439 0.4962464 0.5847960 0.6345847 0.6749671 #>  [415,] 0.41231658 0.5232116 0.6184071 0.6572786 0.6694624 0.6953001 0.7353191 #>  [416,] 0.40496380 0.8436682 0.9223129 0.9593552 1.0114491 1.0161139 1.0263979 #>  [417,] 0.45338758 0.5301995 0.5411413 0.7299565 0.7769678 0.7809254 0.8121494 #>  [418,] 0.43060313 0.4362762 0.4399064 0.4482313 0.5406926 0.5775571 0.5844049 #>  [419,] 0.42680842 0.4375750 0.5905353 0.6068246 0.6187133 0.6263757 0.6519820 #>  [420,] 0.61715715 0.8004349 0.9330256 0.9852747 1.0251930 1.0574742 1.0954136 #>  [421,] 0.10923547 0.4702106 0.6130320 0.6658875 0.6867025 0.8160056 0.8222151 #>  [422,] 0.22108300 0.6254448 0.7147230 0.7523024 0.7777200 0.7953459 0.8168243 #>  [423,] 0.53634389 0.5437780 0.5651766 0.6361924 0.6776995 0.7296623 0.7547048 #>  [424,] 0.44541510 0.4856785 0.5631490 0.6115703 0.6283913 0.6374563 0.6409941 #>  [425,] 0.48690853 0.5717329 0.6378671 0.7609458 0.8093232 0.8579464 0.8816028 #>  [426,] 0.52661835 0.6154436 0.8121440 0.8456427 0.8529816 0.8834449 0.8947965 #>  [427,] 0.36002937 0.3625790 0.3853168 0.5086825 0.6283913 0.6520736 0.6533789 #>  [428,] 0.29042844 0.3237882 0.3912551 0.4464647 0.4489497 0.4649365 0.5612206 #>  [429,] 0.58635801 0.7651384 0.7803963 0.8070950 0.8135336 0.8866106 0.9240579 #>  [430,] 0.37078395 0.3882579 0.4392811 0.5462629 0.6608040 0.6630150 0.7192542 #>  [431,] 0.24508750 0.3011399 0.3705103 0.4083377 0.4777740 0.4876836 0.5060369 #>  [432,] 0.32553868 0.4385677 0.4814178 0.4820444 0.5770340 0.6253096 0.6407905 #>  [433,] 0.28852184 0.4143658 0.4848025 0.5304785 0.5337352 0.5563326 0.5878239 #>  [434,] 0.48608691 0.7170991 0.8685901 0.9388637 1.0277561 1.0347308 1.0417549 #>  [435,] 0.47144056 0.5835107 0.7435730 0.8416448 0.8591141 0.9476903 1.0316025 #>  [436,] 0.37188143 0.4852405 0.5988102 0.6303238 0.6427577 0.6454009 0.6462167 #>  [437,] 0.47144056 0.5093587 0.6459658 0.6845389 0.7651919 0.7896960 0.8590320 #>  [438,] 0.29635566 0.3193165 0.4094005 0.4581317 0.4772068 0.4964958 0.5074154 #>  [439,] 0.54079656 0.5974044 0.6888741 0.7182201 0.7664387 0.8558658 0.8734015 #>  [440,] 0.23682031 0.3754397 0.4978011 0.5054382 0.5279458 0.5694941 0.6035025 #>  [441,] 0.45421022 0.5258581 0.5701367 0.6138898 0.6216291 0.6698877 0.6838549 #>  [442,] 0.44746081 0.5789564 0.6953124 0.7582491 0.8385104 0.8605995 0.9221451 #>  [443,] 0.32974383 0.4112725 0.4459778 0.4482244 0.4649680 0.4933310 0.4937815 #>  [444,] 0.66621570 0.6788292 0.8582302 0.9243025 0.9598654 0.9703377 0.9709874 #>  [445,] 0.70791747 0.7234684 0.8258075 0.8597225 0.8886085 0.9022910 0.9180712 #>  [446,] 0.42276842 0.4401017 0.4947276 0.5106841 0.5368285 0.6089069 0.6348874 #>  [447,] 0.83492003 0.9088732 1.0306524 1.0574742 1.1990561 1.2488621 1.2649238 #>  [448,] 0.44776236 0.4539749 0.4871813 0.5000402 0.5527208 0.6249938 0.6726794 #>  [449,] 0.32383604 0.3596225 0.3786821 0.3827064 0.4454712 0.4634209 0.5496486 #>  [450,] 0.38005335 0.6115126 0.6332588 0.6608800 0.6731677 0.7154684 0.7427603 #>  [451,] 0.49955345 0.5217625 0.6287274 0.7364784 0.7821367 0.7896862 0.7991139 #>  [452,] 0.44843365 0.6890355 0.7003725 0.8859169 0.9422914 0.9878866 0.9903884 #>  [453,] 0.65241597 0.6661856 0.7167543 0.7188518 0.7966171 0.8309766 0.8488746 #>  [454,] 0.84876762 0.9868547 1.1819139 1.3950315 1.5858408 1.6005290 1.6359459 #>  [455,] 1.36577127 1.3843869 1.4250266 1.5322835 1.6547455 1.6717012 1.6820612 #>  [456,] 0.48324206 0.6151802 0.6274234 0.6522795 0.6845077 0.6872424 0.7305109 #>  [457,] 0.31900930 0.3357817 0.3830015 0.3929281 0.5006990 0.5450023 0.6276767 #>  [458,] 0.60693868 0.6142428 0.6241196 0.6493884 0.6627420 0.6984207 0.6984577 #>  [459,] 0.32211610 0.3339183 0.3557713 0.4183582 0.4302828 0.5245298 0.5467388 #>  [460,] 0.19341692 0.4276626 0.4525171 0.5227236 0.5523478 0.5745780 0.5745785 #>  [461,] 0.64089560 0.7470248 0.7550746 0.7969239 0.8432737 0.8961031 0.9069736 #>  [462,] 0.29319277 0.3237882 0.3751299 0.4310395 0.5136632 0.5337352 0.5342223 #>  [463,] 0.37023334 0.4664477 0.4729282 0.5588034 0.6607836 0.6955521 0.7014713 #>  [464,] 0.45620212 0.4668217 0.5462629 0.6720855 0.7482004 0.8634906 0.8844336 #>  [465,] 0.24720870 0.2542870 0.3576303 0.3795024 0.4539024 0.4591989 0.4690910 #>  [466,] 0.64682952 0.8684918 0.9166079 0.9672860 1.0664163 1.1059965 1.1620329 #>  [467,] 0.48779350 0.5309943 0.5359278 0.5445531 0.5473396 0.5630037 0.6123769 #>  [468,] 0.62087423 0.6403486 0.7456964 0.7876171 0.8288348 0.8901753 0.8970963 #>  [469,] 0.32392523 0.4009567 0.4736812 0.5407966 0.6761028 0.7709186 0.7909290 #>  [470,] 0.33410271 0.3602101 0.3811940 0.4176599 0.5887298 0.5897343 0.5957929 #>  [471,] 0.43551182 0.5974044 0.6632949 0.7499269 0.7884919 0.8253955 0.8844909 #>  [472,] 0.35590767 0.4483156 0.6494621 0.6983874 0.7362281 0.7375164 0.7922034 #>  [473,] 0.39803275 0.5992495 0.6531805 0.6585220 0.7083886 0.7447751 0.7627611 #>  [474,] 0.58095112 0.8079631 0.8845792 0.8866106 0.9367020 0.9369434 0.9379061 #>  [475,] 0.23475421 0.2760877 0.3409990 0.3948229 0.4966375 0.5095389 0.5123130 #>  [476,] 0.21079022 0.2847961 0.3795024 0.3961501 0.4737675 0.4922347 0.5038922 #>  [477,] 0.34845023 0.5750459 0.6461084 0.6661910 0.6753847 0.6997147 0.7056563 #>  [478,] 0.37369136 0.4967457 0.6916681 0.8425120 0.8439728 0.8662343 0.8904128 #>  [479,] 0.38685041 0.5022339 0.5283609 0.6269648 0.6654872 0.6671049 0.7003725 #>  [480,] 0.46510183 0.5221078 0.5276297 0.5568643 0.6867025 0.7228440 0.7499718 #>  [481,] 0.81969029 0.8487676 1.0483501 1.1214421 1.1278473 1.1283908 1.2782696 #>  [482,] 0.57516998 0.5757913 0.7159509 0.8736365 0.8783517 0.9340972 0.9761146 #>  [483,] 0.34692508 0.3718814 0.4482244 0.4895387 0.5219703 0.5234472 0.5257872 #>  [484,] 0.38696697 0.4628732 0.5000402 0.5374600 0.5459436 0.6472290 0.6877147 #>  [485,] 0.16439948 0.2498900 0.2988781 0.4176599 0.5037920 0.5157016 0.5392325 #>  [486,] 0.34030982 0.4901726 0.5482922 0.5601770 0.6193188 0.6259196 0.6440088 #>  [487,] 0.55754391 0.5944213 0.6033579 0.6704437 0.6808664 0.7335049 0.7403238 #>  [488,] 0.25133538 0.4443798 0.4648210 0.5584803 0.5792860 0.6006691 0.6262179 #>  [489,] 0.49939029 0.9042358 0.9869404 1.0352499 1.0958096 1.1982346 1.2024153 #>  [490,] 0.26848903 0.2751362 0.3866042 0.4603304 0.4920667 0.5116342 0.5694941 #>  [491,] 0.45338758 0.4628732 0.4766672 0.4785397 0.5435317 0.6404052 0.6528009 #>  [492,] 0.06237336 0.3477464 0.3880287 0.3953375 0.4058201 0.4217009 0.4375315 #>  [493,] 0.50320193 0.5278967 0.6662657 0.7221586 0.8790858 0.8974759 0.9259112 #>  [494,] 0.41725517 0.7712000 0.9655644 1.0494649 1.0505241 1.0766536 1.0784581 #>  [495,] 0.64889483 0.6743910 0.7559029 0.7782274 0.8139841 0.8323148 0.8783517 #>  [496,] 0.54678614 0.5535337 0.6118889 0.6651110 0.7261063 0.7596047 0.7894546 #>  [497,] 0.55124445 0.6939378 0.6977846 0.7895905 0.7966171 0.8033248 0.8074622 #>  [498,] 0.50144395 0.6847664 0.6969554 0.7091463 0.8106788 0.8200852 0.8572229 #>  [499,] 0.37051035 0.4210599 0.4899391 0.4939959 0.4983507 0.5406676 0.5795338 #>  [500,] 0.31113817 0.3615387 0.3671852 0.4232905 0.4563416 0.4620479 0.4635884 #>  [501,] 0.53825160 0.5459779 0.6280460 0.6924446 0.7568228 0.7892671 0.8036528 #>  [502,] 0.52931883 0.8969079 0.9968713 1.0395719 1.0578349 1.0634395 1.1303126 #>  [503,] 0.47248714 0.6310241 0.7216736 0.7504132 0.8345010 0.8454624 1.0063189 #>  [504,] 0.52931883 0.6243000 0.7516564 0.7880437 0.7937682 0.9845884 1.0310843 #>  [505,] 0.30393189 0.3698819 0.5478101 0.6592532 0.6831940 0.6972829 0.7144538 #>  [506,] 0.33252077 0.3596345 0.5531750 0.6440928 0.6814544 0.6903546 0.7028737 #>  [507,] 0.57928598 0.6020466 0.6304755 0.6390560 0.6695092 0.7050962 0.7280623 #>  [508,] 0.45833158 0.5465433 0.6225515 0.6276762 0.6467093 0.7109740 0.7166012 #>  [509,] 0.09947667 0.3485468 0.7632786 0.7674675 0.7859732 0.8005760 0.8604517 #>  [510,] 0.18381135 0.3351454 0.3970639 0.5615803 0.5627866 0.5664100 0.5669617 #>  [511,] 0.39022080 0.3970639 0.4661092 0.4678759 0.4899688 0.5100996 0.5550125 #>  [512,] 0.53230148 0.6169020 0.6316734 0.6911593 0.7503487 0.7988429 0.8873055 #>  [513,] 0.36787849 0.4433932 0.5123701 0.5163462 0.5200766 0.5283657 0.5555014 #>  [514,] 0.34094852 0.5981455 0.6464731 0.6866165 0.7137906 0.7225741 0.7395848 #>  [515,] 0.80344391 0.8630667 1.1683663 1.3592922 1.4349638 1.4362062 1.4400782 #>  [516,] 0.31159683 0.3522055 0.3880748 0.4653283 0.5014736 0.5129551 0.5637473 #>  [517,] 0.91668472 1.3327206 1.5538704 1.5769228 1.6031075 1.6222512 1.6684567 #>  [518,] 0.94412251 1.0591445 1.1761411 1.1854044 1.1897699 1.3116275 1.3133568 #>  [519,] 0.98527468 1.1694971 1.2129245 1.2390439 1.2887453 1.3163962 1.3173377 #>  [520,] 0.46597163 0.4997880 0.5298714 0.6108752 0.6363253 0.7342958 0.7406868 #>  [521,] 0.32883836 0.4340501 0.4441427 0.5049179 0.5356627 0.5463308 0.5463553 #>  [522,] 0.41510745 0.4539908 0.4870129 0.5365264 0.5504471 0.5981455 0.6373228 #>  [523,] 0.48517727 0.5171287 0.5309943 0.5754646 0.6457647 0.6661910 0.7109639 #>  [524,] 0.50370288 0.5082238 0.5266103 0.5295769 0.5615803 0.5983068 0.6169582 #>  [525,] 0.33260636 0.4078948 0.4896928 0.5712262 0.5896991 0.5992495 0.6843639 #>  [526,] 0.21954762 0.4078500 0.4364468 0.4872984 0.5038922 0.5577248 0.5588127 #>  [527,] 0.43496138 0.4736812 0.4969121 0.6088014 0.7383476 0.7388536 0.8452982 #>  [528,] 0.50622716 0.7115883 0.7561523 0.7939253 0.8589876 0.8628233 0.8928196 #>  [529,] 1.12673922 1.1418788 1.1730725 1.2156419 1.2568805 1.4033703 1.4874820 #>  [530,] 0.42985970 0.4367069 0.4803287 0.4871813 0.5808182 0.5854055 0.5996100 #>  [531,] 0.09735444 0.2498900 0.3251459 0.3341027 0.4677349 0.4758479 0.5279757 #>  [532,] 0.39936129 0.5245298 0.5780882 0.5865099 0.6181735 0.6472878 0.6562880 #>  [533,] 0.57039098 0.5868205 0.6848366 0.6862098 0.7083190 0.7427603 0.7896585 #>  [534,] 0.64089560 0.6899564 0.8084389 0.8514195 0.8622857 0.8777900 0.8957253 #>  [535,] 0.30470045 1.2725945 1.3426851 1.4326772 1.6159267 1.6244261 1.6268977 #>  [536,] 0.32685192 0.3866042 0.4748896 0.5385586 0.5441506 0.5858956 0.5956980 #>  [537,] 0.20162376 0.4582870 0.5316626 0.5981495 0.6197338 0.6224469 0.6322752 #>  [538,] 0.52288869 0.6949470 0.7062886 0.7611029 0.7786382 0.8289895 0.8305625 #>  [539,] 0.23574938 0.4129417 0.4475695 0.4591229 0.4634613 0.5627260 0.5818249 #>  [540,] 0.63531461 0.7644017 0.8021161 0.8335198 0.8386558 0.8971342 0.9001532 #>  [541,] 0.54753384 0.5670843 0.5816437 0.5907524 0.6020736 0.6031566 0.6127065 #>  [542,] 0.52578720 0.5629231 0.5960943 0.6007677 0.6226353 0.6383685 0.6427577 #>  [543,] 0.47597233 0.4886666 0.5132524 0.5514441 0.5516628 0.5681552 0.5791913 #>  [544,] 0.56381089 0.8143040 0.8492719 0.9528959 1.0441546 1.0736234 1.0907104 #>  [545,] 0.32883836 0.3348563 0.3885606 0.4342407 0.4646078 0.4705474 0.6012904 #>  [546,] 0.50808500 0.5638367 0.6324392 0.6998557 0.7505116 0.8121494 0.8398301 #>  [547,] 0.42855963 0.4452314 0.4737793 0.4765969 0.4964849 0.5206415 0.5285273 #>  [548,] 0.17942583 0.2807332 0.2995544 0.3434401 0.3476196 0.3671852 0.4308946 #>  [549,] 0.37288401 0.3869800 0.3915273 0.5627468 0.6127318 0.6366010 0.6563790 #>  [550,] 0.43899779 0.5139957 0.6018848 0.6249738 0.6287948 0.6381425 0.6435659 #>  [551,] 0.37136708 0.4872984 0.4929406 0.5249321 0.5527208 0.5860477 0.6294567 #>  [552,] 0.40154463 0.4901726 0.5143612 0.6002055 0.6316734 0.6467093 0.6672760 #>  [553,] 0.41032094 0.4338906 0.5114604 0.5213313 0.5702912 0.5793294 0.5868191 #>  [554,] 0.61207082 0.6356856 0.9777710 1.0334923 1.0413625 1.0530805 1.0570600 #>  [555,] 0.65735374 0.7298871 0.7612954 0.7693236 0.7823841 0.8612136 0.8951056 #>  [556,] 0.82532308 0.8824587 0.9581371 0.9704481 0.9987939 1.0575615 1.0826735 #>  [557,] 0.58485103 0.5940864 0.8873071 0.9446060 1.0778728 1.1194408 1.1254942 #>  [558,] 0.27584498 0.4310662 0.4479354 0.4989522 0.6223665 0.6253353 0.6278912 #>  [559,] 0.36529757 0.5342967 0.5392626 0.5833360 0.6082396 0.6491269 0.6496460 #>  [560,] 0.46539004 0.5526200 0.5703635 0.5862418 0.6022199 0.6095159 0.6563564 #>  [561,] 0.44017160 0.5245134 0.5738386 0.6307619 0.6313366 0.6360160 0.6475988 #>  [562,] 0.07895498 0.3853168 0.5283547 0.5592689 0.5990162 0.5998565 0.6335905 #>  [563,] 0.37991572 0.5515104 0.5957728 0.6056011 0.6255535 0.6870038 0.6929691 #>  [564,] 0.33565014 0.4034628 0.4062576 0.4625721 0.4792933 0.5378948 0.5484070 #>  [565,] 0.41566115 0.4773379 0.5305800 0.5366391 0.5931640 0.5995118 0.6071552 #>  [566,] 0.33759104 0.5736083 0.6960458 0.7272528 0.7811635 0.8647367 0.9266486 #>  [567,] 0.33117431 0.3489172 0.4802036 0.5085962 0.5297408 0.5759844 0.5836742 #>  [568,] 0.40226815 0.4612980 0.5508784 0.6305609 0.6525286 0.7110701 0.7167933 #>  [569,] 0.46510183 0.5307926 0.6552041 0.6976277 0.7074585 0.7215687 0.7446527 #>  [570,] 0.28803713 0.3462286 0.3615387 0.3740513 0.3883577 0.4959996 0.5199157 #>  [571,] 0.96081269 0.9825784 1.0243410 1.0467482 1.0621579 1.0729310 1.1166358 #>  [572,] 0.94555806 0.9739695 1.0011973 1.0118914 1.0219638 1.0477774 1.1310833 #>  [573,] 0.54659111 0.6868776 0.7024939 0.7180177 0.7268457 0.7385607 0.7884753 #>  [574,] 0.48579543 0.6269388 0.6607913 0.7234755 0.7730891 0.7859525 0.7875099 #>  [575,] 0.61777408 0.7079175 0.7772716 0.7877252 0.7983004 0.9079850 0.9137995 #>  [576,] 0.57075575 0.6196462 0.6492226 0.6506539 0.7061402 0.7213573 0.7297972 #>  [577,] 0.27628951 0.3787048 0.4177351 0.5245070 0.5291259 0.5533164 0.6358749 #>  [578,] 0.30784444 0.3171310 0.3914726 0.4384595 0.4393406 0.4874823 0.5199157 #>  [579,] 0.79916792 0.8121440 0.8880938 0.9096114 0.9096943 0.9661753 0.9796045 #>  [580,] 0.35590457 0.5025390 0.5848510 1.0505241 1.0817737 1.2132010 1.2291087 #>  [581,] 0.61363132 0.6892273 0.7291713 0.9067939 0.9138330 1.0062534 1.0106239 #>  [582,] 0.40100029 0.4430582 0.5327354 0.5728408 0.6838218 0.6848717 0.7332377 #>  [583,] 0.29325502 0.4438248 0.4794423 0.5406911 0.5883113 0.6407702 0.6566496 #>  [584,] 0.85823094 0.9547874 0.9609488 1.1813792 1.2403055 1.3017068 1.3701424 #>  [585,] 0.48173155 0.6561775 0.7531662 0.7611029 0.8109269 0.8141573 0.8590952 #>  [586,] 0.29042844 0.2931928 0.4676353 0.4889940 0.4897806 0.4916994 0.4990087 #>  [587,] 0.28997550 0.3202526 0.4885859 0.5440183 0.5981166 0.6668754 0.6845077 #>  [588,] 0.37512992 0.3912551 0.4586803 0.4665327 0.4673333 0.4916994 0.4986950 #>  [589,] 0.28229404 0.4080375 0.5037654 0.5186946 0.5199340 0.5712106 0.5728238 #>  [590,] 0.28240549 0.4228273 0.4786090 0.5727180 0.6362677 0.7046850 0.7208250 #>  [591,] 0.45643557 0.6130320 0.6171963 0.6832441 0.6837159 0.6980883 0.7060400 #>  [592,] 0.30367763 0.5029773 0.6671049 0.7517717 0.7646562 0.7845348 0.7944743 #>  [593,] 0.21070972 0.3384022 0.3785243 0.3786821 0.4555315 0.4677938 0.4774937 #>  [594,] 1.34818441 1.3815293 1.4199785 1.4272489 1.4283877 1.5807197 1.7464575 #>  [595,] 0.36743034 0.3934743 0.4388808 0.4839174 0.4849873 0.5180385 0.5465269 #>  [596,] 0.22040512 0.4143658 0.4438248 0.4644053 0.5164599 0.5243824 0.5701952 #>  [597,] 0.55044708 0.6074715 0.6446556 0.6525094 0.7225741 0.7904959 0.8473969 #>  [598,] 0.26859222 0.2988781 0.3251459 0.3543427 0.4324694 0.4821423 0.5041405 #>  [599,] 0.60809108 0.6244780 0.6345222 0.7327203 0.8085403 0.9618540 0.9850236 #>  [600,] 0.32392523 0.4837910 0.4969121 0.6888741 0.8121883 0.9031963 0.9425263 #>  [601,] 0.55354689 0.8196903 0.9868547 0.9965006 1.0305637 1.1118281 1.1728342 #>  [602,] 0.39485174 0.4462037 0.4951188 0.6195973 0.6446448 0.7701823 0.7762689 #>  [603,] 0.32826488 0.3958385 0.4318778 0.5485289 0.5827911 0.6948395 0.7147556 #>  [604,] 0.34912835 0.4995535 0.5836023 0.5981166 0.6013729 0.6034659 0.6274234 #>  [605,] 1.49664249 1.8496952 2.0096300 2.0725958 2.1701970 2.2781757 2.3136778 #>  [606,] 0.64682952 0.9341561 1.0207513 1.1040754 1.2550670 1.2698465 1.2762658 #>  [607,] 0.15111626 0.1903874 0.4539908 0.4590173 0.4705337 0.5369885 0.6178069 #>  [608,] 0.22864131 0.3900438 0.4587650 0.4856176 0.6831940 0.6837716 0.6961563 #>  [609,] 0.18227980 0.2080745 0.3702333 0.4466468 0.6524619 0.7613234 0.7929139 #>  [610,] 0.23333126 0.3730016 0.4996293 0.5037734 0.5256317 0.6018686 0.6857102 #>  [611,] 0.63032824 0.8093232 0.9893157 1.0413952 1.0696304 1.0971862 1.1662908 #>  [612,] 0.61507154 0.9615869 1.0776593 1.1173290 1.2419306 1.2822610 1.3503243 #>  [613,] 0.65225534 0.8512373 0.9815122 1.0045054 1.0184738 1.1420607 1.1444335 #>  [614,] 0.22409788 0.5067289 0.5407679 0.6465144 0.6660228 0.7316279 0.7362281 #>  [615,] 0.51555616 0.6054975 0.6695603 0.7025012 0.7249216 0.7321076 0.8482498 #>  [616,] 0.51672431 0.6550520 0.7182382 0.7393256 0.7710876 0.7740450 0.8249499 #>  [617,] 0.51680450 0.5709945 0.6474719 0.6621922 0.6724607 0.7536086 0.7678067 #>  [618,] 0.89513853 0.9664746 0.9767148 1.0234306 1.0592273 1.1474101 1.1917176 #>  [619,] 0.59469549 0.7379103 0.7910070 0.7944743 0.8322069 0.8384132 0.8499127 #>  [620,] 0.22106863 0.2899755 0.5857375 0.6013729 0.6393391 0.6552041 0.6555343 #>  [621,] 0.26722816 0.3159233 0.4318778 0.4737793 0.4937624 0.5835952 0.6182883 #>  [622,] 0.93864143 1.6222512 1.7188261 1.7203726 1.7741511 1.9740237 2.0365869 #>  [623,] 0.10923547 0.4898170 0.6086725 0.6618634 0.6832441 0.7600538 0.7651050 #>  [624,] 0.22864131 0.2845722 0.4894367 0.5626413 0.6305609 0.6803849 0.6963642 #>  [625,] 0.24350200 0.4846456 0.4971354 0.5745780 0.6017397 0.6446369 0.6585220 #>  [626,] 0.56063640 0.5690961 0.6484875 0.7576757 0.7799516 0.8205423 0.8513085 #>  [627,] 0.55482422 0.6034473 0.6592532 0.6662566 0.6947335 0.6997244 0.8174459 #>  [628,] 0.81075558 0.9988321 1.1290720 1.1686155 1.1852841 1.2587961 1.3429944 #>  [629,] 0.22687733 0.5327354 0.5720845 0.6152616 0.7265991 0.7529844 0.7721954 #>  [630,] 0.40312142 0.4210821 0.5703635 0.7340112 0.7395394 0.7427503 0.7782274 #>  [631,] 0.90697365 0.9351053 0.9427269 1.0432161 1.0942546 1.1655722 1.1761009 #>  [632,] 1.26855356 1.5791233 1.8276209 1.8640158 1.8711566 1.8916955 1.9680883 #>  [633,] 0.40125763 0.4713086 0.5168595 0.5467861 0.5687607 0.7276153 0.7550746 #>  [634,] 0.33840217 0.3596225 0.3750589 0.3781133 0.3835731 0.4361780 0.4697050 #>  [635,] 0.68695584 0.7361906 0.7673058 0.9043579 0.9978841 1.0346011 1.0686940 #>  [636,] 0.32140092 0.5437780 0.7024939 0.7654722 0.8282490 0.8391149 0.8408645 #>  [637,] 0.38932290 0.4590173 0.4697668 0.4992401 0.5075515 0.5148419 0.5726335 #>  [638,] 1.34332845 1.4220946 1.7877293 1.8597680 2.0193376 2.1111164 2.1203628 #>  [639,] 0.49430077 0.6500655 0.6819306 0.7364784 0.7900450 0.7907647 0.7977892 #>  [640,] 0.48327632 0.5017794 0.5131819 0.5530109 0.5600523 0.5612206 0.5847446 #>  [641,] 0.47853974 0.5301995 0.5660861 0.5974075 0.6181783 0.6332938 0.6895173 #>  [642,] 0.48576028 0.7561523 0.8475781 0.9997488 1.0093845 1.0238191 1.0298188 #>  [643,] 0.30948032 0.4338540 0.4604031 0.4991117 0.5025751 0.5531750 0.5975155 #>  [644,] 0.57840820 0.6287274 0.6689162 0.7306226 0.7352189 0.7674604 0.8898773 #>  [645,] 0.39738666 0.4093280 0.4756781 0.5120740 0.6322752 0.6515822 0.6638023 #>  [646,] 0.57082109 0.5711022 0.5844039 0.5867124 0.5904380 0.6495057 0.7098346 #>  [647,] 0.20807446 0.2628687 0.3569206 0.4664477 0.5883113 0.6638472 0.6759193 #>  [648,] 0.66891622 0.7843013 0.8044579 0.8604399 0.9169565 0.9675974 0.9945895 #>  [649,] 0.26615415 0.3281155 0.5514441 0.5669617 0.6260375 0.6834318 0.7600832 #>  [650,] 0.39903161 0.6472784 0.6524160 0.7329071 0.7580904 0.8227689 0.8797244 #>  [651,] 0.39850689 0.3999908 0.4612980 0.4994111 0.6400180 0.7288808 0.7688400 #>  [652,] 0.40468905 0.4669716 0.4944642 0.5077918 0.5163462 0.5230586 0.5623779 #>  [653,] 0.43503499 0.4794331 0.4997785 0.5090084 0.6212544 0.6834059 0.6976278 #>  [654,] 0.44437983 0.4948097 0.5187617 0.5649967 0.5714534 0.6163742 0.6610257 #>  [655,] 0.38115813 0.4297941 0.4849425 0.5257939 0.5263178 0.5283547 0.5465269 #>  [656,] 0.48690853 0.5751700 0.5894556 0.7752320 0.8022839 0.8176516 0.8623242 #>  [657,] 0.68347607 0.6869558 0.9565875 1.0352665 1.0536770 1.0892556 1.0909307 #>  [658,] 0.30815966 0.3999908 0.4719857 0.7456341 0.7523707 0.7630445 0.8097090 #>  [659,] 0.22108300 0.4489033 0.6742071 0.6890226 0.7189989 0.7475399 0.8438530 #>  [660,] 0.56359661 0.7321369 0.7517717 0.8384132 0.8482179 0.9689982 0.9766013 #>  [661,] 0.51830626 0.6709897 0.6742071 0.7411336 0.7523024 0.7761889 0.8493967 #>  [662,] 0.35791447 0.5340011 0.5569478 0.6885504 0.7140706 0.7227091 0.7390581 #>  [663,] 0.40593907 0.4896928 0.5252708 0.5791913 0.6387487 0.6481609 0.6609956 #>  [664,] 0.47638577 0.6558929 0.6562880 0.6651110 0.6769685 0.6937567 0.6945005 #>  [665,] 0.31727001 0.6027473 0.6629915 0.6926599 0.7495709 0.7743920 0.8340287 #>  [666,] 0.28586965 0.5298714 0.6106632 0.6456784 0.7119055 0.7415707 0.7425765 #>  [667,] 0.29637797 0.4758479 0.4963281 0.5363595 0.5425230 0.5554706 0.5906419 #>  [668,] 0.49338839 0.6916681 0.7754143 0.8500907 0.8669439 0.8716590 0.8806144 #>  [669,] 0.57543940 0.5868935 0.5877114 0.5946965 0.6227113 0.6822198 0.7334364 #>  [670,] 0.50069897 0.5159915 0.5544995 0.5845806 0.5966526 0.5996100 0.6040524 #>  [671,] 0.33565014 0.3801970 0.4210599 0.4621890 0.4737834 0.4876836 0.5464351 #>  [672,] 0.26516673 0.2962279 0.3371077 0.3648472 0.5238480 0.5433736 0.5470830 #>  [673,] 0.17942583 0.2165270 0.2932371 0.3111382 0.3914726 0.4508113 0.4738496 #>  [674,] 0.35452237 0.3569206 0.4466468 0.5588034 0.6601343 0.7009634 0.7322632 #>  [675,] 0.95260863 1.1181000 1.1474101 1.1885318 1.2723673 1.3089299 1.3687226 #>  [676,] 0.28586965 0.3907500 0.4284616 0.5072420 0.6253096 0.6363253 0.6563564 #>  [677,] 0.99770428 1.0411160 1.1462040 1.1678287 1.3122076 1.3857536 1.4289189 #>  [678,] 0.49338839 0.6074715 0.7698627 0.7939054 0.8284948 0.8439728 0.8990936 #>  [679,] 0.38007468 0.5128412 0.5426621 0.6608800 0.7596961 0.7696871 0.7710148 #>  [680,] 1.38794544 1.4170368 1.4193823 1.5967588 1.6683844 1.7461114 1.7624131 #>  [681,] 0.61026154 0.6242248 0.6289278 0.8028022 0.8037880 0.8416448 0.8472093 #>  [682,] 0.39738666 0.4284691 0.5573738 0.6093244 0.6836299 0.6840146 0.7118560 #>  [683,] 0.59471789 0.6113297 0.6514013 0.6702565 0.6704382 0.6945005 0.6962139 #>  [684,] 0.45223665 0.4829402 0.5075515 0.5237481 0.5350373 0.5417799 0.5493696 #>  [685,] 0.21954762 0.2678503 0.4354622 0.4364238 0.4737675 0.5249321 0.5373822 #>  [686,] 0.42560710 0.4397339 0.6292521 0.6548094 0.6605103 0.6787435 0.7135317 #>  [687,] 1.08095059 1.3882412 1.4790959 1.5267807 1.5771856 1.6176868 1.6268977 #>  [688,] 0.21030639 0.3035717 0.3329727 0.3804234 0.4046890 0.4385573 0.4639020 #>  [689,] 0.36111471 0.4284691 0.4734747 0.5106841 0.6849461 0.7090135 0.7574482 #>  [690,] 0.63829921 0.7294524 0.7765049 0.8021271 0.9039790 0.9217747 0.9590314 #>  [691,] 0.13606329 0.6099044 0.9045556 0.9681261 0.9821073 1.0025725 1.0280949 #>  [692,] 0.50014270 0.6207879 0.6246332 0.6471684 0.6914897 0.7480002 0.7504286 #>  [693,] 0.53405169 0.6349802 0.6721093 0.7437694 0.8292968 0.8354859 0.9182706 #>  [694,] 0.29720093 0.3426724 0.6114577 0.6186931 0.6223665 0.6493819 0.6992488 #>  [695,] 0.20162376 0.3571738 0.3711012 0.5367162 0.5596128 0.5758611 0.5966214 #>  [696,] 0.50876598 0.6890355 0.7188794 0.7885646 0.9145132 0.9366355 0.9508817 #>  [697,] 0.92325879 1.0925516 1.1035301 1.1208265 1.1719330 1.2174247 1.2644375 #>  [698,] 0.16245955 0.4329772 0.7049578 0.7098346 0.7200664 0.7213135 0.7850071 #>  [699,] 0.71885179 0.8743122 0.9120358 0.9443951 0.9640852 1.0658121 1.0838532 #>  [700,] 0.32584609 0.4848025 0.5062272 0.5749020 0.6064117 0.7912766 0.8019565 #>  [701,] 0.56494478 0.6125103 0.6136313 0.7267707 0.7505349 0.7643021 0.8435834 #>  [702,] 0.28255888 0.3874137 0.5710901 0.5775196 0.6246332 0.6787768 0.6934349 #>  [703,] 0.18685679 0.4333961 0.4648490 0.5160696 0.5326546 0.5393037 0.5486822 #>  [704,] 0.73640907 0.8315063 0.8719835 0.8741268 1.0918947 1.1055400 1.1080770 #>  [705,] 0.49939029 0.8016301 0.8772056 0.9787136 0.9975685 1.0192058 1.0198465 #>  [706,] 0.34845023 0.5171287 0.5473396 0.5720845 0.5946024 0.6363093 0.6609532 #>  [707,] 0.38387806 0.3934743 0.4092090 0.4183582 0.4532209 0.5065164 0.5234093 #>  [708,] 0.24374289 0.3475076 0.4005937 0.4883893 0.4933310 0.5257532 0.5348425 #>  [709,] 0.30753169 0.3123209 0.3397214 0.4705337 0.4996293 0.5070102 0.5157965 #>  [710,] 0.51680450 0.6079047 0.6197050 0.7025012 0.8941641 0.9014734 0.9347998 #>  [711,] 0.34891719 0.4628481 0.4862663 0.4869602 0.4945966 0.5575439 0.5793294 #>  [712,] 0.38104023 0.4037799 0.5990851 0.6492226 0.7569395 0.7837561 0.7848640 #>  [713,] 0.38349958 0.4856785 0.5584092 0.5648662 0.6906594 0.7254041 0.7412263 #>  [714,] 0.53147942 0.6098007 0.6236636 0.6256980 0.6570678 0.7075227 0.7306851 #>  [715,] 0.37622367 0.3917388 0.4083377 0.4506019 0.4689227 0.4704883 0.4737834 #>  [716,] 0.42247682 0.4440214 0.4877935 0.4971354 0.5412510 0.5523478 0.5557193 #>  [717,] 0.60546304 0.6079047 0.6171070 0.6621922 0.6761416 0.7115204 0.7287834 #>  [718,] 0.48141783 0.4845996 0.5234089 0.5322650 0.5417114 0.5454709 0.5962012 #>  [719,] 0.39874837 0.4598954 0.4893066 0.5412510 0.5630037 0.5747101 0.5792412 #>  [720,] 0.45839036 0.5789564 0.7102887 0.7993400 0.8913669 0.9700303 0.9898844 #>  [721,] 0.55388387 0.5707557 0.6093411 0.6241529 0.6360473 0.6696040 0.8063401 #>  [722,] 0.29120843 0.3268734 0.3861039 0.3891145 0.4058201 0.4823984 0.4974182 #>  [723,] 0.81023138 0.8294644 1.0777455 1.3020838 1.3112184 1.3331615 1.4133360 #>  [724,] 0.19452018 0.5868935 0.6324890 0.6695752 0.7362016 0.7900450 0.7993952 #>  [725,] 0.21949760 0.2333313 0.3123209 0.4819972 0.4856941 0.5622254 0.6490731 #>  [726,] 0.57794821 0.6043055 0.6832020 0.7018136 0.7724612 0.7820887 0.7888746 #>  [727,] 0.91429077 1.0101850 1.1365311 1.1637628 1.1858877 1.1889332 1.2092750 #>  [728,] 0.21165216 0.3923743 0.3983338 0.4367137 0.5003845 0.5143641 0.5244138 #>  [729,] 0.47666722 0.6249938 0.6379251 0.6452146 0.6472290 0.6496414 0.6923830 #>  [730,] 0.56359661 0.5648662 0.6330408 0.6475451 0.6686249 0.6738986 0.6774771 #>  [731,] 0.41040765 0.4852405 0.5407831 0.5629231 0.5864097 0.6025337 0.7896585 #>  [732,] 0.67702799 0.7617594 0.7833193 0.8784630 0.8858704 0.8886085 0.9079850 #>  [733,] 0.48076156 0.5584092 0.5849528 0.6233717 0.6451002 0.6738986 0.7285634 #>  [734,] 0.63093727 0.6426036 0.7345945 0.7760770 0.7850071 0.8370721 0.8420055 #>  [735,] 0.63498022 0.6952343 0.7043262 0.7305451 0.7673058 0.7867289 0.9143445 #>  [736,] 0.49989492 0.6099468 0.6384075 0.6446369 0.7321076 0.7633813 0.7867300 #>  [737,] 0.22100633 0.3101462 0.4900938 0.5279458 0.6035274 0.6078798 0.6201891 #>  [738,] 0.27973032 0.3999176 0.4517301 0.5139755 0.5651766 0.6035274 0.6181735 #>  [739,] 0.28755861 0.3462286 0.4942474 0.4997785 0.5205964 0.5850533 0.6339659 #>  [740,] 0.21165216 0.3837232 0.4650741 0.4655947 0.5344081 0.5415625 0.5756859 #>  [741,] 0.43503499 0.5717237 0.5855157 0.6200285 0.6562341 0.6566602 0.6703829 #>  [742,] 0.31713101 0.3924847 0.4280700 0.4386719 0.4739762 0.4934233 0.5159598 #>  [743,] 0.32295738 0.4728779 0.4856176 0.5626413 0.5636601 0.5870633 0.6151457 #>  [744,] 0.53814171 0.8150416 0.8634906 0.8736365 0.9288499 0.9739695 0.9815122 #>  [745,] 0.30791665 0.4355557 0.4607234 0.5168595 0.6502335 0.6721774 0.6847560 #>  [746,] 0.36241995 0.4433932 0.5100656 0.5202483 0.5411867 0.5446270 0.5452288 #>  [747,] 0.31159683 0.3829430 0.4297941 0.4460511 0.4715766 0.5031774 0.5237481 #>  [748,] 0.15608876 0.2672282 0.3958385 0.4553390 0.5107382 0.5539896 0.5658040 #>  [749,] 0.33639504 0.4361780 0.4454712 0.4677938 0.4823782 0.5553345 0.5940066 #>  [750,] 0.22687733 0.4010003 0.5403873 0.7596536 0.8201452 0.8243736 0.8493675 #>  [751,] 0.39777281 0.4319728 0.4393406 0.4850535 0.4992401 0.5159598 0.5305669 #>  [752,] 0.47292298 0.5008473 0.5458356 0.5686104 0.5829580 0.6322522 0.6340151 #>  [753,] 0.43036491 0.5014440 0.6046815 0.6151802 0.6412943 0.7950445 0.7971649 #>  [754,] 0.70095393 0.8620883 0.9345653 0.9536991 1.0206911 1.0694780 1.0695253 #>  [755,] 0.47021058 0.4898170 0.5937464 0.6457227 0.7285364 0.7334060 0.7447751 #>  [756,] 0.16605853 0.4943678 0.5047237 0.5215311 0.5356627 0.5732119 0.5913733 #>  [757,] 0.59471789 0.7724888 0.8370613 0.8432737 0.8439594 0.8527788 0.8901753 #>  [758,] 0.42622718 0.5568643 0.6976277 0.7457018 0.7810950 0.7823841 0.7996219 #>  [759,] 0.19341692 0.3833873 0.4841213 0.4846456 0.5557193 0.5563878 0.5842928 #>  [760,] 0.37311763 0.4354366 0.4368250 0.4400640 0.4907995 0.4957509 0.6001869 #>  [761,] 0.50700126 0.5382516 0.6498805 0.7041642 0.7726448 0.8958312 0.9054541 #>  [762,] 0.16813932 0.2972009 0.4603738 0.5463308 0.5984526 0.6042911 0.6242459 #>  [763,] 0.57546460 0.6052355 0.7021499 0.7569110 0.7701678 0.8023942 0.8627483 #>  [764,] 0.13606329 0.5696673 0.9007955 0.9510319 0.9828864 1.0444229 1.0457623 #>  [765,] 0.34410590 0.5407831 0.6383685 0.6862098 0.7440133 0.7453049 0.9520779 #>  [766,] 0.36564711 0.3948229 0.5076537 0.5534064 0.5921774 0.6123640 0.6144590 #>  [767,] 0.47069136 0.4934233 0.5550572 0.6212728 0.6221734 0.6754575 0.6991636 #>  [768,] 0.74570175 0.9279888 0.9600884 1.0576439 1.0999785 1.1140256 1.1292455 #>  [769,] 0.32455823 0.4661092 0.5049190 0.5775196 0.6214533 0.6408943 0.6543625 #>  [770,] 0.49430077 0.5702680 0.6107383 0.6298725 0.6324890 0.6851201 0.7004443 #>  [771,] 0.46332526 0.5221078 0.6146830 0.6573537 0.6776995 0.6838056 0.7115535 #>  [772,] 0.20758119 0.5714534 0.5769258 0.5898302 0.5915019 0.6138898 0.6229545 #>  [773,] 1.00666922 1.0155340 1.0591445 1.1446176 1.1547359 1.2950072 1.4329829 #>  [774,] 0.72610627 0.7276153 0.7327203 0.8028655 0.8094828 0.8902770 0.9142908 #>  [775,] 0.52882443 0.6834491 0.8109453 0.8353644 0.8724354 0.8845934 0.8943629 #>  [776,] 0.58235288 0.6027473 0.7535922 0.7756645 0.7866294 0.9166967 0.9854532 #>  [777,] 0.35577134 0.3739773 0.3993613 0.4679972 0.4990087 0.5017794 0.5651678 #>  [778,] 0.43551182 0.5659922 0.6531805 0.6610078 0.7182201 0.7704393 0.8003662 #>  [779,] 0.61424284 0.6200436 0.6688463 0.6867864 0.7204209 0.8186443 0.8385112 #>  [780,] 0.60574499 0.7620692 0.7856639 0.8109530 0.8112668 0.9225049 1.1116327 #>  [781,] 0.40125763 0.4355557 0.4978219 0.5363580 0.6113297 0.6118889 0.6472867 #>  [782,] 0.36429314 0.4367069 0.4539749 0.5660861 0.6050368 0.6452146 0.6895540 #>  [783,] 0.43745921 0.4817316 0.5190144 0.5744926 0.6672677 0.7118797 0.7682043 #>  [784,] 0.36438015 0.3711012 0.4095338 0.4791607 0.5149552 0.5284198 0.5296137 #>  [785,] 0.68022325 0.8021271 0.8183943 0.9007362 1.0028146 1.0138447 1.0149418 #>  [786,] 0.70937049 0.8844802 0.9055819 1.0463442 1.1315080 1.1442619 1.1724005 #>  [787,] 0.27854618 0.3804234 0.4366981 0.4735625 0.4812742 0.5230586 0.5320638 #>  [788,] 0.58595423 0.6706325 0.7112593 0.7551578 0.7587891 0.7590750 0.7704819 #>  [789,] 0.42338046 0.4702629 0.5098522 0.6254839 0.6435659 0.6672677 0.8297055 #>  [790,] 0.40611089 0.4256071 0.4338540 0.5616403 0.6173242 0.6248604 0.6595391 #>  [791,] 0.33514545 0.3444157 0.4689411 0.5550125 0.5983068 0.6260375 0.6269388 #>  [792,] 0.33177589 0.3787048 0.4383526 0.4460856 0.5478489 0.5480077 0.5556706 #>  [793,] 0.26785029 0.3403098 0.4078500 0.4595155 0.5454352 0.5851862 0.5854055 #>  [794,] 0.44620375 0.4471492 0.4495803 0.4797063 0.5576279 0.6352902 0.6810191 #>  [795,] 0.89469035 1.0412608 1.1208833 1.1733024 1.1923015 1.2821918 1.2850176 #>  [796,] 0.49730310 0.5063226 0.5077918 0.5125215 0.5331061 0.5408100 0.5512763 #>  [797,] 0.26373618 0.4271709 0.4435297 0.4474354 0.4829402 0.4864405 0.5085962 #>  [798,] 0.23475421 0.3656471 0.4649680 0.4880879 0.4900019 0.4916251 0.5636601 #>  [799,] 0.38377365 0.4375750 0.5979542 0.6064783 0.6145310 0.6477480 0.6879334 #>  [800,] 0.54455311 0.6131231 0.6280460 0.6877253 0.7447227 0.7633813 0.7827273 #>  [801,] 0.28188604 0.4164333 0.5921774 0.6080398 0.6600073 0.6678612 0.6725467 #>  [802,] 0.11312551 0.1864310 0.2807786 0.3281642 0.3477464 0.3563041 0.4073137 #>  [803,] 0.56383668 0.6108752 0.6261326 0.6270983 0.6379505 0.6881111 0.7167214 #>  [804,] 0.45452231 0.5752021 0.5840366 0.5979542 0.6042681 0.6225039 0.6282067 #>  [805,] 0.39485174 0.4059128 0.4471492 0.5877933 0.6086725 0.6658875 0.6928561 #>  [806,] 0.33019005 0.4205845 0.4899688 0.5570151 0.5766667 0.7277307 0.7460403 #>  [807,] 0.37861406 0.5919851 0.6374563 0.6824988 0.6906594 0.6984577 0.7497123 #>  [808,] 0.31727001 0.5434273 0.5823529 0.6695092 0.7172106 0.7470416 0.8500907 #>  [809,] 0.28229404 0.4944642 0.5009475 0.5333304 0.5994023 0.6200021 0.6332588 #>  [810,] 0.59162641 0.8374484 0.8436646 0.8442812 0.8740132 0.8873055 0.8946904 #>  [811,] 0.24876627 0.3190670 0.3304772 0.3482912 0.4352259 0.4362762 0.5120228 #>  [812,] 0.42276842 0.4903930 0.5120740 0.5406853 0.5681430 0.5932025 0.6095159 #>  [813,] 0.40611089 0.4491155 0.4604031 0.4893773 0.6403603 0.6687360 0.6765744 #>  [814,] 1.31506773 1.4062310 1.4220946 1.5478567 1.5508923 1.5690751 1.6804733 #>  [815,] 0.51899789 0.5859542 0.6400522 0.7087320 0.7089766 0.7144693 0.7252711 #>  [816,] 0.43942966 0.4454151 0.5956901 0.6020956 0.6438084 0.6451002 0.6837159 #>  [817,] 0.45833158 0.5323015 0.6440088 0.6631391 0.7023328 0.7161525 0.7907580 #>  [818,] 0.40397908 0.4851773 0.5459436 0.5957728 0.6773615 0.6993627 0.7538988 #>  [819,] 0.49989492 0.5155562 0.5615891 0.7648623 0.8275535 0.9602412 0.9666992 #>  [820,] 0.69661282 0.7075227 0.8001775 0.8402623 0.9001624 0.9080551 0.9270653 #>  [821,] 0.33783236 0.6412943 0.7736691 0.8277119 0.8684918 0.9342796 0.9499359 #>  [822,] 0.42715519 0.4807616 0.5956901 0.6490138 0.6729737 0.6774771 0.7237398 #>  [823,] 0.65246195 0.6607836 0.6638472 0.6899521 0.7009634 0.7224487 0.9397365 #>  [824,] 0.48361281 0.5699939 0.6221734 0.7726448 0.8385343 0.8455411 0.8538281 #>  [825,] 0.75682279 0.7702773 1.0018687 1.0629047 1.2435194 1.2589455 1.2769707 #>  [826,] 0.25960412 0.2661542 0.5082238 0.5664100 0.6321338 0.6520661 0.6631198 #>  [827,] 1.05824618 1.2403055 1.2902333 1.3114787 1.4520885 1.4531007 1.4850192 #>  [828,] 0.51399575 0.6185920 0.6311965 0.6711518 0.7748308 0.7800192 0.8273200 #>  [829,] 0.33821302 0.4441427 0.4479354 0.6464731 0.6522395 0.6810491 0.6850045 #>  [830,] 0.23733572 0.5263178 0.5592689 0.5637473 0.5756972 0.6014776 0.6262179 #>  [831,] 0.35717381 0.3643801 0.4093280 0.4582870 0.5543547 0.6089466 0.6506539 #>  [832,] 0.23383132 0.4806709 0.5858956 0.7102898 0.7337770 0.7393970 0.7406687 #>  [833,] 0.46511426 0.7083190 0.8603825 0.8610191 0.8722843 0.8781376 0.8790021 #>  [834,] 0.40487210 0.5067289 0.5869626 0.8052939 0.8258075 0.8384148 0.8549334 #>  [835,] 0.15111626 0.2574256 0.4697668 0.4870129 0.5070102 0.5228572 0.5426664 #>  [836,] 0.60209558 0.6490138 0.6520736 0.6810491 0.6925384 0.7036861 0.7066064 #>  [837,] 0.38148904 0.7026780 0.7042345 0.7654722 0.7837561 0.8073464 0.8999803 #>  [838,] 0.52176247 0.6107383 0.6500655 0.7576841 0.9186972 0.9723236 0.9925527 #>  [839,] 0.54597786 0.6498805 0.7702773 0.8328581 0.9505907 1.0129398 1.0404161 #>  [840,] 0.51629416 0.6182403 0.7671498 0.7694880 0.7720377 0.7797068 0.8318577 #>  [841,] 0.47638577 0.5025147 0.5980093 0.6097864 0.6280365 0.7596047 0.7751864 #>  [842,] 0.18685679 0.3825917 0.4907995 0.5440945 0.5480077 0.5697428 0.5876831 #>  [843,] 0.72251375 0.7507198 0.8033248 0.8549334 0.8795893 0.9455959 0.9829809 #>  [844,] 0.53037498 0.8021161 0.8447652 0.9778201 0.9978816 1.0272667 1.0479782 #>  [845,] 0.25953878 0.4410883 0.5117705 0.5850412 0.5957929 0.6470945 0.7132435 #>  [846,] 0.33710772 0.4080253 0.4190897 0.4728477 0.4765969 0.4855495 0.5088117 #>  [847,] 0.96915095 1.1208833 1.2783264 1.2801531 1.4853337 1.4868747 1.6418087 #>  [848,] 0.25133538 0.3753715 0.4674005 0.5649967 0.5769258 0.6248604 0.6757992 #>  [849,] 0.33594014 0.3611147 0.5055958 0.6348874 0.6705215 0.6840146 0.7317553 #>  [850,] 0.31024644 0.3978269 0.4368250 0.4568094 0.6022685 0.6407783 0.6443330 #>  [851,] 0.42680842 0.4322379 0.6109754 0.6252018 0.6370550 0.6803849 0.6879334 #>  [852,] 0.54682791 0.8261934 0.8489872 0.9380754 1.0068613 1.0276965 1.0283167 #>  [853,] 0.44573936 0.6212728 0.6512854 0.6766828 0.6929691 0.7401930 0.7556206 #>  [854,] 0.64401729 0.6868103 0.8305625 0.9132087 0.9322784 0.9455246 0.9606103 #>  [855,] 0.48430292 0.5939800 0.6154436 0.6702996 0.7601068 0.7721180 0.7722258 #>  [856,] 0.34843217 0.3615799 0.4520388 0.4864286 0.4937815 0.5206415 0.5348425 #>  [857,] 0.19452018 0.5702680 0.5877114 0.6384628 0.7124835 0.7387490 0.7519066 #>  [858,] 0.68347607 0.6952343 0.8292968 0.8474099 0.8662343 0.8727895 0.9043579 #>  [859,] 0.28535116 0.3987484 0.4338906 0.5387366 0.5560148 0.5759844 0.5807307 #>  [860,] 0.15608876 0.3159233 0.3998035 0.4635072 0.4738569 0.4964849 0.4979787 #>  [861,] 0.10056470 0.3449783 0.4819972 0.5256317 0.5300543 0.5386895 0.5863483 #>  [862,] 0.24801648 0.3158703 0.3409990 0.3482912 0.4557234 0.4865289 0.4916251 #>  [863,] 0.74576869 0.8028673 0.8447951 0.8885611 1.0458649 1.0536479 1.1076333 #>  [864,] 0.32211610 0.3858004 0.4109986 0.4655947 0.4679972 0.4710695 0.4900938 #>  [865,] 0.52882443 0.7907860 0.7926221 0.8016301 0.8523437 0.8820872 0.9001532 #>  [866,] 1.11242541 1.1195738 1.1340318 1.1974791 1.2267704 1.2393385 1.3036293 #>  [867,] 0.68476638 0.6848902 0.6995688 0.9262264 1.0221118 1.0334563 1.0772582 #>  [868,] 0.36770154 0.5425849 0.5562072 0.6339659 0.7140706 0.7936483 0.8173893 #>  [869,] 0.90083471 0.9700303 0.9845479 1.0348623 1.0406193 1.0545390 1.0577818 #>  [870,] 0.56486662 0.5784082 0.5944213 0.6098007 0.6522795 0.6785159 0.6894766 #>  [871,] 0.56909609 0.5965005 0.7252711 0.7533800 0.8194006 0.8549724 0.9188157 #>  [872,] 0.63695536 0.8004019 0.8808413 0.8903777 0.9184474 0.9192912 0.9451478 #>  [873,] 0.22040512 0.4197801 0.4794423 0.5001015 0.5563326 0.5749020 0.6619468 #>  [874,] 0.28658879 0.5132524 0.5896991 0.6011079 0.7279027 0.7318303 0.7481699 #>  [875,] 0.33117431 0.4103209 0.4274962 0.4496146 0.4628481 0.5160696 0.5387366 #>  [876,] 0.55124445 0.5596128 0.5649448 0.6196462 0.6197338 0.6936771 0.6995534 #>  [877,] 0.40714166 0.5539583 0.7974998 0.9330256 0.9720687 0.9967791 1.0638318 #>  [878,] 0.43942966 0.4564356 0.6115703 0.6721565 0.6880372 0.6925384 0.6927491 #>  [879,] 0.67293328 0.8970963 1.1438065 1.1655722 1.1729422 1.2286289 1.2409575 #>  [880,] 0.32826488 0.4676581 0.6624797 0.6651942 0.6921522 0.7117803 0.7521742 #>  [881,] 0.70848621 0.7329071 0.8103730 0.8198742 0.9228818 0.9280277 0.9593552 #>  [882,] 0.29683069 0.4202682 0.4619364 0.5599294 0.6249014 0.6309373 0.7056191 #>  [883,] 0.59214732 0.7093705 0.7248867 0.8941641 0.9351053 0.9829421 1.0558107 #>  [884,] 0.35350199 0.4774861 0.4869602 0.5187617 0.5510266 0.5607769 0.6145635 #>  [885,] 0.83792438 0.9818811 1.0431987 1.0715276 1.1290720 1.1402297 1.2281566 #>  [886,] 0.37798439 0.5468279 0.7819278 0.7985905 0.8015217 0.8056816 0.8075643 #>  [887,] 0.44082120 0.4595155 0.5788470 0.6002055 0.6198720 0.6259196 0.6775569 #>  [888,] 0.21070972 0.3238360 0.3363950 0.3781133 0.4080375 0.4736706 0.4754801 #>  [889,] 0.29635566 0.4452616 0.4586192 0.4634613 0.4953010 0.5373854 0.5751280 #>  [890,] 1.05099372 1.0715864 1.0918932 1.1752649 1.2062507 1.3576170 1.4111191 #>  [891,] 0.77119997 0.7802293 0.8095846 0.8996015 0.9008136 0.9011741 0.9017669 #>  [892,] 0.25551588 0.3694885 0.4220473 0.4893826 0.5588748 0.6358749 0.6791782 #>  [893,] 0.28255888 0.5049190 0.6161224 0.6307705 0.6375183 0.7097049 0.7328988 #>  [894,] 0.36529757 0.3752944 0.6030084 0.6923524 0.7152927 0.7166311 0.7266710 #>  [895,] 0.20758119 0.3753715 0.4648210 0.4948097 0.5652339 0.6062415 0.6216291 #>  [896,] 0.43232576 0.7291416 0.7447464 0.7876102 0.8026273 0.8058575 0.8340520 #>  [897,] 0.45746261 0.4645618 0.6214533 0.6917305 0.7172498 0.7848826 0.8079365 #>  [898,] 0.36988193 0.6014819 0.6034473 0.6084304 0.7048947 0.8291422 0.9181884 #>  [899,] 0.53663906 0.5927909 0.6063534 0.6181934 0.6635136 0.6804042 0.6968291 #>  [900,] 0.40318440 0.4329772 0.4562634 0.5223158 0.5867124 0.6764644 0.6822324 #>  [901,] 0.26373618 0.3334947 0.4062576 0.4229991 0.4802036 0.5055641 0.5061460 #>  [902,] 0.12916052 0.3011399 0.3917388 0.5075837 0.5393386 0.5429289 0.5806670 #>  [903,] 0.48576028 0.5065040 0.7939253 0.8231518 0.8390893 0.8612811 0.8671799 #>  [904,] 0.22267723 0.4037799 0.5831771 0.6350829 0.7026780 0.8119568 0.8452119 #>  [905,] 0.46456183 0.5162942 0.7121696 0.7137058 0.7426664 0.7480002 0.7933578 #>  [906,] 0.48579543 0.5717237 0.7102887 0.7582491 0.7675642 0.7755845 0.7944622 #>  [907,] 0.72042093 1.0459188 1.0543751 1.0630727 1.1506621 1.1751207 1.1977332 #>  [908,] 0.90501161 0.9501200 1.3182686 1.3905240 1.4789395 1.5608009 1.5652981 #>  [909,] 0.89531643 0.9244071 0.9275475 0.9338592 0.9354257 0.9408393 0.9658813 #>  [910,] 0.38294296 0.4435297 0.4828756 0.5129551 0.5271722 0.5454209 0.5641802 #>  [911,] 0.25835248 0.5245134 0.5965005 0.6484875 0.7089766 0.7461702 0.7663582 #>  [912,] 0.61970504 0.6474719 0.6592368 0.6923200 0.7080893 0.7248867 0.8145583 #>  [913,] 0.32295738 0.4741480 0.4966375 0.5495153 0.5512808 0.5575083 0.5626008 #>  [914,] 0.60463108 0.6462986 0.8451082 0.9967791 1.2498787 1.2623910 1.2672921 #>  [915,] 0.38019700 0.4234922 0.4625721 0.4705474 0.4710634 0.5228572 0.5660176 #>  [916,] 0.37991572 0.3869670 0.4039791 0.5435317 0.5544995 0.5856935 0.6457647 #>  [917,] 0.68022325 0.7216879 0.7294524 0.9439273 0.9569465 0.9578591 0.9679976 #>  [918,] 0.37505894 0.3785243 0.4580005 0.4696448 0.4736706 0.5368285 0.5454709 #>  [919,] 0.35078023 0.3923743 0.4045377 0.4710695 0.4792933 0.4823984 0.4832763 #>  [920,] 0.33047722 0.3657419 0.4592487 0.4865289 0.4913767 0.5117705 0.5144406 #>  [921,] 0.33541044 0.3762831 0.4237070 0.4321260 0.4639020 0.4787155 0.4833977 #>  [922,] 0.77352936 0.8160056 0.8436646 0.8519067 0.9132853 0.9545889 0.9872188 #>  [923,] 0.44746081 0.4583904 0.6858109 0.7488429 0.7944622 0.8144073 0.8171217 #>  [924,] 0.32007767 0.4229991 0.4881442 0.5114058 0.5244138 0.5525283 0.5698197 #>  [925,] 0.16605853 0.3728348 0.4024740 0.4807681 0.5574091 0.5913373 0.5984526 #>  [926,] 1.21999711 1.2326073 1.3114916 1.3237767 1.3713037 1.3849552 1.4064913 #>  [927,] 0.32455823 0.4574626 0.5100996 0.7460403 0.7584819 0.7610121 0.7877700 #>  [928,] 0.47729317 0.4860869 0.5980093 0.6589560 0.7151517 0.7665035 0.8322069 #>  [929,] 1.39351213 1.5329491 1.7847790 1.8193154 1.8546897 1.9405528 1.9783490 #>  [930,] 0.42622718 0.4517301 0.4911459 0.5276297 0.5356038 0.6146830 0.7146924 #>  [931,] 0.32025265 0.5074154 0.5648666 0.5857375 0.5898302 0.6236636 0.6314675 #>  [932,] 0.42338046 0.4342294 0.4494449 0.6249738 0.6322522 0.6993777 0.7118797 #>  [933,] 0.61207082 1.0066692 1.0440428 1.1268460 1.1311446 1.1315714 1.1488674 #>  [934,] 0.44541726 0.9820875 1.0110745 1.0715332 1.0974539 1.1324882 1.2214028 #>  [935,] 0.55335651 0.6046311 0.7974998 1.0483501 1.1230261 1.1356830 1.1576374 #>  [936,] 0.71608414 0.8003840 0.8085094 0.8197851 0.8254897 0.8723733 0.8772056 #>  [937,] 0.63447005 0.7418384 0.8282442 0.8616238 0.9040337 0.9160164 1.0195256 #>  [938,] 0.48564388 0.4979656 0.5563878 0.5801205 0.5865416 0.6413148 0.6691254 #>  [939,] 0.40591277 0.4753652 0.4797063 0.4951188 0.5181280 0.6081770 0.6188506 #>  [940,] 0.46742570 0.5051379 0.5758611 0.5881306 0.6224469 0.6678021 0.6684281 #>  [941,] 0.37622367 0.3998673 0.4005302 0.4319728 0.4474354 0.4492305 0.4739762 #>  [942,] 0.51237012 0.5128412 0.5320638 0.5789012 0.5814598 0.7139514 0.7183181 #>  [943,] 0.48204440 0.5072248 0.5735371 0.5756859 0.5819360 0.5946965 0.6369095 #>  [944,] 0.42727216 0.5304785 0.5701952 0.5989130 0.6018686 0.6130268 0.6503928 #>  [945,] 0.22223640 0.2248328 0.2807786 0.3829726 0.4622313 0.4966989 0.5051379 #>  [946,] 0.37738037 0.4202682 0.5331061 0.5446770 0.5651005 0.5973498 0.6071552 #>  [947,] 0.31611199 0.4151075 0.5204300 0.5369885 0.5426664 0.6028364 0.6548094 #>  [948,] 0.41978010 0.5243824 0.5869626 0.5924313 0.5992676 0.6030084 0.6465144 #>  [949,] 0.37024701 0.4384595 0.4386719 0.4845098 0.4959996 0.5691633 0.6024242 #>  [950,] 0.34453011 0.4566687 0.5041247 0.5986611 0.6182403 0.6276767 0.6354587 #>  [951,] 0.07895498 0.3600294 0.5631490 0.6010806 0.6014776 0.6123452 0.6390126 #>  [952,] 0.43928111 0.4668217 0.5085314 0.5891600 0.6056146 0.7951025 0.8150416 #>  [953,] 0.46765814 0.5827911 0.6562201 0.7199582 0.7448135 0.7497591 0.7539288 #>  [954,] 0.10003140 0.2999585 0.4205845 0.6031940 0.6035646 0.6111554 0.6524376 #>  [955,] 0.52946168 0.6514292 0.6705215 0.6732733 0.6892676 0.7801423 0.7810998 #>  [956,] 0.44311855 0.6459658 0.6891382 0.6984207 0.7853063 0.7979192 0.8584048 #>  [957,] 0.30393189 0.6014819 0.6274640 0.6280555 0.6601572 0.6997244 0.7086213 #>  [958,] 0.43339613 0.4684905 0.5277830 0.5440945 0.5664347 0.6019538 0.6033579 #>  [959,] 0.33205815 0.3953977 0.4631901 0.4736711 0.5284405 0.5560148 0.5836884 #>  [960,] 0.21079022 0.2542870 0.3494694 0.4301169 0.4354622 0.4364468 0.4741480 #>  [961,] 0.53037498 0.7182382 0.8589876 0.9050424 1.0320082 1.0806309 1.0911950 #>  [962,] 0.75995985 0.9093294 0.9538817 1.0106711 1.0122291 1.2035179 1.2343619 #>  [963,] 0.41725517 0.6834059 0.7222080 0.7802293 0.7925093 0.8804542 0.9010835 #>  [964,] 0.27238596 0.4573467 0.5032019 0.6719370 0.7301924 0.8616015 0.9065191 #>  [965,] 0.40884313 0.6177741 0.7463205 0.7499682 0.7617594 0.7930455 0.8229635 #>  [966,] 0.50094750 0.5084677 0.5426621 0.5712106 0.5953185 0.6115126 0.6160297 #>  [967,] 0.34453011 0.5750732 0.5847892 0.6031940 0.6147151 0.6330416 0.6593113 #>  [968,] 0.49674571 0.5137401 0.6180733 0.7144696 0.8474099 0.8805509 0.9054541 #>  [969,] 0.57284082 0.6298725 0.6905251 0.7387490 0.8208914 0.8639238 0.8742227 #>  [970,] 0.41302210 0.4920667 0.5489821 0.6362677 0.6769685 0.6984459 0.7363637 #>  [971,] 0.56784506 0.6241529 0.7084862 0.7093362 0.7580904 0.7627683 0.8137485 #>  [972,] 0.25863836 0.3563041 0.4344949 0.4519019 0.4695873 0.4791607 0.4984727 #>  [973,] 0.64034861 0.7170991 0.9391622 1.0014971 1.0462165 1.0467645 1.1293449 #>  [974,] 0.24662311 0.3696678 0.6584971 0.6879112 0.6968291 0.7244433 0.7502773 #>  [975,] 0.54962933 0.6845389 0.7704630 0.7930455 0.8291370 0.8591141 0.8652903 #>  [976,] 0.47777403 0.4939959 0.5386895 0.5585040 0.6118108 0.6141483 0.6236251 #>  [977,] 0.29683069 0.4019837 0.4776368 0.5446770 0.5850412 0.7744641 0.7753754 #>  [978,] 0.24350200 0.4440214 0.5231355 0.6131231 0.6384075 0.6441170 0.6891475 #>  [979,] 0.55620716 0.5964775 0.5965382 0.6310241 0.6387197 0.6622619 0.7737831 #>  [980,] 0.47567814 0.5862418 0.6089466 0.6189544 0.6287029 0.6360473 0.6472784 #>  [981,] 0.98596958 0.9948358 1.0397549 1.0432161 1.0462114 1.2694690 1.2708331 #>  [982,] 0.73301884 0.7937682 0.8290750 0.8740132 0.8860967 0.8868449 0.9141027 #>  [983,] 0.26119835 0.3255387 0.3907500 0.5752021 0.5962012 0.6022199 0.6106632 #>  [984,] 0.50559584 0.5854302 0.6732733 0.6873115 0.7180177 0.8570351 0.9007546 #>  [985,] 0.68489853 0.6962368 0.7093901 0.7457687 0.7685200 0.7702519 0.8956390 #>  [986,] 0.78299602 0.9476631 0.9991032 1.0699550 1.0723200 1.0777340 1.0863101 #>  [987,] 0.52504943 0.5416414 0.6912259 0.6975320 0.7515885 0.7730891 0.7755845 #>  [988,] 0.41464789 0.6514292 0.6873115 1.0024430 1.0249727 1.0342763 1.0686433 #>  [989,] 0.28457224 0.4322379 0.4587650 0.5528531 0.5870633 0.6068246 0.6294567 #>  [990,] 0.73925265 0.8395574 0.8754180 0.8925211 0.9021670 0.9098319 0.9339856 #>  [991,] 0.36429314 0.3713671 0.4298597 0.4477624 0.5851862 0.5859193 0.6147100 #>  [992,] 0.23574938 0.2408444 0.2745075 0.4266652 0.4452616 0.4581317 0.4814495 #>  [993,] 0.78657089 0.9071112 1.0234306 1.0911183 1.1198605 1.1557354 1.2470855 #>  [994,] 0.39152732 0.4489497 0.4573723 0.4600060 0.4673333 0.4833049 0.4999581 #>  [995,] 0.37738037 0.4156612 0.4346553 0.4619364 0.4776368 0.5455625 0.5726413 #>  [996,] 0.50650399 0.7047499 0.7224487 0.7710201 0.7929139 0.8029264 0.8111556 #>  [997,] 0.47451693 0.5110545 0.5324598 0.5401619 0.5562115 0.5658040 0.5742154 #>  [998,] 0.43917526 0.4592487 0.5555364 0.5601474 0.5678492 0.5791075 0.5897343 #>  [999,] 1.43940377 1.6090763 1.7083876 1.7728718 1.8394446 1.8707285 1.9375277 #> [1000,] 0.46742570 0.6632452 0.6746314 0.7049481 0.7395425 0.7530223 0.7574193 #>              [,8]      [,9]     [,10] #>    [1,] 0.7891693 0.8859169 0.8961596 #>    [2,] 0.6759023 0.6897678 0.7201570 #>    [3,] 1.0320082 1.0760518 1.1348450 #>    [4,] 0.5974747 0.6670718 0.6908479 #>    [5,] 0.8566046 0.9109837 0.9964283 #>    [6,] 0.7433689 0.7453247 0.7697196 #>    [7,] 0.4984035 0.5136632 0.5283657 #>    [8,] 0.8646222 0.9049759 0.9107715 #>    [9,] 0.7449359 0.7786357 0.7810307 #>   [10,] 0.8716590 0.9456165 0.9720687 #>   [11,] 0.6794852 0.6843673 0.7114241 #>   [12,] 0.5822600 0.6137069 0.6195381 #>   [13,] 0.6947483 0.7195371 0.7277307 #>   [14,] 0.6996239 0.7642934 0.7703849 #>   [15,] 0.6007071 0.6020736 0.6279466 #>   [16,] 0.8877087 0.9202619 0.9317419 #>   [17,] 0.8358472 0.8461014 0.8481743 #>   [18,] 0.6779839 0.8019291 0.8092184 #>   [19,] 0.9468610 0.9845479 1.0076377 #>   [20,] 0.5027172 0.5234472 0.6177342 #>   [21,] 0.5324598 0.5347003 0.5392626 #>   [22,] 0.9307987 0.9401111 0.9510256 #>   [23,] 2.0314825 2.0775162 2.1652767 #>   [24,] 0.6805179 0.6809143 0.7022903 #>   [25,] 0.8370721 0.8485114 0.8492719 #>   [26,] 0.6719370 0.7423171 0.7780189 #>   [27,] 0.5031774 0.5527803 0.5702715 #>   [28,] 0.8780265 0.9085745 0.9558656 #>   [29,] 1.3167134 1.3225992 1.4179656 #>   [30,] 1.1243440 1.1695688 1.1806564 #>   [31,] 0.9918942 1.0186883 1.0320571 #>   [32,] 0.7659156 0.7876171 0.7891693 #>   [33,] 0.7707227 0.8064133 0.8341642 #>   [34,] 0.7776278 0.8519912 0.8790563 #>   [35,] 0.5458884 0.5981495 0.6151139 #>   [36,] 0.6225039 0.6341591 0.6745829 #>   [37,] 1.2698492 1.4089628 1.4527866 #>   [38,] 0.5888996 0.6031566 0.6135929 #>   [39,] 0.6440928 0.6530228 0.7080345 #>   [40,] 0.6687545 0.6721426 0.6885504 #>   [41,] 1.0410977 1.0567760 1.0655976 #>   [42,] 0.6141953 0.6437447 0.6478005 #>   [43,] 0.9199101 0.9564715 1.0150546 #>   [44,] 0.8662990 0.8881731 0.8937939 #>   [45,] 1.5039829 1.5712922 1.6116785 #>   [46,] 0.9557699 0.9564062 0.9626386 #>   [47,] 0.7291988 0.7477292 0.7562299 #>   [48,] 0.6618634 0.6805079 0.6867025 #>   [49,] 0.9512154 0.9624031 0.9813181 #>   [50,] 0.6550520 0.6599381 0.6752126 #>   [51,] 0.9120131 0.9875422 0.9947818 #>   [52,] 0.7956316 0.8039594 0.8418584 #>   [53,] 0.7753728 0.7830868 0.8391425 #>   [54,] 0.9083773 0.9365151 0.9547874 #>   [55,] 0.8084519 0.8088433 0.8094537 #>   [56,] 0.9573015 0.9708093 0.9989401 #>   [57,] 1.0241422 1.0246165 1.0259484 #>   [58,] 1.2347629 1.2537744 1.2895561 #>   [59,] 0.6781777 0.7021238 0.7066749 #>   [60,] 0.6752126 0.6959121 0.6973681 #>   [61,] 0.6584971 0.6758458 0.6903013 #>   [62,] 0.6425049 0.6573607 0.6573668 #>   [63,] 1.0699559 1.1104885 1.1352696 #>   [64,] 0.6682463 0.6781587 0.7000028 #>   [65,] 0.6086903 0.6177342 0.6239931 #>   [66,] 1.1554230 1.1560759 1.2039865 #>   [67,] 0.9451120 0.9639348 0.9655722 #>   [68,] 1.0588292 1.0755848 1.0925718 #>   [69,] 0.9508658 0.9605951 0.9744008 #>   [70,] 1.1415462 1.1555825 1.1989076 #>   [71,] 0.5037029 0.5041405 0.5060369 #>   [72,] 0.9868368 1.0314888 1.0719650 #>   [73,] 0.8282180 0.8699283 0.9092283 #>   [74,] 1.2229114 1.2332285 1.2363573 #>   [75,] 1.0380977 1.0719650 1.0862137 #>   [76,] 0.6060649 0.6144101 0.6148856 #>   [77,] 1.0619363 1.1199548 1.1278473 #>   [78,] 0.8063222 0.8479728 0.8503559 #>   [79,] 0.7651422 0.7711365 0.8163529 #>   [80,] 0.8456427 0.8991439 0.9081933 #>   [81,] 0.7497591 0.7737326 0.7870718 #>   [82,] 0.7097306 0.7172584 0.7265991 #>   [83,] 2.0589599 2.0999999 2.1395659 #>   [84,] 0.7786904 0.7875010 0.7879861 #>   [85,] 0.8129563 0.8130471 0.8603825 #>   [86,] 0.9376009 1.0178722 1.0354297 #>   [87,] 0.8218008 0.8309766 0.8684536 #>   [88,] 1.4884506 1.5267174 1.6090763 #>   [89,] 0.6736094 0.6737083 0.6755186 #>   [90,] 1.3258273 1.3429944 1.3670291 #>   [91,] 1.2951480 1.3163962 1.3481844 #>   [92,] 0.5780864 0.5865416 0.5873452 #>   [93,] 0.7106489 0.7227294 0.7526629 #>   [94,] 0.4943678 0.5106467 0.5202483 #>   [95,] 0.5328843 0.6198322 0.6635011 #>   [96,] 0.6724273 0.6732952 0.6762840 #>   [97,] 0.9184474 0.9255683 0.9524602 #>   [98,] 0.7244380 0.7294723 0.7366838 #>   [99,] 0.6330416 0.6342109 0.6416903 #>  [100,] 0.8980069 0.9050268 0.9089028 #>  [101,] 0.6136487 0.6310664 0.6378330 #>  [102,] 1.2640117 1.2682299 1.2782696 #>  [103,] 1.0181046 1.0212630 1.0990106 #>  [104,] 1.0416709 1.0696653 1.1046790 #>  [105,] 1.2550606 1.3141305 1.3166595 #>  [106,] 0.6404052 0.6516422 0.6753847 #>  [107,] 0.8233547 0.8734855 0.8780032 #>  [108,] 0.8293116 0.8672215 0.9753421 #>  [109,] 1.4169773 1.4200938 1.4215972 #>  [110,] 1.1044580 1.1156159 1.1661798 #>  [111,] 0.5467507 0.5539896 0.5602622 #>  [112,] 0.7160841 0.7237398 0.7706598 #>  [113,] 0.9960305 1.0238177 1.1104783 #>  [114,] 0.7073334 0.7154759 0.7306908 #>  [115,] 0.8647512 0.8850204 0.8983428 #>  [116,] 0.5534957 0.5691633 0.5808182 #>  [117,] 1.1968028 1.2077310 1.2159137 #>  [118,] 0.8276520 0.8984973 1.0074596 #>  [119,] 0.7149608 0.7178535 0.7529828 #>  [120,] 1.0465231 1.0630257 1.0887118 #>  [121,] 0.6608388 0.7227546 0.7737326 #>  [122,] 0.7389172 0.7696871 0.7941861 #>  [123,] 0.9341561 0.9376016 0.9755442 #>  [124,] 1.1632533 1.1644358 1.1885279 #>  [125,] 0.5981238 0.6046051 0.6181269 #>  [126,] 0.8881729 0.8914623 0.9117520 #>  [127,] 0.4983507 0.5198844 0.5216397 #>  [128,] 0.7676761 0.7916059 0.8031574 #>  [129,] 0.6630137 0.6722107 0.6810592 #>  [130,] 0.7534186 0.8638683 0.8922667 #>  [131,] 0.5792892 0.6034659 0.6037886 #>  [132,] 1.0400980 1.0527437 1.1095605 #>  [133,] 1.1025864 1.1466248 1.1598013 #>  [134,] 1.0265421 1.0324822 1.0638318 #>  [135,] 0.7613913 0.7953037 0.8461553 #>  [136,] 0.7392527 0.7578532 0.7697211 #>  [137,] 0.5285873 0.5330522 0.5525109 #>  [138,] 0.5510266 0.6723007 0.6747546 #>  [139,] 1.0675354 1.1265847 1.1271569 #>  [140,] 0.6470945 0.6477824 0.6608871 #>  [141,] 0.8684536 0.8797244 0.9367317 #>  [142,] 0.9503114 0.9737941 0.9742115 #>  [143,] 0.7799516 0.8181724 0.8194006 #>  [144,] 0.5827984 0.5950422 0.5964905 #>  [145,] 0.5822661 0.6078538 0.6635136 #>  [146,] 0.7046603 0.7087777 0.7238737 #>  [147,] 1.1446958 1.1464293 1.1745037 #>  [148,] 0.6846863 0.6906012 0.7206119 #>  [149,] 0.6207611 0.6229545 0.6370910 #>  [150,] 0.5992176 0.6058253 0.6130268 #>  [151,] 2.2089997 2.2225337 2.2346835 #>  [152,] 0.8532855 0.8618399 0.9242493 #>  [153,] 0.5710429 0.5811051 0.5951856 #>  [154,] 0.9133595 0.9280277 0.9798502 #>  [155,] 0.9117824 0.9307444 0.9564239 #>  [156,] 0.7148925 0.7492732 0.7673249 #>  [157,] 0.8968027 0.9072325 0.9509572 #>  [158,] 0.9654974 1.0455574 1.0459188 #>  [159,] 0.7236880 0.7334557 0.7348916 #>  [160,] 0.8874088 0.9662852 0.9992228 #>  [161,] 0.7206054 0.7305428 0.7424594 #>  [162,] 0.5865099 0.5953185 0.6255418 #>  [163,] 0.6356416 0.6451308 0.6840291 #>  [164,] 0.9712402 1.0347028 1.0562382 #>  [165,] 1.1277515 1.1333767 1.1404135 #>  [166,] 0.8196062 0.9657471 0.9709280 #>  [167,] 0.9801407 0.9972232 1.1068070 #>  [168,] 1.2382703 1.3165108 1.3412014 #>  [169,] 0.9415717 0.9527633 0.9930509 #>  [170,] 0.6119446 0.6279466 0.6361075 #>  [171,] 0.7806188 0.7893445 0.7988429 #>  [172,] 0.9046906 0.9110357 0.9536265 #>  [173,] 0.6012166 0.6586619 0.6716481 #>  [174,] 0.7266872 0.7760250 0.7875099 #>  [175,] 0.6404362 0.6586057 0.7152927 #>  [176,] 0.9958223 1.0021266 1.0470433 #>  [177,] 0.5932025 0.5986179 0.6064783 #>  [178,] 0.8571196 0.8659538 0.8684326 #>  [179,] 0.4787155 0.5245550 0.5352854 #>  [180,] 0.5345596 0.5449089 0.5700780 #>  [181,] 0.6936921 0.7184717 0.7189639 #>  [182,] 1.0618172 1.0739660 1.0761968 #>  [183,] 1.4321518 1.4861716 1.5427549 #>  [184,] 0.5876831 0.6070604 0.6366043 #>  [185,] 1.5439590 1.5848234 1.6003014 #>  [186,] 0.6590254 0.6687360 0.6938734 #>  [187,] 1.0341682 1.0471668 1.0582398 #>  [188,] 0.9674908 0.9975058 1.0659237 #>  [189,] 1.2419306 1.2671021 1.2701939 #>  [190,] 1.4218098 1.4402722 1.4607048 #>  [191,] 0.6971871 0.7216208 0.7458085 #>  [192,] 0.5417799 0.5454209 0.5768689 #>  [193,] 1.3418604 1.3695998 1.3883092 #>  [194,] 0.4964958 0.5378948 0.5493696 #>  [195,] 0.8473752 0.8628233 0.8834012 #>  [196,] 1.0827447 1.0935846 1.1677906 #>  [197,] 0.5467388 0.5908807 0.6253631 #>  [198,] 0.9163599 1.0030129 1.0696304 #>  [199,] 0.9305869 0.9456165 0.9475778 #>  [200,] 1.5692857 1.6207648 1.7020637 #>  [201,] 0.7185193 0.7324104 0.7464870 #>  [202,] 1.0278318 1.0337703 1.0559473 #>  [203,] 0.9946212 0.9955434 0.9990913 #>  [204,] 0.7288669 0.7410647 0.7422189 #>  [205,] 0.6634604 0.6912259 0.6974060 #>  [206,] 0.4247332 0.4366981 0.4613315 #>  [207,] 0.8807766 0.8842697 0.9225660 #>  [208,] 0.9706670 1.0071630 1.0081899 #>  [209,] 0.7355539 0.7520811 0.7578263 #>  [210,] 1.0263938 1.0715332 1.1232698 #>  [211,] 0.4325420 0.4344949 0.5064654 #>  [212,] 0.6809244 0.7132584 0.7159389 #>  [213,] 0.8482498 0.8489447 0.8588990 #>  [214,] 0.6723534 0.6868789 0.7154759 #>  [215,] 0.4695873 0.4999581 0.5119588 #>  [216,] 0.8358591 0.8648866 0.8681724 #>  [217,] 0.9480563 0.9779215 0.9894179 #>  [218,] 1.1690557 1.1872227 1.2017895 #>  [219,] 0.7628285 0.7719532 0.7863941 #>  [220,] 1.1102751 1.1325726 1.1444335 #>  [221,] 0.7751864 0.7845348 0.8219557 #>  [222,] 0.7553541 0.7578263 0.7663822 #>  [223,] 1.0333185 1.0432275 1.1403094 #>  [224,] 0.7442744 0.7543458 0.8512793 #>  [225,] 0.7464954 0.7635375 0.8135967 #>  [226,] 0.5595632 0.6114577 0.6114677 #>  [227,] 0.9535711 0.9936765 1.0235102 #>  [228,] 0.7356157 0.7437694 0.7572573 #>  [229,] 0.5025751 0.6035025 0.6068528 #>  [230,] 0.7001563 0.7113882 0.7338528 #>  [231,] 0.5370944 0.5389230 0.5487656 #>  [232,] 0.6962283 0.7144538 0.7264489 #>  [233,] 0.6676003 0.6732690 0.6781773 #>  [234,] 1.3703660 1.3985772 1.4024455 #>  [235,] 0.5499731 0.5882918 0.6010852 #>  [236,] 0.6096566 0.6123452 0.6630137 #>  [237,] 0.8945328 0.9166079 0.9324132 #>  [238,] 1.4807642 1.5002037 1.5245387 #>  [239,] 0.5932890 0.5987662 0.6090609 #>  [240,] 1.0487744 1.0918932 1.0923574 #>  [241,] 0.7107093 0.7244433 0.7335742 #>  [242,] 0.5845806 0.6133667 0.6270708 #>  [243,] 0.9080551 0.9353756 0.9459526 #>  [244,] 0.6923230 0.7165293 0.7497123 #>  [245,] 1.2850462 1.3013075 1.3150677 #>  [246,] 0.7227546 0.7440133 0.7619388 #>  [247,] 1.8689899 1.8956209 1.9011599 #>  [248,] 0.5391472 0.5487656 0.5495153 #>  [249,] 0.8697695 0.8746924 0.9392814 #>  [250,] 0.8970631 0.9559000 1.0248221 #>  [251,] 0.7234828 0.7629489 0.7682768 #>  [252,] 0.9594565 0.9924208 0.9995880 #>  [253,] 1.5373272 1.5774333 1.6208072 #>  [254,] 1.6215277 1.6343889 1.6397912 #>  [255,] 0.9061975 0.9144469 0.9507295 #>  [256,] 0.7594324 0.7817892 0.7933188 #>  [257,] 0.6979235 0.7206647 0.7578915 #>  [258,] 0.5167833 0.5533164 0.5587616 #>  [259,] 0.8064133 0.8353881 0.8461163 #>  [260,] 0.6190120 0.6201832 0.6207879 #>  [261,] 1.3051861 1.3693746 1.3830779 #>  [262,] 0.5441846 0.5498992 0.5589563 #>  [263,] 0.7226064 0.7550994 0.8032979 #>  [264,] 0.7169472 0.7291115 0.7367069 #>  [265,] 0.6409249 0.6803461 0.7065688 #>  [266,] 1.1970765 1.2178760 1.2670896 #>  [267,] 0.7306908 0.7360474 0.7678067 #>  [268,] 0.6000184 0.6329207 0.6454009 #>  [269,] 0.7988210 0.8109269 0.8901735 #>  [270,] 0.7558677 0.7594827 0.7703849 #>  [271,] 0.7333965 0.7531662 0.7862046 #>  [272,] 1.6060064 1.6081301 1.6208758 #>  [273,] 0.7764194 0.7846132 0.8063646 #>  [274,] 0.9708261 0.9732825 1.0277021 #>  [275,] 1.7116543 1.7141558 1.7425873 #>  [276,] 0.7258771 0.7397380 0.7437475 #>  [277,] 0.7052294 0.7162788 0.7212919 #>  [278,] 0.5643063 0.6145635 0.6163742 #>  [279,] 1.3814765 1.4394038 1.5412532 #>  [280,] 0.8324663 0.8328581 0.8385343 #>  [281,] 0.6953124 0.7021238 0.7121062 #>  [282,] 0.7230386 0.7510682 0.7694517 #>  [283,] 0.7504132 0.7527496 0.7737831 #>  [284,] 0.7528660 0.7569395 0.7892005 #>  [285,] 0.5956650 0.6238898 0.6307001 #>  [286,] 1.0610959 1.0933024 1.0989698 #>  [287,] 1.2409289 1.2510199 1.2542499 #>  [288,] 1.1698452 1.2491694 1.2646956 #>  [289,] 0.8461163 0.8966307 0.9182090 #>  [290,] 1.0378920 1.0405830 1.1170108 #>  [291,] 0.5508413 0.5622796 0.5782738 #>  [292,] 0.5607428 0.5736183 0.5751163 #>  [293,] 0.7061298 0.7131610 0.7143054 #>  [294,] 0.6089069 0.6444084 0.6463037 #>  [295,] 1.7940298 1.8271120 1.8476429 #>  [296,] 0.6026737 0.6471335 0.6477480 #>  [297,] 1.0798255 1.0894331 1.1173290 #>  [298,] 0.7135317 0.7225286 0.7958216 #>  [299,] 0.5577248 0.6242411 0.6346328 #>  [300,] 1.4765082 1.5037288 1.5340864 #>  [301,] 1.0051859 1.0657454 1.0946269 #>  [302,] 1.3653544 1.4095457 1.4265542 #>  [303,] 0.9478632 0.9498725 0.9617648 #>  [304,] 1.0048851 1.0337703 1.0428196 #>  [305,] 0.7380047 0.7430910 0.7433025 #>  [306,] 0.7746470 0.7845990 0.7867034 #>  [307,] 0.6971871 0.7160036 0.7393158 #>  [308,] 0.6885083 0.7160123 0.7355539 #>  [309,] 0.8433600 0.8487066 0.8512373 #>  [310,] 1.4252573 1.4352244 1.4368390 #>  [311,] 0.9996252 1.0344727 1.0387606 #>  [312,] 0.8873318 0.9132087 0.9292520 #>  [313,] 1.0397321 1.0655787 1.0920320 #>  [314,] 0.6068528 0.6201891 0.6425228 #>  [315,] 1.4427939 1.4677958 1.4918924 #>  [316,] 1.1242455 1.1256979 1.1760056 #>  [317,] 1.3468353 1.3832758 1.3845542 #>  [318,] 0.5935778 0.5950422 0.6320586 #>  [319,] 0.5064654 0.5559240 0.5623779 #>  [320,] 0.7866790 0.8149609 0.8315063 #>  [321,] 0.6400075 0.6408894 0.6456362 #>  [322,] 1.1328210 1.1752649 1.2089816 #>  [323,] 0.7349377 0.8101178 0.8292492 #>  [324,] 0.5342967 0.5738679 0.5777207 #>  [325,] 0.6144531 0.6443330 0.6577759 #>  [326,] 0.7793472 0.7874166 0.7901472 #>  [327,] 0.4620479 0.4864405 0.5013145 #>  [328,] 0.7521042 0.7754567 0.7853192 #>  [329,] 0.6255418 0.6394326 0.6464379 #>  [330,] 0.7753754 0.8155538 0.8201133 #>  [331,] 1.1490755 1.1509403 1.1942738 #>  [332,] 0.5411867 0.5565556 0.5705945 #>  [333,] 0.6530228 0.7534186 0.7554486 #>  [334,] 0.7869759 0.7875010 0.7880983 #>  [335,] 0.8852704 0.8975321 0.9082361 #>  [336,] 0.8056816 0.8128145 0.8378578 #>  [337,] 0.7256074 0.7258611 0.7305428 #>  [338,] 0.7312599 0.7328537 0.7523778 #>  [339,] 1.5060299 1.5261208 1.5271130 #>  [340,] 1.2548768 1.2552293 1.2670560 #>  [341,] 0.6458386 0.6627981 0.6668213 #>  [342,] 0.7925093 0.7983004 0.8098243 #>  [343,] 0.5100656 0.5219703 0.5370944 #>  [344,] 0.7744641 0.7880983 0.8039579 #>  [345,] 0.8010039 0.8101158 0.8119628 #>  [346,] 0.7124126 0.7200326 0.7317553 #>  [347,] 0.8178039 0.8391319 0.8530273 #>  [348,] 0.7753728 0.7851221 0.8003662 #>  [349,] 0.5750732 0.5906419 0.6053925 #>  [350,] 0.8932595 0.8951056 0.8999159 #>  [351,] 0.9343982 0.9415717 0.9497276 #>  [352,] 0.8406542 0.8957667 0.9596434 #>  [353,] 0.7563593 0.7587406 0.7678363 #>  [354,] 0.8053104 0.9115583 0.9921988 #>  [355,] 0.7113882 0.7147746 0.7202816 #>  [356,] 0.4953010 0.5607769 0.5836742 #>  [357,] 0.4947276 0.5234089 0.5288898 #>  [358,] 0.9940121 1.0113759 1.0153922 #>  [359,] 0.6874813 0.6882412 0.6951822 #>  [360,] 0.7899424 0.8244305 0.8308071 #>  [361,] 0.6366573 0.7056270 0.7117012 #>  [362,] 0.9433332 0.9514402 0.9573015 #>  [363,] 0.6740929 0.6885382 0.7050752 #>  [364,] 1.1527390 1.1570990 1.1986135 #>  [365,] 1.3324179 1.3365939 1.3731023 #>  [366,] 1.8290250 1.9234399 1.9446449 #>  [367,] 0.8340313 0.8460332 0.8578160 #>  [368,] 0.7957651 0.8002012 0.8111556 #>  [369,] 0.5314768 0.5826439 0.5849964 #>  [370,] 0.5876971 0.5911310 0.6052355 #>  [371,] 0.5347003 0.5608918 0.5949633 #>  [372,] 0.5107382 0.5123130 0.5144406 #>  [373,] 0.6555343 0.6979235 0.7085403 #>  [374,] 0.5392372 0.5484070 0.5496834 #>  [375,] 0.6056531 0.6867025 0.7296623 #>  [376,] 0.9428304 1.0454655 1.2142968 #>  [377,] 0.8646393 0.8748317 0.8810675 #>  [378,] 0.6017397 0.6198322 0.6416739 #>  [379,] 1.4483185 1.5517523 1.6115003 #>  [380,] 0.7424806 0.7606718 0.7610721 #>  [381,] 0.6235697 0.6303238 0.6353263 #>  [382,] 0.6627261 0.6632452 0.6828756 #>  [383,] 0.8459387 0.8529310 0.8844802 #>  [384,] 0.6178069 0.6333369 0.6478005 #>  [385,] 0.7963100 0.8198512 0.8303961 #>  [386,] 0.8603825 0.8877087 0.8975321 #>  [387,] 1.0418609 1.0441237 1.0655741 #>  [388,] 2.2394436 2.3506058 2.3709512 #>  [389,] 0.7347900 0.7704819 0.8179644 #>  [390,] 0.8186443 0.8244305 0.8339230 #>  [391,] 0.6119446 0.6131996 0.6203439 #>  [392,] 0.7083180 0.7152460 0.7160036 #>  [393,] 0.6155668 0.6282067 0.6444930 #>  [394,] 0.8181383 0.8257512 0.8278351 #>  [395,] 0.8748692 0.8780644 0.8805326 #>  [396,] 0.5256869 0.5635151 0.5685578 #>  [397,] 0.7283088 0.7390392 0.7455031 #>  [398,] 0.6134857 0.6256511 0.6334958 #>  [399,] 0.9635726 0.9703515 0.9891784 #>  [400,] 1.3338612 1.3450998 1.4072025 #>  [401,] 0.6407905 0.6513280 0.6682062 #>  [402,] 0.4738496 0.4783321 0.4922347 #>  [403,] 0.8942360 0.8945436 0.9626549 #>  [404,] 0.5392372 0.5401619 0.5454907 #>  [405,] 0.9112522 0.9419134 0.9476631 #>  [406,] 0.7206647 0.7215687 0.7390335 #>  [407,] 0.6480411 0.6618062 0.6636908 #>  [408,] 0.6242248 0.6242916 0.7137027 #>  [409,] 1.0471374 1.0588655 1.0840968 #>  [410,] 0.5960943 0.6729026 0.7000474 #>  [411,] 1.0023901 1.0630257 1.0829205 #>  [412,] 0.9581371 0.9678127 0.9878576 #>  [413,] 0.8287256 0.8692157 0.8821057 #>  [414,] 0.7287834 0.7458320 0.7533933 #>  [415,] 0.7428203 0.7607583 0.7688400 #>  [416,] 1.0287631 1.0412204 1.0413952 #>  [417,] 0.8286104 0.8286456 0.8299695 #>  [418,] 0.6058660 0.6126318 0.6134511 #>  [419,] 0.6621204 0.6796141 0.6807782 #>  [420,] 1.2209384 1.2298853 1.2384719 #>  [421,] 0.8304668 0.8597801 0.8884935 #>  [422,] 0.8254897 0.8265958 0.8352055 #>  [423,] 0.7612954 0.7827696 0.7831787 #>  [424,] 0.6613668 0.6729737 0.6972758 #>  [425,] 0.8913552 0.9082361 0.9163599 #>  [426,] 0.9307444 0.9597439 0.9777608 #>  [427,] 0.6590254 0.6721565 0.6863261 #>  [428,] 0.5693537 0.5721535 0.5734384 #>  [429,] 0.9609488 0.9778694 1.0253731 #>  [430,] 0.7323300 0.8069098 0.8418135 #>  [431,] 0.5526438 0.5681438 0.5793072 #>  [432,] 0.6846863 0.6874813 0.7212601 #>  [433,] 0.6141953 0.6313366 0.6566496 #>  [434,] 1.0499016 1.0619389 1.0829410 #>  [435,] 1.0560118 1.0610208 1.1487269 #>  [436,] 0.6523336 0.6600073 0.6788684 #>  [437,] 0.8612662 0.8729062 0.8985717 #>  [438,] 0.5627260 0.6171181 0.6570678 #>  [439,] 0.8815829 0.8916487 0.9230259 #>  [440,] 0.6056531 0.6425228 0.6791553 #>  [441,] 0.7363637 0.7598081 0.7820987 #>  [442,] 0.9271789 0.9561956 0.9582199 #>  [443,] 0.5095389 0.5161810 0.5534064 #>  [444,] 1.0023464 1.0364554 1.0608307 #>  [445,] 0.9224434 0.9526086 0.9622837 #>  [446,] 0.6694624 0.7010809 0.7072794 #>  [447,] 1.2894016 1.3173377 1.3660656 #>  [448,] 0.7323300 0.7408098 0.7452691 #>  [449,] 0.5520579 0.6043425 0.6472867 #>  [450,] 0.7994669 0.8149609 0.8201898 #>  [451,] 0.8243013 0.8289288 0.8295626 #>  [452,] 1.0161238 1.0714325 1.0818690 #>  [453,] 0.8532855 0.9133595 0.9474560 #>  [454,] 1.6396814 1.6620536 1.6760108 #>  [455,] 1.6829351 1.7015064 1.7090957 #>  [456,] 0.7306226 0.7482847 0.7736691 #>  [457,] 0.6453863 0.6789813 0.7032168 #>  [458,] 0.7849051 0.7921675 0.8256576 #>  [459,] 0.5513881 0.6142245 0.6459179 #>  [460,] 0.5780864 0.5801205 0.5818383 #>  [461,] 0.9493278 0.9524348 1.0156341 #>  [462,] 0.5426542 0.5847446 0.6145969 #>  [463,] 0.8192250 0.8794410 0.9707581 #>  [464,] 0.8892900 0.9543224 1.0005081 #>  [465,] 0.5009334 0.5096409 0.5381621 #>  [466,] 1.1677893 1.2248848 1.2646526 #>  [467,] 0.6461084 0.6524817 0.6979419 #>  [468,] 0.9302832 0.9838753 1.0226672 #>  [469,] 0.9211836 0.9465300 0.9990913 #>  [470,] 0.5986179 0.6187133 0.6194951 #>  [471,] 0.8951591 0.9168745 0.9269040 #>  [472,] 0.8395574 0.8405275 0.8426086 #>  [473,] 0.8048092 0.8196062 0.8280196 #>  [474,] 0.9448337 1.0003745 1.0092891 #>  [475,] 0.5142716 0.5698535 0.5775571 #>  [476,] 0.5099059 0.5575083 0.5602622 #>  [477,] 0.7076203 0.7083180 0.7641619 #>  [478,] 0.9145129 0.9565875 0.9629865 #>  [479,] 0.7250558 0.7490696 0.7885646 #>  [480,] 0.7515804 0.7578915 0.7624690 #>  [481,] 1.3076839 1.4935715 1.5512441 #>  [482,] 1.0024222 1.0076904 1.0259320 #>  [483,] 0.5435387 0.5452288 0.5864097 #>  [484,] 0.6917926 0.7076203 0.7109639 #>  [485,] 0.5454907 0.5643649 0.5689921 #>  [486,] 0.6615057 0.6911593 0.6947210 #>  [487,] 0.7414314 0.7476204 0.7769236 #>  [488,] 0.6268110 0.6324031 0.6537288 #>  [489,] 1.2308074 1.2610614 1.2958820 #>  [490,] 0.5887694 0.6255342 0.6403603 #>  [491,] 0.6726794 0.6773615 0.6998557 #>  [492,] 0.4519019 0.4600060 0.5291112 #>  [493,] 0.9594143 1.0479771 1.0530805 #>  [494,] 1.0801215 1.1577852 1.1613893 #>  [495,] 0.9055188 0.9098616 0.9180464 #>  [496,] 0.7921936 0.8469296 0.9133483 #>  [497,] 0.8141550 0.8238219 0.8365011 #>  [498,] 0.8910149 0.9128618 0.9179834 #>  [499,] 0.5806670 0.5962537 0.6012698 #>  [500,] 0.4777292 0.4874823 0.4942474 #>  [501,] 0.8551861 0.9149326 0.9153011 #>  [502,] 1.1515525 1.1644316 1.1670729 #>  [503,] 1.0192509 1.0391345 1.0431745 #>  [504,] 1.0325464 1.0488552 1.0947236 #>  [505,] 0.7303181 0.7345998 0.7488115 #>  [506,] 0.7102898 0.7167224 0.7246445 #>  [507,] 0.7495709 0.7909290 0.8105152 #>  [508,] 0.7503487 0.7730793 0.8247594 #>  [509,] 0.8689182 0.9419185 0.9991032 #>  [510,] 0.6408943 0.6692771 0.6817775 #>  [511,] 0.5890308 0.6524376 0.6686755 #>  [512,] 0.9450311 0.9509672 0.9664793 #>  [513,] 0.6212144 0.6364324 0.6666021 #>  [514,] 0.7610936 0.8354384 0.8470893 #>  [515,] 1.4408273 1.4523400 1.5379106 #>  [516,] 0.5685578 0.5818383 0.5842928 #>  [517,] 1.7124943 1.7156299 1.7801222 #>  [518,] 1.3367042 1.3368692 1.3414947 #>  [519,] 1.3180918 1.3355067 1.3426884 #>  [520,] 0.7551200 0.7793038 0.8112310 #>  [521,] 0.5508413 0.5913373 0.6108850 #>  [522,] 0.6649456 0.7041993 0.7175508 #>  [523,] 0.7588953 0.7827273 0.7976654 #>  [524,] 0.6177445 0.6273096 0.6284336 #>  [525,] 0.6923200 0.7482857 0.7854905 #>  [526,] 0.5882276 0.5938652 0.5958516 #>  [527,] 0.8539398 0.8890301 0.9162928 #>  [528,] 0.9275475 0.9747775 0.9767148 #>  [529,] 1.5041122 1.5094892 1.5157886 #>  [530,] 0.6024242 0.6198720 0.6647390 #>  [531,] 0.5700780 0.5751163 0.6098532 #>  [532,] 0.6576738 0.6818640 0.6999357 #>  [533,] 0.9306838 0.9799510 0.9996927 #>  [534,] 0.9055612 0.9122924 0.9529367 #>  [535,] 1.6360867 1.7667388 1.7700906 #>  [536,] 0.6051104 0.6397372 0.6802602 #>  [537,] 0.6811057 0.7049481 0.7635729 #>  [538,] 0.8501898 0.8901735 0.9131696 #>  [539,] 0.5989840 0.6204238 0.6458386 #>  [540,] 0.9244071 0.9473346 1.0446986 #>  [541,] 0.6416648 0.6789813 0.6933603 #>  [542,] 0.6746746 0.6848366 0.6906669 #>  [543,] 0.6269648 0.6416400 0.6843639 #>  [544,] 1.1156811 1.2178123 1.2194026 #>  [545,] 0.6042911 0.6058253 0.6327151 #>  [546,] 0.8816028 0.8906321 0.8956357 #>  [547,] 0.5808777 0.5868174 0.6334958 #>  [548,] 0.5254561 0.5381621 0.6282327 #>  [549,] 0.6667679 0.6758458 0.6898790 #>  [550,] 0.6688463 0.7026075 0.7256664 #>  [551,] 0.6370550 0.6608040 0.6782863 #>  [552,] 0.7023328 0.7604528 0.7764858 #>  [553,] 0.6123769 0.6329852 0.6459280 #>  [554,] 1.0571482 1.0812771 1.1125415 #>  [555,] 0.9141257 0.9275159 0.9279888 #>  [556,] 1.1195738 1.2047548 1.2240272 #>  [557,] 1.1577852 1.1643523 1.2231253 #>  [558,] 0.6470008 0.6564024 0.6641121 #>  [559,] 0.6562201 0.6624975 0.6821642 #>  [560,] 0.6572786 0.6727211 0.6732989 #>  [561,] 0.6579872 0.6817761 0.6890883 #>  [562,] 0.6409941 0.6809650 0.6923230 #>  [563,] 0.7047764 0.7154049 0.7531130 #>  [564,] 0.5510357 0.5635842 0.5795338 #>  [565,] 0.6664301 0.6729026 0.6822324 #>  [566,] 0.9441225 1.0155340 1.0280372 #>  [567,] 0.5849964 0.5868191 0.5916185 #>  [568,] 0.7234828 0.7390392 0.7630445 #>  [569,] 0.7457607 0.7681571 0.7751051 #>  [570,] 0.5739704 0.5847892 0.5883729 #>  [571,] 1.1414588 1.1560052 1.1562478 #>  [572,] 1.1462040 1.1522709 1.1773801 #>  [573,] 0.8303102 0.8452119 0.8655576 #>  [574,] 0.7993400 0.7993618 0.8466740 #>  [575,] 0.9566131 0.9658693 0.9963300 #>  [576,] 0.7396187 0.7505349 0.7516938 #>  [577,] 0.7079110 0.7110242 0.7290735 #>  [578,] 0.5254561 0.5427875 0.5503466 #>  [579,] 1.0097853 1.0368792 1.0488552 #>  [580,] 1.3252728 1.3536123 1.3608720 #>  [581,] 1.0136322 1.0221118 1.0467336 #>  [582,] 0.7334557 0.7609576 0.7904316 #>  [583,] 0.6579872 0.6601343 0.7487061 #>  [584,] 1.3984146 1.4061093 1.4065259 #>  [585,] 0.9252681 0.9410050 0.9710873 #>  [586,] 0.5106467 0.5131819 0.5223936 #>  [587,] 0.6894766 0.7080345 0.7191515 #>  [588,] 0.5600523 0.5878239 0.5923911 #>  [589,] 0.6043425 0.6161049 0.6235000 #>  [590,] 0.7208956 0.7337960 0.7425501 #>  [591,] 0.7334060 0.7582511 0.7642891 #>  [592,] 0.8438528 0.9422914 0.9716052 #>  [593,] 0.5037654 0.5189072 0.5878515 #>  [594,] 1.7937010 1.8014012 1.8037201 #>  [595,] 0.5496834 0.5664329 0.6012904 #>  [596,] 0.5962003 0.6064117 0.6341445 #>  [597,] 0.8591774 0.8999190 0.9002669 #>  [598,] 0.5110545 0.5285873 0.5425230 #>  [599,] 0.9918942 1.0375892 1.0832935 #>  [600,] 1.0110745 1.0260936 1.0446612 #>  [601,] 1.1746962 1.1928488 1.2033179 #>  [602,] 0.7922672 0.8267714 0.8461763 #>  [603,] 0.7163697 0.7177605 0.7954127 #>  [604,] 0.7004443 0.7124835 0.7362016 #>  [605,] 2.3637985 2.3725682 2.3813016 #>  [606,] 1.2846110 1.3003040 1.3008366 #>  [607,] 0.6319997 0.6490731 0.6626374 #>  [608,] 0.8110288 0.8129563 0.8137052 #>  [609,] 0.7933109 0.8039663 0.8411431 #>  [610,] 0.6932412 0.6942430 0.7966220 #>  [611,] 1.1784206 1.2611703 1.3135027 #>  [612,] 1.3508067 1.3691983 1.4037931 #>  [613,] 1.1670729 1.2059725 1.2156350 #>  [614,] 0.7546082 0.8155036 0.8366580 #>  [615,] 0.9641346 1.0020187 1.0172594 #>  [616,] 0.8428776 0.8691096 0.9189516 #>  [617,] 0.8191638 0.8235105 0.8531098 #>  [618,] 1.2508195 1.2868380 1.2900066 #>  [619,] 0.8941548 0.8970631 0.9622318 #>  [620,] 0.6861838 0.6880038 0.7369863 #>  [621,] 0.6491785 0.6744807 0.6778130 #>  [622,] 2.1660062 2.1666159 2.2238799 #>  [623,] 0.7735294 0.8257512 0.8660625 #>  [624,] 0.7149491 0.7265415 0.7488115 #>  [625,] 0.6830304 0.7447227 0.7781691 #>  [626,] 0.8566046 0.8684764 0.9387848 #>  [627,] 0.9501030 0.9618330 1.0120385 #>  [628,] 1.3518954 1.3593676 1.3833118 #>  [629,] 0.7780176 0.7974304 0.8071464 #>  [630,] 0.7883282 0.7999763 0.8028825 #>  [631,] 1.1923796 1.2709606 1.2950137 #>  [632,] 2.0065416 2.0316541 2.0885188 #>  [633,] 0.7565907 0.7666074 0.7801990 #>  [634,] 0.5417114 0.5513287 0.5882473 #>  [635,] 1.1260617 1.1313581 1.1452003 #>  [636,] 0.8612136 0.9120400 0.9324132 #>  [637,] 0.6312644 0.6649456 0.6868093 #>  [638,] 2.1599447 2.2251935 2.2296056 #>  [639,] 0.8162021 0.8467816 0.8953851 #>  [640,] 0.6017274 0.6184230 0.6342117 #>  [641,] 0.6923830 0.7015550 0.7212004 #>  [642,] 1.1247831 1.1367889 1.1534264 #>  [643,] 0.6605103 0.6961183 0.7003882 #>  [644,] 0.8927000 0.9046625 0.9117851 #>  [645,] 0.6886293 0.6922509 0.7080962 #>  [646,] 0.7349377 0.8247721 0.9069388 #>  [647,] 0.7047499 0.7719532 0.7721073 #>  [648,] 1.0207513 1.0265664 1.0330468 #>  [649,] 0.7723585 0.7993618 0.8546557 #>  [650,] 0.8892783 0.8974167 0.9046906 #>  [651,] 0.7948121 0.8959002 0.9039296 #>  [652,] 0.5719809 0.5789012 0.6131582 #>  [653,] 0.7293896 0.8151264 0.8259272 #>  [654,] 0.6632625 0.6687215 0.6724273 #>  [655,] 0.5604958 0.5879825 0.6006691 #>  [656,] 0.8852704 0.8906321 0.9288499 #>  [657,] 1.1736763 1.1799911 1.2123901 #>  [658,] 0.8172884 0.8416430 0.8571632 #>  [659,] 0.8631583 0.8641115 0.8750541 #>  [660,] 1.0448479 1.0775402 1.0830474 #>  [661,] 0.8808413 0.9154230 0.9256075 #>  [662,] 0.7516315 0.7579547 0.7733662 #>  [663,] 0.6711536 0.6764767 0.6846895 #>  [664,] 0.7337960 0.7953037 0.7998409 #>  [665,] 0.9196537 1.0030873 1.0487035 #>  [666,] 0.7784092 0.7808530 0.7863661 #>  [667,] 0.5983936 0.6194951 0.6313071 #>  [668,] 0.9341934 1.0104025 1.0265421 #>  [669,] 0.7583704 0.7993793 0.8015217 #>  [670,] 0.6056011 0.6137069 0.6244251 #>  [671,] 0.5776237 0.5916741 0.6084782 #>  [672,] 0.5705945 0.5781882 0.6118101 #>  [673,] 0.4924915 0.5527803 0.5608590 #>  [674,] 0.7663582 0.8549724 0.8747164 #>  [675,] 1.3922297 1.4325791 1.4348737 #>  [676,] 0.7206119 0.7301571 0.7818116 #>  [677,] 1.4340342 1.4524023 1.4783216 #>  [678,] 0.9088303 0.9691437 0.9815295 #>  [679,] 0.8353644 0.8668316 0.8676301 #>  [680,] 1.8019455 1.8434460 1.8574991 #>  [681,] 0.8501898 0.8525942 0.8554963 #>  [682,] 0.7141715 0.7213573 0.7459975 #>  [683,] 0.7611238 0.7952279 0.8081929 #>  [684,] 0.5787697 0.6070293 0.6135651 #>  [685,] 0.5451460 0.5495628 0.5601770 #>  [686,] 0.7313398 0.7347900 0.7560712 #>  [687,] 1.6346782 1.6844278 1.6922557 #>  [688,] 0.5125215 0.5681430 0.6129795 #>  [689,] 0.7814990 0.8066735 0.8232115 #>  [690,] 0.9606103 0.9700046 1.0509937 #>  [691,] 1.0349901 1.0560451 1.0946166 #>  [692,] 0.7616101 0.7627950 0.8079365 #>  [693,] 0.9629358 0.9870404 1.0066603 #>  [694,] 0.7003882 0.7034785 0.7073414 #>  [695,] 0.6508254 0.6515822 0.7177627 #>  [696,] 0.9574811 0.9829421 0.9852836 #>  [697,] 1.3503709 1.3701210 1.4081112 #>  [698,] 0.8011171 0.8066735 0.8292492 #>  [699,] 1.0935935 1.1154435 1.1195758 #>  [700,] 0.8101300 0.8612811 0.8895930 #>  [701,] 0.8572156 0.8620148 0.8777101 #>  [702,] 0.6947483 0.7610121 0.7811635 #>  [703,] 0.5556706 0.5587616 0.5807307 #>  [704,] 1.1187646 1.1569186 1.1598103 #>  [705,] 1.0259321 1.0322042 1.0698224 #>  [706,] 0.6990035 0.7016447 0.7143282 #>  [707,] 0.5604958 0.5990501 0.6096156 #>  [708,] 0.5435387 0.6053571 0.6069387 #>  [709,] 0.5300543 0.5877707 0.6546214 #>  [710,] 0.9510256 0.9536991 0.9589520 #>  [711,] 0.5805057 0.6391414 0.6468376 #>  [712,] 0.8063401 0.8896483 0.9158784 #>  [713,] 0.7453247 0.7628332 0.7685200 #>  [714,] 0.7323617 0.7936819 0.8063745 #>  [715,] 0.4814495 0.4850535 0.5055641 #>  [716,] 0.5750459 0.6877253 0.6990035 #>  [717,] 0.8073717 0.8278491 0.8308071 #>  [718,] 0.6369095 0.6775239 0.6868776 #>  [719,] 0.5843179 0.5856935 0.6040524 #>  [720,] 1.0931621 1.0933541 1.1243613 #>  [721,] 0.8102313 0.8350167 0.8776936 #>  [722,] 0.5114058 0.5283746 0.5325773 #>  [723,] 1.4661718 1.4687174 1.5009725 #>  [724,] 0.7996514 0.8063552 0.8081929 #>  [725,] 0.6619513 0.7059177 0.7386222 #>  [726,] 0.8343096 0.8470893 0.8514594 #>  [727,] 1.2189016 1.2671527 1.2790131 #>  [728,] 0.5384074 0.5516395 0.5635842 #>  [729,] 0.7166441 0.7396014 0.7452667 #>  [730,] 0.7500610 0.7845806 0.8085094 #>  [731,] 0.8020966 0.8061135 0.8063443 #>  [732,] 0.9256075 0.9640000 0.9661644 #>  [733,] 0.8003840 0.8994248 0.9239358 #>  [734,] 0.8494870 0.8587482 0.8942336 #>  [735,] 1.0068446 1.0129398 1.0512224 #>  [736,] 0.8433600 0.8592934 0.9481347 #>  [737,] 0.6645180 0.6677843 0.6822198 #>  [738,] 0.6562005 0.6838056 0.7515804 #>  [739,] 0.6374756 0.6387197 0.6409249 #>  [740,] 0.6078798 0.6135929 0.6315473 #>  [741,] 0.6810967 0.7235381 0.7482682 #>  [742,] 0.5491340 0.5631762 0.6260784 #>  [743,] 0.6328519 0.6458077 0.6922257 #>  [744,] 1.0373434 1.0535254 1.1557079 #>  [745,] 0.7109280 0.7470248 0.7785919 #>  [746,] 0.5470830 0.5555364 0.5738679 #>  [747,] 0.5756972 0.6101008 0.6181269 #>  [748,] 0.5808777 0.5821703 0.5993615 #>  [749,] 0.6382653 0.6444084 0.6576891 #>  [750,] 0.8669378 0.8755417 0.8891678 #>  [751,] 0.5561625 0.5569478 0.5608590 #>  [752,] 0.6657381 0.6724607 0.7122088 #>  [753,] 0.8210494 0.8252478 0.8374024 #>  [754,] 1.0945699 1.1127512 1.1268278 #>  [755,] 0.7631248 0.7715274 0.7862498 #>  [756,] 0.5945959 0.6240525 0.6256511 #>  [757,] 0.8957253 0.9023596 0.9172290 #>  [758,] 0.8690838 0.9381840 0.9483903 #>  [759,] 0.5853759 0.6026737 0.6144531 #>  [760,] 0.6295563 0.6370910 0.6601138 #>  [761,] 0.9196537 0.9383379 0.9555947 #>  [762,] 0.6382815 0.6564024 0.6688923 #>  [763,] 0.8806644 0.8853284 0.9292445 #>  [764,] 1.0755303 1.0776309 1.0893885 #>  [765,] 0.9581439 0.9648048 0.9773952 #>  [766,] 0.6328519 0.6746746 0.6807929 #>  [767,] 0.7328537 0.8034847 0.8184379 #>  [768,] 1.1327384 1.1332715 1.2015272 #>  [769,] 0.6815875 0.7567007 0.8058575 #>  [770,] 0.7821367 0.8496123 0.8984836 #>  [771,] 0.7996219 0.8593633 0.8932595 #>  [772,] 0.6537288 0.6668754 0.6736094 #>  [773,] 1.5134913 1.5188229 1.5996366 #>  [774,] 1.0010149 1.0186883 1.0716642 #>  [775,] 0.9133483 0.9231865 0.9450550 #>  [776,] 0.9881581 1.0458649 1.1422726 #>  [777,] 0.5710429 0.6152471 0.6249479 #>  [778,] 0.8123377 0.8346928 0.8484780 #>  [779,] 0.8472093 0.8497861 0.9229997 #>  [780,] 1.1701098 1.1746560 1.1812943 #>  [781,] 0.6558929 0.6840454 0.7073334 #>  [782,] 0.7192542 0.7219761 0.7673621 #>  [783,] 0.7786382 0.8316269 0.9588433 #>  [784,] 0.5316626 0.5538145 0.5554219 #>  [785,] 1.0384015 1.0401673 1.0432042 #>  [786,] 1.2892581 1.2927517 1.3054158 #>  [787,] 0.5523630 0.6063534 0.6509798 #>  [788,] 0.8166710 0.8329400 0.8350457 #>  [789,] 0.8331379 0.8382334 0.8484955 #>  [790,] 0.7160123 0.7201570 0.7583413 #>  [791,] 0.6631198 0.6634604 0.6722208 #>  [792,] 0.5915019 0.6012166 0.6251502 #>  [793,] 0.5860477 0.6058716 0.6088008 #>  [794,] 0.7000230 0.7147746 0.7665657 #>  [795,] 1.3832163 1.3950483 1.4249641 #>  [796,] 0.5931640 0.6249014 0.6335171 #>  [797,] 0.5174165 0.5443091 0.5491340 #>  [798,] 0.5745537 0.6158897 0.6663438 #>  [799,] 0.7034172 0.7064693 0.7099010 #>  [800,] 0.7986403 0.8297580 0.8312882 #>  [801,] 0.7136104 0.7253950 0.7283088 #>  [802,] 0.4247332 0.4321260 0.5253901 #>  [803,] 0.7213064 0.7222299 0.7415707 #>  [804,] 0.6295563 0.6471335 0.6655649 #>  [805,] 0.7642891 0.7830868 0.8295218 #>  [806,] 0.7515885 0.7793166 0.7848826 #>  [807,] 0.7500610 0.7526629 0.7799839 #>  [808,] 0.8650517 0.9088303 0.9447762 #>  [809,] 0.6528471 0.6837691 0.7209590 #>  [810,] 0.9229229 0.9691510 1.0125884 #>  [811,] 0.5142716 0.5391472 0.5597008 #>  [812,] 0.6189544 0.6276337 0.6444930 #>  [813,] 0.6766873 0.6814544 0.7266292 #>  [814,] 1.7058809 1.7185561 1.7230325 #>  [815,] 0.7412124 0.7496567 0.7713514 #>  [816,] 0.7179173 0.7341872 0.7412263 #>  [817,] 0.7936483 0.8431606 0.8702220 #>  [818,] 0.7701678 0.7880437 0.8299695 #>  [819,] 1.0036481 1.0371452 1.0387606 #>  [820,] 0.9510319 0.9553976 0.9821073 #>  [821,] 1.0053344 1.0597595 1.0722267 #>  [822,] 0.7348666 0.7628332 0.8197851 #>  [823,] 1.0298188 1.0448020 1.0900442 #>  [824,] 0.8611498 0.8724211 0.8856480 #>  [825,] 1.3425537 1.3542724 1.3613959 #>  [826,] 0.7440511 0.7772232 0.7895905 #>  [827,] 1.4979233 1.5794959 1.5887285 #>  [828,] 0.8316269 0.8331379 0.8981312 #>  [829,] 0.6865738 0.6883715 0.6924888 #>  [830,] 0.6390560 0.6755186 0.6938734 #>  [831,] 0.6670718 0.6936771 0.6946900 #>  [832,] 0.8109530 0.8272574 0.8335198 #>  [833,] 0.9527889 1.0772562 1.0864736 #>  [834,] 0.8618399 0.8731911 0.8904628 #>  [835,] 0.5533499 0.6229621 0.6333369 #>  [836,] 0.7137906 0.8154132 0.8341124 #>  [837,] 0.9112262 0.9611666 0.9751354 #>  [838,] 1.0082087 1.0483232 1.0521189 #>  [839,] 1.0979359 1.1060143 1.1239948 #>  [840,] 0.8396328 0.8484362 0.8512581 #>  [841,] 0.7907860 0.8029112 0.8032979 #>  [842,] 0.5993500 0.6022685 0.6037886 #>  [843,] 1.0244006 1.0464880 1.0588701 #>  [844,] 1.0525873 1.0698224 1.2024153 #>  [845,] 0.7151920 0.7217005 0.7255889 #>  [846,] 0.5180385 0.5835606 0.5835952 #>  [847,] 1.6516184 1.6568663 1.6772560 #>  [848,] 0.6766873 0.7138119 0.7165032 #>  [849,] 0.8527198 0.8953757 0.9174714 #>  [850,] 0.6570071 0.6848717 0.7178703 #>  [851,] 0.7049843 0.7167933 0.7391644 #>  [852,] 1.0397549 1.1056665 1.1171579 #>  [853,] 0.8186077 0.8249382 0.8737530 #>  [854,] 0.9661644 0.9708157 0.9918918 #>  [855,] 0.8249382 0.8407771 0.8765734 #>  [856,] 0.5414680 0.6118670 0.6158897 #>  [857,] 0.7694119 0.8035696 0.8305285 #>  [858,] 0.9513341 0.9619637 0.9953575 #>  [859,] 0.6133667 0.6255535 0.6381687 #>  [860,] 0.5088117 0.5449089 0.5485289 #>  [861,] 0.6036876 0.6084782 0.6229621 #>  [862,] 0.5406926 0.5601474 0.6201642 #>  [863,] 1.1352311 1.1892980 1.2099421 #>  [864,] 0.4978011 0.5143641 0.5530109 #>  [865,] 0.9244568 0.9684545 0.9778201 #>  [866,] 1.3132424 1.3605197 1.3820220 #>  [867,] 1.0974526 1.1185972 1.1311582 #>  [868,] 0.8249347 0.8345010 0.8350130 #>  [869,] 1.2219324 1.2353832 1.3290049 #>  [870,] 0.7208088 0.7439207 0.7476198 #>  [871,] 0.9590535 0.9700398 0.9921988 #>  [872,] 0.9544562 0.9713468 1.0072932 #>  [873,] 0.6662300 0.6899175 0.7033754 #>  [874,] 0.7490696 0.7607222 0.7882039 #>  [875,] 0.5747101 0.5884685 0.5911310 #>  [876,] 0.7087777 0.8260998 0.9015571 #>  [877,] 1.0649744 1.1214421 1.1236397 #>  [878,] 0.7366019 0.7562299 0.7590943 #>  [879,] 1.2547605 1.2649705 1.2708331 #>  [880,] 0.7838123 0.7870718 0.8276342 #>  [881,] 0.9618330 1.0129213 1.0300429 #>  [882,] 0.7151920 0.7207007 0.7554218 #>  [883,] 1.0990697 1.1022734 1.1304689 #>  [884,] 0.6203773 0.6248943 0.6465333 #>  [885,] 1.2725945 1.2883425 1.3656732 #>  [886,] 0.8493675 0.8655576 0.8821323 #>  [887,] 0.6943789 0.7160461 0.7331094 #>  [888,] 0.4882100 0.5539711 0.5821148 #>  [889,] 0.6056330 0.6561072 0.7825559 #>  [890,] 1.4199338 1.4241940 1.4547407 #>  [891,] 0.9238633 0.9353015 0.9404478 #>  [892,] 0.6924446 0.7028728 0.7102223 #>  [893,] 0.7447464 0.7576757 0.7584819 #>  [894,] 0.7339568 0.7496154 0.7531449 #>  [895,] 0.6350976 0.6989879 0.7366575 #>  [896,] 0.8696953 0.9085277 0.9594677 #>  [897,] 0.8596525 0.8694769 0.8748985 #>  [898,] 0.9278314 0.9317419 0.9384301 #>  [899,] 0.7071852 0.7292750 0.7404071 #>  [900,] 0.7534718 0.7658643 0.7711365 #>  [901,] 0.5271722 0.5283746 0.5317469 #>  [902,] 0.6111554 0.6134972 0.6177445 #>  [903,] 0.8820723 0.9034657 0.9397365 #>  [904,] 0.8527198 0.8788625 0.9436782 #>  [905,] 0.8031381 0.8320879 0.8340312 #>  [906,] 0.8285624 0.8754180 0.8782623 #>  [907,] 1.2126222 1.2207920 1.2309438 #>  [908,] 1.6159234 1.6290432 1.6548259 #>  [909,] 0.9667840 0.9814406 0.9883945 #>  [910,] 0.5702715 0.5843179 0.5916185 #>  [911,] 0.8202502 0.8936501 0.9057041 #>  [912,] 0.8459387 0.8559110 0.8620883 #>  [913,] 0.5745537 0.5881837 0.5882276 #>  [914,] 1.2878182 1.3375708 1.3624879 #>  [915,] 0.6148856 0.6187802 0.6319997 #>  [916,] 0.6503558 0.6516422 0.6560464 #>  [917,] 0.9734637 0.9920065 1.0084083 #>  [918,] 0.5496486 0.5728238 0.5879520 #>  [919,] 0.5223936 0.5314768 0.5415625 #>  [920,] 0.5512808 0.5785498 0.5852391 #>  [921,] 0.4966989 0.4984727 0.5031218 #>  [922,] 1.1616560 1.1707129 1.1776101 #>  [923,] 0.8489631 0.8810675 0.9008347 #>  [924,] 0.5970195 0.6051639 0.6142571 #>  [925,] 0.6253353 0.6408894 0.6505558 #>  [926,] 1.4327559 1.4327613 1.5142418 #>  [927,] 0.8026273 0.8147048 0.8296600 #>  [928,] 0.8327641 0.8525972 0.8611336 #>  [929,] 2.0367243 2.0631296 2.0818376 #>  [930,] 0.7298871 0.7391566 0.7455516 #>  [931,] 0.6350976 0.6589851 0.6769276 #>  [932,] 0.7336208 0.7646688 0.7732601 #>  [933,] 1.1695513 1.2182333 1.2296092 #>  [934,] 1.2644955 1.3623347 1.3842533 #>  [935,] 1.2435034 1.2480361 1.3015392 #>  [936,] 0.8917036 0.8980201 0.9107715 #>  [937,] 1.0270049 1.0411160 1.1022371 #>  [938,] 0.6782863 0.6844300 0.6943789 #>  [939,] 0.6206311 0.6947384 0.7225086 #>  [940,] 0.6769921 0.6897185 0.6925655 #>  [941,] 0.4924915 0.4974182 0.5061460 #>  [942,] 0.7194439 0.7746491 0.7759489 #>  [943,] 0.6529562 0.6678021 0.7024716 #>  [944,] 0.6899175 0.7023494 0.7386222 #>  [945,] 0.5063648 0.5472576 0.5561324 #>  [946,] 0.6527600 0.6586057 0.6634642 #>  [947,] 0.6710937 0.6866165 0.6973681 #>  [948,] 0.6642547 0.7487061 0.7777109 #>  [949,] 0.6244251 0.6593113 0.6593736 #>  [950,] 0.6395439 0.6415510 0.6416903 #>  [951,] 0.6638127 0.6880372 0.7165293 #>  [952,] 0.9024835 0.9390168 0.9455581 #>  [953,] 0.7547695 0.7594047 0.7746190 #>  [954,] 0.6604545 0.6938530 0.6975320 #>  [955,] 0.8232115 0.8452262 0.8647512 #>  [956,] 0.9013314 0.9233381 0.9272695 #>  [957,] 0.7255889 0.7362077 0.8033060 #>  [958,] 0.6366043 0.6367345 0.6391414 #>  [959,] 0.6261326 0.6308881 0.6357443 #>  [960,] 0.5271446 0.5467507 0.5581213 #>  [961,] 1.1630947 1.1982346 1.2074006 #>  [962,] 1.2422915 1.2484606 1.2569656 #>  [963,] 0.9508658 1.0051795 1.0336823 #>  [964,] 0.9087962 0.9102554 0.9388440 #>  [965,] 0.8488493 0.8509820 0.8567891 #>  [966,] 0.6576738 0.7579143 0.7746491 #>  [967,] 0.6702996 0.6788460 0.6974060 #>  [968,] 0.9565140 1.0104025 1.0106984 #>  [969,] 0.8820955 0.9186972 0.9399036 #>  [970,] 0.7387415 0.7491982 0.7550994 #>  [971,] 0.8139841 0.8358980 0.8774304 #>  [972,] 0.5352854 0.5472576 0.5921908 #>  [973,] 1.1365948 1.1548852 1.1619529 #>  [974,] 0.7734766 0.8005760 0.8409471 #>  [975,] 0.8780831 0.9050770 0.9208893 #>  [976,] 0.6393825 0.6475988 0.6728538 #>  [977,] 0.7954644 0.8101178 0.8315619 #>  [978,] 0.7317993 0.7397380 0.7820642 #>  [979,] 0.7863991 0.7997841 0.8022676 #>  [980,] 0.6781587 0.7063232 0.7118560 #>  [981,] 1.2929651 1.3233936 1.3465181 #>  [982,] 0.9343982 0.9655722 0.9664793 #>  [983,] 0.6282674 0.6488636 0.6562257 #>  [984,] 0.9430679 0.9436782 0.9891784 #>  [985,] 0.8994248 0.9354583 0.9498725 #>  [986,] 1.1181000 1.1206881 1.1273720 #>  [987,] 0.8142263 0.8284951 0.9339856 #>  [988,] 1.0899525 1.1230242 1.1448597 #>  [989,] 0.6367130 0.6383231 0.6525286 #>  [990,] 0.9549862 0.9868368 1.0048851 #>  [991,] 0.6568597 0.6578186 0.6630150 #>  [992,] 0.4933858 0.5464351 0.6203773 #>  [993,] 1.3040945 1.3625624 1.3819952 #>  [994,] 0.5701476 0.5736721 0.5738386 #>  [995,] 0.5742560 0.6335171 0.6804042 #>  [996,] 0.8411731 0.8475781 0.8775146 #>  [997,] 0.5754244 0.5850533 0.5925700 #>  [998,] 0.5986106 0.6144590 0.6226353 #>  [999,] 1.9403853 1.9689305 2.0285157 #> [1000,] 0.7705618 0.7827635 0.8126929 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  592  383  479  543  221   93  874   32  452   807 #>    [2,]  947  101   26  686  389  835  522  156  607   790 #>    [3,]  661  118  616  872  217  252  700  961  528   219 #>    [4,]   15  457   12  170  784  137  541  292  831   380 #>    [5,]  702  354  108  566  893  692   34  626  769   181 #>    [6,]  807  268  708  458  112  730  337   20  713   129 #>    [7,]  324  672   94  746  332  846  586  343  462   513 #>    [8,]  395   70  112  422  408  681  659  207  355   936 #>    [9,]  256  430  486  952  793  464  991  530  448   782 #>   [10,]  134  597  303  376  678   77  808  668  199   877 #>   [11,]  381  707  233  595  244  459  663  153  655   747 #>   [12,]   15  457  137    4  292  215  492  485  670    71 #>   [13,]  896  511  293  510  893  791  769  702  326   806 #>   [14,]  306  414  251  752  568  717  932  119  397   270 #>   [15,]   12    4  457  137  292  215  492  784  541   170 #>   [16,]  627  335  656   87  881  416  425  386  989   898 #>   [17,]  406  490  506  970  229  639  813  308  620   314 #>   [18,]  925  616  226  756  277   50  121  762  321   694 #>   [19,]  274  923  252  217   51  218  720  610  869   377 #>   [20,]  268  443  708  856  231  337  408  140  483    65 #>   [21,]  860  180  811  748  531  372  920  997  371   559 #>   [22,]  255  213  103  717  358  309  251  306   14   710 #>   [23,]  879  110  696  452  468  973  227  479  185   786 #>   [24,]  319  945  943  206  382  423  688  179  145   918 #>   [25,]  698  900  646   79  122  113  320  734  364   544 #>   [26,]  389  101    2  947  156  686   60  964  694   643 #>   [27,]  396  125  192  516  548   95  402  747  673   910 #>   [28,]  348   74  985  157  713  778   53  424  591   779 #>   [29,]  515  164    8  395   70  681  444  207  322   355 #>   [30,]  403  120  629  301  750  819  311  582  411   276 #>   [31,]  833  533  658  450  115  208   85  599  774   809 #>   [32,]  263  221  543  479  191  874  781  970  468     1 #>   [33,]  280  968  278  884  654  761  892   96  259   258 #>   [34,]  692  867  566  498  905  897  108   73    5   541 #>   [35,]  972  802  784  921  211  945  695  179  537   206 #>   [36,]  177  799  485   64  206  924  319  804  688   470 #>   [37,]  365  580  557  400  494   63  990  891  868   351 #>   [38,]  924  369  212  391  432  943  728  170  541   740 #>   [39,]   62  440  229  298  130  490  620  506  333   587 #>   [40,]  868  265  739  578  570  979  817   59  500   662 #>   [41,]  818  504  556  155  502  579  523  417  916   491 #>   [42,]  549  944  588  994  596  150  976  433  144   384 #>   [43,]  496  250  633  781  774  664  841  263  683   757 #>   [44,]  135  222  590  385  841  928  664  209  221   970 #>   [45,]  535  885    3  118   97  109  252  872  249   628 #>   [46,]  114  599  397  633  617  745  461  214  190   710 #>   [47,]   81  398  427  836  236  659  547  621  207   878 #>   [48,]  939  299   98  794  111  805  755  623  338   421 #>   [49,]  822  733  730  139  660  936  816  713  424   112 #>   [50,]  558  226  121  925  694  762  829  616   18    60 #>   [51,]  156  726  923  447   19  442  281  610  709   725 #>   [52,]  826  649  510  497  293  524  146  972  304   791 #>   [53,]  939  779  161  550  602  755  828  348  805   394 #>   [54,]  223  328  780  474  429  643  506  333  209   584 #>   [55,]  136  782  641  457  141  840  667  950  137   991 #>   [56,]   85  658  651  608  568  624  833  362  932   766 #>   [57,]  771  480  555  350  423  266  930  636  724   758 #>   [58,]  538  585  917  322  783  690  288  331  785   240 #>   [59,]  637  751   76   98  979   40  709  607  281   327 #>   [60,]  829  558  101  521   26  321  694   50  128   947 #>   [61,]  264  241  994  305  561  583  972  974  549   596 #>   [62,]  440   39  229  333  130  490  536  864  314   197 #>   [63,]  400  216  155  891    9  351   55  782  641   530 #>   [64,]  177  796  812   36  470  294  419  688  980   407 #>   [65,]  248  465  125  443  960  475  296  402   20   231 #>   [66,]  619  660  592  310    1  383  250  730  139   841 #>   [67,]  167  171  824  338  552  142  623  421  761   982 #>   [68,]  964  493  389   26  253  130  409    2  156   788 #>   [69,]  690   78  204  283  503  187   86  963  817   794 #>   [70,]    8  936  395  908  422  112   29  659  733   207 #>   [71,]  404  722  492  215  144  950  235  524  598   431 #>   [72,]  141  136  627  472   55  891  168  990  957    75 #>   [73,]  541  100  581  867  905  417   34  359  146   380 #>   [74,]   28  985  348  444  713  157  907  395  779   164 #>   [75,]  152  472  843  352  141  614  834  136   72   453 #>   [76,]  607  835  637  709  522  374   59  384  291   915 #>   [77,]  877  935  376  914   10  678  303  668  597   481 #>   [78,]  503  979   69  963  283   86  880  603  187   653 #>   [79,]  323  646  565  734  330   25  698  995  900   364 #>   [80,]  347  313  353  553  563  693  123  426  859   855 #>   [81,]   47  829  249  621  603  558  118  953  121   880 #>   [82,]  148  959  958  703  842   38  359  131  859   629 #>   [83,]  302  183  304  699  497   52  843  202  649   152 #>   [84,]  246  661  659  746  422  765  756  129  334   559 #>   [85,]   56  658  651  568  932  397  624  608  766   833 #>   [86,]   97  880   78  628  187  603  249   69  118   207 #>   [87,]  650  980  729  851   64   16    4  419  453   141 #>   [88,]   56  132  290  833  651   85   31  658  196   999 #>   [89,]  441  367  308  895  126  507  488  772  273   830 #>   [90,]  732  975  965  854  176  344  312  334  628   765 #>   [91,]  420  134  376  514  877  128  287  726  519   594 #>   [92,]   95  685  887  759  299  793  396  460  938    27 #>   [93,]  874  525  244  543  166  663  912  383    1   807 #>   [94,]  332    7  343  262  672  324  846  756  586   746 #>   [95,]   92  759  299   27  516  460  396  125  378   192 #>   [96,]  884  228  138  259  539  992  194  654  178   356 #>   [97,]  118  249   86  661  880  885   81  872  207   603 #>   [98,]   48   59  338  508  548  283  111  402  396   637 #>   [99,]  954  205  791  235  902  806  144  967  524   950 #>  [100,]  417   73  803  359  491  520  546  123  148   959 #>  [101,]   26    2   60  389  947  150  861  156  321   521 #>  [102,]  117  601  187   69  164  805  444  602  690   481 #>  [103,]  358   22  225  255  534  182  234  213  415   717 #>  [104,] 1000  143  911  626  537  264  940  695   35   382 #>  [105,]  362  312   56  435  437  975   85  833  269   331 #>  [106,]  170  959  484  719  670  391  729  491  916   477 #>  [107,]  832  536  333  314  540  277  229  506   62   762 #>  [108,]  566    5  702  893  354   34  769  692  927   626 #>  [109,]  687   19  377  274  720  252  535  174  217    45 #>  [110,]  696  883  786  912  166  227  631  383  479   452 #>  [111,]  465  402  418  204  860  299  547  960  748   476 #>  [112,]  713  733  730    6  424    8  395  936  822    47 #>  [113,]  646   25  993  122  698  900   79  323  320   195 #>  [114,]  633   46  589  745  329  397  115  781  214   267 #>  [115,]  589  114  363  450  809  774   31  955  329   633 #>  [116,]  285  570  476  500  960  180  685  349  949   530 #>  [117,]  102   69  187  805  283  601  935  794  508   503 #>  [118,]   97  249  661  872   81    3  953  880  252   659 #>  [119,]  251  630  938  851  414   14  477  106  804   484 #>  [120,]  819  615  736  311  213  309   30  182  411    22 #>  [121,]  925  226  756   50  398  558  129   18  246    81 #>  [122,]  320  900  646  224  195  698  704   25  679   942 #>  [123,]  347  498  958   80  100  867   82  606  553   487 #>  [124,]  988  955  757  984  345  350  534  329  771   683 #>  [125,]   27  396  516   65   95  402  296  192  460   747 #>  [126,]  308   89  209  203  441  848  367  186  199   507 #>  [127,]  722  919  215  492  428  994  588  499  404    71 #>  [128,]  514  726  607  829   60  947  522   76  156   709 #>  [129,]  246  398  343  731  483  436  121  236  268   231 #>  [130,]   62  298   39  788  440  815  964  333  389   229 #>  [131,]  184  958  173  373  577  792  703  336  604   842 #>  [132,]  290  386  495  335  568  306  416  196  651   937 #>  [133,]  865  107  928  434  250  841  832  135  540   536 #>  [134,]   10  597  376  514   91  678  420  668  429   877 #>  [135,]   44  928  590  385  222  841  970  209  664   536 #>  [136,]  472   55  141  667  152  453  292  990  137   318 #>  [137,]  292   12   15  457  950  485   71  598  492   215 #>  [138,]  438  194   96  992  356  889  539  884  178   341 #>  [139,]  310  619   49  660  489   44  705  135  822   730 #>  [140,]  443  408  856  708  798   20  681  390  475   268 #>  [141,]  136  627   72  453  472   55  957   87  650   152 #>  [142,]  808  665  471  776  303   67  824  507  761   282 #>  [143,]  911  561  181  264   61  815 1000  626  994   871 #>  [144,]  549  404   71  598  235  997  994  431  318    99 #>  [145,]  688  787  206  652  319  921  796  382  177   899 #>  [146,]  784  695  701  260  972  497    4   35  876   541 #>  [147,]  451  639  838  644  714  273  529   17  210   620 #>  [148,]   82  959  359  520  170  803  983  432   38   676 #>  [149,]  842  792  703  567  373  875  958  910  772   760 #>  [150,]  861  384  725  610  976  101  709  588  545   944 #>  [151,]  529  554  780  266  758  569  130  223  933   243 #>  [152,]  472   75  614  352  136  843  497  453  834   304 #>  [153,]  262  707  545  459  595  291   94  777  381   332 #>  [154,]  413  198  611  425  971  699  721  453  881   335 #>  [155,]  641  417  216  491   41   63  579  782  426   818 #>  [156,]   26  101   51  947    2  389  610   60  725   709 #>  [157,]  778  471  424   28  348  985  863  713  807   439 #>  [158,]  458  779  956  360  390  208  789  550  617   907 #>  [159,]  307  850  760  857  191  392  401  842  582   149 #>  [160,]  837  712  904  399  576  537  701  695  831   380 #>  [161,]  473  755  828   53  550  759  394   95  337   360 #>  [162,]  449  593  918  888  589  634  363  532  966   329 #>  [163,]  862  811  920  372  475  998  230  418   21   798 #>  [164,]  395  602  444  805  681    8  794   29   53   355 #>  [165,]  987  202  723  574  906  806  720  205  511   442 #>  [166,]   93  912  778  696  874  439  525  473  543   471 #>  [167,]   67  635  171  982  552  351  824  338  512   810 #>  [168,]  627   72  898  141   16  881  572  505  957   425 #>  [169,]  853  504  982  735  563  767  579  351  818   916 #>  [170,]  359  106  959    4  541   38  148  391   15    12 #>  [171,]  552   67  810  338  486  623  508  887  394   512 #>  [172,]  971  682  980  689  645  576  721  650  812   495 #>  [173,]  361  184  577  370  131  258  892  792  703   958 #>  [174,]  377  614  549  352  948  741  241   42  596   574 #>  [175,]  845  977  882  998  995  407  920  470  946   894 #>  [176,]  765  533  542  344  731  975   84  330  437   246 #>  [177,]   36   64  688  206  921  796  319  812  470   799 #>  [178,]  764  691  259  138   96  820  289  889  438   539 #>  [179,]  211  802  945  206  215  492  319  921  127   972 #>  [180,]  476  960   21  465  402  500  811  116  860   531 #>  [181,]  499  815  728  260  740  212  143  640  127   976 #>  [182,]  411  615  358  631  103  120  710  819   22   534 #>  [183,]  699  302  581  304   83  453  497  701  339   154 #>  [184,]  577  131  792  173  258  703  361  842  370   958 #>  [185,]  452  203  157  863  696  660  592    1  166   479 #>  [186,]  655  222  291  562  282  951  488  427  813   830 #>  [187,]  601  503  283   86   78   69  603  117  102   880 #>  [188,]  237  886  821  573  350  852  636  345  669   336 #>  [189,]  317  693  313  228  353  340  858  612   80   806 #>  [190,]  599   46  208  774  114  786  956  461  883   397 #>  [191,]  745  663  781  329  449  749  159  307  543    32 #>  [192,]  548  673   27  396  327  797  402  684  910   374 #>  [193,]  364  843  544  734   79   75  286  497  876   152 #>  [194,]  992  356  138  539  671  715  915  438  564   684 #>  [195,]  646  122  900  565  942  330  974   79  528   323 #>  [196,]  937  306  717  255  132   14  789  568   22   397 #>  [197,]  737  375  864  314  440  490  738  459  201   406 #>  [198,]  413  721  154  962  546  971  380  425  576   611 #>  [199,]  808  776  507  665  863  126  439  471   10   303 #>  [200,]  914  935  877   77  376  668  605  776   10   678 #>  [201,]  738  930  314  375  532  197  771  536  737   406 #>  [202,]  987  165  574  906  293  649  511  990  304   791 #>  [203,]  452  126  479  874  439  600    1  199  367   469 #>  [204,]  418  794  111  283  939   69  805  748   48   355 #>  [205,]  954   99  806  511  235  902  326  791  987   967 #>  [206,]  319  688  211  921  179  945  145  802  787   177 #>  [207,]  659  355  422   47  621    8  395  794  408   603 #>  [208,]  956  599  437  833  158   31  362   46   85   390 #>  [209,]  813  643  790  328  474  229  506  308  126   222 #>  [210,]  577  697  361  527  403  892  451  173  934   838 #>  [211,]  802  179  945  206  921  215  492   35  972   319 #>  [212,]  740  728  369   38  753  341  181  260  499   564 #>  [213,]   22  309  255  311  120  477  251  615  119   630 #>  [214,]  267  801  296  752  749  663  397  888  294   114 #>  [215,]  492  802  127  722  211  179   71  972  994    15 #>  [216,]  855  426  641  949  853  563  155   55   63   967 #>  [217,]  274  252  218  463  944   19  647  609    3   610 #>  [218,]  217  274  252  463   19  609  944  872  287   156 #>  [219,]  433  700  596  944  462  873  528  588  647   756 #>  [220,]  394  828  922  161  309  473  625  736  810   613 #>  [221,]  263   32  479  543    1  928  468  841  592   664 #>  [222,]  590   44  385  186  135  655  813  427  209   707 #>  [223,]   54  780  506  584  328  474  333  643  429   209 #>  [224,]  450  679  320  942  122  966  363  809  652   900 #>  [225,]  676  358  393  983  666  357  346  560  103   392 #>  [226,]   50  925  121  762  558  756   18  321  694   385 #>  [227,]  879   32  468  969  696  479  263  411  221   110 #>  [228,]   96  884  539  289  259  992  138  353  693   356 #>  [229,]  506  333  813   62  490   39  536  643  440   314 #>  [230,]  538  418  163  854  743  798  862  811  355   475 #>  [231,]  483   20  547  443  856  268  708  343  236   248 #>  [232,]  342  913  476  957  418  811  743  180  505   960 #>  [233,]  747  707  655   11  441  910  307  149  595   516 #>  [234,]  103  866   22  255  132  358  482  495  225   386 #>  [235,]  902  431   71  715   99  524  499  144  404   941 #>  [236,]  398  427  846  547  343  231  562  595  951   129 #>  [237,]  821  753  669  456  188  498  943  373  466   636 #>  [238,]   75  575  977  445  882  965  175  675  845   193 #>  [239,]  459  777  864  919  728  740  924  319  401   369 #>  [240,]  271  898  505  538  585  608  785  743  890   230 #>  [241,]  583   61  596  873  305  948  264  174  974   561 #>  [242,]  742  767  949  719  563  578  797  670  859   327 #>  [243,]  714  554  870  298  644  297  456  820  587   620 #>  [244,]  525  663   93  337  543  874   11  562  951   807 #>  [245,]  540  844  571  107  832  961  865  909  133   814 #>  [246,]  129  731  398   84  483  436  343  121  765   756 #>  [247,]  366  557  365  657  447  580  868   37  635   351 #>  [248,]  475   65  862  798  766  465  372  811  231   913 #>  [249,]  118   97  880   81  953  872  252  603   86   661 #>  [250,]  841   43  928  496  664  263  221  619  133   865 #>  [251,]  119  630   14  414  851  306  938  568  309   752 #>  [252,]  217  274  218   19  249  118  872  944  610     3 #>  [253,]   68  493  964  409  389  340  933   26  156   554 #>  [254,]  823  463  218  609  368  571  647  274  217   674 #>  [255,]   22  717  213  103  306  937  309   14  196   358 #>  [256,]    9  430  464  952  793  486  551  991  526   685 #>  [257,]  620  587  569  604  737  724  639  373  406   480 #>  [258,]  361  278  370  892  792  875  184  173  577   703 #>  [259,]  478   96  968  178  228  884  678   33  138   289 #>  [260,]  524  802  215  541  940  972  492  179  181   692 #>  [261,]  612  272  764  691  820  968  178  478  147   259 #>  [262,]  153  545   94  332  595  521  672  291  586     7 #>  [263,]  221   32  468  479  781  664  683  543  970   841 #>  [264,]  974   61  305  899   35  382  241  143  561   972 #>  [265,]  662   40  751  868  578  967  570  739  742   949 #>  [266,]  480  517  569  758   57  771  529  930  639   257 #>  [267,]  214  801  296  752  663  443  397  114  436   617 #>  [268,]  708   20  483  231    6  443  337  408  856   436 #>  [269,]  390  932  783  789  550  140  331  798  585   538 #>  [270,]  551  989  526  414  624  743  938  685  851    14 #>  [271,]  608  743  624  505  898  989  240  913  585   270 #>  [272,]  612  261  820  297  764  691  933  178  554   714 #>  [273,]  367  441  527   89  772  770  469  308  895   792 #>  [274,]  217  252  218   19  463  944  647  609  674   610 #>  [275,]  104  626  893  911  108  871  769  143  509   405 #>  [276,]  850  792  184  307  582  706  577  258  978   403 #>  [277,]  385   18  762  775  226  532  925  332  536   756 #>  [278,]  258  875  361  892  711  370  553   33  884   654 #>  [279,]  727  993  833   31  533  113  450  176  999   224 #>  [280,]   33  761  278  968  735  884  501  892  839   824 #>  [281,]  709  662  725  726  384  751  610  442   59   607 #>  [282,]  830  488  655  507  562  186  951  747  516    89 #>  [283,]  204  508   98  794   69  817  111  503   78   979 #>  [284,]  849  689  682  904  984  399  573  446  712   718 #>  [285,]  116  949  570  500  530  673  578  476  349   242 #>  [286,]  405  509  986  974  264  305  241  843  996    61 #>  [287,]   60  558  156   26  218   91  429   50  128   872 #>  [288,]  917  785  256  464  810    9   58  430  486   394 #>  [289,]  228  539  662   96  726  178  281  259  835   138 #>  [290,]  132  335  416  651   16   56  568  495  881   386 #>  [291,]  595  915  545  153  707  655  262  521  186   374 #>  [292,]  137   15   12  485  371  667  457  492  598   531 #>  [293,]  510  791  511   13  649  826  769   52  524    99 #>  [294,]  415  812  357  560  888  593  804  446  749    64 #>  [295,]  961  489    3  705  844  616  661  872  422   936 #>  [296,]  325  460  214  752  267  125   65  759  804   799 #>  [297,]  820  870  243  644  714  554  648    5  566   612 #>  [298,]  714   39  130  889  438   62  440  686  243   931 #>  [299,]   95   48  465  939  111   92  685  526  402   960 #>  [300,]  908  733   49  936   70  822  730  139  660   713 #>  [301,]  803  629  556  750  520  523  148  706   30   666 #>  [302,]  304  183   83  699  152  497   75  453  472   843 #>  [303,]  816  591   10  878  142  863  199  424  985    77 #>  [304,]  302  649   52  497  840  826  152  990  202   472 #>  [305,]  974  264  241  583   61  596  873  561  433   899 #>  [306,]   14  568  251  717  397  651  937  414  386   196 #>  [307,]  850  159  760  325  233  276  663  191  392   842 #>  [308,]  126  848   89  895  488  441  813  772  790   209 #>  [309,]  414  213  938  119  251   14  717  736  311   613 #>  [310,]  139  619  489  705   66  865  660   49  841   928 #>  [311,]  613  120  213  736  800  309  477  523  706   819 #>  [312,]  975  538  362  435  437  230  681  105  854   269 #>  [313,]  693   80  735  579  347  353  169  853  858   563 #>  [314,]  490  406  536  197  201  970  375  229  737   440 #>  [315,]  665  316  776  808  142  761  825  668  199   507 #>  [316,]  665  808  776  315  668  478  199  968   10   507 #>  [317,]  723  189  693  313  806  353  855  426  897   366 #>  [318,]  667  349  598  653  531  371  997  137  144   485 #>  [319,]  206  688   24  179  145  787  945  211  177   652 #>  [320,]  122  900  224  363  955  698  679   25  450   704 #>  [321,]  762  694  521  545  226  101  262   60  925   756 #>  [322,]  854  538  690  515  230   58  312  681  890    69 #>  [323,]   79  330  565  995  946  882  734  646  977   698 #>  [324,]    7  672  462   94  428  586  588  559  746   332 #>  [325,]  760  296  460  910  392  804  307  759  850   378 #>  [326,]  806  205   99   13  235  954  902  511  431   791 #>  [327,]  673  578  548  192  751  941  742  500  797   374 #>  [328,]  643  209  429  790   54  694  813  506  762   333 #>  [329,]  745  449  781  888  633  749  589  162  191   634 #>  [330,]  323  995  565  946   79  334  344  977  882   195 #>  [331,]  783  585  269  789  390  677  932  538  937   271 #>  [332,]   94  343    7  262  586  513  462  746  381   672 #>  [333,]  506  229  832   62  643  536  107   39  130   694 #>  [334,]  894  559  732  445  995  175  330  998   84   344 #>  [335,]  416  495  971   16  881  290  413  656  386   425 #>  [336,]  582  750  131  629  969  184  857  886  373   604 #>  [337,]   20  244  268  525  807  443  708  856  125   161 #>  [338,]  824  552  171   98  508   67   48   95  767   299 #>  [339,]  426  304  840  990  216  183  155  987   63    37 #>  [340,]  896  326  493  289  189  869  178   13  409    51 #>  [341,]  356  438  992  889  711  931  194  539  212   567 #>  [342,]  232  957  920  811  845  163  505  963  575   913 #>  [343,]   94  332  846  381  398  236    7  746  483   231 #>  [344,]  965  946  998  995  175  975  330  977  334   176 #>  [345,]  886  634  718  350  449  918  573  357  346   329 #>  [346,]  357  446  718  393  918  634  415  812  225   849 #>  [347,]   80  553  123  711  487  958  859  278  567   875 #>  [348,]   28  591  985  424  713  157  755   53   74   778 #>  [349,]  739  570  318  500  997  653  116  967  667   180 #>  [350,]  636  423  573  345  718  188   57  771  555   886 #>  [351,]  512  853   40  552  868  817  949  982  169   167 #>  [352,]  614  834  174  948  152  472  241   61  549    75 #>  [353,]  855  693  742   80  228  662  954  265  902   205 #>  [354,]    5  626  702  108  566  692  893  181   34   871 #>  [355,]  408  856  207  418  681  372  862  230  794   140 #>  [356,]  992  341  194  438  539  138  711  889  884   567 #>  [357,]  346  634  393  918  888  593  749  446  718   294 #>  [358,]  103  225  182   22  534  213  255  750  392   749 #>  [359,]  170  148  520  380  959  541  803  432   38    82 #>  [360,]  550  617  789  828  754  161  752  932  390   717 #>  [361,]  892  370  258  173  278  577  184  792  875   553 #>  [362,]  437  435  312  105  833  975  269  956  390    56 #>  [363,]  966  589  955  809  162  918  450  224  320   115 #>  [364,]  544  193  734   79   25  698  646  323  843   900 #>  [365,]  580   37  557  494  868  400  891  963  990    63 #>  [366,]  247  317  657  189  693  858  723  635  313   735 #>  [367,]  273  469  527  600   89  441  308  772  126   507 #>  [368,]  609  647  674  463  823  788  561  433  583   996 #>  [369,]  924  901  728  564  740  212   38  919  797   567 #>  [370,]  361  258  892  173  278  553  467  703  875   763 #>  [371,]  531  485  598  470  667  292  318   21  137   404 #>  [372,]  862  811  163  418  860   21  621  748  475   920 #>  [373,]  604  456  131  587  958  149  669  620  257   184 #>  [374,]  941  715  684  327  797  901  722  404  564   595 #>  [375,]  197  737  738  930  201  314  864  440  480   423 #>  [376,]  877  134   77   10  668  420  678  597   91   514 #>  [377,]  174  741  953  906  880  549  610  948   42   923 #>  [378,]  516  716  747  910  978  460  759  625   95    27 #>  [379,]  934  600  527  367  210  469  273  147  203   838 #>  [380,]  359  831  721    4  576  170  520  784  980   695 #>  [381,]   11  343  595  707  332  153   94  262  436   846 #>  [382,]  787  945  145   24  206   35  264  211 1000   921 #>  [383,]    1  592  543   93  479  807  221  912  874   786 #>  [384,]  725  709  861  150  610  281   76  607  835    42 #>  [385,]   44  222  135  277  590  226  762  536  925   321 #>  [386,]  482  495  568  306  132  656  937  251   16   335 #>  [387,]  952  744  464  430  256  613  448    9  412   656 #>  [388,]  622  124   57  988  555  517  771  266  680   350 #>  [389,]   26  964  101    2   68  156  493  686  788   947 #>  [390,]  269  932  789  783  550  140  956  779  360   798 #>  [391,]  859  719  670  901   38  797  959  170  567   106 #>  [392,]  760  804  749  325  983  850  159  477  393   307 #>  [393,]  983  676  432  357  560  718  346  225  804   812 #>  [394,]  299  828  161  939  755  171  220  793  623   526 #>  [395,]    8  164  112  444  602  713  408  207  681   355 #>  [396,]   27  548  402  192  125  673  465   95   92   516 #>  [397,]  415  651  214  114  267   46  306  801  568   294 #>  [398,]  236  129  343  427  846  121  246  231  756   547 #>  [399,]  904  712  160  284  837  573  682  849  576   984 #>  [400,]   63  580  351   37  557  365  512  216  982   853 #>  [401,]  634  943  593  449  669  239  918  432  162   888 #>  [402,]  465  396  548  111  960  860  500  673  180   476 #>  [403,]  892  577  527  276  361  173  184  370  258   792 #>  [404,]   71  722  598  144  941  127  492  374  997   485 #>  [405,]  509  286  305  241  974  264  583  996   61   986 #>  [406,]  490  314  970  536   17  229  197  257  569   620 #>  [407,]  470  845  175  419  920  531  957  667  371   998 #>  [408,]  856  708  355  140   20  231  268  681  443   547 #>  [409,]  493  871  893   13  702  896   68  626  964   674 #>  [410,]  513  998  746  796  946  652  995  542  565   470 #>  [411,]  182  615  582  969  819  227  750  276  120   850 #>  [412,]  546  656  482  425  413  491  729  556  803   484 #>  [413,]  198  154  425  546  721  656  971  412  335   729 #>  [414,]   14  752  938  309  251  119  270  717  759   460 #>  [415,]  294  397  357  560  446  346  749  812  888   651 #>  [416,]  335   16  290  881  495  656  132  386  971   611 #>  [417,]  491  641  100  155   73  916  546  563  803   818 #>  [418,]  204  811  111  372  862  475  465  355  913   230 #>  [419,]  851  799  407  989  470  960   64  913   36   485 #>  [420,]   91  376  877  519  134  447  726  514  128    77 #>  [421,]  623  755  591  805   48  922  939  171  348   338 #>  [422,]  659  207   84  661    8   47  246  936  408   355 #>  [423,]  350  636  738   24  771  375  943  555  201   918 #>  [424,]  816  713  951  878  427  807  562  112  822   348 #>  [425,]  656  413  154  412  611   16  546  729  335   198 #>  [426,]  216  855  579   80  840  905  641  155  417   563 #>  [427,]  951  236  562  398  424  836  547  186  878    47 #>  [428,]  586  462  588  127  994  324  640  492  802   211 #>  [429,]  328  790  643  209   54  474  686  584  947     2 #>  [430,]  256    9  952  464  551  991  782  448  793   486 #>  [431,]  235  902  499  715  976  671   71  404  722   127 #>  [432,]  983  393  718  943   38  676  401  148  359   804 #>  [433,]  219  596  700  944  462  873  588   42  561   583 #>  [434,]  928  973  135  133   17  474  841  221  250   970 #>  [435,]  437  362  312  681  975  956  390  269  140   208 #>  [436,]  483  731  343  381  542  268  129  246  801   231 #>  [437,]  435  362  956  975  312  140  208  681  390   269 #>  [438,]  889  138  356  992  341  194  931  539  298   714 #>  [439,]  469  471  600  778  166  874  507  367   89   203 #>  [440,]   62   39  864  197  737  490  229  375  314   130 #>  [441,]   89  233  273  772  895  308  367  970  307   655 #>  [442,]  923  720  281  906  326   51  662   99  726   574 #>  [443,]   20  140  231  483  798  708  856  475  268   766 #>  [444,]  164  395  602  591  348  985   74  713    8    28 #>  [445,]  575  334  834  948  732  894  175  965  675   977 #>  [446,]  812  346  357  689  918  294  849  415  718   593 #>  [447,]   51  726  442  420  923  281  289  720  519   156 #>  [448,]  991  782  530  484  551  729  491  430  916   938 #>  [449,]  888  634  593  162  749  329  918  401  589   781 #>  [450,]  224  966  809  679  363  115  533  589  320    31 #>  [451,]  604  838  644  639  770  147  373  620  257   587 #>  [452,]  203  696  479    1  592  874  185  166  221   383 #>  [453,]  650  141  136  699  497   87  472  152  154     4 #>  [454,]  481  601  187  885   97  249   91   86  102   877 #>  [455,]  613  937  255   22  309  196  717  120  744   311 #>  [456,]  373  753  604  870  587  958  212  644  237   821 #>  [457,]   12   15  137    4  670  292  950  170  541    55 #>  [458,]  708  779  158    6  268  956  807   20  140   337 #>  [459,]  864  239  777  707  153  532  197  919  262    11 #>  [460,]  759  325  296   95  716  625  378   92  938   516 #>  [461,]  534  745  633  329  757   46  631  781  114   191 #>  [462,]  586  428  588  324    7  433  332   94  640   262 #>  [463,]  609  647  368  674  823  274  217  218  944   583 #>  [464,]  256  952  430    9  387  744  551  270  448   793 #>  [465,]  402  960  111  476  180  396   65  299  248   548 #>  [466,]  606  821  237  498  753  188  867  648  123   456 #>  [467,]  716  523  370  800  706  719  553  477  875   916 #>  [468,]  263  973  221   32  227  757  879  479  683   970 #>  [469,]  600  367  527  439   89  273  507  874  441   203 #>  [470,]  531  371  407  485  292  998  845  177  419   667 #>  [471,]  778  439  157  142  755  830  348  282  473   424 #>  [472,]  152  136   75  141  614  667  352  990  318   292 #>  [473,]  161  525  778  625  759  755  337  460  166    95 #>  [474,]  209   54  328  429  506  643  126  223  135    17 #>  [475,]  798  248  862  766  913  443  372  811  163   418 #>  [476,]  960  180  465  116  685  402  526  500  913   111 #>  [477,]  706  716  467  523  106  119  719  484  392   938 #>  [478,]  259  968  668   96  678  858   33  178  657   228 #>  [479,]  221    1   32  543  263  592  452  383  874   696 #>  [480,]  569  771  930  758  375  737   57  738  257   201 #>  [481,]  601  454  935  877   77  187  102  117  444   914 #>  [482,]  656  386  412  744  495  335  425  546  630   413 #>  [483,]  231  436  443  268  343   20  542  708  746   731 #>  [484,]  916  491  448  106  818  729  530  670  477   523 #>  [485,]  371  531  598  470  292  137  492  404  215    36 #>  [486,]  793  552    9  685  256  887  817  526  512   116 #>  [487,]  711  870  958  347  278  173  931  361  131   456 #>  [488,]  848  654  895  282  507  655  830  308   89   772 #>  [489,]  705  310  139  936  865  961  844  616  121    18 #>  [490,]  314  406  536  229  970  197  440   62   39   813 #>  [491,]  417  484  729  641  916  106  670  448  818   546 #>  [492,]  215  802   71  127  722  211  179  972  994    15 #>  [493,]  964   68  409  389  298  130  253   26  889   554 #>  [494,]  963  891  653   78  580  990  365  342  557   739 #>  [495,]  335  560  386  630  971  980  482   87  413   568 #>  [496,]  633   43  781  664  774  841  966  250  114   775 #>  [497,]  876  146   52  826  453  843  784   35  972   152 #>  [498,]  753  867   34  123  456  237  212  541  692    82 #>  [499,]  431  671  181  976  127  235  564  902  728   919 #>  [500,]  673  570  548  116  349  327  402  285  578   739 #>  [501,]  761  839  800  892  825  978  280  467  258   824 #>  [502,]  504   41  818  800  982  169  311  763  839   613 #>  [503,]   78  979  187  283  868   69  817   40   86   508 #>  [504,]  502  169   41  818  982  853  916  563  579   155 #>  [505,]  957  898  271  627  608  743  232  913  989   624 #>  [506,]  333  229  643   39  813  536   62  832  209    17 #>  [507,]  488  282   89  830  808  654  848  665  469   199 #>  [508,]  817  283   98  338  552   40   48  512  171   486 #>  [509,]  405  286  305  264  241  974   61  583  996   986 #>  [510,]  293  791  511  524   13  826  649  769   52    99 #>  [511,]  293  510  769   13  806  927  791  205  954    99 #>  [512,]  817  351  552  486  508  171  810   40    9   982 #>  [513,]  410  746  942  652  332    7  586  462   94   324 #>  [514,]  128  522  829  947  836  597   60  607   76   726 #>  [515,]   29  322  164  854  681  102  538  690   58   395 #>  [516,]  747  378   27  125   95  910  830  396  460   759 #>  [517,]  266   57  529  480  639  622  771  838  569   758 #>  [518,]  566  773  108  297  354  498    5  933  821   243 #>  [519,]  420  178  289  764  134   91  447  376  691   340 #>  [520,]  148  359  666  803  676  380  959   82  983   170 #>  [521,]  545  321  829  262  756  762   60  291  925   153 #>  [522,]  947  607  835   76  597  514    2  637  829   291 #>  [523,]  818  706  467  763  916  477  484  370  800   959 #>  [524,]   71  826  260  235  510  791  492  902  215   431 #>  [525,]  244   93  663  337  874  473  543  912  460   759 #>  [526,]  685  793  960  551  476  299  465  913   92   270 #>  [527,]  367  469  600  273  577  403  792  276   89   892 #>  [528,]  700  219  642  903  961  195  433  909   18   618 #>  [529,]  147  266  639   17  569  257  620  451  644   480 #>  [530,]  991  782  285  448  116  793  670  949  887   916 #>  [531,]  371  485  598  470   21  667  318  180  292   407 #>  [532,]  777  459  201  162  738  239  664  966  197   277 #>  [533,]   31  176  542  765  833  450  731  658  224   410 #>  [534,]  461  329  745  345  358  749  757  103  346   357 #>  [535,]   45  885  109    3  252  118  687   97  872   217 #>  [536,]  314  490  229  406  107  832   62  333  197   440 #>  [537,]  695  831  784   35  876  940  645  945 1000   382 #>  [538,]  230  312  322  585  783  743  854  681  269   271 #>  [539,]  992  356  194  138  889  438  228   96  715   341 #>  [540,]  245  107  844  832   18  277  865  909  775   528 #>  [541,]  170    4  260  359   15   38   73  391  457    12 #>  [542,]  483  731  410  746  998  765  436  766  533   443 #>  [543,]   93   32  874    1  383  244  663  479  221   525 #>  [544,]  364  193   25  698  734   79  843  900  876   646 #>  [545,]  521  262  153  291  321  915  595  762  150   861 #>  [546,]  412  803  413  491  729  417  198  425  656   100 #>  [547,]  231  236  621  846  860  856  111  748  402   398 #>  [548,]  673  192  396  327  402  500   27  578  465    92 #>  [549,]  144   42  994  174  598  404   71  588   61   492 #>  [550,]  360  828  390  932   53  161  789  779  269   752 #>  [551,]  991  526  270  685  448  793  989  851  430   938 #>  [552,]  171  486  338  887  512  508  793  817   67   351 #>  [553,]  875  859  370  278  347  711  567  467  258   719 #>  [554,]  933  243  298  297  130  493  820  714  354     5 #>  [555,]  771  930  423   57  758  636  350  738  480   768 #>  [556,]  301   41  412  546  803  523  818  866  100   311 #>  [557,]  580  365   37  868  351  503  512  494  817    40 #>  [558,]   50   60  829  226  694  925  521  121  762   321 #>  [559,]  894  324   21  334    7  746  531  953  998   672 #>  [560,]  393  294  630  980  983  812  676  415  357   804 #>  [561,]  143  911  994  588  433   61  976  583   42   640 #>  [562,]  951  427  655  830  186  236  282  424  516   244 #>  [563,]  916  242  818  670  859  553  853  719  949   216 #>  [564,]  671  369  901  915  919  194  374  715  728   499 #>  [565,]  995  323  330  899  796   79  946  787  410   900 #>  [566,]  108    5   34  354  702  692  893  518  773   498 #>  [567,]  875  711  901  797  149  859  356  369  553   910 #>  [568,]  306  651   14  624  989   85  851  251  397   658 #>  [569,]  480  257  620  758  737  406   39  375  314   930 #>  [570,]  349  739  500  116  285  949  578  673  967    40 #>  [571,]  616  694   50  832   18  540  245   54  226   762 #>  [572,]  952  744  464  430   16  656  387  677  898   627 #>  [573,]  350  718  636  984  284  399  345  188  904   886 #>  [574,]  906  791  202  293  987   99  174  720  649   741 #>  [575,]  965  445  845  175  342  732  977  163  344   920 #>  [576,]  721  876  712  831  380  682  160  645  701   695 #>  [577,]  184  792  173  131  361  258  892  370  276   403 #>  [578,]  327  742  673  949  751  500  570  548  941   285 #>  [579,]  313  426  216  155  169  563   80   41  853   504 #>  [580,]  365   37  557  494  400  891   63  963  868   351 #>  [581,]  701   73  146  905  380  840  876  497  867   541 #>  [582,]  750  336  629  969  276  850  184  159  411   131 #>  [583,]  241  596  873  305  647   61  433  561  674   948 #>  [584,]  223   54  429  474  827  328  691  506  790   686 #>  [585,]  783  331  271  538  269  270  743   58  390   240 #>  [586,]  428  462  332    7  324  588  777   94  640   919 #>  [587,]  620  931  257  373  604  772  456  870   39   149 #>  [588,]  462  428   42  127  994  586  324  640  433   919 #>  [589,]  809  888  593  363  162  966  918  449  329   114 #>  [590,]  222   44  135  385  970  707  186   11  664   813 #>  [591,]  878  421  348  623  816  303   48  755  424   805 #>  [592,]    1  383  479  660   66  221  619  543  452    44 #>  [593,]  888  634  918  449  162  749  357  589  401   294 #>  [594,]   91  447  287  420   51  519  156  218   19   726 #>  [595,]  291  707  153  262  381  846  655  374   11   545 #>  [596,]  873  433  583  241   42  948  944  219  700   305 #>  [597,]  522  678   10  134  514  947  488  282  637   259 #>  [598,]  371  485  531  404  318  144   71  997  137   667 #>  [599,]   46  208  190  774  114  956  633   31  397   115 #>  [600,]  469  367  527  439  273   89  203  934  874   166 #>  [601,]  187  481  454  102  207  117  283   86  444    47 #>  [602,]  805  794  939  164   53   48  395  204  355   856 #>  [603,]  880  748  621  860  953  997   21  372   81   283 #>  [604,]  373  451  257  587  620  131  456  770  857   724 #>  [605,]  200  914  657  635  668  167  315  935  316   376 #>  [606,]  466  123  648  498   82  867  237  131  958   821 #>  [607,]  835   76  522  637  709  947  384  915  725   861 #>  [608,]  624  271  989  743  505  913  766  407   85    56 #>  [609,]  368  647  463  674  823  433  996  583  219   788 #>  [610,]  725  384  709  150  861  944   42  156  281   953 #>  [611,]  154  425  413  416  198  335  656  881  971   699 #>  [612,]  261  272  820  297  189  858  178  968  764   870 #>  [613,]  311  309  744  213  387  120  220  502  464   736 #>  [614,]  352  834  174  948  152  549  472   61  241   318 #>  [615,]  819  120  182  710  411  736  213  276   22   850 #>  [616,]   18   50  961  925  226  121  558    3  756   219 #>  [617,]  710  360  912  717  752  214  267   46  663   550 #>  [618,]  195  330  528  993  646  675  323   79  176   700 #>  [619,]   66  139  310  592  928  660  841   44  250   135 #>  [620,]  257  587  931  604   39  569  373  737  440   490 #>  [621,]  748  860  603  547  372  846   21  111  672   811 #>  [622,]  388  517  266   57  555  771  758  124  480   768 #>  [623,]  421  755  805   48  591  939  171  922  394   338 #>  [624,]  608  989  271  743  568  851  270  766  913   505 #>  [625,]  978  759  716  460  378  736  473   95  800   516 #>  [626,]  354  871  911  893  143  702  181    5  815   104 #>  [627,]  141  898  505   16  168  957   72   87  881   650 #>  [628,]   86   97  885  732  854  207   90   69  187   880 #>  [629,]  750  582  706  336   82  148  842  703  477   392 #>  [630,]  119  251  560  106  851  804  495  729  676   983 #>  [631,]  461  883  182  981  110  879  534  411  745   227 #>  [632,]  642  903  996  618  528  823  961  986    3   844 #>  [633,]  781  114  745  496  329  774  461   43  191    46 #>  [634,]  593  449  918  888  357  749  401  718  162   345 #>  [635,]  657  167  735  858  280   67  693  169  761   824 #>  [636,]  350  423  573  837  718   24  943  555  188   237 #>  [637,]   76  607  835  751  684   59  327  374  522   194 #>  [638,]  245  814  133  540  844  704  107  780  865   832 #>  [639,]  770  838  257  451  724  604  620   17  857   273 #>  [640,]  919  777  586  864  588  428  462  127  239   728 #>  [641,]  491  417  782  155   55  670  216  729  530   457 #>  [642,]  903  528  996  700  609  647  823  219  463   368 #>  [643,]  328  790  813  209  229  506  333  686  321   694 #>  [644,]  870  451  648  456  243  604  714  587  487   620 #>  [645,]  682  831  980  812  537  695  784  688  921   145 #>  [646,]  113  122   79  900  195   25  698  323  565   320 #>  [647,]  609  368  674  463  583  823  433  996  219   561 #>  [648,]  644  487  456  870  451  604  131  606  958   373 #>  [649,]  826   52  293  510  791  524  304  511  574   840 #>  [650,]   87  980  453  881  971   64  141    4  645   172 #>  [651,]   85  658  568   56  397  306  415  624  608    14 #>  [652,]  688  145  809  796  513  787  319  410  942   177 #>  [653,]  741  349  739  318  997  963  667  570  979    21 #>  [654,]  488  895  884  848  772  278   33  684  875    96 #>  [655,]  186  747  233  291  830  562  595  707  282   488 #>  [656,]  425  482  412   16  413  386  729  335  546   744 #>  [657,]  858  635  478  668  735  693  259  228  678   968 #>  [658,]   85  651   56  766  397  568  801   31  624   608 #>  [659,]  422  207  661   84   47  355  408    8  621    81 #>  [660,]  730   66  592  619   49  139    1    6  713   807 #>  [661,]  118   84  659   97  422    3   81  872  121   732 #>  [662,]  265  281  751   40  868   59  353  578  709   637 #>  [663,]  244  525  191  543  214  296   11  307  267    93 #>  [664,]  841  781  532  496  970  263  683  590  135   201 #>  [665,]  808  776  316  142  507  315  199  761  439   668 #>  [666,]  676  520  983  393  225  803  359  560  432   148 #>  [667,]  318  531  371  292  598  137  349  485  470   180 #>  [668,]  678  478  376  808  259   10  316  597  968   134 #>  [669,]  401  724  857  943  373  737  237  740  604   886 #>  [670,]  457  391  916  242  106  530  719  563   12   949 #>  [671,]  564  915  499  194  715  431  992  374  919   861 #>  [672,]    7  324  846   94  262  343  746  332  860    21 #>  [673,]  548  327  192  500  578  396  402  941   27   751 #>  [674,]  368  647  609  463  583  823  561  911  871   944 #>  [675,]  445  986  618  330  834   79  334  323  948   995 #>  [676,]  666  983  393  225  432  520  560  148  718   359 #>  [677,]  331  937  572  585  386  196  271  783  744   132 #>  [678,]  668  597   10  259  376  478   77  808  134   824 #>  [679,]  224  942  966  450  320  122  363  775  532   652 #>  [680,]  727  774   43  124  988  115  496  461  250   633 #>  [681,]  140  408  355  312  856  435  779  538  230     8 #>  [682,]  645  689  284  172  812  849  980  831  576   446 #>  [683,]  757  781  449  162  329  664  263  201  970   724 #>  [684,]  374  797  637  747  327  192  194  291  901   910 #>  [685,]  526  793  960   92  476  551  299  465  116   486 #>  [686,]  790    2   26  947  643  101  298  813  389   438 #>  [687,]  109   86  377  720   78  628  535   45   97   249 #>  [688,]  145  206  319  787  652  177  921  796  812   211 #>  [689,]  849  682  284  446  812  645  172  346  698   955 #>  [690,]   69  917  322  785  232  204  538  854  230   890 #>  [691,]  764  178  259  686  820  478  714  138   96   261 #>  [692,]   34  260  702    5  524  905  354  499  181   897 #>  [693,]  313  735  353  228  858   80  853  855  189   767 #>  [694,]  762  321  226   50  558   60  328  643  101   521 #>  [695,]  537  831  784   35  876  940  146  945  645   972 #>  [696,]  110  452  166  479  227  912    1  383  883    93 #>  [697,]  210  403  361  892  173  763  370  577  839    33 #>  [698,]   25  900   79  646  320  122  734  565  689   323 #>  [699,]  453  154  183  497  876  581  701  650  576   198 #>  [700,]  219  433  528  873  596  462  894  944  903   305 #>  [701,]  876  146  581  695  576  380  537  831  497   160 #>  [702,]  893    5  108  769  692  354  511   13  927   566 #>  [703,]  842  958  149  875  184   82  131  792  258   859 #>  [704,]  122  320  679  224  195  450  900  646  909   113 #>  [705,]  489  865  936  775  121  310   18  139  246   844 #>  [706,]  477  523  467  629  703  842  959  716  276   719 #>  [707,]  153  595   11  459  233  381  291  655  262   239 #>  [708,]  268   20  408  140  443  231  856  483    6   458 #>  [709,]  384  725  281  607  610  835   76  861  150   751 #>  [710,]  617  717  912  615  883  360  752   22  754   255 #>  [711,]  567  875  356  884  278  487  553  341  958   347 #>  [712,]  399  904  160  576  284  837  682  721  666   380 #>  [713,]  112  424  733  730  807  348  816    6  822   985 #>  [714,]  298  870  931  243  438  820   39  587  889   620 #>  [715,]  941  902  431  374  194  235  671  992  751   901 #>  [716,]  378  978  467  625  719  460  759  477  800   706 #>  [717,]   14  710  255  617  306   22  414  309  752   360 #>  [718,]  432  393  357  346  634  918  983  943  345   573 #>  [719,]  859  391  242  716  467  875  106  910  916   670 #>  [720,]  923  442  906  574   19  869  377  741   51   165 #>  [721,]  198  576  380  971  980  413  712  666  831   172 #>  [722,]  127  404   71  215  492  919  941  924  901   374 #>  [723,]  317  165  987  806  927  202  897  205  896   954 #>  [724,]  857  669  770  257  604  639  620  373  159   683 #>  [725,]  384  610  709  861  150  281  607   76  835   944 #>  [726,]  281  128  709   51  156  289  607  725  514   947 #>  [727,]  774  450  279  496  775  533  224   31  115   679 #>  [728,]  740  919  369  212  239  864  924  179  127   564 #>  [729,]  491  448  106  782  484   87  641  170  457   991 #>  [730,]  660  713  112   49    6  733  822  807  424   936 #>  [731,]  246  436  765  542  483  129  533   84  343   176 #>  [732,]  334  965  163   90   84  445  575  661  344   854 #>  [733,]  822  713  112   49  816  730  424  936  985    47 #>  [734,]  882   79  323  364  698   25  977  946  565   995 #>  [735,]  693  858  313  280  635  169  853  767  839   228 #>  [736,]  819  120  978  625  615  800  311  309  276   716 #>  [737,]  197  375  864  440  738  740  314  490  257   669 #>  [738,]  201  375  930  197  423  737  532  314  771   480 #>  [739,]  349  570  500  653   40  997  868  116  979   265 #>  [740,]  728  212  369  864  239  919  943  737   38   564 #>  [741,]  653  906  377  997  144  174  318  349  739   549 #>  [742,]  578  242  327  949  941  767  751  797  673   715 #>  [743,]  913  271  608  624  798  989  475  766  230   232 #>  [744,]  387  952  464  482  656  572  613  412  386   430 #>  [745,]  191  781  329  633  114  749  449  663  461   888 #>  [746,]    7  513  343   94  332  410  483  672  998   324 #>  [747,]  516  910  655  233  378   27  684  830  595   125 #>  [748,]  860  621  603   21  372  111  997  547  402   811 #>  [749,]  888  634  449  593  357  392  329  214  294   191 #>  [750,]  629  582  336  706  392  850  886  276   82   842 #>  [751,]  327  941  578  715  637  742  265  374  662   673 #>  [752,]  414  296   14  214  267  932   65  460  617   759 #>  [753,]  237  498  212  456  821  943  940   82   38   740 #>  [754,]  360  912  617  710  473  717  828  550  161   158 #>  [755,]  421  623  161   48   53  591  473  348   95   299 #>  [756,]  925   94  226  121  521  332  262   18  343   398 #>  [757,]  683  329  781  461  745  263  468  534  345   191 #>  [758,]  930  480  569  768  375  555  771  738  201   266 #>  [759,]  460   95   92  625  716  938  516  378  296   325 #>  [760,]  325  307  850  392  842  159  910  804  149   703 #>  [761,]  280  501  839   33  824  892  968  665  507   808 #>  [762,]  321  694  226  521  925  545   50  756  558   277 #>  [763,]  523  370  467  553  818  361  892  173  800   706 #>  [764,]  691  178  259  820  478  686  261  138   96   714 #>  [765,]  176  731  542  533  246   84  410  344  483   436 #>  [766,]  798  475  248  443  801  913  998  743  542   862 #>  [767,]  242  742  578  853  824  949  327  338  673   797 #>  [768,]  758  555  930  375  480  569  626  815 1000   737 #>  [769,]  927  511  893  702  897  510  293   13  108   896 #>  [770,]  639  857  838  969  724  273  604  451  257   441 #>  [771,]   57  480  930  555  423  738  201  758  375   350 #>  [772,]  895  654  848  931  792  441  149  488  587    89 #>  [773,]  933  566  518  297  108    5  554  354  702   820 #>  [774,]  496  633  599  115  114   43  727   46   31   450 #>  [775,]  865  277  841  679  966  731  664  496   18   246 #>  [776,]  808  665  316  142  199  315  303   10  863   471 #>  [777,]  459  239  532  864  586  640  919  153  332   262 #>  [778,]  471  157  473  166  439   93  348  755   28   525 #>  [779,]  458   53  550  158  907  390  360  681  140   337 #>  [780,]  223  333   54  832  506  107  229  643  571   130 #>  [781,]  633  745  329  191  683  496  449  664  263   114 #>  [782,]  991  530  448  641   55  729  551  430  491   670 #>  [783,]  269  585  390  331  789  932  550  538  828   743 #>  [784,]  831  695   35  972  146    4  921  537  211   802 #>  [785,]  917  690  232  288  430  256  891  898  505   240 #>  [786,]  883  383  110  912    1  696  592  543  158   599 #>  [787,]  145  688  206  319  382  652  942  921  899   796 #>  [788,]  815  130   62  368  321  694  389  762  333   640 #>  [789,]  932  390  269  360  550  783  331  828   14   717 #>  [790,]  813  686  643  209  328  848  229  308    2   522 #>  [791,]  510  293   99  511  524  649  574  826  205    13 #>  [792,]  184  577  258  149  131  842  703  772  173   276 #>  [793,]  685  486  526  887   92  991  530  551  116   256 #>  [794,]  602  805  204  939   48  111  283  418  355   856 #>  [795,]  810  512  847  167  171  922  982  552   67   817 #>  [796,]   64  145  652  688  946  177  410  565  882   995 #>  [797,]  901  192  910  941  684  327  567  374  715   742 #>  [798,]  475  766  443  248  140  862  743  913  856    65 #>  [799,]   36  419  804  177  485  296  851  924   65   248 #>  [800,]  467  978  501  716  625  736  523  311  706   477 #>  [801,]  267  214  766  443  436  483  296  752  294   397 #>  [802,]  211  179  945  215  492  972   35  206  921   127 #>  [803,]  546  520  959  148  359  106  100  170  491   666 #>  [804,]  392  983  325  799  294   36  393  760  296   749 #>  [805,]  602  939  794   48  623  421  204  591   53   299 #>  [806,]  205  954  511  326   99   13  927  987  791   897 #>  [807,]    6  337  424  268  713  458  244  730   93   951 #>  [808,]  665  142  776  507  316  199  668   10  678   282 #>  [809,]  589  652  966  363  888  593  450  162  918   294 #>  [810,]  171  552  922  394  982  512  795  486  847    67 #>  [811,]  372  163  920  862   21  418  180  475  248   860 #>  [812,]  446  294  645   64  688  177  560  980  357   393 #>  [813,]  790  229  643  209  490  186  308  848  506   291 #>  [814,]  245  909  638  758  540  768  930  107  555   996 #>  [815,]  181  788  640  561  911  130  871  143  440    62 #>  [816,]  878  424  822  836  303  733  591  427  951   713 #>  [817,]  508  512  486   40  552  283  739  868  351   570 #>  [818,]  916  523  484  563  491   41  467  763  504   417 #>  [819,]  736  615  120  276  411  978  403  850  625   311 #>  [820,]  297  714  178  870  889  243  438  764  298   691 #>  [821,]  237  753  456  188  466  669  498  373  604   636 #>  [822,]   49  733  816  836  424  730  112  427  713   936 #>  [823,]  609  463  647  368  674  996  903  642  583   274 #>  [824,]  338   67  767  761  280  552  171  378  830   282 #>  [825,]  501  839  761  800  736  978  403  892   67   625 #>  [826,]   52  649  524  510  293  972  791   61  146   497 #>  [827,]  429  584   54  474  328  134  223  287   91    49 #>  [828,]  550  161  360  394   53  414  220  783  789   932 #>  [829,]   60  521  558  514   50  836  128  101  226    81 #>  [830,]  282  655  562  516  747  951  488  507   89   186 #>  [831,]  695  784  645  537  380  980  576    4  876    35 #>  [832,]  107  333  536  506  762  229  694  780  277   540 #>  [833,]   31  533   85  208  658  362   56  437  956   176 #>  [834,]  352  614  948  241  445  174  843  152   61   899 #>  [835,]  607   76  637  522  709  915  947  194  861   384 #>  [836,]  816  822  427  829  878  186   47  514  522   951 #>  [837,]  160  904  399  636  712  537  284  695  573   940 #>  [838,]  451  770  639  604  969  577  273  147  644   857 #>  [839,]  501  761  825  280  800  735  892   67  169   824 #>  [840,]  905  950  457  967  136   55  137  826  524   954 #>  [841,]  664  250  928  135   44  496  221  865  590   263 #>  [842,]  703  149  760  958  792   82  184  875  850   131 #>  [843,]  193  152  497  834   75  899  352  614  264   876 #>  [844,]  961  540  245  865   18  616  775  528  705   489 #>  [845,]  175  407  920  977  470  998  342  882  531   957 #>  [846,]  672  343  236   94  547    7  860  595  231   621 #>  [847,]  810  795  982  922  171  220  167  502  394   512 #>  [848,]  488  895  308  654  772  790   89  813  655   186 #>  [849,]  284  689  984  446  955  682  346  904  573   718 #>  [850,]  307  276  760  159  842  792  325  392  582   703 #>  [851,]  419  989  119  251  551  624  799   64  568    87 #>  [852,]  886  345  188  336  750  969  582  981  534   573 #>  [853,]  169  767  351  949  563  216  242  742  855   578 #>  [854,]  230  322  538  312  163  965  690  732  342   975 #>  [855,]  216  353  426  967  949  954  265  853  205   950 #>  [856,]  408   20  231  140  443  547  708  355  475   798 #>  [857,]  724  770  669  159  604  969  373  257  336   683 #>  [858,]  657  735  693  968  478  280  635  259  228    33 #>  [859,]  391  719  553  875  959  567  703  242  563   670 #>  [860,]  748  621   21  402  372  547  111  846  180   603 #>  [861,]  150  384  725  610  709  976  101  431  671   835 #>  [862,]  372  163  475  811  248  920  798  418  998    21 #>  [863,]  985  157  199  303  776  816  471  424  733   348 #>  [864,]  459  239  197  740  777  919  737  440  728   640 #>  [865,]  775  841  277  705  385  133  540   18  135   844 #>  [866,]  234  556  213   22  301  482  255  311  613   358 #>  [867,]  498   34   73  123  581  100  566  541  753   905 #>  [868,]   40  265  979  739  662  817  570  351  503    59 #>  [869,]  923  720   19  896   51  442   13  340  326   574 #>  [870,]  931  644  487  714  456  243  587  341  297   438 #>  [871,]  626  911  815  409  143  674  368  788  561   354 #>  [872,]  118  249  661    3   97  252   81  558  616    50 #>  [873,]  596  948  583  241  433  700  219  305  944    42 #>  [874,]   93  543  525  244  166   89   32  479    1   663 #>  [875,]  567  553  278  258  711  703  859  719  149   370 #>  [876,]  497  695  701  576  537  831  784  146   35   645 #>  [877,]   77  376  935  420   10  914  134  678  481    91 #>  [878,]  816  591  424  427  951  836   48  562   47   303 #>  [879,]  227  468  757  631  110  969  696  263  411   981 #>  [880,]  603  953   86  249  748  621   97   78   81   997 #>  [881,]  971  650  335   16   87  154  416  627  172   453 #>  [882,]  977  946  995  175  796  734  565  845  323   407 #>  [883,]  110  786  912  710  631  696  617   46  383   754 #>  [884,]   96  228  711  654  138  356  278  992  194    33 #>  [885,]   97   45  118  872  628  249   86  535  661     3 #>  [886,]  345  852  188  634  669  336  718  750  573   857 #>  [887,]   92  793  685  552  530  486   95  938  716   285 #>  [888,]  593  449  749  634  589  918  357  162  329   294 #>  [889,]  438  992  138  539  356  341  194  298  671   931 #>  [890,]  690  785  240  322  854  342  494  963  898   232 #>  [891,]  494  963   55  570  739  957  116  232   72   349 #>  [892,]  361  258  370  278  173  577  403  501  184   792 #>  [893,]  702  769    5   13  108  511  510  896  626   927 #>  [894,]  559  334  948  995  175  410  873  596  998   324 #>  [895,]  772  848  488  654  308   89  441  931  233   149 #>  [896,]   13  511  893  702  927  769  806  326  293   510 #>  [897,]  927  905  769  511   34  806  692  205  954   840 #>  [898,]  505  957  627  271  240  608  624  342   16   743 #>  [899,]  565  264  787  921  145  995  974  796   61    35 #>  [900,]  122  698   25  320  646  195  565  145  787    79 #>  [901,]  797  369  564  924  567  715  941  910  722   374 #>  [902,]  235  431  715   71  941   99  499  954  404   524 #>  [903,]  642  996  528  647  305  700  583  873  609   823 #>  [904,]  399  712  284  160  837  682  573  849  576   984 #>  [905,]  897  840   73   34  524  692  541  146  954   950 #>  [906,]  574  741  720  442   99  987  923  377  990   791 #>  [907,]  779  158   53  164  681   74   28  458  550   390 #>  [908,]   70  300  936  733    8  601  395  444  112   422 #>  [909,]  974  540  528  996  433  195  305  219  368   942 #>  [910,]  747  797  378  516  901  192  325   27  719   567 #>  [911,]  143  561  871  626  815  181  674  976   61   510 #>  [912,]  710  617  166  525   93  883  543  383  473   754 #>  [913,]  743  960  475  248  920  476  811  798  232   526 #>  [914,]  935  200   77  877  668  376  142  303  678    10 #>  [915,]  671  291  564  545  194  835  374   76  684   607 #>  [916,]  563  484  818  491  670  719  523  859  106   242 #>  [917,]  785  288  690   58  394  232  486  256  939   805 #>  [918,]  634  593  162  357  888  446  718  449  589   346 #>  [919,]  127  728  239  864  564  722  640  586  369   740 #>  [920,]  811  163  998  862   21  845  372  913  475   180 #>  [921,]  206  211   35  802  688  179  145  945  972   177 #>  [922,]  623  421  810  394  220  755  171   53  805   161 #>  [923,]  442  720   19   51  906  281  610  574  377   869 #>  [924,]  369  901   38  722  728  919  239  797   36   564 #>  [925,]  756  226  121   18   50  521  762  558  321    94 #>  [926,]  956  437  435  208  727  176  533  731  765   705 #>  [927,]  769  897  511  806  893  702   13  896  293   510 #>  [928,]  135  434  841   44  221  250  619  970  590   263 #>  [929,]  786  190  599  158  926  208  883  774  956   383 #>  [930,]  758  738  375  480  201  771  197  555  737   314 #>  [931,]  587  438  870  620  772  714  341  895  711   356 #>  [932,]  789  269  390  550  752   14  783  766  798    85 #>  [933,]  554  773    5  297  243  409  493  354  566   820 #>  [934,]  379  527  600  210  367  273  469  838  147   403 #>  [935,]   77  914  877  481  200  117  303  376  591   421 #>  [936,]  112  733  730  822  422   70  705  121   49     8 #>  [937,]  196  306  386  255  717   14   22  568  677   414 #>  [938,]  414  119  759  460   92  309  251  551  685   887 #>  [939,]  805   48  794  602  299   53  204  111  418   856 #>  [940,] 1000  945  695  260  537  943  179  784  211   802 #>  [941,]  715  404  327  751  797  374  742  673  722   901 #>  [942,]  513  679  787  652  224  410  565  145  966   688 #>  [943,]  432  401   24  740   38  669  718  728  940   945 #>  [944,]   42  433  596  219  610  150  588  873  861   725 #>  [945,]  211  179  802  206   35  921  940  319  972    24 #>  [946,]  995  882  796  977  410  323  565  330  175   344 #>  [947,]    2  522  101  607  835   26  686  156  514    60 #>  [948,]  873  596  834  241  174  894  614  352  583   559 #>  [949,]  285  578  742  242  570  116  530  670  967   673 #>  [950,]  967   71  137  144  840  457  404  235  318    99 #>  [951,]  562  427  424  655  830  236  186  282  878   244 #>  [952,]  430  464  387  256    9  448  744  782  551   572 #>  [953,]  880  603  559  377  997   81  748  249  621   944 #>  [954,]  205   99  806  967  235  902  511  950  791   987 #>  [955,]  363  988  849  984  320  918  446  689  284   115 #>  [956,]  208  437  158  458  390  140  708  269  443   268 #>  [957,]  505  898  342  407  232  627  667  845  913   920 #>  [958,]  703  131   82  842  373  149  487  184  567   711 #>  [959,]  148   82  106  170  359  859  391  803   38   703 #>  [960,]  476  465  180  402  685  526  913  116  111   248 #>  [961,]  844  616  528   18    3  705  540  700  489   642 #>  [962,]  198  413  721  546  666  520  712  803  154   971 #>  [963,]  494  653   78  891  342  739  232   69  349   741 #>  [964,]   68  389  493   26  130  298    2  686  788   101 #>  [965,]  344  575  175  163  732  975  334  845  977   998 #>  [966,]  809  363  679  589  162  450  224  532  652   942 #>  [967,]  950  349  570  954  265   99  949  855  318   205 #>  [968,]  478   33  259  280  858   96  761  884  668   654 #>  [969,]  582  770  336  857  411  227  159  724  838   750 #>  [970,]  406  490  314  590  664  536  441  135   17   263 #>  [971,]  172  721  881  335  650  980  413  495  154   198 #>  [972,]   35  802  211  492  215  784  921  179  945   260 #>  [973,]  468  434  928  221  263   17  479  970  639    32 #>  [974,]  305  264   61  382  899  241  583  561  509   596 #>  [975,]  312  437  344  965  176  435  681  230  362   140 #>  [976,]  431  499  861  150  994   42  235  588  561   127 #>  [977,]  882  175  995  946  845  344  330  407  323   565 #>  [978,]  625  716  378  800  736  759  460  467  276   516 #>  [979,]  868   78   59  503  739   40  283  265  741   603 #>  [980,]  645  560  831  812   87  721  650   64  172   682 #>  [981,]  534  757  852  631  461  124  879  182  886   345 #>  [982,]  169  504  167  810  552  171  853  351   67   512 #>  [983,]  393  432  676  804  718  560  666  392  148   357 #>  [984,]  849  284  955  988  573  689  350  346  904   399 #>  [985,]   74  348   28  863  713  157  424  733  816   303 #>  [986,]  286  405  509  305  195  974  903  675  646    79 #>  [987,]  165  202  205  954  806  574  906   99  511   990 #>  [988,]  124  955  984  363  849  350  345  573  115   918 #>  [989,]  624  851  608  270  743  419  551  271  913   568 #>  [990,]  136  472  906  967   55  840  987  653   72   304 #>  [991,]  782  551  530  448  793  685  116  285  526   430 #>  [992,]  539  356  194  138  889  438  715  341  671   884 #>  [993,]  113  646  618   79  323  279  330  195  122    25 #>  [994,]  549  428  127  492  588   42  215  802   61   561 #>  [995,]  946  565  330  882  977  323  410  175  796   899 #>  [996,]  903  647  823  305  609  583  368  974  642   674 #>  [997,]  349  598   21  404  144  748  500  318  739   860 #>  [998,]  410  920  746  862  175  163  470  475  766   542 #>  [999,]  279   88  113   31  115  833  680  727  993   450 #> [1000,]  940  382  945  537   24  143  104  695  181    35 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.30367763 0.3189377 0.5022339 0.5514441 0.6471885 0.7227294 0.7607222 #>    [2,] 0.31611199 0.3986617 0.4063124 0.4397339 0.5660203 0.6352324 0.6373228 #>    [3,] 0.77618890 0.7832220 0.8428776 0.8903777 0.9779215 0.9995880 1.0031178 #>    [4,] 0.27773209 0.3929281 0.3957470 0.5267343 0.5284198 0.5639318 0.5670843 #>    [5,] 0.38741373 0.4816144 0.5287803 0.5736083 0.6161224 0.6471684 0.8519912 #>    [6,] 0.37861406 0.4988367 0.6053571 0.6493884 0.6567100 0.6686249 0.7379414 #>    [7,] 0.24922698 0.2651667 0.2847783 0.3624200 0.4051397 0.4855495 0.4889940 #>    [8,] 0.39208336 0.6584391 0.6720151 0.7777200 0.8192563 0.8554963 0.8631583 #>    [9,] 0.28971304 0.3882579 0.5482922 0.6056146 0.6281717 0.6720855 0.7230541 #>   [10,] 0.61708580 0.6446556 0.7210090 0.7673380 0.7698627 0.8533280 0.8650517 #>   [11,] 0.33131086 0.4092090 0.5023153 0.5664329 0.6312816 0.6459179 0.6609956 #>   [12,] 0.16777155 0.3190093 0.3209453 0.3957470 0.4540583 0.5384774 0.5539903 #>   [13,] 0.43232576 0.4678759 0.5127112 0.5627866 0.6307705 0.6722208 0.6815875 #>   [14,] 0.34807209 0.4500258 0.4790189 0.5458356 0.5508784 0.6054630 0.6993777 #>   [15,] 0.16777155 0.2777321 0.3357817 0.3539487 0.4476562 0.5119588 0.5291112 #>   [16,] 0.66625663 0.7187429 0.7752320 0.7931116 0.8198742 0.8436682 0.8579464 #>   [17,] 0.57035582 0.7168058 0.7246445 0.7491982 0.7530066 0.8162021 0.8288660 #>   [18,] 0.48076809 0.5167243 0.5208469 0.5945959 0.6032790 0.6599381 0.6608388 #>   [19,] 0.62784677 0.6858109 0.7255370 0.8211741 0.8405453 0.8495073 0.8913669 #>   [20,] 0.32653339 0.3297438 0.3475076 0.3615799 0.3696358 0.4674592 0.4951532 #>   [21,] 0.39980349 0.4138907 0.4352259 0.4553390 0.4677349 0.4838522 0.4913767 #>   [22,] 0.20054471 0.5497455 0.7013420 0.7115204 0.7890003 0.8636245 0.9096278 #>   [23,] 1.59766073 1.8140469 1.8479836 1.8763075 1.9899516 2.0192030 2.0314789 #>   [24,] 0.47044061 0.5561324 0.5735371 0.5937835 0.6129487 0.6361924 0.6415175 #>   [25,] 0.16245955 0.4562634 0.6495057 0.6962885 0.7389172 0.7751526 0.7866790 #>   [26,] 0.26967089 0.3219926 0.4063124 0.6028364 0.6052945 0.6292521 0.6296830 #>   [27,] 0.19537667 0.2893713 0.3292229 0.3880748 0.4308946 0.4931665 0.5028380 #>   [28,] 0.29642767 0.5852239 0.7093901 0.7383232 0.7992780 0.8346928 0.8446898 #>   [29,] 0.80344391 0.9712402 1.0012976 1.0242004 1.0728371 1.1975509 1.3025483 #>   [30,] 0.96806557 1.0157016 1.0639564 1.0657454 1.0911481 1.1134685 1.1164093 #>   [31,] 0.46511426 0.5703910 0.8172884 0.8201898 0.8283556 0.9102593 0.9277102 #>   [32,] 0.33949275 0.3696891 0.4886666 0.5283609 0.7458085 0.7481699 0.7526285 #>   [33,] 0.41257476 0.5137401 0.5643063 0.6465333 0.6610257 0.7041642 0.7507789 #>   [34,] 0.50014270 0.6848902 0.6960458 0.6969554 0.7137058 0.7172498 0.7387811 #>   [35,] 0.25863836 0.4073137 0.4095338 0.4237070 0.4325420 0.4622313 0.5367162 #>   [36,] 0.29278185 0.3837736 0.5689921 0.5697790 0.5901890 0.6051639 0.6080732 #>   [37,] 0.36883237 0.5025390 0.8873071 1.1371078 1.1713231 1.1863721 1.1958053 #>   [38,] 0.48814421 0.4961252 0.5237942 0.5729799 0.5770340 0.5819360 0.5834036 #>   [39,] 0.33941803 0.3754397 0.4707616 0.5422675 0.6241927 0.6255342 0.6393391 #>   [40,] 0.36770154 0.4634537 0.5205964 0.5709223 0.5883729 0.6622619 0.6631391 #>   [41,] 0.69936267 0.7516564 0.8824587 0.8844316 0.8969079 1.0097853 1.0200318 #>   [42,] 0.38698005 0.4272722 0.4586803 0.4833049 0.5164599 0.6134898 0.6141483 #>   [43,] 0.55353367 0.6330332 0.7565907 0.8169748 0.8902770 0.8904212 0.9104038 #>   [44,] 0.28426095 0.4186933 0.4228273 0.4709998 0.6280365 0.6589560 0.8198883 #>   [45,] 0.30470045 0.9818811 1.2711771 1.4002254 1.4004609 1.4215972 1.4691090 #>   [46,] 0.53296178 0.6080911 0.7082552 0.7801990 0.8191638 0.8313822 0.8961031 #>   [47,] 0.63592775 0.6494387 0.6863261 0.7066064 0.7092643 0.7189989 0.7231306 #>   [48,] 0.47536524 0.4844387 0.5259831 0.5576279 0.5610902 0.5877933 0.6457227 #>   [49,] 0.42715519 0.6233717 0.6475451 0.8197280 0.8482179 0.8980201 0.9186528 #>   [50,] 0.27584498 0.3406013 0.5243238 0.5574091 0.6186931 0.6242459 0.6522395 #>   [51,] 0.63338943 0.7018136 0.7488429 0.8349200 0.8405453 0.8605995 0.9062774 #>   [52,] 0.25960412 0.3281155 0.6692771 0.6977846 0.7061298 0.7189198 0.7556228 #>   [53,] 0.60817696 0.6200436 0.6227712 0.6287948 0.6446448 0.7285364 0.7748308 #>   [54,] 0.34686816 0.6663983 0.7856639 0.8079631 0.8135336 0.8310274 0.8314521 #>   [55,] 0.51274597 0.6050368 0.6181783 0.7032168 0.7211204 0.7797068 0.7815730 #>   [56,] 0.27793558 0.4719857 0.4994111 0.8137052 0.8168902 0.8282280 0.8790021 #>   [57,] 0.46332526 0.7499718 0.7693236 0.8891796 0.9325850 0.9682084 0.9974631 #>   [58,] 0.92403334 0.9252681 0.9439273 0.9859609 1.0712693 1.1118712 1.1570095 #>   [59,] 0.51484193 0.5687870 0.5868571 0.5886812 0.5965382 0.6687545 0.6706275 #>   [60,] 0.33821302 0.4310662 0.4763699 0.5463553 0.6296830 0.6400075 0.6493819 #>   [61,] 0.39737131 0.4363509 0.5736721 0.5883733 0.6360160 0.6407702 0.6494413 #>   [62,] 0.23682031 0.3394180 0.4558186 0.5610141 0.5743369 0.5887694 0.5956980 #>   [63,] 0.70645852 0.8648866 0.8868743 0.9466200 1.0272904 1.0349415 1.0659482 #>   [64,] 0.37191861 0.4973031 0.5406853 0.5697790 0.6271420 0.6463037 0.6519820 #>   [65,] 0.45396878 0.4690910 0.4909545 0.5567332 0.5807384 0.5858078 0.6016178 #>   [66,] 0.59469549 0.7321369 0.7646562 1.0221741 1.0394747 1.1058191 1.1483679 #>   [67,] 0.54677347 0.5617653 0.5699939 0.6457079 0.7604528 0.9073662 0.9433478 #>   [68,] 0.27238596 0.5278967 0.6032922 0.8044423 0.8177762 0.9732008 1.0337359 #>   [69,] 0.63829921 0.6844912 0.6889476 0.7091801 0.8454624 0.8678373 0.9376009 #>   [70,] 0.65843910 0.8723733 0.8870624 0.9050116 1.0367442 1.0435866 1.0728371 #>   [71,] 0.31306891 0.3861039 0.3880287 0.4015922 0.4107817 0.4566687 0.4654570 #>   [72,] 0.56539174 0.7879028 0.8174459 0.8699523 0.9233875 0.9353015 0.9616592 #>   [73,] 0.61270654 0.6860518 0.6892273 0.6995688 0.7121696 0.7769678 0.7776278 #>   [74,] 0.58522390 0.6848985 0.7851221 0.9709874 1.0066256 1.1030517 1.1751207 #>   [75,] 0.54385134 0.6494621 0.8795893 0.9596434 0.9998074 1.0206369 1.0270447 #>   [76,] 0.19038741 0.2574256 0.3893229 0.5157965 0.5365264 0.5527177 0.5868571 #>   [77,] 0.40714166 0.5533565 0.7526739 0.8451082 0.8533280 0.8990936 0.9617648 #>   [78,] 0.47248714 0.5964775 0.6844912 0.7222080 0.7527496 0.7567860 0.7838123 #>   [79,] 0.39497632 0.5844039 0.5995118 0.6426036 0.6768769 0.6962885 0.7049578 #>   [80,] 0.51260471 0.6677600 0.6933721 0.8007227 0.8086333 0.8354859 0.8372658 #>   [81,] 0.63592775 0.6924888 0.6953589 0.7043307 0.7177605 0.7458507 0.7463989 #>   [82,] 0.32169585 0.3953977 0.5277830 0.5393037 0.5697428 0.6224058 0.6951822 #>   [83,] 1.01863778 1.2792347 1.5481816 1.8670274 1.9548026 2.0289420 2.0561684 #>   [84,] 0.62264430 0.6709897 0.6890226 0.7141786 0.7147230 0.7453049 0.7526447 #>   [85,] 0.27793558 0.3081597 0.3985069 0.7110701 0.7732601 0.7812368 0.7932387 #>   [86,] 0.63810798 0.6624797 0.7567860 0.8107556 0.8249317 0.8531857 0.8746924 #>   [87,] 0.39903161 0.6287029 0.6496414 0.7391644 0.7550117 0.7931116 0.8160507 #>   [88,] 1.25417109 1.2918730 1.2937787 1.3169346 1.3412284 1.3987194 1.4486985 #>   [89,] 0.45421022 0.5463658 0.5609010 0.6062415 0.6191247 0.6304755 0.6324031 #>   [90,] 0.87846302 0.9728359 1.0831559 1.1944013 1.2133692 1.2331036 1.3102309 #>   [91,] 0.61715715 0.9602818 1.0454655 1.0688511 1.1236397 1.1459006 1.1988398 #>   [92,] 0.35648233 0.4364238 0.4408212 0.4841213 0.5222144 0.5454352 0.5635151 #>   [93,] 0.28658879 0.4078948 0.4690796 0.4759723 0.6328515 0.6846895 0.7080893 #>   [94,] 0.22545990 0.2847783 0.3429035 0.3510628 0.3648472 0.4421383 0.4728477 #>   [95,] 0.35648233 0.3833873 0.4708465 0.4931665 0.5014736 0.5227236 0.5256869 #>   [96,] 0.35350199 0.3990995 0.4256113 0.4856390 0.5989840 0.6462501 0.6467032 #>   [97,] 0.45940639 0.5395319 0.6381080 0.7411336 0.7521742 0.8379244 0.8962983 #>   [98,] 0.52598306 0.5886812 0.6202368 0.6225515 0.6345432 0.6373488 0.6495173 #>   [99,] 0.29995848 0.3059037 0.4689411 0.4812125 0.5429289 0.5766667 0.5964905 #>  [100,] 0.54114132 0.6860518 0.7167214 0.7887749 0.8539675 0.8543964 0.8956357 #>  [101,] 0.32199260 0.3986617 0.4763699 0.4989373 0.5204300 0.5855872 0.5863483 #>  [102,] 0.41029234 0.9965006 1.0471668 1.0734060 1.1626933 1.1948878 1.1984193 #>  [103,] 0.41717956 0.7013420 0.7635375 0.7915812 0.9055612 0.9542071 1.0153344 #>  [104,] 0.75741933 0.8220782 0.9217080 0.9387848 0.9970039 1.0260254 1.0302210 #>  [105,] 0.73595178 0.8873318 1.0339644 1.1590104 1.1789478 1.1980882 1.2225401 #>  [106,] 0.43079200 0.4631901 0.5374600 0.5792412 0.5966526 0.6203439 0.6379251 #>  [107,] 0.23383132 0.5441506 0.6170781 0.7375200 0.7644017 0.8165081 0.8171025 #>  [108,] 0.33759104 0.5287803 0.5710901 0.6375183 0.6905039 0.7387811 0.7567007 #>  [109,] 1.08095059 1.1283139 1.1991036 1.2600004 1.2964554 1.3096673 1.3426851 #>  [110,] 0.50876598 0.5921473 0.9055819 0.9188776 0.9990895 1.0235102 1.0942546 #>  [111,] 0.35763033 0.3883184 0.4399064 0.4822963 0.4979787 0.5183784 0.5285273 #>  [112,] 0.38349958 0.5849528 0.6330408 0.6567100 0.6613668 0.6720151 0.6729114 #>  [113,] 0.57082109 0.7751526 0.7865709 0.8351459 0.8370909 0.9246755 0.9278242 #>  [114,] 0.47130864 0.5329618 0.6235000 0.6502335 0.6584162 0.6934661 0.7049387 #>  [115,] 0.63907666 0.7049387 0.7050752 0.7154684 0.7214980 0.8028655 0.8283556 #>  [116,] 0.22077414 0.3740513 0.3961501 0.4232905 0.5271446 0.5345596 0.5495628 #>  [117,] 0.41029234 1.0010745 1.0341682 1.0344150 1.0995188 1.1118281 1.1356830 #>  [118,] 0.45940639 0.4699254 0.5183063 0.6369554 0.7463989 0.7832220 0.7849576 #>  [119,] 0.28240870 0.4031214 0.4979656 0.6109754 0.6345847 0.6996239 0.6997147 #>  [120,] 0.56158911 0.6054975 0.6099468 0.6536085 0.7817072 0.9888181 1.0157016 #>  [121,] 0.40247404 0.4318578 0.5215311 0.5243238 0.5979154 0.6470008 0.6552868 #>  [122,] 0.40274924 0.4031844 0.5711022 0.5917579 0.5919549 0.7213135 0.7364091 #>  [123,] 0.60611621 0.7091463 0.8221479 0.8372658 0.8980069 0.9262264 0.9321404 #>  [124,] 0.41464789 1.0010197 1.0205604 1.0402824 1.0587114 1.1254864 1.1517230 #>  [125,] 0.28937131 0.3662641 0.4653283 0.4909545 0.5328843 0.5816380 0.5947235 #>  [126,] 0.46025151 0.6191247 0.7520811 0.7791901 0.8067468 0.8455930 0.8460332 #>  [127,] 0.29120843 0.3507802 0.3812827 0.3953375 0.4464647 0.4573723 0.4665327 #>  [128,] 0.34094852 0.6043055 0.6845878 0.6850045 0.6959121 0.7155374 0.7349928 #>  [129,] 0.27426835 0.3959033 0.5494167 0.6025337 0.6100318 0.6462167 0.6552868 #>  [130,] 0.57433686 0.5748293 0.6241927 0.6706325 0.6791553 0.7144693 0.7301924 #>  [131,] 0.31396699 0.4684905 0.4759154 0.4955614 0.5245070 0.5478489 0.5486822 #>  [132,] 0.76789248 0.8149008 0.9256861 0.9800573 0.9833751 1.0197463 1.0263979 #>  [133,] 0.88208721 0.9249866 0.9354684 0.9388637 0.9559000 0.9750528 1.0361692 #>  [134,] 0.61708580 0.6525094 0.6570089 0.9387570 0.9602818 0.9691437 1.0251930 #>  [135,] 0.28426095 0.4772932 0.4786090 0.5206393 0.5628856 0.6097864 0.7387415 #>  [136,] 0.44831558 0.5127460 0.5362471 0.6519500 0.7157729 0.7167543 0.7271102 #>  [137,] 0.24974358 0.3209453 0.3539487 0.3830015 0.5041247 0.5157016 0.5203094 #>  [138,] 0.31931648 0.4249690 0.4256113 0.4266652 0.4510702 0.4586192 0.4591229 #>  [139,] 0.69626912 0.7379103 0.8197280 0.9689982 0.9869404 0.9988823 1.0259321 #>  [140,] 0.41127247 0.4617760 0.4864286 0.4883893 0.4900019 0.5027172 0.6102615 #>  [141,] 0.53624709 0.5548242 0.5653917 0.6661856 0.6983874 0.7211204 0.8070542 #>  [142,] 0.54342734 0.6926599 0.7499269 0.7756645 0.8555060 0.9073662 0.9197812 #>  [143,] 0.25835248 0.4401716 0.6821274 0.7169472 0.7295887 0.7412124 0.7530223 #>  [144,] 0.37288401 0.3825208 0.4107817 0.4821423 0.5499731 0.5562115 0.5796410 #>  [145,] 0.21030639 0.2785462 0.4123985 0.4669716 0.4732558 0.4833977 0.5063226 #>  [146,] 0.51495523 0.5966214 0.6125103 0.6208414 0.6805892 0.6939378 0.6991962 #>  [147,] 0.78968624 0.9653123 1.0082087 1.0322469 1.0782839 1.1047671 1.1267392 #>  [148,] 0.32169585 0.3320582 0.4543437 0.4659716 0.6075639 0.6270983 0.6488636 #>  [149,] 0.38259165 0.4460856 0.4648490 0.5297408 0.5778744 0.5884685 0.6019538 #>  [150,] 0.10056470 0.3708057 0.4856941 0.5037734 0.5585040 0.5855872 0.5877707 #>  [151,] 1.66856627 1.9087929 1.9811330 1.9931557 2.1768281 2.2075089 2.2076426 #>  [152,] 0.35590767 0.5438513 0.6660228 0.6673668 0.7157729 0.7507198 0.8365011 #>  [153,] 0.26076896 0.3838781 0.3885606 0.4302828 0.4388808 0.4687455 0.5586428 #>  [154,] 0.56414338 0.5900342 0.6303282 0.6378671 0.8358980 0.8743122 0.8951446 #>  [155,] 0.59740752 0.7299565 0.7617586 0.8130695 0.8844316 0.8868743 0.9096114 #>  [156,] 0.60529448 0.6136487 0.6333894 0.6710937 0.6759023 0.6812683 0.6932412 #>  [157,] 0.56599222 0.6632949 0.7293174 0.7383232 0.7423494 0.7702519 0.8028673 #>  [158,] 0.62411959 0.6867864 0.6891382 0.8592858 0.9009264 0.9102488 0.9642903 #>  [159,] 0.32597475 0.4568094 0.4957509 0.6384628 0.6845168 0.6878079 0.7218700 #>  [160,] 0.38148904 0.5990851 0.6350829 0.6448165 0.7297972 0.8301513 0.8777101 #>  [161,] 0.39803275 0.5937464 0.6185920 0.6227712 0.6381425 0.7012953 0.7039399 #>  [162,] 0.38270641 0.4555315 0.4580005 0.4882100 0.5199340 0.5513287 0.5723590 #>  [163,] 0.31587034 0.3190670 0.3657419 0.3670938 0.5698535 0.5791075 0.6152388 #>  [164,] 0.61828202 0.6195973 0.6662157 0.9271101 0.9318509 0.9371674 0.9680270 #>  [165,] 0.52504943 0.5944451 0.8294644 1.0195868 1.0608577 1.0672808 1.1243613 #>  [166,] 0.63285154 0.6592368 0.6610078 0.7188794 0.7279027 0.7664387 0.8042323 #>  [167,] 0.54677347 0.7361906 0.8270926 0.8290750 0.9125749 0.9497276 0.9660846 #>  [168,] 0.69473354 0.9616592 0.9931887 1.0227616 1.0692522 1.1623481 1.2004560 #>  [169,] 0.44573936 0.6243000 0.7330188 0.7867289 0.7963011 0.8835100 0.9096943 #>  [170,] 0.35395550 0.4307920 0.4736711 0.5267343 0.5475338 0.5888996 0.6075639 #>  [171,] 0.40154463 0.5617653 0.5916264 0.5935852 0.7441780 0.7651050 0.7730793 #>  [172,] 0.56784506 0.6093244 0.7063232 0.7574482 0.7664078 0.8685334 0.8776936 #>  [173,] 0.33769735 0.3447957 0.4177351 0.4226236 0.4759154 0.5167833 0.5588748 #>  [174,] 0.48962163 0.5407679 0.5627468 0.5748926 0.5992676 0.6566602 0.7107093 #>  [175,] 0.25953878 0.4019837 0.5599294 0.5678492 0.5742560 0.5765909 0.6139482 #>  [176,] 0.34410590 0.5868205 0.7320507 0.8039579 0.8063443 0.8291370 0.9950724 #>  [177,] 0.29278185 0.3719186 0.4385573 0.4613315 0.5031218 0.5408100 0.5559240 #>  [178,] 0.56966735 0.6099044 0.6608253 0.6723007 0.6732952 0.8001775 0.8103694 #>  [179,] 0.12679254 0.1864310 0.2248328 0.3407851 0.3996061 0.4375315 0.4723229 #>  [180,] 0.28479612 0.3494694 0.4138907 0.4539024 0.4783321 0.5028935 0.5120228 #>  [181,] 0.48993914 0.5189979 0.5854674 0.6201832 0.6480980 0.6768170 0.6821274 #>  [182,] 0.58654924 0.6695603 0.7227365 0.9427269 0.9542071 1.0465231 1.0545909 #>  [183,] 0.91203576 0.9810805 1.1808772 1.1861232 1.2792347 1.3745899 1.4081281 #>  [184,] 0.27628951 0.3139670 0.3317759 0.3447957 0.5150510 0.5326546 0.5462745 #>  [185,] 0.99038843 1.2107548 1.2786223 1.3234541 1.4037951 1.4173231 1.4513638 #>  [186,] 0.38115813 0.5538736 0.5622796 0.5990162 0.6375915 0.6390126 0.6582599 #>  [187,] 0.55354689 0.7216736 0.8246774 0.8249317 0.8479728 0.8678373 1.0326800 #>  [188,] 0.75555398 0.7819278 0.8277119 0.8303102 0.8366766 0.8489872 0.9120400 #>  [189,] 0.90811931 0.9870404 1.1385499 1.1595015 1.1717044 1.1798927 1.2254410 #>  [190,] 0.63452219 0.9564062 1.0410290 1.2147722 1.3531829 1.3575329 1.4151685 #>  [191,] 0.30791665 0.5252708 0.5363580 0.6394326 0.6539556 0.6576891 0.6845168 #>  [192,] 0.28073323 0.2932371 0.3292229 0.3327545 0.3587896 0.4271709 0.5313588 #>  [193,] 0.71330157 0.7225138 0.8143040 1.0163228 1.2140269 1.2830488 1.3342254 #>  [194,] 0.27450751 0.3981525 0.4249690 0.4475695 0.4621890 0.4689227 0.4710634 #>  [195,] 0.59043796 0.5919549 0.6764644 0.6998761 0.7765169 0.8201133 0.8469276 #>  [196,] 0.63447005 0.7867034 0.8733144 0.9144469 1.0400980 1.0548417 1.0646003 #>  [197,] 0.22100633 0.2943064 0.4109986 0.4449462 0.5054382 0.5116342 0.5139755 #>  [198,] 0.43102573 0.5538839 0.5900342 0.7599598 0.8398301 0.8774304 0.9069330 #>  [199,] 0.74704159 0.7866294 0.8105152 0.8340287 0.8447951 0.8914623 0.9266496 #>  [200,] 0.64629859 1.1230261 1.1916183 1.2467229 1.3628229 1.4526076 1.4966425 #>  [201,] 0.27973032 0.5356038 0.5370802 0.5719231 0.5780882 0.5908807 0.7115535 #>  [202,] 0.54164140 0.5944451 0.6607913 0.8881241 0.9573510 0.9643234 1.0058374 #>  [203,] 0.44843365 0.7791901 0.7941644 0.8626945 0.9230259 0.9425263 0.9900598 #>  [204,] 0.43060313 0.4495803 0.4822963 0.5360585 0.6188506 0.6889476 0.6928561 #>  [205,] 0.10003140 0.3059037 0.3301901 0.5890308 0.6123248 0.6255605 0.6583311 #>  [206,] 0.25504031 0.3035717 0.3179326 0.3354104 0.3407851 0.3829726 0.4123985 #>  [207,] 0.44890335 0.5999442 0.6254448 0.7477292 0.8317344 0.8646222 0.8748692 #>  [208,] 0.44311855 0.6244780 0.8590320 0.8610191 0.9102488 0.9102593 0.9574631 #>  [209,] 0.48937734 0.4991117 0.5616403 0.5764544 0.5809511 0.7162433 0.7167224 #>  [210,] 0.90615374 0.9232588 0.9773986 0.9866050 0.9966387 0.9979840 1.0134549 #>  [211,] 0.11312551 0.1267925 0.2222364 0.3179326 0.3762831 0.3983835 0.4217009 #>  [212,] 0.38372323 0.4367137 0.4940608 0.5237942 0.6046815 0.6627981 0.6768170 #>  [213,] 0.54974549 0.6406177 0.7126520 0.7571741 0.7817072 0.7831441 0.8245258 #>  [214,] 0.20170135 0.4164333 0.4817499 0.5686104 0.6382653 0.6387487 0.6494516 #>  [215,] 0.06237336 0.3281642 0.3812827 0.3891145 0.3983835 0.3996061 0.4015922 #>  [216,] 0.48430292 0.5266183 0.6895173 0.7314808 0.7401930 0.7531130 0.7617586 #>  [217,] 0.29820803 0.3343835 0.4596104 0.7014713 0.7889590 0.8211741 0.9390143 #>  [218,] 0.45961037 0.4850578 0.5135069 0.8192250 0.8495073 1.1631608 1.1666677 #>  [219,] 0.28852184 0.3258461 0.5962003 0.5989130 0.6401751 0.6619468 0.7115883 #>  [220,] 0.81608911 0.8273200 0.9132853 0.9310469 0.9944217 1.0334463 1.0592761 #>  [221,] 0.33730881 0.3696891 0.3868504 0.6416400 0.6471885 0.7151517 0.7456964 #>  [222,] 0.28240549 0.4186933 0.4763591 0.5538736 0.5628856 0.7180531 0.7423165 #>  [223,] 0.34686816 0.6057450 0.8550270 0.8582309 0.9428898 0.9448337 0.9504230 #>  [224,] 0.38005335 0.3800747 0.5707808 0.5814598 0.5917579 0.6160297 0.6740929 #>  [225,] 0.50724200 0.5791509 0.6155668 0.7044269 0.7119055 0.7171147 0.7200326 #>  [226,] 0.34060129 0.3728348 0.4318578 0.4603738 0.4989522 0.5047237 0.5208469 #>  [227,] 0.67293328 0.7926819 0.8288348 0.8639238 0.9145132 0.9174458 0.9296704 #>  [228,] 0.39909945 0.4774861 0.5818249 0.6575424 0.6630173 0.7007192 0.7013467 #>  [229,] 0.35963449 0.4071866 0.4491155 0.4558186 0.4603304 0.4707616 0.4748896 #>  [230,] 0.52288869 0.6134511 0.6152388 0.6440173 0.6458077 0.6721886 0.6904608 #>  [231,] 0.34692508 0.3696358 0.4285596 0.4459778 0.4520388 0.4953181 0.5257532 #>  [232,] 0.49806188 0.5881837 0.6159628 0.6601572 0.6640917 0.6830155 0.6922257 #>  [233,] 0.44605107 0.4532209 0.4849425 0.5023153 0.5258581 0.5963303 0.6231800 #>  [234,] 1.01533440 1.1124254 1.1546458 1.1748527 1.2084617 1.2408402 1.3453886 #>  [235,] 0.12916052 0.2450875 0.4654570 0.4704883 0.4812125 0.5295769 0.5406676 #>  [236,] 0.32508856 0.3625790 0.4190897 0.4452314 0.4709804 0.5389230 0.5998565 #>  [237,] 0.33783236 0.4303649 0.7334364 0.7482847 0.7555540 0.8200852 0.8460011 #>  [238,] 1.12980073 1.1659380 1.2242362 1.3482937 1.4116386 1.4518397 1.4650148 #>  [239,] 0.33391831 0.3739773 0.3858004 0.4045377 0.5003845 0.5344081 0.5698197 #>  [240,] 0.70094912 0.7048947 0.9262634 0.9306163 0.9710873 1.0201009 1.0432042 #>  [241,] 0.29325502 0.4363509 0.4644053 0.5001015 0.5214372 0.5924313 0.6660390 #>  [242,] 0.39248472 0.4706914 0.4845098 0.4893066 0.5515104 0.5597947 0.5737190 #>  [243,] 0.62569799 0.6356856 0.6785159 0.7225286 0.7352189 0.8171197 0.8975463 #>  [244,] 0.33260636 0.4059391 0.4690796 0.5371530 0.5681552 0.6011079 0.6312816 #>  [245,] 0.63531461 0.8447652 1.1166358 1.1904564 1.2426880 1.2432725 1.2478461 #>  [246,] 0.27426835 0.4104077 0.6103806 0.6226443 0.6306354 0.6523336 0.6596056 #>  [247,] 1.29239340 1.4888683 1.6737001 1.7334310 1.7934003 1.8219172 1.8551121 #>  [248,] 0.27608770 0.4539688 0.4557234 0.4880879 0.5076537 0.5096409 0.5316686 #>  [249,] 0.46992544 0.5395319 0.6651942 0.6953589 0.7547695 0.8004019 0.8548397 #>  [250,] 0.50251465 0.6330332 0.7665035 0.7921936 0.8017882 0.8548522 0.8750616 #>  [251,] 0.28240870 0.4210821 0.4790189 0.5847960 0.6252018 0.6623799 0.6691254 #>  [252,] 0.33438348 0.4659409 0.5135069 0.7255370 0.8548397 0.8984973 0.9192912 #>  [253,] 0.81777624 0.9259112 1.0573715 1.1592447 1.3565031 1.3643718 1.5323545 #>  [254,] 1.21438781 1.2405605 1.3919226 1.4311952 1.4921667 1.5213085 1.5907052 #>  [255,] 0.20054471 0.6171070 0.7126520 0.7915812 0.8563788 0.8616238 0.8968271 #>  [256,] 0.28971304 0.3707839 0.4562021 0.5891600 0.6088008 0.6193188 0.6833704 #>  [257,] 0.22106863 0.4885859 0.5307926 0.5836023 0.6677843 0.6695752 0.6819306 #>  [258,] 0.33652297 0.3654640 0.3685023 0.3694885 0.4383526 0.4496146 0.5150510 #>  [259,] 0.37369136 0.4856390 0.6180733 0.6608253 0.6630173 0.7611525 0.7939054 #>  [260,] 0.52661028 0.5608562 0.5640670 0.5816437 0.5881306 0.5921908 0.5996711 #>  [261,] 0.61507154 0.9807046 1.0457623 1.0946166 1.1438024 1.1734915 1.2761728 #>  [262,] 0.26076896 0.3348563 0.3510628 0.4511197 0.4839174 0.5049179 0.5238480 #>  [263,] 0.33730881 0.3394927 0.6208742 0.6654872 0.6840454 0.6937567 0.6962139 #>  [264,] 0.36966777 0.3973713 0.4542989 0.5927909 0.6500048 0.6581890 0.6660390 #>  [265,] 0.35791447 0.4634537 0.5305669 0.5425849 0.5639063 0.6147151 0.6407498 #>  [266,] 0.81923510 0.9166847 0.9464026 0.9483903 0.9682084 1.0608891 1.1418788 #>  [267,] 0.20170135 0.2818860 0.5366242 0.5829580 0.6764767 0.6900815 0.7014768 #>  [268,] 0.24374289 0.3265334 0.4895387 0.4953181 0.4988367 0.5161810 0.5579855 #>  [269,] 0.17310963 0.4342294 0.4374592 0.5098522 0.7026075 0.7082772 0.7981211 #>  [270,] 0.49294064 0.5528531 0.5958516 0.6749671 0.6963642 0.7031327 0.7483772 #>  [271,] 0.39004384 0.4728779 0.4894367 0.5478101 0.6084304 0.6367130 0.7009491 #>  [272,] 0.96158690 0.9807046 1.0822543 1.2235410 1.4534768 1.5295320 1.5985022 #>  [273,] 0.38153693 0.5701367 0.6088014 0.6737083 0.6835653 0.6851201 0.7709186 #>  [274,] 0.29820803 0.4659409 0.4850578 0.6278468 0.6955521 0.8864970 0.9338659 #>  [275,] 1.13704606 1.4258287 1.5959207 1.6483454 1.6991704 1.7075687 1.7086818 #>  [276,] 0.39782692 0.6251502 0.6574272 0.6592062 0.6838218 0.7016447 0.7110242 #>  [277,] 0.53664864 0.6032790 0.6688923 0.6834491 0.6905167 0.6999357 0.7009884 #>  [278,] 0.36546396 0.4274962 0.4588231 0.4893826 0.4945966 0.5056786 0.5213313 #>  [279,] 1.13653112 1.1557354 1.1714900 1.1821645 1.2183352 1.3090915 1.3598180 #>  [280,] 0.41257476 0.5070013 0.6945692 0.7144696 0.7305451 0.7763432 0.8036528 #>  [281,] 0.33972136 0.5340011 0.5622254 0.5779482 0.5921362 0.6941670 0.6942430 #>  [282,] 0.23733572 0.5584803 0.5879825 0.6020466 0.6335905 0.6375915 0.6638127 #>  [283,] 0.53605849 0.5465433 0.6373488 0.6810191 0.7091801 0.7161525 0.7388246 #>  [284,] 0.33594014 0.4734747 0.5573738 0.5831771 0.5854302 0.6925495 0.7268457 #>  [285,] 0.22077414 0.3702470 0.3883577 0.4777292 0.4803287 0.5365068 0.5503466 #>  [286,] 0.32269791 0.3485468 0.7829960 0.9164836 0.9204376 0.9282334 1.0599396 #>  [287,] 1.07387851 1.1251817 1.1320876 1.1763971 1.1872227 1.1988398 1.2381729 #>  [288,] 0.72168795 0.9007362 0.9877518 1.0168117 1.0353316 1.0890537 1.1570095 #>  [289,] 0.65754236 0.7286136 0.7758408 0.7764995 0.7820887 0.8103694 0.8373761 #>  [290,] 0.76789248 0.8628406 0.9223129 0.9429318 0.9565190 1.0160730 1.0257365 #>  [291,] 0.36743034 0.4234922 0.4342407 0.4687455 0.5234093 0.5257939 0.5441846 #>  [292,] 0.24974358 0.4476562 0.4540583 0.5037920 0.5153965 0.5363595 0.5450023 #>  [293,] 0.18381135 0.3444157 0.3902208 0.5127112 0.5514441 0.6321338 0.6543625 #>  [294,] 0.41231658 0.4903930 0.5288898 0.5526200 0.5821148 0.5878515 0.6042681 #>  [295,] 1.29238528 1.4141908 1.5575175 1.5793369 1.6154122 1.6558265 1.6737986 #>  [296,] 0.39934030 0.4525171 0.4817499 0.5008473 0.5366242 0.5947235 0.6016178 #>  [297,] 0.69661282 0.7439207 0.8171197 0.9312089 1.0279502 1.0334923 1.0578420 #>  [298,] 0.53147942 0.5422675 0.5748293 0.6056330 0.6171181 0.6821222 0.6889750 #>  [299,] 0.47084654 0.4844387 0.5009334 0.5181280 0.5183784 0.5222144 0.5373822 #>  [300,] 0.95011997 1.1029254 1.1383477 1.2956666 1.3396734 1.3726962 1.3910654 #>  [301,] 0.76221454 0.8079962 0.8253231 0.9242239 0.9350174 0.9663867 0.9907151 #>  [302,] 0.75395965 0.9810805 1.0186378 1.2388547 1.2415977 1.2998242 1.3013222 #>  [303,] 0.64380839 0.6980883 0.7210090 0.7590943 0.8555060 0.8885611 0.9475778 #>  [304,] 0.75395965 0.7600832 0.8039594 0.8685312 0.9023792 0.9101261 0.9242493 #>  [305,] 0.24662311 0.4542989 0.5214372 0.5406911 0.5883733 0.6341445 0.6662300 #>  [306,] 0.34807209 0.4022682 0.6623799 0.6761416 0.7182650 0.7288808 0.7418384 #>  [307,] 0.31024644 0.3259748 0.4354366 0.5918586 0.6231800 0.6592062 0.6711536 #>  [308,] 0.46025151 0.4674005 0.5609010 0.5652339 0.6268110 0.6698877 0.6765744 #>  [309,] 0.49624645 0.6406177 0.6413148 0.7595406 0.7629489 0.8036407 0.8073717 #>  [310,] 0.69626912 0.7910070 0.9042358 1.0192058 1.0221741 1.1553878 1.2236201 #>  [311,] 0.65225534 0.6536085 0.7571741 0.7867300 0.7986403 0.8487066 0.9161415 #>  [312,] 0.54962933 0.6949470 0.7349250 0.7435730 0.7651919 0.7832102 0.8028022 #>  [313,] 0.53405169 0.6677600 0.7043262 0.7991679 0.9121599 0.9533139 1.0051645 #>  [314,] 0.26848903 0.3064760 0.3268519 0.4449462 0.5370802 0.5489821 0.5818562 #>  [315,] 0.77439205 0.8243138 0.9166967 1.0284754 1.2299463 1.3120232 1.4414857 #>  [316,] 0.66299150 0.7172106 0.7535922 0.8243138 0.8806144 1.0829208 1.1235612 #>  [317,] 0.81023138 0.9081193 1.1859445 1.2024897 1.2851820 1.3157841 1.3264332 #>  [318,] 0.29637797 0.4068758 0.4324694 0.5090084 0.5279757 0.5315649 0.5754244 #>  [319,] 0.25504031 0.3329727 0.4704406 0.4723229 0.4732558 0.4735625 0.5063648 #>  [320,] 0.40274924 0.5223158 0.5707808 0.6885382 0.6892676 0.7200664 0.7596961 #>  [321,] 0.16813932 0.3426724 0.4340501 0.4646078 0.5595632 0.6310664 0.6378771 #>  [322,] 0.68681034 0.7062886 0.7765049 0.8630667 0.9206367 0.9859609 1.0488570 #>  [323,] 0.39497632 0.4281465 0.4773379 0.5455625 0.5973498 0.7207007 0.7345945 #>  [324,] 0.24922698 0.2962279 0.4310395 0.4421383 0.4649365 0.4897806 0.4986950 #>  [325,] 0.37311763 0.3993403 0.4276626 0.5641802 0.5672217 0.5840366 0.5918586 #>  [326,] 0.55701506 0.6583311 0.6824848 0.7195371 0.7219725 0.7413311 0.7470579 #>  [327,] 0.21652698 0.3078444 0.3434401 0.3587896 0.3977728 0.4005302 0.4280700 #>  [328,] 0.30948032 0.5764544 0.5863580 0.6173242 0.6663983 0.6992488 0.7275705 #>  [329,] 0.46072337 0.4634209 0.4978219 0.5539711 0.5687607 0.5940066 0.6161049 #>  [330,] 0.42814646 0.4346553 0.5305800 0.6527600 0.6768769 0.7664590 0.7708566 #>  [331,] 0.57449256 0.6561775 0.7981211 0.8297055 0.8971917 0.9977043 1.0156162 #>  [332,] 0.22545990 0.3933605 0.4051397 0.4511197 0.4676353 0.5200766 0.5342223 #>  [333,] 0.33252077 0.4071866 0.4806709 0.5610141 0.5975155 0.6051104 0.6170781 #>  [334,] 0.37529437 0.5833360 0.6770280 0.7234684 0.7415980 0.7488292 0.7664590 #>  [335,] 0.40496380 0.6488948 0.7093362 0.7187429 0.8103730 0.8628406 0.8692157 #>  [336,] 0.44305823 0.5403873 0.5792892 0.6152616 0.6905251 0.7059558 0.8035696 #>  [337,] 0.46745924 0.5371530 0.5579855 0.5712262 0.5919851 0.6964608 0.6997563 #>  [338,] 0.48361281 0.5143612 0.5935852 0.6202368 0.6276762 0.6457079 0.6805079 #>  [339,] 1.24204296 1.3598701 1.3661622 1.3917012 1.4744153 1.4861716 1.5059206 #>  [340,] 1.01361560 1.0165571 1.1252671 1.1794667 1.1798927 1.2219324 1.2537686 #>  [341,] 0.31305527 0.4772068 0.4933858 0.5373854 0.5805057 0.6314675 0.6456870 #>  [342,] 0.49806188 0.6274640 0.6373658 0.6878646 0.7132435 0.7157198 0.7530425 #>  [343,] 0.34290353 0.3933605 0.4080253 0.4479085 0.4528264 0.4709804 0.4984035 #>  [344,] 0.40884313 0.6634642 0.6968299 0.7384885 0.7389519 0.7704630 0.7708566 #>  [345,] 0.37798439 0.5882473 0.6775239 0.7136654 0.7514302 0.7521384 0.7884753 #>  [346,] 0.31408833 0.4401017 0.5322650 0.5752485 0.5879520 0.6068689 0.6953001 #>  [347,] 0.51260471 0.5702912 0.6061162 0.6468376 0.6704437 0.7367035 0.7921567 #>  [348,] 0.29642767 0.6171963 0.6962368 0.6972758 0.7254041 0.7423494 0.7631248 #>  [349,] 0.28755861 0.2880371 0.4068758 0.4563416 0.4745169 0.4794331 0.5534957 #>  [350,] 0.32140092 0.5363439 0.5465911 0.7136654 0.7669481 0.8366766 0.8891796 #>  [351,] 0.61690196 0.6512854 0.7495431 0.7764858 0.8249347 0.8431606 0.9070890 #>  [352,] 0.22409788 0.4048721 0.5748926 0.6642547 0.6673668 0.7922034 0.8308174 #>  [353,] 0.59398002 0.6721093 0.6906294 0.6933721 0.7356157 0.7390581 0.7472374 #>  [354,] 0.48161441 0.5606364 0.6787768 0.6905039 0.7272528 0.7504286 0.7979589 #>  [355,] 0.45459312 0.5414680 0.5999442 0.6058660 0.6289278 0.6533093 0.6594240 #>  [356,] 0.24084440 0.3130553 0.3981525 0.4094005 0.4129417 0.4510702 0.4862663 #>  [357,] 0.31408833 0.3835731 0.4481376 0.4696448 0.4754801 0.4774937 0.4823782 #>  [358,] 0.41717956 0.5791509 0.7227365 0.7890003 0.8622857 0.8654571 0.9507295 #>  [359,] 0.35395550 0.4543437 0.4997880 0.5150896 0.5284405 0.5907524 0.6379505 #>  [360,] 0.43899779 0.5709945 0.6254839 0.6311965 0.7009539 0.7424594 0.7809488 #>  [361,] 0.25551588 0.2958697 0.3365230 0.3376974 0.4588231 0.5291259 0.5462745 #>  [362,] 0.50935871 0.5835107 0.7349250 0.7359518 0.8781376 0.9050770 0.9116382 #>  [363,] 0.50846774 0.5186946 0.5294617 0.5333304 0.5723590 0.5884338 0.6731677 #>  [364,] 0.56381089 0.7133016 0.7760770 0.8163529 0.8485114 0.9401014 1.0988320 #>  [365,] 0.35590457 0.3688324 0.5940864 1.0784581 1.2539646 1.2680164 1.3063491 #>  [366,] 1.29239340 1.3845542 1.3943162 1.5401999 1.6853033 1.6853937 1.7610387 #>  [367,] 0.38153693 0.4009567 0.4349614 0.4837910 0.5463658 0.6838549 0.8303093 #>  [368,] 0.18227980 0.2628687 0.3545224 0.4729282 0.6899521 0.7551578 0.7902501 #>  [369,] 0.32007767 0.3334947 0.3983338 0.4034628 0.4650741 0.4940608 0.4961252 #>  [370,] 0.29586971 0.3685023 0.4220473 0.4226236 0.5056786 0.5114604 0.5359278 #>  [371,] 0.09735444 0.1643995 0.2685922 0.3602101 0.4963281 0.5153965 0.5315649 #>  [372,] 0.24801648 0.2487663 0.3670938 0.4482313 0.4738569 0.4838522 0.4937624 #>  [373,] 0.34912835 0.4832421 0.4955614 0.5440183 0.5664347 0.5778744 0.6227113 #>  [374,] 0.44923049 0.4506019 0.4522367 0.5013145 0.5174165 0.5317469 0.5325773 #>  [375,] 0.29430641 0.3101462 0.3999176 0.4911459 0.5719231 0.5818562 0.5878719 #>  [376,] 0.55395825 0.6570089 0.7526739 0.7673380 0.7754143 0.8004349 0.8284948 #>  [377,] 0.48962163 0.5855157 0.7199582 0.8285624 0.8378106 0.8473923 0.8546371 #>  [378,] 0.35220545 0.4224768 0.4715766 0.4828756 0.5231355 0.5745785 0.5853759 #>  [379,] 0.44541726 1.1327041 1.2307620 1.2391210 1.3141368 1.3292366 1.3315340 #>  [380,] 0.51508962 0.5543547 0.6093411 0.6908479 0.7061402 0.7175165 0.7342958 #>  [381,] 0.33131086 0.4479085 0.4849873 0.5065164 0.5565556 0.5811051 0.5854508 #>  [382,] 0.48127425 0.5761027 0.5822661 0.6129487 0.6188615 0.6342056 0.6581890 #>  [383,] 0.31893772 0.5029773 0.5516628 0.7106489 0.7250558 0.8215553 0.8446975 #>  [384,] 0.21949760 0.3075317 0.3449783 0.3708057 0.3730016 0.5921362 0.6060649 #>  [385,] 0.47099983 0.4763591 0.5206393 0.5366486 0.5727180 0.6114677 0.7296207 #>  [386,] 0.57579131 0.7559029 0.7810171 0.7845990 0.8149008 0.8176516 0.8282442 #>  [387,] 0.50853144 0.5381417 0.7482004 0.9401900 1.0108819 1.0184738 1.0322367 #>  [388,] 0.93864143 1.8242921 1.9479036 2.0371693 2.0422655 2.1518826 2.1571819 #>  [389,] 0.26967089 0.4573467 0.4989373 0.5660203 0.6032922 0.6812683 0.7221586 #>  [390,] 0.17310963 0.4494449 0.4702629 0.5190144 0.6018848 0.6470945 0.7853063 #>  [391,] 0.28535116 0.4598954 0.5159915 0.5544514 0.5729799 0.5836548 0.5836884 #>  [392,] 0.44006400 0.4545223 0.5553345 0.5672217 0.6282674 0.6570071 0.6878079 #>  [393,] 0.26119835 0.4284616 0.4385677 0.4481376 0.4653900 0.4845996 0.5752485 #>  [394,] 0.67062183 0.6711518 0.7039399 0.7624154 0.7889039 0.7893445 0.8160891 #>  [395,] 0.39208336 0.6182820 0.6729114 0.6788292 0.7762689 0.8236196 0.8605349 #>  [396,] 0.19537667 0.2995544 0.3115275 0.3327545 0.3662641 0.4508113 0.4591989 #>  [397,] 0.52321156 0.6400180 0.6494516 0.6934661 0.7014768 0.7082552 0.7182650 #>  [398,] 0.32508856 0.3959033 0.4528264 0.5086825 0.5862215 0.5979154 0.6103806 #>  [399,] 0.22267723 0.3810402 0.6448165 0.6925495 0.7042345 0.7385607 0.9583539 #>  [400,] 0.70645852 1.0817737 1.1110863 1.1371078 1.2634538 1.2680164 1.2872191 #>  [401,] 0.46970502 0.5072248 0.5189072 0.5520579 0.5754394 0.5987662 0.6340124 #>  [402,] 0.24720870 0.3115275 0.3476196 0.3883184 0.4301169 0.4635072 0.4635884 #>  [403,] 0.67917816 0.7290735 0.7388536 0.7437475 0.7596093 0.7823101 0.8581043 #>  [404,] 0.31306891 0.3268734 0.3543427 0.3825208 0.3998673 0.5198844 0.5292979 #>  [405,] 0.09947667 0.3226979 0.8001386 0.8321950 0.8457977 0.8462796 0.8975319 #>  [406,] 0.27513618 0.3064760 0.4130221 0.5385586 0.5703558 0.6174585 0.6253631 #>  [407,] 0.38119404 0.4410883 0.5765909 0.5905353 0.5915874 0.6098532 0.6280555 #>  [408,] 0.34843217 0.4005937 0.4545931 0.4617760 0.4951532 0.5811154 0.6000184 #>  [409,] 0.66626567 0.7533800 0.9525372 0.9829197 1.0109494 1.0195382 1.0337359 #>  [410,] 0.36787849 0.4391753 0.5446270 0.5512763 0.5651005 0.5719809 0.5726413 #>  [411,] 0.58654924 0.7249216 0.7609576 0.8208914 0.8275535 0.9535711 0.9638774 #>  [412,] 0.50808500 0.5894556 0.7159509 0.7609458 0.8287256 0.8578024 0.8845843 #>  [413,] 0.43102573 0.5641434 0.5717329 0.6324392 0.6696040 0.8022839 0.8137485 #>  [414,] 0.45002581 0.4729230 0.4856439 0.4962464 0.5847960 0.6345847 0.6749671 #>  [415,] 0.41231658 0.5232116 0.6184071 0.6572786 0.6694624 0.6953001 0.7353191 #>  [416,] 0.40496380 0.8436682 0.9223129 0.9593552 1.0114491 1.0161139 1.0263979 #>  [417,] 0.45338758 0.5301995 0.5411413 0.7299565 0.7769678 0.7809254 0.8121494 #>  [418,] 0.43060313 0.4362762 0.4399064 0.4482313 0.5406926 0.5775571 0.5844049 #>  [419,] 0.42680842 0.4375750 0.5905353 0.6068246 0.6187133 0.6263757 0.6519820 #>  [420,] 0.61715715 0.8004349 0.9330256 0.9852747 1.0251930 1.0574742 1.0954136 #>  [421,] 0.10923547 0.4702106 0.6130320 0.6658875 0.6867025 0.8160056 0.8222151 #>  [422,] 0.22108300 0.6254448 0.7147230 0.7523024 0.7777200 0.7953459 0.8168243 #>  [423,] 0.53634389 0.5437780 0.5651766 0.6361924 0.6776995 0.7296623 0.7547048 #>  [424,] 0.44541510 0.4856785 0.5631490 0.6115703 0.6283913 0.6374563 0.6409941 #>  [425,] 0.48690853 0.5717329 0.6378671 0.7609458 0.8093232 0.8579464 0.8816028 #>  [426,] 0.52661835 0.6154436 0.8121440 0.8456427 0.8529816 0.8834449 0.8947965 #>  [427,] 0.36002937 0.3625790 0.3853168 0.5086825 0.6283913 0.6520736 0.6533789 #>  [428,] 0.29042844 0.3237882 0.3912551 0.4464647 0.4489497 0.4649365 0.5612206 #>  [429,] 0.58635801 0.7651384 0.7803963 0.8070950 0.8135336 0.8866106 0.9240579 #>  [430,] 0.37078395 0.3882579 0.4392811 0.5462629 0.6608040 0.6630150 0.7192542 #>  [431,] 0.24508750 0.3011399 0.3705103 0.4083377 0.4777740 0.4876836 0.5060369 #>  [432,] 0.32553868 0.4385677 0.4814178 0.4820444 0.5770340 0.6253096 0.6407905 #>  [433,] 0.28852184 0.4143658 0.4848025 0.5304785 0.5337352 0.5563326 0.5878239 #>  [434,] 0.48608691 0.7170991 0.8685901 0.9388637 1.0277561 1.0347308 1.0417549 #>  [435,] 0.47144056 0.5835107 0.7435730 0.8416448 0.8591141 0.9476903 1.0316025 #>  [436,] 0.37188143 0.4852405 0.5988102 0.6303238 0.6427577 0.6454009 0.6462167 #>  [437,] 0.47144056 0.5093587 0.6459658 0.6845389 0.7651919 0.7896960 0.8590320 #>  [438,] 0.29635566 0.3193165 0.4094005 0.4581317 0.4772068 0.4964958 0.5074154 #>  [439,] 0.54079656 0.5974044 0.6888741 0.7182201 0.7664387 0.8558658 0.8734015 #>  [440,] 0.23682031 0.3754397 0.4978011 0.5054382 0.5279458 0.5694941 0.6035025 #>  [441,] 0.45421022 0.5258581 0.5701367 0.6138898 0.6216291 0.6698877 0.6838549 #>  [442,] 0.44746081 0.5789564 0.6953124 0.7582491 0.8385104 0.8605995 0.9221451 #>  [443,] 0.32974383 0.4112725 0.4459778 0.4482244 0.4649680 0.4933310 0.4937815 #>  [444,] 0.66621570 0.6788292 0.8582302 0.9243025 0.9598654 0.9703377 0.9709874 #>  [445,] 0.70791747 0.7234684 0.8258075 0.8597225 0.8886085 0.9022910 0.9180712 #>  [446,] 0.42276842 0.4401017 0.4947276 0.5106841 0.5368285 0.6089069 0.6348874 #>  [447,] 0.83492003 0.9088732 1.0306524 1.0574742 1.1990561 1.2488621 1.2649238 #>  [448,] 0.44776236 0.4539749 0.4871813 0.5000402 0.5527208 0.6249938 0.6726794 #>  [449,] 0.32383604 0.3596225 0.3786821 0.3827064 0.4454712 0.4634209 0.5496486 #>  [450,] 0.38005335 0.6115126 0.6332588 0.6608800 0.6731677 0.7154684 0.7427603 #>  [451,] 0.49955345 0.5217625 0.6287274 0.7364784 0.7821367 0.7896862 0.7991139 #>  [452,] 0.44843365 0.6890355 0.7003725 0.8859169 0.9422914 0.9878866 0.9903884 #>  [453,] 0.65241597 0.6661856 0.7167543 0.7188518 0.7966171 0.8309766 0.8488746 #>  [454,] 0.84876762 0.9868547 1.1819139 1.3950315 1.5858408 1.6005290 1.6359459 #>  [455,] 1.36577127 1.3843869 1.4250266 1.5322835 1.6547455 1.6717012 1.6820612 #>  [456,] 0.48324206 0.6151802 0.6274234 0.6522795 0.6845077 0.6872424 0.7305109 #>  [457,] 0.31900930 0.3357817 0.3830015 0.3929281 0.5006990 0.5450023 0.6276767 #>  [458,] 0.60693868 0.6142428 0.6241196 0.6493884 0.6627420 0.6984207 0.6984577 #>  [459,] 0.32211610 0.3339183 0.3557713 0.4183582 0.4302828 0.5245298 0.5467388 #>  [460,] 0.19341692 0.4276626 0.4525171 0.5227236 0.5523478 0.5745780 0.5745785 #>  [461,] 0.64089560 0.7470248 0.7550746 0.7969239 0.8432737 0.8961031 0.9069736 #>  [462,] 0.29319277 0.3237882 0.3751299 0.4310395 0.5136632 0.5337352 0.5342223 #>  [463,] 0.37023334 0.4664477 0.4729282 0.5588034 0.6607836 0.6955521 0.7014713 #>  [464,] 0.45620212 0.4668217 0.5462629 0.6720855 0.7482004 0.8634906 0.8844336 #>  [465,] 0.24720870 0.2542870 0.3576303 0.3795024 0.4539024 0.4591989 0.4690910 #>  [466,] 0.64682952 0.8684918 0.9166079 0.9672860 1.0664163 1.1059965 1.1620329 #>  [467,] 0.48779350 0.5309943 0.5359278 0.5445531 0.5473396 0.5630037 0.6123769 #>  [468,] 0.62087423 0.6403486 0.7456964 0.7876171 0.8288348 0.8901753 0.8970963 #>  [469,] 0.32392523 0.4009567 0.4736812 0.5407966 0.6761028 0.7709186 0.7909290 #>  [470,] 0.33410271 0.3602101 0.3811940 0.4176599 0.5887298 0.5897343 0.5957929 #>  [471,] 0.43551182 0.5974044 0.6632949 0.7499269 0.7884919 0.8253955 0.8844909 #>  [472,] 0.35590767 0.4483156 0.6494621 0.6983874 0.7362281 0.7375164 0.7922034 #>  [473,] 0.39803275 0.5992495 0.6531805 0.6585220 0.7083886 0.7447751 0.7627611 #>  [474,] 0.58095112 0.8079631 0.8845792 0.8866106 0.9367020 0.9369434 0.9379061 #>  [475,] 0.23475421 0.2760877 0.3409990 0.3948229 0.4966375 0.5095389 0.5123130 #>  [476,] 0.21079022 0.2847961 0.3795024 0.3961501 0.4737675 0.4922347 0.5038922 #>  [477,] 0.34845023 0.5750459 0.6461084 0.6661910 0.6753847 0.6997147 0.7056563 #>  [478,] 0.37369136 0.4967457 0.6916681 0.8425120 0.8439728 0.8662343 0.8904128 #>  [479,] 0.38685041 0.5022339 0.5283609 0.6269648 0.6654872 0.6671049 0.7003725 #>  [480,] 0.46510183 0.5221078 0.5276297 0.5568643 0.6867025 0.7228440 0.7499718 #>  [481,] 0.81969029 0.8487676 1.0483501 1.1214421 1.1278473 1.1283908 1.2782696 #>  [482,] 0.57516998 0.5757913 0.7159509 0.8736365 0.8783517 0.9340972 0.9761146 #>  [483,] 0.34692508 0.3718814 0.4482244 0.4895387 0.5219703 0.5234472 0.5257872 #>  [484,] 0.38696697 0.4628732 0.5000402 0.5374600 0.5459436 0.6472290 0.6877147 #>  [485,] 0.16439948 0.2498900 0.2988781 0.4176599 0.5037920 0.5157016 0.5392325 #>  [486,] 0.34030982 0.4901726 0.5482922 0.5601770 0.6193188 0.6259196 0.6440088 #>  [487,] 0.55754391 0.5944213 0.6033579 0.6704437 0.6808664 0.7335049 0.7403238 #>  [488,] 0.25133538 0.4443798 0.4648210 0.5584803 0.5792860 0.6006691 0.6262179 #>  [489,] 0.49939029 0.9042358 0.9869404 1.0352499 1.0958096 1.1982346 1.2024153 #>  [490,] 0.26848903 0.2751362 0.3866042 0.4603304 0.4920667 0.5116342 0.5694941 #>  [491,] 0.45338758 0.4628732 0.4766672 0.4785397 0.5435317 0.6404052 0.6528009 #>  [492,] 0.06237336 0.3477464 0.3880287 0.3953375 0.4058201 0.4217009 0.4375315 #>  [493,] 0.50320193 0.5278967 0.6662657 0.7221586 0.8790858 0.8974759 0.9259112 #>  [494,] 0.41725517 0.7712000 0.9655644 1.0494649 1.0505241 1.0766536 1.0784581 #>  [495,] 0.64889483 0.6743910 0.7559029 0.7782274 0.8139841 0.8323148 0.8783517 #>  [496,] 0.54678614 0.5535337 0.6118889 0.6651110 0.7261063 0.7596047 0.7894546 #>  [497,] 0.55124445 0.6939378 0.6977846 0.7895905 0.7966171 0.8033248 0.8074622 #>  [498,] 0.50144395 0.6847664 0.6969554 0.7091463 0.8106788 0.8200852 0.8572229 #>  [499,] 0.37051035 0.4210599 0.4899391 0.4939959 0.4983507 0.5406676 0.5795338 #>  [500,] 0.31113817 0.3615387 0.3671852 0.4232905 0.4563416 0.4620479 0.4635884 #>  [501,] 0.53825160 0.5459779 0.6280460 0.6924446 0.7568228 0.7892671 0.8036528 #>  [502,] 0.52931883 0.8969079 0.9968713 1.0395719 1.0578349 1.0634395 1.1303126 #>  [503,] 0.47248714 0.6310241 0.7216736 0.7504132 0.8345010 0.8454624 1.0063189 #>  [504,] 0.52931883 0.6243000 0.7516564 0.7880437 0.7937682 0.9845884 1.0310843 #>  [505,] 0.30393189 0.3698819 0.5478101 0.6592532 0.6831940 0.6972829 0.7144538 #>  [506,] 0.33252077 0.3596345 0.5531750 0.6440928 0.6814544 0.6903546 0.7028737 #>  [507,] 0.57928598 0.6020466 0.6304755 0.6390560 0.6695092 0.7050962 0.7280623 #>  [508,] 0.45833158 0.5465433 0.6225515 0.6276762 0.6467093 0.7109740 0.7166012 #>  [509,] 0.09947667 0.3485468 0.7632786 0.7674675 0.7859732 0.8005760 0.8604517 #>  [510,] 0.18381135 0.3351454 0.3970639 0.5615803 0.5627866 0.5664100 0.5669617 #>  [511,] 0.39022080 0.3970639 0.4661092 0.4678759 0.4899688 0.5100996 0.5550125 #>  [512,] 0.53230148 0.6169020 0.6316734 0.6911593 0.7503487 0.7988429 0.8873055 #>  [513,] 0.36787849 0.4433932 0.5123701 0.5163462 0.5200766 0.5283657 0.5555014 #>  [514,] 0.34094852 0.5981455 0.6464731 0.6866165 0.7137906 0.7225741 0.7395848 #>  [515,] 0.80344391 0.8630667 1.1683663 1.3592922 1.4349638 1.4362062 1.4400782 #>  [516,] 0.31159683 0.3522055 0.3880748 0.4653283 0.5014736 0.5129551 0.5637473 #>  [517,] 0.91668472 1.3327206 1.5538704 1.5769228 1.6031075 1.6222512 1.6684567 #>  [518,] 0.94412251 1.0591445 1.1761411 1.1854044 1.1897699 1.3116275 1.3133568 #>  [519,] 0.98527468 1.1694971 1.2129245 1.2390439 1.2887453 1.3163962 1.3173377 #>  [520,] 0.46597163 0.4997880 0.5298714 0.6108752 0.6363253 0.7342958 0.7406868 #>  [521,] 0.32883836 0.4340501 0.4441427 0.5049179 0.5356627 0.5463308 0.5463553 #>  [522,] 0.41510745 0.4539908 0.4870129 0.5365264 0.5504471 0.5981455 0.6373228 #>  [523,] 0.48517727 0.5171287 0.5309943 0.5754646 0.6457647 0.6661910 0.7109639 #>  [524,] 0.50370288 0.5082238 0.5266103 0.5295769 0.5615803 0.5983068 0.6169582 #>  [525,] 0.33260636 0.4078948 0.4896928 0.5712262 0.5896991 0.5992495 0.6843639 #>  [526,] 0.21954762 0.4078500 0.4364468 0.4872984 0.5038922 0.5577248 0.5588127 #>  [527,] 0.43496138 0.4736812 0.4969121 0.6088014 0.7383476 0.7388536 0.8452982 #>  [528,] 0.50622716 0.7115883 0.7561523 0.7939253 0.8589876 0.8628233 0.8928196 #>  [529,] 1.12673922 1.1418788 1.1730725 1.2156419 1.2568805 1.4033703 1.4874820 #>  [530,] 0.42985970 0.4367069 0.4803287 0.4871813 0.5808182 0.5854055 0.5996100 #>  [531,] 0.09735444 0.2498900 0.3251459 0.3341027 0.4677349 0.4758479 0.5279757 #>  [532,] 0.39936129 0.5245298 0.5780882 0.5865099 0.6181735 0.6472878 0.6562880 #>  [533,] 0.57039098 0.5868205 0.6848366 0.6862098 0.7083190 0.7427603 0.7896585 #>  [534,] 0.64089560 0.6899564 0.8084389 0.8514195 0.8622857 0.8777900 0.8957253 #>  [535,] 0.30470045 1.2725945 1.3426851 1.4326772 1.6159267 1.6244261 1.6268977 #>  [536,] 0.32685192 0.3866042 0.4748896 0.5385586 0.5441506 0.5858956 0.5956980 #>  [537,] 0.20162376 0.4582870 0.5316626 0.5981495 0.6197338 0.6224469 0.6322752 #>  [538,] 0.52288869 0.6949470 0.7062886 0.7611029 0.7786382 0.8289895 0.8305625 #>  [539,] 0.23574938 0.4129417 0.4475695 0.4591229 0.4634613 0.5627260 0.5818249 #>  [540,] 0.63531461 0.7644017 0.8021161 0.8335198 0.8386558 0.8971342 0.9001532 #>  [541,] 0.54753384 0.5670843 0.5816437 0.5907524 0.6020736 0.6031566 0.6127065 #>  [542,] 0.52578720 0.5629231 0.5960943 0.6007677 0.6226353 0.6383685 0.6427577 #>  [543,] 0.47597233 0.4886666 0.5132524 0.5514441 0.5516628 0.5681552 0.5791913 #>  [544,] 0.56381089 0.8143040 0.8492719 0.9528959 1.0441546 1.0736234 1.0907104 #>  [545,] 0.32883836 0.3348563 0.3885606 0.4342407 0.4646078 0.4705474 0.6012904 #>  [546,] 0.50808500 0.5638367 0.6324392 0.6998557 0.7505116 0.8121494 0.8398301 #>  [547,] 0.42855963 0.4452314 0.4737793 0.4765969 0.4964849 0.5206415 0.5285273 #>  [548,] 0.17942583 0.2807332 0.2995544 0.3434401 0.3476196 0.3671852 0.4308946 #>  [549,] 0.37288401 0.3869800 0.3915273 0.5627468 0.6127318 0.6366010 0.6563790 #>  [550,] 0.43899779 0.5139957 0.6018848 0.6249738 0.6287948 0.6381425 0.6435659 #>  [551,] 0.37136708 0.4872984 0.4929406 0.5249321 0.5527208 0.5860477 0.6294567 #>  [552,] 0.40154463 0.4901726 0.5143612 0.6002055 0.6316734 0.6467093 0.6672760 #>  [553,] 0.41032094 0.4338906 0.5114604 0.5213313 0.5702912 0.5793294 0.5868191 #>  [554,] 0.61207082 0.6356856 0.9777710 1.0334923 1.0413625 1.0530805 1.0570600 #>  [555,] 0.65735374 0.7298871 0.7612954 0.7693236 0.7823841 0.8612136 0.8951056 #>  [556,] 0.82532308 0.8824587 0.9581371 0.9704481 0.9987939 1.0575615 1.0826735 #>  [557,] 0.58485103 0.5940864 0.8873071 0.9446060 1.0778728 1.1194408 1.1254942 #>  [558,] 0.27584498 0.4310662 0.4479354 0.4989522 0.6223665 0.6253353 0.6278912 #>  [559,] 0.36529757 0.5342967 0.5392626 0.5833360 0.6082396 0.6491269 0.6496460 #>  [560,] 0.46539004 0.5526200 0.5703635 0.5862418 0.6022199 0.6095159 0.6563564 #>  [561,] 0.44017160 0.5245134 0.5738386 0.6307619 0.6313366 0.6360160 0.6475988 #>  [562,] 0.07895498 0.3853168 0.5283547 0.5592689 0.5990162 0.5998565 0.6335905 #>  [563,] 0.37991572 0.5515104 0.5957728 0.6056011 0.6255535 0.6870038 0.6929691 #>  [564,] 0.33565014 0.4034628 0.4062576 0.4625721 0.4792933 0.5378948 0.5484070 #>  [565,] 0.41566115 0.4773379 0.5305800 0.5366391 0.5931640 0.5995118 0.6071552 #>  [566,] 0.33759104 0.5736083 0.6960458 0.7272528 0.7811635 0.8647367 0.9266486 #>  [567,] 0.33117431 0.3489172 0.4802036 0.5085962 0.5297408 0.5759844 0.5836742 #>  [568,] 0.40226815 0.4612980 0.5508784 0.6305609 0.6525286 0.7110701 0.7167933 #>  [569,] 0.46510183 0.5307926 0.6552041 0.6976277 0.7074585 0.7215687 0.7446527 #>  [570,] 0.28803713 0.3462286 0.3615387 0.3740513 0.3883577 0.4959996 0.5199157 #>  [571,] 0.96081269 0.9825784 1.0243410 1.0467482 1.0621579 1.0729310 1.1166358 #>  [572,] 0.94555806 0.9739695 1.0011973 1.0118914 1.0219638 1.0477774 1.1310833 #>  [573,] 0.54659111 0.6868776 0.7024939 0.7180177 0.7268457 0.7385607 0.7884753 #>  [574,] 0.48579543 0.6269388 0.6607913 0.7234755 0.7730891 0.7859525 0.7875099 #>  [575,] 0.61777408 0.7079175 0.7772716 0.7877252 0.7983004 0.9079850 0.9137995 #>  [576,] 0.57075575 0.6196462 0.6492226 0.6506539 0.7061402 0.7213573 0.7297972 #>  [577,] 0.27628951 0.3787048 0.4177351 0.5245070 0.5291259 0.5533164 0.6358749 #>  [578,] 0.30784444 0.3171310 0.3914726 0.4384595 0.4393406 0.4874823 0.5199157 #>  [579,] 0.79916792 0.8121440 0.8880938 0.9096114 0.9096943 0.9661753 0.9796045 #>  [580,] 0.35590457 0.5025390 0.5848510 1.0505241 1.0817737 1.2132010 1.2291087 #>  [581,] 0.61363132 0.6892273 0.7291713 0.9067939 0.9138330 1.0062534 1.0106239 #>  [582,] 0.40100029 0.4430582 0.5327354 0.5728408 0.6838218 0.6848717 0.7332377 #>  [583,] 0.29325502 0.4438248 0.4794423 0.5406911 0.5883113 0.6407702 0.6566496 #>  [584,] 0.85823094 0.9547874 0.9609488 1.1813792 1.2403055 1.3017068 1.3701424 #>  [585,] 0.48173155 0.6561775 0.7531662 0.7611029 0.8109269 0.8141573 0.8590952 #>  [586,] 0.29042844 0.2931928 0.4676353 0.4889940 0.4897806 0.4916994 0.4990087 #>  [587,] 0.28997550 0.3202526 0.4885859 0.5440183 0.5981166 0.6668754 0.6845077 #>  [588,] 0.37512992 0.3912551 0.4586803 0.4665327 0.4673333 0.4916994 0.4986950 #>  [589,] 0.28229404 0.4080375 0.5037654 0.5186946 0.5199340 0.5712106 0.5728238 #>  [590,] 0.28240549 0.4228273 0.4786090 0.5727180 0.6362677 0.7046850 0.7208250 #>  [591,] 0.45643557 0.6130320 0.6171963 0.6832441 0.6837159 0.6980883 0.7060400 #>  [592,] 0.30367763 0.5029773 0.6671049 0.7517717 0.7646562 0.7845348 0.7944743 #>  [593,] 0.21070972 0.3384022 0.3785243 0.3786821 0.4555315 0.4677938 0.4774937 #>  [594,] 1.34818441 1.3815293 1.4199785 1.4272489 1.4283877 1.5807197 1.7464575 #>  [595,] 0.36743034 0.3934743 0.4388808 0.4839174 0.4849873 0.5180385 0.5465269 #>  [596,] 0.22040512 0.4143658 0.4438248 0.4644053 0.5164599 0.5243824 0.5701952 #>  [597,] 0.55044708 0.6074715 0.6446556 0.6525094 0.7225741 0.7904959 0.8473969 #>  [598,] 0.26859222 0.2988781 0.3251459 0.3543427 0.4324694 0.4821423 0.5041405 #>  [599,] 0.60809108 0.6244780 0.6345222 0.7327203 0.8085403 0.9618540 0.9850236 #>  [600,] 0.32392523 0.4837910 0.4969121 0.6888741 0.8121883 0.9031963 0.9425263 #>  [601,] 0.55354689 0.8196903 0.9868547 0.9965006 1.0305637 1.1118281 1.1728342 #>  [602,] 0.39485174 0.4462037 0.4951188 0.6195973 0.6446448 0.7701823 0.7762689 #>  [603,] 0.32826488 0.3958385 0.4318778 0.5485289 0.5827911 0.6948395 0.7147556 #>  [604,] 0.34912835 0.4995535 0.5836023 0.5981166 0.6013729 0.6034659 0.6274234 #>  [605,] 1.49664249 1.8496952 2.0096300 2.0725958 2.1701970 2.2781757 2.3136778 #>  [606,] 0.64682952 0.9341561 1.0207513 1.1040754 1.2550670 1.2698465 1.2762658 #>  [607,] 0.15111626 0.1903874 0.4539908 0.4590173 0.4705337 0.5369885 0.6178069 #>  [608,] 0.22864131 0.3900438 0.4587650 0.4856176 0.6831940 0.6837716 0.6961563 #>  [609,] 0.18227980 0.2080745 0.3702333 0.4466468 0.6524619 0.7613234 0.7929139 #>  [610,] 0.23333126 0.3730016 0.4996293 0.5037734 0.5256317 0.6018686 0.6857102 #>  [611,] 0.63032824 0.8093232 0.9893157 1.0413952 1.0696304 1.0971862 1.1662908 #>  [612,] 0.61507154 0.9615869 1.0776593 1.1173290 1.2419306 1.2822610 1.3503243 #>  [613,] 0.65225534 0.8512373 0.9815122 1.0045054 1.0184738 1.1420607 1.1444335 #>  [614,] 0.22409788 0.5067289 0.5407679 0.6465144 0.6660228 0.7316279 0.7362281 #>  [615,] 0.51555616 0.6054975 0.6695603 0.7025012 0.7249216 0.7321076 0.8482498 #>  [616,] 0.51672431 0.6550520 0.7182382 0.7393256 0.7710876 0.7740450 0.8249499 #>  [617,] 0.51680450 0.5709945 0.6474719 0.6621922 0.6724607 0.7536086 0.7678067 #>  [618,] 0.89513853 0.9664746 0.9767148 1.0234306 1.0592273 1.1474101 1.1917176 #>  [619,] 0.59469549 0.7379103 0.7910070 0.7944743 0.8322069 0.8384132 0.8499127 #>  [620,] 0.22106863 0.2899755 0.5857375 0.6013729 0.6393391 0.6552041 0.6555343 #>  [621,] 0.26722816 0.3159233 0.4318778 0.4737793 0.4937624 0.5835952 0.6182883 #>  [622,] 0.93864143 1.6222512 1.7188261 1.7203726 1.7741511 1.9740237 2.0365869 #>  [623,] 0.10923547 0.4898170 0.6086725 0.6618634 0.6832441 0.7600538 0.7651050 #>  [624,] 0.22864131 0.2845722 0.4894367 0.5626413 0.6305609 0.6803849 0.6963642 #>  [625,] 0.24350200 0.4846456 0.4971354 0.5745780 0.6017397 0.6446369 0.6585220 #>  [626,] 0.56063640 0.5690961 0.6484875 0.7576757 0.7799516 0.8205423 0.8513085 #>  [627,] 0.55482422 0.6034473 0.6592532 0.6662566 0.6947335 0.6997244 0.8174459 #>  [628,] 0.81075558 0.9988321 1.1290720 1.1686155 1.1852841 1.2587961 1.3429944 #>  [629,] 0.22687733 0.5327354 0.5720845 0.6152616 0.7265991 0.7529844 0.7721954 #>  [630,] 0.40312142 0.4210821 0.5703635 0.7340112 0.7395394 0.7427503 0.7782274 #>  [631,] 0.90697365 0.9351053 0.9427269 1.0432161 1.0942546 1.1655722 1.1761009 #>  [632,] 1.26855356 1.5791233 1.8276209 1.8640158 1.8711566 1.8916955 1.9680883 #>  [633,] 0.40125763 0.4713086 0.5168595 0.5467861 0.5687607 0.7276153 0.7550746 #>  [634,] 0.33840217 0.3596225 0.3750589 0.3781133 0.3835731 0.4361780 0.4697050 #>  [635,] 0.68695584 0.7361906 0.7673058 0.9043579 0.9978841 1.0346011 1.0686940 #>  [636,] 0.32140092 0.5437780 0.7024939 0.7654722 0.8282490 0.8391149 0.8408645 #>  [637,] 0.38932290 0.4590173 0.4697668 0.4992401 0.5075515 0.5148419 0.5726335 #>  [638,] 1.34332845 1.4220946 1.7877293 1.8597680 2.0193376 2.1111164 2.1203628 #>  [639,] 0.49430077 0.6500655 0.6819306 0.7364784 0.7900450 0.7907647 0.7977892 #>  [640,] 0.48327632 0.5017794 0.5131819 0.5530109 0.5600523 0.5612206 0.5847446 #>  [641,] 0.47853974 0.5301995 0.5660861 0.5974075 0.6181783 0.6332938 0.6895173 #>  [642,] 0.48576028 0.7561523 0.8475781 0.9997488 1.0093845 1.0238191 1.0298188 #>  [643,] 0.30948032 0.4338540 0.4604031 0.4991117 0.5025751 0.5531750 0.5975155 #>  [644,] 0.57840820 0.6287274 0.6689162 0.7306226 0.7352189 0.7674604 0.8898773 #>  [645,] 0.39738666 0.4093280 0.4756781 0.5120740 0.6322752 0.6515822 0.6638023 #>  [646,] 0.57082109 0.5711022 0.5844039 0.5867124 0.5904380 0.6495057 0.7098346 #>  [647,] 0.20807446 0.2628687 0.3569206 0.4664477 0.5883113 0.6638472 0.6759193 #>  [648,] 0.66891622 0.7843013 0.8044579 0.8604399 0.9169565 0.9675974 0.9945895 #>  [649,] 0.26615415 0.3281155 0.5514441 0.5669617 0.6260375 0.6834318 0.7600832 #>  [650,] 0.39903161 0.6472784 0.6524160 0.7329071 0.7580904 0.8227689 0.8797244 #>  [651,] 0.39850689 0.3999908 0.4612980 0.4994111 0.6400180 0.7288808 0.7688400 #>  [652,] 0.40468905 0.4669716 0.4944642 0.5077918 0.5163462 0.5230586 0.5623779 #>  [653,] 0.43503499 0.4794331 0.4997785 0.5090084 0.6212544 0.6834059 0.6976278 #>  [654,] 0.44437983 0.4948097 0.5187617 0.5649967 0.5714534 0.6163742 0.6610257 #>  [655,] 0.38115813 0.4297941 0.4849425 0.5257939 0.5263178 0.5283547 0.5465269 #>  [656,] 0.48690853 0.5751700 0.5894556 0.7752320 0.8022839 0.8176516 0.8623242 #>  [657,] 0.68347607 0.6869558 0.9565875 1.0352665 1.0536770 1.0892556 1.0909307 #>  [658,] 0.30815966 0.3999908 0.4719857 0.7456341 0.7523707 0.7630445 0.8097090 #>  [659,] 0.22108300 0.4489033 0.6742071 0.6890226 0.7189989 0.7475399 0.8438530 #>  [660,] 0.56359661 0.7321369 0.7517717 0.8384132 0.8482179 0.9689982 0.9766013 #>  [661,] 0.51830626 0.6709897 0.6742071 0.7411336 0.7523024 0.7761889 0.8493967 #>  [662,] 0.35791447 0.5340011 0.5569478 0.6885504 0.7140706 0.7227091 0.7390581 #>  [663,] 0.40593907 0.4896928 0.5252708 0.5791913 0.6387487 0.6481609 0.6609956 #>  [664,] 0.47638577 0.6558929 0.6562880 0.6651110 0.6769685 0.6937567 0.6945005 #>  [665,] 0.31727001 0.6027473 0.6629915 0.6926599 0.7495709 0.7743920 0.8340287 #>  [666,] 0.28586965 0.5298714 0.6106632 0.6456784 0.7119055 0.7415707 0.7425765 #>  [667,] 0.29637797 0.4758479 0.4963281 0.5363595 0.5425230 0.5554706 0.5906419 #>  [668,] 0.49338839 0.6916681 0.7754143 0.8500907 0.8669439 0.8716590 0.8806144 #>  [669,] 0.57543940 0.5868935 0.5877114 0.5946965 0.6227113 0.6822198 0.7334364 #>  [670,] 0.50069897 0.5159915 0.5544995 0.5845806 0.5966526 0.5996100 0.6040524 #>  [671,] 0.33565014 0.3801970 0.4210599 0.4621890 0.4737834 0.4876836 0.5464351 #>  [672,] 0.26516673 0.2962279 0.3371077 0.3648472 0.5238480 0.5433736 0.5470830 #>  [673,] 0.17942583 0.2165270 0.2932371 0.3111382 0.3914726 0.4508113 0.4738496 #>  [674,] 0.35452237 0.3569206 0.4466468 0.5588034 0.6601343 0.7009634 0.7322632 #>  [675,] 0.95260863 1.1181000 1.1474101 1.1885318 1.2723673 1.3089299 1.3687226 #>  [676,] 0.28586965 0.3907500 0.4284616 0.5072420 0.6253096 0.6363253 0.6563564 #>  [677,] 0.99770428 1.0411160 1.1462040 1.1678287 1.3122076 1.3857536 1.4289189 #>  [678,] 0.49338839 0.6074715 0.7698627 0.7939054 0.8284948 0.8439728 0.8990936 #>  [679,] 0.38007468 0.5128412 0.5426621 0.6608800 0.7596961 0.7696871 0.7710148 #>  [680,] 1.38794544 1.4170368 1.4193823 1.5967588 1.6683844 1.7461114 1.7624131 #>  [681,] 0.61026154 0.6242248 0.6289278 0.8028022 0.8037880 0.8416448 0.8472093 #>  [682,] 0.39738666 0.4284691 0.5573738 0.6093244 0.6836299 0.6840146 0.7118560 #>  [683,] 0.59471789 0.6113297 0.6514013 0.6702565 0.6704382 0.6945005 0.6962139 #>  [684,] 0.45223665 0.4829402 0.5075515 0.5237481 0.5350373 0.5417799 0.5493696 #>  [685,] 0.21954762 0.2678503 0.4354622 0.4364238 0.4737675 0.5249321 0.5373822 #>  [686,] 0.42560710 0.4397339 0.6292521 0.6548094 0.6605103 0.6787435 0.7135317 #>  [687,] 1.08095059 1.3882412 1.4790959 1.5267807 1.5771856 1.6176868 1.6268977 #>  [688,] 0.21030639 0.3035717 0.3329727 0.3804234 0.4046890 0.4385573 0.4639020 #>  [689,] 0.36111471 0.4284691 0.4734747 0.5106841 0.6849461 0.7090135 0.7574482 #>  [690,] 0.63829921 0.7294524 0.7765049 0.8021271 0.9039790 0.9217747 0.9590314 #>  [691,] 0.13606329 0.6099044 0.9045556 0.9681261 0.9821073 1.0025725 1.0280949 #>  [692,] 0.50014270 0.6207879 0.6246332 0.6471684 0.6914897 0.7480002 0.7504286 #>  [693,] 0.53405169 0.6349802 0.6721093 0.7437694 0.8292968 0.8354859 0.9182706 #>  [694,] 0.29720093 0.3426724 0.6114577 0.6186931 0.6223665 0.6493819 0.6992488 #>  [695,] 0.20162376 0.3571738 0.3711012 0.5367162 0.5596128 0.5758611 0.5966214 #>  [696,] 0.50876598 0.6890355 0.7188794 0.7885646 0.9145132 0.9366355 0.9508817 #>  [697,] 0.92325879 1.0925516 1.1035301 1.1208265 1.1719330 1.2174247 1.2644375 #>  [698,] 0.16245955 0.4329772 0.7049578 0.7098346 0.7200664 0.7213135 0.7850071 #>  [699,] 0.71885179 0.8743122 0.9120358 0.9443951 0.9640852 1.0658121 1.0838532 #>  [700,] 0.32584609 0.4848025 0.5062272 0.5749020 0.6064117 0.7912766 0.8019565 #>  [701,] 0.56494478 0.6125103 0.6136313 0.7267707 0.7505349 0.7643021 0.8435834 #>  [702,] 0.28255888 0.3874137 0.5710901 0.5775196 0.6246332 0.6787768 0.6934349 #>  [703,] 0.18685679 0.4333961 0.4648490 0.5160696 0.5326546 0.5393037 0.5486822 #>  [704,] 0.73640907 0.8315063 0.8719835 0.8741268 1.0918947 1.1055400 1.1080770 #>  [705,] 0.49939029 0.8016301 0.8772056 0.9787136 0.9975685 1.0192058 1.0198465 #>  [706,] 0.34845023 0.5171287 0.5473396 0.5720845 0.5946024 0.6363093 0.6609532 #>  [707,] 0.38387806 0.3934743 0.4092090 0.4183582 0.4532209 0.5065164 0.5234093 #>  [708,] 0.24374289 0.3475076 0.4005937 0.4883893 0.4933310 0.5257532 0.5348425 #>  [709,] 0.30753169 0.3123209 0.3397214 0.4705337 0.4996293 0.5070102 0.5157965 #>  [710,] 0.51680450 0.6079047 0.6197050 0.7025012 0.8941641 0.9014734 0.9347998 #>  [711,] 0.34891719 0.4628481 0.4862663 0.4869602 0.4945966 0.5575439 0.5793294 #>  [712,] 0.38104023 0.4037799 0.5990851 0.6492226 0.7569395 0.7837561 0.7848640 #>  [713,] 0.38349958 0.4856785 0.5584092 0.5648662 0.6906594 0.7254041 0.7412263 #>  [714,] 0.53147942 0.6098007 0.6236636 0.6256980 0.6570678 0.7075227 0.7306851 #>  [715,] 0.37622367 0.3917388 0.4083377 0.4506019 0.4689227 0.4704883 0.4737834 #>  [716,] 0.42247682 0.4440214 0.4877935 0.4971354 0.5412510 0.5523478 0.5557193 #>  [717,] 0.60546304 0.6079047 0.6171070 0.6621922 0.6761416 0.7115204 0.7287834 #>  [718,] 0.48141783 0.4845996 0.5234089 0.5322650 0.5417114 0.5454709 0.5962012 #>  [719,] 0.39874837 0.4598954 0.4893066 0.5412510 0.5630037 0.5747101 0.5792412 #>  [720,] 0.45839036 0.5789564 0.7102887 0.7993400 0.8913669 0.9700303 0.9898844 #>  [721,] 0.55388387 0.5707557 0.6093411 0.6241529 0.6360473 0.6696040 0.8063401 #>  [722,] 0.29120843 0.3268734 0.3861039 0.3891145 0.4058201 0.4823984 0.4974182 #>  [723,] 0.81023138 0.8294644 1.0777455 1.3020838 1.3112184 1.3331615 1.4133360 #>  [724,] 0.19452018 0.5868935 0.6324890 0.6695752 0.7362016 0.7900450 0.7993952 #>  [725,] 0.21949760 0.2333313 0.3123209 0.4819972 0.4856941 0.5622254 0.6490731 #>  [726,] 0.57794821 0.6043055 0.6832020 0.7018136 0.7724612 0.7820887 0.7888746 #>  [727,] 0.91429077 1.0101850 1.1365311 1.1637628 1.1858877 1.1889332 1.2092750 #>  [728,] 0.21165216 0.3923743 0.3983338 0.4367137 0.5003845 0.5143641 0.5244138 #>  [729,] 0.47666722 0.6249938 0.6379251 0.6452146 0.6472290 0.6496414 0.6923830 #>  [730,] 0.56359661 0.5648662 0.6330408 0.6475451 0.6686249 0.6738986 0.6774771 #>  [731,] 0.41040765 0.4852405 0.5407831 0.5629231 0.5864097 0.6025337 0.7896585 #>  [732,] 0.67702799 0.7617594 0.7833193 0.8784630 0.8858704 0.8886085 0.9079850 #>  [733,] 0.48076156 0.5584092 0.5849528 0.6233717 0.6451002 0.6738986 0.7285634 #>  [734,] 0.63093727 0.6426036 0.7345945 0.7760770 0.7850071 0.8370721 0.8420055 #>  [735,] 0.63498022 0.6952343 0.7043262 0.7305451 0.7673058 0.7867289 0.9143445 #>  [736,] 0.49989492 0.6099468 0.6384075 0.6446369 0.7321076 0.7633813 0.7867300 #>  [737,] 0.22100633 0.3101462 0.4900938 0.5279458 0.6035274 0.6078798 0.6201891 #>  [738,] 0.27973032 0.3999176 0.4517301 0.5139755 0.5651766 0.6035274 0.6181735 #>  [739,] 0.28755861 0.3462286 0.4942474 0.4997785 0.5205964 0.5850533 0.6339659 #>  [740,] 0.21165216 0.3837232 0.4650741 0.4655947 0.5344081 0.5415625 0.5756859 #>  [741,] 0.43503499 0.5717237 0.5855157 0.6200285 0.6562341 0.6566602 0.6703829 #>  [742,] 0.31713101 0.3924847 0.4280700 0.4386719 0.4739762 0.4934233 0.5159598 #>  [743,] 0.32295738 0.4728779 0.4856176 0.5626413 0.5636601 0.5870633 0.6151457 #>  [744,] 0.53814171 0.8150416 0.8634906 0.8736365 0.9288499 0.9739695 0.9815122 #>  [745,] 0.30791665 0.4355557 0.4607234 0.5168595 0.6502335 0.6721774 0.6847560 #>  [746,] 0.36241995 0.4433932 0.5100656 0.5202483 0.5411867 0.5446270 0.5452288 #>  [747,] 0.31159683 0.3829430 0.4297941 0.4460511 0.4715766 0.5031774 0.5237481 #>  [748,] 0.15608876 0.2672282 0.3958385 0.4553390 0.5107382 0.5539896 0.5658040 #>  [749,] 0.33639504 0.4361780 0.4454712 0.4677938 0.4823782 0.5553345 0.5940066 #>  [750,] 0.22687733 0.4010003 0.5403873 0.7596536 0.8201452 0.8243736 0.8493675 #>  [751,] 0.39777281 0.4319728 0.4393406 0.4850535 0.4992401 0.5159598 0.5305669 #>  [752,] 0.47292298 0.5008473 0.5458356 0.5686104 0.5829580 0.6322522 0.6340151 #>  [753,] 0.43036491 0.5014440 0.6046815 0.6151802 0.6412943 0.7950445 0.7971649 #>  [754,] 0.70095393 0.8620883 0.9345653 0.9536991 1.0206911 1.0694780 1.0695253 #>  [755,] 0.47021058 0.4898170 0.5937464 0.6457227 0.7285364 0.7334060 0.7447751 #>  [756,] 0.16605853 0.4943678 0.5047237 0.5215311 0.5356627 0.5732119 0.5913733 #>  [757,] 0.59471789 0.7724888 0.8370613 0.8432737 0.8439594 0.8527788 0.8901753 #>  [758,] 0.42622718 0.5568643 0.6976277 0.7457018 0.7810950 0.7823841 0.7996219 #>  [759,] 0.19341692 0.3833873 0.4841213 0.4846456 0.5557193 0.5563878 0.5842928 #>  [760,] 0.37311763 0.4354366 0.4368250 0.4400640 0.4907995 0.4957509 0.6001869 #>  [761,] 0.50700126 0.5382516 0.6498805 0.7041642 0.7726448 0.8958312 0.9054541 #>  [762,] 0.16813932 0.2972009 0.4603738 0.5463308 0.5984526 0.6042911 0.6242459 #>  [763,] 0.57546460 0.6052355 0.7021499 0.7569110 0.7701678 0.8023942 0.8627483 #>  [764,] 0.13606329 0.5696673 0.9007955 0.9510319 0.9828864 1.0444229 1.0457623 #>  [765,] 0.34410590 0.5407831 0.6383685 0.6862098 0.7440133 0.7453049 0.9520779 #>  [766,] 0.36564711 0.3948229 0.5076537 0.5534064 0.5921774 0.6123640 0.6144590 #>  [767,] 0.47069136 0.4934233 0.5550572 0.6212728 0.6221734 0.6754575 0.6991636 #>  [768,] 0.74570175 0.9279888 0.9600884 1.0576439 1.0999785 1.1140256 1.1292455 #>  [769,] 0.32455823 0.4661092 0.5049190 0.5775196 0.6214533 0.6408943 0.6543625 #>  [770,] 0.49430077 0.5702680 0.6107383 0.6298725 0.6324890 0.6851201 0.7004443 #>  [771,] 0.46332526 0.5221078 0.6146830 0.6573537 0.6776995 0.6838056 0.7115535 #>  [772,] 0.20758119 0.5714534 0.5769258 0.5898302 0.5915019 0.6138898 0.6229545 #>  [773,] 1.00666922 1.0155340 1.0591445 1.1446176 1.1547359 1.2950072 1.4329829 #>  [774,] 0.72610627 0.7276153 0.7327203 0.8028655 0.8094828 0.8902770 0.9142908 #>  [775,] 0.52882443 0.6834491 0.8109453 0.8353644 0.8724354 0.8845934 0.8943629 #>  [776,] 0.58235288 0.6027473 0.7535922 0.7756645 0.7866294 0.9166967 0.9854532 #>  [777,] 0.35577134 0.3739773 0.3993613 0.4679972 0.4990087 0.5017794 0.5651678 #>  [778,] 0.43551182 0.5659922 0.6531805 0.6610078 0.7182201 0.7704393 0.8003662 #>  [779,] 0.61424284 0.6200436 0.6688463 0.6867864 0.7204209 0.8186443 0.8385112 #>  [780,] 0.60574499 0.7620692 0.7856639 0.8109530 0.8112668 0.9225049 1.1116327 #>  [781,] 0.40125763 0.4355557 0.4978219 0.5363580 0.6113297 0.6118889 0.6472867 #>  [782,] 0.36429314 0.4367069 0.4539749 0.5660861 0.6050368 0.6452146 0.6895540 #>  [783,] 0.43745921 0.4817316 0.5190144 0.5744926 0.6672677 0.7118797 0.7682043 #>  [784,] 0.36438015 0.3711012 0.4095338 0.4791607 0.5149552 0.5284198 0.5296137 #>  [785,] 0.68022325 0.8021271 0.8183943 0.9007362 1.0028146 1.0138447 1.0149418 #>  [786,] 0.70937049 0.8844802 0.9055819 1.0463442 1.1315080 1.1442619 1.1724005 #>  [787,] 0.27854618 0.3804234 0.4366981 0.4735625 0.4812742 0.5230586 0.5320638 #>  [788,] 0.58595423 0.6706325 0.7112593 0.7551578 0.7587891 0.7590750 0.7704819 #>  [789,] 0.42338046 0.4702629 0.5098522 0.6254839 0.6435659 0.6672677 0.8297055 #>  [790,] 0.40611089 0.4256071 0.4338540 0.5616403 0.6173242 0.6248604 0.6595391 #>  [791,] 0.33514545 0.3444157 0.4689411 0.5550125 0.5983068 0.6260375 0.6269388 #>  [792,] 0.33177589 0.3787048 0.4383526 0.4460856 0.5478489 0.5480077 0.5556706 #>  [793,] 0.26785029 0.3403098 0.4078500 0.4595155 0.5454352 0.5851862 0.5854055 #>  [794,] 0.44620375 0.4471492 0.4495803 0.4797063 0.5576279 0.6352902 0.6810191 #>  [795,] 0.89469035 1.0412608 1.1208833 1.1733024 1.1923015 1.2821918 1.2850176 #>  [796,] 0.49730310 0.5063226 0.5077918 0.5125215 0.5331061 0.5408100 0.5512763 #>  [797,] 0.26373618 0.4271709 0.4435297 0.4474354 0.4829402 0.4864405 0.5085962 #>  [798,] 0.23475421 0.3656471 0.4649680 0.4880879 0.4900019 0.4916251 0.5636601 #>  [799,] 0.38377365 0.4375750 0.5979542 0.6064783 0.6145310 0.6477480 0.6879334 #>  [800,] 0.54455311 0.6131231 0.6280460 0.6877253 0.7447227 0.7633813 0.7827273 #>  [801,] 0.28188604 0.4164333 0.5921774 0.6080398 0.6600073 0.6678612 0.6725467 #>  [802,] 0.11312551 0.1864310 0.2807786 0.3281642 0.3477464 0.3563041 0.4073137 #>  [803,] 0.56383668 0.6108752 0.6261326 0.6270983 0.6379505 0.6881111 0.7167214 #>  [804,] 0.45452231 0.5752021 0.5840366 0.5979542 0.6042681 0.6225039 0.6282067 #>  [805,] 0.39485174 0.4059128 0.4471492 0.5877933 0.6086725 0.6658875 0.6928561 #>  [806,] 0.33019005 0.4205845 0.4899688 0.5570151 0.5766667 0.7277307 0.7460403 #>  [807,] 0.37861406 0.5919851 0.6374563 0.6824988 0.6906594 0.6984577 0.7497123 #>  [808,] 0.31727001 0.5434273 0.5823529 0.6695092 0.7172106 0.7470416 0.8500907 #>  [809,] 0.28229404 0.4944642 0.5009475 0.5333304 0.5994023 0.6200021 0.6332588 #>  [810,] 0.59162641 0.8374484 0.8436646 0.8442812 0.8740132 0.8873055 0.8946904 #>  [811,] 0.24876627 0.3190670 0.3304772 0.3482912 0.4352259 0.4362762 0.5120228 #>  [812,] 0.42276842 0.4903930 0.5120740 0.5406853 0.5681430 0.5932025 0.6095159 #>  [813,] 0.40611089 0.4491155 0.4604031 0.4893773 0.6403603 0.6687360 0.6765744 #>  [814,] 1.31506773 1.4062310 1.4220946 1.5478567 1.5508923 1.5690751 1.6804733 #>  [815,] 0.51899789 0.5859542 0.6400522 0.7087320 0.7089766 0.7144693 0.7252711 #>  [816,] 0.43942966 0.4454151 0.5956901 0.6020956 0.6438084 0.6451002 0.6837159 #>  [817,] 0.45833158 0.5323015 0.6440088 0.6631391 0.7023328 0.7161525 0.7907580 #>  [818,] 0.40397908 0.4851773 0.5459436 0.5957728 0.6773615 0.6993627 0.7538988 #>  [819,] 0.49989492 0.5155562 0.5615891 0.7648623 0.8275535 0.9602412 0.9666992 #>  [820,] 0.69661282 0.7075227 0.8001775 0.8402623 0.9001624 0.9080551 0.9270653 #>  [821,] 0.33783236 0.6412943 0.7736691 0.8277119 0.8684918 0.9342796 0.9499359 #>  [822,] 0.42715519 0.4807616 0.5956901 0.6490138 0.6729737 0.6774771 0.7237398 #>  [823,] 0.65246195 0.6607836 0.6638472 0.6899521 0.7009634 0.7224487 0.9397365 #>  [824,] 0.48361281 0.5699939 0.6221734 0.7726448 0.8385343 0.8455411 0.8538281 #>  [825,] 0.75682279 0.7702773 1.0018687 1.0629047 1.2435194 1.2589455 1.2769707 #>  [826,] 0.25960412 0.2661542 0.5082238 0.5664100 0.6321338 0.6520661 0.6631198 #>  [827,] 1.05824618 1.2403055 1.2902333 1.3114787 1.4520885 1.4531007 1.4850192 #>  [828,] 0.51399575 0.6185920 0.6311965 0.6711518 0.7748308 0.7800192 0.8273200 #>  [829,] 0.33821302 0.4441427 0.4479354 0.6464731 0.6522395 0.6810491 0.6850045 #>  [830,] 0.23733572 0.5263178 0.5592689 0.5637473 0.5756972 0.6014776 0.6262179 #>  [831,] 0.35717381 0.3643801 0.4093280 0.4582870 0.5543547 0.6089466 0.6506539 #>  [832,] 0.23383132 0.4806709 0.5858956 0.7102898 0.7337770 0.7393970 0.7406687 #>  [833,] 0.46511426 0.7083190 0.8603825 0.8610191 0.8722843 0.8781376 0.8790021 #>  [834,] 0.40487210 0.5067289 0.5869626 0.8052939 0.8258075 0.8384148 0.8549334 #>  [835,] 0.15111626 0.2574256 0.4697668 0.4870129 0.5070102 0.5228572 0.5426664 #>  [836,] 0.60209558 0.6490138 0.6520736 0.6810491 0.6925384 0.7036861 0.7066064 #>  [837,] 0.38148904 0.7026780 0.7042345 0.7654722 0.7837561 0.8073464 0.8999803 #>  [838,] 0.52176247 0.6107383 0.6500655 0.7576841 0.9186972 0.9723236 0.9925527 #>  [839,] 0.54597786 0.6498805 0.7702773 0.8328581 0.9505907 1.0129398 1.0404161 #>  [840,] 0.51629416 0.6182403 0.7671498 0.7694880 0.7720377 0.7797068 0.8318577 #>  [841,] 0.47638577 0.5025147 0.5980093 0.6097864 0.6280365 0.7596047 0.7751864 #>  [842,] 0.18685679 0.3825917 0.4907995 0.5440945 0.5480077 0.5697428 0.5876831 #>  [843,] 0.72251375 0.7507198 0.8033248 0.8549334 0.8795893 0.9455959 0.9829809 #>  [844,] 0.53037498 0.8021161 0.8447652 0.9778201 0.9978816 1.0272667 1.0479782 #>  [845,] 0.25953878 0.4410883 0.5117705 0.5850412 0.5957929 0.6470945 0.7132435 #>  [846,] 0.33710772 0.4080253 0.4190897 0.4728477 0.4765969 0.4855495 0.5088117 #>  [847,] 0.96915095 1.1208833 1.2783264 1.2801531 1.4853337 1.4868747 1.6418087 #>  [848,] 0.25133538 0.3753715 0.4674005 0.5649967 0.5769258 0.6248604 0.6757992 #>  [849,] 0.33594014 0.3611147 0.5055958 0.6348874 0.6705215 0.6840146 0.7317553 #>  [850,] 0.31024644 0.3978269 0.4368250 0.4568094 0.6022685 0.6407783 0.6443330 #>  [851,] 0.42680842 0.4322379 0.6109754 0.6252018 0.6370550 0.6803849 0.6879334 #>  [852,] 0.54682791 0.8261934 0.8489872 0.9380754 1.0068613 1.0276965 1.0283167 #>  [853,] 0.44573936 0.6212728 0.6512854 0.6766828 0.6929691 0.7401930 0.7556206 #>  [854,] 0.64401729 0.6868103 0.8305625 0.9132087 0.9322784 0.9455246 0.9606103 #>  [855,] 0.48430292 0.5939800 0.6154436 0.6702996 0.7601068 0.7721180 0.7722258 #>  [856,] 0.34843217 0.3615799 0.4520388 0.4864286 0.4937815 0.5206415 0.5348425 #>  [857,] 0.19452018 0.5702680 0.5877114 0.6384628 0.7124835 0.7387490 0.7519066 #>  [858,] 0.68347607 0.6952343 0.8292968 0.8474099 0.8662343 0.8727895 0.9043579 #>  [859,] 0.28535116 0.3987484 0.4338906 0.5387366 0.5560148 0.5759844 0.5807307 #>  [860,] 0.15608876 0.3159233 0.3998035 0.4635072 0.4738569 0.4964849 0.4979787 #>  [861,] 0.10056470 0.3449783 0.4819972 0.5256317 0.5300543 0.5386895 0.5863483 #>  [862,] 0.24801648 0.3158703 0.3409990 0.3482912 0.4557234 0.4865289 0.4916251 #>  [863,] 0.74576869 0.8028673 0.8447951 0.8885611 1.0458649 1.0536479 1.1076333 #>  [864,] 0.32211610 0.3858004 0.4109986 0.4655947 0.4679972 0.4710695 0.4900938 #>  [865,] 0.52882443 0.7907860 0.7926221 0.8016301 0.8523437 0.8820872 0.9001532 #>  [866,] 1.11242541 1.1195738 1.1340318 1.1974791 1.2267704 1.2393385 1.3036293 #>  [867,] 0.68476638 0.6848902 0.6995688 0.9262264 1.0221118 1.0334563 1.0772582 #>  [868,] 0.36770154 0.5425849 0.5562072 0.6339659 0.7140706 0.7936483 0.8173893 #>  [869,] 0.90083471 0.9700303 0.9845479 1.0348623 1.0406193 1.0545390 1.0577818 #>  [870,] 0.56486662 0.5784082 0.5944213 0.6098007 0.6522795 0.6785159 0.6894766 #>  [871,] 0.56909609 0.5965005 0.7252711 0.7533800 0.8194006 0.8549724 0.9188157 #>  [872,] 0.63695536 0.8004019 0.8808413 0.8903777 0.9184474 0.9192912 0.9451478 #>  [873,] 0.22040512 0.4197801 0.4794423 0.5001015 0.5563326 0.5749020 0.6619468 #>  [874,] 0.28658879 0.5132524 0.5896991 0.6011079 0.7279027 0.7318303 0.7481699 #>  [875,] 0.33117431 0.4103209 0.4274962 0.4496146 0.4628481 0.5160696 0.5387366 #>  [876,] 0.55124445 0.5596128 0.5649448 0.6196462 0.6197338 0.6936771 0.6995534 #>  [877,] 0.40714166 0.5539583 0.7974998 0.9330256 0.9720687 0.9967791 1.0638318 #>  [878,] 0.43942966 0.4564356 0.6115703 0.6721565 0.6880372 0.6925384 0.6927491 #>  [879,] 0.67293328 0.8970963 1.1438065 1.1655722 1.1729422 1.2286289 1.2409575 #>  [880,] 0.32826488 0.4676581 0.6624797 0.6651942 0.6921522 0.7117803 0.7521742 #>  [881,] 0.70848621 0.7329071 0.8103730 0.8198742 0.9228818 0.9280277 0.9593552 #>  [882,] 0.29683069 0.4202682 0.4619364 0.5599294 0.6249014 0.6309373 0.7056191 #>  [883,] 0.59214732 0.7093705 0.7248867 0.8941641 0.9351053 0.9829421 1.0558107 #>  [884,] 0.35350199 0.4774861 0.4869602 0.5187617 0.5510266 0.5607769 0.6145635 #>  [885,] 0.83792438 0.9818811 1.0431987 1.0715276 1.1290720 1.1402297 1.2281566 #>  [886,] 0.37798439 0.5468279 0.7819278 0.7985905 0.8015217 0.8056816 0.8075643 #>  [887,] 0.44082120 0.4595155 0.5788470 0.6002055 0.6198720 0.6259196 0.6775569 #>  [888,] 0.21070972 0.3238360 0.3363950 0.3781133 0.4080375 0.4736706 0.4754801 #>  [889,] 0.29635566 0.4452616 0.4586192 0.4634613 0.4953010 0.5373854 0.5751280 #>  [890,] 1.05099372 1.0715864 1.0918932 1.1752649 1.2062507 1.3576170 1.4111191 #>  [891,] 0.77119997 0.7802293 0.8095846 0.8996015 0.9008136 0.9011741 0.9017669 #>  [892,] 0.25551588 0.3694885 0.4220473 0.4893826 0.5588748 0.6358749 0.6791782 #>  [893,] 0.28255888 0.5049190 0.6161224 0.6307705 0.6375183 0.7097049 0.7328988 #>  [894,] 0.36529757 0.3752944 0.6030084 0.6923524 0.7152927 0.7166311 0.7266710 #>  [895,] 0.20758119 0.3753715 0.4648210 0.4948097 0.5652339 0.6062415 0.6216291 #>  [896,] 0.43232576 0.7291416 0.7447464 0.7876102 0.8026273 0.8058575 0.8340520 #>  [897,] 0.45746261 0.4645618 0.6214533 0.6917305 0.7172498 0.7848826 0.8079365 #>  [898,] 0.36988193 0.6014819 0.6034473 0.6084304 0.7048947 0.8291422 0.9181884 #>  [899,] 0.53663906 0.5927909 0.6063534 0.6181934 0.6635136 0.6804042 0.6968291 #>  [900,] 0.40318440 0.4329772 0.4562634 0.5223158 0.5867124 0.6764644 0.6822324 #>  [901,] 0.26373618 0.3334947 0.4062576 0.4229991 0.4802036 0.5055641 0.5061460 #>  [902,] 0.12916052 0.3011399 0.3917388 0.5075837 0.5393386 0.5429289 0.5806670 #>  [903,] 0.48576028 0.5065040 0.7939253 0.8231518 0.8390893 0.8612811 0.8671799 #>  [904,] 0.22267723 0.4037799 0.5831771 0.6350829 0.7026780 0.8119568 0.8452119 #>  [905,] 0.46456183 0.5162942 0.7121696 0.7137058 0.7426664 0.7480002 0.7933578 #>  [906,] 0.48579543 0.5717237 0.7102887 0.7582491 0.7675642 0.7755845 0.7944622 #>  [907,] 0.72042093 1.0459188 1.0543751 1.0630727 1.1506621 1.1751207 1.1977332 #>  [908,] 0.90501161 0.9501200 1.3182686 1.3905240 1.4789395 1.5608009 1.5652981 #>  [909,] 0.89531643 0.9244071 0.9275475 0.9338592 0.9354257 0.9408393 0.9658813 #>  [910,] 0.38294296 0.4435297 0.4828756 0.5129551 0.5271722 0.5454209 0.5641802 #>  [911,] 0.25835248 0.5245134 0.5965005 0.6484875 0.7089766 0.7461702 0.7663582 #>  [912,] 0.61970504 0.6474719 0.6592368 0.6923200 0.7080893 0.7248867 0.8145583 #>  [913,] 0.32295738 0.4741480 0.4966375 0.5495153 0.5512808 0.5575083 0.5626008 #>  [914,] 0.60463108 0.6462986 0.8451082 0.9967791 1.2498787 1.2623910 1.2672921 #>  [915,] 0.38019700 0.4234922 0.4625721 0.4705474 0.4710634 0.5228572 0.5660176 #>  [916,] 0.37991572 0.3869670 0.4039791 0.5435317 0.5544995 0.5856935 0.6457647 #>  [917,] 0.68022325 0.7216879 0.7294524 0.9439273 0.9569465 0.9578591 0.9679976 #>  [918,] 0.37505894 0.3785243 0.4580005 0.4696448 0.4736706 0.5368285 0.5454709 #>  [919,] 0.35078023 0.3923743 0.4045377 0.4710695 0.4792933 0.4823984 0.4832763 #>  [920,] 0.33047722 0.3657419 0.4592487 0.4865289 0.4913767 0.5117705 0.5144406 #>  [921,] 0.33541044 0.3762831 0.4237070 0.4321260 0.4639020 0.4787155 0.4833977 #>  [922,] 0.77352936 0.8160056 0.8436646 0.8519067 0.9132853 0.9545889 0.9872188 #>  [923,] 0.44746081 0.4583904 0.6858109 0.7488429 0.7944622 0.8144073 0.8171217 #>  [924,] 0.32007767 0.4229991 0.4881442 0.5114058 0.5244138 0.5525283 0.5698197 #>  [925,] 0.16605853 0.3728348 0.4024740 0.4807681 0.5574091 0.5913373 0.5984526 #>  [926,] 1.21999711 1.2326073 1.3114916 1.3237767 1.3713037 1.3849552 1.4064913 #>  [927,] 0.32455823 0.4574626 0.5100996 0.7460403 0.7584819 0.7610121 0.7877700 #>  [928,] 0.47729317 0.4860869 0.5980093 0.6589560 0.7151517 0.7665035 0.8322069 #>  [929,] 1.39351213 1.5329491 1.7847790 1.8193154 1.8546897 1.9405528 1.9783490 #>  [930,] 0.42622718 0.4517301 0.4911459 0.5276297 0.5356038 0.6146830 0.7146924 #>  [931,] 0.32025265 0.5074154 0.5648666 0.5857375 0.5898302 0.6236636 0.6314675 #>  [932,] 0.42338046 0.4342294 0.4494449 0.6249738 0.6322522 0.6993777 0.7118797 #>  [933,] 0.61207082 1.0066692 1.0440428 1.1268460 1.1311446 1.1315714 1.1488674 #>  [934,] 0.44541726 0.9820875 1.0110745 1.0715332 1.0974539 1.1324882 1.2214028 #>  [935,] 0.55335651 0.6046311 0.7974998 1.0483501 1.1230261 1.1356830 1.1576374 #>  [936,] 0.71608414 0.8003840 0.8085094 0.8197851 0.8254897 0.8723733 0.8772056 #>  [937,] 0.63447005 0.7418384 0.8282442 0.8616238 0.9040337 0.9160164 1.0195256 #>  [938,] 0.48564388 0.4979656 0.5563878 0.5801205 0.5865416 0.6413148 0.6691254 #>  [939,] 0.40591277 0.4753652 0.4797063 0.4951188 0.5181280 0.6081770 0.6188506 #>  [940,] 0.46742570 0.5051379 0.5758611 0.5881306 0.6224469 0.6678021 0.6684281 #>  [941,] 0.37622367 0.3998673 0.4005302 0.4319728 0.4474354 0.4492305 0.4739762 #>  [942,] 0.51237012 0.5128412 0.5320638 0.5789012 0.5814598 0.7139514 0.7183181 #>  [943,] 0.48204440 0.5072248 0.5735371 0.5756859 0.5819360 0.5946965 0.6369095 #>  [944,] 0.42727216 0.5304785 0.5701952 0.5989130 0.6018686 0.6130268 0.6503928 #>  [945,] 0.22223640 0.2248328 0.2807786 0.3829726 0.4622313 0.4966989 0.5051379 #>  [946,] 0.37738037 0.4202682 0.5331061 0.5446770 0.5651005 0.5973498 0.6071552 #>  [947,] 0.31611199 0.4151075 0.5204300 0.5369885 0.5426664 0.6028364 0.6548094 #>  [948,] 0.41978010 0.5243824 0.5869626 0.5924313 0.5992676 0.6030084 0.6465144 #>  [949,] 0.37024701 0.4384595 0.4386719 0.4845098 0.4959996 0.5691633 0.6024242 #>  [950,] 0.34453011 0.4566687 0.5041247 0.5986611 0.6182403 0.6276767 0.6354587 #>  [951,] 0.07895498 0.3600294 0.5631490 0.6010806 0.6014776 0.6123452 0.6390126 #>  [952,] 0.43928111 0.4668217 0.5085314 0.5891600 0.6056146 0.7951025 0.8150416 #>  [953,] 0.46765814 0.5827911 0.6562201 0.7199582 0.7448135 0.7497591 0.7539288 #>  [954,] 0.10003140 0.2999585 0.4205845 0.6031940 0.6035646 0.6111554 0.6524376 #>  [955,] 0.52946168 0.6514292 0.6705215 0.6732733 0.6892676 0.7801423 0.7810998 #>  [956,] 0.44311855 0.6459658 0.6891382 0.6984207 0.7853063 0.7979192 0.8584048 #>  [957,] 0.30393189 0.6014819 0.6274640 0.6280555 0.6601572 0.6997244 0.7086213 #>  [958,] 0.43339613 0.4684905 0.5277830 0.5440945 0.5664347 0.6019538 0.6033579 #>  [959,] 0.33205815 0.3953977 0.4631901 0.4736711 0.5284405 0.5560148 0.5836884 #>  [960,] 0.21079022 0.2542870 0.3494694 0.4301169 0.4354622 0.4364468 0.4741480 #>  [961,] 0.53037498 0.7182382 0.8589876 0.9050424 1.0320082 1.0806309 1.0911950 #>  [962,] 0.75995985 0.9093294 0.9538817 1.0106711 1.0122291 1.2035179 1.2343619 #>  [963,] 0.41725517 0.6834059 0.7222080 0.7802293 0.7925093 0.8804542 0.9010835 #>  [964,] 0.27238596 0.4573467 0.5032019 0.6719370 0.7301924 0.8616015 0.9065191 #>  [965,] 0.40884313 0.6177741 0.7463205 0.7499682 0.7617594 0.7930455 0.8229635 #>  [966,] 0.50094750 0.5084677 0.5426621 0.5712106 0.5953185 0.6115126 0.6160297 #>  [967,] 0.34453011 0.5750732 0.5847892 0.6031940 0.6147151 0.6330416 0.6593113 #>  [968,] 0.49674571 0.5137401 0.6180733 0.7144696 0.8474099 0.8805509 0.9054541 #>  [969,] 0.57284082 0.6298725 0.6905251 0.7387490 0.8208914 0.8639238 0.8742227 #>  [970,] 0.41302210 0.4920667 0.5489821 0.6362677 0.6769685 0.6984459 0.7363637 #>  [971,] 0.56784506 0.6241529 0.7084862 0.7093362 0.7580904 0.7627683 0.8137485 #>  [972,] 0.25863836 0.3563041 0.4344949 0.4519019 0.4695873 0.4791607 0.4984727 #>  [973,] 0.64034861 0.7170991 0.9391622 1.0014971 1.0462165 1.0467645 1.1293449 #>  [974,] 0.24662311 0.3696678 0.6584971 0.6879112 0.6968291 0.7244433 0.7502773 #>  [975,] 0.54962933 0.6845389 0.7704630 0.7930455 0.8291370 0.8591141 0.8652903 #>  [976,] 0.47777403 0.4939959 0.5386895 0.5585040 0.6118108 0.6141483 0.6236251 #>  [977,] 0.29683069 0.4019837 0.4776368 0.5446770 0.5850412 0.7744641 0.7753754 #>  [978,] 0.24350200 0.4440214 0.5231355 0.6131231 0.6384075 0.6441170 0.6891475 #>  [979,] 0.55620716 0.5964775 0.5965382 0.6310241 0.6387197 0.6622619 0.7737831 #>  [980,] 0.47567814 0.5862418 0.6089466 0.6189544 0.6287029 0.6360473 0.6472784 #>  [981,] 0.98596958 0.9948358 1.0397549 1.0432161 1.0462114 1.2694690 1.2708331 #>  [982,] 0.73301884 0.7937682 0.8290750 0.8740132 0.8860967 0.8868449 0.9141027 #>  [983,] 0.26119835 0.3255387 0.3907500 0.5752021 0.5962012 0.6022199 0.6106632 #>  [984,] 0.50559584 0.5854302 0.6732733 0.6873115 0.7180177 0.8570351 0.9007546 #>  [985,] 0.68489853 0.6962368 0.7093901 0.7457687 0.7685200 0.7702519 0.8956390 #>  [986,] 0.78299602 0.9476631 0.9991032 1.0699550 1.0723200 1.0777340 1.0863101 #>  [987,] 0.52504943 0.5416414 0.6912259 0.6975320 0.7515885 0.7730891 0.7755845 #>  [988,] 0.41464789 0.6514292 0.6873115 1.0024430 1.0249727 1.0342763 1.0686433 #>  [989,] 0.28457224 0.4322379 0.4587650 0.5528531 0.5870633 0.6068246 0.6294567 #>  [990,] 0.73925265 0.8395574 0.8754180 0.8925211 0.9021670 0.9098319 0.9339856 #>  [991,] 0.36429314 0.3713671 0.4298597 0.4477624 0.5851862 0.5859193 0.6147100 #>  [992,] 0.23574938 0.2408444 0.2745075 0.4266652 0.4452616 0.4581317 0.4814495 #>  [993,] 0.78657089 0.9071112 1.0234306 1.0911183 1.1198605 1.1557354 1.2470855 #>  [994,] 0.39152732 0.4489497 0.4573723 0.4600060 0.4673333 0.4833049 0.4999581 #>  [995,] 0.37738037 0.4156612 0.4346553 0.4619364 0.4776368 0.5455625 0.5726413 #>  [996,] 0.50650399 0.7047499 0.7224487 0.7710201 0.7929139 0.8029264 0.8111556 #>  [997,] 0.47451693 0.5110545 0.5324598 0.5401619 0.5562115 0.5658040 0.5742154 #>  [998,] 0.43917526 0.4592487 0.5555364 0.5601474 0.5678492 0.5791075 0.5897343 #>  [999,] 1.43940377 1.6090763 1.7083876 1.7728718 1.8394446 1.8707285 1.9375277 #> [1000,] 0.46742570 0.6632452 0.6746314 0.7049481 0.7395425 0.7530223 0.7574193 #>              [,8]      [,9]     [,10] #>    [1,] 0.7891693 0.8859169 0.8961596 #>    [2,] 0.6759023 0.6897678 0.7201570 #>    [3,] 1.0320082 1.0760518 1.1348450 #>    [4,] 0.5974747 0.6670718 0.6908479 #>    [5,] 0.8566046 0.9109837 0.9964283 #>    [6,] 0.7433689 0.7453247 0.7697196 #>    [7,] 0.4984035 0.5136632 0.5283657 #>    [8,] 0.8646222 0.9049759 0.9107715 #>    [9,] 0.7449359 0.7786357 0.7810307 #>   [10,] 0.8716590 0.9456165 0.9720687 #>   [11,] 0.6794852 0.6843673 0.7114241 #>   [12,] 0.5822600 0.6137069 0.6195381 #>   [13,] 0.6947483 0.7195371 0.7277307 #>   [14,] 0.6996239 0.7642934 0.7703849 #>   [15,] 0.6007071 0.6020736 0.6279466 #>   [16,] 0.8877087 0.9202619 0.9317419 #>   [17,] 0.8358472 0.8461014 0.8481743 #>   [18,] 0.6779839 0.8019291 0.8092184 #>   [19,] 0.9468610 0.9845479 1.0076377 #>   [20,] 0.5027172 0.5234472 0.6177342 #>   [21,] 0.5324598 0.5347003 0.5392626 #>   [22,] 0.9307987 0.9401111 0.9510256 #>   [23,] 2.0314825 2.0775162 2.1652767 #>   [24,] 0.6805179 0.6809143 0.7022903 #>   [25,] 0.8370721 0.8485114 0.8492719 #>   [26,] 0.6719370 0.7423171 0.7780189 #>   [27,] 0.5031774 0.5527803 0.5702715 #>   [28,] 0.8780265 0.9085745 0.9558656 #>   [29,] 1.3167134 1.3225992 1.4179656 #>   [30,] 1.1243440 1.1695688 1.1806564 #>   [31,] 0.9918942 1.0186883 1.0320571 #>   [32,] 0.7659156 0.7876171 0.7891693 #>   [33,] 0.7707227 0.8064133 0.8341642 #>   [34,] 0.7776278 0.8519912 0.8790563 #>   [35,] 0.5458884 0.5981495 0.6151139 #>   [36,] 0.6225039 0.6341591 0.6745829 #>   [37,] 1.2698492 1.4089628 1.4527866 #>   [38,] 0.5888996 0.6031566 0.6135929 #>   [39,] 0.6440928 0.6530228 0.7080345 #>   [40,] 0.6687545 0.6721426 0.6885504 #>   [41,] 1.0410977 1.0567760 1.0655976 #>   [42,] 0.6141953 0.6437447 0.6478005 #>   [43,] 0.9199101 0.9564715 1.0150546 #>   [44,] 0.8662990 0.8881731 0.8937939 #>   [45,] 1.5039829 1.5712922 1.6116785 #>   [46,] 0.9557699 0.9564062 0.9626386 #>   [47,] 0.7291988 0.7477292 0.7562299 #>   [48,] 0.6618634 0.6805079 0.6867025 #>   [49,] 0.9512154 0.9624031 0.9813181 #>   [50,] 0.6550520 0.6599381 0.6752126 #>   [51,] 0.9120131 0.9875422 0.9947818 #>   [52,] 0.7956316 0.8039594 0.8418584 #>   [53,] 0.7753728 0.7830868 0.8391425 #>   [54,] 0.9083773 0.9365151 0.9547874 #>   [55,] 0.8084519 0.8088433 0.8094537 #>   [56,] 0.9573015 0.9708093 0.9989401 #>   [57,] 1.0241422 1.0246165 1.0259484 #>   [58,] 1.2347629 1.2537744 1.2895561 #>   [59,] 0.6781777 0.7021238 0.7066749 #>   [60,] 0.6752126 0.6959121 0.6973681 #>   [61,] 0.6584971 0.6758458 0.6903013 #>   [62,] 0.6425049 0.6573607 0.6573668 #>   [63,] 1.0699559 1.1104885 1.1352696 #>   [64,] 0.6682463 0.6781587 0.7000028 #>   [65,] 0.6086903 0.6177342 0.6239931 #>   [66,] 1.1554230 1.1560759 1.2039865 #>   [67,] 0.9451120 0.9639348 0.9655722 #>   [68,] 1.0588292 1.0755848 1.0925718 #>   [69,] 0.9508658 0.9605951 0.9744008 #>   [70,] 1.1415462 1.1555825 1.1989076 #>   [71,] 0.5037029 0.5041405 0.5060369 #>   [72,] 0.9868368 1.0314888 1.0719650 #>   [73,] 0.8282180 0.8699283 0.9092283 #>   [74,] 1.2229114 1.2332285 1.2363573 #>   [75,] 1.0380977 1.0719650 1.0862137 #>   [76,] 0.6060649 0.6144101 0.6148856 #>   [77,] 1.0619363 1.1199548 1.1278473 #>   [78,] 0.8063222 0.8479728 0.8503559 #>   [79,] 0.7651422 0.7711365 0.8163529 #>   [80,] 0.8456427 0.8991439 0.9081933 #>   [81,] 0.7497591 0.7737326 0.7870718 #>   [82,] 0.7097306 0.7172584 0.7265991 #>   [83,] 2.0589599 2.0999999 2.1395659 #>   [84,] 0.7786904 0.7875010 0.7879861 #>   [85,] 0.8129563 0.8130471 0.8603825 #>   [86,] 0.9376009 1.0178722 1.0354297 #>   [87,] 0.8218008 0.8309766 0.8684536 #>   [88,] 1.4884506 1.5267174 1.6090763 #>   [89,] 0.6736094 0.6737083 0.6755186 #>   [90,] 1.3258273 1.3429944 1.3670291 #>   [91,] 1.2951480 1.3163962 1.3481844 #>   [92,] 0.5780864 0.5865416 0.5873452 #>   [93,] 0.7106489 0.7227294 0.7526629 #>   [94,] 0.4943678 0.5106467 0.5202483 #>   [95,] 0.5328843 0.6198322 0.6635011 #>   [96,] 0.6724273 0.6732952 0.6762840 #>   [97,] 0.9184474 0.9255683 0.9524602 #>   [98,] 0.7244380 0.7294723 0.7366838 #>   [99,] 0.6330416 0.6342109 0.6416903 #>  [100,] 0.8980069 0.9050268 0.9089028 #>  [101,] 0.6136487 0.6310664 0.6378330 #>  [102,] 1.2640117 1.2682299 1.2782696 #>  [103,] 1.0181046 1.0212630 1.0990106 #>  [104,] 1.0416709 1.0696653 1.1046790 #>  [105,] 1.2550606 1.3141305 1.3166595 #>  [106,] 0.6404052 0.6516422 0.6753847 #>  [107,] 0.8233547 0.8734855 0.8780032 #>  [108,] 0.8293116 0.8672215 0.9753421 #>  [109,] 1.4169773 1.4200938 1.4215972 #>  [110,] 1.1044580 1.1156159 1.1661798 #>  [111,] 0.5467507 0.5539896 0.5602622 #>  [112,] 0.7160841 0.7237398 0.7706598 #>  [113,] 0.9960305 1.0238177 1.1104783 #>  [114,] 0.7073334 0.7154759 0.7306908 #>  [115,] 0.8647512 0.8850204 0.8983428 #>  [116,] 0.5534957 0.5691633 0.5808182 #>  [117,] 1.1968028 1.2077310 1.2159137 #>  [118,] 0.8276520 0.8984973 1.0074596 #>  [119,] 0.7149608 0.7178535 0.7529828 #>  [120,] 1.0465231 1.0630257 1.0887118 #>  [121,] 0.6608388 0.7227546 0.7737326 #>  [122,] 0.7389172 0.7696871 0.7941861 #>  [123,] 0.9341561 0.9376016 0.9755442 #>  [124,] 1.1632533 1.1644358 1.1885279 #>  [125,] 0.5981238 0.6046051 0.6181269 #>  [126,] 0.8881729 0.8914623 0.9117520 #>  [127,] 0.4983507 0.5198844 0.5216397 #>  [128,] 0.7676761 0.7916059 0.8031574 #>  [129,] 0.6630137 0.6722107 0.6810592 #>  [130,] 0.7534186 0.8638683 0.8922667 #>  [131,] 0.5792892 0.6034659 0.6037886 #>  [132,] 1.0400980 1.0527437 1.1095605 #>  [133,] 1.1025864 1.1466248 1.1598013 #>  [134,] 1.0265421 1.0324822 1.0638318 #>  [135,] 0.7613913 0.7953037 0.8461553 #>  [136,] 0.7392527 0.7578532 0.7697211 #>  [137,] 0.5285873 0.5330522 0.5525109 #>  [138,] 0.5510266 0.6723007 0.6747546 #>  [139,] 1.0675354 1.1265847 1.1271569 #>  [140,] 0.6470945 0.6477824 0.6608871 #>  [141,] 0.8684536 0.8797244 0.9367317 #>  [142,] 0.9503114 0.9737941 0.9742115 #>  [143,] 0.7799516 0.8181724 0.8194006 #>  [144,] 0.5827984 0.5950422 0.5964905 #>  [145,] 0.5822661 0.6078538 0.6635136 #>  [146,] 0.7046603 0.7087777 0.7238737 #>  [147,] 1.1446958 1.1464293 1.1745037 #>  [148,] 0.6846863 0.6906012 0.7206119 #>  [149,] 0.6207611 0.6229545 0.6370910 #>  [150,] 0.5992176 0.6058253 0.6130268 #>  [151,] 2.2089997 2.2225337 2.2346835 #>  [152,] 0.8532855 0.8618399 0.9242493 #>  [153,] 0.5710429 0.5811051 0.5951856 #>  [154,] 0.9133595 0.9280277 0.9798502 #>  [155,] 0.9117824 0.9307444 0.9564239 #>  [156,] 0.7148925 0.7492732 0.7673249 #>  [157,] 0.8968027 0.9072325 0.9509572 #>  [158,] 0.9654974 1.0455574 1.0459188 #>  [159,] 0.7236880 0.7334557 0.7348916 #>  [160,] 0.8874088 0.9662852 0.9992228 #>  [161,] 0.7206054 0.7305428 0.7424594 #>  [162,] 0.5865099 0.5953185 0.6255418 #>  [163,] 0.6356416 0.6451308 0.6840291 #>  [164,] 0.9712402 1.0347028 1.0562382 #>  [165,] 1.1277515 1.1333767 1.1404135 #>  [166,] 0.8196062 0.9657471 0.9709280 #>  [167,] 0.9801407 0.9972232 1.1068070 #>  [168,] 1.2382703 1.3165108 1.3412014 #>  [169,] 0.9415717 0.9527633 0.9930509 #>  [170,] 0.6119446 0.6279466 0.6361075 #>  [171,] 0.7806188 0.7893445 0.7988429 #>  [172,] 0.9046906 0.9110357 0.9536265 #>  [173,] 0.6012166 0.6586619 0.6716481 #>  [174,] 0.7266872 0.7760250 0.7875099 #>  [175,] 0.6404362 0.6586057 0.7152927 #>  [176,] 0.9958223 1.0021266 1.0470433 #>  [177,] 0.5932025 0.5986179 0.6064783 #>  [178,] 0.8571196 0.8659538 0.8684326 #>  [179,] 0.4787155 0.5245550 0.5352854 #>  [180,] 0.5345596 0.5449089 0.5700780 #>  [181,] 0.6936921 0.7184717 0.7189639 #>  [182,] 1.0618172 1.0739660 1.0761968 #>  [183,] 1.4321518 1.4861716 1.5427549 #>  [184,] 0.5876831 0.6070604 0.6366043 #>  [185,] 1.5439590 1.5848234 1.6003014 #>  [186,] 0.6590254 0.6687360 0.6938734 #>  [187,] 1.0341682 1.0471668 1.0582398 #>  [188,] 0.9674908 0.9975058 1.0659237 #>  [189,] 1.2419306 1.2671021 1.2701939 #>  [190,] 1.4218098 1.4402722 1.4607048 #>  [191,] 0.6971871 0.7216208 0.7458085 #>  [192,] 0.5417799 0.5454209 0.5768689 #>  [193,] 1.3418604 1.3695998 1.3883092 #>  [194,] 0.4964958 0.5378948 0.5493696 #>  [195,] 0.8473752 0.8628233 0.8834012 #>  [196,] 1.0827447 1.0935846 1.1677906 #>  [197,] 0.5467388 0.5908807 0.6253631 #>  [198,] 0.9163599 1.0030129 1.0696304 #>  [199,] 0.9305869 0.9456165 0.9475778 #>  [200,] 1.5692857 1.6207648 1.7020637 #>  [201,] 0.7185193 0.7324104 0.7464870 #>  [202,] 1.0278318 1.0337703 1.0559473 #>  [203,] 0.9946212 0.9955434 0.9990913 #>  [204,] 0.7288669 0.7410647 0.7422189 #>  [205,] 0.6634604 0.6912259 0.6974060 #>  [206,] 0.4247332 0.4366981 0.4613315 #>  [207,] 0.8807766 0.8842697 0.9225660 #>  [208,] 0.9706670 1.0071630 1.0081899 #>  [209,] 0.7355539 0.7520811 0.7578263 #>  [210,] 1.0263938 1.0715332 1.1232698 #>  [211,] 0.4325420 0.4344949 0.5064654 #>  [212,] 0.6809244 0.7132584 0.7159389 #>  [213,] 0.8482498 0.8489447 0.8588990 #>  [214,] 0.6723534 0.6868789 0.7154759 #>  [215,] 0.4695873 0.4999581 0.5119588 #>  [216,] 0.8358591 0.8648866 0.8681724 #>  [217,] 0.9480563 0.9779215 0.9894179 #>  [218,] 1.1690557 1.1872227 1.2017895 #>  [219,] 0.7628285 0.7719532 0.7863941 #>  [220,] 1.1102751 1.1325726 1.1444335 #>  [221,] 0.7751864 0.7845348 0.8219557 #>  [222,] 0.7553541 0.7578263 0.7663822 #>  [223,] 1.0333185 1.0432275 1.1403094 #>  [224,] 0.7442744 0.7543458 0.8512793 #>  [225,] 0.7464954 0.7635375 0.8135967 #>  [226,] 0.5595632 0.6114577 0.6114677 #>  [227,] 0.9535711 0.9936765 1.0235102 #>  [228,] 0.7356157 0.7437694 0.7572573 #>  [229,] 0.5025751 0.6035025 0.6068528 #>  [230,] 0.7001563 0.7113882 0.7338528 #>  [231,] 0.5370944 0.5389230 0.5487656 #>  [232,] 0.6962283 0.7144538 0.7264489 #>  [233,] 0.6676003 0.6732690 0.6781773 #>  [234,] 1.3703660 1.3985772 1.4024455 #>  [235,] 0.5499731 0.5882918 0.6010852 #>  [236,] 0.6096566 0.6123452 0.6630137 #>  [237,] 0.8945328 0.9166079 0.9324132 #>  [238,] 1.4807642 1.5002037 1.5245387 #>  [239,] 0.5932890 0.5987662 0.6090609 #>  [240,] 1.0487744 1.0918932 1.0923574 #>  [241,] 0.7107093 0.7244433 0.7335742 #>  [242,] 0.5845806 0.6133667 0.6270708 #>  [243,] 0.9080551 0.9353756 0.9459526 #>  [244,] 0.6923230 0.7165293 0.7497123 #>  [245,] 1.2850462 1.3013075 1.3150677 #>  [246,] 0.7227546 0.7440133 0.7619388 #>  [247,] 1.8689899 1.8956209 1.9011599 #>  [248,] 0.5391472 0.5487656 0.5495153 #>  [249,] 0.8697695 0.8746924 0.9392814 #>  [250,] 0.8970631 0.9559000 1.0248221 #>  [251,] 0.7234828 0.7629489 0.7682768 #>  [252,] 0.9594565 0.9924208 0.9995880 #>  [253,] 1.5373272 1.5774333 1.6208072 #>  [254,] 1.6215277 1.6343889 1.6397912 #>  [255,] 0.9061975 0.9144469 0.9507295 #>  [256,] 0.7594324 0.7817892 0.7933188 #>  [257,] 0.6979235 0.7206647 0.7578915 #>  [258,] 0.5167833 0.5533164 0.5587616 #>  [259,] 0.8064133 0.8353881 0.8461163 #>  [260,] 0.6190120 0.6201832 0.6207879 #>  [261,] 1.3051861 1.3693746 1.3830779 #>  [262,] 0.5441846 0.5498992 0.5589563 #>  [263,] 0.7226064 0.7550994 0.8032979 #>  [264,] 0.7169472 0.7291115 0.7367069 #>  [265,] 0.6409249 0.6803461 0.7065688 #>  [266,] 1.1970765 1.2178760 1.2670896 #>  [267,] 0.7306908 0.7360474 0.7678067 #>  [268,] 0.6000184 0.6329207 0.6454009 #>  [269,] 0.7988210 0.8109269 0.8901735 #>  [270,] 0.7558677 0.7594827 0.7703849 #>  [271,] 0.7333965 0.7531662 0.7862046 #>  [272,] 1.6060064 1.6081301 1.6208758 #>  [273,] 0.7764194 0.7846132 0.8063646 #>  [274,] 0.9708261 0.9732825 1.0277021 #>  [275,] 1.7116543 1.7141558 1.7425873 #>  [276,] 0.7258771 0.7397380 0.7437475 #>  [277,] 0.7052294 0.7162788 0.7212919 #>  [278,] 0.5643063 0.6145635 0.6163742 #>  [279,] 1.3814765 1.4394038 1.5412532 #>  [280,] 0.8324663 0.8328581 0.8385343 #>  [281,] 0.6953124 0.7021238 0.7121062 #>  [282,] 0.7230386 0.7510682 0.7694517 #>  [283,] 0.7504132 0.7527496 0.7737831 #>  [284,] 0.7528660 0.7569395 0.7892005 #>  [285,] 0.5956650 0.6238898 0.6307001 #>  [286,] 1.0610959 1.0933024 1.0989698 #>  [287,] 1.2409289 1.2510199 1.2542499 #>  [288,] 1.1698452 1.2491694 1.2646956 #>  [289,] 0.8461163 0.8966307 0.9182090 #>  [290,] 1.0378920 1.0405830 1.1170108 #>  [291,] 0.5508413 0.5622796 0.5782738 #>  [292,] 0.5607428 0.5736183 0.5751163 #>  [293,] 0.7061298 0.7131610 0.7143054 #>  [294,] 0.6089069 0.6444084 0.6463037 #>  [295,] 1.7940298 1.8271120 1.8476429 #>  [296,] 0.6026737 0.6471335 0.6477480 #>  [297,] 1.0798255 1.0894331 1.1173290 #>  [298,] 0.7135317 0.7225286 0.7958216 #>  [299,] 0.5577248 0.6242411 0.6346328 #>  [300,] 1.4765082 1.5037288 1.5340864 #>  [301,] 1.0051859 1.0657454 1.0946269 #>  [302,] 1.3653544 1.4095457 1.4265542 #>  [303,] 0.9478632 0.9498725 0.9617648 #>  [304,] 1.0048851 1.0337703 1.0428196 #>  [305,] 0.7380047 0.7430910 0.7433025 #>  [306,] 0.7746470 0.7845990 0.7867034 #>  [307,] 0.6971871 0.7160036 0.7393158 #>  [308,] 0.6885083 0.7160123 0.7355539 #>  [309,] 0.8433600 0.8487066 0.8512373 #>  [310,] 1.4252573 1.4352244 1.4368390 #>  [311,] 0.9996252 1.0344727 1.0387606 #>  [312,] 0.8873318 0.9132087 0.9292520 #>  [313,] 1.0397321 1.0655787 1.0920320 #>  [314,] 0.6068528 0.6201891 0.6425228 #>  [315,] 1.4427939 1.4677958 1.4918924 #>  [316,] 1.1242455 1.1256979 1.1760056 #>  [317,] 1.3468353 1.3832758 1.3845542 #>  [318,] 0.5935778 0.5950422 0.6320586 #>  [319,] 0.5064654 0.5559240 0.5623779 #>  [320,] 0.7866790 0.8149609 0.8315063 #>  [321,] 0.6400075 0.6408894 0.6456362 #>  [322,] 1.1328210 1.1752649 1.2089816 #>  [323,] 0.7349377 0.8101178 0.8292492 #>  [324,] 0.5342967 0.5738679 0.5777207 #>  [325,] 0.6144531 0.6443330 0.6577759 #>  [326,] 0.7793472 0.7874166 0.7901472 #>  [327,] 0.4620479 0.4864405 0.5013145 #>  [328,] 0.7521042 0.7754567 0.7853192 #>  [329,] 0.6255418 0.6394326 0.6464379 #>  [330,] 0.7753754 0.8155538 0.8201133 #>  [331,] 1.1490755 1.1509403 1.1942738 #>  [332,] 0.5411867 0.5565556 0.5705945 #>  [333,] 0.6530228 0.7534186 0.7554486 #>  [334,] 0.7869759 0.7875010 0.7880983 #>  [335,] 0.8852704 0.8975321 0.9082361 #>  [336,] 0.8056816 0.8128145 0.8378578 #>  [337,] 0.7256074 0.7258611 0.7305428 #>  [338,] 0.7312599 0.7328537 0.7523778 #>  [339,] 1.5060299 1.5261208 1.5271130 #>  [340,] 1.2548768 1.2552293 1.2670560 #>  [341,] 0.6458386 0.6627981 0.6668213 #>  [342,] 0.7925093 0.7983004 0.8098243 #>  [343,] 0.5100656 0.5219703 0.5370944 #>  [344,] 0.7744641 0.7880983 0.8039579 #>  [345,] 0.8010039 0.8101158 0.8119628 #>  [346,] 0.7124126 0.7200326 0.7317553 #>  [347,] 0.8178039 0.8391319 0.8530273 #>  [348,] 0.7753728 0.7851221 0.8003662 #>  [349,] 0.5750732 0.5906419 0.6053925 #>  [350,] 0.8932595 0.8951056 0.8999159 #>  [351,] 0.9343982 0.9415717 0.9497276 #>  [352,] 0.8406542 0.8957667 0.9596434 #>  [353,] 0.7563593 0.7587406 0.7678363 #>  [354,] 0.8053104 0.9115583 0.9921988 #>  [355,] 0.7113882 0.7147746 0.7202816 #>  [356,] 0.4953010 0.5607769 0.5836742 #>  [357,] 0.4947276 0.5234089 0.5288898 #>  [358,] 0.9940121 1.0113759 1.0153922 #>  [359,] 0.6874813 0.6882412 0.6951822 #>  [360,] 0.7899424 0.8244305 0.8308071 #>  [361,] 0.6366573 0.7056270 0.7117012 #>  [362,] 0.9433332 0.9514402 0.9573015 #>  [363,] 0.6740929 0.6885382 0.7050752 #>  [364,] 1.1527390 1.1570990 1.1986135 #>  [365,] 1.3324179 1.3365939 1.3731023 #>  [366,] 1.8290250 1.9234399 1.9446449 #>  [367,] 0.8340313 0.8460332 0.8578160 #>  [368,] 0.7957651 0.8002012 0.8111556 #>  [369,] 0.5314768 0.5826439 0.5849964 #>  [370,] 0.5876971 0.5911310 0.6052355 #>  [371,] 0.5347003 0.5608918 0.5949633 #>  [372,] 0.5107382 0.5123130 0.5144406 #>  [373,] 0.6555343 0.6979235 0.7085403 #>  [374,] 0.5392372 0.5484070 0.5496834 #>  [375,] 0.6056531 0.6867025 0.7296623 #>  [376,] 0.9428304 1.0454655 1.2142968 #>  [377,] 0.8646393 0.8748317 0.8810675 #>  [378,] 0.6017397 0.6198322 0.6416739 #>  [379,] 1.4483185 1.5517523 1.6115003 #>  [380,] 0.7424806 0.7606718 0.7610721 #>  [381,] 0.6235697 0.6303238 0.6353263 #>  [382,] 0.6627261 0.6632452 0.6828756 #>  [383,] 0.8459387 0.8529310 0.8844802 #>  [384,] 0.6178069 0.6333369 0.6478005 #>  [385,] 0.7963100 0.8198512 0.8303961 #>  [386,] 0.8603825 0.8877087 0.8975321 #>  [387,] 1.0418609 1.0441237 1.0655741 #>  [388,] 2.2394436 2.3506058 2.3709512 #>  [389,] 0.7347900 0.7704819 0.8179644 #>  [390,] 0.8186443 0.8244305 0.8339230 #>  [391,] 0.6119446 0.6131996 0.6203439 #>  [392,] 0.7083180 0.7152460 0.7160036 #>  [393,] 0.6155668 0.6282067 0.6444930 #>  [394,] 0.8181383 0.8257512 0.8278351 #>  [395,] 0.8748692 0.8780644 0.8805326 #>  [396,] 0.5256869 0.5635151 0.5685578 #>  [397,] 0.7283088 0.7390392 0.7455031 #>  [398,] 0.6134857 0.6256511 0.6334958 #>  [399,] 0.9635726 0.9703515 0.9891784 #>  [400,] 1.3338612 1.3450998 1.4072025 #>  [401,] 0.6407905 0.6513280 0.6682062 #>  [402,] 0.4738496 0.4783321 0.4922347 #>  [403,] 0.8942360 0.8945436 0.9626549 #>  [404,] 0.5392372 0.5401619 0.5454907 #>  [405,] 0.9112522 0.9419134 0.9476631 #>  [406,] 0.7206647 0.7215687 0.7390335 #>  [407,] 0.6480411 0.6618062 0.6636908 #>  [408,] 0.6242248 0.6242916 0.7137027 #>  [409,] 1.0471374 1.0588655 1.0840968 #>  [410,] 0.5960943 0.6729026 0.7000474 #>  [411,] 1.0023901 1.0630257 1.0829205 #>  [412,] 0.9581371 0.9678127 0.9878576 #>  [413,] 0.8287256 0.8692157 0.8821057 #>  [414,] 0.7287834 0.7458320 0.7533933 #>  [415,] 0.7428203 0.7607583 0.7688400 #>  [416,] 1.0287631 1.0412204 1.0413952 #>  [417,] 0.8286104 0.8286456 0.8299695 #>  [418,] 0.6058660 0.6126318 0.6134511 #>  [419,] 0.6621204 0.6796141 0.6807782 #>  [420,] 1.2209384 1.2298853 1.2384719 #>  [421,] 0.8304668 0.8597801 0.8884935 #>  [422,] 0.8254897 0.8265958 0.8352055 #>  [423,] 0.7612954 0.7827696 0.7831787 #>  [424,] 0.6613668 0.6729737 0.6972758 #>  [425,] 0.8913552 0.9082361 0.9163599 #>  [426,] 0.9307444 0.9597439 0.9777608 #>  [427,] 0.6590254 0.6721565 0.6863261 #>  [428,] 0.5693537 0.5721535 0.5734384 #>  [429,] 0.9609488 0.9778694 1.0253731 #>  [430,] 0.7323300 0.8069098 0.8418135 #>  [431,] 0.5526438 0.5681438 0.5793072 #>  [432,] 0.6846863 0.6874813 0.7212601 #>  [433,] 0.6141953 0.6313366 0.6566496 #>  [434,] 1.0499016 1.0619389 1.0829410 #>  [435,] 1.0560118 1.0610208 1.1487269 #>  [436,] 0.6523336 0.6600073 0.6788684 #>  [437,] 0.8612662 0.8729062 0.8985717 #>  [438,] 0.5627260 0.6171181 0.6570678 #>  [439,] 0.8815829 0.8916487 0.9230259 #>  [440,] 0.6056531 0.6425228 0.6791553 #>  [441,] 0.7363637 0.7598081 0.7820987 #>  [442,] 0.9271789 0.9561956 0.9582199 #>  [443,] 0.5095389 0.5161810 0.5534064 #>  [444,] 1.0023464 1.0364554 1.0608307 #>  [445,] 0.9224434 0.9526086 0.9622837 #>  [446,] 0.6694624 0.7010809 0.7072794 #>  [447,] 1.2894016 1.3173377 1.3660656 #>  [448,] 0.7323300 0.7408098 0.7452691 #>  [449,] 0.5520579 0.6043425 0.6472867 #>  [450,] 0.7994669 0.8149609 0.8201898 #>  [451,] 0.8243013 0.8289288 0.8295626 #>  [452,] 1.0161238 1.0714325 1.0818690 #>  [453,] 0.8532855 0.9133595 0.9474560 #>  [454,] 1.6396814 1.6620536 1.6760108 #>  [455,] 1.6829351 1.7015064 1.7090957 #>  [456,] 0.7306226 0.7482847 0.7736691 #>  [457,] 0.6453863 0.6789813 0.7032168 #>  [458,] 0.7849051 0.7921675 0.8256576 #>  [459,] 0.5513881 0.6142245 0.6459179 #>  [460,] 0.5780864 0.5801205 0.5818383 #>  [461,] 0.9493278 0.9524348 1.0156341 #>  [462,] 0.5426542 0.5847446 0.6145969 #>  [463,] 0.8192250 0.8794410 0.9707581 #>  [464,] 0.8892900 0.9543224 1.0005081 #>  [465,] 0.5009334 0.5096409 0.5381621 #>  [466,] 1.1677893 1.2248848 1.2646526 #>  [467,] 0.6461084 0.6524817 0.6979419 #>  [468,] 0.9302832 0.9838753 1.0226672 #>  [469,] 0.9211836 0.9465300 0.9990913 #>  [470,] 0.5986179 0.6187133 0.6194951 #>  [471,] 0.8951591 0.9168745 0.9269040 #>  [472,] 0.8395574 0.8405275 0.8426086 #>  [473,] 0.8048092 0.8196062 0.8280196 #>  [474,] 0.9448337 1.0003745 1.0092891 #>  [475,] 0.5142716 0.5698535 0.5775571 #>  [476,] 0.5099059 0.5575083 0.5602622 #>  [477,] 0.7076203 0.7083180 0.7641619 #>  [478,] 0.9145129 0.9565875 0.9629865 #>  [479,] 0.7250558 0.7490696 0.7885646 #>  [480,] 0.7515804 0.7578915 0.7624690 #>  [481,] 1.3076839 1.4935715 1.5512441 #>  [482,] 1.0024222 1.0076904 1.0259320 #>  [483,] 0.5435387 0.5452288 0.5864097 #>  [484,] 0.6917926 0.7076203 0.7109639 #>  [485,] 0.5454907 0.5643649 0.5689921 #>  [486,] 0.6615057 0.6911593 0.6947210 #>  [487,] 0.7414314 0.7476204 0.7769236 #>  [488,] 0.6268110 0.6324031 0.6537288 #>  [489,] 1.2308074 1.2610614 1.2958820 #>  [490,] 0.5887694 0.6255342 0.6403603 #>  [491,] 0.6726794 0.6773615 0.6998557 #>  [492,] 0.4519019 0.4600060 0.5291112 #>  [493,] 0.9594143 1.0479771 1.0530805 #>  [494,] 1.0801215 1.1577852 1.1613893 #>  [495,] 0.9055188 0.9098616 0.9180464 #>  [496,] 0.7921936 0.8469296 0.9133483 #>  [497,] 0.8141550 0.8238219 0.8365011 #>  [498,] 0.8910149 0.9128618 0.9179834 #>  [499,] 0.5806670 0.5962537 0.6012698 #>  [500,] 0.4777292 0.4874823 0.4942474 #>  [501,] 0.8551861 0.9149326 0.9153011 #>  [502,] 1.1515525 1.1644316 1.1670729 #>  [503,] 1.0192509 1.0391345 1.0431745 #>  [504,] 1.0325464 1.0488552 1.0947236 #>  [505,] 0.7303181 0.7345998 0.7488115 #>  [506,] 0.7102898 0.7167224 0.7246445 #>  [507,] 0.7495709 0.7909290 0.8105152 #>  [508,] 0.7503487 0.7730793 0.8247594 #>  [509,] 0.8689182 0.9419185 0.9991032 #>  [510,] 0.6408943 0.6692771 0.6817775 #>  [511,] 0.5890308 0.6524376 0.6686755 #>  [512,] 0.9450311 0.9509672 0.9664793 #>  [513,] 0.6212144 0.6364324 0.6666021 #>  [514,] 0.7610936 0.8354384 0.8470893 #>  [515,] 1.4408273 1.4523400 1.5379106 #>  [516,] 0.5685578 0.5818383 0.5842928 #>  [517,] 1.7124943 1.7156299 1.7801222 #>  [518,] 1.3367042 1.3368692 1.3414947 #>  [519,] 1.3180918 1.3355067 1.3426884 #>  [520,] 0.7551200 0.7793038 0.8112310 #>  [521,] 0.5508413 0.5913373 0.6108850 #>  [522,] 0.6649456 0.7041993 0.7175508 #>  [523,] 0.7588953 0.7827273 0.7976654 #>  [524,] 0.6177445 0.6273096 0.6284336 #>  [525,] 0.6923200 0.7482857 0.7854905 #>  [526,] 0.5882276 0.5938652 0.5958516 #>  [527,] 0.8539398 0.8890301 0.9162928 #>  [528,] 0.9275475 0.9747775 0.9767148 #>  [529,] 1.5041122 1.5094892 1.5157886 #>  [530,] 0.6024242 0.6198720 0.6647390 #>  [531,] 0.5700780 0.5751163 0.6098532 #>  [532,] 0.6576738 0.6818640 0.6999357 #>  [533,] 0.9306838 0.9799510 0.9996927 #>  [534,] 0.9055612 0.9122924 0.9529367 #>  [535,] 1.6360867 1.7667388 1.7700906 #>  [536,] 0.6051104 0.6397372 0.6802602 #>  [537,] 0.6811057 0.7049481 0.7635729 #>  [538,] 0.8501898 0.8901735 0.9131696 #>  [539,] 0.5989840 0.6204238 0.6458386 #>  [540,] 0.9244071 0.9473346 1.0446986 #>  [541,] 0.6416648 0.6789813 0.6933603 #>  [542,] 0.6746746 0.6848366 0.6906669 #>  [543,] 0.6269648 0.6416400 0.6843639 #>  [544,] 1.1156811 1.2178123 1.2194026 #>  [545,] 0.6042911 0.6058253 0.6327151 #>  [546,] 0.8816028 0.8906321 0.8956357 #>  [547,] 0.5808777 0.5868174 0.6334958 #>  [548,] 0.5254561 0.5381621 0.6282327 #>  [549,] 0.6667679 0.6758458 0.6898790 #>  [550,] 0.6688463 0.7026075 0.7256664 #>  [551,] 0.6370550 0.6608040 0.6782863 #>  [552,] 0.7023328 0.7604528 0.7764858 #>  [553,] 0.6123769 0.6329852 0.6459280 #>  [554,] 1.0571482 1.0812771 1.1125415 #>  [555,] 0.9141257 0.9275159 0.9279888 #>  [556,] 1.1195738 1.2047548 1.2240272 #>  [557,] 1.1577852 1.1643523 1.2231253 #>  [558,] 0.6470008 0.6564024 0.6641121 #>  [559,] 0.6562201 0.6624975 0.6821642 #>  [560,] 0.6572786 0.6727211 0.6732989 #>  [561,] 0.6579872 0.6817761 0.6890883 #>  [562,] 0.6409941 0.6809650 0.6923230 #>  [563,] 0.7047764 0.7154049 0.7531130 #>  [564,] 0.5510357 0.5635842 0.5795338 #>  [565,] 0.6664301 0.6729026 0.6822324 #>  [566,] 0.9441225 1.0155340 1.0280372 #>  [567,] 0.5849964 0.5868191 0.5916185 #>  [568,] 0.7234828 0.7390392 0.7630445 #>  [569,] 0.7457607 0.7681571 0.7751051 #>  [570,] 0.5739704 0.5847892 0.5883729 #>  [571,] 1.1414588 1.1560052 1.1562478 #>  [572,] 1.1462040 1.1522709 1.1773801 #>  [573,] 0.8303102 0.8452119 0.8655576 #>  [574,] 0.7993400 0.7993618 0.8466740 #>  [575,] 0.9566131 0.9658693 0.9963300 #>  [576,] 0.7396187 0.7505349 0.7516938 #>  [577,] 0.7079110 0.7110242 0.7290735 #>  [578,] 0.5254561 0.5427875 0.5503466 #>  [579,] 1.0097853 1.0368792 1.0488552 #>  [580,] 1.3252728 1.3536123 1.3608720 #>  [581,] 1.0136322 1.0221118 1.0467336 #>  [582,] 0.7334557 0.7609576 0.7904316 #>  [583,] 0.6579872 0.6601343 0.7487061 #>  [584,] 1.3984146 1.4061093 1.4065259 #>  [585,] 0.9252681 0.9410050 0.9710873 #>  [586,] 0.5106467 0.5131819 0.5223936 #>  [587,] 0.6894766 0.7080345 0.7191515 #>  [588,] 0.5600523 0.5878239 0.5923911 #>  [589,] 0.6043425 0.6161049 0.6235000 #>  [590,] 0.7208956 0.7337960 0.7425501 #>  [591,] 0.7334060 0.7582511 0.7642891 #>  [592,] 0.8438528 0.9422914 0.9716052 #>  [593,] 0.5037654 0.5189072 0.5878515 #>  [594,] 1.7937010 1.8014012 1.8037201 #>  [595,] 0.5496834 0.5664329 0.6012904 #>  [596,] 0.5962003 0.6064117 0.6341445 #>  [597,] 0.8591774 0.8999190 0.9002669 #>  [598,] 0.5110545 0.5285873 0.5425230 #>  [599,] 0.9918942 1.0375892 1.0832935 #>  [600,] 1.0110745 1.0260936 1.0446612 #>  [601,] 1.1746962 1.1928488 1.2033179 #>  [602,] 0.7922672 0.8267714 0.8461763 #>  [603,] 0.7163697 0.7177605 0.7954127 #>  [604,] 0.7004443 0.7124835 0.7362016 #>  [605,] 2.3637985 2.3725682 2.3813016 #>  [606,] 1.2846110 1.3003040 1.3008366 #>  [607,] 0.6319997 0.6490731 0.6626374 #>  [608,] 0.8110288 0.8129563 0.8137052 #>  [609,] 0.7933109 0.8039663 0.8411431 #>  [610,] 0.6932412 0.6942430 0.7966220 #>  [611,] 1.1784206 1.2611703 1.3135027 #>  [612,] 1.3508067 1.3691983 1.4037931 #>  [613,] 1.1670729 1.2059725 1.2156350 #>  [614,] 0.7546082 0.8155036 0.8366580 #>  [615,] 0.9641346 1.0020187 1.0172594 #>  [616,] 0.8428776 0.8691096 0.9189516 #>  [617,] 0.8191638 0.8235105 0.8531098 #>  [618,] 1.2508195 1.2868380 1.2900066 #>  [619,] 0.8941548 0.8970631 0.9622318 #>  [620,] 0.6861838 0.6880038 0.7369863 #>  [621,] 0.6491785 0.6744807 0.6778130 #>  [622,] 2.1660062 2.1666159 2.2238799 #>  [623,] 0.7735294 0.8257512 0.8660625 #>  [624,] 0.7149491 0.7265415 0.7488115 #>  [625,] 0.6830304 0.7447227 0.7781691 #>  [626,] 0.8566046 0.8684764 0.9387848 #>  [627,] 0.9501030 0.9618330 1.0120385 #>  [628,] 1.3518954 1.3593676 1.3833118 #>  [629,] 0.7780176 0.7974304 0.8071464 #>  [630,] 0.7883282 0.7999763 0.8028825 #>  [631,] 1.1923796 1.2709606 1.2950137 #>  [632,] 2.0065416 2.0316541 2.0885188 #>  [633,] 0.7565907 0.7666074 0.7801990 #>  [634,] 0.5417114 0.5513287 0.5882473 #>  [635,] 1.1260617 1.1313581 1.1452003 #>  [636,] 0.8612136 0.9120400 0.9324132 #>  [637,] 0.6312644 0.6649456 0.6868093 #>  [638,] 2.1599447 2.2251935 2.2296056 #>  [639,] 0.8162021 0.8467816 0.8953851 #>  [640,] 0.6017274 0.6184230 0.6342117 #>  [641,] 0.6923830 0.7015550 0.7212004 #>  [642,] 1.1247831 1.1367889 1.1534264 #>  [643,] 0.6605103 0.6961183 0.7003882 #>  [644,] 0.8927000 0.9046625 0.9117851 #>  [645,] 0.6886293 0.6922509 0.7080962 #>  [646,] 0.7349377 0.8247721 0.9069388 #>  [647,] 0.7047499 0.7719532 0.7721073 #>  [648,] 1.0207513 1.0265664 1.0330468 #>  [649,] 0.7723585 0.7993618 0.8546557 #>  [650,] 0.8892783 0.8974167 0.9046906 #>  [651,] 0.7948121 0.8959002 0.9039296 #>  [652,] 0.5719809 0.5789012 0.6131582 #>  [653,] 0.7293896 0.8151264 0.8259272 #>  [654,] 0.6632625 0.6687215 0.6724273 #>  [655,] 0.5604958 0.5879825 0.6006691 #>  [656,] 0.8852704 0.8906321 0.9288499 #>  [657,] 1.1736763 1.1799911 1.2123901 #>  [658,] 0.8172884 0.8416430 0.8571632 #>  [659,] 0.8631583 0.8641115 0.8750541 #>  [660,] 1.0448479 1.0775402 1.0830474 #>  [661,] 0.8808413 0.9154230 0.9256075 #>  [662,] 0.7516315 0.7579547 0.7733662 #>  [663,] 0.6711536 0.6764767 0.6846895 #>  [664,] 0.7337960 0.7953037 0.7998409 #>  [665,] 0.9196537 1.0030873 1.0487035 #>  [666,] 0.7784092 0.7808530 0.7863661 #>  [667,] 0.5983936 0.6194951 0.6313071 #>  [668,] 0.9341934 1.0104025 1.0265421 #>  [669,] 0.7583704 0.7993793 0.8015217 #>  [670,] 0.6056011 0.6137069 0.6244251 #>  [671,] 0.5776237 0.5916741 0.6084782 #>  [672,] 0.5705945 0.5781882 0.6118101 #>  [673,] 0.4924915 0.5527803 0.5608590 #>  [674,] 0.7663582 0.8549724 0.8747164 #>  [675,] 1.3922297 1.4325791 1.4348737 #>  [676,] 0.7206119 0.7301571 0.7818116 #>  [677,] 1.4340342 1.4524023 1.4783216 #>  [678,] 0.9088303 0.9691437 0.9815295 #>  [679,] 0.8353644 0.8668316 0.8676301 #>  [680,] 1.8019455 1.8434460 1.8574991 #>  [681,] 0.8501898 0.8525942 0.8554963 #>  [682,] 0.7141715 0.7213573 0.7459975 #>  [683,] 0.7611238 0.7952279 0.8081929 #>  [684,] 0.5787697 0.6070293 0.6135651 #>  [685,] 0.5451460 0.5495628 0.5601770 #>  [686,] 0.7313398 0.7347900 0.7560712 #>  [687,] 1.6346782 1.6844278 1.6922557 #>  [688,] 0.5125215 0.5681430 0.6129795 #>  [689,] 0.7814990 0.8066735 0.8232115 #>  [690,] 0.9606103 0.9700046 1.0509937 #>  [691,] 1.0349901 1.0560451 1.0946166 #>  [692,] 0.7616101 0.7627950 0.8079365 #>  [693,] 0.9629358 0.9870404 1.0066603 #>  [694,] 0.7003882 0.7034785 0.7073414 #>  [695,] 0.6508254 0.6515822 0.7177627 #>  [696,] 0.9574811 0.9829421 0.9852836 #>  [697,] 1.3503709 1.3701210 1.4081112 #>  [698,] 0.8011171 0.8066735 0.8292492 #>  [699,] 1.0935935 1.1154435 1.1195758 #>  [700,] 0.8101300 0.8612811 0.8895930 #>  [701,] 0.8572156 0.8620148 0.8777101 #>  [702,] 0.6947483 0.7610121 0.7811635 #>  [703,] 0.5556706 0.5587616 0.5807307 #>  [704,] 1.1187646 1.1569186 1.1598103 #>  [705,] 1.0259321 1.0322042 1.0698224 #>  [706,] 0.6990035 0.7016447 0.7143282 #>  [707,] 0.5604958 0.5990501 0.6096156 #>  [708,] 0.5435387 0.6053571 0.6069387 #>  [709,] 0.5300543 0.5877707 0.6546214 #>  [710,] 0.9510256 0.9536991 0.9589520 #>  [711,] 0.5805057 0.6391414 0.6468376 #>  [712,] 0.8063401 0.8896483 0.9158784 #>  [713,] 0.7453247 0.7628332 0.7685200 #>  [714,] 0.7323617 0.7936819 0.8063745 #>  [715,] 0.4814495 0.4850535 0.5055641 #>  [716,] 0.5750459 0.6877253 0.6990035 #>  [717,] 0.8073717 0.8278491 0.8308071 #>  [718,] 0.6369095 0.6775239 0.6868776 #>  [719,] 0.5843179 0.5856935 0.6040524 #>  [720,] 1.0931621 1.0933541 1.1243613 #>  [721,] 0.8102313 0.8350167 0.8776936 #>  [722,] 0.5114058 0.5283746 0.5325773 #>  [723,] 1.4661718 1.4687174 1.5009725 #>  [724,] 0.7996514 0.8063552 0.8081929 #>  [725,] 0.6619513 0.7059177 0.7386222 #>  [726,] 0.8343096 0.8470893 0.8514594 #>  [727,] 1.2189016 1.2671527 1.2790131 #>  [728,] 0.5384074 0.5516395 0.5635842 #>  [729,] 0.7166441 0.7396014 0.7452667 #>  [730,] 0.7500610 0.7845806 0.8085094 #>  [731,] 0.8020966 0.8061135 0.8063443 #>  [732,] 0.9256075 0.9640000 0.9661644 #>  [733,] 0.8003840 0.8994248 0.9239358 #>  [734,] 0.8494870 0.8587482 0.8942336 #>  [735,] 1.0068446 1.0129398 1.0512224 #>  [736,] 0.8433600 0.8592934 0.9481347 #>  [737,] 0.6645180 0.6677843 0.6822198 #>  [738,] 0.6562005 0.6838056 0.7515804 #>  [739,] 0.6374756 0.6387197 0.6409249 #>  [740,] 0.6078798 0.6135929 0.6315473 #>  [741,] 0.6810967 0.7235381 0.7482682 #>  [742,] 0.5491340 0.5631762 0.6260784 #>  [743,] 0.6328519 0.6458077 0.6922257 #>  [744,] 1.0373434 1.0535254 1.1557079 #>  [745,] 0.7109280 0.7470248 0.7785919 #>  [746,] 0.5470830 0.5555364 0.5738679 #>  [747,] 0.5756972 0.6101008 0.6181269 #>  [748,] 0.5808777 0.5821703 0.5993615 #>  [749,] 0.6382653 0.6444084 0.6576891 #>  [750,] 0.8669378 0.8755417 0.8891678 #>  [751,] 0.5561625 0.5569478 0.5608590 #>  [752,] 0.6657381 0.6724607 0.7122088 #>  [753,] 0.8210494 0.8252478 0.8374024 #>  [754,] 1.0945699 1.1127512 1.1268278 #>  [755,] 0.7631248 0.7715274 0.7862498 #>  [756,] 0.5945959 0.6240525 0.6256511 #>  [757,] 0.8957253 0.9023596 0.9172290 #>  [758,] 0.8690838 0.9381840 0.9483903 #>  [759,] 0.5853759 0.6026737 0.6144531 #>  [760,] 0.6295563 0.6370910 0.6601138 #>  [761,] 0.9196537 0.9383379 0.9555947 #>  [762,] 0.6382815 0.6564024 0.6688923 #>  [763,] 0.8806644 0.8853284 0.9292445 #>  [764,] 1.0755303 1.0776309 1.0893885 #>  [765,] 0.9581439 0.9648048 0.9773952 #>  [766,] 0.6328519 0.6746746 0.6807929 #>  [767,] 0.7328537 0.8034847 0.8184379 #>  [768,] 1.1327384 1.1332715 1.2015272 #>  [769,] 0.6815875 0.7567007 0.8058575 #>  [770,] 0.7821367 0.8496123 0.8984836 #>  [771,] 0.7996219 0.8593633 0.8932595 #>  [772,] 0.6537288 0.6668754 0.6736094 #>  [773,] 1.5134913 1.5188229 1.5996366 #>  [774,] 1.0010149 1.0186883 1.0716642 #>  [775,] 0.9133483 0.9231865 0.9450550 #>  [776,] 0.9881581 1.0458649 1.1422726 #>  [777,] 0.5710429 0.6152471 0.6249479 #>  [778,] 0.8123377 0.8346928 0.8484780 #>  [779,] 0.8472093 0.8497861 0.9229997 #>  [780,] 1.1701098 1.1746560 1.1812943 #>  [781,] 0.6558929 0.6840454 0.7073334 #>  [782,] 0.7192542 0.7219761 0.7673621 #>  [783,] 0.7786382 0.8316269 0.9588433 #>  [784,] 0.5316626 0.5538145 0.5554219 #>  [785,] 1.0384015 1.0401673 1.0432042 #>  [786,] 1.2892581 1.2927517 1.3054158 #>  [787,] 0.5523630 0.6063534 0.6509798 #>  [788,] 0.8166710 0.8329400 0.8350457 #>  [789,] 0.8331379 0.8382334 0.8484955 #>  [790,] 0.7160123 0.7201570 0.7583413 #>  [791,] 0.6631198 0.6634604 0.6722208 #>  [792,] 0.5915019 0.6012166 0.6251502 #>  [793,] 0.5860477 0.6058716 0.6088008 #>  [794,] 0.7000230 0.7147746 0.7665657 #>  [795,] 1.3832163 1.3950483 1.4249641 #>  [796,] 0.5931640 0.6249014 0.6335171 #>  [797,] 0.5174165 0.5443091 0.5491340 #>  [798,] 0.5745537 0.6158897 0.6663438 #>  [799,] 0.7034172 0.7064693 0.7099010 #>  [800,] 0.7986403 0.8297580 0.8312882 #>  [801,] 0.7136104 0.7253950 0.7283088 #>  [802,] 0.4247332 0.4321260 0.5253901 #>  [803,] 0.7213064 0.7222299 0.7415707 #>  [804,] 0.6295563 0.6471335 0.6655649 #>  [805,] 0.7642891 0.7830868 0.8295218 #>  [806,] 0.7515885 0.7793166 0.7848826 #>  [807,] 0.7500610 0.7526629 0.7799839 #>  [808,] 0.8650517 0.9088303 0.9447762 #>  [809,] 0.6528471 0.6837691 0.7209590 #>  [810,] 0.9229229 0.9691510 1.0125884 #>  [811,] 0.5142716 0.5391472 0.5597008 #>  [812,] 0.6189544 0.6276337 0.6444930 #>  [813,] 0.6766873 0.6814544 0.7266292 #>  [814,] 1.7058809 1.7185561 1.7230325 #>  [815,] 0.7412124 0.7496567 0.7713514 #>  [816,] 0.7179173 0.7341872 0.7412263 #>  [817,] 0.7936483 0.8431606 0.8702220 #>  [818,] 0.7701678 0.7880437 0.8299695 #>  [819,] 1.0036481 1.0371452 1.0387606 #>  [820,] 0.9510319 0.9553976 0.9821073 #>  [821,] 1.0053344 1.0597595 1.0722267 #>  [822,] 0.7348666 0.7628332 0.8197851 #>  [823,] 1.0298188 1.0448020 1.0900442 #>  [824,] 0.8611498 0.8724211 0.8856480 #>  [825,] 1.3425537 1.3542724 1.3613959 #>  [826,] 0.7440511 0.7772232 0.7895905 #>  [827,] 1.4979233 1.5794959 1.5887285 #>  [828,] 0.8316269 0.8331379 0.8981312 #>  [829,] 0.6865738 0.6883715 0.6924888 #>  [830,] 0.6390560 0.6755186 0.6938734 #>  [831,] 0.6670718 0.6936771 0.6946900 #>  [832,] 0.8109530 0.8272574 0.8335198 #>  [833,] 0.9527889 1.0772562 1.0864736 #>  [834,] 0.8618399 0.8731911 0.8904628 #>  [835,] 0.5533499 0.6229621 0.6333369 #>  [836,] 0.7137906 0.8154132 0.8341124 #>  [837,] 0.9112262 0.9611666 0.9751354 #>  [838,] 1.0082087 1.0483232 1.0521189 #>  [839,] 1.0979359 1.1060143 1.1239948 #>  [840,] 0.8396328 0.8484362 0.8512581 #>  [841,] 0.7907860 0.8029112 0.8032979 #>  [842,] 0.5993500 0.6022685 0.6037886 #>  [843,] 1.0244006 1.0464880 1.0588701 #>  [844,] 1.0525873 1.0698224 1.2024153 #>  [845,] 0.7151920 0.7217005 0.7255889 #>  [846,] 0.5180385 0.5835606 0.5835952 #>  [847,] 1.6516184 1.6568663 1.6772560 #>  [848,] 0.6766873 0.7138119 0.7165032 #>  [849,] 0.8527198 0.8953757 0.9174714 #>  [850,] 0.6570071 0.6848717 0.7178703 #>  [851,] 0.7049843 0.7167933 0.7391644 #>  [852,] 1.0397549 1.1056665 1.1171579 #>  [853,] 0.8186077 0.8249382 0.8737530 #>  [854,] 0.9661644 0.9708157 0.9918918 #>  [855,] 0.8249382 0.8407771 0.8765734 #>  [856,] 0.5414680 0.6118670 0.6158897 #>  [857,] 0.7694119 0.8035696 0.8305285 #>  [858,] 0.9513341 0.9619637 0.9953575 #>  [859,] 0.6133667 0.6255535 0.6381687 #>  [860,] 0.5088117 0.5449089 0.5485289 #>  [861,] 0.6036876 0.6084782 0.6229621 #>  [862,] 0.5406926 0.5601474 0.6201642 #>  [863,] 1.1352311 1.1892980 1.2099421 #>  [864,] 0.4978011 0.5143641 0.5530109 #>  [865,] 0.9244568 0.9684545 0.9778201 #>  [866,] 1.3132424 1.3605197 1.3820220 #>  [867,] 1.0974526 1.1185972 1.1311582 #>  [868,] 0.8249347 0.8345010 0.8350130 #>  [869,] 1.2219324 1.2353832 1.3290049 #>  [870,] 0.7208088 0.7439207 0.7476198 #>  [871,] 0.9590535 0.9700398 0.9921988 #>  [872,] 0.9544562 0.9713468 1.0072932 #>  [873,] 0.6662300 0.6899175 0.7033754 #>  [874,] 0.7490696 0.7607222 0.7882039 #>  [875,] 0.5747101 0.5884685 0.5911310 #>  [876,] 0.7087777 0.8260998 0.9015571 #>  [877,] 1.0649744 1.1214421 1.1236397 #>  [878,] 0.7366019 0.7562299 0.7590943 #>  [879,] 1.2547605 1.2649705 1.2708331 #>  [880,] 0.7838123 0.7870718 0.8276342 #>  [881,] 0.9618330 1.0129213 1.0300429 #>  [882,] 0.7151920 0.7207007 0.7554218 #>  [883,] 1.0990697 1.1022734 1.1304689 #>  [884,] 0.6203773 0.6248943 0.6465333 #>  [885,] 1.2725945 1.2883425 1.3656732 #>  [886,] 0.8493675 0.8655576 0.8821323 #>  [887,] 0.6943789 0.7160461 0.7331094 #>  [888,] 0.4882100 0.5539711 0.5821148 #>  [889,] 0.6056330 0.6561072 0.7825559 #>  [890,] 1.4199338 1.4241940 1.4547407 #>  [891,] 0.9238633 0.9353015 0.9404478 #>  [892,] 0.6924446 0.7028728 0.7102223 #>  [893,] 0.7447464 0.7576757 0.7584819 #>  [894,] 0.7339568 0.7496154 0.7531449 #>  [895,] 0.6350976 0.6989879 0.7366575 #>  [896,] 0.8696953 0.9085277 0.9594677 #>  [897,] 0.8596525 0.8694769 0.8748985 #>  [898,] 0.9278314 0.9317419 0.9384301 #>  [899,] 0.7071852 0.7292750 0.7404071 #>  [900,] 0.7534718 0.7658643 0.7711365 #>  [901,] 0.5271722 0.5283746 0.5317469 #>  [902,] 0.6111554 0.6134972 0.6177445 #>  [903,] 0.8820723 0.9034657 0.9397365 #>  [904,] 0.8527198 0.8788625 0.9436782 #>  [905,] 0.8031381 0.8320879 0.8340312 #>  [906,] 0.8285624 0.8754180 0.8782623 #>  [907,] 1.2126222 1.2207920 1.2309438 #>  [908,] 1.6159234 1.6290432 1.6548259 #>  [909,] 0.9667840 0.9814406 0.9883945 #>  [910,] 0.5702715 0.5843179 0.5916185 #>  [911,] 0.8202502 0.8936501 0.9057041 #>  [912,] 0.8459387 0.8559110 0.8620883 #>  [913,] 0.5745537 0.5881837 0.5882276 #>  [914,] 1.2878182 1.3375708 1.3624879 #>  [915,] 0.6148856 0.6187802 0.6319997 #>  [916,] 0.6503558 0.6516422 0.6560464 #>  [917,] 0.9734637 0.9920065 1.0084083 #>  [918,] 0.5496486 0.5728238 0.5879520 #>  [919,] 0.5223936 0.5314768 0.5415625 #>  [920,] 0.5512808 0.5785498 0.5852391 #>  [921,] 0.4966989 0.4984727 0.5031218 #>  [922,] 1.1616560 1.1707129 1.1776101 #>  [923,] 0.8489631 0.8810675 0.9008347 #>  [924,] 0.5970195 0.6051639 0.6142571 #>  [925,] 0.6253353 0.6408894 0.6505558 #>  [926,] 1.4327559 1.4327613 1.5142418 #>  [927,] 0.8026273 0.8147048 0.8296600 #>  [928,] 0.8327641 0.8525972 0.8611336 #>  [929,] 2.0367243 2.0631296 2.0818376 #>  [930,] 0.7298871 0.7391566 0.7455516 #>  [931,] 0.6350976 0.6589851 0.6769276 #>  [932,] 0.7336208 0.7646688 0.7732601 #>  [933,] 1.1695513 1.2182333 1.2296092 #>  [934,] 1.2644955 1.3623347 1.3842533 #>  [935,] 1.2435034 1.2480361 1.3015392 #>  [936,] 0.8917036 0.8980201 0.9107715 #>  [937,] 1.0270049 1.0411160 1.1022371 #>  [938,] 0.6782863 0.6844300 0.6943789 #>  [939,] 0.6206311 0.6947384 0.7225086 #>  [940,] 0.6769921 0.6897185 0.6925655 #>  [941,] 0.4924915 0.4974182 0.5061460 #>  [942,] 0.7194439 0.7746491 0.7759489 #>  [943,] 0.6529562 0.6678021 0.7024716 #>  [944,] 0.6899175 0.7023494 0.7386222 #>  [945,] 0.5063648 0.5472576 0.5561324 #>  [946,] 0.6527600 0.6586057 0.6634642 #>  [947,] 0.6710937 0.6866165 0.6973681 #>  [948,] 0.6642547 0.7487061 0.7777109 #>  [949,] 0.6244251 0.6593113 0.6593736 #>  [950,] 0.6395439 0.6415510 0.6416903 #>  [951,] 0.6638127 0.6880372 0.7165293 #>  [952,] 0.9024835 0.9390168 0.9455581 #>  [953,] 0.7547695 0.7594047 0.7746190 #>  [954,] 0.6604545 0.6938530 0.6975320 #>  [955,] 0.8232115 0.8452262 0.8647512 #>  [956,] 0.9013314 0.9233381 0.9272695 #>  [957,] 0.7255889 0.7362077 0.8033060 #>  [958,] 0.6366043 0.6367345 0.6391414 #>  [959,] 0.6261326 0.6308881 0.6357443 #>  [960,] 0.5271446 0.5467507 0.5581213 #>  [961,] 1.1630947 1.1982346 1.2074006 #>  [962,] 1.2422915 1.2484606 1.2569656 #>  [963,] 0.9508658 1.0051795 1.0336823 #>  [964,] 0.9087962 0.9102554 0.9388440 #>  [965,] 0.8488493 0.8509820 0.8567891 #>  [966,] 0.6576738 0.7579143 0.7746491 #>  [967,] 0.6702996 0.6788460 0.6974060 #>  [968,] 0.9565140 1.0104025 1.0106984 #>  [969,] 0.8820955 0.9186972 0.9399036 #>  [970,] 0.7387415 0.7491982 0.7550994 #>  [971,] 0.8139841 0.8358980 0.8774304 #>  [972,] 0.5352854 0.5472576 0.5921908 #>  [973,] 1.1365948 1.1548852 1.1619529 #>  [974,] 0.7734766 0.8005760 0.8409471 #>  [975,] 0.8780831 0.9050770 0.9208893 #>  [976,] 0.6393825 0.6475988 0.6728538 #>  [977,] 0.7954644 0.8101178 0.8315619 #>  [978,] 0.7317993 0.7397380 0.7820642 #>  [979,] 0.7863991 0.7997841 0.8022676 #>  [980,] 0.6781587 0.7063232 0.7118560 #>  [981,] 1.2929651 1.3233936 1.3465181 #>  [982,] 0.9343982 0.9655722 0.9664793 #>  [983,] 0.6282674 0.6488636 0.6562257 #>  [984,] 0.9430679 0.9436782 0.9891784 #>  [985,] 0.8994248 0.9354583 0.9498725 #>  [986,] 1.1181000 1.1206881 1.1273720 #>  [987,] 0.8142263 0.8284951 0.9339856 #>  [988,] 1.0899525 1.1230242 1.1448597 #>  [989,] 0.6367130 0.6383231 0.6525286 #>  [990,] 0.9549862 0.9868368 1.0048851 #>  [991,] 0.6568597 0.6578186 0.6630150 #>  [992,] 0.4933858 0.5464351 0.6203773 #>  [993,] 1.3040945 1.3625624 1.3819952 #>  [994,] 0.5701476 0.5736721 0.5738386 #>  [995,] 0.5742560 0.6335171 0.6804042 #>  [996,] 0.8411731 0.8475781 0.8775146 #>  [997,] 0.5754244 0.5850533 0.5925700 #>  [998,] 0.5986106 0.6144590 0.6226353 #>  [999,] 1.9403853 1.9689305 2.0285157 #> [1000,] 0.7705618 0.7827635 0.8126929 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 0.003162278"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample   cd45 pstat5    cd34 outcome class  multiclass event time_to_event #>    <chr>   <dbl>  <dbl>   <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 29     0.398  0.594  0.00986   4.11  class1 class1         0         13.2  #>  2 63     0.780  0.468  0.809     4.01  class1 class3         1          9.60 #>  3 44     0.666  0.785  0.654     5.24  class1 class2         1         11.6  #>  4 100    0.625  0.927  0.480     4.88  class1 class3         1         10.6  #>  5 42     0.0681 0.250  0.878     0.262 class2 class2         1          9.95 #>  6 69     0.555  0.0872 0.433     3.44  class2 class3         1         12.6  #>  7 64     0.644  0.780  0.609     6.46  class1 class3         1          8.55 #>  8 67     0.360  0.690  0.0542    4.45  class1 class3         1         11.6  #>  9 17     0.0356 0.560  0.224     1.51  class2 class1         0          7.40 #> 10 68     0.142  0.495  0.548     3.68  class1 class3         1         11.3  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>               cd45      pstat5        cd34 #>   [1,] -1.37455580 -0.06446406  1.52560280 #>   [2,]  0.35577417  1.31629410 -1.37568952 #>   [3,]  0.42438000  1.30771630  1.06332454 #>   [4,]  1.35104141  0.08209774 -1.09079654 #>   [5,] -0.30011598  0.06492664  0.55832773 #>   [6,]  1.51746756  0.07406091 -0.91052549 #>   [7,] -0.08219670  1.13117386 -0.83102541 #>   [8,]  0.40242394 -1.64704445  0.79713009 #>   [9,]  0.73713479  0.90046111 -1.31560681 #>  [10,] -1.35541889  1.61430845 -1.29183635 #>  [11,]  0.24032619 -1.30319301 -0.70339255 #>  [12,] -0.85465700 -1.26604858  1.42960713 #>  [13,] -1.69840077  0.70460580 -0.48334891 #>  [14,] -0.37046512  1.54805543  0.64815270 #>  [15,]  0.85687186  0.84458055 -1.39706790 #>  [16,] -1.35068378 -1.10486861  1.74020930 #>  [17,]  1.01539070  0.93978147 -0.69400236 #>  [18,] -0.45026789  1.05171441 -1.18592538 #>  [19,]  0.71673258  0.16041960 -1.24060499 #>  [20,]  0.89986132 -0.96915512 -0.96580015 #>  [21,]  1.26752133  1.24348569  0.93745810 #>  [22,] -0.73655251  1.56043370 -0.53657962 #>  [23,]  0.40878819 -0.75976012 -0.70360113 #>  [24,] -1.67163681 -0.95014026  1.63769907 #>  [25,]  0.42515831 -0.48118420  0.20329722 #>  [26,] -0.63139180 -0.91461739 -1.00572714 #>  [27,]  0.88111022 -1.33624185  0.46837512 #>  [28,]  0.99565501 -1.11380535 -0.48580951 #>  [29,]  0.08689964  0.97353346 -1.01475091 #>  [30,] -1.70666449 -0.29753055  1.56320953 #>  [31,] -1.92294161 -0.16621983  0.75310441 #>  [32,] -0.18785794  0.04063053  0.26908480 #>  [33,]  0.83704517 -1.43274537 -1.09987671 #>  [34,]  0.21516595 -0.86023930  0.24578516 #>  [35,]  1.48779622 -0.34646827 -0.63358738 #>  [36,]  0.57126885  0.67721509 -0.36251373 #>  [37,] -0.86237920 -0.28372223  1.50768341 #>  [38,]  0.72741919  0.81417275  0.18478972 #>  [39,]  0.78975603 -0.33639158 -1.16106371 #>  [40,]  0.42299229  0.34029337  0.05268569 #>  [41,] -1.45686015  0.80746225  1.21429587 #>  [42,] -1.63195301  1.18564210 -0.81842594 #>  [43,] -0.11636799 -0.75771518 -0.78325651 #>  [44,]  0.16158782  0.86137827 -1.16515390 #>  [45,] -0.38395648 -1.29152255 -0.37182302 #>  [46,]  0.50585747 -1.28936214 -0.77417474 #>  [47,] -0.77745698 -0.15106719 -0.47835000 #>  [48,]  0.85424711  0.27719177 -0.20000206 #>  [49,] -0.25091701  0.23443431  0.94029600 #>  [50,]  1.35230828  0.49215966  1.74580274 #>  [51,] -0.56027600 -1.03790562  0.75950423 #>  [52,] -1.25266012 -1.33942882  1.18520600 #>  [53,]  0.60245656 -1.34990071 -0.14004143 #>  [54,]  0.87804283 -0.59042856  0.06270993 #>  [55,] -0.31315989 -1.19502973  0.83052084 #>  [56,]  0.81175169 -0.07225436  1.62549071 #>  [57,]  1.19283582 -1.58425179 -0.23263540 #>  [58,] -0.16780338  0.35192532 -0.06056348 #>  [59,] -0.20028902 -1.28509887 -1.28339858 #>  [60,]  0.78542183  1.04974769  1.34970719 #>  [61,]  1.31582302 -0.47200364  0.80082635 #>  [62,]  0.75807567  1.00932782 -1.14492088 #>  [63,]  1.07159316 -0.15041251  0.87971223 #>  [64,]  0.43508373  1.60043110 -0.60120661 #>  [65,]  0.61261650 -1.56882672 -0.51818630 #>  [66,]  1.66163201 -0.66607201 -0.02089791 #>  [67,]  1.78137661 -1.14580533  0.84520046 #>  [68,] -1.65974810 -0.27876894  1.17030171 #>  [69,] -0.07260052  0.96359490  1.01150006 #>  [70,]  0.96272735  1.47958578 -0.24914450 #>  [71,] -1.16202769 -1.64641725  0.27772961 #>  [72,]  0.34419430  1.24930734  0.84364112 #>  [73,]  0.79403668 -0.78376748  1.80183289 #>  [74,]  0.88932340  0.54587368  0.69848471 #>  [75,] -0.59975452 -0.30524003 -0.28912684 #>  [76,] -1.45161812  1.37241622  0.21325039 #>  [77,]  0.24874805  1.20730637 -1.17750495 #>  [78,]  1.02728796 -0.62332851  1.04472996 #>  [79,] -1.92359628  1.11284533  1.76034998 #>  [80,] -0.96802882 -0.90917324 -1.24278691 #>  [81,]  0.11889495  1.45093843  1.37288436 #>  [82,] -1.77984291 -1.15331093 -1.14498302 #>  [83,]  0.62766075 -1.17955543  0.24283575 #>  [84,] -0.87616401  0.83217770  0.28048250 #>  [85,] -0.69443815 -1.23370173 -0.64851319 #>  [86,] -1.01250928  0.97784518 -0.92824534 #>  [87,]  1.51758119  1.46441487  1.14105520 #>  [88,] -1.71597211  1.21895722 -0.02690418 #>  [89,]  0.03938042  0.34604320 -1.18763307 #>  [90,] -1.31097258 -0.70423840 -1.38759013 #>  [91,]  0.95903203  0.78077062  1.37675057 #>  [92,] -1.17800083  0.36232079  1.26775380 #>  [93,] -1.31103803 -0.68351777  1.09216051 #>  [94,]  1.06349338  1.23497314 -1.38993618 #>  [95,]  1.45900331 -1.54211381  0.35540875 #>  [96,] -0.03089699  0.92171403  0.03980217 #>  [97,]  0.47117471 -1.06511774 -1.31772141 #>  [98,] -1.09962981 -0.54285672 -1.23093956 #>  [99,] -0.72794291  0.48109929 -1.24722342 #> [100,] -0.69456154  0.97018848 -1.26533145"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  4.47025216  3.35592737  6.18083789  4.02890402  0.34405717  3.62873619 #>   [7]  3.91244692  4.47795228  0.62962203  1.88204608  3.33281668  4.13346177 #>  [13]  6.96387623  3.13674016  6.27926121  2.68481191  3.75720787  2.91126175 #>  [19]  6.72873178  4.19665284  3.13664447  3.44028255  6.54557042  1.91498911 #>  [25]  1.37088245  6.04325278  4.07588494  5.06191761  2.39123527  5.35292349 #>  [31]  3.66485328  3.81807638  6.37025016  3.28249935  6.07754004  5.42107104 #>  [37]  1.80996329  4.23107454  3.05342238  3.88988713  5.05695862  4.55517919 #>  [43]  5.40493152  5.28740204  1.85899374  7.13628754  2.58335975  3.28246589 #>  [49]  1.78076222  4.54286618  6.31684230  4.44376593  2.36905425  1.46826158 #>  [55]  5.52613683  2.14330931  3.95111163  3.28827175  4.32588303  1.69624863 #>  [61]  3.76363385  2.90731910  0.44100112  2.86934653  4.92805803  4.06726963 #>  [67]  3.21910706  3.12559938  2.01377744  4.37860054  6.06880483  4.34818913 #>  [73]  0.36342362  4.11513500  1.99451280  1.45176340  3.81019872  5.00349444 #>  [79]  2.59602596  3.25583952  2.08216089  4.97986536 -0.01216216  3.34542359 #>  [85]  1.37473792  5.88181009  1.61806340  2.13721554  4.53281467  3.05962805 #>  [91]  7.19556545  3.58725672  3.91546870  3.94529200  2.99080870  1.92055305 #>  [97]  4.50689186  4.25079682  1.68074659  2.55943304"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>       cd45   cd38   cd34    cd19 cluster_id .flowsom_metacluster #>      <dbl>  <dbl>  <dbl>   <dbl> <chr>      <chr>                #>  1 -0.925  -0.965  0.783  0.644  o          1                    #>  2  1.57   -0.681  0.340  1.50   g          4                    #>  3 -1.03    1.37  -0.903 -2.37   q          1                    #>  4  0.616  -0.525  0.664 -0.652  r          1                    #>  5 -1.03   -1.21   0.795 -0.0511 f          1                    #>  6  0.464   0.329  0.844 -1.91   z          4                    #>  7  0.0906 -0.498  0.510  1.22   b          2                    #>  8  0.148   0.593 -0.944 -1.45   l          4                    #>  9 -1.53    0.272 -1.53  -1.54   i          4                    #> 10 -0.145   0.437  0.981  0.103  o          1                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>       cd45   cd38   cd34    cd19 cluster_id .phenograph_metacluster #>      <dbl>  <dbl>  <dbl>   <dbl> <chr>      <chr>                   #>  1 -0.925  -0.965  0.783  0.644  o          1                       #>  2  1.57   -0.681  0.340  1.50   g          2                       #>  3 -1.03    1.37  -0.903 -2.37   q          1                       #>  4  0.616  -0.525  0.664 -0.652  r          1                       #>  5 -1.03   -1.21   0.795 -0.0511 f          1                       #>  6  0.464   0.329  0.844 -1.91   z          2                       #>  7  0.0906 -0.498  0.510  1.22   b          3                       #>  8  0.148   0.593 -0.944 -1.45   l          2                       #>  9 -1.53    0.272 -1.53  -1.54   i          2                       #> 10 -0.145   0.437  0.981  0.103  o          1                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 2                      #>  2 5                      #>  3 6                      #>  4 5                      #>  5 5                      #>  6 6                      #>  7 4                      #>  8 3                      #>  9 4                      #> 10 2                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 1                    #>  2 4                    #>  3 2                    #>  4 5                    #>  5 4                    #>  6 6                    #>  7 4                    #>  8 4                    #>  9 4                    #> 10 2                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 3                    #>  2 3                    #>  3 1                    #>  4 2                    #>  5 2                    #>  6 1                    #>  7 4                    #>  8 2                    #>  9 4                    #> 10 1                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 5                         #>  2 3                         #>  3 4                         #>  4 6                         #>  5 4                         #>  6 6                         #>  7 1                         #>  8 8                         #>  9 1                         #> 10 1                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 1                   #>  2 2                   #>  3 8                   #>  4 2                   #>  5 2                   #>  6 5                   #>  7 9                   #>  8 9                   #>  9 1                   #> 10 2                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 5                       #>  2 3                       #>  3 1                       #>  4 5                       #>  5 1                       #>  6 1                       #>  7 2                       #>  8 4                       #>  9 4                       #> 10 2                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1 3.26  #>  2 3.15  #>  3 5.98  #>  4 0.311 #>  5 3.79  #>  6 2.06  #>  7 2.99  #>  8 1.61  #>  9 2.51  #> 10 5.07  #> 11 2.45  #> 12 3.65  #> 13 4.11  #> 14 5.32  #> 15 3.68  #> 16 2.37  #> 17 4.15  #> 18 4.50  #> 19 2.49  #> 20 6.49"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>      cd45    cd38    cd34    cd19   .pc1   .pc2     .pc3    .pc4 #>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>  <dbl>    <dbl>   <dbl> #>  1 -1.05   0.0134  0.369   0.619   0.142 -0.593 -0.785    0.625  #>  2 -1.37  -1.70   -0.0573  1.26    0.770 -2.05   0.00326  0.643  #>  3  0.978 -1.70   -0.596   2.57    2.28  -0.596  1.82     0.822  #>  4 -1.41  -1.95    2.14    0.852   1.69  -2.03  -1.62    -0.448  #>  5  0.154 -0.477  -2.54   -2.90   -3.08  -0.153  1.68    -1.66   #>  6 -0.408  0.863   0.0203 -0.649  -0.904  0.467 -0.638   -0.0863 #>  7  0.137 -0.828  -1.22   -0.508  -0.697 -0.435  1.13    -0.501  #>  8 -0.793  0.289   1.13    0.0218  0.144 -0.129 -1.38    -0.0422 #>  9  1.02  -0.756   1.66    0.827   1.99   0.380 -0.374   -0.801  #> 10  0.445 -0.760   0.460   1.26    1.44  -0.144  0.270    0.131  #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>      cd45    cd38    cd34    cd19 .tsne1  .tsne2 #>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl> #>  1 -1.05   0.0134  0.369   0.619   2.10   0.0188 #>  2 -1.37  -1.70   -0.0573  1.26    3.04  -2.53   #>  3  0.978 -1.70   -0.596   2.57   -3.04  -2.93   #>  4 -1.41  -1.95    2.14    0.852   3.97  -1.76   #>  5  0.154 -0.477  -2.54   -2.90   -2.19   3.38   #>  6 -0.408  0.863   0.0203 -0.649   1.36   2.71   #>  7  0.137 -0.828  -1.22   -0.508  -2.51   0.400  #>  8 -0.793  0.289   1.13    0.0218  2.76   0.118  #>  9  1.02  -0.756   1.66    0.827   1.48  -3.15   #> 10  0.445 -0.760   0.460   1.26    0.506 -2.07   #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>      cd45    cd38    cd34    cd19 .umap1 .umap2 #>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>  <dbl> #>  1 -1.05   0.0134  0.369   0.619  -3.10  -1.51  #>  2 -1.37  -1.70   -0.0573  1.26   -1.47   1.44  #>  3  0.978 -1.70   -0.596   2.57   -0.227  2.16  #>  4 -1.41  -1.95    2.14    0.852  -3.44  -2.42  #>  5  0.154 -0.477  -2.54   -2.90    1.92  -1.13  #>  6 -0.408  0.863   0.0203 -0.649   0.550 -1.20  #>  7  0.137 -0.828  -1.22   -0.508   1.49   0.728 #>  8 -0.793  0.289   1.13    0.0218 -2.41  -1.82  #>  9  1.02  -0.756   1.66    0.827  -2.19  -2.77  #> 10  0.445 -0.760   0.460   1.26    0.221  0.840 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>      .pc1    .pc2 #>     <dbl>   <dbl> #>  1  0.566  0.0407 #>  2 -0.490 -1.65   #>  3  1.73  -0.117  #>  4 -0.297 -0.890  #>  5 -2.65  -1.69   #>  6 -0.537 -1.38   #>  7  1.66  -0.667  #>  8 -2.99   1.53   #>  9  1.25   0.0947 #> 10  1.36   1.43   #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>        PC1    PC2     PC3    PC4 #>      <dbl>  <dbl>   <dbl>  <dbl> #>  1  0.211  -0.448 -0.458   0.610 #>  2  1.83   -0.171  1.30   -1.33  #>  3 -0.0884 -0.181 -0.820  -0.778 #>  4  1.49   -0.147 -1.57    0.945 #>  5  0.471   0.250 -0.0173  1.73  #>  6  1.04   -0.337  1.58    0.489 #>  7 -1.16   -0.583  0.596   0.403 #>  8  0.823   1.58   1.62   -0.172 #>  9 -0.0551 -1.67  -1.34    1.00  #> 10 -0.268  -1.00  -1.95    1.01  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1   6.87 -0.104 #>  2   7.65  0.750 #>  3   4.58  1.71  #>  4  -2.69  8.40  #>  5   1.12 -6.48  #>  6   1.79 -3.15  #>  7   5.52 -6.22  #>  8  -3.21  5.31  #>  9  -5.19  5.04  #> 10  -4.42 -4.29  #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  4.16   -7.32 #>  2  4.16   -8.97 #>  3 -4.00   -5.78 #>  4 -4.75   -8.11 #>  5 -1.69    6.78 #>  6  5.97    4.49 #>  7  3.45   -3.22 #>  8 -3.32   -4.45 #>  9  0.140  -6.27 #> 10  2.46    8.57 #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -1.83  -1.41  #>  2 -3.92   0.161 #>  3 -0.211 -0.558 #>  4 -2.38  -0.597 #>  5  6.92  -3.99  #>  6 -1.20  -1.62  #>  7 -3.21   3.15  #>  8 -0.681  1.45  #>  9 -0.209  1.25  #> 10 -3.23   3.23  #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -8.23   2.92  #>  2 -0.149  2.84  #>  3 -5.59  -0.830 #>  4 -2.77   5.67  #>  5  6.12  -2.70  #>  6 -6.95   2.18  #>  7  4.33   6.49  #>  8 -2.82  -0.116 #>  9 -3.61   0.121 #> 10  5.40   6.19  #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>      UMAP1  UMAP2 #>      <dbl>  <dbl> #>  1  0.635   1.54  #>  2 -0.0124 -3.34  #>  3  2.36   -2.33  #>  4 -2.29   -2.50  #>  5 -3.21   -1.14  #>  6 -0.969  -1.19  #>  7 -3.29   -2.31  #>  8  1.17    0.690 #>  9 -0.209   2.59  #> 10 -3.26    0.310 #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.143 #>  2          0.286 #>  3          0.143 #>  4          0.571 #>  5          0.143 #>  6          0.429 #>  7          0.286 #>  8          0.286 #>  9          0.143 #> 10          0.143 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            1   #>  2            1   #>  3            1   #>  4            1   #>  5            1   #>  6            1   #>  7            1   #>  8            1   #>  9            0   #> 10            0.9 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/33]> Bootstrap01 #>  2 <split [100/43]> Bootstrap02 #>  3 <split [100/32]> Bootstrap03 #>  4 <split [100/39]> Bootstrap04 #>  5 <split [100/37]> Bootstrap05 #>  6 <split [100/35]> Bootstrap06 #>  7 <split [100/38]> Bootstrap07 #>  8 <split [100/35]> Bootstrap08 #>  9 <split [100/34]> Bootstrap09 #> 10 <split [100/33]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)      3.60   #> 2 pstat5           1.25   #> 3 cd45             0.822  #> 4 cd34             0.0562  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0.25 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5          -2.30   #> 2 cd45            -1.72   #> 3 cd34            -0.355  #> 4 (Intercept)     -0.0202  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 0 × 2 #> # ℹ 2 variables: feature <chr>, coefficient <dbl>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38   cd34    cd19 .upsample_cluster #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>             #>  1  0.229  0.650  0.347  0.0958 a                 #>  2 -0.499  1.21   0.283 -0.273  a                 #>  3  0.353  0.799  0.337 -1.17   a                 #>  4  0.709 -0.532  1.17   1.95   b                 #>  5 -0.355 -0.507 -1.04   0.228  b                 #>  6 -0.421  1.32  -0.244 -0.303  a                 #>  7  0.789  1.01   0.830  1.26   b                 #>  8  0.208 -0.602  0.458 -0.953  a                 #>  9 -0.616  0.904  0.200  0.280  a                 #> 10  1.03  -0.770  0.984 -0.288  a                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38   cd34    cd19 .upsample_cluster #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>             #>  1  0.229  0.650  0.347  0.0958 a                 #>  2 -0.499  1.21   0.283 -0.273  a                 #>  3  0.353  0.799  0.337 -1.17   a                 #>  4  0.709 -0.532  1.17   1.95   b                 #>  5 -0.355 -0.507 -1.04   0.228  b                 #>  6 -0.421  1.32  -0.244 -0.303  a                 #>  7  0.789  1.01   0.830  1.26   b                 #>  8  0.208 -0.602  0.458 -0.953  a                 #>  9 -0.616  0.904  0.200  0.280  a                 #> 10  1.03  -0.770  0.984 -0.288  b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 a                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 a                 #>  4 a                 #>  5 b                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 a                 #>  5 a                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 a                 #>  5 a                 #>  6 a                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0993","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.3","title":"tidytof 0.99.3","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992-1","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Removed unnecessary files caused build fail. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
