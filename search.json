[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.35     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.9        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.3.0        bslib_0.6.2       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [89] tidyselect_1.2.1              Biostrings_2.70.3             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] readr_2.1.5                   blob_1.2.4                    #> [119] bitops_1.0-7                  listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1 -8.22    6.08 #> 2 -4.87   10.6  #> 3  8.91   30.9  #> 4 -5.66   19.0  #> 5 -5.81    8.54 #> 6  0.936  21.9 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  -5.99   6.89 #>  2  -2.43   9.97 #>  3  19.3   24.5  #>  4   7.55  18.2  #>  5  -2.72   7.39 #>  6   4.73  25.1  #>  7  -2.37  19.9  #>  8  -2.03  27.8  #>  9   2.42  25.2  #> 10  -8.59  12.6  #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -9.49    2.75 #>  2 -8.36    2.45 #>  3 -6.59    1.96 #>  4 -3.11   -2.46 #>  5 -9.44    2.50 #>  6 -0.822  -3.47 #>  7 -9.21    1.95 #>  8 -2.28   -1.92 #>  9 -5.05    1.11 #> 10 -8.89    4.77 #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         stringr_1.5.1       #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [22] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [25] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [28] tweenr_2.0.3        irlba_2.3.5.1       parallel_4.3.3      #>  [31] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [34] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [37] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [40] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [43] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [46] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [49] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [52] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [55] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [58] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [61] Rtsne_0.17          future_1.33.1       desc_1.4.3          #>  [64] survival_3.5-8      polyclip_1.10-6     embed_1.1.4         #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [73] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [76] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [79] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [82] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [85] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [88] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [91] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [94] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [97] lava_1.8.0          uwot_0.1.16         gtable_0.3.4        #> [100] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [103] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [106] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [109] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.2         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.2     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.3        timechange_0.3.0    tidyselect_1.2.1    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [94] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 philentropy_0.8.0             #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     emdist_0.3-3                  #>  [89] RProtoBufLib_2.14.1           tidyselect_1.2.1              #>  [91] Biostrings_2.70.3             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   ggplot2_3.5.0                 #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  scales_1.3.0                  #> [127] prodlim_2023.08.28            purrr_1.0.2                   #> [129] crayon_1.5.2                  rlang_1.1.3                   #> [131] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.0       bslib_0.6.2         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.2     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.3        #>  [49] timechange_0.3.0    tidyselect_1.2.1    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.1     tidyr_1.3.1         RProtoBufLib_2.14.1 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.9          #> [103] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34   cd38 #>   <dbl>   <dbl>  <dbl> #> 1  130.  2.75    0.971 #> 2  229. -0.886  10.9   #> 3  292.  5.11    0.938 #> 4  431. -0.0100 12.9   #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.0              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  tidyr_1.3.1                   #>  [73] data.table_1.15.2             hms_1.1.3                     #>  [75] tidygraph_1.3.1               utf8_1.2.4                    #>  [77] XVector_0.42.0                ggrepel_0.9.5                 #>  [79] BiocVersion_3.18.1            foreach_1.5.2                 #>  [81] pillar_1.9.0                  stringr_1.5.1                 #>  [83] RcppHNSW_0.6.0                later_1.3.2                   #>  [85] splines_4.3.3                 tweenr_2.0.3                  #>  [87] lattice_0.22-5                survival_3.5-8                #>  [89] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [91] tidyselect_1.2.1              Biostrings_2.70.3             #>  [93] knitr_1.45                    gridExtra_2.3                 #>  [95] xfun_0.42                     graphlayouts_1.1.1            #>  [97] hardhat_1.3.1                 timeDate_4032.109             #>  [99] stringi_1.8.3                 yaml_2.3.8                    #> [101] evaluate_0.23                 codetools_0.2-19              #> [103] ggraph_2.2.1                  tibble_3.2.1                  #> [105] BiocManager_1.30.22           cli_3.6.2                     #> [107] rpart_4.1.23                  xtable_1.8-4                  #> [109] systemfonts_1.0.6             munsell_0.5.0                 #> [111] jquerylib_0.1.4               Rcpp_1.0.12                   #> [113] globals_0.16.3                png_0.1-8                     #> [115] parallel_4.3.3                ellipsis_0.3.2                #> [117] pkgdown_2.0.7                 gower_1.0.1                   #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  ggridges_0.5.6                #> [127] scales_1.3.0                  prodlim_2023.08.28            #> [129] purrr_1.0.2                   crayon_1.5.2                  #> [131] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [97] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.0 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T, Davis K, Nolan G (2024). tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis. doi:10.18129/B9.bioc.tidytof, https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.0, http://www.bioconductor.org/packages/tidytof. Keyes, J. T, Koladiya, Abhishek, Lo, Yu-Chen, Nolan, P. G, Davis, L. K (2023). “tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis.” Bioinformatics Advances, 3(1). doi:10.1093/bioadv/vbad071, https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984.","code":"@Manual{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {Timothy Keyes and Kara Davis and Garry Nolan},   year = {2024},   url = {http://www.bioconductor.org/packages/tidytof},   note = {https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.0},   doi = {10.18129/B9.bioc.tidytof}, } @Article{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {{Keyes} and Timothy J. and {Koladiya} and {Abhishek} and {Lo} and {Yu-Chen} and {Nolan} and Garry P. and {Davis} and Kara L.},   year = {2023},   journal = {Bioinformatics Advances},   volume = {3},   number = {1},   doi = {10.1093/bioadv/vbad071},   url = {https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"See documentation object's original package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"# See examples in each object's original package NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `cluster_col_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_{cluster_name}\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.distance_function_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 16              #>  2 18              #>  3 10              #>  4 7               #>  5 5               #>  6 6               #>  7 3               #>  8 19              #>  9 12              #> 10 2               #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 4               #>  2 9               #>  3 19              #>  4 4               #>  5 19              #>  6 1               #>  7 7               #>  8 6               #>  9 16              #> 10 4               #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 7                   #>  2 7                   #>  3 3                   #>  4 4                   #>  5 7                   #>  6 9                   #>  7 2                   #>  8 7                   #>  9 4                   #> 10 6                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 7                   #>  2 5                   #>  3 11                  #>  4 1                   #>  5 7                   #>  6 4                   #>  7 8                   #>  8 3                   #>  9 1                   #> 10 11                  #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>      cd45   cd38    cd34    cd19 cluster_id #>     <dbl>  <dbl>   <dbl>   <dbl> <chr>      #>  1 -0.755 -0.354 -1.71    0.0690 r          #>  2 -0.665 -0.389 -0.249   1.39   y          #>  3 -0.466  0.338  0.729  -1.15   b          #>  4 -1.83   0.532  0.274  -1.29   s          #>  5  0.468 -1.01   0.0654  0.236  n          #>  6  0.100 -0.957 -0.319   0.539  v          #>  7 -1.46  -0.433  1.75   -0.458  h          #>  8  0.810 -0.269  0.677   0.216  m          #>  9 -0.941 -1.00   0.972   1.05   q          #> 10 -1.68   0.251  0.828   0.642  g          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>       cd45   cd38    cd34    cd19 cluster_id #>      <dbl>  <dbl>   <dbl>   <dbl> <chr>      #>  1 -0.0103 -0.925  0.0621  1.97   i          #>  2  0.324   1.64   1.38    1.74   b          #>  3 -0.280   1.72  -0.571  -0.390  q          #>  4  1.28    1.48  -0.509  -0.0846 k          #>  5 -0.166   0.524 -0.520   0.257  o          #>  6  0.577  -0.501  0.991   1.33   n          #>  7 -0.425   0.695 -0.580   0.0500 o          #>  8 -1.52    0.826  0.848  -1.64   f          #>  9 -0.559   0.632  0.433   1.16   q          #> 10 -0.981   1.80  -0.904  -2.40   s          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 89 × 5 #>      cd45   cd38   cd34    cd19 cluster_id #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>      #>  1 -1.52   0.826  0.848 -1.64   f          #>  2  0.410 -1.80   1.32   0.565  a          #>  3 -1.30   0.604  1.11  -0.533  u          #>  4  1.95   0.597 -0.253 -0.0941 h          #>  5  0.636  0.344 -0.206 -1.33   k          #>  6  0.260  2.18   2.84  -0.276  r          #>  7 -0.465 -0.731  0.613 -1.05   j          #>  8 -1.00  -0.797  1.04   0.355  z          #>  9  0.284  1.72  -1.17  -0.102  k          #> 10 -0.781 -1.98   1.14   0.689  s          #> # ℹ 79 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>      cd45    cd38    cd34    cd19 cluster_id #>     <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1 -0.742 -1.03   -0.295   0.894  g          #>  2 -1.27  -0.0955 -0.638  -1.57   t          #>  3 -0.957 -0.322   0.417   0.384  f          #>  4  0.329  0.0845 -0.0351 -0.0795 d          #>  5 -1.29  -0.834   1.22   -1.45   y          #>  6  0.884  0.0635  0.695  -1.10   e          #>  7 -0.381  2.03   -0.338   0.580  b          #>  8  0.742  0.707  -1.21    0.225  x          #>  9 -1.58  -0.0143  1.07    1.06   h          #> 10  0.907 -0.485  -1.01   -1.51   s          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>      cd45    cd38    cd34    cd19 cluster_id #>     <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1  2.94   0.751  -0.466  -0.929  p          #>  2 -1.16  -0.313  -0.498  -1.31   i          #>  3 -0.742 -1.03   -0.295   0.894  g          #>  4  0.282 -0.0491  1.42    1.25   q          #>  5  0.329  0.0845 -0.0351 -0.0795 d          #>  6 -1.60   0.934   0.465   0.850  d          #>  7  0.916 -0.373  -0.151   0.419  t          #>  8  0.601  2.63   -1.45   -0.663  w          #>  9 -1.45  -0.0516  1.04   -1.42   a          #> 10  0.742  0.707  -1.21    0.225  x          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 504 × 4 #>       cd45   cd38   cd34   cd19 #>      <dbl>  <dbl>  <dbl>  <dbl> #>  1 -1.34   -1.86   1.37   0.615 #>  2  0.0444 -0.881  1.16  -1.89  #>  3  1.06    0.167 -0.224  0.540 #>  4 -0.438   1.06   0.353  0.228 #>  5 -0.435   0.414  1.61   1.29  #>  6  1.02    0.847  0.257 -0.493 #>  7 -1.47   -0.409 -0.786 -0.891 #>  8 -0.695  -0.156  1.03  -0.850 #>  9  0.956  -0.295  0.271 -1.79  #> 10 -0.835   0.926 -1.07  -0.389 #> # ℹ 494 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 178 × 4 #>      cd45    cd38   cd34    cd19 #>     <dbl>   <dbl>  <dbl>   <dbl> #>  1 -1.34  -1.86    1.37   0.615  #>  2  1.06   0.167  -0.224  0.540  #>  3  1.02   0.847   0.257 -0.493  #>  4 -0.570 -1.19   -0.875  0.916  #>  5  0.422 -1.37   -0.385  0.0652 #>  6  1.48  -0.809   1.09   0.817  #>  7 -2.35   0.0536  0.481  0.753  #>  8 -0.728 -1.27    0.806  0.862  #>  9  1.44   1.39    0.679 -0.201  #> 10 -0.767 -0.209   0.506  0.855  #> # ℹ 168 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 198 × 4 #>      cd45    cd38   cd34     cd19 #>     <dbl>   <dbl>  <dbl>    <dbl> #>  1 -0.543 -1.11    2.22   0.00173 #>  2 -0.891 -1.76   -0.824 -0.723   #>  3 -1.34  -1.86    1.37   0.615   #>  4  1.00  -0.508  -1.37  -0.315   #>  5  1.02   0.847   0.257 -0.493   #>  6 -0.315  1.22   -0.474  0.0341  #>  7 -0.835  0.926  -1.07  -0.389   #>  8  1.48  -0.809   1.09   0.817   #>  9 -0.186  0.0345 -1.47   1.29    #> 10 -2.35   0.0536  0.481  0.753   #> # ℹ 188 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>       cd45   cd38    cd34   cd19 cluster_id #>      <dbl>  <dbl>   <dbl>  <dbl> <chr>      #>  1 -0.232  -0.362  0.846   0.897 g          #>  2 -0.450   0.246 -0.439   0.602 i          #>  3  0.634  -1.11   0.530   1.67  e          #>  4 -0.550  -0.499 -0.862   1.01  t          #>  5  0.400   0.391  0.0324  0.495 l          #>  6  0.229   0.386  1.41    0.416 h          #>  7 -0.0987  0.288  0.827  -1.01  o          #>  8  1.30   -0.936  0.377  -1.66  x          #>  9 -0.346  -1.90   1.28    1.90  y          #> 10 -1.82   -0.440 -0.443  -0.621 o          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 87 × 5 #>       cd45   cd38     cd34    cd19 cluster_id #>      <dbl>  <dbl>    <dbl>   <dbl> <chr>      #>  1 -0.0611 -0.774  1.05     1.67   a          #>  2 -0.587  -0.909 -1.27     0.210  a          #>  3 -0.0332 -0.565 -0.467    2.32   a          #>  4 -0.574   0.115 -0.925    0.551  b          #>  5  0.512  -1.23  -1.43    -1.84   b          #>  6  0.225   0.942 -0.00455  0.636  b          #>  7  0.730  -2.37  -0.342   -0.652  c          #>  8 -0.149   1.98  -1.27    -1.86   c          #>  9  1.30   -0.764  0.221    0.408  c          #> 10  1.07    0.182  0.0596  -0.0377 d          #> # ℹ 77 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34    cd19 .spade_density #>      <dbl>  <dbl>  <dbl>   <dbl>          <dbl> #>  1 -0.930   1.61  -1.18   0.661               1 #>  2  0.918  -0.904 -0.584 -0.199               1 #>  3 -0.345   1.49   0.334 -0.0661              1 #>  4 -0.191   0.530 -0.398 -1.21                1 #>  5  0.308  -0.348 -0.679 -0.935               1 #>  6  1.06    1.07  -0.492 -0.411               1 #>  7 -1.13    0.133  0.555  0.891               1 #>  8  0.182   1.00   1.83   0.236               1 #>  9  0.799   0.149 -0.194  1.38                1 #> 10  0.0910 -1.02   0.144 -0.239               1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34    cd19 .spade_density #>      <dbl>  <dbl>  <dbl>   <dbl>          <dbl> #>  1 -0.930   1.61  -1.18   0.661             1   #>  2  0.918  -0.904 -0.584 -0.199             1   #>  3 -0.345   1.49   0.334 -0.0661            1   #>  4 -0.191   0.530 -0.398 -1.21              1   #>  5  0.308  -0.348 -0.679 -0.935             1   #>  6  1.06    1.07  -0.492 -0.411             1   #>  7 -1.13    0.133  0.555  0.891             1   #>  8  0.182   1.00   1.83   0.236             0.6 #>  9  0.799   0.149 -0.194  1.38              1   #> 10  0.0910 -1.02   0.144 -0.239             1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby        -0.475      0.0212      -0.449     0.351        0.126  #> 2 mario        -0.377     -0.812       -0.155    -0.00268     -0.0712 #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45    -0.475  #>  2 kirby   a          cd38     0.0212 #>  3 kirby   a          cd34    -0.449  #>  4 kirby   a          cd19     0.351  #>  5 kirby   b          cd45     0.126  #>  6 kirby   b          cd38     0.481  #>  7 kirby   b          cd34    -0.177  #>  8 kirby   b          cd19    -0.379  #>  9 kirby   c          cd45     0.361  #> 10 kirby   c          cd38     0.415  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@b_emd` `stim_cd38@b_emd` `stim_cd34@b_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby               NA                NA                NA    #> 2 mario                6.52              6.82              9.23 #> # ℹ 101 more variables: `stim_cd19@b_emd` <dbl>, `stim_cd45@s_emd` <dbl>, #> #   `stim_cd38@s_emd` <dbl>, `stim_cd34@s_emd` <dbl>, `stim_cd19@s_emd` <dbl>, #> #   `stim_cd45@q_emd` <dbl>, `stim_cd38@q_emd` <dbl>, `stim_cd34@q_emd` <dbl>, #> #   `stim_cd19@q_emd` <dbl>, `stim_cd45@j_emd` <dbl>, `stim_cd38@j_emd` <dbl>, #> #   `stim_cd34@j_emd` <dbl>, `stim_cd19@j_emd` <dbl>, `stim_cd45@l_emd` <dbl>, #> #   `stim_cd38@l_emd` <dbl>, `stim_cd34@l_emd` <dbl>, `stim_cd19@l_emd` <dbl>, #> #   `stim_cd45@g_emd` <dbl>, `stim_cd38@g_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 b          cd45   stim         4.77 #>  2 b          cd38   stim         5.99 #>  3 b          cd34   stim         6.74 #>  4 b          cd19   stim         4.30 #>  5 s          cd45   stim         8.23 #>  6 s          cd38   stim         5.71 #>  7 s          cd34   stim         4.77 #>  8 s          cd19   stim        10.5  #>  9 q          cd45   stim         5.38 #> 10 q          cd38   stim         9.14 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0285   0.0305   0.0326   0.0387   0.0428   0.0407   0.0326 #> 2 mario     0.0413   0.0373   0.0334   0.0295   0.0452   0.0236   0.0334 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0285   0.0305   0.0326   0.0387   0.0428   0.0407   0.0326 #> 2 mario     0.0413   0.0373   0.0334   0.0295   0.0452   0.0236   0.0334 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@u_jsd` `stim_cd38@u_jsd` `stim_cd34@u_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby               0.752                 1                 1 #> 2 mario              NA                    NA                NA #> # ℹ 101 more variables: `stim_cd19@u_jsd` <dbl>, `stim_cd45@x_jsd` <dbl>, #> #   `stim_cd38@x_jsd` <dbl>, `stim_cd34@x_jsd` <dbl>, `stim_cd19@x_jsd` <dbl>, #> #   `stim_cd45@i_jsd` <dbl>, `stim_cd38@i_jsd` <dbl>, `stim_cd34@i_jsd` <dbl>, #> #   `stim_cd19@i_jsd` <dbl>, `stim_cd45@l_jsd` <dbl>, `stim_cd38@l_jsd` <dbl>, #> #   `stim_cd34@l_jsd` <dbl>, `stim_cd19@l_jsd` <dbl>, `stim_cd45@y_jsd` <dbl>, #> #   `stim_cd38@y_jsd` <dbl>, `stim_cd34@y_jsd` <dbl>, `stim_cd19@y_jsd` <dbl>, #> #   `stim_cd45@n_jsd` <dbl>, `stim_cd38@n_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 u          cd45   stim        0.681 #>  2 u          cd38   stim        0.932 #>  3 u          cd34   stim        0.950 #>  4 u          cd19   stim        0.850 #>  5 x          cd45   stim        0.714 #>  6 x          cd38   stim        0.706 #>  7 x          cd34   stim        0.714 #>  8 x          cd19   stim        0.840 #>  9 i          cd45   stim        0.776 #> 10 i          cd38   stim        0.832 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0366   0.0407   0.0589   0.0386   0.0285   0.0264   0.0386 #> 2 mario     0.0374   0.0394   0.0256   0.0374   0.0453   0.0413   0.0374 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0366 #>  2 kirby   b          0.0407 #>  3 kirby   c          0.0589 #>  4 kirby   d          0.0386 #>  5 kirby   e          0.0285 #>  6 kirby   f          0.0264 #>  7 kirby   g          0.0386 #>  8 kirby   h          0.0325 #>  9 kirby   i          0.0224 #> 10 kirby   j          0.0305 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby               0                   0.125             0.0625 #> 2 mario               0.0417              0                 0.0417 #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0      #>  2 kirby   a          cd38    0.125  #>  3 kirby   a          cd34    0.0625 #>  4 kirby   a          cd19    0.188  #>  5 kirby   b          cd45    0      #>  6 kirby   b          cd38    0.0476 #>  7 kirby   b          cd34    0.0952 #>  8 kirby   b          cd19    0.0952 #>  9 kirby   c          cd45    0.111  #> 10 kirby   c          cd38    0.111  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  995  356  698  436  141  455  508  821  923   910 #>    [2,]  134  130  633  726  734  293  940  399  558   692 #>    [3,]  744  925  258  334  769   87  168  899  560    47 #>    [4,]  912  261  347  101  611  307   82  559  213   926 #>    [5,]  137  991  928  729  842  539   33  200  870   762 #>    [6,]  986  485  650  805  106  208  332  790  345   367 #>    [7,]  412   67   45   62   18  183  882  122  377   160 #>    [8,]  699  455  490  192  232   69  688  138  757    96 #>    [9,]  859  281  314  819  218  445  760  956   99   964 #>   [10,]  148  723  672   79  457  335   28  229  835   432 #>   [11,]   26   57  862  233  517  837  971  411  488   948 #>   [12,]  831  363  843  934   75   34   25  494  329   729 #>   [13,]  825  527  235  673  464  222  256  620  140   342 #>   [14,]  152  496  142  214  916  232  246  957    8   543 #>   [15,]  170  875  597  385  442  736  366  866  980   818 #>   [16,]  283  776  227  189  251  966  512  605  842   586 #>   [17,]   43  561  382  379  231   32  443  774  143   357 #>   [18,]    7  377   62   77  412  183  327   45  980   881 #>   [19,]  288   44  205  816  600  294   54  709  109   336 #>   [20,]   74  851  292  838  275  175  296  859  603   551 #>   [21,]  545  339  109  336   33  368  221  284  816   407 #>   [22,]   71  569  985  409  465  587  566   36  410   417 #>   [23,]  100  212  536  461  234  874  883  754  414   473 #>   [24,]  386   94  968  456  159  453  349  656  473   146 #>   [25,]  601  236  259  337   12  749  896  125  494   636 #>   [26,]   11  411  837   57   90  593  393  555  823   713 #>   [27,]  289  574  977  680  406  538  521  637  703   542 #>   [28,]  789  532  778   75  398  494  457  482  238   333 #>   [29,]  286  317  643  803  673  589  784  615  908   779 #>   [30,]  127  273  714  562  117  630   65  668  809   965 #>   [31,]  443  292   92  497   32  809  498   65  891    53 #>   [32,]  774  443  382  301  832  799  292  175  561    31 #>   [33,]  870  539  368   44  407  109  545  729    5   339 #>   [34,]  831  934  730   12  363  523  329  347   75   559 #>   [35,]  737  132  216   91   41  139  340  118  540   859 #>   [36,]  587  691  277  985  671  430  346  417   71   946 #>   [37,]  884  981  964  172  819  283  840  445  210   565 #>   [38,]  556  954  477  563  489  203  911  914  401   869 #>   [39,]   84  438  959  453  220  933   91  540  541   664 #>   [40,]  474  290  194  697  992  119  967  817  588   878 #>   [41,]  340  512  216  682  859  411   35  987  586   837 #>   [42,]  670  892  607  822  201  303  295  732  599   996 #>   [43,]  231  308  382   17  561  533  447  379   32   774 #>   [44,]  205  709   19  600   33  762  816  755   54   294 #>   [45,]   56    7  481  743  857   97  183  552  122   389 #>   [46,]  690  854   78  999  667  628  294  522  872   513 #>   [47,]  297  769  506  351  209  484  555  258  978    90 #>   [48,]  646  836  279  148  457  618  886  191   28   238 #>   [49,]  842  504  215  539  490  947  910  757   96   762 #>   [50,]  547  223  503  877  415  775  425  500  638   161 #>   [51,]  775  361  877  449  415  624  264  936  503   226 #>   [52,]  466  617  570  943  706  270  366  405  324   840 #>   [53,]  178  498   92  139  428   35  774  301  814   446 #>   [54,]  600  205  709  202  977  538   44  865  341   653 #>   [55,]  722  279  646  678  487   68  268  432  542   727 #>   [56,]   45  857   97  743  483  370  470  389  481   360 #>   [57,]   11  862  593   26  488  771  326  233  369   823 #>   [58,]  780  448  932  227  170   16  472  433  471   397 #>   [59,]  851  430   60   88  456  691  903  453  277   526 #>   [60,]  675  417  430  277  691  647   88   59  409   465 #>   [61,]   69  102  157  391  674  338  578   83  764   773 #>   [62,]  412  377    7  872  153   18   67  628  122   582 #>   [63,]  907  376  631  650  106  720  880  841  738   312 #>   [64,]  534  550  271  362  463   94  384  950  635   473 #>   [65,]  809   31  273  642  717  497  292  498   30   155 #>   [66,]  123  316  694  634  595  110  782  499  913   711 #>   [67,]  882  872    7  412  525  999  743  786  122   168 #>   [68,]  542  924  637  846  895  764  268  289  680   162 #>   [69,]   61  699    8  688  157  338  138  927  192   490 #>   [70,]  420  500  564  901  923  751  995  472  436   638 #>   [71,]  409  985   22  417  465  569  587  946   36   277 #>   [72,]  788  807  648  990  657  669  529  401  203   182 #>   [73,]  300  551  226  724  603  319  554  577  808   936 #>   [74,]   20  851  292  275  175   59  301  838  799   903 #>   [75,]   12  831  398  363  494  934  789  843   34   333 #>   [76,]  116  708  537  280  325  501  158  485  304   151 #>   [77,]  377  183  582  853   18  327  122  866  686     7 #>   [78,]  628  854  520   46  999  294  471  341  872   597 #>   [79,]  457  618  827  704  335  229  835  363  469   676 #>   [80,]  897  389  908  887  184  360   97  654  557   783 #>   [81,]  553  895  623  252  976  982  835  105  846   997 #>   [82,]  713  591  250  468  393  593  347  245  912   450 #>   [83,]  764  674  368   61  374  157  238  729  843   598 #>   [84,]  541  228  635  920  179   39  438  933  969   241 #>   [85,]  710  104   13  474  583  949  640  387  952  1000 #>   [86,]  174  298  944  439  700  191  953  310  225   354 #>   [87,]  495  962    3  168  525  334  769  649  748   925 #>   [88,]  526   60   59  916  461  543  718  139  142   675 #>   [89,]  841  106  650  773  924  731   63  332  391     6 #>   [90,]  555   26  565  823  209  429  393  771  250   278 #>   [91,]  438  737   35  540  579  506  340  314  297   933 #>   [92,]  498  497  155  814   53   31  802  774   32   178 #>   [93,]  701  719  208  662  376  665  650  491   63   929 #>   [94,]   24  386  473  968  349  534  384  453  362   244 #>   [95,]  813  309  384  879  845  473  265  534  400   312 #>   [96,]  455  923  232  995   49    1  490  353  699     8 #>   [97,]  360  483  389  184   56  743  470  568   45   857 #>   [98,]  397  251  353  987  728  472  617  227  947   832 #>   [99,]  281  311  819  554    9  172  939  964  136   314 #>  [100,]  754  889  883   23  893  392  414  234  645   970 #>  [101,]  611    4  912  926  128  739  274  888  347   863 #>  [102,]  391   61  610  674  773  764  578  924  338   895 #>  [103,]  308  372  447  221  685  963  177  533  564   487 #>  [104,]  949  725  522  825   13  200  860  853  686   493 #>  [105,]  527  553  464  861  997  824  235   81  140   623 #>  [106,]  841   89  650  332   63  773    6  731  391   924 #>  [107,]  272  776  549  666  826  433  605  176  283   210 #>  [108,]  791  242  993  267  752  375  435  239  384   265 #>  [109,]  339  545  336   21   33   44  288  816   19   539 #>  [110,]  694  316  123  938  634  766  456  902  903   430 #>  [111,]  320  771  458  615  823  922  779  291  488   486 #>  [112,]  580  856  124  154  355  607  938  906  782   996 #>  [113,]  500   70  638   50  770  658  420  742  751   806 #>  [114,]  403  616  900  371  786  529  383  552  797   706 #>  [115,]  432  583 1000  710  640  952  268  581  284   374 #>  [116,]  708  537   76  424  325  485  401  419  203   911 #>  [117,]  664  197  965  540  273  959  612  760  314   218 #>  [118,]  484  814  351   35  297  506  498  750  254   132 #>  [119,]  878  590  609  830  967  134   40  643  518   817 #>  [120,]  328  679  626  151  567  196   76  166  738   805 #>  [121,]  544  332  792  217  976  131  681  783  841   106 #>  [122,]  202  686  620  412  522    7  389   67   45   743 #>  [123,]  316  694  110  766  634  262  938  913  467   855 #>  [124,]  355  969  169  580  112  154  808  856  906   890 #>  [125,]  238  636   25  305  236  230  601  310  259   343 #>  [126,]  147  971  625  862  820  517  511  629  158   233 #>  [127,]  136  668   30  554  273   99  524    9  714   117 #>  [128,]  167  926  611  101  888  493  739  604  725     4 #>  [129,]  288  794  294  433   19  109  418   58  448   826 #>  [130,]  399  134  734  726    2  380  983  633  692   917 #>  [131,]  792  935  252  623  404  738  982  997   81   976 #>  [132,]  750  254  948  216  139  452  837  682   35   411 #>  [133,]  361  953  855  944  298   51  596  467  775   624 #>  [134,]  130  399    2  692  633  983  734  726  829   380 #>  [135,]  469  763  410  749  191  927  618  330  677   354 #>  [136,]  127   99  281  554  885  311  819    9  190   524 #>  [137,]    5  991  171  842  762  928  619  504  709   539 #>  [138,]  688  757  490  699  927   69    8  641  942   455 #>  [139,]  132  216   35  178  737  750  948   88  146    53 #>  [140,]  342  557  620  105  235  553  623  464  527   686 #>  [141,]  910  799  275  356    1  508  175  232  301   353 #>  [142,]   14  152  793  812  232  957  942  246    8   373 #>  [143,]  919  909  428  269  489  802  358  178  695   182 #>  [144,]  961  306  782  960  833  828  195  745  415   264 #>  [145,]  627  660  894  715  253  180  839  784  291   451 #>  [146,]  446  434  461  139  695  178   88  526  456    24 #>  [147,]  126  984  207  862  511  233  820  971  423   625 #>  [148,]   10   79  457  335   48  835  229  672  618   247 #>  [149,]  452  241  369  179  602  796  326  675  541   647 #>  [150,]  787  950  271  282  219  463  173  614  741    64 #>  [151,]  626  696  501  441  328   76  287  185  120   738 #>  [152,]   14  214  142  496  916  232  975  957  871   793 #>  [153,]  981  628  875  854  872  597   78   37   46   999 #>  [154,]  906  580  808  112  124  782  856  499  355   904 #>  [155,]  497  498  760   92  814  859  324  197  118    35 #>  [156,]  233  454  209  302   11  304  971  488  320   441 #>  [157,]   61  368   69   83  192  338  699  764  490   578 #>  [158,]  971  280  511  126  304  454  537  325  517   625 #>  [159,]   24  456  386  968   94  453  694  110  913   562 #>  [160,]  412  525  654  639    7   67  389  881  887   416 #>  [161,]  733  425  724  605  826  991  896  666  877   272 #>  [162,]  542  426  299  680  703  188  637  876  661    27 #>  [163,]  352  533  421  546  315  661  308  103  986   188 #>  [164,]  492  735  584  939  612  664  499  516   99   311 #>  [165,]  598   69  192  372  138    8  479  221  927   455 #>  [166,]  567  483  328  568  477  322  360  424  679   626 #>  [167,]  128  493  926  276  611  274  888  101  739   604 #>  [168,]  872  458  258  999  922  525    3   87  555   769 #>  [169,]  969  355  890  124  468  486  245  974  505   476 #>  [170,]   15  442  597  366  875  780   58  628  981   706 #>  [171,]  619  199  762  341  137  504  712  653  709   768 #>  [172,]  819  939   37  281  964  884  218   99  314   210 #>  [173,]  692  803  180  219  950  253  839  784  145   627 #>  [174,]  191   86  944  439  135  298  310  354  330   225 #>  [175,]  301  799  987  275  838  251  512  910  296   141 #>  [176,]  210  549  107  311  272  514  776  863  666   433 #>  [177,]  447  496  546  533  571  998   14  103  700    43 #>  [178,]   53  695  428  139  446  182  143  498  814   132 #>  [179,]  241  541  326  149  890  452  796  593  602   394 #>  [180,]  803  784  660  253  173  950  145  894  219   627 #>  [181,]  371  475  797  299  847  685  529  426  767   788 #>  [182,]  428  909  990  788  530  812   72  269  975   373 #>  [183,]  327  377  481   77   45    7  980  552  866   122 #>  [184,]  389  360   97  834  623  252  792  470  908   131 #>  [185,]  287  441  738  921  845  935  186  151  404   285 #>  [186,]  921  219  287  291  285  185  787  834  615   265 #>  [187,]  712  341  653  199  520  278  619  657  669   171 #>  [188,]  876  777  731  661  345  162  521  426  542   299 #>  [189,]  591  713  768  283  250  393   16  504  512    82 #>  [190,]  885  943  780  747  964  932  884  844  819   324 #>  [191,]  174  135  479  354  330  998  439   86  310   944 #>  [192,]  221  372  598    8  699  157   69  165  455   368 #>  [193,]  647  594  629  813  625   60  655  675  718   149 #>  [194,]  873  290  690   40  967  582   62   46  817   697 #>  [195,]  274  960  833  398  333  831  934  745  223   547 #>  [196,]  805  120  679  328  322  662  567  930  652   708 #>  [197,]  540  117   35  760  155  959  993   91  118   965 #>  [198,]  322  622  563  900  613  576  166  424  931   810 #>  [199,]  171  762  341  712  227  619  520  187  471   504 #>  [200,]  600  725    5  825  464  248  870  205  137   611 #>  [201,]  892  917  726  364   42  402  795  607  237   734 #>  [202,]   54  849  667  320  621  122  600  743  222   553 #>  [203,]  401  556  648  914  807  302  304  869   72   424 #>  [204,]  753  270  818  736  875  885  466  943  840   651 #>  [205,]   44  709  600   54   19  762  294  520  755   341 #>  [206,]  244  349  915  394  996  392  409  979  444   395 #>  [207,]  740  984  444  147  451  423  820  602  369   632 #>  [208,]  719  662  650    6   63  805  376  631  332   986 #>  [209,]  555  351   47  254  506  156   90  278  682   297 #>  [210,]  176  549   37  964  107  283  172  311  776   433 #>  [211,]  578  641  865  459  928  338  757  619  621   137 #>  [212,]  929   23  473  400  384  665  592  719   95   491 #>  [213,]  261  380  486  399  245  462  771  111    4   734 #>  [214,]  916  152  496   14  957  546  367  246  142   315 #>  [215,]  947  504  767  657   49  910  353  669  847   199 #>  [216,]  411  837  132  340  948  750  139   41  452   682 #>  [217,]  370  790  470  792  955  406  857  332  252   131 #>  [218,]  314  281  760    9  664  612   91  172  859   939 #>  [219,]  839  173  784  186  803  180  291  589  787   145 #>  [220,]  438  453  340  933  430  450  277  737  216    91 #>  [221,]  192  598  372  368    8  157  165  455   21   699 #>  [222,]  849  518  513  825  667  464   13  673  527   202 #>  [223,]   50  195  663  425  274  547  972  343  249   960 #>  [224,]  929  212   23  414  146   94  434  519  400   108 #>  [225,]  439  236  973  700  944  759  763  138  246   543 #>  [226,]  319  603   73  724  551  877  554  300  449   264 #>  [227,]  586  199  471  947   16  762  504  215  171   520 #>  [228,]   84  362  656  541  635  386  241  938  179   355 #>  [229,]  835  674  335  824  764  102  248  865  843   457 #>  [230,]  886  125  836  310  636  598  221  742  238   305 #>  [231,]   43  308  382  561  548  564  797  685   17   901 #>  [232,]  455  847  353    8   96    1  141  142  699   910 #>  [233,]   11  156  369  971   57  862  126  147  517   984 #>  [234,]  874  883  461  571  526  543  889  519  916    23 #>  [235,]  464  248  825  527  824  427   13  105  140   553 #>  [236,]  601   25  259  337  749  225  636  138  125   436 #>  [237,]  295  402  730  476  566  856  523   34  996   765 #>  [238,]  125   83   12  843  836  374   25  618  469   368 #>  [239,]  752  804  695  400  791  592  911  358  325   501 #>  [240,]  350  811  507  608  717  243  651  814  359   891 #>  [241,]  796  179  149  602  394  541  656  326  452   946 #>  [242,]  993  108  791  267  435  375  752  359  560   118 #>  [243,]  622  994  954  270   38  802  814  962  651   868 #>  [244,]  893  395  349  473  206  392  413  193  491   864 #>  [245,]  486  771  823  593  326  894   82  890  429    57 #>  [246,]  942  957  354  718  142  440  998  927  214    14 #>  [247,]  720  437  852   63  376  312  907  677  632   841 #>  [248,]  235  464  824  427  825  865  527  600  229   200 #>  [249,]  606  972  425  739  733  989  826  794  161   605 #>  [250,]  713  393  429  591   82  189  579  823  331   565 #>  [251,]  987   98  956  512  175   16  844  296  617   586 #>  [252,]  623  470  553  982  131   81  792  977  935   574 #>  [253,]  660  180  950  145  894  602  282  463  796   635 #>  [254,]  750  948  132  990  682  209  517  506  351   304 #>  [255,]  516  761  974  505  904  863  829  588  462   399 #>  [256,]  293  940  673  558  527  825   13  518  573   781 #>  [257,]  844  524  838  932  603  832  251  956  292   850 #>  [258,]  458  978  899  715    3   47  168  560  769   922 #>  [259,]  337  436  601  236  636  896  973  407   25   698 #>  [260,]  798  550   64  959  242  108  993  531  313   918 #>  [261,]  213    4  912  863  307  486  399  331  380   347 #>  [262,]  392  766  510  970  349  893  996  754  915   417 #>  [263,]  579  933  941  577  429  250  393  969  761   468 #>  [264,]  449  902  551  858  775  936  467  815   73   226 #>  [265,]  309  845  267  323  560  791  978  501  375   384 #>  [266,]  732  348  892  781  201  917  670  726  402   822 #>  [267,]  560  265  375  791  978  108  242  506  845   309 #>  [268,]  284  816   68  374  680 1000  545  727   21    19 #>  [269,]  909  489  428  788  182  810  143  802   72   563 #>  [270,]  651  204   52  466  243  891  994  840  366   943 #>  [271,]  150   64  463  282  534  614  950  550  879   362 #>  [272,]  107  776  666  549  826  724  176  319  605   300 #>  [273,]  562  668  117  809   65  540   20  197   74   859 #>  [274,]  195  934  831  101   34  611  833  167  398   926 #>  [275,]  910  141  175  356  799  296  508  838  851   698 #>  [276,]  167  960  888  898  604  128  195  833  274   745 #>  [277,]  985  675  691   36  430   60  587  946  409   417 #>  [278,]  682  586  187  712  555  869  807  657  383   209 #>  [279,]  646  487  836   55   68  722  886  268   48   432 #>  [280,]  158  738  511   76  441  454  971  631  982   537 #>  [281,]   99    9  819  314  218  172  939  664  964   311 #>  [282,]  950  463  253  614  180  602  150  796  534   660 #>  [283,]   16  768  776  189  227  666   37  591  471   433 #>  [284,]  374  268  816  545   21  870  368  585   83   109 #>  [285,]  291  779  441  615  320  899  156  834  111   186 #>  [286,]   29  317  643  803  589  784  615  219  692   779 #>  [287,]  185  921  186  441  783  626  151  935  285   792 #>  [288,]   19  129  109   44  205  816  294  581  853   418 #>  [289,]  574  846   27  977  637  406  895  470   54   703 #>  [290,]  817  697  690  194  588  873  307  513   46   967 #>  [291,]  779  285  615  784  660  627  111  320  186   451 #>  [292,]  301  175   74   32  799  838   20   31  443   987 #>  [293,]  558  256  940  518  673  307  734  380  213   399 #>  [294,]  520  471  762  341  205   78  199  854  709   171 #>  [295,]  237  402  856  996  828  476  566  730  607    42 #>  [296,]  275  512  966  175  910   16  987  251  838   842 #>  [297,]   47  506  484  769  351  209  375  118   91   560 #>  [298,]  944  700   86  439  174  225  645  543  759   571 #>  [299,]  426  162  685  181  371  542  680  188  192   721 #>  [300,]   73  577  724  808  603  551  966  319  554   272 #>  [301,]  799  175  987  774   32  292  141  275  910   353 #>  [302,]  538  454  203  401  807  156  304  648  653   187 #>  [303,]   42  915  670  607  892  599  201  996  822   979 #>  [304,]  911  556  203  158  807  325  302  254  156   990 #>  [305,]  343  972  742  125  638  778  636   25  238   601 #>  [306,]  961  415  144  264  449  503  775  782  833   547 #>  [307,]  588  697  261    4  293  213  558  513  863   912 #>  [308,]  231   43  533  685  548  181  797  299  382   103 #>  [309,]  845  265   95  813  384  501  323  185  267   625 #>  [310,]  125  230  886  439  636  165  836  174  191   236 #>  [311,]   99  176  281  939  172  210  819  964  584   514 #>  [312,]  907  702  404  720  852  444  207  880  756    63 #>  [313,]  334  918  993  242  649    3  744  925  478   741 #>  [314,]  218  281    9  664  760  859   91  579  612   819 #>  [315,]  546  367  533  214  419  975  352  152  810   871 #>  [316,]  634  123  110  694  467  902  624  766  855   938 #>  [317,]   29  286  800  643  803  589  861  784  997   976 #>  [318,]  468  476  730   82  450   36  591  858  713   347 #>  [319,]  226  603   73  724  272  554  300  503  365   551 #>  [320,]  111  779  621  615  285  156  849  202  291   488 #>  [321,]  701  986  163  650    6   93  546  421  315   352 #>  [322,]  166  790  424  567  708  805  328  576  116   485 #>  [323,]  265  845  309  151  501  267  696  185  626   572 #>  [324,]  617  956  943  884  885  445  840   52  155   844 #>  [325,]  911  537  116  804  304   76  158  975  419   708 #>  [326,]  593  369  179  740  245   57  452  149  450   823 #>  [327,]  980  183  616  575  866  377  114  597  481   552 #>  [328,]  567  120  679  626  166  151  483  568  696   477 #>  [329,]  363  827  843  523  559   34   12  674  730   729 #>  [330,]  677  758  135  378  354  763  191  395  410   437 #>  [331,]  565  250  768  429  591  261  713  189  771    82 #>  [332,]  106  790  841  650  738  217  631    6   63   792 #>  [333,]  398  789  494  532  195   75  833  960  831   828 #>  [334,]  769    3  478  962  297  649  484   47   87   993 #>  [335,]  835  229  924  773  976   81  102  391  861    79 #>  [336,]  109  339  545   21   33   44  418  422  816   680 #>  [337,]  259  896  436  407  601  698  236   25    1   508 #>  [338,]  578  459   61  610   69  757  688  102  699   641 #>  [339,]  109  545   21  336   33  407  923  539   96   368 #>  [340,]  216   41  450  411  220  393  837  438   35    91 #>  [341,]  187  520  199  712  171  653  619  471  762   709 #>  [342,]  140  557  620  686   13  105  235  527  222   623 #>  [343,]  305  972  778  742  638  125  606   25  238    12 #>  [344,]  689  937  822  303  670   42  892  732  201   266 #>  [345,]  485  188  876  810  721  521  777  871  661   537 #>  [346,]  671  508  698  587  356   36  569  431  275   337 #>  [347,]  523  912  559    4   82  730  765   34  928   261 #>  [348,]  732  266  892  726  734  599  917  898  604   201 #>  [349,]  968  244  386  893  392   94  206  473  262   656 #>  [350,]  608  811  359  507  814  240  652  478  243   118 #>  [351,]  484  209   47  297  506  682  254  118  750   555 #>  [352,]  533  163  421  315  546  308  379  810  721    43 #>  [353,]  847  232  767  799   98  910  215  141   96   947 #>  [354,]  998  246  479  759  758  763  191  225  135   330 #>  [355,]  124  969  169  890  112  856  580  607  476   228 #>  [356,]    1  698  508  141  275  995  910  346  671   436 #>  [357,]  988  571  945  903  874  683  526  234  543   496 #>  [358,]  919  419  489  143  563  804  810  695  269   239 #>  [359,]  507  752  811  350  814  118  178  239  242   108 #>  [360,]  483   97  568  184  834  389  567  626  899   166 #>  [361,]   51  431  683  953  624  775  460  133  700   936 #>  [362,]  228  635  463  386  913   84  534  541  798   241 #>  [363,]  329  827  843   12   34   75  831  469  523   781 #>  [364,]  795  765  917  480  726  894  380  740  734   523 #>  [365,]  319  509  272  381  107  524  603  554  514   190 #>  [366,]  597  170  980  628  442   52   15  706  994   383 #>  [367,]  315  957  975  419  214  546  871  592  485   537 #>  [368,]   83  157  729  490   33  870  407  699  598   221 #>  [369,]  452  326  149  820  517  233  862  629  740   675 #>  [370,]  217  790  470  567   97  483   56  792  857   360 #>  [371,]  181  529  475  403  797  767  755  299  788   847 #>  [372,]  192  221  598  165    8   69  777  299  157   699 #>  [373,]  812  657  793  517  837  530  669  948  411   862 #>  [374,]  284   83  870  764  368  585  238  778  843   729 #>  [375,]  506  267  132  560  737  254  297  452  978    91 #>  [376,]   63  491  437  665  907  650  413  719  880   758 #>  [377,]  582   62  866   77  183  327  980   18    7   597 #>  [378,]  676  410  704  958  330  135  951  677  763   402 #>  [379,]   17  561   43  352  919  533  382  143  421   231 #>  [380,]  213  734  480  940  795  726  364  399  894   486 #>  [381,]  365  524  190  747  850  509  136  257  932   885 #>  [382,]  774   32  561   43  231   17  443  301  847   799 #>  [383,]  403  869  529  187  278   72  648  712  786   807 #>  [384,]  813   95  473  309  534  193   94  845  149   265 #>  [385,]  736   15  875  597  980  170  366  866  818   153 #>  [386,]  968   24  656  453   94  349  228  456  241   362 #>  [387,]  535  558  293  256  673  633  474  573   13     2 #>  [388,]  544  557  342  897  976  140   81  105  672   623 #>  [389,]  184   97  887  360  834  122  908  623  743   483 #>  [390,]  741  798  839  408  531  744  635  219  173   920 #>  [391,]  773  102  610  924   61  674  764  338  895    69 #>  [392,]  893  262  754  979  349  970  244  206  510   395 #>  [393,]  450  713  250  593  579  468   26   82  189   340 #>  [394,]  946  241  796  656  890  409  985  740  179   602 #>  [395,]  893  718  244  465  763  417  409  655  759   645 #>  [396,]  658  447  564  751  683  953  707  901  460   231 #>  [397,]   98  472  728  617  867  832  251  706   58   448 #>  [398,]  333   75  494  195  831  934   12  789  532   274 #>  [399,]  130  213  734  380  261  134  726  462  486   974 #>  [400,]  592  239  804  752   95  384  719  813  212   929 #>  [401,]  648  203  914  424  556  302  807   72  529   538 #>  [402,]  237  295  704  676  827  632  201  363  730   566 #>  [403,]  529  383  786  371  114  648  475  187  552   520 #>  [404,]  702  935  738  907  982  147  131  312  511   631 #>  [405,]  706   52  617  466  797  802  366  270  561   114 #>  [406,]  574  977  289   27  521  637  470  188  876   846 #>  [407,]  337  923  259   33   96  368  539  896  436    49 #>  [408,]  390  741  313  918  609  744  590  649  798   515 #>  [409,]   71  985  417   22  465  946  587  569  277   691 #>  [410,]  704  469  440  676  763   22  378  927  827    71 #>  [411,]  837  216   26  948  517   11  340  682  812   373 #>  [412,]   62    7   67  872  160  525  122  639  999   168 #>  [413,]  491  665  758  244  437  395  677  502  864   893 #>  [414,]  100   23  519  754  883  889  874  234  536   212 #>  [415,]  503  306  264  449  775   50   51  226  877   319 #>  [416,]  881  483   56  160  166  567   45   97  360     7 #>  [417,]  409  691   71  985  465  587   60  946   36   430 #>  [418,]  336  442  109  288  129  728  867   19  114   339 #>  [419,]  975  810  537  325  358  708  116  367  485   315 #>  [420,]   70  472  564  500  751  448  339  923  644   901 #>  [421,]  352  163  315  533  379  810  546  919  986   721 #>  [422,]  680  336   21  162  685  545  542  221  299   426 #>  [423,]  820  629  641  440  942  126  147  862  647   569 #>  [424,]  914  401  116  648  708  203  563  537  576   810 #>  [425,]  161  733  249  826  605   50  272  724  503   739 #>  [426,]  299  162  542  703  680  181  687  685  188   371 #>  [427,]  248  235  464  600  825  865  620  846  200   824 #>  [428,]  909  182  269  990  489  143  788  178  695   802 #>  [429,]  823  250  579  486  771  565  263  245   90   331 #>  [430,]  691  277   59   60   36  851  946  220  417   656 #>  [431,]  671  936  851  346  858  903  356  361  587    36 #>  [432,]  115  583  952 1000  268  284  640  710  279   374 #>  [433,]  666  605  776  826  549  107  283  768  739    16 #>  [434,]  446  146  461  526  178  456   53  139   59    88 #>  [435,]  791  242  572  108  752  652  267  239  993   359 #>  [436,]  973  259  995  337    1  821  923  356  698   460 #>  [437,]  677  247  758  376  655  440  880  720  413   491 #>  [438,]  737   91  220  453  541  340  933  452   35   540 #>  [439,]  225  700  944  973  236  298  310  174  354   821 #>  [440,]  942  655  927  594  423  880  410  718  677   246 #>  [441,]  285  280  185  738  156  151  287  935  158   501 #>  [442,]  170   15  866  706  597  366  980  418  114    58 #>  [443,]   32   31  832  292  382  561  774   92  301   617 #>  [444,]  632  207  740  984  394  756  364  796  704   602 #>  [445,]  956  884  819  964  966  512  586  283    9    16 #>  [446,]  146  434  695  461  178  526  139   88   53   916 #>  [447,]  177  821  103   43  564  683  700  231  973   308 #>  [448,]  472   58  932  780  397   98  733  747  644   826 #>  [449,]  264  902  775  936  551  467  858   51  226    73 #>  [450,]  393  593  468  713  340  933  411   26   82   579 #>  [451,]  984  660  740  207  602  233  147  326  369   894 #>  [452,]  149  369  326  675  216  132  837  179  517   411 #>  [453,]  438  220  456  968  737  386  656  430   24   541 #>  [454,]  971  302  653  156  488  158  621  538  977   982 #>  [455,]   96    8  232  699    1  490  995  923  821   138 #>  [456,]  453   24   59  159  968  386  430  737  220   438 #>  [457,]  618   79  674  229  469  238  843  827  764   363 #>  [458,]  111  258  555  922  168   90  565  771  823   156 #>  [459,]  757  578  338  688  641  490  211  699  755   669 #>  [460,]  901  683  436  973  356  995    1  821  838   700 #>  [461,]  526  234  446   88  434  146  916  883  874   543 #>  [462,]  429  486  829  213  627  261  823  399  922   111 #>  [463,]  950  282  253  635  362  271  534  173   64   150 #>  [464,]  235  825  248  527  824  105  865  427  553   222 #>  [465,]  569  763   71  409  417   22  985  587  718   759 #>  [466,]   52  570  943  270  706  885  170  366  617   204 #>  [467,]  902  449  858  264  815  936  766  775  551   431 #>  [468,]  318  450   82  393  713  591  577  250  933   593 #>  [469,]  618  827  410  927  704  135  363   22  749   329 #>  [470,]  252  574  623  977  217  289  743   97  857   406 #>  [471,]  520  227  199  341  294  854  762   78  586   171 #>  [472,]  397  448  644   98  728  932   58  867  832   420 #>  [473,]   94  244  384  534  813  349  193  893   95    24 #>  [474,]   40  697  860  104  785   13  387  522  686   690 #>  [475,]  797  767  181  371  847  788  867  728  529   947 #>  [476,]  318  730  468  237  856   36  169  295  355   523 #>  [477,]  568  696   38  556  203  166  304  911  899   914 #>  [478,]  962  608  484  334  118  748  993  297  769   351 #>  [479,]  998  354  165  246  191  439  135  225  927   310 #>  [480,]  795  364  380  765  559  734  726  917  940   861 #>  [481,]  727   45  183  552  931  327   56  703  637   857 #>  [482,]  333  905  789  532  398   28  960  937   75   494 #>  [483,]  360  568  567  166   97  328   56  184  626   370 #>  [484,]  297  351  118   47  506  962  769  209  760   478 #>  [485,]  708  345  537  116   76  419    6  521  810   871 #>  [486,]  245  823  771  429  894  213  462  593  261   250 #>  [487,]  886  103  646  279  372  230  836  598  221   422 #>  [488,]  621  619   57   11  771  653  171  454  862    26 #>  [489,]  269  563  802  909  428   38  143  358  325   810 #>  [490,]  699  688  757  459   49    8  138  455  368   641 #>  [491,]  665  413  376  437  244  502  473  879  907   758 #>  [492,]  735  164  516  515  612  939  255  829  761   941 #>  [493,]  167  926  128  725  611  860  949  104  739   794 #>  [494,]  532  398   12  749   25   75  789  333  831   601 #>  [495,]   87  649  748  334  753  962  769    3  168   204 #>  [496,]   14  916  214  152  543  571  526  142  246   546 #>  [497,]  155  498   92  814   31  760  859  324  507    53 #>  [498,]  497   92  155  814   53   35  118  859  178   507 #>  [499,]  906  595  154  584  808  164  711  531   39   920 #>  [500,]   70  113  638  420  877   50  733  972  658   425 #>  [501,]  845  696   76  151  911  158  304  325  441   804 #>  [502,]  864  665  684  491  413  614  244  979  879   473 #>  [503,]  415  319  226   50  264  877  449  775  425    51 #>  [504,]  842  215   49  171  199  947  619  512  137   762 #>  [505,]  974  904  863  761  255  898  169  888  124   261 #>  [506,]  297   47  375  351  484  209  254  132  560   769 #>  [507,]  359  814  498  497  350  118  608  178  155    53 #>  [508,]  698  346  356  671  910  275    1  141  337   569 #>  [509,]  826  365  107  272  549  176  747  514  433   425 #>  [510,]  262  766  951  996  392  970  915  979  206   417 #>  [511,]  625  126  158  280  147  631  880  907  971   738 #>  [512,]  987   41  296  586  251  175  956  504  215    16 #>  [513,]  667  849  222  518  690  307  697  825  522   202 #>  [514,]  176  311  210  549  509  272  365  107  584   705 #>  [515,]  612  735  959  941  920  492  664  918  829   939 #>  [516,]  255  761  492  829  974  904  505  863  584   817 #>  [517,]  948  837  862  373  530  126  812   11  971   629 #>  [518,]  222  673  849  513  293  940  878  256   13   825 #>  [519,]  874  234  883  414  889  100  461  571   23   988 #>  [520,]  341  471  294  199  187  762   78  712  709   171 #>  [521,]  777  871  406  188  876  345  537   27  977   610 #>  [522,]  686  620  853   46  667  513  104  690  122   200 #>  [523,]  559  347  765  730  329   34  912  364  480   928 #>  [524,]  257  844  850  603  554  190  932  226  319   365 #>  [525,]   67  168  412  872  160   87  899  882    3   568 #>  [526,]   88  461  916  543  446  496   59  234  434    14 #>  [527,]  235  464  824  825  105   13  248  673  256   940 #>  [528,]  787  589  741  150  186  219  390  921  590   839 #>  [529,]  648  403  371   72  383  788  669  401  786   181 #>  [530,]  812  517  373  948  793  182  975  629  625   158 #>  [531,]  798  920  635   84  515  983  829  390  959   362 #>  [532,]  789  494  333  398   75  749   28   12  905   618 #>  [533,]  352  308  546  315  152  163   43   14  721   214 #>  [534,]   64  473   94  384  362  796  813  463  282   950 #>  [535,]  387  673  643  518   29  256  293  558   13   878 #>  [536,]   23  234  214  916  571  758  874  998  461   496 #>  [537,]  116  325   76  708  485  158  975  419  871   280 #>  [538,]  302  574  743  977  786  454  401  648   54   529 #>  [539,]  842   49  762  991  137   33    5  504  407   227 #>  [540,]  197  737   91   35  959  438  993  314   39   859 #>  [541,]   84  179  241  635  438  228  149  453  737    91 #>  [542,]  162  680  703  637  426  188  299   68   27   876 #>  [543,]  759  916   88  526  496  571  718  645  234   225 #>  [544,]  121  388  976  897  792  131  217  955   81   557 #>  [545,]   21  109  339  336   33  816  284  368  422    44 #>  [546,]  315  214  533  367  152  352  496   14  916   957 #>  [547,]  775  896   50  601  596   25  815  877  264   858 #>  [548,]  685  797  308  867  181  299  475  231  426   371 #>  [549,]  176  107  666  433  210  776  272  826  605   283 #>  [550,]   64  534  271  362   94  463  913  473  260   684 #>  [551,]   73  936  858  902  264  449  226  300  724   808 #>  [552,]  931  786  613  576  743  403  914  538  900   882 #>  [553,]   81  623  252  105  865  982  464  621  997   895 #>  [554,]  603   99   73  319  226  300  966  668  281     9 #>  [555,]   90  209   26  278  458  565   47  351  823    11 #>  [556,]  203  304  401   38  807  869  911  914  648   477 #>  [557,]  140  623  342  857  553   81  470  252  105   620 #>  [558,]  293  256  307  940  573  604  633  734  673   518 #>  [559,]  523  347  765  480  912  329  928   82  730   795 #>  [560,]  978  267  715  375  506  265  258   47  297   209 #>  [561,]  382   43   17   32  231  443  774  143  379   797 #>  [562,]  273  159   30  456  809  117  540  630   65   197 #>  [563,]  489   38  269  810  424  358  802  914  116   708 #>  [564,]   70  901  420  231  751  821  447  658  923   995 #>  [565,]  331   90  429  250  555  768  458  823  189   771 #>  [566,]  587   22  749   71  815   36  409  985  569   417 #>  [567,]  166  328  483  679  360  568  370  120  626    97 #>  [568,]  483  360  477  166   97  626  696  899  328   151 #>  [569,]   22  465   71  985  587  942  409  423  346   763 #>  [570,]  466  644   52  706  617  943  397  472  780   747 #>  [571,]  234  874  496  543  357  916  526  298  759   461 #>  [572,]  435  323  652  791  752  239  400  265  804   108 #>  [573,]  781  256  558  949  611  293  604  926  825   725 #>  [574,]  977  289  538  406  470   27  743  252  846    54 #>  [575,]  616  327  980  931  552  114  868  183  613   786 #>  [576,]  613  900  687  931  552  424  703  721  914   426 #>  [577,]  933  263  468  300  393  966  579  250  450   591 #>  [578,]  338  211  459  641  757   61  102  610  688   865 #>  [579,]  263  933  429  393  250  823  941  450  577    91 #>  [580,]  856  112  154  607  124  355  745  906  599   782 #>  [581,]  640  288  710  989  746  853   19  109  129   284 #>  [582,]  377   77  873  866   62   46  522  690  853    78 #>  [583,] 1000  952  640  853  710  432  115  727  268   620 #>  [584,]  164  311  761  499  808  516   99  255  300   492 #>  [585,]  949  870  778  843  374  248  200  729  284   934 #>  [586,]  227  278  512  987  471  199  215  445  947    16 #>  [587,]   36  985  691  417  346  566   22   71  569   671 #>  [588,]  307  697  817  863  261  255  974  505  399   290 #>  [589,]  219  787  286  173  803  528  839  692  186    29 #>  [590,]  925  744  119  908  839  589  654  639  878   922 #>  [591,]  189  713  768  250   82  468  393  331  283   776 #>  [592,]  400  239  804  695  813  367  625  384  419   975 #>  [593,]  326   57  450  245  393  823   26  771   82   713 #>  [594,]  655  880  718  440  647  193  629  957  625   942 #>  [595,]  499  714   39  164  668  531  664  735  694   584 #>  [596,]  749  601  236   25  547  944  815  566  494   775 #>  [597,]  366  628  170   15  980  153  875  442   78   981 #>  [598,]  165  192  221  372   69  368  157   83    8    61 #>  [599,]  607  892  580  348  856  355   42  732  201   906 #>  [600,]   54  205  865  200   44  709  427  211  248   464 #>  [601,]   25  236  259  337  896  749  596  636  436   125 #>  [602,]  796  241  149  451  740  179  660  394  207   253 #>  [603,]  226  554  966   73  319  724  300  296  272   956 #>  [604,]  898  888  128  505  974  558  276  348  101   307 #>  [605,]  666  776  433  826  733  107   16  739  991   161 #>  [606,]  249  972  343  870  778   33  739  305  425   493 #>  [607,]  599  856  580   42  112  355  892  295  828   201 #>  [608,]  478  350  693  962  118  814  507  484  359   748 #>  [609,]  830  829  516  134  119  839  692  492  983   255 #>  [610,]  391  102  773  338  895  846  578  977  982   924 #>  [611,]  926  101  725    4  128  912  739  934    5   200 #>  [612,]  735  515  664  218  939  959  941  314  281   492 #>  [613,]  576  931  687  900  552  424  703  721  914   426 #>  [614,]  282  864  502  271  312  150  950  879  463   689 #>  [615,]  779  291  285  784  320  111  922  627  849   458 #>  [616,]  575  114  980  327  552  931  403  786  900   366 #>  [617,]  397   52  324  251   98  987  956  586  943   832 #>  [618,]  469  457   79  827  704  135  410  238  363   927 #>  [619,]  171  653  488  199  712  341  762  709  137   187 #>  [620,]  686  140  342  522   13  427  122  853  825   222 #>  [621,]  488  320  865  982  454  211   57  553  619   202 #>  [622,]  243   38  954  994  868  477  882  563  914   881 #>  [623,]  252  553  470   81  557  131  184  792  935   982 #>  [624,]  634  361  945  431   51  903  936   20  110   316 #>  [625,]  126  511  629  820  147  517  647  193  158   880 #>  [626,]  151  328  696  441  287  501  120  568   76   185 #>  [627,]  145  894  839  660  784  715  291  486  462   180 #>  [628,]   78  597  854  153  981  872  999  471  520    46 #>  [629,]  820  647  675  423  517  126  625  369  594   862 #>  [630,]  965  717  117   30  507  693  197   65  562   273 #>  [631,]  738  511  907  280   63  404   76  501  625   158 #>  [632,]  444  704  756  207  676  402  410  827  364   740 #>  [633,]    2  134  130  558  348  604  399  293  734   898 #>  [634,]  316  624  110  694  123  902  903  467  668    20 #>  [635,]   84  541  362  228  253  798  463  179  241   920 #>  [636,]  259  973  125  436  337  601  236  407  638    25 #>  [637,]  703  542  289  406  162   27  680  727   68   574 #>  [638,]  742  972  305  636  343  500  407  259   50   896 #>  [639,]  967  412  160  887  525  168  925  654  878   922 #>  [640,]  710  583  853  581 1000  746  952  716  288   104 #>  [641,]  757  688  211  459  578  423  928  338  490   138 #>  [642,]  809  988   31   65  945  443   17  292  357    32 #>  [643,]   29  286  317  589  535  692  803  119  673     2 #>  [644,]  472  570  397  448  706  728  747  420  832    58 #>  [645,]  759  893  395  889  763  543  883  417  392   465 #>  [646,]  279   48  487  836   89   68  731  924  841   886 #>  [647,]  629  193  675  820  594  655   60  423  369   625 #>  [648,]  401  203  914  529   72  807  869  302  424   788 #>  [649,]  495  334  748  918   87  925    3  744  313   769 #>  [650,]  106  841   63   89    6  376  701  332  208   986 #>  [651,]  270  891  243  204  155  497   52  466  814   324 #>  [652,]   38  477  804  696  239  752  911  435  358   350 #>  [653,]  712  187  619  669  657  341  199  755  171   454 #>  [654,]  160  908  834  925  639  887  360  525  389   590 #>  [655,]  594  880  440  647  718  423  942  193  629   395 #>  [656,]  946  968  938  386  394  241  228  691  453   430 #>  [657,]  669  712  653  373  215   72  807  947  682   187 #>  [658,]  953  683  973  460  564  396  700  636  821   436 #>  [659,]  654  925  525  478    3  477  160  881  748    87 #>  [660,]  451  145  180  894  253  627  784  602  291   984 #>  [661,]  188  876  731  678  162  345  542  426  777   687 #>  [662,]  208  930  719  805  400    6   93  986  196   592 #>  [663,]  223  415   50  503  306  425  547  195  775   113 #>  [664,]  612  314  218  281  117  735  959  939    9   197 #>  [665,]  491  413  502  376  879  437  244  473  864   719 #>  [666,]  776  605  433  107  549  739  768  826  283   272 #>  [667,]  513  849  690   46  202  222  331  999  522   200 #>  [668,]  554  273   39   20  127  664   99    9  281   808 #>  [669,]  657  653  712  755   72  947  373  459  187   215 #>  [670,]   42  937  822  732  892  607  295  828  266   905 #>  [671,]  346  508  431   36  587  851  356  698  275   936 #>  [672,]  527  824  256  673   13  235  781  861  105   248 #>  [673,]  256  518  527  940   13  293  222  105  825   558 #>  [674,]  102   61  764   83  229  843  391  329  578   729 #>  [675,]  277  647  629   60  820  452  369  985  149   837 #>  [676,]  378  704  410  402  958  632  827  469  822   206 #>  [677,]  437  758  440  330  410  655  395  763  135   594 #>  [678,]  661  162  687  731  188  703  876  542  722   637 #>  [679,]  567  120  328  166  196  483  626  151  370   360 #>  [680,]  542  162  816   27  703  426  299  637  157   289 #>  [681,]  121  544  370  679  955  783  897  217  120   332 #>  [682,]  750  990  948  278  254  411  657  807   41   837 #>  [683,]  460  953  658  700  901  361  973  447  945   821 #>  [684,]  979  864  502  915  349  392  244  206  754   473 #>  [685,]  548  299  181  308  426  797  371  221  867   475 #>  [686,]  620  522  122  140  342  853   13  222  202   825 #>  [687,]  613  576  900  703  426  931  299  162  721   637 #>  [688,]  757  490  699  138  641  459    8   69  338   578 #>  [689,]  344  822  800  201  892  614   42  303  632   670 #>  [690,]   46  667  513  854  697  873  522  331  290   999 #>  [691,]  430   36  417  277  587  946   60  985  409   656 #>  [692,]  173  134  803  130  839  180  219  983  784   627 #>  [693,]  608  965  478  748  350  993  242  507  359   435 #>  [694,]  110  123  316  634  938  159  456  766   39   913 #>  [695,]  446  178  428  975  804  239  182  146  143   530 #>  [696,]  151  501  477  626  911  304  556  899  568    76 #>  [697,]  307  588  690  513  817  290  518  725  558   667 #>  [698,]  508  356    1  346  337  910  995  275  671   436 #>  [699,]  490    8  688  757   69  455  459  138  338   192 #>  [700,]  944  439  225  298  973  683  953  460   86   821 #>  [701,]  650   93  208  986  376   89  719    6   63   841 #>  [702,]  404  997  756  935  312  720  852  982  984   861 #>  [703,]  637  542  162  680  426  687   27  289  299   576 #>  [704,]  676  827  410  632  469  402  378  618  444    79 #>  [705,]  492  514  939  164  311  516  172  735  210   290 #>  [706,]  728  867   52  405  442  397  366  570  114   617 #>  [707,]  886  230  310  103  658  396  636  447  770   564 #>  [708,]  116   76  537  485  424  325  419  810  911   401 #>  [709,]  762  755  205   44  199  619  171  341  712   653 #>  [710,]  640  746  581  104  853  583  860 1000   85   115 #>  [711,]  906  154  499  599  580  112  607  124  782   303 #>  [712,]  653  187  199  341  657  669  619  755  171   278 #>  [713,]  393   82  250  591  189  450  468  593   26   768 #>  [714,]  595   30  668  117  127  164  664  273  735   499 #>  [715,]  978  560  145  258  627  291  839  458  660   506 #>  [716,]  746  640  710  582  581   77  853  866  860   772 #>  [717,]  630   65  891  497  651  507   31  809  155   240 #>  [718,]  594  759  655  395  465  440  942  246   88   193 #>  [719,]  208  662  376  400   93  665  592  929  491    63 #>  [720,]  247  852  907  312  702  404  756   63  880   437 #>  [721,]  810  900  345  269  181  299  426  424  788   371 #>  [722,]   68  268  542  703  678  637  727  422  162    55 #>  [723,]  672   10  573  781  387  949  266  256   28   558 #>  [724,]  226   73  161  300  603  272  319  296  966   551 #>  [725,]  926  611  200  739    4  104  128  794  825   493 #>  [726,]  917  734  364  795  201  380  480  130  892   765 #>  [727,]  481  637  289  703 1000  857  816   68  268   680 #>  [728,]  867  397  797   98  475  706  472  371  767   947 #>  [729,]  870  843  368   83    5  211   33   12  928   641 #>  [730,]  476  523   34  347  318  237  765  559  928   831 #>  [731,]  876  188  661  777  542  521  406  162  345   106 #>  [732,]  348  266  892  670   42  607  599  201  828   937 #>  [733,]  161  826  605  425  932  776  666  107  724   448 #>  [734,]  726  380  917  940  399  795  130  480  364   213 #>  [735,]  612  515  492  164  664  939  941  959  920   218 #>  [736,]  385  818  875   15  204  753  170  597  466   366 #>  [737,]  438   91   35  453  540  375  220  139  132   452 #>  [738,]  631  280  404  792  441  131  511  185  935    76 #>  [739,]  926  666  794  605  611  101  433  725  776   826 #>  [740,]  207  984  326  451  369  765  444  820  602   394 #>  [741,]  390  839  219  950  173  145  715  150  635   798 #>  [742,]  638  305  972  770  343  636  230  125  806   500 #>  [743,]  538  574  786   97  552  470  302   45  977    54 #>  [744,]    3  925  258  839  922  715  334  769  590   168 #>  [745,]  833  856  888  580  898  904  505  476  828   974 #>  [746,]  710  860  640  716  581  772  785  853  288   104 #>  [747,]  780  190  448   58  932  570  943  644  170   472 #>  [748,]  649  334  478  495   87  608  962  918  693   965 #>  [749,]  236  566  596   25  601  494  135  469  763    12 #>  [750,]  254  948  132  682  990  216  837  517  411   807 #>  [751,]  564  420   70  396  500  901  644  472  658   113 #>  [752,]  239  804  791  359  108  695  400  435  811   242 #>  [753,]  818  204  875  736  885  153  943  172  981    37 #>  [754,]  100  392  893  889  970  349  262  244  883   979 #>  [755,]  709  669  762  712  947  653  199  459  657   187 #>  [756,]  702  861  852  632  997  444  795  720  207   480 #>  [757,]  688  490  459  641  699  138  578   49  338   211 #>  [758,]  677  330  413  437  354  395  718  759  655   763 #>  [759,]  543  763  718  645  465  395  354  225  246    88 #>  [760,]  155  218  314  859    9  484  197  840  497   498 #>  [761,]  255  516  974  505  904  863  263  941  169   124 #>  [762,]  199  709  171  755  137  520  619  341  539   227 #>  [763,]  465  759  410  569  395  135  718  440   22    71 #>  [764,]   83  674  102   61  924  157  391  229  773   895 #>  [765,]  523  364  559  795  480  740  347  730  890   245 #>  [766,]  262  510  855  970  467  123  996  110  938   392 #>  [767,]  847  475  947  215  788  353   72  669  657   797 #>  [768,]  591  189  283  331  171  776  713  666  137   250 #>  [769,]   47  297  484  334  506  258  351  962    3   209 #>  [770,]  806  742  638  972  305  113  343  500  636    50 #>  [771,]  823  245  486  111   57  593  488  429   82    26 #>  [772,]  785  860  794  873  509  746  582  549  129   826 #>  [773,]  391  924  102  610   61  764  841  674  835   895 #>  [774,]   32  382  301  847  767  799  182  909  353   428 #>  [775,]  449   51  547  264  877  936  858  415  815   467 #>  [776,]  666  605  107  433  283   16  768  549  272   826 #>  [777,]  521  876  188  871  731  345   69  372  192   793 #>  [778,]  343  585  305  374  870  843   75  238  606    12 #>  [779,]  615  291  285  320  784  111  935  997  451   660 #>  [780,]   58  943  747  190  170  448  932  884  981   964 #>  [781,]  573  363  329  824  523  559  256  734  266    34 #>  [782,]  961  112  154  580  902  828  467  856  808   264 #>  [783,]  921  287  185  792  626  897  131  120  186   151 #>  [784,]  803  291  180  779  615  660  627  219  145   451 #>  [785,]  860  772  794  493  873  549  739  697  725   474 #>  [786,]  552  403  882  538  648  529  743  914  383   401 #>  [787,]  150  589  219  528  186  950  173  803  741   921 #>  [788,]   72  909  767  269  182  847  475  529  807   648 #>  [789,]  532   75  494  333  398  905  958   28   12   363 #>  [790,]  217  332  370  406  485    6  322  805   76   106 #>  [791,]  108  242  267  752  435  239  375  993  265   384 #>  [792,]  131  935  252  738  623  470  184  404  287   217 #>  [793,]  373  871  812  530  142  957  669  975  459   971 #>  [794,]  739  433  826  860  129  549  666  725  605   926 #>  [795,]  364  480  765  917  380  726  734  559  894   523 #>  [796,]  602  241  394  149  179  740  253  647  207   369 #>  [797,]  475  181  867  371  728  767  548  847  788   685 #>  [798,]  531  635  920  362   84  390  463  228  983   741 #>  [799,]  301  141  175  275  910  353  838  356  987   774 #>  [800,]  852  756  317  861  997  803  976  702  689   795 #>  [801,]  562  519  988  224  434  159  874  809  883   642 #>  [802,]  489  954  269  814  428  909  143  563  990   788 #>  [803,]  180  784  173  219  660  286  692  291  627   779 #>  [804,]  239  911  325  752  501  695  358  419  592   489 #>  [805,]    6  196  208  322  790  485  986  120  662   708 #>  [806,]  770  742  638  113  305  972  707  343  500    50 #>  [807,]   72  990  203  869  657  648  556  682  401   304 #>  [808,]  154  124  300   73  551  580  112  906  902   745 #>  [809,]   65  642   31  273  292  988  945  443  497    74 #>  [810,]  721  419  269  345  563  489  116  708  909   537 #>  [811,]  359  350  752  507  239  652  358  435  919   240 #>  [812,]  373  530  517  837  793  948  411  182  657   142 #>  [813,]  384   95  193  309  625  473  845  602  149   647 #>  [814,]  118  498   92  802  497  155  507  178   53   484 #>  [815,]  858  566  936  587   36  902  467  476  671   346 #>  [816,]  680   19   44  268  284  205  545  336  109   600 #>  [817,]  290  588  462  697  307  863  255  261  331   690 #>  [818,]  753  875  736  204  885  943   15  170  780   385 #>  [819,]  964  884  445  172  281    9   37   99  966   956 #>  [820,]  629  423  862  126  647  369  675  517  147   625 #>  [821,]  973  436  995    1  455  923   96  901  460   259 #>  [822,]  958  670   42  402  676  905  937  892  201   689 #>  [823,]  771  429  245  486  593  250   90  579   26   393 #>  [824,]  527  248  464  235  229  825  105  865  861   835 #>  [825,]  464  235  527  248   13  824  222  200  256   427 #>  [826,]  605  433  107  733  666  776  272  549  739   161 #>  [827,]  363  704  469  329  402  618  410   12  676    22 #>  [828,]  833  856  295  607  745  580  237  670  732   782 #>  [829,]  983  920  462  255  941  516  761  627  399   609 #>  [830,]  609  119  492  516  817  829  290  255  744   462 #>  [831,]   34  934   12   75  363  730  274  398  329   523 #>  [832,]   32  443  397  844   98  251  987  838  617   301 #>  [833,]  745  828  195  960  274  856  888  333  831   398 #>  [834,]  899  908  184  285  360  389  921  615  320   258 #>  [835,]  335  229  102   81  674  924  773  824  391   861 #>  [836,]  886  230  238  598  125   83  374  310  165   764 #>  [837,]  411  216  517  948   26   11  812  373  862   682 #>  [838,]  175  275  799  296  356  301  251  257  292   987 #>  [839,]  627  219  145  715  173  784  741  291  692   744 #>  [840,]  884  981   37  943  586  445  324  760  278   617 #>  [841,]  106   89  650  773   63  924  391  332  731   720 #>  [842,]  504   49  991  137  539  762  171  215  199   928 #>  [843,]  363  729   12  329  674   83   75  870  585   934 #>  [844,]  257  251  932  956  832  838  524  987  324   617 #>  [845,]  309  265  501  323  185  813   95  441  267   151 #>  [846,]  895  289  610  977  102  574  865   81   27   924 #>  [847,]  767  232  475  353  788  215  947  181  774   182 #>  [848,]  952  481  857  727   45   56  955   77  583  1000 #>  [849,]  222  513  667  202  518  320  111  464  825   621 #>  [850,]  524  257  226   51  319  877  503  365  603   844 #>  [851,]   59  671  430   74  275  691  277  431   20   903 #>  [852,]  756  720  702  800  312  247  976  861  997   335 #>  [853,]  522  640  686 1000  620   19  288   77  583   104 #>  [854,]   78   46  628  471  981  999  294  520  153   341 #>  [855,]  766  970  889  645  510  262  467  123  316   110 #>  [856,]  580  607  112  745  476  828  355  295  124   237 #>  [857,]   56  470  557   45   97  217  727  743  370   289 #>  [858,]  815  936  551  902  264   36  449  671  467   587 #>  [859,]    9   41  314  956   35  340  445  760  218   155 #>  [860,]  785  794  104  493  772  746  725  710  926   739 #>  [861,]  997  756  105  976  480  824  702  835  795   553 #>  [862,]   57   11  971  517  126  820  369  233  147   837 #>  [863,]  261  974  505  588  761  331    4  255  904   101 #>  [864,]  502  684  979  206  244  413  614  491  392   665 #>  [865,]  211  600  621  248  553  578   54  982  824   846 #>  [866,]  327  980  442  377   15  597  183  170  582   385 #>  [867,]  728  797  475  397  706  371  548   98  181   472 #>  [868,]  994  881  980  882  575  366  616  622    7   597 #>  [869,]  807  383  954  203  556  278  648   72  401   882 #>  [870,]  729   33  585  368  374  843    5  200   83    44 #>  [871,]  793  521  975  777  537  957  530  152    8   373 #>  [872,]  999  168   67  628  153   78  412  854   46   525 #>  [873,]  194  690   46  582  290  153  854  210  697   785 #>  [874,]  234  519  883  571  461  526   23  357  889   434 #>  [875,]  818   15  153  170  736  597  981  753  385   780 #>  [876,]  188  731  777  661  345  521  162  542  406   426 #>  [877,]  775  896  226   51  161  936  547   50  503   724 #>  [878,]  967  518  922  887  222  849  615  119  513   639 #>  [879,]   95  665  491  813  473  534  614  384  502   312 #>  [880,]  655  594  907  440  511  625  423  147  126   629 #>  [881,]  868  416    7  160  525  882  622   67  412    18 #>  [882,]  786   67  869  914  203  556  994  648  552   401 #>  [883,]  889  234  100  874  461  645  903  893  754   543 #>  [884,]  964  445  819   37  840  943  956  172  981   283 #>  [885,]  943  190  324  884  818  466  964  780   52   819 #>  [886,]  230  836  310  598  125  221  636  165  487   238 #>  [887,]  389  908  878  834  967  184  639  160  122   654 #>  [888,]  898  604  745  101  505  904  276  128  974   833 #>  [889,]  883  100  645  754  893  970  234  262  855   392 #>  [890,]  969  169  355  894  245  179  394  326  765   486 #>  [891,]  651   31  270  497  443   52  324   92  405   155 #>  [892,]  201   42  732  348  917  726  607  599  266   670 #>  [893,]  392  244  395  754  349  645  262  417  968   100 #>  [894,]  245  145  660  486  890  627  253  364  179   326 #>  [895,]  846  610   81  924  102  289  391  553  865   977 #>  [896,]  337  259  601  698  436   25  547  407  877   346 #>  [897,]   80  544  908  783  184  388  557  792   29   389 #>  [898,]  604  888  505  904  974  745  276  348  101   128 #>  [899,]  834  258  285  156  696  441  568  978  458   560 #>  [900,]  576  613  687  721  931  114  424  552  914   529 #>  [901,]  460  995    1  821  838  436  356  799  923   683 #>  [902,]  467  449  551  858  264  936  815  782   73   775 #>  [903,]   59  851  431  945   74  543  883  988  624   110 #>  [904,]  505  974  761  255  898  888  863  169  124   745 #>  [905,]  937  958  789  822  670  266  532  482  333   732 #>  [906,]  154  711  580  124  112  499  808  355  599   607 #>  [907,]  880  312   63  511  404  720  631  655  625   594 #>  [908,]  834  887  184  921  389  654  186  285  360   287 #>  [909,]  428  269  182  788  489  143   72  990  975   802 #>  [910,]  141  275  799  508  356  698  215   49  353   175 #>  [911,]  325  304  804  556  990  501  254  696   38   203 #>  [912,]    4  347  261   82  559  101  523  611  591   213 #>  [913,]  362  349  386  228  262  915  968  656  938    24 #>  [914,]  401  648  424  203  556  786  869  529   38   882 #>  [915,]  979  996  206  510  262  684  392  303  349   913 #>  [916,]  214  496  526   14   88  152  543  142  718   461 #>  [917,]  726  201  364  795  734  892  765  480  380   523 #>  [918,]  649  515  313  334  965  612  959  735  748   993 #>  [919,]  143  358  489  269  810  419  695  563  909   428 #>  [920,]  829  983   84  941  531  635  515  798  969   263 #>  [921,]  287  186  783  185  626  834  908  151  285   441 #>  [922,]  458  111  615  168  258  462  320  878  291   627 #>  [923,]   96  995  407    1  455  436  821  337  259    49 #>  [924,]  773  391  102  895  764  610  846  835  335    61 #>  [925,]    3  744  590  639  649   87  654  258  525   168 #>  [926,]  611  725  128  739  101  167  493    4  912   200 #>  [927,]  942  440  138  469   69  423  569  410  641    61 #>  [928,]  137  641  211    5   82  991  757  842  347   559 #>  [929,]  212  400  719   23  224  930  592   95  879   384 #>  [930,]  662  400  929  719  208  592  358  239  196   572 #>  [931,]  552  613  576  900  687  786  575  616  481   424 #>  [932,]  448  844  733  251   58   16  472  257  190   780 #>  [933,]  263  579  577  450  220  393  468  438  969   340 #>  [934,]  831   34   12  274  611   75  843  363  398   729 #>  [935,]  131  792  404  997  702  982  252  441  779   623 #>  [936,]  858  551  449  431  902  264  671  815  775   467 #>  [937,]  670  905  822  732   42  266  958  828  344   892 #>  [938,]  656  946  691  430  112  996  228  968   36   417 #>  [939,]  172  281  612  218   99  735  311  314  664   941 #>  [940,]  293  256  380  734  673  480  518  213  558   527 #>  [941,]  263  579  429  920  612  933  218  829  515    91 #>  [942,]  440  927  246  423  569  138  655  594  465   142 #>  [943,]  885  884  780  190  324  840   52  617  964   466 #>  [944,]  298  700  439  225   86  174  596  759  973   236 #>  [945,]  988  903  357  624   74  292   20  460  838   683 #>  [946,]  656  394  691  985  409  938  430  417  277    71 #>  [947,]  215  767  755  199  657  227  669   49  712   504 #>  [948,]  750  254  517  132  837  682  411  216  530   990 #>  [949,]  585  104  248  825  573  200  725  235  870   493 #>  [950,]  282  253  180  463  150  660  173  602  219   145 #>  [951,]  510  378  566  958  996  295  676  766  749   402 #>  [952,]  583 1000  432  727  640  853  115  268  620   427 #>  [953,]  683  658  700  361  944  460  298  973  439    86 #>  [954,]  869   38  802  556  203  807  914  990  489    72 #>  [955,]  217  857  370   56  790  470  544  557  727   637 #>  [956,]  445  251  987  512  966  324  175  859  844   884 #>  [957,]  214  594  142  975  793  246  367  871  718   530 #>  [958,]  822  676  378  905  402  704  951  789  670   827 #>  [959,]  540  612  515   91   39  664  197   84  438   941 #>  [960,]  195  833  276  333  274  888  745  398  828   167 #>  [961,]  144  782  306  264  828  833  467  902  449   154 #>  [962,]  478  484  351  769   47  297  334   87  118   994 #>  [963,]  548  103  685  308  564  422  231   43  299   420 #>  [964,]  819  884  445   37  172  283  966  956  210   281 #>  [965,]  117  197  693  630  993  918  608  540  959   507 #>  [966,]  296  603  445  956   16  577  512  189  964   283 #>  [967,]  878  639  887  412  122   62  290  922  194   518 #>  [968,]  386  656   24  453  349   60   94  430  456   946 #>  [969,]  169  890  355  124  933  486  245  263  894   179 #>  [970,]  262  392  754  855  510  766  889  645  979   893 #>  [971,]  454  126  158  862  517   11  233  147  657   653 #>  [972,]  638  343  305  742  606  249  407  339  778   636 #>  [973,]  436  821  259  636  995  460    1  225  337   439 #>  [974,]  505  904  863  761  255  169  898  888  261   124 #>  [975,]  419  871  530  537  182  909  325  957  793   428 #>  [976,]  997   81  861  131  935  335  835  105  702   553 #>  [977,]  574  538  289   27  406  846  454  610  252   470 #>  [978,]  715  560  258  506   47  267  297  145  375   458 #>  [979,]  915  684  392  864  206  262  349  510  754   244 #>  [980,]  327  616  597  866  366  575  442  868  377   183 #>  [981,]   37  153  840  854  628  471  884  875   78   283 #>  [982,]  252  621  935  610  553  454  147  404  977   280 #>  [983,]  829  920  894  969  145  627  130  399  253   635 #>  [984,]  451  147  207  740  369  233  126  862  326    57 #>  [985,]   71  409   22  277  587   36  569  417  946   675 #>  [986,]    6  650  367  485  315  805  208  106  345   731 #>  [987,]  251  175  512  956  301   98  586  353  799   215 #>  [988,]  945  357  903  642  809  874  434  526  519   234 #>  [989,]  249  581  606  339  109  972  545  129  288    21 #>  [990,]  750  807  682  254   72  182  948  428  911   788 #>  [991,]    5  842  137  539  928  504  605   49  591   768 #>  [992,]   40  588  697  290  474  817  785  307  604   128 #>  [993,]  242  108  791  197  267  375  540  334  118   484 #>  [994,]  243  954  882  366  868  962  869  840  622   270 #>  [995,]    1  923  436  821  356   96  455  901  698   353 #>  [996,]  510  295  915  938  206  946  112  237  262   656 #>  [997,]  861  702  935  976  105  756  553   81  982   131 #>  [998,]  354  479  246  758  191  759  225  439  496   214 #>  [999,]  872   78  854   46  168  628   67  341  458   667 #> [1000,]  583  952  853  727  268  640  427  620  432   816 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.21641412 0.3246105 0.4128897 0.4336046 0.4749079 0.4882999 0.5193037 #>    [2,] 0.70305968 0.7201189 0.7232409 0.8298070 0.8445470 0.9206742 0.9546233 #>    [3,] 0.55912593 0.6034299 0.6097717 0.6986042 0.7193032 0.7964347 0.8134693 #>    [4,] 0.17939034 0.4681167 0.4722175 0.4950045 0.5507267 0.6453863 0.6627762 #>    [5,] 0.31771433 0.3522444 0.5583510 0.6106296 0.6226417 0.6391414 0.6484110 #>    [6,] 0.50090309 0.6999893 0.8203664 0.8312986 0.8432659 0.9005836 0.9024810 #>    [7,] 0.56069559 0.5897626 0.7277612 0.7865600 0.7976442 0.8335970 0.8511498 #>    [8,] 0.27659122 0.3725645 0.4693914 0.4737205 0.4910300 0.4956460 0.5026863 #>    [9,] 0.42040406 0.4445792 0.5157478 0.5402961 0.5788474 0.6039898 0.6808228 #>   [10,] 0.86167496 1.3357028 1.4749042 1.7223607 1.7481231 1.7783933 1.7951303 #>   [11,] 0.27691214 0.3163247 0.3324361 0.3698783 0.4316846 0.4356812 0.4550343 #>   [12,] 0.44964902 0.5008429 0.5126941 0.5235459 0.5252572 0.5269614 0.6079325 #>   [13,] 0.52440790 0.5697012 0.5959494 0.6360067 0.7176575 0.7281176 0.7457524 #>   [14,] 0.23694105 0.4133134 0.4577369 0.5215338 0.5582246 0.6861892 0.7309187 #>   [15,] 0.43082686 0.5756308 0.5978181 0.6233607 0.6476990 0.6816193 0.7814552 #>   [16,] 0.40871310 0.4715035 0.4875703 0.5151719 0.5482995 0.5514961 0.5592805 #>   [17,] 0.69200597 0.7107246 0.7194235 0.7530291 0.9799815 1.0029639 1.0942747 #>   [18,] 0.79764419 0.8642754 0.9295723 0.9708199 1.0394292 1.1150973 1.1621014 #>   [19,] 0.46905894 0.4821812 0.4984785 0.5590547 0.7300515 0.7750737 0.8069175 #>   [20,] 0.27633504 0.6848281 0.7071536 0.7748437 0.8052606 0.8129605 0.8676561 #>   [21,] 0.20771491 0.3978314 0.4837394 0.5588798 0.6687562 0.7022320 0.7514510 #>   [22,] 0.26956504 0.2810553 0.3297798 0.4029995 0.4775021 0.4956621 0.5580045 #>   [23,] 0.74377420 0.7534387 0.8285593 0.9099175 0.9227064 1.0194544 1.0250888 #>   [24,] 0.39003669 0.4149096 0.4461422 0.5952533 0.6263150 0.6603403 0.7368035 #>   [25,] 0.24269159 0.3654335 0.5350110 0.5477920 0.6079325 0.6167257 0.6399397 #>   [26,] 0.27691214 0.3690463 0.4008991 0.4066525 0.4113188 0.4476212 0.4557129 #>   [27,] 0.51524993 0.5231898 0.5383120 0.5598038 0.5966187 0.6535818 0.6847187 #>   [28,] 1.02404167 1.0636277 1.1250968 1.1599666 1.2541229 1.2950843 1.3292248 #>   [29,] 0.31140027 0.6763782 0.6787011 1.0301615 1.0817725 1.1123846 1.1160659 #>   [30,] 1.10184199 1.1150369 1.1720515 1.1937315 1.2325414 1.2429177 1.2747750 #>   [31,] 0.51668864 0.7083004 0.7115959 0.7504884 0.7825171 0.7825621 0.8251498 #>   [32,] 0.39636638 0.4647652 0.4717602 0.5125237 0.5976041 0.6525448 0.6542596 #>   [33,] 0.50719817 0.5513356 0.5580247 0.5590842 0.5839307 0.5874172 0.6450222 #>   [34,] 0.23253817 0.4054120 0.4781621 0.5269614 0.5465923 0.5534555 0.5778495 #>   [35,] 0.49469899 0.5362227 0.5559533 0.5738924 0.5931151 0.5943982 0.6142115 #>   [36,] 0.20383047 0.3784398 0.4050495 0.4499021 0.4815231 0.5159281 0.5190120 #>   [37,] 0.45139568 0.4588773 0.5301280 0.5543229 0.5744741 0.5957850 0.6312541 #>   [38,] 0.47957138 0.5068370 0.5756987 0.5864688 0.6021139 0.6136519 0.6409509 #>   [39,] 0.70676775 0.7074174 0.7502723 0.8341943 0.8363482 0.8369421 0.8443244 #>   [40,] 1.02395308 1.1832585 1.2197479 1.2404779 1.2458678 1.4495959 1.4572385 #>   [41,] 0.41794173 0.4327686 0.4823674 0.5107703 0.5169618 0.5410941 0.5931151 #>   [42,] 0.37046900 0.5855656 0.6316113 0.7103210 0.7138788 0.7749703 0.8232042 #>   [43,] 0.36300821 0.6206800 0.6481978 0.6920060 0.7005249 0.8706328 0.9780819 #>   [44,] 0.25365117 0.3995358 0.4821812 0.5326156 0.5590842 0.5641094 0.5821457 #>   [45,] 0.49507227 0.7277612 0.7325207 0.7386667 0.7437636 0.7800295 0.7848247 #>   [46,] 0.39745565 0.4174823 0.5205264 0.6149492 0.6208132 0.7269498 0.7629015 #>   [47,] 0.22853382 0.3392497 0.3401143 0.4264012 0.4542845 0.4587430 0.5524317 #>   [48,] 1.13966319 1.3880778 1.4893667 1.5080062 1.6377586 1.7835236 1.7949751 #>   [49,] 0.33056939 0.4200125 0.4542190 0.4632580 0.4682206 0.4954153 0.5165174 #>   [50,] 0.69297535 0.8152217 0.8270188 0.8673313 0.8832135 0.8879679 0.8894306 #>   [51,] 0.55888652 0.7319227 0.7427283 0.7503351 0.8834263 0.8947888 0.9278649 #>   [52,] 0.45440305 0.5717666 0.6363958 0.6702641 0.7129889 0.7767994 0.7812663 #>   [53,] 0.30237633 0.5978580 0.6209280 0.6765216 0.7398897 0.7514211 0.7538045 #>   [54,] 0.40818894 0.4571500 0.5485224 0.5650000 0.6430779 0.6444005 0.6472138 #>   [55,] 1.19248753 1.3087772 1.7924729 1.7986647 1.8444050 1.8574492 2.0001217 #>   [56,] 0.49507227 0.5774405 0.6174813 0.8638349 0.8705765 0.8783550 0.9362204 #>   [57,] 0.31632469 0.3233322 0.3769461 0.4066525 0.4079960 0.4608261 0.4656866 #>   [58,] 0.39464798 0.5377230 0.6891468 0.7101796 0.7113127 0.7117639 0.7349748 #>   [59,] 0.45350279 0.4763886 0.5606033 0.5701124 0.6145939 0.6180642 0.6208685 #>   [60,] 0.44150718 0.4768930 0.4940364 0.4983066 0.5005334 0.5237418 0.5464563 #>   [61,] 0.33997047 0.3914709 0.3920180 0.4733975 0.4736604 0.4744073 0.5192501 #>   [62,] 0.50165139 0.6842911 0.7865600 0.8582108 0.9169566 0.9295723 0.9603756 #>   [63,] 0.55312778 0.5633875 0.6571821 0.6751733 0.7057565 0.7426513 0.7813881 #>   [64,] 0.55198846 0.7335155 0.8251204 0.9758415 0.9832071 1.0018288 1.0749265 #>   [65,] 0.42967947 0.8504900 1.0070889 1.0316690 1.0846420 1.0944358 1.2221994 #>   [66,] 1.64330415 1.7973665 1.8601522 1.9820141 2.1434951 2.2436707 2.3069621 #>   [67,] 0.56583757 0.5857884 0.5897626 0.5940447 0.6554808 0.7061355 0.7643217 #>   [68,] 0.69292034 0.8105272 0.8203769 0.8228748 0.8236487 0.8355060 0.8633068 #>   [69,] 0.33997047 0.4648931 0.4956460 0.5159121 0.5181592 0.5200255 0.5393467 #>   [70,] 0.41619506 0.6572602 0.7430790 0.8216702 0.8379220 0.9489816 0.9496357 #>   [71,] 0.14012704 0.2359142 0.2695650 0.4213596 0.4424690 0.4507483 0.5030827 #>   [72,] 0.26598603 0.2878120 0.4148064 0.4331411 0.4528600 0.4669468 0.4791460 #>   [73,] 0.39307789 0.4001362 0.5026144 0.5427942 0.5755580 0.6434205 0.6982818 #>   [74,] 0.27633504 0.5302830 0.6071751 0.7053668 0.7183755 0.7564362 0.7771202 #>   [75,] 0.52525719 0.5729036 0.5755682 0.5954739 0.6722211 0.6775423 0.6799855 #>   [76,] 0.39834616 0.4360727 0.4449928 0.5300928 0.5478049 0.5536854 0.5993056 #>   [77,] 0.71513753 0.7800466 0.8656694 0.9118847 0.9708199 1.0688857 1.0819517 #>   [78,] 0.35411682 0.3784746 0.4839348 0.5205264 0.5413916 0.5621014 0.5670688 #>   [79,] 0.53325946 0.6247723 0.7772200 0.7780270 0.8656084 0.8836415 0.8922870 #>   [80,] 0.72495210 1.1391410 1.1495767 1.1587125 1.2393833 1.3792412 1.4002717 #>   [81,] 0.34217323 0.5384226 0.5411119 0.5478608 0.6469737 0.6666372 0.6730436 #>   [82,] 0.30164908 0.4306356 0.4372774 0.4393561 0.4812936 0.5032413 0.5049428 #>   [83,] 0.47934937 0.4920252 0.4955640 0.5223397 0.5398227 0.5536937 0.5691224 #>   [84,] 0.37459805 0.4952750 0.5130184 0.6111406 0.6374192 0.7067678 0.7285787 #>   [85,] 1.30924339 1.4442666 1.4883766 1.5264962 1.5527557 1.6818136 1.6819560 #>   [86,] 0.56743310 0.7494725 0.7576299 0.9199835 0.9445941 0.9680457 1.1593341 #>   [87,] 0.66078804 0.7771802 0.7964347 0.8221614 0.8509468 0.8675859 0.8839002 #>   [88,] 0.48444700 0.5464563 0.5701124 0.5884043 0.6246791 0.6332236 0.6450471 #>   [89,] 0.37851262 0.5821490 0.6882658 0.9614938 0.9919089 1.0134675 1.0355549 #>   [90,] 0.20771682 0.4113188 0.4430714 0.4855225 0.5383317 0.5555723 0.5779121 #>   [91,] 0.37913094 0.4412370 0.5738924 0.5969696 0.6016111 0.6186488 0.6188756 #>   [92,] 0.37212764 0.5033519 0.5805832 0.5930408 0.6209280 0.7115959 0.7744191 #>   [93,] 0.96776752 1.0167472 1.2696672 1.2918625 1.3768194 1.4659631 1.4981866 #>   [94,] 0.41490958 0.5364068 0.5658240 0.6407494 0.6559167 0.6875770 0.7972298 #>   [95,] 0.48941427 0.5839944 0.5912074 0.6372527 0.7203827 0.8849186 0.8981929 #>   [96,] 0.31414653 0.3553606 0.4987837 0.5062163 0.5359369 0.5558281 0.5607513 #>   [97,] 0.46774644 0.5396000 0.5513568 0.5636322 0.6174813 0.6275900 0.7071603 #>   [98,] 0.39746932 0.4139794 0.5143610 0.5151082 0.5994009 0.6094192 0.6511733 #>   [99,] 0.36921748 0.4792357 0.6328759 0.6813582 0.7014546 0.7295211 0.7536807 #>  [100,] 0.45987262 0.6458642 0.6820221 0.7437742 0.7787570 0.9193815 0.9374301 #>  [101,] 0.49139398 0.4950045 0.5436961 0.5903835 0.6128986 0.6365069 0.6907874 #>  [102,] 0.27226398 0.3914709 0.4031230 0.4043992 0.4060028 0.5031197 0.5250710 #>  [103,] 0.95120064 0.9646332 0.9654041 1.0529162 1.0802018 1.1260746 1.1377014 #>  [104,] 0.74204510 0.7572516 0.7905194 0.8822296 0.8841654 0.9076944 0.9132348 #>  [105,] 0.44983737 0.4937935 0.5647469 0.5797362 0.5960612 0.6076634 0.6380638 #>  [106,] 0.28627206 0.5821490 0.6156319 0.6893646 0.7057565 0.7954466 0.8432659 #>  [107,] 0.37842929 0.4005615 0.4701010 0.4756768 0.5054032 0.5220499 0.5645654 #>  [108,] 0.29998060 0.4354505 0.6913283 0.7316568 0.7993414 0.8172652 0.8823244 #>  [109,] 0.29663832 0.3113073 0.3317357 0.4837394 0.5874172 0.7318759 0.7505791 #>  [110,] 0.48821232 0.6180077 0.7147899 0.8484348 0.8663373 0.8956216 0.8964199 #>  [111,] 0.43074064 0.4340024 0.4562151 0.5456651 0.5927020 0.5973650 0.6043887 #>  [112,] 0.47089494 0.6005085 0.6286886 0.6376047 0.6394403 0.6420581 0.7053714 #>  [113,] 0.69746533 1.1943838 1.2066782 1.2208420 1.2564189 1.3082613 1.3291520 #>  [114,] 0.51289933 0.5198787 0.7275934 0.7367648 0.7849453 0.7958323 0.8114317 #>  [115,] 0.57094962 1.1974263 1.3495081 1.3625695 1.3777251 1.3814397 1.3844419 #>  [116,] 0.20682460 0.3643431 0.3983462 0.4778550 0.5046568 0.5575358 0.5958366 #>  [117,] 0.71919486 0.7259840 0.7773824 0.9195736 0.9829049 1.0030670 1.0582169 #>  [118,] 0.39207130 0.5287510 0.5747082 0.6213834 0.6487529 0.6889521 0.7052937 #>  [119,] 1.00370133 1.1643011 1.2149611 1.2349617 1.3531001 1.4402022 1.4495959 #>  [120,] 0.54338286 0.5826077 0.7214978 0.7561738 0.8319038 0.9756280 1.0617508 #>  [121,] 0.79727537 1.0229385 1.3344895 1.3526354 1.3870840 1.4160838 1.4328891 #>  [122,] 0.69650926 0.7155234 0.8323484 0.8339587 0.8458085 0.8560778 0.8596412 #>  [123,] 0.53095433 0.5325222 0.7147899 0.8634715 1.0203606 1.1265462 1.1319776 #>  [124,] 0.36138788 0.5056297 0.5300604 0.5992569 0.6286886 0.6841569 0.7011964 #>  [125,] 0.42002624 0.6233111 0.6499356 0.6787683 0.6830390 0.7210376 0.7396769 #>  [126,] 0.30709096 0.3584247 0.3946374 0.4141443 0.4166840 0.4266637 0.4268706 #>  [127,] 0.76278006 1.0339792 1.1018420 1.1922306 1.1941017 1.2270053 1.2554530 #>  [128,] 0.43946131 0.4510556 0.5704952 0.6128986 0.7379389 0.7410649 0.7491548 #>  [129,] 0.53981419 0.7829352 0.7921178 0.8615194 0.8734318 0.8829977 0.9461502 #>  [130,] 0.36228122 0.4273048 0.6255867 0.6713443 0.7201189 0.7270182 0.7944705 #>  [131,] 0.21142718 0.3243427 0.5339710 0.6012206 0.6284088 0.6308084 0.6667383 #>  [132,] 0.28117579 0.3334769 0.3348436 0.3596142 0.4499437 0.5304445 0.5319389 #>  [133,] 0.97738991 1.1605186 1.2854172 1.3338047 1.3399228 1.3556785 1.3896900 #>  [134,] 0.42730482 0.6811819 0.7030597 0.7255541 0.7420052 0.9951408 0.9956241 #>  [135,] 0.63626443 0.6369657 0.6591719 0.7007189 0.7127339 0.7580373 0.7602534 #>  [136,] 0.76278006 0.8263312 1.0341629 1.0886682 1.1025160 1.1039703 1.1172523 #>  [137,] 0.31771433 0.3892715 0.4095297 0.4280894 0.4413394 0.4741427 0.4845958 #>  [138,] 0.37331277 0.4820637 0.4997236 0.5272763 0.5337640 0.5393467 0.5603123 #>  [139,] 0.44994369 0.4733091 0.5943982 0.6367489 0.6412310 0.6466561 0.6609065 #>  [140,] 0.35550266 0.4350303 0.5855517 0.6791943 0.6991772 0.7126436 0.7184743 #>  [141,] 0.28921044 0.3183387 0.3911811 0.4032799 0.4749079 0.5416037 0.5491069 #>  [142,] 0.45773693 0.5171179 0.5595588 0.5836977 0.5894910 0.6097584 0.6120157 #>  [143,] 0.52765663 0.5640888 0.5692541 0.5763750 0.6038110 0.6865561 0.7168500 #>  [144,] 0.61848225 0.8456529 1.2540564 1.2828717 1.4118492 1.4504634 1.5768804 #>  [145,] 0.27413099 0.4110552 0.4715872 0.5287947 0.5467413 0.6276081 0.6326736 #>  [146,] 0.37039866 0.4904112 0.6456394 0.6735275 0.7535237 0.8098813 0.8324225 #>  [147,] 0.30709096 0.3164522 0.4935282 0.5076157 0.5169771 0.5213464 0.5296363 #>  [148,] 0.86167496 1.4117684 1.4708037 1.4755896 1.5080062 1.6914945 1.7244489 #>  [149,] 0.30846893 0.3978686 0.4104399 0.4627014 0.4651189 0.4874440 0.5466916 #>  [150,] 0.60118991 0.6731865 0.7638483 0.8131930 0.9929095 1.0022952 1.0183971 #>  [151,] 0.14369812 0.5224788 0.5621560 0.6362074 0.6404278 0.6507399 0.7307491 #>  [152,] 0.23694105 0.5013220 0.5171179 0.5644979 0.6073468 0.6928403 0.7016882 #>  [153,] 0.52427299 0.5510340 0.6136506 0.6623628 0.6860769 0.6995154 0.7918961 #>  [154,] 0.47059222 0.5360577 0.5674245 0.6376047 0.6841569 0.7860275 0.8829476 #>  [155,] 0.24797545 0.4067677 0.5483374 0.5805832 0.7217420 0.7339253 0.8009953 #>  [156,] 0.45073851 0.5011759 0.5138839 0.5421168 0.5696563 0.5843822 0.6106652 #>  [157,] 0.39201799 0.5059247 0.5181592 0.5536937 0.5634881 0.5656294 0.5803743 #>  [158,] 0.37472789 0.4334626 0.4687352 0.4725805 0.4754572 0.5550621 0.5565985 #>  [159,] 0.62631502 0.6614474 0.8651808 0.9291661 0.9580748 1.0117200 1.0246121 #>  [160,] 0.75155328 0.8191259 0.8656887 0.8753128 0.9106450 0.9435147 0.9458968 #>  [161,] 0.39924099 0.4946139 0.5494221 0.6351219 0.7550778 0.7658412 0.7746202 #>  [162,] 0.24887437 0.3666092 0.4692677 0.5065854 0.5227497 0.5894491 0.6694551 #>  [163,] 0.62117810 0.8333357 0.9342236 1.0354619 1.0853828 1.1693280 1.2199425 #>  [164,] 0.72263848 0.7348982 0.7604131 1.0081883 1.0488635 1.0670565 1.0783227 #>  [165,] 0.41788008 0.6019105 0.6100562 0.6153698 0.6187333 0.6600681 0.7179723 #>  [166,] 0.47956002 0.5341214 0.5958500 0.6150647 0.8002743 0.8575868 0.8698635 #>  [167,] 0.43946131 0.6130805 0.6825058 0.6940147 0.7825160 0.8242227 0.8693166 #>  [168,] 0.52638349 0.5465983 0.6185892 0.6417167 0.6562577 0.7605125 0.8134693 #>  [169,] 0.27650947 0.4432176 0.4680021 0.5300604 0.6175249 0.6300754 0.6488782 #>  [170,] 0.43082686 0.5178552 0.5354704 0.6339528 0.6500833 0.6546978 0.7113127 #>  [171,] 0.20081003 0.2669763 0.3787348 0.3965472 0.4095297 0.4483890 0.4521080 #>  [172,] 0.47572915 0.5175494 0.5543229 0.5803372 0.6054574 0.6549553 0.6843452 #>  [173,] 0.54176780 0.5661452 0.5756268 0.6114718 0.7508927 0.7620530 0.7649270 #>  [174,] 0.52538895 0.5674331 0.7980066 0.8405354 0.8996805 0.9404708 0.9532749 #>  [175,] 0.32521983 0.3349347 0.3566836 0.4151585 0.4408032 0.5111472 0.5112019 #>  [176,] 0.42501543 0.4402568 0.6107082 0.6746900 0.6791206 0.7839684 0.8132107 #>  [177,] 0.63313660 0.9408757 1.0247964 1.0793057 1.0817886 1.1119440 1.1181199 #>  [178,] 0.30237633 0.5531061 0.5783562 0.6367489 0.6654287 0.7270595 0.7603446 #>  [179,] 0.34995664 0.3901544 0.4223250 0.4627014 0.5489580 0.5496058 0.5748848 #>  [180,] 0.38812645 0.4405342 0.4420370 0.5107419 0.5756268 0.6211303 0.6276081 #>  [181,] 0.28463584 0.3890531 0.4524685 0.5014413 0.5764175 0.5772910 0.6091098 #>  [182,] 0.26631171 0.2911727 0.4669933 0.4805213 0.4979011 0.5315497 0.5520164 #>  [183,] 0.54359159 0.7384813 0.7405760 0.7800466 0.7848247 0.8335970 0.8888746 #>  [184,] 0.51407207 0.5593401 0.5636322 0.6170252 0.6363462 0.7236703 0.7665368 #>  [185,] 0.28944790 0.5525081 0.6582818 0.6595764 0.6922651 0.6933944 0.7268153 #>  [186,] 0.58754642 0.6385494 0.6450371 0.6753436 0.7071312 0.7268153 0.8854580 #>  [187,] 0.20372024 0.2656952 0.2893318 0.4233398 0.4546685 0.4756569 0.5035667 #>  [188,] 0.12808870 0.4523095 0.4675109 0.4699004 0.5371939 0.5894491 0.6029188 #>  [189,] 0.29326623 0.3353795 0.3907801 0.4411270 0.4624263 0.4872777 0.5151719 #>  [190,] 0.61412848 0.6314604 0.6514561 0.6832311 0.7635080 0.7680926 0.8276420 #>  [191,] 0.52538895 0.7127339 0.7601434 0.7747628 0.8617104 0.8619967 0.9478303 #>  [192,] 0.30081266 0.3501317 0.4241425 0.4737205 0.5579593 0.5634881 0.5832857 #>  [193,] 0.36461840 0.5226556 0.5779549 0.5881773 0.5922208 0.5992672 0.6105010 #>  [194,] 0.66428820 0.9196356 1.1995822 1.2197479 1.2272684 1.2519040 1.2713979 #>  [195,] 0.47650481 0.5481421 0.5562792 0.6866418 0.7772582 0.8538991 0.8544007 #>  [196,] 0.83768121 0.9756280 1.0171978 1.1359941 1.2900029 1.3716140 1.3827661 #>  [197,] 0.35460865 0.7259840 0.7420731 0.7616392 0.8030532 0.8061296 0.8068865 #>  [198,] 1.32276652 1.4760356 1.4839871 1.5446414 1.5571549 1.5669997 1.6421553 #>  [199,] 0.26697634 0.2805684 0.3242830 0.3356163 0.3747378 0.3797260 0.4192266 #>  [200,] 0.51347765 0.5419740 0.6662341 0.6703935 0.7074750 0.7126224 0.7154247 #>  [201,] 0.38944539 0.4025769 0.5800039 0.6800603 0.7138788 0.7487179 0.8047512 #>  [202,] 0.56499999 0.6020217 0.6255987 0.6529317 0.6826683 0.6965093 0.7477200 #>  [203,] 0.21809843 0.2647699 0.3307303 0.3747527 0.4130087 0.4611812 0.4715996 #>  [204,] 0.57259029 0.7420718 0.7495755 0.8234463 0.9247005 0.9762809 1.0038182 #>  [205,] 0.25365117 0.3417658 0.4248557 0.4571500 0.4984785 0.5283457 0.5331061 #>  [206,] 0.61330875 0.6943987 0.7092554 0.7220287 0.7310787 0.7403898 0.7491803 #>  [207,] 0.29376464 0.3210369 0.3788559 0.4935282 0.4975360 0.6022220 0.6149026 #>  [208,] 0.65845005 0.7377428 0.8903403 0.9005836 0.9966378 1.0168180 1.0615659 #>  [209,] 0.38102177 0.4009907 0.4542845 0.4981689 0.5044172 0.5138839 0.5383317 #>  [210,] 0.42501543 0.5135203 0.6486671 0.7038249 0.7056629 0.7228995 0.7900074 #>  [211,] 0.37909930 0.4545727 0.4680473 0.4955794 0.4988284 0.5635124 0.5858982 #>  [212,] 0.51826662 0.7534387 0.9502900 0.9895429 1.0959470 1.1278220 1.1459422 #>  [213,] 0.36956454 0.3797198 0.5074296 0.5784763 0.6233194 0.6380793 0.6455759 #>  [214,] 0.39239860 0.5013220 0.5203851 0.5215338 0.5374147 0.6091192 0.6844711 #>  [215,] 0.21378730 0.3989651 0.4262316 0.4510014 0.4542190 0.5159015 0.5204190 #>  [216,] 0.29469156 0.3298202 0.3596142 0.3759240 0.4627851 0.4695471 0.4733091 #>  [217,] 0.44460421 0.6440708 0.6484546 0.7982342 0.8265200 0.8394997 0.8893594 #>  [218,] 0.11859736 0.5075903 0.5704380 0.5788474 0.5925210 0.6704915 0.6829031 #>  [219,] 0.55188638 0.6114718 0.6247307 0.6385494 0.6605443 0.6793333 0.7177048 #>  [220,] 0.38533787 0.4680001 0.4997961 0.5194122 0.5608975 0.5813008 0.6241584 #>  [221,] 0.30081266 0.4343564 0.4801124 0.6799286 0.6959008 0.7023770 0.7270978 #>  [222,] 0.34154117 0.3936587 0.4106843 0.6179132 0.6410727 0.6824939 0.7281176 #>  [223,] 0.81522167 0.9463040 0.9747884 1.0424798 1.1280821 1.1281768 1.1842354 #>  [224,] 1.15244285 1.2610532 1.5498561 1.8296742 1.8422261 1.8529077 1.8532585 #>  [225,] 0.39549103 0.6474125 0.6571726 0.6609985 0.6955533 0.7357784 0.7409894 #>  [226,] 0.41677958 0.4751449 0.5026144 0.5154636 0.6809340 0.7337518 0.7731393 #>  [227,] 0.33343997 0.3747378 0.3861714 0.4854596 0.4875703 0.5124791 0.5452762 #>  [228,] 0.49527499 0.5211931 0.5724805 0.6112469 0.6376008 0.6723558 0.6910198 #>  [229,] 0.36932871 0.5241385 0.5462829 0.5844587 0.6515875 0.6564939 0.6843156 #>  [230,] 0.33698182 0.7210376 0.7415882 0.7681958 0.8223230 0.8500997 0.9677864 #>  [231,] 0.36300821 0.5479321 0.6908835 0.7726500 0.8510165 0.8605271 0.9584508 #>  [232,] 0.38629582 0.4213433 0.4751976 0.4910300 0.4987837 0.5386593 0.5510847 #>  [233,] 0.36987832 0.4507385 0.4620020 0.4680281 0.4782588 0.4805044 0.5035463 #>  [234,] 0.33460704 0.5261127 0.5488487 0.6359449 0.7584128 0.7662273 0.8659911 #>  [235,] 0.24583737 0.3190867 0.3202089 0.3646839 0.4723221 0.5020900 0.5959494 #>  [236,] 0.25954362 0.3654335 0.4522218 0.5477619 0.5880546 0.6474125 0.6800485 #>  [237,] 0.26739532 0.3701888 0.5546540 0.6087299 0.7059793 0.7244898 0.7302374 #>  [238,] 0.42002624 0.5691224 0.7243325 0.7368492 0.7535193 0.7703421 0.7711668 #>  [239,] 0.26365485 0.3744893 0.7113277 0.7259423 0.7633240 0.7743822 0.8258596 #>  [240,] 0.96957479 1.3107432 1.3848447 1.4362591 1.5039358 1.5083401 1.5131440 #>  [241,] 0.28621665 0.3499566 0.3978686 0.4190773 0.4276152 0.4987947 0.5637751 #>  [242,] 0.39436399 0.4354505 0.4900663 0.7443241 0.7550378 0.9136584 0.9735826 #>  [243,] 0.57584806 0.7376431 0.7961085 0.9248980 0.9830587 0.9864651 1.0650605 #>  [244,] 0.47741273 0.5508141 0.5717507 0.6081674 0.6133088 0.6746215 0.7191895 #>  [245,] 0.21562643 0.3670530 0.3701631 0.3944797 0.4469352 0.4708498 0.5253988 #>  [246,] 0.47626317 0.6192169 0.6267294 0.6271479 0.6370872 0.6375859 0.6556227 #>  [247,] 0.55100035 0.6820972 0.8074844 0.9518027 1.0090182 1.0168269 1.0183726 #>  [248,] 0.31908671 0.3676537 0.4113804 0.4319972 0.5007925 0.5507969 0.5780114 #>  [249,] 0.36060777 0.7303984 0.7569739 0.9254382 0.9300069 0.9379311 0.9634162 #>  [250,] 0.33252381 0.3703301 0.3763838 0.3930307 0.4372774 0.4624263 0.4731095 #>  [251,] 0.28653776 0.4139794 0.4305036 0.4916231 0.5111472 0.5482995 0.6019976 #>  [252,] 0.28652149 0.3904541 0.4937918 0.5279647 0.5339710 0.5478608 0.5794850 #>  [253,] 0.48915979 0.5107419 0.5416637 0.5467413 0.5504274 0.6226807 0.6735525 #>  [254,] 0.20919443 0.2792067 0.3334769 0.4146677 0.4571168 0.4981689 0.5417553 #>  [255,] 0.35077167 0.4440642 0.6241812 0.6619895 0.6674176 0.7238569 0.7401482 #>  [256,] 0.40101029 0.4281259 0.4722904 0.5776474 0.6202167 0.7089186 0.7457524 #>  [257,] 0.37113204 0.5927438 0.6895259 0.7630534 0.8354629 0.8402256 0.8612566 #>  [258,] 0.46293811 0.4936176 0.5608360 0.5664051 0.6097717 0.6180592 0.6185892 #>  [259,] 0.20364447 0.3626960 0.4009911 0.4522218 0.4697107 0.4860701 0.5132923 #>  [260,] 1.38439739 1.4183603 1.4615852 1.5238612 1.5322856 1.5531659 1.5548251 #>  [261,] 0.36956454 0.4681167 0.5154143 0.5566550 0.5628790 0.5825610 0.6253591 #>  [262,] 0.49593626 0.5495023 0.5557991 0.6452186 0.7223338 0.7276137 0.7819357 #>  [263,] 0.29280265 0.3373337 0.4312764 0.5229825 0.5265141 0.5601429 0.6172286 #>  [264,] 0.23567154 0.5505564 0.5883924 0.5915221 0.6047039 0.6187482 0.7144063 #>  [265,] 0.42394670 0.4631630 0.4810472 0.5667407 0.6169703 0.7900007 0.8009326 #>  [266,] 0.42290734 0.5791202 0.7503367 0.8596417 0.9382498 0.9501645 0.9586867 #>  [267,] 0.40774600 0.4810472 0.5058470 0.5564960 0.6986643 0.7316568 0.7443241 #>  [268,] 0.51752618 0.6526827 0.8633068 0.9198161 0.9642462 0.9759297 1.0392967 #>  [269,] 0.28811957 0.3237477 0.4502208 0.4684233 0.5550434 0.5655540 0.5763750 #>  [270,] 0.52381587 0.7420718 0.7767994 0.8257782 0.9248980 0.9567905 0.9759566 #>  [271,] 0.76384829 0.8251204 0.8279977 0.9123314 0.9275525 0.9699851 0.9935279 #>  [272,] 0.37842929 0.5888738 0.6152161 0.6606697 0.6613407 0.6692296 0.6791206 #>  [273,] 0.81196158 0.8539881 0.9829049 0.9970534 1.0070889 1.0148957 1.0323066 #>  [274,] 0.47650481 0.5352657 0.6770331 0.6907874 0.7568550 0.7578852 0.7593422 #>  [275,] 0.35956765 0.3911811 0.4151585 0.4223140 0.4462629 0.4505671 0.5046411 #>  [276,] 0.69401472 0.6993742 0.7364792 0.8101594 0.8417493 0.8951294 1.0355292 #>  [277,] 0.38141252 0.3843469 0.4040221 0.4050495 0.4142340 0.4983066 0.5105707 #>  [278,] 0.45206477 0.4564861 0.4756569 0.4839346 0.5259593 0.5397218 0.5423090 #>  [279,] 0.95654415 1.2386507 1.3066815 1.3087772 1.3858063 1.3944466 1.4702589 #>  [280,] 0.43346262 0.4755077 0.4996229 0.5300928 0.5520734 0.6001397 0.6244125 #>  [281,] 0.36921748 0.4445792 0.4938818 0.4981693 0.5075903 0.5803372 0.6443462 #>  [282,] 0.41985113 0.6689122 0.6735525 0.6958108 0.7701633 0.8122322 0.8131930 #>  [283,] 0.40871310 0.4360226 0.4406368 0.4411270 0.5863211 0.5882823 0.5957850 #>  [284,] 0.50612574 0.5175262 0.6678011 0.7605112 0.7679592 0.7741864 0.9015502 #>  [285,] 0.36550063 0.4494382 0.5030554 0.5055926 0.5272064 0.6283972 0.6476357 #>  [286,] 0.31140027 0.7109656 0.7472818 0.7832306 0.8728337 0.9001655 1.0059659 #>  [287,] 0.28944790 0.3957440 0.6450371 0.6513003 0.6950362 0.7008255 0.7307491 #>  [288,] 0.46905894 0.5398142 0.7505791 0.7898459 0.8466712 0.8759508 0.8811281 #>  [289,] 0.43886415 0.4437153 0.5152499 0.5311039 0.5571427 0.5798872 0.6276885 #>  [290,] 0.46758231 0.8205355 0.8823310 0.9196356 0.9258692 0.9456323 1.1100121 #>  [291,] 0.35640219 0.3655006 0.3784553 0.4399732 0.6003499 0.6365082 0.6461247 #>  [292,] 0.51749837 0.5755913 0.6071751 0.6542596 0.6887219 0.6924723 0.7071536 #>  [293,] 0.34318567 0.4010103 0.4140192 0.6620220 0.6822340 0.6875009 0.7071724 #>  [294,] 0.35275752 0.4396650 0.5136805 0.5216730 0.5331061 0.5621014 0.5839841 #>  [295,] 0.26739532 0.5107943 0.6684812 0.6699454 0.6739431 0.7034330 0.7082229 #>  [296,] 0.45056706 0.4547084 0.4909231 0.5259327 0.5964014 0.6185778 0.6189109 #>  [297,] 0.22853382 0.2501560 0.3426612 0.4057550 0.4551814 0.5945813 0.6397086 #>  [298,] 0.43715283 0.6665763 0.7494725 0.8299737 0.9404708 0.9798380 0.9852112 #>  [299,] 0.21932266 0.4692677 0.4858458 0.5014413 0.6571278 0.6784107 0.6795297 #>  [300,] 0.39307789 0.5589190 0.6267841 0.7073310 0.7089954 0.7305995 0.7576545 #>  [301,] 0.29587358 0.3252198 0.4816312 0.4976761 0.5125237 0.5174984 0.5511329 #>  [302,] 0.34029209 0.4279983 0.4611812 0.4945252 0.5238824 0.5421168 0.5438752 #>  [303,] 0.77497034 0.8967049 1.0241006 1.0724448 1.0940563 1.1403603 1.1462405 #>  [304,] 0.38776207 0.3897346 0.4715996 0.4754572 0.5193565 0.5424561 0.5438752 #>  [305,] 0.18833132 0.5840304 0.6065703 0.6787683 0.7309632 0.7449777 0.8608735 #>  [306,] 0.70993865 0.8103668 0.8456529 0.9340690 1.0264533 1.0610845 1.1340612 #>  [307,] 0.48908741 0.5194432 0.5628790 0.6453863 0.6875009 0.6950331 0.7219923 #>  [308,] 0.54793209 0.6206800 0.6219210 0.6468760 0.6738930 0.8657965 0.8776058 #>  [309,] 0.22300046 0.4239467 0.5839944 0.5900231 0.6628509 0.6846918 0.7378135 #>  [310,] 0.76702570 0.7681958 0.7748656 0.8358366 0.8557879 0.9259863 0.9347948 #>  [311,] 0.47923567 0.6746900 0.7267462 0.7807303 0.7985716 0.8088331 0.8105058 #>  [312,] 0.54275349 0.6119033 0.6330107 0.6546912 0.7982004 0.8463962 0.8530739 #>  [313,] 0.89978828 0.9693973 1.0364461 1.0729081 1.0939052 1.1099862 1.1913011 #>  [314,] 0.11859736 0.4981693 0.5157478 0.5892583 0.5930440 0.6036615 0.6261939 #>  [315,] 0.47688706 0.5121997 0.7131843 0.7166334 0.7406037 0.7760909 0.7766113 #>  [316,] 0.52555808 0.5309543 0.6180077 0.6492126 1.0052412 1.0250610 1.0346627 #>  [317,] 0.67637815 0.7109656 0.8672240 0.9281379 1.0144418 1.1894309 1.2724317 #>  [318,] 0.34927317 0.3696367 0.5343289 0.6446018 0.6575609 0.6626694 0.7239977 #>  [319,] 0.41677958 0.5861760 0.6434205 0.6786198 0.7044361 0.7254086 0.7697777 #>  [320,] 0.43074064 0.4610872 0.5098134 0.5197648 0.5272064 0.6237299 0.6273585 #>  [321,] 1.49031013 1.5793319 1.8764104 2.0051690 2.0437756 2.1274689 2.1322394 #>  [322,] 0.85758679 0.9603201 0.9842679 1.0043120 1.0049814 1.0219000 1.0843545 #>  [323,] 0.56674074 0.6778143 0.7378135 0.8511342 0.8602030 0.8754444 0.8842158 #>  [324,] 0.59424535 0.6015149 0.6488589 0.6983068 0.7100899 0.7286651 0.7771085 #>  [325,] 0.34533952 0.3878185 0.5046568 0.5393116 0.5424561 0.5478049 0.5579795 #>  [326,] 0.24609454 0.3914730 0.4223250 0.4351630 0.4469352 0.4656866 0.4983159 #>  [327,] 0.48513640 0.5435916 0.6214543 0.6306436 0.6689119 0.8408943 0.8723573 #>  [328,] 0.49586470 0.5433829 0.5852701 0.5872927 0.5958500 0.6404278 0.7660767 #>  [329,] 0.31459592 0.4877782 0.5189201 0.5466206 0.5759819 0.5778495 0.6428141 #>  [330,] 0.64853879 0.6494929 0.7684911 0.7903805 0.8198499 0.8512827 0.8617104 #>  [331,] 0.32610735 0.4872834 0.4983160 0.5573616 0.5855434 0.6276901 0.6392736 #>  [332,] 0.68936464 0.6958452 0.8506020 0.8633761 0.8714205 0.8930139 0.9023052 #>  [333,] 0.39397720 0.7329113 0.7410254 0.7663382 0.7772582 0.8030690 0.8470083 #>  [334,] 0.60951835 0.6986042 0.7586650 0.7651058 0.8122459 0.8230093 0.8261201 #>  [335,] 0.26117239 0.5462829 0.7307548 0.7817537 0.7903702 0.7959074 0.8262251 #>  [336,] 0.33173566 0.4339159 0.4584834 0.5588798 0.7306633 0.7453854 0.7456426 #>  [337,] 0.20364447 0.3570291 0.4332334 0.4477713 0.4558041 0.4605955 0.5477619 #>  [338,] 0.19349966 0.4015340 0.4744073 0.5030551 0.5200255 0.5265024 0.5483013 #>  [339,] 0.29663832 0.3318799 0.3978314 0.4339159 0.6524090 0.8009970 0.8439166 #>  [340,] 0.37592404 0.4179417 0.4643678 0.4729392 0.4997961 0.5038522 0.5653650 #>  [341,] 0.26569523 0.2725703 0.3242830 0.3500936 0.3965472 0.4226106 0.4307247 #>  [342,] 0.35550266 0.5916725 0.6373869 0.7938445 0.8269377 0.9109831 0.9256279 #>  [343,] 0.18833132 0.5253866 0.6208067 0.7211547 0.7785311 0.7845230 0.8357815 #>  [344,] 0.93219135 1.2324163 1.2582066 1.2602674 1.2873315 1.3145939 1.3544736 #>  [345,] 0.52694359 0.5371939 0.5751417 0.6363662 0.6391015 0.6638867 0.6935510 #>  [346,] 0.26391137 0.2915947 0.4170275 0.4806983 0.5065806 0.5190120 0.5994616 #>  [347,] 0.29913201 0.3001107 0.3245288 0.4722175 0.5049428 0.5051981 0.5455274 #>  [348,] 0.38340688 0.5791202 0.5939232 0.7404551 0.7609118 0.7884724 0.8084775 #>  [349,] 0.54957644 0.5717507 0.5776043 0.6039112 0.6502415 0.6559167 0.6943987 #>  [350,] 0.68495194 0.8645616 0.8797973 0.8935947 0.9048966 0.9695748 1.0356397 #>  [351,] 0.38108936 0.4009907 0.4264012 0.4551814 0.4778850 0.5654443 0.5670954 #>  [352,] 0.53065056 0.6211781 0.7583753 0.7766113 0.8380508 1.0211110 1.0522342 #>  [353,] 0.47102073 0.4751976 0.4956412 0.5035207 0.5143610 0.5198491 0.5204190 #>  [354,] 0.29016920 0.6267294 0.6394182 0.6668798 0.6857065 0.7741100 0.7747628 #>  [355,] 0.36138788 0.3662990 0.4432176 0.4689871 0.6394403 0.6526979 0.6889390 #>  [356,] 0.32461046 0.3478183 0.3760655 0.4032799 0.4223140 0.4746861 0.4916085 #>  [357,] 0.79314086 0.8037464 0.8434276 1.0077201 1.0261459 1.0480981 1.0764931 #>  [358,] 0.56025063 0.6277458 0.6683978 0.7168500 0.7356948 0.7495574 0.8031823 #>  [359,] 0.47316352 0.7349493 0.8117511 0.8797973 0.8972047 0.9227334 0.9383466 #>  [360,] 0.37642168 0.4677464 0.5251831 0.5593401 0.6712401 0.6899795 0.7720540 #>  [361,] 0.73192268 0.7874333 0.8318148 0.8349937 0.8397224 0.8882763 0.9342674 #>  [362,] 0.52119306 0.5602455 0.7476921 0.7596948 0.7825685 0.7851418 0.8273757 #>  [363,] 0.31459592 0.3639557 0.4900483 0.5008429 0.5465923 0.5954739 0.5958321 #>  [364,] 0.20070157 0.3584123 0.4055149 0.4206436 0.5269107 0.5997225 0.6078357 #>  [365,] 0.88351028 0.9052847 1.0145425 1.1134033 1.1317173 1.1357573 1.1882793 #>  [366,] 0.43640712 0.6339528 0.7064259 0.7460580 0.7732640 0.7812663 0.7814552 #>  [367,] 0.51219970 0.6281446 0.6735208 0.6828962 0.6844711 0.7574329 0.7984744 #>  [368,] 0.49556396 0.5059247 0.5294520 0.5552976 0.5580247 0.6113328 0.6339339 #>  [369,] 0.34892269 0.3914730 0.4104399 0.4240800 0.4579472 0.4620020 0.4790419 #>  [370,] 0.44460421 0.7201887 0.8050755 0.8230608 0.8376086 0.8744900 0.8783550 #>  [371,] 0.28463584 0.3941812 0.4081809 0.4768753 0.5155750 0.6249427 0.6294312 #>  [372,] 0.35013168 0.4801124 0.4943611 0.6153698 0.6871323 0.7533626 0.7538177 #>  [373,] 0.16975155 0.4080084 0.4108824 0.4128832 0.4441183 0.4591125 0.4974474 #>  [374,] 0.50612574 0.5398227 0.6743391 0.7178640 0.7391128 0.7662354 0.7703421 #>  [375,] 0.45923744 0.5058470 0.5728323 0.5803429 0.6245121 0.6345301 0.6397086 #>  [376,] 0.56338754 0.6699178 0.7234247 0.7771867 0.8235576 0.8338540 0.9175693 #>  [377,] 0.63902222 0.6842911 0.7081651 0.7151375 0.7384813 0.8408943 0.8593300 #>  [378,] 0.38249166 0.6410325 0.6652949 0.7268194 0.7903805 0.8585393 0.8702752 #>  [379,] 0.75302907 1.0042840 1.0088760 1.0522342 1.0820564 1.2285930 1.2372861 #>  [380,] 0.37971976 0.4428645 0.4525840 0.5063466 0.5162144 0.5917079 0.6078357 #>  [381,] 1.11340326 1.1890499 1.2652057 1.2789737 1.3914760 1.5265184 1.5577468 #>  [382,] 0.46011850 0.4717602 0.5391968 0.6481978 0.6908835 0.7194235 0.8064938 #>  [383,] 0.43111239 0.4566078 0.4897581 0.5512715 0.5643170 0.5959820 0.6059303 #>  [384,] 0.39375151 0.5912074 0.6352179 0.6628509 0.7402426 0.7518455 0.7972298 #>  [385,] 0.47370146 0.6233607 0.8157635 0.8891372 0.9780277 1.0065256 1.0237762 #>  [386,] 0.24496419 0.3900367 0.4902399 0.5345155 0.5364068 0.5776043 0.6723558 #>  [387,] 1.04346314 1.1151134 1.3470373 1.3652537 1.4187501 1.4228799 1.4643547 #>  [388,] 0.94856020 1.0131405 1.0481242 1.1333156 1.1463607 1.1719116 1.3091491 #>  [389,] 0.51407207 0.5513568 0.6340963 0.6899795 0.7336897 0.8596412 0.8864995 #>  [390,] 0.57441635 0.9596552 1.0064445 1.0604213 1.1312419 1.2440298 1.2478087 #>  [391,] 0.15939739 0.2722640 0.3755007 0.4219632 0.4733975 0.6157514 0.6165426 #>  [392,] 0.44869849 0.4959363 0.5411127 0.6494159 0.6502415 0.6686932 0.6746215 #>  [393,] 0.23540135 0.2902548 0.3703301 0.4158982 0.4366189 0.4484292 0.4557129 #>  [394,] 0.41259616 0.4276152 0.4425381 0.5257086 0.5560514 0.5637212 0.5868961 #>  [395,] 0.49632888 0.5505583 0.5508141 0.5815109 0.6041073 0.6273428 0.6567312 #>  [396,] 1.03209646 1.1420473 1.1558105 1.2507232 1.2608008 1.3623899 1.4969103 #>  [397,] 0.39746932 0.4101183 0.5056286 0.5284228 0.6035917 0.6340128 0.6721604 #>  [398,] 0.39397720 0.5755682 0.5759381 0.6866418 0.6874729 0.7701033 0.7933148 #>  [399,] 0.36228122 0.5784763 0.5964690 0.6111144 0.6253591 0.6811819 0.7548760 #>  [400,] 0.48587769 0.7259423 0.8636752 0.9006876 0.9172980 0.9185908 0.9597085 #>  [401,] 0.19453081 0.2180984 0.2964562 0.4528573 0.4759211 0.4945252 0.5004592 #>  [402,] 0.37018880 0.5107943 0.6046510 0.6143180 0.6200362 0.7189410 0.7487179 #>  [403,] 0.36841983 0.4311124 0.4758130 0.4768753 0.5128993 0.6287649 0.7161673 #>  [404,] 0.32673556 0.5155794 0.5600855 0.5884048 0.6146644 0.6245540 0.6284088 #>  [405,] 0.71697343 0.7938939 1.0201320 1.0240017 1.0296550 1.0483266 1.0531135 #>  [406,] 0.45917348 0.5392838 0.5798872 0.5966187 0.5999656 0.6664535 0.7263124 #>  [407,] 0.44777128 0.4593609 0.5270270 0.5839307 0.6043051 0.6339339 0.6550609 #>  [408,] 1.06042126 1.5060176 1.5451807 1.6083663 1.6372125 1.7175380 1.7778125 #>  [409,] 0.14012704 0.2532084 0.3262469 0.4029995 0.4638253 0.4969787 0.5280127 #>  [410,] 0.42849307 0.4974005 0.5614943 0.5953164 0.6034204 0.6054061 0.6410325 #>  [411,] 0.11054873 0.2946916 0.3690463 0.4533264 0.4702375 0.4728462 0.4729392 #>  [412,] 0.50165139 0.5606956 0.5940447 0.7182699 0.7515533 0.8081944 0.8339587 #>  [413,] 0.46447154 0.5485698 0.6706440 0.7191895 0.7892911 0.8226791 0.8363893 #>  [414,] 0.93743009 1.1079305 1.1567450 1.2729022 1.3692809 1.3754771 1.3933635 #>  [415,] 0.34774327 0.8103668 0.8331526 0.8461585 0.8474787 0.8832135 0.8834263 #>  [416,] 0.91702820 0.9512406 1.0033475 1.0620889 1.0800157 1.1051267 1.1606735 #>  [417,] 0.32624690 0.3894176 0.4213596 0.4662150 0.4687694 0.4746717 0.4768930 #>  [418,] 0.74564260 0.8530085 0.8650350 0.9167455 0.9461502 0.9599335 0.9820009 #>  [419,] 0.48355587 0.5506170 0.5903709 0.6034597 0.6277458 0.6426524 0.6703649 #>  [420,] 0.41619506 0.8468565 0.8515092 0.9061340 0.9112581 0.9982411 1.0210811 #>  [421,] 0.75837525 0.9342236 1.2756362 1.2791728 1.3116953 1.4349947 1.4367924 #>  [422,] 0.78269356 0.7994687 0.8390775 0.8391708 0.8393181 0.8458970 0.9107327 #>  [423,] 0.31012110 0.4275806 0.4868863 0.5146093 0.5198001 0.5293840 0.5524687 #>  [424,] 0.37428673 0.4528573 0.4778550 0.5508378 0.5944535 0.5993978 0.7083681 #>  [425,] 0.49461387 0.5637042 0.7569739 0.7592514 0.8754066 0.8894306 0.9293305 #>  [426,] 0.21932266 0.3666092 0.5760282 0.6004384 0.6120175 0.6226523 0.6435408 #>  [427,] 0.43199716 0.5020900 0.6054268 0.6098440 0.7091669 0.7326877 0.7776103 #>  [428,] 0.25225354 0.2663117 0.4502208 0.4753128 0.5460630 0.5692541 0.5777407 #>  [429,] 0.32395690 0.3763838 0.4179126 0.4519298 0.5065810 0.5117078 0.5265141 #>  [430,] 0.21438353 0.4142340 0.4763886 0.4940364 0.5159281 0.5295851 0.5391752 #>  [431,] 0.47579679 0.5492530 0.6616307 0.6658869 0.7547001 0.7713148 0.7780232 #>  [432,] 0.57094962 1.1318210 1.1505941 1.1888230 1.2646515 1.4537055 1.6024752 #>  [433,] 0.36358908 0.3888086 0.4023546 0.4749690 0.4970022 0.5220499 0.6012320 #>  [434,] 0.48631467 0.4904112 0.6324832 0.7668494 0.8688801 0.8713957 0.8842236 #>  [435,] 0.72273600 0.7550378 0.7719919 0.8823244 0.9115526 1.0289498 1.0720119 #>  [436,] 0.30987981 0.3626960 0.4130238 0.4332334 0.4336046 0.4394001 0.5594383 #>  [437,] 0.41109408 0.6820972 0.6825986 0.7234247 0.7348194 0.7768501 0.7831345 #>  [438,] 0.32645833 0.3791309 0.3853379 0.4528794 0.5651017 0.5851902 0.5897401 #>  [439,] 0.39549103 0.4722023 0.5247991 0.6714687 0.7691332 0.8299737 0.8358366 #>  [440,] 0.33558076 0.3592892 0.4405538 0.4553572 0.5146093 0.5294658 0.5614943 #>  [441,] 0.50305542 0.5520734 0.5525081 0.6277807 0.6313528 0.6362074 0.6513003 #>  [442,] 0.51785516 0.6476990 0.6982858 0.7186645 0.7237203 0.7732640 0.8008779 #>  [443,] 0.46476521 0.5166886 0.6209300 0.7372051 0.8064938 0.8233062 0.8280619 #>  [444,] 0.31747366 0.3788559 0.5489703 0.6876388 0.7031427 0.7049666 0.7115193 #>  [445,] 0.37005987 0.3811046 0.4121700 0.4283172 0.5026828 0.5834451 0.5951965 #>  [446,] 0.37039866 0.4863147 0.5201182 0.5612289 0.6654287 0.6802099 0.7479754 #>  [447,] 0.63313660 0.9427818 0.9654041 0.9780819 0.9834188 0.9951674 1.0180970 #>  [448,] 0.45384089 0.5377230 0.5524279 0.7467323 0.7527882 0.7982627 0.8156314 #>  [449,] 0.23567154 0.5150840 0.5445733 0.5479805 0.5968973 0.6452314 0.6504809 #>  [450,] 0.23540135 0.3823030 0.3938108 0.4431168 0.4643678 0.5074547 0.5310034 #>  [451,] 0.28195106 0.3689428 0.4669056 0.4975360 0.5397136 0.5607630 0.5640855 #>  [452,] 0.30846893 0.3489227 0.4983159 0.5013068 0.5035156 0.5304445 0.5484007 #>  [453,] 0.45287944 0.4680001 0.5260245 0.5323167 0.5327433 0.5345155 0.5990855 #>  [454,] 0.34672976 0.4279983 0.4911316 0.5011759 0.5496275 0.5550621 0.5598677 #>  [455,] 0.31414653 0.3725645 0.3862958 0.4699043 0.4882999 0.5141717 0.5338726 #>  [456,] 0.52602453 0.5952533 0.6145939 0.6614474 0.6891508 0.7328742 0.7940881 #>  [457,] 0.47848212 0.5332595 0.7718176 0.7909906 0.8114176 0.8206693 0.8218571 #>  [458,] 0.45621514 0.4629381 0.5270208 0.5355492 0.5465983 0.6020024 0.6289473 #>  [459,] 0.32155781 0.3818730 0.4015340 0.4189035 0.4578895 0.4583384 0.4955794 #>  [460,] 0.43119205 0.5362847 0.6079108 0.6416562 0.6457514 0.6483215 0.6838886 #>  [461,] 0.51407776 0.5488487 0.5612289 0.6246791 0.6324832 0.6456394 0.6990177 #>  [462,] 0.56328248 0.5649831 0.6302808 0.6380793 0.6678411 0.6912409 0.7276322 #>  [463,] 0.66508880 0.6689122 0.6848305 0.7421019 0.7476921 0.8279977 0.8785422 #>  [464,] 0.24583737 0.2869569 0.3676537 0.3971754 0.4642626 0.5647469 0.5768015 #>  [465,] 0.35809153 0.3890294 0.4424690 0.4638253 0.4687694 0.4775021 0.5172521 #>  [466,] 0.45440305 0.5335151 0.7958461 0.8257782 0.8903412 0.8909458 0.9229895 #>  [467,] 0.39491312 0.6452314 0.7114949 0.7144063 0.7258225 0.7371515 0.8537155 #>  [468,] 0.34927317 0.3938108 0.4393561 0.4484292 0.4848502 0.5351547 0.5359468 #>  [469,] 0.42750616 0.4336776 0.4974005 0.5497354 0.5604645 0.6362644 0.6770344 #>  [470,] 0.39045408 0.5007189 0.5186522 0.6031915 0.6484546 0.6525004 0.6889350 #>  [471,] 0.33096726 0.3861714 0.4351472 0.4388974 0.4396650 0.5133216 0.5648266 #>  [472,] 0.41011832 0.4538409 0.5642376 0.6094192 0.6930545 0.7329803 0.7349748 #>  [473,] 0.56582396 0.6081674 0.6352179 0.6384492 0.6900938 0.7040721 0.7832063 #>  [474,] 1.02395308 1.1643224 1.2545098 1.2776436 1.3088111 1.4611929 1.4643547 #>  [475,] 0.25358548 0.3748020 0.3890531 0.4081809 0.4557788 0.5280655 0.5602482 #>  [476,] 0.36963673 0.3915500 0.6038138 0.6087299 0.6351311 0.6832249 0.6916937 #>  [477,] 0.52938119 0.5577623 0.5756987 0.5912283 0.7738940 0.8002743 0.8015121 #>  [478,] 0.52359172 0.5327110 0.7486855 0.7586650 0.8515532 0.9597529 0.9756089 #>  [479,] 0.51473607 0.6394182 0.7179723 0.7394591 0.7601434 0.9385895 0.9390801 #>  [480,] 0.25254359 0.4206436 0.4525840 0.5170554 0.5377323 0.6261884 0.6488977 #>  [481,] 0.68453015 0.7325207 0.7405760 0.8413597 0.8460302 0.9544794 0.9562187 #>  [482,] 1.01567019 1.1400141 1.1574268 1.2322495 1.2808844 1.3380919 1.4570074 #>  [483,] 0.37642168 0.4646068 0.5128950 0.5341214 0.5396000 0.7660767 0.8705765 #>  [484,] 0.34266118 0.3810894 0.3920713 0.4587430 0.4943398 0.5358363 0.5883554 #>  [485,] 0.51359842 0.5269436 0.5417617 0.5575358 0.6410033 0.6882290 0.6999893 #>  [486,] 0.21562643 0.3895736 0.4175655 0.4519298 0.4878824 0.5074296 0.5649831 #>  [487,] 1.13581204 1.1538701 1.2108285 1.2386507 1.3115049 1.3929111 1.4112682 #>  [488,] 0.37676699 0.3778548 0.4079960 0.4791625 0.4939821 0.4981195 0.5352413 #>  [489,] 0.32374769 0.3996098 0.4909798 0.5273969 0.5460630 0.6021139 0.6038110 #>  [490,] 0.22777105 0.2328586 0.2540421 0.4583384 0.4682206 0.4693914 0.4997236 #>  [491,] 0.29562048 0.4644715 0.6699178 0.8032808 0.8197502 0.8383435 0.9180581 #>  [492,] 0.55839746 0.7226385 0.7554126 0.8731493 0.9134057 0.9209817 1.0738741 #>  [493,] 0.61308050 0.6942087 0.7410649 0.8467166 0.8817423 0.9344031 0.9633244 #>  [494,] 0.53433142 0.5759381 0.6391701 0.6615329 0.6717027 0.6722211 0.6942183 #>  [495,] 0.66078804 0.8099197 0.9631674 1.1275882 1.1562900 1.2565160 1.2632557 #>  [496,] 0.41331339 0.4279969 0.5203851 0.5644979 0.6454096 0.7247526 0.7282043 #>  [497,] 0.24797545 0.3339583 0.5033519 0.7106138 0.7504884 0.7915479 0.8450276 #>  [498,] 0.33395825 0.3721276 0.4067677 0.5535995 0.5978580 0.6812021 0.7052937 #>  [499,] 0.78719221 0.8043582 0.9190296 0.9530321 1.0288636 1.0783227 1.1088369 #>  [500,] 0.65726023 0.6974653 0.7960473 0.9061340 0.9281200 0.9284177 1.1122572 #>  [501,] 0.47156051 0.5503854 0.5536854 0.5621560 0.5717687 0.6169806 0.6222719 #>  [502,] 0.44281159 0.7743223 0.7939588 0.8383435 0.8408119 0.9680743 1.0176592 #>  [503,] 0.34774327 0.7759097 0.8069707 0.8270188 0.8647564 0.8949123 0.9088326 #>  [504,] 0.26680982 0.3989651 0.4200125 0.4483890 0.4520954 0.5035354 0.5151342 #>  [505,] 0.04571425 0.1392036 0.6394927 0.6487314 0.6619895 0.6751078 0.6753057 #>  [506,] 0.25015597 0.3401143 0.4592374 0.4778850 0.4943398 0.5044172 0.5517512 #>  [507,] 0.47316352 0.7321146 0.7875852 0.8683310 0.8935947 0.9213758 0.9617819 #>  [508,] 0.21269047 0.2915947 0.3760655 0.4339604 0.4774102 0.5046411 0.5193037 #>  [509,] 0.87325918 0.9052847 0.9868187 1.0222585 1.0951802 1.1349118 1.1515384 #>  [510,] 0.55579912 0.5826529 0.6153116 0.6472856 0.7414683 0.7788321 0.7880331 #>  [511,] 0.39629918 0.4268706 0.4687352 0.4996229 0.5169771 0.5261454 0.5743776 #>  [512,] 0.36298797 0.4327686 0.4547084 0.4728169 0.4916231 0.5112019 0.5194801 #>  [513,] 0.32762262 0.3893602 0.4106843 0.6300783 0.6371847 0.7545410 0.7684055 #>  [514,] 0.78396839 0.9048643 1.0985760 1.1451631 1.1573021 1.1620604 1.2064484 #>  [515,] 0.45564471 0.5202932 0.7016013 0.7504072 0.7947375 0.8731493 0.9135248 #>  [516,] 0.35077167 0.6193135 0.7554126 0.7816043 0.9528638 0.9652937 0.9864252 #>  [517,] 0.29643517 0.3650977 0.4088040 0.4128832 0.4228090 0.4266637 0.4308328 #>  [518,] 0.39365866 0.5978470 0.6021200 0.6300783 0.6620220 0.6693156 0.7309364 #>  [519,] 0.59023600 0.8691090 0.9474781 1.1567450 1.1769398 1.1806135 1.2139837 #>  [520,] 0.27257030 0.3309673 0.3527575 0.4192266 0.4546685 0.4721913 0.4839348 #>  [521,] 0.35251731 0.4657088 0.5999656 0.6029188 0.6075887 0.6638867 0.6797762 #>  [522,] 0.55401772 0.6971284 0.7395016 0.7720874 0.7754344 0.7838987 0.7905194 #>  [523,] 0.28177024 0.2991320 0.3558952 0.4232862 0.5466206 0.5534555 0.5831061 #>  [524,] 0.59274382 0.7782351 0.7786731 0.9334700 0.9720118 0.9742489 1.0527938 #>  [525,] 0.65548077 0.7605125 0.8081944 0.8172181 0.8191259 0.8509468 0.8624629 #>  [526,] 0.48444700 0.5140778 0.5371161 0.6401436 0.6802099 0.7282043 0.7458303 #>  [527,] 0.36468387 0.3971754 0.4099904 0.4270901 0.4498374 0.5697012 0.5780114 #>  [528,] 0.88078128 1.0575620 1.1517766 1.2117820 1.2938603 1.3071017 1.4734496 #>  [529,] 0.36771304 0.3684198 0.3941812 0.4791460 0.4897581 0.5381211 0.5390028 #>  [530,] 0.40382345 0.4228090 0.4591125 0.4639293 0.4752898 0.4979011 0.5119117 #>  [531,] 0.45437205 0.7082485 0.9707212 0.9931201 1.0399043 1.0677937 1.1220067 #>  [532,] 0.38663106 0.5343314 0.7663382 0.8047607 0.8661663 0.9635409 1.0636277 #>  [533,] 0.53065056 0.6219210 0.6831127 0.7131843 0.7735362 0.8333357 0.8706328 #>  [534,] 0.55198846 0.6384492 0.6875770 0.7402426 0.8273757 0.8591070 0.8643478 #>  [535,] 1.04346314 1.1526443 1.3405127 1.3637198 1.4330155 1.4368629 1.4484224 #>  [536,] 0.82855926 0.9527953 0.9963179 1.0079652 1.0326292 1.0426813 1.0906484 #>  [537,] 0.36434306 0.3878185 0.4449928 0.4945886 0.5417617 0.5565985 0.5661663 #>  [538,] 0.34029209 0.4422986 0.4569293 0.5100356 0.5506492 0.5625470 0.5868285 #>  [539,] 0.43473962 0.4632580 0.4801095 0.4845049 0.5504738 0.5513356 0.6391414 #>  [540,] 0.35460865 0.5599812 0.5969696 0.6250477 0.6740946 0.6975883 0.8426542 #>  [541,] 0.37459805 0.3901544 0.4987947 0.5563732 0.5651017 0.6112469 0.6198611 #>  [542,] 0.24887437 0.4420418 0.5066583 0.5456387 0.5760282 0.6688299 0.6784107 #>  [543,] 0.44244155 0.6330306 0.6332236 0.6401436 0.6454096 0.7373525 0.7385704 #>  [544,] 0.79727537 0.9485602 0.9683666 1.0395655 1.1678652 1.2062078 1.2315531 #>  [545,] 0.20771491 0.3113073 0.3318799 0.4584834 0.6450222 0.7544114 0.7605112 #>  [546,] 0.47688706 0.6091192 0.6831127 0.7574329 0.8095227 0.8380508 0.8453919 #>  [547,] 0.59042562 0.6689116 0.6929753 0.7733549 0.8019543 0.8286681 0.8550239 #>  [548,] 0.42219972 0.6251828 0.6738930 0.7184185 0.7354770 0.7821569 0.8336902 #>  [549,] 0.44025682 0.4701010 0.4886626 0.4970022 0.5135203 0.5367453 0.6606697 #>  [550,] 0.73351554 1.0582034 1.0611122 1.1778486 1.2360387 1.3435280 1.4136327 #>  [551,] 0.40013624 0.4645988 0.5113961 0.5152524 0.5883924 0.5968973 0.6809340 #>  [552,] 0.31854688 0.4474662 0.5993461 0.6010170 0.6605620 0.7280657 0.7616373 #>  [553,] 0.34217323 0.4469934 0.4937918 0.4937935 0.5627929 0.5843638 0.6190611 #>  [554,] 0.49063506 0.6813582 0.6982818 0.7254086 0.7731393 0.7802768 0.8199414 #>  [555,] 0.20771682 0.3810218 0.5153039 0.5259593 0.5270208 0.5395107 0.5524317 #>  [556,] 0.26476990 0.3897346 0.4759211 0.4795714 0.4934492 0.5019989 0.5287404 #>  [557,] 0.43503030 0.5697714 0.5916725 0.7278076 0.7568652 0.7749253 0.7848902 #>  [558,] 0.34318567 0.5776474 0.7219923 0.7411298 0.7765500 0.8347600 0.8608715 #>  [559,] 0.28177024 0.3245288 0.3882293 0.5377323 0.5386959 0.5759819 0.6281235 #>  [560,] 0.30788829 0.4077460 0.5153584 0.5803429 0.6014804 0.6169703 0.6459324 #>  [561,] 0.53919683 0.7005249 0.7107246 0.7704643 0.7726500 0.8233062 0.8476857 #>  [562,] 0.81196158 1.1460625 1.1937315 1.2670312 1.3563876 1.3605717 1.3610262 #>  [563,] 0.39960980 0.5864688 0.5989667 0.6885308 0.7083681 0.7356948 0.7383542 #>  [564,] 0.74307900 0.8202539 0.8515092 0.8605271 0.8972527 0.9016218 0.9834188 #>  [565,] 0.32610735 0.4430714 0.5117078 0.5387016 0.5395107 0.6197915 0.6289473 #>  [566,] 0.49001359 0.5580045 0.5923907 0.6030531 0.6171221 0.6365144 0.6768155 #>  [567,] 0.47956002 0.4958647 0.5128950 0.5419150 0.7720540 0.8079468 0.8230608 #>  [568,] 0.46460681 0.5251831 0.5293812 0.6150647 0.7248038 0.7310683 0.7443909 #>  [569,] 0.28105525 0.3580915 0.4507483 0.4536038 0.5070540 0.5344309 0.5467686 #>  [570,] 0.53351506 0.6143028 0.6363958 0.8136844 0.8576723 0.8727450 0.8807392 #>  [571,] 0.63594490 0.7233548 0.7247526 0.7373525 0.8037464 0.8926117 0.9307884 #>  [572,] 0.77199188 0.9380048 1.1153914 1.1296248 1.2037523 1.2276482 1.2293072 #>  [573,] 0.60798707 0.7565116 0.7765500 0.8491237 0.8890488 0.8898541 0.9464330 #>  [574,] 0.27398806 0.4388641 0.4422986 0.4591735 0.5007189 0.5231898 0.5441631 #>  [575,] 0.40980075 0.6306436 0.7280176 0.7515733 0.8137076 0.8825156 0.9299263 #>  [576,] 0.06443698 0.3787634 0.3908850 0.3959042 0.6010170 0.7355700 0.8176350 #>  [577,] 0.47558953 0.5229825 0.5359468 0.5589190 0.5728761 0.5759175 0.5973498 #>  [578,] 0.19349966 0.3790993 0.3818730 0.4601479 0.5133530 0.5192501 0.5250710 #>  [579,] 0.29280265 0.3933908 0.4179126 0.4366189 0.4731095 0.5039825 0.5220867 #>  [580,] 0.37653658 0.4708949 0.5360577 0.5442781 0.5992569 0.6889390 0.7118341 #>  [581,] 0.85134486 0.8816231 0.9911257 1.0271321 1.0846413 1.1353727 1.2044417 #>  [582,] 0.63902222 0.8656694 0.9184056 0.9740263 0.9929854 1.0162711 1.0370533 #>  [583,] 0.40575425 0.4707377 0.7867352 0.9418947 1.0722782 1.1318210 1.1974263 #>  [584,] 0.76041308 0.9035995 0.9470189 0.9530321 1.0021872 1.0158858 1.0286690 #>  [585,] 0.44159843 0.5719728 0.6726094 0.7147023 0.7662354 0.7999658 0.8029930 #>  [586,] 0.33343997 0.4564861 0.4728169 0.5611178 0.5702484 0.5863418 0.5943358 #>  [587,] 0.20383047 0.4413859 0.4501667 0.4746717 0.4806983 0.4900136 0.4956621 #>  [588,] 0.48908741 0.6230022 0.6341491 0.6443434 0.7579919 0.8150182 0.8630967 #>  [589,] 0.74374231 0.7490381 0.8728337 0.9580899 1.0249119 1.0575620 1.0633040 #>  [590,] 0.93595403 0.9931809 1.1643011 1.2042940 1.2044230 1.2087667 1.2517695 #>  [591,] 0.29326623 0.3333850 0.3894951 0.3930307 0.4306356 0.5351547 0.5387940 #>  [592,] 0.48587769 0.7743822 0.7859967 0.7933395 0.8189235 0.8344953 0.8442074 #>  [593,] 0.24609454 0.3769461 0.3823030 0.3944797 0.4158982 0.4234880 0.4476212 #>  [594,] 0.19052350 0.4012556 0.4514634 0.4553572 0.4897075 0.5226556 0.5479253 #>  [595,] 0.80435818 0.9925364 1.1488322 1.2095252 1.2155675 1.3362533 1.3860850 #>  [596,] 0.59436906 0.6599754 0.7257898 0.7897055 0.8019543 0.8291376 0.8365491 #>  [597,] 0.43640712 0.4534475 0.5354704 0.5978181 0.6062796 0.6995154 0.7180784 #>  [598,] 0.41788008 0.4241425 0.4343564 0.4943611 0.6630012 0.6639979 0.6671099 #>  [599,] 0.44866830 0.7091968 0.7366440 0.7884724 0.8019445 0.8610203 0.8746572 #>  [600,] 0.40818894 0.4248557 0.5000114 0.5134777 0.5326156 0.5758766 0.6098440 #>  [601,] 0.24269159 0.2595436 0.4009911 0.4558041 0.5410824 0.6451033 0.6599754 #>  [602,] 0.24100702 0.4190773 0.4651189 0.5397136 0.5863404 0.5864768 0.5952646 #>  [603,] 0.47514490 0.4906351 0.5022584 0.5755580 0.5861760 0.6450624 0.7089954 #>  [604,] 0.30799288 0.4965913 0.7555328 0.8130227 0.8264110 0.8347600 0.8417493 #>  [605,] 0.28287602 0.3336374 0.3888086 0.4309391 0.5457506 0.5645654 0.5752572 #>  [606,] 0.36060777 0.6301331 0.8357815 0.9274006 0.9410535 0.9473129 0.9718245 #>  [607,] 0.44866830 0.5059925 0.5442781 0.6316113 0.6420581 0.7012525 0.7024491 #>  [608,] 0.53271101 0.6849519 0.7953912 0.9025760 0.9112172 0.9285135 0.9617819 #>  [609,] 0.66008085 0.9302726 1.1686088 1.1862826 1.2149611 1.2331636 1.2469285 #>  [610,] 0.37550068 0.4031230 0.4771102 0.5030551 0.5133805 0.5169235 0.5501456 #>  [611,] 0.25111274 0.4913940 0.4962140 0.5507267 0.5704952 0.6136669 0.6165157 #>  [612,] 0.42403189 0.4556447 0.4994398 0.6704915 0.6815604 0.6880445 0.6887056 #>  [613,] 0.06443698 0.3734551 0.3790214 0.3800403 0.5993461 0.7887963 0.8205013 #>  [614,] 0.69581080 0.9250721 0.9680743 0.9699851 1.0132597 1.0618186 1.0636469 #>  [615,] 0.29405172 0.3784553 0.5055926 0.5164418 0.5197648 0.5456651 0.6479359 #>  [616,] 0.40980075 0.5198787 0.5993928 0.6214543 0.8165308 0.8180957 0.8807170 #>  [617,] 0.52842277 0.5717666 0.5942454 0.6250400 0.6511733 0.6562146 0.7012371 #>  [618,] 0.42750616 0.4784821 0.6247723 0.6267343 0.6835585 0.7602534 0.7621550 #>  [619,] 0.20081003 0.3520001 0.3778548 0.3797260 0.4041812 0.4307247 0.4740074 #>  [620,] 0.28136362 0.5855517 0.6373869 0.6971284 0.7484099 0.7776103 0.8323484 #>  [621,] 0.37676699 0.5098134 0.5209204 0.5338774 0.5598677 0.6052324 0.6571246 #>  [622,] 0.57584806 0.8463077 0.8964089 0.9124131 0.9634992 0.9816412 1.0138038 #>  [623,] 0.28652149 0.4469934 0.5186522 0.5411119 0.5697714 0.6012206 0.6363462 #>  [624,] 0.81276097 0.8397224 0.8531779 0.8755417 0.8947888 0.9294154 0.9409313 #>  [625,] 0.39463741 0.3962992 0.4606434 0.5555264 0.5632462 0.5694970 0.5815678 #>  [626,] 0.14369812 0.5872927 0.6007484 0.6748872 0.7008255 0.7021086 0.7214978 #>  [627,] 0.27413099 0.5112194 0.5452357 0.5453553 0.5837297 0.5864701 0.6365082 #>  [628,] 0.35411682 0.4534475 0.5083303 0.5510340 0.5918923 0.6400080 0.6542069 #>  [629,] 0.19638553 0.3401054 0.4065474 0.4275806 0.4488865 0.4527250 0.4606434 #>  [630,] 0.94695329 1.0767807 1.1662916 1.2429177 1.2784921 1.3622928 1.3745690 #>  [631,] 0.37435012 0.5261454 0.6227153 0.6315985 0.6571821 0.6953608 0.7456342 #>  [632,] 0.31747366 0.5258114 0.6186240 0.6464196 0.6687152 0.7189410 0.7636241 #>  [633,] 0.72324088 0.7420052 0.8155540 0.8608715 0.9001005 0.9143395 0.9315418 #>  [634,] 0.52555808 0.8127610 0.8663373 0.9547827 1.0203606 1.2973213 1.3016044 #>  [635,] 0.51301844 0.5563732 0.5602455 0.6376008 0.6906879 0.7151163 0.7421019 #>  [636,] 0.46971065 0.5740381 0.6233111 0.6273615 0.6481272 0.6627058 0.6800485 #>  [637,] 0.32091754 0.5456387 0.5571427 0.6664535 0.6694551 0.6851434 0.6987655 #>  [638,] 0.46563627 0.4727727 0.7309632 0.7519194 0.7785311 0.7960473 0.9169016 #>  [639,] 0.77021991 0.8619195 0.8753128 0.9639432 0.9798556 0.9864329 1.0137631 #>  [640,] 0.58626082 0.7867352 0.7993198 0.8513449 0.9844386 1.0455543 1.2382118 #>  [641,] 0.33109239 0.3735164 0.4545727 0.4578895 0.4601479 0.4868863 0.4900358 #>  [642,] 0.71671825 0.9670776 1.0178746 1.0316690 1.0969632 1.1340563 1.2516741 #>  [643,] 0.67870115 0.7472818 0.9281379 1.1643472 1.3405127 1.4463406 1.4512858 #>  [644,] 0.56423756 0.6143028 0.7664340 0.8295519 0.9027040 1.0478667 1.0485753 #>  [645,] 0.53866549 0.6607476 0.6851308 0.6857101 0.7172652 0.7454272 0.7672566 #>  [646,] 0.95654415 1.1396632 1.2108285 1.2643506 1.2824737 1.4139550 1.4750974 #>  [647,] 0.34010535 0.3646184 0.3879090 0.4226358 0.4897075 0.5142739 0.5237418 #>  [648,] 0.19453081 0.3307303 0.3324219 0.3677130 0.4148064 0.4715411 0.5401188 #>  [649,] 0.80991974 0.8230093 0.8635229 0.9252538 0.9320427 1.0183458 1.0197654 #>  [650,] 0.61563194 0.6716634 0.6751733 0.6882658 0.8203664 0.8338540 0.8493552 #>  [651,] 0.52381587 0.7891463 1.0753639 1.0913834 1.1681296 1.1708615 1.1899192 #>  [652,] 0.87646773 0.8880939 0.9020958 0.9132709 1.0097300 1.0105460 1.0205903 #>  [653,] 0.18496934 0.2893318 0.3520001 0.3823545 0.3871260 0.4226106 0.4572345 #>  [654,] 0.86568871 0.8985955 0.9579166 1.0409980 1.0534279 1.0724506 1.1321780 #>  [655,] 0.19052350 0.3586492 0.3592892 0.5142739 0.5360771 0.5959624 0.6085369 #>  [656,] 0.34163020 0.4283275 0.4855934 0.4902399 0.5257086 0.5637751 0.5724805 #>  [657,] 0.22952922 0.3600945 0.3871260 0.4080084 0.4510014 0.4528600 0.4628820 #>  [658,] 0.69139744 0.7382368 0.9408775 0.9638128 1.0101164 1.0320965 1.0437815 #>  [659,] 1.41954957 1.5318485 1.7173092 1.7461425 1.7518533 1.7629334 1.7977352 #>  [660,] 0.36894283 0.4110552 0.4420370 0.4792750 0.4891598 0.5453553 0.5525385 #>  [661,] 0.46990036 0.4847977 0.5482997 0.6286626 0.7271708 0.7390550 0.8219460 #>  [662,] 0.73774280 0.7577101 0.8029388 1.1356645 1.2171648 1.2898647 1.2918625 #>  [663,] 0.97478843 1.0761221 1.0831587 1.1567243 1.3125149 1.4832193 1.6055022 #>  [664,] 0.49943985 0.5892583 0.5925210 0.6691838 0.7191949 0.7417875 0.7739079 #>  [665,] 0.29562048 0.5485698 0.7743223 0.7771867 0.9064695 1.0134980 1.0145567 #>  [666,] 0.19619166 0.2828760 0.3635891 0.4756768 0.4886626 0.5158260 0.5450619 #>  [667,] 0.32762262 0.4598920 0.6200836 0.6208132 0.6255987 0.6410727 0.6893352 #>  [668,] 0.82488481 0.8539881 0.9593377 1.0277735 1.0339792 1.0394383 1.0709042 #>  [669,] 0.22952922 0.3823545 0.3833208 0.4101284 0.4669468 0.4860281 0.4974474 #>  [670,] 0.37046900 0.6543352 0.6616638 0.7673756 0.7830365 0.8404146 0.8988468 #>  [671,] 0.26391137 0.4339604 0.4757968 0.4815231 0.5071378 0.5099389 0.5202146 #>  [672,] 0.81294675 0.8555156 0.9248364 0.9490047 1.0309781 1.0447546 1.0624949 #>  [673,] 0.47229040 0.5978470 0.6073812 0.6149180 0.6360067 0.6822340 0.7406754 #>  [674,] 0.40439923 0.4736604 0.4814145 0.4920252 0.5241385 0.5594865 0.6157514 #>  [675,] 0.38434692 0.3879090 0.4065474 0.4415072 0.4432146 0.5013068 0.5045053 #>  [676,] 0.38249166 0.3894869 0.5953164 0.6143180 0.6256001 0.6687152 0.7372678 #>  [677,] 0.41109408 0.4264318 0.6347703 0.6485388 0.6615361 0.7076985 0.7456913 #>  [678,] 0.62866258 1.0277762 1.0462118 1.0596680 1.0671824 1.0809682 1.0927018 #>  [679,] 0.54191498 0.5826077 0.5852701 0.9081276 1.0171978 1.0222357 1.0270117 #>  [680,] 0.44204180 0.5065854 0.5329865 0.5598038 0.5822882 0.6120175 0.6795297 #>  [681,] 1.43288909 1.6949842 1.7262951 1.7454634 1.7749788 1.7769355 1.8813949 #>  [682,] 0.30499736 0.4022042 0.4298321 0.4520648 0.4571168 0.4937993 0.4986801 #>  [683,] 0.53628471 0.6852927 0.7382368 0.7808518 0.8091186 0.8318148 0.9219424 #>  [684,] 0.49929978 0.6569955 0.7939588 0.8362200 0.8473047 0.9015850 0.9429366 #>  [685,] 0.42219972 0.4858458 0.5772910 0.6468760 0.6506076 0.7339598 0.7848740 #>  [686,] 0.28136362 0.5540177 0.7155234 0.7822906 0.7938445 0.8035198 0.8554150 #>  [687,] 0.37902138 0.3908850 0.4948598 0.6231309 0.6435408 0.6836365 0.8315414 #>  [688,] 0.12311639 0.2328586 0.3099939 0.3733128 0.3735164 0.4189035 0.5026863 #>  [689,] 0.93219135 0.9357962 1.1133644 1.1138129 1.1675205 1.1732212 1.2326283 #>  [690,] 0.39745565 0.6200836 0.6371847 0.7173797 0.7469732 0.7736566 0.7966122 #>  [691,] 0.21438353 0.3784398 0.3894176 0.4040221 0.4501667 0.4503285 0.5005334 #>  [692,] 0.54176780 0.7255541 0.7887586 0.8199929 0.8511371 0.9315020 0.9357298 #>  [693,] 0.79539116 0.8968886 1.1091096 1.1910852 1.1942218 1.2096223 1.2314755 #>  [694,] 0.48821232 0.5325222 0.6492126 0.9547827 0.9782597 1.0246121 1.1020997 #>  [695,] 0.52011821 0.5531061 0.6216296 0.6875553 0.7101352 0.7113277 0.7356658 #>  [696,] 0.52247882 0.5503854 0.5577623 0.6007484 0.6161736 0.6314199 0.7265207 #>  [697,] 0.51944319 0.6230022 0.7469732 0.7684055 0.8022896 0.8205355 0.9324147 #>  [698,] 0.21269047 0.3478183 0.4128897 0.4170275 0.4605955 0.5126746 0.5530575 #>  [699,] 0.22777105 0.2765912 0.3099939 0.3690185 0.4648931 0.4699043 0.5055227 #>  [700,] 0.46835854 0.4722023 0.6609985 0.6665763 0.7245893 0.7808518 0.7843659 #>  [701,] 0.84935523 0.9677675 1.1692103 1.1784933 1.2331480 1.2555299 1.3403043 #>  [702,] 0.32673556 0.5232783 0.5239490 0.5609904 0.6119033 0.6724755 0.6856162 #>  [703,] 0.32091754 0.5066583 0.5227497 0.5822882 0.6004384 0.6231309 0.6874573 #>  [704,] 0.38948687 0.4254553 0.4284931 0.5258114 0.5604645 0.6046510 0.6652949 #>  [705,] 1.31729770 1.3347680 1.3462833 1.4458400 1.4645044 1.5371870 1.5546972 #>  [706,] 0.66555985 0.6986407 0.7129889 0.7169734 0.7186645 0.7460704 0.8057980 #>  [707,] 1.21840232 1.2904709 1.3204364 1.3516993 1.3574538 1.4969103 1.5599131 #>  [708,] 0.20682460 0.4360727 0.4945886 0.5135984 0.5944535 0.6055667 0.6426524 #>  [709,] 0.29355281 0.3099361 0.3417658 0.3995358 0.4628872 0.4786698 0.4977180 #>  [710,] 0.58626082 0.8506303 0.9911257 1.0304015 1.0361814 1.0722782 1.1457602 #>  [711,] 0.66559897 0.9981294 1.1088369 1.1147052 1.1771683 1.2456376 1.2599347 #>  [712,] 0.18496934 0.2037202 0.3356163 0.3500936 0.3600945 0.3833208 0.4041812 #>  [713,] 0.29025476 0.3016491 0.3325238 0.3333850 0.3353795 0.4431168 0.4848502 #>  [714,] 0.99253638 1.1720515 1.3099736 1.3176101 1.3230151 1.3554815 1.4524412 #>  [715,] 0.25116100 0.5153584 0.5287947 0.5664051 0.5864701 0.7319535 0.7555202 #>  [716,] 1.06366324 1.2651980 1.4948430 1.5837729 1.5986580 1.6106888 1.6903694 #>  [717,] 1.07678073 1.0846420 1.1774213 1.3176229 1.3223233 1.3675572 1.3916853 #>  [718,] 0.45146345 0.5001950 0.5360771 0.5505583 0.5547946 0.6063722 0.6265408 #>  [719,] 0.65845005 0.8029388 0.9201825 0.9597085 1.0167472 1.0714557 1.0845578 #>  [720,] 0.55100035 0.6027286 0.6056720 0.6546912 0.6724755 0.7105098 0.7391316 #>  [721,] 0.49404348 0.6267663 0.6391015 0.7269994 0.7329924 0.7807727 0.7901958 #>  [722,] 1.07052248 1.0948206 1.1011340 1.1178882 1.1387725 1.1398033 1.1648493 #>  [723,] 1.22070054 1.3357028 1.3904147 1.5894819 1.6049176 1.6530384 1.6594268 #>  [724,] 0.51546363 0.5427942 0.5494221 0.6267841 0.6450624 0.6692296 0.6786198 #>  [725,] 0.39713272 0.4962140 0.5419740 0.6898168 0.7375685 0.7572516 0.7636798 #>  [726,] 0.23147596 0.2936603 0.5269107 0.5294995 0.5800039 0.5917079 0.6488977 #>  [727,] 0.68453015 0.7444125 0.8257885 0.8789915 0.9085511 0.9132748 1.0420309 #>  [728,] 0.21899876 0.5056286 0.5968427 0.5994009 0.6064133 0.6655599 0.6930545 #>  [729,] 0.45973924 0.5011231 0.5294520 0.5937230 0.6106296 0.6328233 0.6463534 #>  [730,] 0.39155002 0.4232862 0.4781621 0.5051981 0.5343289 0.5546540 0.5998546 #>  [731,] 0.36238912 0.4675109 0.5482997 0.6689118 0.7987564 0.8212875 0.8346824 #>  [732,] 0.38340688 0.4229073 0.5867269 0.7673756 0.8356845 0.8815337 0.9049789 #>  [733,] 0.39924099 0.5162923 0.5457506 0.5637042 0.6525960 0.7744181 0.7804437 #>  [734,] 0.29366033 0.4428645 0.4866008 0.5910793 0.5964690 0.6131927 0.6255867 #>  [735,] 0.42403189 0.5202932 0.5583975 0.7348982 0.7417875 0.7629768 0.9305786 #>  [736,] 0.47370146 0.6497153 0.6628604 0.6816193 0.8234463 0.9476516 0.9721018 #>  [737,] 0.32645833 0.4412370 0.4946990 0.5327433 0.5599812 0.6245121 0.6276349 #>  [738,] 0.37435012 0.4755077 0.5600855 0.6018673 0.6277807 0.6308084 0.6346401 #>  [739,] 0.51505580 0.5158260 0.5550960 0.5856348 0.6165157 0.6365069 0.6751116 #>  [740,] 0.29376464 0.3754941 0.4351630 0.4669056 0.4959291 0.5404660 0.5489703 #>  [741,] 0.57441635 0.8385162 0.8898626 1.0604803 1.0682302 1.0969442 1.1015394 #>  [742,] 0.46563627 0.6065703 0.6115957 0.7084989 0.7211547 0.8709379 0.9904073 #>  [743,] 0.45692932 0.5441631 0.6031697 0.6275900 0.6605620 0.6889350 0.7111464 #>  [744,] 0.55912593 0.6285536 0.8340456 0.8782873 0.9105457 0.9183319 0.9872698 #>  [745,] 0.53375244 0.6075712 0.6123863 0.7118341 0.7778734 0.7924151 0.8030005 #>  [746,] 0.85063026 0.9996174 1.0455543 1.0636632 1.0846413 1.3689173 1.3985098 #>  [747,] 0.62768346 0.6832311 0.8270851 0.8773382 0.9037585 0.9758108 0.9918784 #>  [748,] 0.86352287 0.9294077 0.9597529 0.9631674 1.0310829 1.0807630 1.1016912 #>  [749,] 0.58805460 0.5923907 0.5943691 0.6167257 0.6451033 0.6615329 0.7007189 #>  [750,] 0.20919443 0.2443611 0.2811758 0.3049974 0.3481238 0.4695471 0.5221921 #>  [751,] 0.89725267 0.9112581 0.9489816 1.2507232 1.3121308 1.3127577 1.3373942 #>  [752,] 0.26365485 0.5890042 0.6673844 0.7349493 0.7993414 0.8410130 0.9006876 #>  [753,] 0.54099723 0.5725903 0.7910624 0.9476516 0.9722788 0.9941375 1.0305361 #>  [754,] 0.45987262 0.5411127 0.5925470 0.7092205 0.7488926 0.7700818 0.7909053 #>  [755,] 0.30993613 0.4101284 0.4260482 0.4505540 0.4576848 0.4777062 0.5039130 #>  [756,] 0.52394905 0.5645922 0.5750908 0.6186240 0.6440486 0.7049666 0.7156754 #>  [757,] 0.12311639 0.2540421 0.3215578 0.3310924 0.3690185 0.4820637 0.5133530 #>  [758,] 0.42643175 0.6494929 0.6706440 0.6825986 0.6857065 0.6871108 0.7273780 #>  [759,] 0.44244155 0.4772412 0.5001950 0.5386655 0.5662010 0.6615496 0.6668798 #>  [760,] 0.54833740 0.5704380 0.5930440 0.6498500 0.6808228 0.7428899 0.7616392 #>  [761,] 0.44406421 0.6193135 0.6226925 0.6487314 0.6595406 0.6700599 0.6707151 #>  [762,] 0.28056837 0.2935528 0.3787348 0.4260482 0.4413394 0.4721913 0.4740074 #>  [763,] 0.38902945 0.4772412 0.6034204 0.6041024 0.6041073 0.6369657 0.6651188 #>  [764,] 0.47934937 0.4814145 0.5031197 0.5431227 0.5815207 0.6152107 0.6165426 #>  [765,] 0.35589520 0.3584123 0.3882293 0.4599798 0.5170554 0.5404660 0.5455274 #>  [766,] 0.54950233 0.5826529 0.6192151 0.8075784 0.8537155 0.8634715 0.8890484 #>  [767,] 0.25752281 0.3748020 0.3925566 0.4262316 0.4442991 0.4956412 0.5781076 #>  [768,] 0.38949509 0.3907801 0.4360226 0.4983160 0.5060485 0.5214980 0.5405683 #>  [769,] 0.33924973 0.4057550 0.5883554 0.6095184 0.6115729 0.6603350 0.6985825 #>  [770,] 0.43637350 0.7084989 1.0283559 1.2276484 1.2425764 1.2564189 1.3546778 #>  [771,] 0.26061217 0.3670530 0.4175655 0.4340024 0.4608261 0.4873019 0.4939821 #>  [772,] 0.59492159 0.9780754 1.2357705 1.2882942 1.2979056 1.3689173 1.5374411 #>  [773,] 0.15939739 0.3813601 0.4060028 0.4771102 0.6076339 0.6894658 0.7036776 #>  [774,] 0.39636638 0.4601185 0.4976761 0.6079189 0.6293921 0.6345712 0.6546476 #>  [775,] 0.54457330 0.5588865 0.5904256 0.6047039 0.6463702 0.6777887 0.7833003 #>  [776,] 0.19619166 0.3336374 0.4005615 0.4023546 0.4406368 0.4715035 0.5214980 #>  [777,] 0.35251731 0.4286971 0.4523095 0.5211113 0.6689118 0.6935510 0.7163933 #>  [778,] 0.62080669 0.6726094 0.7449777 0.7899087 0.8647789 0.8698240 0.8759010 #>  [779,] 0.29405172 0.3564022 0.4494382 0.4610872 0.4866350 0.6043887 0.6649276 #>  [780,] 0.39464798 0.5730097 0.6276835 0.6514561 0.6546978 0.7467323 0.7765950 #>  [781,] 0.60798707 0.7251633 0.7734364 0.7858398 0.7884897 0.8325085 0.8372804 #>  [782,] 0.67828145 0.7436581 0.7860275 0.8080158 0.8712024 0.9411165 0.9462726 #>  [783,] 0.64644690 0.6950362 0.9082312 1.0227413 1.0849674 1.1105571 1.1135275 #>  [784,] 0.42750792 0.4399732 0.4405342 0.4866350 0.5164418 0.5525385 0.5837297 #>  [785,] 0.58952740 0.5949216 0.8616720 1.1864025 1.1864078 1.2400863 1.2452453 #>  [786,] 0.44746621 0.4758130 0.5359129 0.5506492 0.5913269 0.5944086 0.6031697 #>  [787,] 0.60118991 0.7490381 0.7586807 0.8807813 0.8854580 0.9732106 1.0319343 #>  [788,] 0.26598603 0.4198660 0.4442991 0.4684233 0.4805213 0.5042530 0.5280655 #>  [789,] 0.38663106 0.6799855 0.6942183 0.7329113 0.7940036 0.8673687 1.0020501 #>  [790,] 0.64407085 0.6958452 0.7201887 0.8508303 0.8551881 0.9107794 0.9603201 #>  [791,] 0.29998060 0.4900663 0.5564960 0.6673844 0.7227360 0.7633240 0.7761265 #>  [792,] 0.21142718 0.5041685 0.5794850 0.6018673 0.6592357 0.7313448 0.7665368 #>  [793,] 0.41088243 0.4125268 0.4658719 0.4752898 0.5595588 0.6122891 0.6151759 #>  [794,] 0.55509595 0.6839313 0.7610174 0.7820363 0.7829352 0.8028347 0.8096693 #>  [795,] 0.20070157 0.2525436 0.4599798 0.4712768 0.5162144 0.5294995 0.6131927 #>  [796,] 0.24100702 0.2862166 0.4425381 0.4874440 0.5748848 0.6332005 0.6891822 #>  [797,] 0.25358548 0.4524685 0.4697835 0.5155750 0.5968427 0.6121834 0.6251828 #>  [798,] 0.45437205 0.7151163 0.8651633 0.8833319 0.9408245 0.9596552 1.0711273 #>  [799,] 0.29587358 0.3183387 0.3349347 0.4462629 0.4596433 0.5035207 0.5479393 #>  [800,] 0.74344212 0.8648221 0.8672240 0.8966366 1.0129974 1.0227956 1.0785020 #>  [801,] 1.56390104 1.5657869 1.7795675 1.9119670 1.9534755 1.9732582 1.9918567 #>  [802,] 0.49097985 0.5675592 0.5830881 0.6094085 0.6387553 0.6747003 0.6865561 #>  [803,] 0.38812645 0.4275079 0.5661452 0.6605443 0.7776640 0.7832306 0.7887586 #>  [804,] 0.37448926 0.4981700 0.5393116 0.5890042 0.6800716 0.7101352 0.7495574 #>  [805,] 0.83129858 0.8376812 1.0168180 1.0219000 1.0323433 1.0548458 1.1038078 #>  [806,] 0.43637350 1.1333364 1.4578018 1.4631492 1.6266456 1.6314915 1.7330619 #>  [807,] 0.28781203 0.3585585 0.4130087 0.4464127 0.4628820 0.4715411 0.4934492 #>  [808,] 0.56742449 0.7011964 0.7073310 0.7416555 0.7795140 0.8514653 0.8572450 #>  [809,] 0.42967947 0.7167182 0.7825621 0.9970534 1.0241049 1.0656669 1.1539444 #>  [810,] 0.49404348 0.5506170 0.5655540 0.6363662 0.6885308 0.6941921 0.6978207 #>  [811,] 0.81175109 0.8645616 0.9580430 1.0926958 1.1419388 1.1611970 1.1619314 #>  [812,] 0.16975155 0.4038234 0.4308328 0.4406957 0.4658719 0.4992196 0.5183078 #>  [813,] 0.39375151 0.4894143 0.5881773 0.5900231 0.6499896 0.6900938 0.7171374 #>  [814,] 0.52875102 0.5535995 0.5930408 0.6094085 0.7106138 0.7217420 0.7321146 #>  [815,] 0.31963011 0.6171221 0.6392104 0.6579979 0.6640849 0.6927067 0.7258225 #>  [816,] 0.53298647 0.5590547 0.5821457 0.6526827 0.6678011 0.7377447 0.7544114 #>  [817,] 0.46758231 0.6341491 0.7979286 0.8022896 0.8493686 0.8912892 0.9360010 #>  [818,] 0.54099723 0.5629654 0.6497153 0.7495755 0.8771663 0.8967653 0.9428785 #>  [819,] 0.25047378 0.3825755 0.4121700 0.4757292 0.4938818 0.5402961 0.5744741 #>  [820,] 0.19638553 0.3101211 0.4165233 0.4166840 0.4226358 0.4240800 0.4432146 #>  [821,] 0.37985296 0.4394001 0.4691707 0.5241663 0.5498735 0.5875443 0.6741407 #>  [822,] 0.55466534 0.6616638 0.7103210 0.8445120 0.8616450 0.9054136 0.9090830 #>  [823,] 0.26061217 0.3239569 0.3701631 0.3895736 0.4234880 0.4853105 0.4855225 #>  [824,] 0.40999040 0.4113804 0.4642626 0.4723221 0.5844587 0.6004553 0.6076634 #>  [825,] 0.28695693 0.3202089 0.4270901 0.5007925 0.5244079 0.6004553 0.6179132 #>  [826,] 0.43093907 0.4749690 0.5054032 0.5162923 0.5477253 0.5986212 0.6613407 #>  [827,] 0.36395568 0.4254553 0.4336776 0.4877782 0.6200362 0.6267343 0.6509186 #>  [828,] 0.54724773 0.6400548 0.6739431 0.8234866 0.8314899 0.8319525 0.8616893 #>  [829,] 0.54746541 0.5665696 0.6302808 0.7401482 0.7446818 0.7816043 0.8139911 #>  [830,] 0.66008085 1.2349617 1.2588432 1.3043646 1.3828730 1.3867204 1.4800431 #>  [831,] 0.23253817 0.3510728 0.4496490 0.5729036 0.5958321 0.6636104 0.6770331 #>  [832,] 0.59760411 0.6209300 0.6340128 0.6457496 0.6742533 0.7138413 0.7479574 #>  [833,] 0.53375244 0.5472477 0.5562792 0.6091778 0.7593422 0.7846851 0.8205738 #>  [834,] 0.52583059 0.6108756 0.6170252 0.6512225 0.6712401 0.7336897 0.8157479 #>  [835,] 0.26117239 0.3693287 0.6444913 0.6730436 0.6940198 0.7092211 0.7159525 #>  [836,] 0.66299705 0.7415882 0.7535193 0.8150395 0.8228424 0.9094178 0.9138724 #>  [837,] 0.11054873 0.3298202 0.3650977 0.3899376 0.4008991 0.4356812 0.4406957 #>  [838,] 0.44080322 0.5397702 0.5479393 0.6358293 0.6545835 0.6749588 0.6831737 #>  [839,] 0.54523568 0.5518864 0.6326736 0.7555202 0.7649270 0.7975446 0.8385162 #>  [840,] 0.51431110 0.5519846 0.6312541 0.6577084 0.6824197 0.7126497 0.7771085 #>  [841,] 0.28627206 0.3785126 0.6716634 0.7036776 0.7830346 0.7932834 0.8343481 #>  [842,] 0.26680982 0.3305694 0.3814051 0.4280894 0.4347396 0.5224061 0.5427986 #>  [843,] 0.49004833 0.5011231 0.5126941 0.5189201 0.5594865 0.6340997 0.6830116 #>  [844,] 0.37113204 0.6019976 0.6071808 0.6404654 0.6457496 0.7355581 0.7782351 #>  [845,] 0.22300046 0.4631630 0.4715605 0.6778143 0.6922651 0.7171374 0.7203827 #>  [846,] 0.22981991 0.4437153 0.5169235 0.5487300 0.6360528 0.6638090 0.6767999 #>  [847,] 0.25752281 0.4213433 0.4557788 0.4710207 0.5042530 0.5335525 0.5430021 #>  [848,] 1.83152618 1.9122227 1.9983955 2.0050379 2.0383502 2.0402203 2.0426443 #>  [849,] 0.34154117 0.3893602 0.4598920 0.6020217 0.6021200 0.6273585 0.6709126 #>  [850,] 0.77867312 0.9504426 1.1360027 1.1553227 1.1762254 1.1851992 1.1884910 #>  [851,] 0.45350279 0.5099389 0.5295851 0.5302830 0.5497424 0.6379831 0.6573591 #>  [852,] 0.57509080 0.6027286 0.6856162 0.7434421 0.7982004 0.8074844 0.8509700 #>  [853,] 0.73950155 0.7993198 0.8035198 0.8218871 0.8416545 0.8965235 0.8979458 #>  [854,] 0.37847461 0.4174823 0.5083303 0.5133216 0.5551970 0.5694489 0.6094846 #>  [855,] 0.61921506 0.7681975 0.8936599 0.9329895 0.9514419 0.9519289 1.0777988 #>  [856,] 0.37653658 0.5059925 0.6005085 0.6075712 0.6351311 0.6400548 0.6526979 #>  [857,] 0.57744048 0.7181251 0.7278076 0.7437636 0.8306923 0.8893594 0.9132748 #>  [858,] 0.31963011 0.3709551 0.5113961 0.5360486 0.5915221 0.6502445 0.6504809 #>  [859,] 0.42040406 0.5169618 0.6036615 0.6341953 0.6361665 0.6374889 0.6456610 #>  [860,] 0.58952740 0.7820363 0.9132348 0.9344031 0.9780754 0.9996174 1.0742934 #>  [861,] 0.31554286 0.5645922 0.5797362 0.6570768 0.6576646 0.6943928 0.7100252 #>  [862,] 0.32333223 0.3324361 0.4041139 0.4088040 0.4141443 0.4165233 0.4790419 #>  [863,] 0.55665497 0.6199562 0.6394927 0.6443434 0.6700599 0.7087765 0.7235740 #>  [864,] 0.44281159 0.6569955 0.7541158 0.8301737 0.8532896 0.9004344 0.9250721 #>  [865,] 0.46804725 0.5000114 0.5209204 0.5507969 0.5627929 0.5978607 0.6509929 #>  [866,] 0.66891188 0.6736024 0.6982858 0.7081651 0.7917242 0.8157710 0.9225411 #>  [867,] 0.21899876 0.4697835 0.5602482 0.6035917 0.6986407 0.7082275 0.7184185 #>  [868,] 0.81534153 0.8232843 0.8277651 0.9002796 0.9299263 0.9462764 0.9552018 #>  [869,] 0.44641274 0.4566078 0.4727486 0.4728409 0.5019989 0.5397218 0.5401188 #>  [870,] 0.45973924 0.5071982 0.5719728 0.6113328 0.6743391 0.6917115 0.6967823 #>  [871,] 0.41252683 0.4657088 0.4923469 0.5211113 0.5930483 0.6433102 0.7017054 #>  [872,] 0.33735050 0.5263835 0.5857884 0.6400080 0.6860769 0.6986666 0.7182699 #>  [873,] 0.66428820 0.7736566 0.8982442 0.9184056 0.9456323 1.0856518 1.1065728 #>  [874,] 0.33460704 0.5902360 0.6917958 0.7233548 0.7393771 0.9274215 1.0194544 #>  [875,] 0.56296536 0.5756308 0.6136506 0.6500833 0.6628604 0.7180784 0.7448010 #>  [876,] 0.12808870 0.3623891 0.4286971 0.4847977 0.5751417 0.6075887 0.6728959 #>  [877,] 0.64637018 0.7172772 0.7337518 0.7427283 0.8086648 0.8286993 0.8625060 #>  [878,] 0.72503230 0.7309364 0.8018932 0.8693458 0.9057975 0.9582648 0.9968228 #>  [879,] 0.63725268 0.9064695 0.9351346 0.9972548 1.0127352 1.0188889 1.0641077 #>  [880,] 0.35864923 0.4012556 0.4068342 0.5294658 0.5743776 0.5932781 0.6095867 #>  [881,] 0.82328425 0.9170282 0.9972306 0.9992330 1.0799830 1.1300035 1.1334514 #>  [882,] 0.53591286 0.5658376 0.6142154 0.6820169 0.7451511 0.7782524 0.7945657 #>  [883,] 0.37259475 0.5261127 0.6820221 0.6917958 0.7287877 0.7672566 0.8725511 #>  [884,] 0.34790667 0.3811046 0.3825755 0.4513957 0.5143111 0.5219985 0.6470648 #>  [885,] 0.43855390 0.6141285 0.7100899 0.7574294 0.8771663 0.8909458 0.8932833 #>  [886,] 0.33698182 0.6629971 0.7748656 0.9240548 0.9476333 1.0873642 1.1030125 #>  [887,] 0.63409633 0.7291299 0.8693458 0.8870043 0.8924804 0.9635730 0.9639432 #>  [888,] 0.32641387 0.4965913 0.6123863 0.6912188 0.7140120 0.7310312 0.7364792 #>  [889,] 0.37259475 0.6458642 0.6857101 0.7092205 0.8020232 0.8239966 0.8659911 #>  [890,] 0.34450169 0.4680021 0.4689871 0.5017509 0.5487519 0.5489580 0.5560514 #>  [891,] 0.78914627 0.9212384 0.9567905 1.0306982 1.0631981 1.0807762 1.0959757 #>  [892,] 0.38944539 0.5855656 0.5867269 0.5939232 0.6257743 0.6930419 0.7024491 #>  [893,] 0.44869849 0.4774127 0.4963289 0.5925470 0.6039112 0.6607476 0.7276137 #>  [894,] 0.47084983 0.4715872 0.4792750 0.4878824 0.5017509 0.5112194 0.5504274 #>  [895,] 0.22981991 0.5133805 0.5384226 0.5561699 0.5728414 0.6276885 0.6607412 #>  [896,] 0.35702906 0.4860701 0.5410824 0.5754283 0.6311350 0.6399397 0.6689116 #>  [897,] 0.72495210 1.0395655 1.0872280 1.1105571 1.1172660 1.1333156 1.1755732 #>  [898,] 0.30799288 0.3264139 0.6751078 0.6958641 0.7017077 0.7778734 0.8101594 #>  [899,] 0.52583059 0.5608360 0.6283972 0.6851321 0.7377643 0.7416506 0.7545691 #>  [900,] 0.37876343 0.3800403 0.4948598 0.6267663 0.6416666 0.7275934 0.7628475 #>  [901,] 0.43119205 0.5363126 0.6681105 0.6819498 0.7296357 0.7298730 0.7533462 #>  [902,] 0.39491312 0.5150840 0.5152524 0.5360486 0.5505564 0.5649424 0.6927067 #>  [903,] 0.62086847 0.6853088 0.7713148 0.8044723 0.8375075 0.8535164 0.8725511 #>  [904,] 0.13920356 0.1638005 0.6595406 0.6674176 0.6958641 0.7310312 0.7342961 #>  [905,] 0.67759343 0.7915590 0.8673687 0.9054136 0.9840508 1.0538939 1.1053015 #>  [906,] 0.47059222 0.6655990 0.7199717 0.7236712 0.7391359 0.7871922 0.9172032 #>  [907,] 0.40683422 0.5427535 0.5531278 0.5862375 0.5884048 0.6056720 0.6227153 #>  [908,] 0.61087561 0.7291299 0.8138713 0.8170182 0.8864995 0.8985955 0.9520810 #>  [909,] 0.25225354 0.2881196 0.2911727 0.4198660 0.5273969 0.5640888 0.5669167 #>  [910,] 0.28921044 0.3595677 0.4596433 0.4774102 0.4916085 0.5126746 0.5159015 #>  [911,] 0.34533952 0.3877621 0.4981700 0.5287404 0.5656023 0.5717687 0.5924361 #>  [912,] 0.17939034 0.3001107 0.5154143 0.5340103 0.5386959 0.5436961 0.5831061 #>  [913,] 0.78256847 0.8032556 0.8213601 0.8473665 0.8687878 0.9201937 0.9293231 #>  [914,] 0.29645615 0.3324219 0.3742867 0.3747527 0.5605822 0.6152939 0.6278263 #>  [915,] 0.47329990 0.7015199 0.7092554 0.7880331 0.8032211 0.8362200 0.8543517 #>  [916,] 0.39239860 0.4279969 0.5371161 0.5582246 0.5884043 0.6073468 0.6330306 #>  [917,] 0.23147596 0.4025769 0.4055149 0.4712768 0.4866008 0.6257743 0.6275135 #>  [918,] 0.92525380 0.9659354 0.9693973 0.9782530 1.1085858 1.1259388 1.1686879 #>  [919,] 0.52765663 0.5602506 0.8856526 0.9535751 0.9548578 0.9619405 0.9824227 #>  [920,] 0.56656957 0.5909408 0.6111406 0.6564929 0.7082485 0.7833223 0.7947375 #>  [921,] 0.39574403 0.5875464 0.6464469 0.6595764 0.7678004 0.8157479 0.8170182 #>  [922,] 0.53554924 0.5973650 0.6479359 0.6562577 0.6802833 0.7575838 0.7923873 #>  [923,] 0.35536062 0.3779236 0.4593609 0.5275434 0.5361889 0.5594383 0.5875443 #>  [924,] 0.38136008 0.4219632 0.5375487 0.5561699 0.5815207 0.5997129 0.7090832 #>  [925,] 0.60342992 0.6285536 0.9359540 1.0137631 1.0183458 1.0392322 1.0409980 #>  [926,] 0.25111274 0.3971327 0.4510556 0.5150558 0.5903835 0.6825058 0.6942087 #>  [927,] 0.34567138 0.4405538 0.5337640 0.5497354 0.5532055 0.6357853 0.6400808 #>  [928,] 0.47414268 0.4900358 0.4988284 0.5583510 0.5608868 0.5919142 0.5984238 #>  [929,] 0.51826662 0.9998149 1.1098270 1.1262562 1.1524429 1.2100476 1.3162196 #>  [930,] 0.75771009 1.0378446 1.2100476 1.2165562 1.3294463 1.3485784 1.3537287 #>  [931,] 0.31854688 0.3734551 0.3959042 0.6416666 0.6836365 0.7351750 0.7515733 #>  [932,] 0.55242787 0.6071808 0.6525960 0.6754860 0.6891468 0.7129108 0.7329803 #>  [933,] 0.33733365 0.3933908 0.4755895 0.5074547 0.5194122 0.5436603 0.5651288 #>  [934,] 0.35107280 0.4054120 0.5235459 0.5352657 0.6723270 0.6775423 0.7272667 #>  [935,] 0.32434270 0.5041685 0.5155794 0.5323514 0.5609904 0.5657078 0.6235238 #>  [936,] 0.37095509 0.4645988 0.5479805 0.5492530 0.5649424 0.6187482 0.6292168 #>  [937,] 0.65433520 0.6775934 0.9090830 0.9652533 1.0016459 1.0605316 1.1513208 #>  [938,] 0.48559343 0.5098685 0.6232797 0.6545778 0.7053714 0.7180003 0.7225098 #>  [939,] 0.51754936 0.6443462 0.6815604 0.7133703 0.7536807 0.7629768 0.7807303 #>  [940,] 0.41401917 0.4281259 0.5063466 0.5910793 0.6149180 0.6533701 0.6693156 #>  [941,] 0.43127637 0.5220867 0.6209464 0.6564929 0.6887056 0.6963150 0.7446715 #>  [942,] 0.33558076 0.3456714 0.4762632 0.5198001 0.5344309 0.5819549 0.6085369 #>  [943,] 0.43855390 0.5219985 0.5730097 0.6314604 0.6488589 0.6577084 0.6702641 #>  [944,] 0.43715283 0.4683585 0.5247991 0.6955533 0.7576299 0.7980066 0.8291376 #>  [945,] 0.77581207 0.8044723 0.8434276 0.8531779 0.9106207 0.9496841 0.9683007 #>  [946,] 0.34163020 0.4125962 0.4503285 0.4795889 0.4969787 0.5098685 0.5391752 #>  [947,] 0.21378730 0.3925566 0.4576848 0.4639740 0.4819766 0.4854596 0.4860281 #>  [948,] 0.24436106 0.2792067 0.2964352 0.3348436 0.3899376 0.4298321 0.4533264 #>  [949,] 0.44159843 0.7420451 0.8145655 0.8346059 0.8491237 0.8516760 0.8652646 #>  [950,] 0.41985113 0.5416637 0.6211303 0.6650888 0.6731865 0.7063471 0.7508927 #>  [951,] 0.61531156 0.8702752 0.9342955 0.9588805 0.9693805 0.9977138 1.0260377 #>  [952,] 0.47073774 0.6032022 1.1505941 1.2041985 1.2382118 1.3002598 1.3814397 #>  [953,] 0.68529273 0.6913974 0.7843659 0.8349937 0.9922897 1.0763650 1.1228720 #>  [954,] 0.47274861 0.5068370 0.5675592 0.6060861 0.6641613 0.6951436 0.7058390 #>  [955,] 0.82652005 0.9540056 0.9863755 1.2224653 1.2445479 1.2612410 1.3013286 #>  [956,] 0.37005987 0.4305036 0.4809510 0.5194801 0.5393783 0.6015149 0.6319655 #>  [957,] 0.53741474 0.5661688 0.6097584 0.6115830 0.6122891 0.6192169 0.6281446 #>  [958,] 0.55466534 0.6256001 0.7268194 0.7915590 0.8675422 0.9063975 0.9588805 #>  [959,] 0.67409459 0.6880445 0.7016013 0.7329904 0.7502723 0.7739079 0.8061296 #>  [960,] 0.54814208 0.6091778 0.6993742 0.8709436 0.9175888 0.9410143 0.9760792 #>  [961,] 0.61848225 0.6782814 0.7099386 1.1398743 1.1777807 1.1995849 1.2348910 #>  [962,] 0.52359172 0.5358363 0.6920321 0.7085985 0.7377215 0.7585057 0.7651058 #>  [963,] 1.06277047 1.1260746 1.1936168 1.2638713 1.2853860 1.3249318 1.3378502 #>  [964,] 0.25047378 0.3479067 0.4283172 0.5301280 0.6054574 0.6109480 0.6610838 #>  [965,] 0.77738239 0.8494731 0.8968886 0.9469533 1.0247531 1.1085858 1.1191322 #>  [966,] 0.49092309 0.5022584 0.5026828 0.5393783 0.5514961 0.5759175 0.5908266 #>  [967,] 0.72503230 0.7702199 0.8924804 1.0538151 1.1131288 1.1333423 1.1777887 #>  [968,] 0.24496419 0.4283275 0.4461422 0.5323167 0.5495764 0.6266605 0.6407494 #>  [969,] 0.27650947 0.3445017 0.3662990 0.5056297 0.6071144 0.6263233 0.6287773 #>  [970,] 0.64521864 0.6686932 0.7488926 0.7681975 0.7788321 0.8075784 0.8239966 #>  [971,] 0.34672976 0.3584247 0.3747279 0.4041139 0.4420457 0.4550343 0.4680281 #>  [972,] 0.47277273 0.5253866 0.5840304 0.6115957 0.6301331 0.7303984 0.9231540 #>  [973,] 0.30987981 0.3798530 0.5132923 0.5740381 0.6357470 0.6416562 0.6472052 #>  [974,] 0.04571425 0.1638005 0.6199562 0.6226925 0.6241812 0.6673903 0.7017077 #>  [975,] 0.48355587 0.4923469 0.5119117 0.5661663 0.5717689 0.5805242 0.5908313 #>  [976,] 0.55573813 0.6469737 0.6570768 0.7187655 0.7773769 0.7903702 0.8196807 #>  [977,] 0.27398806 0.5100356 0.5311039 0.5383120 0.5392838 0.5487300 0.5635034 #>  [978,] 0.25116100 0.3078883 0.4936176 0.6241055 0.6535506 0.6986643 0.7181729 #>  [979,] 0.47329990 0.4992998 0.6494159 0.7541158 0.7612812 0.8519282 0.8551544 #>  [980,] 0.48513640 0.5993928 0.6062796 0.6736024 0.7064259 0.7280176 0.8008779 #>  [981,] 0.45887731 0.5242730 0.5519846 0.5551970 0.5918923 0.6429222 0.6594381 #>  [982,] 0.52796467 0.5338774 0.5657078 0.5797049 0.5843638 0.5875655 0.5894621 #>  [983,] 0.54746541 0.5909408 0.6961813 0.7412329 0.7472599 0.7504957 0.7944705 #>  [984,] 0.28195106 0.3164522 0.3210369 0.3754941 0.5223478 0.5384073 0.5591944 #>  [985,] 0.23591415 0.2532084 0.3297798 0.3814125 0.4413859 0.4499021 0.4536038 #>  [986,] 0.50090309 0.9526236 1.0334418 1.0794476 1.0824742 1.1038078 1.1204272 #>  [987,] 0.28653776 0.3566836 0.3629880 0.4809510 0.4816312 0.5151082 0.5611178 #>  [988,] 0.77581207 0.7931409 0.9141468 0.9670776 1.0656669 1.1193141 1.1615661 #>  [989,] 0.93793109 1.0271321 1.0574448 1.0774489 1.1051745 1.1380550 1.1643148 #>  [990,] 0.34812376 0.3585585 0.4022042 0.4146677 0.4331411 0.4669933 0.4675819 #>  [991,] 0.35224437 0.3814051 0.3892715 0.4845049 0.5919142 0.6135315 0.6171973 #>  [992,] 1.24586777 1.3944233 1.4846545 1.5808338 1.6212907 1.6613581 1.6938058 #>  [993,] 0.39436399 0.6913283 0.7801777 0.8068865 0.8135194 0.8307041 0.8426542 #>  [994,] 0.73764313 0.7715999 0.7945657 0.8151593 0.8153415 0.8190690 0.8532739 #>  [995,] 0.21641412 0.3779236 0.4130238 0.4691707 0.4746861 0.5062163 0.5338726 #>  [996,] 0.64728556 0.6699454 0.7015199 0.7180003 0.7310787 0.7313789 0.7580091 #>  [997,] 0.31554286 0.5232783 0.5323514 0.5557381 0.5960612 0.6440486 0.6721305 #>  [998,] 0.29016920 0.5147361 0.6556227 0.8479906 0.8619967 0.8839856 0.9197508 #>  [999,] 0.33735050 0.5413916 0.5694489 0.6149492 0.6417167 0.6542069 0.7061355 #> [1000,] 0.40575425 0.6032022 0.8218871 0.9085511 0.9759297 0.9844386 0.9986676 #>              [,8]      [,9]     [,10] #>    [1,] 0.5241663 0.5275434 0.5360822 #>    [2,] 0.9944096 1.0065311 1.0104809 #>    [3,] 0.8675129 0.8838011 0.8888405 #>    [4,] 0.6811789 0.6853269 0.6989075 #>    [5,] 0.6662341 0.6967823 0.6992277 #>    [6,] 0.9107794 0.9302870 0.9542743 #>    [7,] 0.8560778 0.8915478 0.9106450 #>    [8,] 0.5603123 0.5895567 0.5989974 #>    [9,] 0.6915624 0.7014546 0.7539542 #>   [10,] 1.8461227 1.9268436 2.0020791 #>   [11,] 0.4728462 0.4791625 0.5174249 #>   [12,] 0.6391701 0.6428141 0.6521051 #>   [13,] 0.7484099 0.8250402 0.8269377 #>   [14,] 0.7748407 0.7980401 0.8388701 #>   [15,] 0.7917242 0.9028182 0.9428785 #>   [16,] 0.5752572 0.6092614 0.6170643 #>   [17,] 1.1157133 1.1325309 1.2260343 #>   [18,] 1.1738871 1.2047626 1.2493623 #>   [19,] 0.8101929 0.8153742 0.8666391 #>   [20,] 0.8942354 0.9170867 0.9406070 #>   [21,] 0.7679592 0.8315415 0.8362564 #>   [22,] 0.5952582 0.6054061 0.6283923 #>   [23,] 1.1035421 1.1079305 1.1206534 #>   [24,] 0.8386254 0.8934898 0.9070219 #>   [25,] 0.6499356 0.6717027 0.7609222 #>   [26,] 0.5153039 0.5173599 0.5214291 #>   [27,] 0.6851434 0.6874573 0.6959969 #>   [28,] 1.3380919 1.3685917 1.3697850 #>   [29,] 1.1426518 1.1731199 1.1800791 #>   [30,] 1.4691623 1.5219124 1.7067805 #>   [31,] 0.8504900 0.9212384 0.9514088 #>   [32,] 0.7604742 0.7704643 0.7825171 #>   [33,] 0.6463534 0.6484110 0.6524090 #>   [34,] 0.6053774 0.7260781 0.7403866 #>   [35,] 0.6213834 0.6250477 0.6361665 #>   [36,] 0.5544400 0.5898331 0.5905132 #>   [37,] 0.6442973 0.6486671 0.7239793 #>   [38,] 0.6666285 0.7418691 0.7655477 #>   [39,] 0.8753341 0.8833605 0.9101185 #>   [40,] 1.4608583 1.5344623 1.5489671 #>   [41,] 0.6072154 0.6273350 0.6327310 #>   [42,] 0.8356845 0.8746572 0.8938564 #>   [43,] 1.0088760 1.0565048 1.0860978 #>   [44,] 0.6087900 0.6472138 0.6707670 #>   [45,] 0.8745540 0.8862446 0.9694777 #>   [46,] 0.7720874 0.7777702 0.7953284 #>   [47,] 0.6180592 0.6535506 0.6675316 #>   [48,] 1.8318321 1.8865322 1.8953714 #>   [49,] 0.5204194 0.5359369 0.5701681 #>   [50,] 0.9284177 0.9562345 1.0131119 #>   [51,] 0.9308193 0.9890875 1.0622841 #>   [52,] 0.7938939 0.7954979 0.8376569 #>   [53,] 0.7818773 0.8034636 0.8228067 #>   [54,] 0.6509929 0.6661552 0.6800678 #>   [55,] 2.0538726 2.1317541 2.1414888 #>   [56,] 0.9540538 0.9562187 0.9990495 #>   [57,] 0.4782588 0.5191283 0.5612241 #>   [58,] 0.7394473 0.7430269 0.7517998 #>   [59,] 0.7281587 0.7302936 0.7458303 #>   [60,] 0.5606033 0.5638438 0.5943358 #>   [61,] 0.5223397 0.5431227 0.6076339 #>   [62,] 0.9715114 0.9817339 0.9929854 #>   [63,] 0.7830346 0.8995928 0.9058508 #>   [64,] 1.0809760 1.0872358 1.0980094 #>   [65,] 1.2707198 1.2747750 1.2792837 #>   [66,] 2.3322801 2.3509798 2.3775714 #>   [67,] 0.8227067 0.8658350 0.8675762 #>   [68,] 0.8862232 0.9086438 0.9326323 #>   [69,] 0.5532055 0.5832857 0.5958279 #>   [70,] 0.9503841 1.0499936 1.0564432 #>   [71,] 0.5842304 0.5898331 0.5949584 #>   [72,] 0.5167610 0.5365861 0.5520164 #>   [73,] 0.7370662 0.7416555 0.7786343 #>   [74,] 0.7788971 0.8195319 0.8375075 #>   [75,] 0.6830116 0.7260781 0.8030690 #>   [76,] 0.6410033 0.6486726 0.6507399 #>   [77,] 1.0849191 1.1570917 1.1799575 #>   [78,] 0.6186034 0.6986666 0.7491355 #>   [79,] 0.8936649 0.9049592 0.9888519 #>   [80,] 1.4094389 1.4309318 1.4483944 #>   [81,] 0.6741293 0.6855690 0.6888587 #>   [82,] 0.5253988 0.5340103 0.5484523 #>   [83,] 0.5937230 0.6340997 0.7173358 #>   [84,] 0.7419906 0.7479412 0.7693826 #>   [85,] 1.7109535 1.7109655 1.7197670 #>   [86,] 1.1738157 1.2645900 1.2719358 #>   [87,] 0.9320427 1.0310829 1.0392322 #>   [88,] 0.6650779 0.6908140 0.7042517 #>   [89,] 1.0861177 1.0938254 1.1762737 #>   [90,] 0.5788120 0.5816343 0.5898901 #>   [91,] 0.6261939 0.6658956 0.6693295 #>   [92,] 0.7786373 0.7913647 0.8038752 #>   [93,] 1.6546359 1.7268839 1.7471799 #>   [94,] 0.9025041 0.9224546 0.9475282 #>   [95,] 0.9144791 0.9172980 0.9524249 #>   [96,] 0.5697815 0.5882875 0.5989974 #>   [97,] 0.7248038 0.7800295 0.8306923 #>   [98,] 0.6654831 0.6700051 0.6742533 #>   [99,] 0.7663296 0.8263312 0.8632101 #>  [100,] 0.9644895 1.0009346 1.0388985 #>  [101,] 0.6912188 0.7383045 0.7629608 #>  [102,] 0.5375487 0.5490596 0.5728414 #>  [103,] 1.1437848 1.1482615 1.1538701 #>  [104,] 0.9665359 0.9722721 0.9805070 #>  [105,] 0.6741293 0.6791943 0.7312454 #>  [106,] 0.8549446 0.8910378 0.9114133 #>  [107,] 0.6107082 0.6669981 0.7056629 #>  [108,] 0.9314380 0.9600419 0.9749777 #>  [109,] 0.8040092 0.8153742 0.8634589 #>  [110,] 0.9203174 0.9354275 0.9366638 #>  [111,] 0.6461247 0.6492355 0.6591790 #>  [112,] 0.7391359 0.7436581 0.7580091 #>  [113,] 1.3924626 1.4145611 1.4631492 #>  [114,] 0.8227168 0.8303572 0.8494294 #>  [115,] 1.3866131 1.5108230 1.7837379 #>  [116,] 0.6703649 0.6785736 0.6903977 #>  [117,] 1.0988460 1.1038295 1.1188710 #>  [118,] 0.7722804 0.7845305 0.7907006 #>  [119,] 1.4531171 1.4585338 1.4593984 #>  [120,] 1.0994014 1.1223253 1.1257561 #>  [121,] 1.4352439 1.4813850 1.5051005 #>  [122,] 0.8658350 0.8862446 0.9119278 #>  [123,] 1.1510393 1.1605035 1.1642687 #>  [124,] 0.7156121 0.7236712 0.7613445 #>  [125,] 0.7670257 0.7769196 0.7845230 #>  [126,] 0.4527250 0.4725805 0.5035463 #>  [127,] 1.2964606 1.3230151 1.3353740 #>  [128,] 0.7555328 0.7636798 0.8587554 #>  [129,] 0.9467496 1.0087915 1.0191723 #>  [130,] 0.8155540 0.8199929 0.8459243 #>  [131,] 0.7132001 0.7181461 0.7187655 #>  [132,] 0.5326797 0.5362227 0.5503241 #>  [133,] 1.4288741 1.4541880 1.4798004 #>  [134,] 1.0452232 1.0751312 1.0772496 #>  [135,] 0.7684911 0.8075786 0.8132140 #>  [136,] 1.1191224 1.1508822 1.1602510 #>  [137,] 0.5349382 0.5484924 0.5504738 #>  [138,] 0.5727305 0.5819549 0.6056152 #>  [139,] 0.6650779 0.6735275 0.6765216 #>  [140,] 0.7577666 0.7723086 0.7822906 #>  [141,] 0.5510847 0.5511329 0.5571369 #>  [142,] 0.6370872 0.6501220 0.6631728 #>  [143,] 0.7603446 0.7637158 0.7690662 #>  [144,] 1.5892793 1.5974954 1.6027663 #>  [145,] 0.6775295 0.6960622 0.7113796 #>  [146,] 0.8754039 0.8952966 0.9070219 #>  [147,] 0.5381647 0.5524687 0.5632462 #>  [148,] 1.7913834 1.7958706 1.8233682 #>  [149,] 0.5718878 0.6198611 0.6295082 #>  [150,] 1.0618186 1.1023741 1.1164764 #>  [151,] 0.7322811 0.7561738 0.7734669 #>  [152,] 0.7181750 0.7453587 0.7634279 #>  [153,] 0.8215973 0.8383924 0.8390905 #>  [154,] 0.9190296 0.9543013 0.9765287 #>  [155,] 0.8030532 0.8091895 0.8607360 #>  [156,] 0.6188865 0.6237299 0.6313528 #>  [157,] 0.6152107 0.6285139 0.6384929 #>  [158,] 0.5579795 0.5851218 0.5929161 #>  [159,] 1.0544737 1.0765061 1.1460625 #>  [160,] 0.9992330 1.0226837 1.0620889 #>  [161,] 0.8033828 0.8086648 0.8097833 #>  [162,] 0.6728959 0.7271708 0.7428456 #>  [163,] 1.2688936 1.2877872 1.2910252 #>  [164,] 1.1081842 1.1499937 1.1910182 #>  [165,] 0.7270978 0.7485665 0.7800670 #>  [166,] 0.8804208 0.9081276 0.9867894 #>  [167,] 0.8850784 0.9512456 0.9658613 #>  [168,] 0.8221614 0.8270234 0.8313609 #>  [169,] 0.6673903 0.6753057 0.6916937 #>  [170,] 0.8287754 0.8334650 0.8663145 #>  [171,] 0.4784632 0.4977180 0.5060485 #>  [172,] 0.7295211 0.7620071 0.7900074 #>  [173,] 0.8028637 0.8621327 0.8870274 #>  [174,] 1.0441893 1.0889704 1.1028283 #>  [175,] 0.5236046 0.5259327 0.5491069 #>  [176,] 0.8188164 0.8307215 0.8938986 #>  [177,] 1.1377014 1.1704993 1.2269578 #>  [178,] 0.7666983 0.7808829 0.7863435 #>  [179,] 0.5781081 0.5864768 0.6119961 #>  [180,] 0.6684257 0.6793333 0.6804983 #>  [181,] 0.6226523 0.6238276 0.6898764 #>  [182,] 0.5550434 0.5717689 0.5847957 #>  [183,] 0.8940677 0.9225411 0.9311501 #>  [184,] 0.7682990 0.8138713 0.8226582 #>  [185,] 0.7322811 0.7508194 0.7520306 #>  [186,] 0.8890571 0.8981349 0.9084243 #>  [187,] 0.5196713 0.5282714 0.5373571 #>  [188,] 0.6518870 0.6688299 0.6888406 #>  [189,] 0.5439155 0.5835190 0.5905297 #>  [190,] 0.8662879 0.9156486 0.9209012 #>  [191,] 0.9680457 0.9818804 1.0984766 #>  [192,] 0.6100562 0.6574053 0.6977313 #>  [193,] 0.6299190 0.6533712 0.6996170 #>  [194,] 1.3598875 1.3820306 1.3876909 #>  [195,] 0.9007631 0.9463040 0.9534350 #>  [196,] 1.3924251 1.4172594 1.4256736 #>  [197,] 0.8098582 0.8446494 0.8494731 #>  [198,] 1.6432114 1.6801941 1.7616549 #>  [199,] 0.4233398 0.4351472 0.4520954 #>  [200,] 0.7301079 0.7462538 0.7569860 #>  [201,] 0.8280891 0.8304855 0.8456212 #>  [202,] 0.7643124 0.7644988 0.7702338 #>  [203,] 0.4728409 0.5365861 0.5993978 #>  [204,] 1.0120603 1.0464350 1.0913834 #>  [205,] 0.5698755 0.6007470 0.6253263 #>  [206,] 0.7612812 0.7967973 0.8035596 #>  [207,] 0.6218870 0.6411571 0.6464196 #>  [208,] 1.0938698 1.1165971 1.1204272 #>  [209,] 0.5823686 0.5873653 0.5945813 #>  [210,] 0.8088331 0.8142593 0.8242787 #>  [211,] 0.5947140 0.6052324 0.6247480 #>  [212,] 1.1738184 1.1884479 1.1989771 #>  [213,] 0.6620367 0.6853269 0.6878145 #>  [214,] 0.6931687 0.7049160 0.7166334 #>  [215,] 0.5289547 0.5335525 0.5415440 #>  [216,] 0.4823674 0.5035156 0.5272150 #>  [217,] 0.8930139 0.8997597 0.9560215 #>  [218,] 0.6843452 0.6906729 0.7133703 #>  [219,] 0.7437423 0.7586807 0.7829158 #>  [220,] 0.6276349 0.6815746 0.6918933 #>  [221,] 0.7359306 0.7514510 0.7567254 #>  [222,] 0.7406754 0.7574691 0.7644988 #>  [223,] 1.1981253 1.2137760 1.2194959 #>  [224,] 1.8582750 1.8589938 1.8700240 #>  [225,] 0.7660510 0.7821113 0.7864713 #>  [226,] 0.7906955 0.7971930 0.7984571 #>  [227,] 0.5453156 0.5765516 0.5770612 #>  [228,] 0.7225098 0.7711759 0.7814596 #>  [229,] 0.7605628 0.7644280 0.7909906 #>  [230,] 0.9904073 0.9913285 1.0032526 #>  [231,] 0.9773544 0.9799815 0.9822186 #>  [232,] 0.5894910 0.5921933 0.5933701 #>  [233,] 0.5213464 0.5367433 0.5384073 #>  [234,] 0.8691090 0.8714451 0.9227064 #>  [235,] 0.6380638 0.6991772 0.7067346 #>  [236,] 0.6803894 0.6830390 0.6978630 #>  [237,] 0.7636190 0.7771513 0.7893205 #>  [238,] 0.8048265 0.8090614 0.8153849 #>  [239,] 0.8843634 0.8892762 0.9204034 #>  [240,] 1.5516770 1.5633564 1.6086422 #>  [241,] 0.6107934 0.6295825 0.6446328 #>  [242,] 0.9927634 1.0604338 1.0605102 #>  [243,] 1.0734164 1.0753639 1.1013512 #>  [244,] 0.7495135 0.8197502 0.8532896 #>  [245,] 0.5487519 0.5511725 0.5819298 #>  [246,] 0.6637663 0.6931687 0.7309187 #>  [247,] 1.0330657 1.0978647 1.0988272 #>  [248,] 0.6736959 0.6843156 0.7126224 #>  [249,] 0.9634691 0.9727902 1.0193162 #>  [250,] 0.4853105 0.4872834 0.5387016 #>  [251,] 0.6220457 0.6250400 0.6301557 #>  [252,] 0.6021441 0.6235238 0.6635223 #>  [253,] 0.6848305 0.6891822 0.6906879 #>  [254,] 0.5517512 0.5670954 0.5741350 #>  [255,] 0.8150182 0.9002899 0.9213481 #>  [256,] 0.7483985 0.7565116 0.8372804 #>  [257,] 0.8845291 0.9387805 0.9504426 #>  [258,] 0.6459324 0.6603350 0.6802833 #>  [259,] 0.5270270 0.5350110 0.6002058 #>  [260,] 1.6175442 1.6479599 1.6647777 #>  [261,] 0.6276901 0.6905919 0.6907278 #>  [262,] 0.7909053 0.8032211 0.8341997 #>  [263,] 0.6433826 0.6707151 0.6963355 #>  [264,] 0.7604409 0.7891073 0.7984571 #>  [265,] 0.8040342 0.8260969 0.8602720 #>  [266,] 0.9635402 0.9865430 0.9878194 #>  [267,] 0.7629501 0.7774543 0.7960540 #>  [268,] 1.0699081 1.0795759 1.0825100 #>  [269,] 0.5830881 0.5921651 0.5989667 #>  [270,] 1.0060865 1.0746375 1.0815351 #>  [271,] 1.0611122 1.1365183 1.2924400 #>  [272,] 0.7044361 0.7118987 0.7846101 #>  [273,] 1.0508621 1.0680446 1.1125986 #>  [274,] 0.8242227 0.8513719 0.8658119 #>  [275,] 0.5397702 0.5497424 0.5574720 #>  [276,] 1.0576719 1.1390817 1.1773490 #>  [277,] 0.5425838 0.5619022 0.5933854 #>  [278,] 0.5464446 0.5643170 0.5823686 #>  [279,] 1.4776904 1.4893667 1.6189698 #>  [280,] 0.6315985 0.6565097 0.6600875 #>  [281,] 0.6691838 0.7122396 0.7267462 #>  [282,] 0.8707372 0.8835613 0.9032858 #>  [283,] 0.5962707 0.5968502 0.6012320 #>  [284,] 0.9141609 0.9224547 0.9692338 #>  [285,] 0.6512225 0.7013682 0.7071312 #>  [286,] 1.0129625 1.0551798 1.0697862 #>  [287,] 0.7433781 0.7450708 0.7981849 #>  [288,] 0.8816231 0.8979458 0.9167455 #>  [289,] 0.6525004 0.7274702 0.7623799 #>  [290,] 1.1570569 1.1624001 1.1777887 #>  [291,] 0.6535996 0.6753436 0.6893538 #>  [292,] 0.7083004 0.7372051 0.7661598 #>  [293,] 0.7674898 0.8254234 0.8746039 #>  [294,] 0.6094846 0.6147029 0.6342477 #>  [295,] 0.7584290 0.7764967 0.8232042 #>  [296,] 0.6220457 0.6358293 0.6460050 #>  [297,] 0.6487529 0.6658956 0.6859822 #>  [298,] 0.9952511 0.9981488 1.0012794 #>  [299,] 0.6888406 0.7575577 0.7807727 #>  [300,] 0.7697777 0.7802768 0.7846101 #>  [301,] 0.6090910 0.6233790 0.6289061 #>  [302,] 0.5476523 0.5767624 0.5874684 #>  [303,] 1.1927898 1.2393642 1.2596086 #>  [304,] 0.5741350 0.5843822 0.6039370 #>  [305,] 0.8725756 0.8761842 0.9870775 #>  [306,] 1.1886257 1.2384301 1.2404036 #>  [307,] 0.7545410 0.7716558 0.7993163 #>  [308,] 0.8993827 0.9133287 0.9512006 #>  [309,] 0.7741098 0.7960540 0.8316466 #>  [310,] 0.9532749 0.9818804 0.9937513 #>  [311,] 0.8261331 0.9035995 0.9048643 #>  [312,] 0.8623926 0.8633956 0.9058508 #>  [313,] 1.2365669 1.2507923 1.2581840 #>  [314,] 0.7196987 0.7263979 0.7353692 #>  [315,] 0.8270969 0.8577768 0.8802109 #>  [316,] 1.0396816 1.1702557 1.3068338 #>  [317,] 1.2876194 1.2890824 1.2917117 #>  [318,] 0.7287716 0.7434493 0.7504270 #>  [319,] 0.7759097 0.8835103 0.9400326 #>  [320,] 0.6529317 0.6535996 0.6641744 #>  [321,] 2.2046752 2.2883287 2.2891050 #>  [322,] 1.0929224 1.1042936 1.1130425 #>  [323,] 0.9196681 0.9259963 0.9380048 #>  [324,] 0.7954979 0.8009953 0.8079089 #>  [325,] 0.5908313 0.6034597 0.6055667 #>  [326,] 0.5466916 0.5606437 0.5630821 #>  [327,] 0.9511976 0.9544794 0.9598556 #>  [328,] 0.7720177 0.8427284 0.8857940 #>  [329,] 0.6605130 0.6784563 0.6827301 #>  [330,] 0.9515816 0.9521452 0.9786367 #>  [331,] 0.6610789 0.6682442 0.6785809 #>  [332,] 0.9024810 0.9158734 0.9696024 #>  [333,] 0.8709436 0.8988740 0.9574391 #>  [334,] 0.8633021 0.8675859 0.8802950 #>  [335,] 0.8426035 0.8576801 0.8656084 #>  [336,] 0.7994687 0.8032544 0.8400713 #>  [337,] 0.5477920 0.6211374 0.6288471 #>  [338,] 0.5490596 0.5512090 0.5557181 #>  [339,] 0.8863414 0.9149011 0.9245183 #>  [340,] 0.5851902 0.6142115 0.6188756 #>  [341,] 0.4388974 0.4755345 0.5050554 #>  [342,] 0.9426328 0.9629206 1.0071405 #>  [343,] 0.9035131 0.9165653 0.9632095 #>  [344,] 1.5059148 1.5488654 1.6104132 #>  [345,] 0.7236259 0.7390550 0.7693271 #>  [346,] 0.6658869 0.6702071 0.6833914 #>  [347,] 0.6053774 0.6087139 0.6907278 #>  [348,] 0.8354676 0.8420912 0.8477143 #>  [349,] 0.7040721 0.7223338 0.7236977 #>  [350,] 1.0389576 1.1044896 1.1322917 #>  [351,] 0.5747082 0.5894348 0.6130390 #>  [352,] 1.1133454 1.1404421 1.1446339 #>  [353,] 0.5571369 0.5697815 0.5725576 #>  [354,] 0.7912255 0.8132140 0.8198499 #>  [355,] 0.7012525 0.7316215 0.7814596 #>  [356,] 0.5065806 0.5202146 0.5616851 #>  [357,] 1.0883645 1.1108617 1.1506142 #>  [358,] 0.8319254 0.8385719 0.8843634 #>  [359,] 0.9569825 0.9927634 1.0129071 #>  [360,] 0.7766936 0.8323824 0.8698635 #>  [361,] 0.9773899 1.0378372 1.0459183 #>  [362,] 0.8287203 0.8833319 0.8888685 #>  [363,] 0.6770344 0.7064431 0.7251633 #>  [364,] 0.6357345 0.6486692 0.6546303 #>  [365,] 1.2041491 1.2064484 1.2064980 #>  [366,] 0.8057980 0.8151593 0.8760055 #>  [367,] 0.8344953 0.8372496 0.9261674 #>  [368,] 0.6463944 0.6639979 0.6799286 #>  [369,] 0.4825787 0.4959291 0.5045053 #>  [370,] 0.9010296 0.9375211 0.9536526 #>  [371,] 0.6571278 0.6664223 0.6824648 #>  [372,] 0.8258902 0.8345804 0.8518768 #>  [373,] 0.5075377 0.5226248 0.5554289 #>  [374,] 0.7899087 0.8323980 0.8674109 #>  [375,] 0.6741648 0.7214314 0.7285001 #>  [376,] 0.9201825 0.9208788 1.0063870 #>  [377,] 0.8642754 0.8915478 0.9157344 #>  [378,] 0.8933578 0.9278102 0.9309171 #>  [379,] 1.2417422 1.3116953 1.3340592 #>  [380,] 0.6111144 0.6754760 0.6771073 #>  [381,] 1.6099989 1.6130870 1.6317790 #>  [382,] 0.8189620 0.8296234 0.8481232 #>  [383,] 0.6260967 0.6353863 0.6404342 #>  [384,] 0.8061316 0.8456496 0.8602720 #>  [385,] 1.0455255 1.0491330 1.1277168 #>  [386,] 0.7328742 0.7337955 0.7596948 #>  [387,] 1.4650276 1.5383971 1.5644270 #>  [388,] 1.3382509 1.3781026 1.3838864 #>  [389,] 0.9157384 0.9437850 0.9446861 #>  [390,] 1.2651158 1.2697303 1.2746075 #>  [391,] 0.6388887 0.6607412 0.6726971 #>  [392,] 0.7403898 0.7414683 0.7589265 #>  [393,] 0.4812936 0.4872777 0.5038522 #>  [394,] 0.5914201 0.6119961 0.6199128 #>  [395,] 0.6579719 0.6615496 0.6851308 #>  [396,] 1.5937920 1.6238089 1.6440818 #>  [397,] 0.7460704 0.7517998 0.7527882 #>  [398,] 0.7940036 0.8047607 0.8513719 #>  [399,] 0.7570359 0.7756130 0.7922161 #>  [400,] 0.9854207 0.9895429 0.9998149 #>  [401,] 0.5167610 0.5465261 0.5868285 #>  [402,] 0.7846508 0.7937955 0.8148436 #>  [403,] 0.7268873 0.7280657 0.7525404 #>  [404,] 0.6330107 0.6661852 0.6953608 #>  [405,] 1.0971362 1.1152260 1.1162727 #>  [406,] 0.7546876 0.7723689 0.7854097 #>  [407,] 0.6758513 0.6867132 0.6969409 #>  [408,] 1.7792452 1.7871648 1.8003067 #>  [409,] 0.5467686 0.5619022 0.5630662 #>  [410,] 0.6419283 0.6509186 0.6561719 #>  [411,] 0.4937993 0.5183078 0.5226248 #>  [412,] 0.8619195 0.9367791 0.9863891 #>  [413,] 0.8408119 0.9004344 0.9094613 #>  [414,] 1.4462442 1.5191790 1.5960111 #>  [415,] 1.0282234 1.0363106 1.0392569 #>  [416,] 1.1680569 1.1860284 1.2060463 #>  [417,] 0.5396879 0.5544400 0.5652803 #>  [418,] 0.9826264 0.9990696 1.0327941 #>  [419,] 0.6828962 0.6882290 0.7406037 #>  [420,] 1.0423711 1.0708421 1.1475057 #>  [421,] 1.4560769 1.5086892 1.5410421 #>  [422,] 0.9122388 0.9175600 0.9180993 #>  [423,] 0.5535543 0.5795233 0.5888208 #>  [424,] 0.7349221 0.7355700 0.7601878 #>  [425,] 0.9331486 0.9482927 0.9510739 #>  [426,] 0.6506076 0.6518870 0.6990980 #>  [427,] 0.7976090 0.7984942 0.8129376 #>  [428,] 0.5783562 0.6216296 0.6387553 #>  [429,] 0.5511725 0.5555723 0.5573616 #>  [430,] 0.5608975 0.5652803 0.6061488 #>  [431,] 0.7874333 0.8156381 0.8230401 #>  [432,] 1.6187895 1.6189698 1.6371106 #>  [433,] 0.6701464 0.6751116 0.6787133 #>  [434,] 0.8978107 0.9478926 0.9633113 #>  [435,] 1.0747769 1.1087100 1.1483377 #>  [436,] 0.5616851 0.5703322 0.6079108 #>  [437,] 0.7836395 0.7892911 0.8032808 #>  [438,] 0.6634779 0.6765694 0.6975883 #>  [439,] 0.8405354 0.8553806 0.9009329 #>  [440,] 0.6063722 0.6347703 0.6375859 #>  [441,] 0.6576066 0.6715552 0.6733660 #>  [442,] 0.8530085 0.9561014 0.9744592 #>  [443,] 0.8726903 0.8786906 0.9756503 #>  [444,] 0.7223175 0.7263434 0.7335611 #>  [445,] 0.6029121 0.6039898 0.6376112 #>  [446,] 0.7890140 0.8228067 0.8706563 #>  [447,] 1.0453324 1.0782110 1.1109331 #>  [448,] 0.8270851 0.8295519 0.8883850 #>  [449,] 0.7503351 0.7971930 0.8419694 #>  [450,] 0.5368071 0.5484523 0.5543499 #>  [451,] 0.5732995 0.5743266 0.6582784 #>  [452,] 0.5496058 0.5579422 0.5783092 #>  [453,] 0.6248886 0.6603403 0.6670747 #>  [454,] 0.5625470 0.5635034 0.5875655 #>  [455,] 0.5361889 0.5498735 0.6056152 #>  [456,] 0.8357403 0.8410829 0.8615553 #>  [457,] 0.8621679 0.8771359 0.8846594 #>  [458,] 0.6352698 0.6449340 0.6459000 #>  [459,] 0.5055227 0.5123667 0.5161241 #>  [460,] 0.6926893 0.8065382 0.8586630 #>  [461,] 0.7287877 0.7393771 0.8324578 #>  [462,] 0.7570359 0.7575838 0.7645066 #>  [463,] 0.9127416 0.9832071 1.0022952 #>  [464,] 0.6054268 0.6190611 0.6824939 #>  [465,] 0.5335152 0.5547946 0.5662010 #>  [466,] 0.9343411 0.9717732 1.0038182 #>  [467,] 0.8753140 0.8768371 0.9244624 #>  [468,] 0.5404543 0.5651288 0.5940705 #>  [469,] 0.7435963 0.7500401 0.7508839 #>  [470,] 0.7071603 0.7181251 0.7263124 #>  [471,] 0.5670688 0.5702484 0.5831934 #>  [472,] 0.7806069 0.8312343 0.8468565 #>  [473,] 0.8551404 0.8849186 0.8934898 #>  [474,] 1.4862609 1.4911178 1.5120394 #>  [475,] 0.6064133 0.6147124 0.6414329 #>  [476,] 0.7034330 0.7316215 0.7425011 #>  [477,] 0.8214430 0.8625929 0.8709809 #>  [478,] 0.9926344 1.0138954 1.0335632 #>  [479,] 0.9644825 1.0255381 1.0298959 #>  [480,] 0.6520738 0.6533701 0.6576646 #>  [481,] 0.9616430 0.9652375 1.0086554 #>  [482,] 1.5033166 1.5321330 1.5653016 #>  [483,] 0.8738917 0.8743604 0.8744900 #>  [484,] 0.7059814 0.7428899 0.7486855 #>  [485,] 0.7426668 0.7892034 0.8080300 #>  [486,] 0.5751205 0.5825610 0.6078724 #>  [487,] 1.4271493 1.4394133 1.4998741 #>  [488,] 0.5496275 0.5550662 0.5935637 #>  [489,] 0.6683978 0.6909007 0.6941921 #>  [490,] 0.5141717 0.5552976 0.5581979 #>  [491,] 0.9351346 0.9468954 0.9597483 #>  [492,] 1.0884489 1.1264002 1.1539471 #>  [493,] 0.9805070 0.9916806 1.0303063 #>  [494,] 0.7410254 0.7864178 0.8397235 #>  [495,] 1.2917359 1.3225956 1.3256244 #>  [496,] 0.7551055 0.8440635 0.8453919 #>  [497,] 0.8478186 0.8683310 0.8964971 #>  [498,] 0.7622656 0.7666983 0.7875852 #>  [499,] 1.2122231 1.2323913 1.2558674 #>  [500,] 1.1553683 1.1562468 1.1610898 #>  [501,] 0.6477206 0.6733660 0.6800716 #>  [502,] 1.0662827 1.0964439 1.1826947 #>  [503,] 0.9131738 0.9482927 0.9890875 #>  [504,] 0.5287112 0.5349382 0.5406950 #>  [505,] 0.7140120 0.7865174 0.8006153 #>  [506,] 0.6004168 0.6014804 0.6115729 #>  [507,] 0.9723882 0.9757120 0.9817033 #>  [508,] 0.5416037 0.6288471 0.6575199 #>  [509,] 1.1573021 1.1888363 1.1977335 #>  [510,] 0.9167299 0.9295345 0.9444466 #>  [511,] 0.5862375 0.6316765 0.6346401 #>  [512,] 0.5287112 0.5582370 0.5592805 #>  [513,] 0.7692819 0.7838987 0.7856236 #>  [514,] 1.2339313 1.2708054 1.3347680 #>  [515,] 0.9659354 0.9884898 1.0184635 #>  [516,] 1.0063013 1.0158858 1.0378929 #>  [517,] 0.4316846 0.4420457 0.4488865 #>  [518,] 0.7483985 0.8386657 0.8645267 #>  [519,] 1.2231208 1.2258288 1.2447385 #>  [520,] 0.5398494 0.5400601 0.5660738 #>  [521,] 0.6847187 0.6857364 0.6866129 #>  [522,] 0.7966122 0.8458085 0.8899879 #>  [523,] 0.6546303 0.6809118 0.6979180 #>  [524,] 1.1227989 1.1343176 1.1357573 #>  [525,] 0.8685616 0.9474149 0.9729045 #>  [526,] 0.7584128 0.7668494 0.8664414 #>  [527,] 0.6073812 0.6202167 0.7478557 #>  [528,] 1.5008600 1.5743373 1.5917114 #>  [529,] 0.5465261 0.5944086 0.6091098 #>  [530,] 0.5795317 0.5995565 0.6189846 #>  [531,] 1.1312419 1.1645240 1.1696267 #>  [532,] 1.0709256 1.1053015 1.1682558 #>  [533,] 0.8839088 0.9868970 0.9883690 #>  [534,] 0.8785422 0.8835613 0.8870765 #>  [535,] 1.4538106 1.4607659 1.5629357 #>  [536,] 1.0967143 1.1063837 1.1381811 #>  [537,] 0.5903709 0.5930483 0.6600875 #>  [538,] 0.5970103 0.6444005 0.6503866 #>  [539,] 0.6423011 0.6550609 0.6589192 #>  [540,] 0.8542343 0.8753341 0.8872211 #>  [541,] 0.6670747 0.7117432 0.7144222 #>  [542,] 0.6929203 0.6959969 0.7207744 #>  [543,] 0.7454272 0.7662273 0.7864713 #>  [544,] 1.3013286 1.3057057 1.3076114 #>  [545,] 0.8149552 0.8458970 0.8526290 #>  [546,] 0.8626471 0.9500185 0.9924999 #>  [547,] 0.8625060 0.8992361 0.9155426 #>  [548,] 0.8510165 0.8882874 0.8950968 #>  [549,] 0.7007837 0.7117042 0.7278251 #>  [550,] 1.4175486 1.4183603 1.4251084 #>  [551,] 0.7305995 0.7599129 0.7795140 #>  [552,] 0.7639702 0.7640405 0.8132027 #>  [553,] 0.6636443 0.6721305 0.6758197 #>  [554,] 0.8248848 0.8510496 0.8883368 #>  [555,] 0.6130390 0.6192922 0.6359053 #>  [556,] 0.5605822 0.5837628 0.5912283 #>  [557,] 0.7942786 0.8834579 0.9039262 #>  [558,] 0.8875944 0.8989040 0.9071558 #>  [559,] 0.6332539 0.6348530 0.6515251 #>  [560,] 0.6837828 0.6859822 0.8104168 #>  [561,] 0.9549994 1.0042840 1.0594239 #>  [562,] 1.3845418 1.4168116 1.4371099 #>  [563,] 0.7464719 0.7923107 0.8227350 #>  [564,] 1.0101164 1.0258472 1.0549060 #>  [565,] 0.6333903 0.6711419 0.6720859 #>  [566,] 0.6954478 0.6959877 0.6993548 #>  [567,] 0.8319038 0.8849126 0.9717576 #>  [568,] 0.7545691 0.7720177 0.7848520 #>  [569,] 0.5888208 0.5994616 0.6041024 #>  [570,] 0.9077130 0.9372087 0.9758108 #>  [571,] 1.0012794 1.0037721 1.0321857 #>  [572,] 1.3264270 1.3532990 1.3536483 #>  [573,] 0.9761622 1.0076944 1.0232481 #>  [574,] 0.6635223 0.6638090 0.7000336 #>  [575,] 0.9713259 0.9979206 1.0112694 #>  [576,] 0.8422932 0.8570954 0.8897100 #>  [577,] 0.6109260 0.6191619 0.6658626 #>  [578,] 0.5501456 0.5621668 0.5978607 #>  [579,] 0.5543499 0.5973498 0.6016111 #>  [580,] 0.7199717 0.7366440 0.8080158 #>  [581,] 1.2116146 1.2140974 1.2188193 #>  [582,] 1.1291929 1.1661646 1.1885185 #>  [583,] 1.2213021 1.2493855 1.2814437 #>  [584,] 1.1049774 1.1221333 1.1777784 #>  [585,] 0.8610990 0.9141609 0.9437487 #>  [586,] 0.5951965 0.6047097 0.6170643 #>  [587,] 0.5030827 0.5070540 0.5071378 #>  [588,] 0.8901724 0.9181058 0.9258692 #>  [589,] 1.0637614 1.0689244 1.1123846 #>  [590,] 1.2631508 1.2968904 1.3303887 #>  [591,] 0.5855434 0.5962707 0.5995747 #>  [592,] 0.8742159 0.8802603 0.8852509 #>  [593,] 0.4873019 0.5032413 0.5206082 #>  [594,] 0.5661688 0.6086897 0.6108013 #>  [595,] 1.3945674 1.4126398 1.4319402 #>  [596,] 0.9189542 0.9279540 0.9488897 #>  [597,] 0.7237203 0.7491355 0.7678326 #>  [598,] 0.7173358 0.7432223 0.7588257 #>  [599,] 0.9049789 0.9211509 0.9461370 #>  [600,] 0.6608820 0.6736959 0.7077907 #>  [601,] 0.6627058 0.6915680 0.7396769 #>  [602,] 0.6199128 0.6218870 0.6226807 #>  [603,] 0.7482699 0.8123860 0.8293967 #>  [604,] 0.8420912 0.8549691 0.8659730 #>  [605,] 0.5856348 0.6171973 0.6351219 #>  [606,] 0.9989445 1.0003386 1.0332768 #>  [607,] 0.7764967 0.8234866 0.8280891 #>  [608,] 1.0069627 1.0245008 1.0807630 #>  [609,] 1.2542851 1.2804368 1.2963717 #>  [610,] 0.5738458 0.5797049 0.5997129 #>  [611,] 0.6723270 0.7363090 0.7569860 #>  [612,] 0.7263979 0.9061079 0.9134057 #>  [613,] 0.8804708 0.8940233 0.9073722 #>  [614,] 1.0641077 1.1721255 1.1732212 #>  [615,] 0.7336747 0.8311605 0.8329012 #>  [616,] 0.8845616 0.9152447 0.9330664 #>  [617,] 0.7197067 0.7305962 0.7572252 #>  [618,] 0.8048265 0.8205040 0.8275558 #>  [619,] 0.4786698 0.4845958 0.5035667 #>  [620,] 0.8416545 0.8470399 0.8724603 #>  [621,] 0.6636443 0.6639348 0.6826683 #>  [622,] 1.0171585 1.0756057 1.1334514 #>  [623,] 0.6592357 0.6686443 0.7176732 #>  [624,] 0.9657491 1.0284618 1.0346627 #>  [625,] 0.5922208 0.5929161 0.5932781 #>  [626,] 0.7310683 0.7340320 0.7562826 #>  [627,] 0.6469143 0.6678411 0.6804983 #>  [628,] 0.7019460 0.7114233 0.7269498 #>  [629,] 0.4825787 0.5479253 0.5513528 #>  [630,] 1.3747536 1.3845418 1.4448941 #>  [631,] 0.7707528 0.8325942 0.8330455 #>  [632,] 0.7966206 0.8166106 0.8272706 #>  [633,] 0.9831734 1.0124672 1.0212720 #>  [634,] 1.3133835 1.3805684 1.3933321 #>  [635,] 0.7590510 0.7800626 0.7833223 #>  [636,] 0.7386397 0.7519194 0.7609222 #>  [637,] 0.7444125 0.8203769 0.8225556 #>  [638,] 0.9545943 0.9562345 0.9971691 #>  [639,] 1.0534279 1.0824595 1.1102820 #>  [640,] 1.2651980 1.2752177 1.3109886 #>  [641,] 0.5557181 0.5581979 0.5727305 #>  [642,] 1.3021498 1.3192696 1.3721778 #>  [643,] 1.4531171 1.5276118 1.5329399 #>  [644,] 1.0708421 1.0748476 1.0783535 #>  [645,] 0.7700234 0.8057168 0.8176896 #>  [646,] 1.5139554 1.5518862 1.5578423 #>  [647,] 0.5795233 0.5813884 0.5815678 #>  [648,] 0.5476523 0.5508378 0.5677213 #>  [649,] 1.0467517 1.0939052 1.2491191 #>  [650,] 0.8633761 0.8903403 0.9526236 #>  [651,] 1.2201146 1.3044105 1.3073908 #>  [652,] 1.0289498 1.0328940 1.0356397 #>  [653,] 0.4777062 0.4784632 0.4911316 #>  [654,] 1.1679600 1.1923046 1.2517695 #>  [655,] 0.6105010 0.6201376 0.6579719 #>  [656,] 0.5976575 0.5990855 0.6061488 #>  [657,] 0.4819766 0.4986801 0.5196713 #>  [658,] 1.0968150 1.0969776 1.1047642 #>  [659,] 1.8323839 1.8926526 1.9189571 #>  [660,] 0.5952646 0.6003499 0.6412719 #>  [661,] 0.8343053 0.9055534 0.9166336 #>  [662,] 1.3188902 1.3716140 1.4060086 #>  [663,] 1.6302109 1.6843124 1.7014641 #>  [664,] 0.8110540 0.8202503 0.8906375 #>  [665,] 1.0367778 1.0399326 1.0714557 #>  [666,] 0.5477253 0.5882823 0.6152161 #>  [667,] 0.7098156 0.7754344 0.7965556 #>  [668,] 1.0722786 1.0885365 1.1431275 #>  [669,] 0.5161241 0.5282714 0.5289547 #>  [670,] 0.9034018 0.9586867 0.9840508 #>  [671,] 0.5583854 0.5777105 0.6292168 #>  [672,] 1.0679075 1.0699619 1.1347569 #>  [673,] 0.7547993 0.8129116 0.8989040 #>  [674,] 0.6605130 0.6723129 0.6744821 #>  [675,] 0.5132644 0.5718878 0.6121575 #>  [676,] 0.8460913 0.8616450 0.8766653 #>  [677,] 0.7792140 0.8075786 0.8237526 #>  [678,] 1.1099135 1.1387725 1.1501422 #>  [679,] 1.1123048 1.1258676 1.1884289 #>  [680,] 0.6987655 0.7456504 0.7741416 #>  [681,] 1.8877751 1.8899521 1.9121167 #>  [682,] 0.4995545 0.5107703 0.5153333 #>  [683,] 0.9951674 1.0182434 1.0269506 #>  [684,] 0.9510074 0.9912093 1.0958731 #>  [685,] 0.8083250 0.8311796 0.8334161 #>  [686,] 0.8608270 0.9483362 0.9674320 #>  [687,] 0.8318897 0.8358679 0.8491155 #>  [688,] 0.5159121 0.5483013 0.5621668 #>  [689,] 1.3012095 1.3484801 1.3487068 #>  [690,] 0.8716231 0.8823310 0.8979190 #>  [691,] 0.5265994 0.5630662 0.5976575 #>  [692,] 0.9693197 0.9952684 1.0092732 #>  [693,] 1.2791379 1.2908043 1.3500314 #>  [694,] 1.1179855 1.1285806 1.1410913 #>  [695,] 0.7535237 0.7637158 0.7670433 #>  [696,] 0.7377643 0.7443909 0.7714686 #>  [697,] 0.9497753 0.9740650 0.9931739 #>  [698,] 0.5574720 0.5583854 0.5703322 #>  [699,] 0.5272763 0.5512090 0.5579593 #>  [700,] 0.8586630 0.9445941 0.9525024 #>  [701,] 1.3434557 1.3956631 1.4338671 #>  [702,] 0.6932999 0.6944836 0.7100252 #>  [703,] 0.7623799 0.8046874 0.8176350 #>  [704,] 0.6835585 0.7263434 0.7780270 #>  [705,] 1.6201091 1.6266563 1.6315307 #>  [706,] 0.8136844 0.8494294 0.8593813 #>  [707,] 1.5662930 1.5693790 1.6091057 #>  [708,] 0.7284562 0.7808237 0.7907952 #>  [709,] 0.5050554 0.5331431 0.5366474 #>  [710,] 1.2452726 1.3092434 1.3625695 #>  [711,] 1.3529202 1.4269374 1.4522989 #>  [712,] 0.4505540 0.4521080 0.4839346 #>  [713,] 0.5206082 0.5214291 0.5405683 #>  [714,] 1.5712786 1.6235231 1.6241564 #>  [715,] 0.7641955 0.7738460 0.7840936 #>  [716,] 1.7726807 1.8407622 1.9208866 #>  [717,] 1.4110078 1.4770353 1.5039358 #>  [718,] 0.6271479 0.6450471 0.6533712 #>  [719,] 1.1098270 1.1419785 1.1551731 #>  [720,] 0.7426513 0.7502433 0.7836395 #>  [721,] 0.8095940 0.8169034 0.8324889 #>  [722,] 1.1728257 1.1876185 1.1924875 #>  [723,] 1.6989985 1.7859029 1.8269751 #>  [724,] 0.7332348 0.7347986 0.7599129 #>  [725,] 0.8186713 0.8431948 0.8467166 #>  [726,] 0.6713443 0.6930419 0.7228226 #>  [727,] 1.0522732 1.0699081 1.0726923 #>  [728,] 0.7341052 0.7704882 0.7879158 #>  [729,] 0.6521051 0.6533243 0.6615754 #>  [730,] 0.6348530 0.6510867 0.6636104 #>  [731,] 0.8398572 0.8444404 0.8549446 #>  [732,] 0.9052303 0.9104148 0.9652533 #>  [733,] 0.7885825 0.8061506 0.8156314 #>  [734,] 0.6261884 0.6486692 0.6878145 #>  [735,] 0.9692714 1.0388954 1.0413995 #>  [736,] 1.0222940 1.0246647 1.0547047 #>  [737,] 0.6412310 0.6619364 0.6640161 #>  [738,] 0.6582818 0.7031754 0.7382830 #>  [739,] 0.6898168 0.7105832 0.7127419 #>  [740,] 0.5678005 0.5863404 0.5914201 #>  [741,] 1.1023741 1.1036106 1.1260186 #>  [742,] 1.0294404 1.1333364 1.1778713 #>  [743,] 0.7386667 0.7417907 0.7608051 #>  [744,] 0.9903962 0.9931809 1.0206295 #>  [745,] 0.8215176 0.8314899 0.8461843 #>  [746,] 1.4611889 1.4960998 1.5040784 #>  [747,] 1.0485753 1.0494310 1.0849498 #>  [748,] 1.1883989 1.1910852 1.2718658 #>  [749,] 0.7500401 0.8342035 0.8559628 #>  [750,] 0.5391334 0.5402652 0.5798598 #>  [751,] 1.4004928 1.4077843 1.4145611 #>  [752,] 0.9115526 0.9580430 0.9735826 #>  [753,] 1.0633566 1.0954741 1.1032102 #>  [754,] 0.8812172 0.9098366 0.9555650 #>  [755,] 0.5123667 0.5661294 0.5692530 #>  [756,] 0.7391316 0.7475575 0.7573071 #>  [757,] 0.5204194 0.5265024 0.5858982 #>  [758,] 0.8024360 0.8302526 0.8337806 #>  [759,] 0.7357784 0.7525911 0.7846846 #>  [760,] 0.7867734 0.7915479 0.8237437 #>  [761,] 0.7612949 0.7742052 0.7839209 #>  [762,] 0.4755345 0.4801095 0.5124791 #>  [763,] 0.6956373 0.6963828 0.6971501 #>  [764,] 0.6515875 0.6894658 0.7076297 #>  [765,] 0.5998546 0.6192258 0.6243999 #>  [766,] 0.8956216 0.8972576 0.9702808 #>  [767,] 0.5853646 0.5854562 0.6121834 #>  [768,] 0.5450619 0.5959670 0.6180814 #>  [769,] 0.7085985 0.7193032 0.7724441 #>  [770,] 1.4169447 1.4482292 1.4640749 #>  [771,] 0.5065810 0.5605172 0.5757330 #>  [772,] 1.5523353 1.6238716 1.6358352 #>  [773,] 0.7116933 0.7159525 0.7337539 #>  [774,] 0.6792841 0.6845281 0.6983006 #>  [775,] 0.8474787 0.8684437 0.8753140 #>  [776,] 0.5367453 0.5888738 0.5986212 #>  [777,] 0.7538177 0.7691235 0.7854232 #>  [778,] 0.9298963 0.9410535 0.9426357 #>  [779,] 0.7359592 0.7767838 0.7779128 #>  [780,] 0.7997577 0.8382415 0.8486354 #>  [781,] 0.8375812 0.8596417 0.8744140 #>  [782,] 0.9624973 1.0093593 1.0453388 #>  [783,] 1.1287726 1.1297096 1.1659020 #>  [784,] 0.6247307 0.6775295 0.7663272 #>  [785,] 1.2558704 1.2947803 1.3088111 #>  [786,] 0.6152939 0.6353863 0.6695967 #>  [787,] 1.1024069 1.1280145 1.1612117 #>  [788,] 0.5381211 0.5451077 0.5677213 #>  [789,] 1.0240417 1.0269419 1.0477927 #>  [790,] 1.0323433 1.0590987 1.0602132 #>  [791,] 0.7801777 0.7900007 0.9392979 #>  [792,] 0.7669425 0.7981849 0.7982342 #>  [793,] 0.6163299 0.6185467 0.6327913 #>  [794,] 0.8186713 0.8324293 0.8416181 #>  [795,] 0.6515251 0.6814709 0.7110985 #>  [796,] 0.6935284 0.6991920 0.7075190 #>  [797,] 0.6575086 0.7209059 0.7339598 #>  [798,] 1.0904820 1.1008841 1.1260186 #>  [799,] 0.5674126 0.5778647 0.6345712 #>  [800,] 1.0889129 1.1133644 1.1629375 #>  [801,] 2.1231839 2.1860526 2.1998939 #>  [802,] 0.7383542 0.7481791 0.7550738 #>  [803,] 0.8383424 0.8608165 0.8641824 #>  [804,] 0.7633302 0.7859967 0.8434855 #>  [805,] 1.1257561 1.1356645 1.1638551 #>  [806,] 1.7346694 1.7691258 1.7743119 #>  [807,] 0.4995545 0.5004592 0.5193565 #>  [808,] 0.9172032 0.9523291 0.9764551 #>  [809,] 1.1584307 1.1941647 1.2575877 #>  [810,] 0.7284562 0.7330067 0.7408759 #>  [811,] 1.1843255 1.2782332 1.3107432 #>  [812,] 0.5315497 0.5443782 0.5836977 #>  [813,] 0.7466194 0.7996659 0.8103537 #>  [814,] 0.7808829 0.8034636 0.8421474 #>  [815,] 0.7471899 0.7711383 0.7852269 #>  [816,] 0.8032544 0.8040092 0.8214033 #>  [817,] 0.9510516 0.9699549 0.9792162 #>  [818,] 1.0335562 1.0372652 1.0491330 #>  [819,] 0.6328759 0.6861322 0.7011115 #>  [820,] 0.4720551 0.5296363 0.5555264 #>  [821,] 0.6819498 0.6926893 0.6990663 #>  [822,] 0.9269503 0.9333370 0.9357962 #>  [823,] 0.5039825 0.5173599 0.5279270 #>  [824,] 0.6689645 0.6943928 0.7221430 #>  [825,] 0.6703935 0.7089186 0.7091669 #>  [826,] 0.7007837 0.7127419 0.7550778 #>  [827,] 0.7059336 0.7372678 0.7480572 #>  [828,] 0.9034018 0.9104148 0.9411165 #>  [829,] 0.8850676 0.8854259 0.9302726 #>  [830,] 1.5114107 1.5786993 1.6278089 #>  [831,] 0.6874729 0.7240411 0.7715859 #>  [832,] 0.7561520 0.7572252 0.7661326 #>  [833,] 0.8470083 0.8565939 0.9294144 #>  [834,] 0.8462186 0.8784217 0.8862194 #>  [835,] 0.7221430 0.7295333 0.7412781 #>  [836,] 0.9347948 0.9958348 1.0598804 #>  [837,] 0.4441183 0.5126569 0.5153333 #>  [838,] 0.6895259 0.6924723 0.7023303 #>  [839,] 0.8480734 0.8511371 0.8782873 #>  [840,] 0.7867734 0.7896772 0.8037995 #>  [841,] 0.8506020 0.9526403 0.9612175 #>  [842,] 0.5486267 0.5589546 0.6061991 #>  [843,] 0.6917115 0.7147023 0.7272667 #>  [844,] 0.7960516 0.8079089 0.8172667 #>  [845,] 0.7318638 0.7774543 0.8003298 #>  [846,] 0.6855690 0.7041064 0.7090832 #>  [847,] 0.5764175 0.6079189 0.6290889 #>  [848,] 2.0749406 2.0856943 2.1720363 #>  [849,] 0.7160291 0.7485409 0.7553586 #>  [850,] 1.2596108 1.2698013 1.2888516 #>  [851,] 0.6616307 0.6848281 0.6853088 #>  [852,] 0.8683618 0.8729598 0.8851883 #>  [853,] 0.9118847 0.9418947 0.9665359 #>  [854,] 0.6320229 0.6623628 0.7123701 #>  [855,] 1.1642687 1.1702557 1.1772549 #>  [856,] 0.6684812 0.7156121 0.7244898 #>  [857,] 0.9359941 0.9375211 0.9519876 #>  [858,] 0.6754073 0.7114949 0.7252524 #>  [859,] 0.6498500 0.6906729 0.7339253 #>  [860,] 1.1457602 1.1832289 1.2074022 #>  [861,] 0.7412781 0.7662269 0.7851720 #>  [862,] 0.4805044 0.5076157 0.5126569 #>  [863,] 0.7238569 0.7342961 0.7629608 #>  [864,] 0.9802832 1.0310429 1.0399326 #>  [865,] 0.6644266 0.6689645 0.6767999 #>  [866,] 0.9337187 0.9740263 1.0455255 #>  [867,] 0.7254243 0.7276343 0.7806069 #>  [868,] 0.9634992 1.0386796 1.0544626 #>  [869,] 0.5824853 0.6009324 0.6142154 #>  [870,] 0.7154247 0.7192687 0.7466932 #>  [871,] 0.7453587 0.7795073 0.7831500 #>  [872,] 0.7281757 0.7777702 0.8172181 #>  [873,] 1.1460913 1.1741128 1.1864078 #>  [874,] 1.0261459 1.0299885 1.0434633 #>  [875,] 0.7910624 0.8157635 0.8730134 #>  [876,] 0.7207744 0.7723689 0.7724336 #>  [877,] 0.8673313 0.8949123 0.8951913 #>  [878,] 1.0037013 1.0367952 1.0824595 #>  [879,] 1.0787910 1.0964439 1.1125645 #>  [880,] 0.6771311 0.6783905 0.6903090 #>  [881,] 1.1930187 1.1946866 1.2493623 #>  [882,] 0.8118854 0.8132027 0.8182185 #>  [883,] 0.8892980 0.9098366 0.9282013 #>  [884,] 0.6549553 0.6594381 0.6947443 #>  [885,] 0.9009273 0.9083289 0.9254392 #>  [886,] 1.1106389 1.1358120 1.1505633 #>  [887,] 1.0226837 1.0443015 1.0724506 #>  [888,] 0.7379389 0.7486631 0.8205738 #>  [889,] 0.8722673 0.8936599 0.9019537 #>  [890,] 0.5858818 0.6192258 0.6417460 #>  [891,] 1.0975460 1.1229904 1.1628165 #>  [892,] 0.7091968 0.7503367 0.7830365 #>  [893,] 0.7398307 0.7657043 0.7787570 #>  [894,] 0.5997225 0.6284624 0.6419214 #>  [895,] 0.6758197 0.6939432 0.7032033 #>  [896,] 0.6758513 0.7172772 0.7203846 #>  [897,] 1.2428030 1.2501507 1.2587446 #>  [898,] 0.8354676 0.8890325 0.9008484 #>  [899,] 0.8092542 0.8264634 0.8267756 #>  [900,] 0.7640405 0.8024027 0.8266338 #>  [901,] 0.7759821 0.7878226 0.8091186 #>  [902,] 0.8712024 0.8899289 0.9202519 #>  [903,] 0.9141468 0.9294154 0.9354275 #>  [904,] 0.7593904 0.7768916 0.7924151 #>  [905,] 1.1400141 1.1416512 1.1854668 #>  [906,] 0.9269737 0.9461370 0.9628480 #>  [907,] 0.6921495 0.7070232 0.7372458 #>  [908,] 1.0004341 1.0311939 1.0421579 #>  [909,] 0.5742818 0.5805242 0.6747003 #>  [910,] 0.5165174 0.5198491 0.5236046 #>  [911,] 0.6161736 0.6409509 0.6475472 #>  [912,] 0.6136669 0.6913104 0.6922783 #>  [913,] 0.9638907 0.9952285 1.0070706 #>  [914,] 0.6405774 0.6666285 0.6820169 #>  [915,] 0.8967049 0.9040565 0.9201937 #>  [916,] 0.6705599 0.6977468 0.6990177 #>  [917,] 0.6520738 0.7120939 0.7758581 #>  [918,] 1.1713373 1.1883989 1.2491611 #>  [919,] 0.9880163 1.0210333 1.0331978 #>  [920,] 0.8651633 0.8697261 0.8705774 #>  [921,] 0.8390607 0.8844862 0.9151085 #>  [922,] 0.8018932 0.8664917 0.8676431 #>  [923,] 0.6396289 0.6669635 0.7014315 #>  [924,] 0.7092211 0.7307548 0.7706011 #>  [925,] 1.0905591 1.1207652 1.1401608 #>  [926,] 0.6989075 0.8023436 0.8090740 #>  [927,] 0.6419283 0.6557175 0.6570375 #>  [928,] 0.6061991 0.6087139 0.6281235 #>  [929,] 1.4159552 1.4227676 1.4231930 #>  [930,] 1.3820916 1.3924251 1.4528209 #>  [931,] 0.8180957 0.8460302 0.8691629 #>  [932,] 0.7630534 0.7680926 0.7765950 #>  [933,] 0.5897401 0.6071144 0.6288513 #>  [934,] 0.7562356 0.7701033 0.7741417 #>  [935,] 0.6576066 0.6649276 0.6686443 #>  [936,] 0.6392104 0.6777887 0.7371515 #>  [937,] 1.2316653 1.2324163 1.2326388 #>  [938,] 0.7744435 0.8191419 0.8236599 #>  [939,] 0.7960606 0.8110540 0.8737002 #>  [940,] 0.6994460 0.7411298 0.7478557 #>  [941,] 0.7446818 0.7504072 0.7600579 #>  [942,] 0.6108013 0.6116753 0.6120157 #>  [943,] 0.7305962 0.7391237 0.7958461 #>  [944,] 0.9787824 0.9846187 0.9881773 #>  [945,] 0.9873798 1.0041559 1.0182434 #>  [946,] 0.5396879 0.5425838 0.5842304 #>  [947,] 0.4954153 0.4976790 0.5035354 #>  [948,] 0.4627851 0.4639293 0.4675819 #>  [949,] 0.8991930 0.9495188 0.9633244 #>  [950,] 0.7754046 0.7986208 0.8275872 #>  [951,] 1.0499115 1.0784335 1.1566260 #>  [952,] 1.4105026 1.4311033 1.5102048 #>  [953,] 1.1403367 1.1500147 1.1593341 #>  [954,] 0.7222529 0.7252319 0.7468458 #>  [955,] 1.3472002 1.3474296 1.3850320 #>  [956,] 0.6341953 0.6404654 0.6470648 #>  [957,] 0.6433102 0.6579340 0.6626036 #>  [958,] 1.0020501 1.0246180 1.0902559 #>  [959,] 0.8760480 0.8915229 0.9015115 #>  [960,] 0.9770546 0.9916606 1.0133664 #>  [961,] 1.2441537 1.2481324 1.2595825 #>  [962,] 0.7771802 0.7978340 0.8190690 #>  [963,] 1.5226300 1.5688090 1.6108931 #>  [964,] 0.7000104 0.7038249 0.7122396 #>  [965,] 1.1380595 1.2415931 1.2439757 #>  [966,] 0.6201318 0.6610838 0.6675333 #>  [967,] 1.2054743 1.2272684 1.2325339 #>  [968,] 0.6887927 0.6891508 0.7066901 #>  [969,] 0.6433826 0.6498837 0.6740832 #>  [970,] 0.9630658 0.9861067 0.9881925 #>  [971,] 0.5381647 0.5685371 0.5707344 #>  [972,] 0.9652804 1.0012216 1.0029620 #>  [973,] 0.6571726 0.6650302 0.6714687 #>  [974,] 0.7486631 0.7753879 0.7910739 #>  [975,] 0.6115830 0.6163299 0.6441861 #>  [976,] 0.8276737 0.8325226 0.8492045 #>  [977,] 0.5738458 0.6021441 0.6031915 #>  [978,] 0.7200436 0.7214314 0.7529186 #>  [979,] 0.9167299 0.9555650 0.9637244 #>  [980,] 0.8277651 0.8593300 0.8888746 #>  [981,] 0.7448010 0.7522240 0.7542072 #>  [982,] 0.6146644 0.6445492 0.6565097 #>  [983,] 0.8015755 0.8142656 0.8143064 #>  [984,] 0.6154795 0.6173642 0.6223629 #>  [985,] 0.4662150 0.4795889 0.5132644 #>  [986,] 1.1211136 1.1305371 1.1481931 #>  [987,] 0.5760790 0.5778647 0.5906846 #>  [988,] 1.1729409 1.2447385 1.2524553 #>  [989,] 1.2098600 1.2578741 1.2889180 #>  [990,] 0.4753128 0.5656023 0.5682929 #>  [991,] 0.6207860 0.6563092 0.6656549 #>  [992,] 1.7323020 1.8105273 1.8159533 #>  [993,] 0.8802950 0.8913612 0.8967464 #>  [994,] 0.9035453 0.9124131 0.9759566 #>  [995,] 0.5363126 0.5530575 0.5763685 #>  [996,] 0.7771513 0.7819357 0.8146033 #>  [997,] 0.6888587 0.7061336 0.7132001 #>  [998,] 0.9398505 0.9450594 0.9570552 #>  [999,] 0.7062615 0.7072478 0.7098156 #> [1000,] 1.0474668 1.1888230 1.2082233 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  995  356  698  436  141  455  508  821  923   910 #>    [2,]  134  130  633  726  734  293  940  399  558   692 #>    [3,]  744  925  258  334  769   87  168  899  560    47 #>    [4,]  912  261  347  101  611  307   82  559  213   926 #>    [5,]  137  991  928  729  842  539   33  200  870   762 #>    [6,]  986  485  650  805  106  208  332  790  345   367 #>    [7,]  412   67   45   62   18  183  882  122  377   160 #>    [8,]  699  455  490  192  232   69  688  138  757    96 #>    [9,]  859  281  314  819  218  445  760  956   99   964 #>   [10,]  148  723  672   79  457  335   28  229  835   432 #>   [11,]   26   57  862  233  517  837  971  411  488   948 #>   [12,]  831  363  843  934   75   34   25  494  329   729 #>   [13,]  825  527  235  673  464  222  256  620  140   342 #>   [14,]  152  496  142  214  916  232  246  957    8   543 #>   [15,]  170  875  597  385  442  736  366  866  980   818 #>   [16,]  283  776  227  189  251  966  512  605  842   586 #>   [17,]   43  561  382  379  231   32  443  774  143   357 #>   [18,]    7  377   62   77  412  183  327   45  980   881 #>   [19,]  288   44  205  816  600  294   54  709  109   336 #>   [20,]   74  851  292  838  275  175  296  859  603   551 #>   [21,]  545  339  109  336   33  368  221  284  816   407 #>   [22,]   71  569  985  409  465  587  566   36  410   417 #>   [23,]  100  212  536  461  234  874  883  754  414   473 #>   [24,]  386   94  968  456  159  453  349  656  473   146 #>   [25,]  601  236  259  337   12  749  896  125  494   636 #>   [26,]   11  411  837   57   90  593  393  555  823   713 #>   [27,]  289  574  977  680  406  538  521  637  703   542 #>   [28,]  789  532  778   75  398  494  457  482  238   333 #>   [29,]  286  317  643  803  673  589  784  615  908   779 #>   [30,]  127  273  714  562  117  630   65  668  809   965 #>   [31,]  443  292   92  497   32  809  498   65  891    53 #>   [32,]  774  443  382  301  832  799  292  175  561    31 #>   [33,]  870  539  368   44  407  109  545  729    5   339 #>   [34,]  831  934  730   12  363  523  329  347   75   559 #>   [35,]  737  132  216   91   41  139  340  118  540   859 #>   [36,]  587  691  277  985  671  430  346  417   71   946 #>   [37,]  884  981  964  172  819  283  840  445  210   565 #>   [38,]  556  954  477  563  489  203  911  914  401   869 #>   [39,]   84  438  959  453  220  933   91  540  541   664 #>   [40,]  474  290  194  697  992  119  967  817  588   878 #>   [41,]  340  512  216  682  859  411   35  987  586   837 #>   [42,]  670  892  607  822  201  303  295  732  599   996 #>   [43,]  231  308  382   17  561  533  447  379   32   774 #>   [44,]  205  709   19  600   33  762  816  755   54   294 #>   [45,]   56    7  481  743  857   97  183  552  122   389 #>   [46,]  690  854   78  999  667  628  294  522  872   513 #>   [47,]  297  769  506  351  209  484  555  258  978    90 #>   [48,]  646  836  279  148  457  618  886  191   28   238 #>   [49,]  842  504  215  539  490  947  910  757   96   762 #>   [50,]  547  223  503  877  415  775  425  500  638   161 #>   [51,]  775  361  877  449  415  624  264  936  503   226 #>   [52,]  466  617  570  943  706  270  366  405  324   840 #>   [53,]  178  498   92  139  428   35  774  301  814   446 #>   [54,]  600  205  709  202  977  538   44  865  341   653 #>   [55,]  722  279  646  678  487   68  268  432  542   727 #>   [56,]   45  857   97  743  483  370  470  389  481   360 #>   [57,]   11  862  593   26  488  771  326  233  369   823 #>   [58,]  780  448  932  227  170   16  472  433  471   397 #>   [59,]  851  430   60   88  456  691  903  453  277   526 #>   [60,]  675  417  430  277  691  647   88   59  409   465 #>   [61,]   69  102  157  391  674  338  578   83  764   773 #>   [62,]  412  377    7  872  153   18   67  628  122   582 #>   [63,]  907  376  631  650  106  720  880  841  738   312 #>   [64,]  534  550  271  362  463   94  384  950  635   473 #>   [65,]  809   31  273  642  717  497  292  498   30   155 #>   [66,]  123  316  694  634  595  110  782  499  913   711 #>   [67,]  882  872    7  412  525  999  743  786  122   168 #>   [68,]  542  924  637  846  895  764  268  289  680   162 #>   [69,]   61  699    8  688  157  338  138  927  192   490 #>   [70,]  420  500  564  901  923  751  995  472  436   638 #>   [71,]  409  985   22  417  465  569  587  946   36   277 #>   [72,]  788  807  648  990  657  669  529  401  203   182 #>   [73,]  300  551  226  724  603  319  554  577  808   936 #>   [74,]   20  851  292  275  175   59  301  838  799   903 #>   [75,]   12  831  398  363  494  934  789  843   34   333 #>   [76,]  116  708  537  280  325  501  158  485  304   151 #>   [77,]  377  183  582  853   18  327  122  866  686     7 #>   [78,]  628  854  520   46  999  294  471  341  872   597 #>   [79,]  457  618  827  704  335  229  835  363  469   676 #>   [80,]  897  389  908  887  184  360   97  654  557   783 #>   [81,]  553  895  623  252  976  982  835  105  846   997 #>   [82,]  713  591  250  468  393  593  347  245  912   450 #>   [83,]  764  674  368   61  374  157  238  729  843   598 #>   [84,]  541  228  635  920  179   39  438  933  969   241 #>   [85,]  710  104   13  474  583  949  640  387  952  1000 #>   [86,]  174  298  944  439  700  191  953  310  225   354 #>   [87,]  495  962    3  168  525  334  769  649  748   925 #>   [88,]  526   60   59  916  461  543  718  139  142   675 #>   [89,]  841  106  650  773  924  731   63  332  391     6 #>   [90,]  555   26  565  823  209  429  393  771  250   278 #>   [91,]  438  737   35  540  579  506  340  314  297   933 #>   [92,]  498  497  155  814   53   31  802  774   32   178 #>   [93,]  701  719  208  662  376  665  650  491   63   929 #>   [94,]   24  386  473  968  349  534  384  453  362   244 #>   [95,]  813  309  384  879  845  473  265  534  400   312 #>   [96,]  455  923  232  995   49    1  490  353  699     8 #>   [97,]  360  483  389  184   56  743  470  568   45   857 #>   [98,]  397  251  353  987  728  472  617  227  947   832 #>   [99,]  281  311  819  554    9  172  939  964  136   314 #>  [100,]  754  889  883   23  893  392  414  234  645   970 #>  [101,]  611    4  912  926  128  739  274  888  347   863 #>  [102,]  391   61  610  674  773  764  578  924  338   895 #>  [103,]  308  372  447  221  685  963  177  533  564   487 #>  [104,]  949  725  522  825   13  200  860  853  686   493 #>  [105,]  527  553  464  861  997  824  235   81  140   623 #>  [106,]  841   89  650  332   63  773    6  731  391   924 #>  [107,]  272  776  549  666  826  433  605  176  283   210 #>  [108,]  791  242  993  267  752  375  435  239  384   265 #>  [109,]  339  545  336   21   33   44  288  816   19   539 #>  [110,]  694  316  123  938  634  766  456  902  903   430 #>  [111,]  320  771  458  615  823  922  779  291  488   486 #>  [112,]  580  856  124  154  355  607  938  906  782   996 #>  [113,]  500   70  638   50  770  658  420  742  751   806 #>  [114,]  403  616  900  371  786  529  383  552  797   706 #>  [115,]  432  583 1000  710  640  952  268  581  284   374 #>  [116,]  708  537   76  424  325  485  401  419  203   911 #>  [117,]  664  197  965  540  273  959  612  760  314   218 #>  [118,]  484  814  351   35  297  506  498  750  254   132 #>  [119,]  878  590  609  830  967  134   40  643  518   817 #>  [120,]  328  679  626  151  567  196   76  166  738   805 #>  [121,]  544  332  792  217  976  131  681  783  841   106 #>  [122,]  202  686  620  412  522    7  389   67   45   743 #>  [123,]  316  694  110  766  634  262  938  913  467   855 #>  [124,]  355  969  169  580  112  154  808  856  906   890 #>  [125,]  238  636   25  305  236  230  601  310  259   343 #>  [126,]  147  971  625  862  820  517  511  629  158   233 #>  [127,]  136  668   30  554  273   99  524    9  714   117 #>  [128,]  167  926  611  101  888  493  739  604  725     4 #>  [129,]  288  794  294  433   19  109  418   58  448   826 #>  [130,]  399  134  734  726    2  380  983  633  692   917 #>  [131,]  792  935  252  623  404  738  982  997   81   976 #>  [132,]  750  254  948  216  139  452  837  682   35   411 #>  [133,]  361  953  855  944  298   51  596  467  775   624 #>  [134,]  130  399    2  692  633  983  734  726  829   380 #>  [135,]  469  763  410  749  191  927  618  330  677   354 #>  [136,]  127   99  281  554  885  311  819    9  190   524 #>  [137,]    5  991  171  842  762  928  619  504  709   539 #>  [138,]  688  757  490  699  927   69    8  641  942   455 #>  [139,]  132  216   35  178  737  750  948   88  146    53 #>  [140,]  342  557  620  105  235  553  623  464  527   686 #>  [141,]  910  799  275  356    1  508  175  232  301   353 #>  [142,]   14  152  793  812  232  957  942  246    8   373 #>  [143,]  919  909  428  269  489  802  358  178  695   182 #>  [144,]  961  306  782  960  833  828  195  745  415   264 #>  [145,]  627  660  894  715  253  180  839  784  291   451 #>  [146,]  446  434  461  139  695  178   88  526  456    24 #>  [147,]  126  984  207  862  511  233  820  971  423   625 #>  [148,]   10   79  457  335   48  835  229  672  618   247 #>  [149,]  452  241  369  179  602  796  326  675  541   647 #>  [150,]  787  950  271  282  219  463  173  614  741    64 #>  [151,]  626  696  501  441  328   76  287  185  120   738 #>  [152,]   14  214  142  496  916  232  975  957  871   793 #>  [153,]  981  628  875  854  872  597   78   37   46   999 #>  [154,]  906  580  808  112  124  782  856  499  355   904 #>  [155,]  497  498  760   92  814  859  324  197  118    35 #>  [156,]  233  454  209  302   11  304  971  488  320   441 #>  [157,]   61  368   69   83  192  338  699  764  490   578 #>  [158,]  971  280  511  126  304  454  537  325  517   625 #>  [159,]   24  456  386  968   94  453  694  110  913   562 #>  [160,]  412  525  654  639    7   67  389  881  887   416 #>  [161,]  733  425  724  605  826  991  896  666  877   272 #>  [162,]  542  426  299  680  703  188  637  876  661    27 #>  [163,]  352  533  421  546  315  661  308  103  986   188 #>  [164,]  492  735  584  939  612  664  499  516   99   311 #>  [165,]  598   69  192  372  138    8  479  221  927   455 #>  [166,]  567  483  328  568  477  322  360  424  679   626 #>  [167,]  128  493  926  276  611  274  888  101  739   604 #>  [168,]  872  458  258  999  922  525    3   87  555   769 #>  [169,]  969  355  890  124  468  486  245  974  505   476 #>  [170,]   15  442  597  366  875  780   58  628  981   706 #>  [171,]  619  199  762  341  137  504  712  653  709   768 #>  [172,]  819  939   37  281  964  884  218   99  314   210 #>  [173,]  692  803  180  219  950  253  839  784  145   627 #>  [174,]  191   86  944  439  135  298  310  354  330   225 #>  [175,]  301  799  987  275  838  251  512  910  296   141 #>  [176,]  210  549  107  311  272  514  776  863  666   433 #>  [177,]  447  496  546  533  571  998   14  103  700    43 #>  [178,]   53  695  428  139  446  182  143  498  814   132 #>  [179,]  241  541  326  149  890  452  796  593  602   394 #>  [180,]  803  784  660  253  173  950  145  894  219   627 #>  [181,]  371  475  797  299  847  685  529  426  767   788 #>  [182,]  428  909  990  788  530  812   72  269  975   373 #>  [183,]  327  377  481   77   45    7  980  552  866   122 #>  [184,]  389  360   97  834  623  252  792  470  908   131 #>  [185,]  287  441  738  921  845  935  186  151  404   285 #>  [186,]  921  219  287  291  285  185  787  834  615   265 #>  [187,]  712  341  653  199  520  278  619  657  669   171 #>  [188,]  876  777  731  661  345  162  521  426  542   299 #>  [189,]  591  713  768  283  250  393   16  504  512    82 #>  [190,]  885  943  780  747  964  932  884  844  819   324 #>  [191,]  174  135  479  354  330  998  439   86  310   944 #>  [192,]  221  372  598    8  699  157   69  165  455   368 #>  [193,]  647  594  629  813  625   60  655  675  718   149 #>  [194,]  873  290  690   40  967  582   62   46  817   697 #>  [195,]  274  960  833  398  333  831  934  745  223   547 #>  [196,]  805  120  679  328  322  662  567  930  652   708 #>  [197,]  540  117   35  760  155  959  993   91  118   965 #>  [198,]  322  622  563  900  613  576  166  424  931   810 #>  [199,]  171  762  341  712  227  619  520  187  471   504 #>  [200,]  600  725    5  825  464  248  870  205  137   611 #>  [201,]  892  917  726  364   42  402  795  607  237   734 #>  [202,]   54  849  667  320  621  122  600  743  222   553 #>  [203,]  401  556  648  914  807  302  304  869   72   424 #>  [204,]  753  270  818  736  875  885  466  943  840   651 #>  [205,]   44  709  600   54   19  762  294  520  755   341 #>  [206,]  244  349  915  394  996  392  409  979  444   395 #>  [207,]  740  984  444  147  451  423  820  602  369   632 #>  [208,]  719  662  650    6   63  805  376  631  332   986 #>  [209,]  555  351   47  254  506  156   90  278  682   297 #>  [210,]  176  549   37  964  107  283  172  311  776   433 #>  [211,]  578  641  865  459  928  338  757  619  621   137 #>  [212,]  929   23  473  400  384  665  592  719   95   491 #>  [213,]  261  380  486  399  245  462  771  111    4   734 #>  [214,]  916  152  496   14  957  546  367  246  142   315 #>  [215,]  947  504  767  657   49  910  353  669  847   199 #>  [216,]  411  837  132  340  948  750  139   41  452   682 #>  [217,]  370  790  470  792  955  406  857  332  252   131 #>  [218,]  314  281  760    9  664  612   91  172  859   939 #>  [219,]  839  173  784  186  803  180  291  589  787   145 #>  [220,]  438  453  340  933  430  450  277  737  216    91 #>  [221,]  192  598  372  368    8  157  165  455   21   699 #>  [222,]  849  518  513  825  667  464   13  673  527   202 #>  [223,]   50  195  663  425  274  547  972  343  249   960 #>  [224,]  929  212   23  414  146   94  434  519  400   108 #>  [225,]  439  236  973  700  944  759  763  138  246   543 #>  [226,]  319  603   73  724  551  877  554  300  449   264 #>  [227,]  586  199  471  947   16  762  504  215  171   520 #>  [228,]   84  362  656  541  635  386  241  938  179   355 #>  [229,]  835  674  335  824  764  102  248  865  843   457 #>  [230,]  886  125  836  310  636  598  221  742  238   305 #>  [231,]   43  308  382  561  548  564  797  685   17   901 #>  [232,]  455  847  353    8   96    1  141  142  699   910 #>  [233,]   11  156  369  971   57  862  126  147  517   984 #>  [234,]  874  883  461  571  526  543  889  519  916    23 #>  [235,]  464  248  825  527  824  427   13  105  140   553 #>  [236,]  601   25  259  337  749  225  636  138  125   436 #>  [237,]  295  402  730  476  566  856  523   34  996   765 #>  [238,]  125   83   12  843  836  374   25  618  469   368 #>  [239,]  752  804  695  400  791  592  911  358  325   501 #>  [240,]  350  811  507  608  717  243  651  814  359   891 #>  [241,]  796  179  149  602  394  541  656  326  452   946 #>  [242,]  993  108  791  267  435  375  752  359  560   118 #>  [243,]  622  994  954  270   38  802  814  962  651   868 #>  [244,]  893  395  349  473  206  392  413  193  491   864 #>  [245,]  486  771  823  593  326  894   82  890  429    57 #>  [246,]  942  957  354  718  142  440  998  927  214    14 #>  [247,]  720  437  852   63  376  312  907  677  632   841 #>  [248,]  235  464  824  427  825  865  527  600  229   200 #>  [249,]  606  972  425  739  733  989  826  794  161   605 #>  [250,]  713  393  429  591   82  189  579  823  331   565 #>  [251,]  987   98  956  512  175   16  844  296  617   586 #>  [252,]  623  470  553  982  131   81  792  977  935   574 #>  [253,]  660  180  950  145  894  602  282  463  796   635 #>  [254,]  750  948  132  990  682  209  517  506  351   304 #>  [255,]  516  761  974  505  904  863  829  588  462   399 #>  [256,]  293  940  673  558  527  825   13  518  573   781 #>  [257,]  844  524  838  932  603  832  251  956  292   850 #>  [258,]  458  978  899  715    3   47  168  560  769   922 #>  [259,]  337  436  601  236  636  896  973  407   25   698 #>  [260,]  798  550   64  959  242  108  993  531  313   918 #>  [261,]  213    4  912  863  307  486  399  331  380   347 #>  [262,]  392  766  510  970  349  893  996  754  915   417 #>  [263,]  579  933  941  577  429  250  393  969  761   468 #>  [264,]  449  902  551  858  775  936  467  815   73   226 #>  [265,]  309  845  267  323  560  791  978  501  375   384 #>  [266,]  732  348  892  781  201  917  670  726  402   822 #>  [267,]  560  265  375  791  978  108  242  506  845   309 #>  [268,]  284  816   68  374  680 1000  545  727   21    19 #>  [269,]  909  489  428  788  182  810  143  802   72   563 #>  [270,]  651  204   52  466  243  891  994  840  366   943 #>  [271,]  150   64  463  282  534  614  950  550  879   362 #>  [272,]  107  776  666  549  826  724  176  319  605   300 #>  [273,]  562  668  117  809   65  540   20  197   74   859 #>  [274,]  195  934  831  101   34  611  833  167  398   926 #>  [275,]  910  141  175  356  799  296  508  838  851   698 #>  [276,]  167  960  888  898  604  128  195  833  274   745 #>  [277,]  985  675  691   36  430   60  587  946  409   417 #>  [278,]  682  586  187  712  555  869  807  657  383   209 #>  [279,]  646  487  836   55   68  722  886  268   48   432 #>  [280,]  158  738  511   76  441  454  971  631  982   537 #>  [281,]   99    9  819  314  218  172  939  664  964   311 #>  [282,]  950  463  253  614  180  602  150  796  534   660 #>  [283,]   16  768  776  189  227  666   37  591  471   433 #>  [284,]  374  268  816  545   21  870  368  585   83   109 #>  [285,]  291  779  441  615  320  899  156  834  111   186 #>  [286,]   29  317  643  803  589  784  615  219  692   779 #>  [287,]  185  921  186  441  783  626  151  935  285   792 #>  [288,]   19  129  109   44  205  816  294  581  853   418 #>  [289,]  574  846   27  977  637  406  895  470   54   703 #>  [290,]  817  697  690  194  588  873  307  513   46   967 #>  [291,]  779  285  615  784  660  627  111  320  186   451 #>  [292,]  301  175   74   32  799  838   20   31  443   987 #>  [293,]  558  256  940  518  673  307  734  380  213   399 #>  [294,]  520  471  762  341  205   78  199  854  709   171 #>  [295,]  237  402  856  996  828  476  566  730  607    42 #>  [296,]  275  512  966  175  910   16  987  251  838   842 #>  [297,]   47  506  484  769  351  209  375  118   91   560 #>  [298,]  944  700   86  439  174  225  645  543  759   571 #>  [299,]  426  162  685  181  371  542  680  188  192   721 #>  [300,]   73  577  724  808  603  551  966  319  554   272 #>  [301,]  799  175  987  774   32  292  141  275  910   353 #>  [302,]  538  454  203  401  807  156  304  648  653   187 #>  [303,]   42  915  670  607  892  599  201  996  822   979 #>  [304,]  911  556  203  158  807  325  302  254  156   990 #>  [305,]  343  972  742  125  638  778  636   25  238   601 #>  [306,]  961  415  144  264  449  503  775  782  833   547 #>  [307,]  588  697  261    4  293  213  558  513  863   912 #>  [308,]  231   43  533  685  548  181  797  299  382   103 #>  [309,]  845  265   95  813  384  501  323  185  267   625 #>  [310,]  125  230  886  439  636  165  836  174  191   236 #>  [311,]   99  176  281  939  172  210  819  964  584   514 #>  [312,]  907  702  404  720  852  444  207  880  756    63 #>  [313,]  334  918  993  242  649    3  744  925  478   741 #>  [314,]  218  281    9  664  760  859   91  579  612   819 #>  [315,]  546  367  533  214  419  975  352  152  810   871 #>  [316,]  634  123  110  694  467  902  624  766  855   938 #>  [317,]   29  286  800  643  803  589  861  784  997   976 #>  [318,]  468  476  730   82  450   36  591  858  713   347 #>  [319,]  226  603   73  724  272  554  300  503  365   551 #>  [320,]  111  779  621  615  285  156  849  202  291   488 #>  [321,]  701  986  163  650    6   93  546  421  315   352 #>  [322,]  166  790  424  567  708  805  328  576  116   485 #>  [323,]  265  845  309  151  501  267  696  185  626   572 #>  [324,]  617  956  943  884  885  445  840   52  155   844 #>  [325,]  911  537  116  804  304   76  158  975  419   708 #>  [326,]  593  369  179  740  245   57  452  149  450   823 #>  [327,]  980  183  616  575  866  377  114  597  481   552 #>  [328,]  567  120  679  626  166  151  483  568  696   477 #>  [329,]  363  827  843  523  559   34   12  674  730   729 #>  [330,]  677  758  135  378  354  763  191  395  410   437 #>  [331,]  565  250  768  429  591  261  713  189  771    82 #>  [332,]  106  790  841  650  738  217  631    6   63   792 #>  [333,]  398  789  494  532  195   75  833  960  831   828 #>  [334,]  769    3  478  962  297  649  484   47   87   993 #>  [335,]  835  229  924  773  976   81  102  391  861    79 #>  [336,]  109  339  545   21   33   44  418  422  816   680 #>  [337,]  259  896  436  407  601  698  236   25    1   508 #>  [338,]  578  459   61  610   69  757  688  102  699   641 #>  [339,]  109  545   21  336   33  407  923  539   96   368 #>  [340,]  216   41  450  411  220  393  837  438   35    91 #>  [341,]  187  520  199  712  171  653  619  471  762   709 #>  [342,]  140  557  620  686   13  105  235  527  222   623 #>  [343,]  305  972  778  742  638  125  606   25  238    12 #>  [344,]  689  937  822  303  670   42  892  732  201   266 #>  [345,]  485  188  876  810  721  521  777  871  661   537 #>  [346,]  671  508  698  587  356   36  569  431  275   337 #>  [347,]  523  912  559    4   82  730  765   34  928   261 #>  [348,]  732  266  892  726  734  599  917  898  604   201 #>  [349,]  968  244  386  893  392   94  206  473  262   656 #>  [350,]  608  811  359  507  814  240  652  478  243   118 #>  [351,]  484  209   47  297  506  682  254  118  750   555 #>  [352,]  533  163  421  315  546  308  379  810  721    43 #>  [353,]  847  232  767  799   98  910  215  141   96   947 #>  [354,]  998  246  479  759  758  763  191  225  135   330 #>  [355,]  124  969  169  890  112  856  580  607  476   228 #>  [356,]    1  698  508  141  275  995  910  346  671   436 #>  [357,]  988  571  945  903  874  683  526  234  543   496 #>  [358,]  919  419  489  143  563  804  810  695  269   239 #>  [359,]  507  752  811  350  814  118  178  239  242   108 #>  [360,]  483   97  568  184  834  389  567  626  899   166 #>  [361,]   51  431  683  953  624  775  460  133  700   936 #>  [362,]  228  635  463  386  913   84  534  541  798   241 #>  [363,]  329  827  843   12   34   75  831  469  523   781 #>  [364,]  795  765  917  480  726  894  380  740  734   523 #>  [365,]  319  509  272  381  107  524  603  554  514   190 #>  [366,]  597  170  980  628  442   52   15  706  994   383 #>  [367,]  315  957  975  419  214  546  871  592  485   537 #>  [368,]   83  157  729  490   33  870  407  699  598   221 #>  [369,]  452  326  149  820  517  233  862  629  740   675 #>  [370,]  217  790  470  567   97  483   56  792  857   360 #>  [371,]  181  529  475  403  797  767  755  299  788   847 #>  [372,]  192  221  598  165    8   69  777  299  157   699 #>  [373,]  812  657  793  517  837  530  669  948  411   862 #>  [374,]  284   83  870  764  368  585  238  778  843   729 #>  [375,]  506  267  132  560  737  254  297  452  978    91 #>  [376,]   63  491  437  665  907  650  413  719  880   758 #>  [377,]  582   62  866   77  183  327  980   18    7   597 #>  [378,]  676  410  704  958  330  135  951  677  763   402 #>  [379,]   17  561   43  352  919  533  382  143  421   231 #>  [380,]  213  734  480  940  795  726  364  399  894   486 #>  [381,]  365  524  190  747  850  509  136  257  932   885 #>  [382,]  774   32  561   43  231   17  443  301  847   799 #>  [383,]  403  869  529  187  278   72  648  712  786   807 #>  [384,]  813   95  473  309  534  193   94  845  149   265 #>  [385,]  736   15  875  597  980  170  366  866  818   153 #>  [386,]  968   24  656  453   94  349  228  456  241   362 #>  [387,]  535  558  293  256  673  633  474  573   13     2 #>  [388,]  544  557  342  897  976  140   81  105  672   623 #>  [389,]  184   97  887  360  834  122  908  623  743   483 #>  [390,]  741  798  839  408  531  744  635  219  173   920 #>  [391,]  773  102  610  924   61  674  764  338  895    69 #>  [392,]  893  262  754  979  349  970  244  206  510   395 #>  [393,]  450  713  250  593  579  468   26   82  189   340 #>  [394,]  946  241  796  656  890  409  985  740  179   602 #>  [395,]  893  718  244  465  763  417  409  655  759   645 #>  [396,]  658  447  564  751  683  953  707  901  460   231 #>  [397,]   98  472  728  617  867  832  251  706   58   448 #>  [398,]  333   75  494  195  831  934   12  789  532   274 #>  [399,]  130  213  734  380  261  134  726  462  486   974 #>  [400,]  592  239  804  752   95  384  719  813  212   929 #>  [401,]  648  203  914  424  556  302  807   72  529   538 #>  [402,]  237  295  704  676  827  632  201  363  730   566 #>  [403,]  529  383  786  371  114  648  475  187  552   520 #>  [404,]  702  935  738  907  982  147  131  312  511   631 #>  [405,]  706   52  617  466  797  802  366  270  561   114 #>  [406,]  574  977  289   27  521  637  470  188  876   846 #>  [407,]  337  923  259   33   96  368  539  896  436    49 #>  [408,]  390  741  313  918  609  744  590  649  798   515 #>  [409,]   71  985  417   22  465  946  587  569  277   691 #>  [410,]  704  469  440  676  763   22  378  927  827    71 #>  [411,]  837  216   26  948  517   11  340  682  812   373 #>  [412,]   62    7   67  872  160  525  122  639  999   168 #>  [413,]  491  665  758  244  437  395  677  502  864   893 #>  [414,]  100   23  519  754  883  889  874  234  536   212 #>  [415,]  503  306  264  449  775   50   51  226  877   319 #>  [416,]  881  483   56  160  166  567   45   97  360     7 #>  [417,]  409  691   71  985  465  587   60  946   36   430 #>  [418,]  336  442  109  288  129  728  867   19  114   339 #>  [419,]  975  810  537  325  358  708  116  367  485   315 #>  [420,]   70  472  564  500  751  448  339  923  644   901 #>  [421,]  352  163  315  533  379  810  546  919  986   721 #>  [422,]  680  336   21  162  685  545  542  221  299   426 #>  [423,]  820  629  641  440  942  126  147  862  647   569 #>  [424,]  914  401  116  648  708  203  563  537  576   810 #>  [425,]  161  733  249  826  605   50  272  724  503   739 #>  [426,]  299  162  542  703  680  181  687  685  188   371 #>  [427,]  248  235  464  600  825  865  620  846  200   824 #>  [428,]  909  182  269  990  489  143  788  178  695   802 #>  [429,]  823  250  579  486  771  565  263  245   90   331 #>  [430,]  691  277   59   60   36  851  946  220  417   656 #>  [431,]  671  936  851  346  858  903  356  361  587    36 #>  [432,]  115  583  952 1000  268  284  640  710  279   374 #>  [433,]  666  605  776  826  549  107  283  768  739    16 #>  [434,]  446  146  461  526  178  456   53  139   59    88 #>  [435,]  791  242  572  108  752  652  267  239  993   359 #>  [436,]  973  259  995  337    1  821  923  356  698   460 #>  [437,]  677  247  758  376  655  440  880  720  413   491 #>  [438,]  737   91  220  453  541  340  933  452   35   540 #>  [439,]  225  700  944  973  236  298  310  174  354   821 #>  [440,]  942  655  927  594  423  880  410  718  677   246 #>  [441,]  285  280  185  738  156  151  287  935  158   501 #>  [442,]  170   15  866  706  597  366  980  418  114    58 #>  [443,]   32   31  832  292  382  561  774   92  301   617 #>  [444,]  632  207  740  984  394  756  364  796  704   602 #>  [445,]  956  884  819  964  966  512  586  283    9    16 #>  [446,]  146  434  695  461  178  526  139   88   53   916 #>  [447,]  177  821  103   43  564  683  700  231  973   308 #>  [448,]  472   58  932  780  397   98  733  747  644   826 #>  [449,]  264  902  775  936  551  467  858   51  226    73 #>  [450,]  393  593  468  713  340  933  411   26   82   579 #>  [451,]  984  660  740  207  602  233  147  326  369   894 #>  [452,]  149  369  326  675  216  132  837  179  517   411 #>  [453,]  438  220  456  968  737  386  656  430   24   541 #>  [454,]  971  302  653  156  488  158  621  538  977   982 #>  [455,]   96    8  232  699    1  490  995  923  821   138 #>  [456,]  453   24   59  159  968  386  430  737  220   438 #>  [457,]  618   79  674  229  469  238  843  827  764   363 #>  [458,]  111  258  555  922  168   90  565  771  823   156 #>  [459,]  757  578  338  688  641  490  211  699  755   669 #>  [460,]  901  683  436  973  356  995    1  821  838   700 #>  [461,]  526  234  446   88  434  146  916  883  874   543 #>  [462,]  429  486  829  213  627  261  823  399  922   111 #>  [463,]  950  282  253  635  362  271  534  173   64   150 #>  [464,]  235  825  248  527  824  105  865  427  553   222 #>  [465,]  569  763   71  409  417   22  985  587  718   759 #>  [466,]   52  570  943  270  706  885  170  366  617   204 #>  [467,]  902  449  858  264  815  936  766  775  551   431 #>  [468,]  318  450   82  393  713  591  577  250  933   593 #>  [469,]  618  827  410  927  704  135  363   22  749   329 #>  [470,]  252  574  623  977  217  289  743   97  857   406 #>  [471,]  520  227  199  341  294  854  762   78  586   171 #>  [472,]  397  448  644   98  728  932   58  867  832   420 #>  [473,]   94  244  384  534  813  349  193  893   95    24 #>  [474,]   40  697  860  104  785   13  387  522  686   690 #>  [475,]  797  767  181  371  847  788  867  728  529   947 #>  [476,]  318  730  468  237  856   36  169  295  355   523 #>  [477,]  568  696   38  556  203  166  304  911  899   914 #>  [478,]  962  608  484  334  118  748  993  297  769   351 #>  [479,]  998  354  165  246  191  439  135  225  927   310 #>  [480,]  795  364  380  765  559  734  726  917  940   861 #>  [481,]  727   45  183  552  931  327   56  703  637   857 #>  [482,]  333  905  789  532  398   28  960  937   75   494 #>  [483,]  360  568  567  166   97  328   56  184  626   370 #>  [484,]  297  351  118   47  506  962  769  209  760   478 #>  [485,]  708  345  537  116   76  419    6  521  810   871 #>  [486,]  245  823  771  429  894  213  462  593  261   250 #>  [487,]  886  103  646  279  372  230  836  598  221   422 #>  [488,]  621  619   57   11  771  653  171  454  862    26 #>  [489,]  269  563  802  909  428   38  143  358  325   810 #>  [490,]  699  688  757  459   49    8  138  455  368   641 #>  [491,]  665  413  376  437  244  502  473  879  907   758 #>  [492,]  735  164  516  515  612  939  255  829  761   941 #>  [493,]  167  926  128  725  611  860  949  104  739   794 #>  [494,]  532  398   12  749   25   75  789  333  831   601 #>  [495,]   87  649  748  334  753  962  769    3  168   204 #>  [496,]   14  916  214  152  543  571  526  142  246   546 #>  [497,]  155  498   92  814   31  760  859  324  507    53 #>  [498,]  497   92  155  814   53   35  118  859  178   507 #>  [499,]  906  595  154  584  808  164  711  531   39   920 #>  [500,]   70  113  638  420  877   50  733  972  658   425 #>  [501,]  845  696   76  151  911  158  304  325  441   804 #>  [502,]  864  665  684  491  413  614  244  979  879   473 #>  [503,]  415  319  226   50  264  877  449  775  425    51 #>  [504,]  842  215   49  171  199  947  619  512  137   762 #>  [505,]  974  904  863  761  255  898  169  888  124   261 #>  [506,]  297   47  375  351  484  209  254  132  560   769 #>  [507,]  359  814  498  497  350  118  608  178  155    53 #>  [508,]  698  346  356  671  910  275    1  141  337   569 #>  [509,]  826  365  107  272  549  176  747  514  433   425 #>  [510,]  262  766  951  996  392  970  915  979  206   417 #>  [511,]  625  126  158  280  147  631  880  907  971   738 #>  [512,]  987   41  296  586  251  175  956  504  215    16 #>  [513,]  667  849  222  518  690  307  697  825  522   202 #>  [514,]  176  311  210  549  509  272  365  107  584   705 #>  [515,]  612  735  959  941  920  492  664  918  829   939 #>  [516,]  255  761  492  829  974  904  505  863  584   817 #>  [517,]  948  837  862  373  530  126  812   11  971   629 #>  [518,]  222  673  849  513  293  940  878  256   13   825 #>  [519,]  874  234  883  414  889  100  461  571   23   988 #>  [520,]  341  471  294  199  187  762   78  712  709   171 #>  [521,]  777  871  406  188  876  345  537   27  977   610 #>  [522,]  686  620  853   46  667  513  104  690  122   200 #>  [523,]  559  347  765  730  329   34  912  364  480   928 #>  [524,]  257  844  850  603  554  190  932  226  319   365 #>  [525,]   67  168  412  872  160   87  899  882    3   568 #>  [526,]   88  461  916  543  446  496   59  234  434    14 #>  [527,]  235  464  824  825  105   13  248  673  256   940 #>  [528,]  787  589  741  150  186  219  390  921  590   839 #>  [529,]  648  403  371   72  383  788  669  401  786   181 #>  [530,]  812  517  373  948  793  182  975  629  625   158 #>  [531,]  798  920  635   84  515  983  829  390  959   362 #>  [532,]  789  494  333  398   75  749   28   12  905   618 #>  [533,]  352  308  546  315  152  163   43   14  721   214 #>  [534,]   64  473   94  384  362  796  813  463  282   950 #>  [535,]  387  673  643  518   29  256  293  558   13   878 #>  [536,]   23  234  214  916  571  758  874  998  461   496 #>  [537,]  116  325   76  708  485  158  975  419  871   280 #>  [538,]  302  574  743  977  786  454  401  648   54   529 #>  [539,]  842   49  762  991  137   33    5  504  407   227 #>  [540,]  197  737   91   35  959  438  993  314   39   859 #>  [541,]   84  179  241  635  438  228  149  453  737    91 #>  [542,]  162  680  703  637  426  188  299   68   27   876 #>  [543,]  759  916   88  526  496  571  718  645  234   225 #>  [544,]  121  388  976  897  792  131  217  955   81   557 #>  [545,]   21  109  339  336   33  816  284  368  422    44 #>  [546,]  315  214  533  367  152  352  496   14  916   957 #>  [547,]  775  896   50  601  596   25  815  877  264   858 #>  [548,]  685  797  308  867  181  299  475  231  426   371 #>  [549,]  176  107  666  433  210  776  272  826  605   283 #>  [550,]   64  534  271  362   94  463  913  473  260   684 #>  [551,]   73  936  858  902  264  449  226  300  724   808 #>  [552,]  931  786  613  576  743  403  914  538  900   882 #>  [553,]   81  623  252  105  865  982  464  621  997   895 #>  [554,]  603   99   73  319  226  300  966  668  281     9 #>  [555,]   90  209   26  278  458  565   47  351  823    11 #>  [556,]  203  304  401   38  807  869  911  914  648   477 #>  [557,]  140  623  342  857  553   81  470  252  105   620 #>  [558,]  293  256  307  940  573  604  633  734  673   518 #>  [559,]  523  347  765  480  912  329  928   82  730   795 #>  [560,]  978  267  715  375  506  265  258   47  297   209 #>  [561,]  382   43   17   32  231  443  774  143  379   797 #>  [562,]  273  159   30  456  809  117  540  630   65   197 #>  [563,]  489   38  269  810  424  358  802  914  116   708 #>  [564,]   70  901  420  231  751  821  447  658  923   995 #>  [565,]  331   90  429  250  555  768  458  823  189   771 #>  [566,]  587   22  749   71  815   36  409  985  569   417 #>  [567,]  166  328  483  679  360  568  370  120  626    97 #>  [568,]  483  360  477  166   97  626  696  899  328   151 #>  [569,]   22  465   71  985  587  942  409  423  346   763 #>  [570,]  466  644   52  706  617  943  397  472  780   747 #>  [571,]  234  874  496  543  357  916  526  298  759   461 #>  [572,]  435  323  652  791  752  239  400  265  804   108 #>  [573,]  781  256  558  949  611  293  604  926  825   725 #>  [574,]  977  289  538  406  470   27  743  252  846    54 #>  [575,]  616  327  980  931  552  114  868  183  613   786 #>  [576,]  613  900  687  931  552  424  703  721  914   426 #>  [577,]  933  263  468  300  393  966  579  250  450   591 #>  [578,]  338  211  459  641  757   61  102  610  688   865 #>  [579,]  263  933  429  393  250  823  941  450  577    91 #>  [580,]  856  112  154  607  124  355  745  906  599   782 #>  [581,]  640  288  710  989  746  853   19  109  129   284 #>  [582,]  377   77  873  866   62   46  522  690  853    78 #>  [583,] 1000  952  640  853  710  432  115  727  268   620 #>  [584,]  164  311  761  499  808  516   99  255  300   492 #>  [585,]  949  870  778  843  374  248  200  729  284   934 #>  [586,]  227  278  512  987  471  199  215  445  947    16 #>  [587,]   36  985  691  417  346  566   22   71  569   671 #>  [588,]  307  697  817  863  261  255  974  505  399   290 #>  [589,]  219  787  286  173  803  528  839  692  186    29 #>  [590,]  925  744  119  908  839  589  654  639  878   922 #>  [591,]  189  713  768  250   82  468  393  331  283   776 #>  [592,]  400  239  804  695  813  367  625  384  419   975 #>  [593,]  326   57  450  245  393  823   26  771   82   713 #>  [594,]  655  880  718  440  647  193  629  957  625   942 #>  [595,]  499  714   39  164  668  531  664  735  694   584 #>  [596,]  749  601  236   25  547  944  815  566  494   775 #>  [597,]  366  628  170   15  980  153  875  442   78   981 #>  [598,]  165  192  221  372   69  368  157   83    8    61 #>  [599,]  607  892  580  348  856  355   42  732  201   906 #>  [600,]   54  205  865  200   44  709  427  211  248   464 #>  [601,]   25  236  259  337  896  749  596  636  436   125 #>  [602,]  796  241  149  451  740  179  660  394  207   253 #>  [603,]  226  554  966   73  319  724  300  296  272   956 #>  [604,]  898  888  128  505  974  558  276  348  101   307 #>  [605,]  666  776  433  826  733  107   16  739  991   161 #>  [606,]  249  972  343  870  778   33  739  305  425   493 #>  [607,]  599  856  580   42  112  355  892  295  828   201 #>  [608,]  478  350  693  962  118  814  507  484  359   748 #>  [609,]  830  829  516  134  119  839  692  492  983   255 #>  [610,]  391  102  773  338  895  846  578  977  982   924 #>  [611,]  926  101  725    4  128  912  739  934    5   200 #>  [612,]  735  515  664  218  939  959  941  314  281   492 #>  [613,]  576  931  687  900  552  424  703  721  914   426 #>  [614,]  282  864  502  271  312  150  950  879  463   689 #>  [615,]  779  291  285  784  320  111  922  627  849   458 #>  [616,]  575  114  980  327  552  931  403  786  900   366 #>  [617,]  397   52  324  251   98  987  956  586  943   832 #>  [618,]  469  457   79  827  704  135  410  238  363   927 #>  [619,]  171  653  488  199  712  341  762  709  137   187 #>  [620,]  686  140  342  522   13  427  122  853  825   222 #>  [621,]  488  320  865  982  454  211   57  553  619   202 #>  [622,]  243   38  954  994  868  477  882  563  914   881 #>  [623,]  252  553  470   81  557  131  184  792  935   982 #>  [624,]  634  361  945  431   51  903  936   20  110   316 #>  [625,]  126  511  629  820  147  517  647  193  158   880 #>  [626,]  151  328  696  441  287  501  120  568   76   185 #>  [627,]  145  894  839  660  784  715  291  486  462   180 #>  [628,]   78  597  854  153  981  872  999  471  520    46 #>  [629,]  820  647  675  423  517  126  625  369  594   862 #>  [630,]  965  717  117   30  507  693  197   65  562   273 #>  [631,]  738  511  907  280   63  404   76  501  625   158 #>  [632,]  444  704  756  207  676  402  410  827  364   740 #>  [633,]    2  134  130  558  348  604  399  293  734   898 #>  [634,]  316  624  110  694  123  902  903  467  668    20 #>  [635,]   84  541  362  228  253  798  463  179  241   920 #>  [636,]  259  973  125  436  337  601  236  407  638    25 #>  [637,]  703  542  289  406  162   27  680  727   68   574 #>  [638,]  742  972  305  636  343  500  407  259   50   896 #>  [639,]  967  412  160  887  525  168  925  654  878   922 #>  [640,]  710  583  853  581 1000  746  952  716  288   104 #>  [641,]  757  688  211  459  578  423  928  338  490   138 #>  [642,]  809  988   31   65  945  443   17  292  357    32 #>  [643,]   29  286  317  589  535  692  803  119  673     2 #>  [644,]  472  570  397  448  706  728  747  420  832    58 #>  [645,]  759  893  395  889  763  543  883  417  392   465 #>  [646,]  279   48  487  836   89   68  731  924  841   886 #>  [647,]  629  193  675  820  594  655   60  423  369   625 #>  [648,]  401  203  914  529   72  807  869  302  424   788 #>  [649,]  495  334  748  918   87  925    3  744  313   769 #>  [650,]  106  841   63   89    6  376  701  332  208   986 #>  [651,]  270  891  243  204  155  497   52  466  814   324 #>  [652,]   38  477  804  696  239  752  911  435  358   350 #>  [653,]  712  187  619  669  657  341  199  755  171   454 #>  [654,]  160  908  834  925  639  887  360  525  389   590 #>  [655,]  594  880  440  647  718  423  942  193  629   395 #>  [656,]  946  968  938  386  394  241  228  691  453   430 #>  [657,]  669  712  653  373  215   72  807  947  682   187 #>  [658,]  953  683  973  460  564  396  700  636  821   436 #>  [659,]  654  925  525  478    3  477  160  881  748    87 #>  [660,]  451  145  180  894  253  627  784  602  291   984 #>  [661,]  188  876  731  678  162  345  542  426  777   687 #>  [662,]  208  930  719  805  400    6   93  986  196   592 #>  [663,]  223  415   50  503  306  425  547  195  775   113 #>  [664,]  612  314  218  281  117  735  959  939    9   197 #>  [665,]  491  413  502  376  879  437  244  473  864   719 #>  [666,]  776  605  433  107  549  739  768  826  283   272 #>  [667,]  513  849  690   46  202  222  331  999  522   200 #>  [668,]  554  273   39   20  127  664   99    9  281   808 #>  [669,]  657  653  712  755   72  947  373  459  187   215 #>  [670,]   42  937  822  732  892  607  295  828  266   905 #>  [671,]  346  508  431   36  587  851  356  698  275   936 #>  [672,]  527  824  256  673   13  235  781  861  105   248 #>  [673,]  256  518  527  940   13  293  222  105  825   558 #>  [674,]  102   61  764   83  229  843  391  329  578   729 #>  [675,]  277  647  629   60  820  452  369  985  149   837 #>  [676,]  378  704  410  402  958  632  827  469  822   206 #>  [677,]  437  758  440  330  410  655  395  763  135   594 #>  [678,]  661  162  687  731  188  703  876  542  722   637 #>  [679,]  567  120  328  166  196  483  626  151  370   360 #>  [680,]  542  162  816   27  703  426  299  637  157   289 #>  [681,]  121  544  370  679  955  783  897  217  120   332 #>  [682,]  750  990  948  278  254  411  657  807   41   837 #>  [683,]  460  953  658  700  901  361  973  447  945   821 #>  [684,]  979  864  502  915  349  392  244  206  754   473 #>  [685,]  548  299  181  308  426  797  371  221  867   475 #>  [686,]  620  522  122  140  342  853   13  222  202   825 #>  [687,]  613  576  900  703  426  931  299  162  721   637 #>  [688,]  757  490  699  138  641  459    8   69  338   578 #>  [689,]  344  822  800  201  892  614   42  303  632   670 #>  [690,]   46  667  513  854  697  873  522  331  290   999 #>  [691,]  430   36  417  277  587  946   60  985  409   656 #>  [692,]  173  134  803  130  839  180  219  983  784   627 #>  [693,]  608  965  478  748  350  993  242  507  359   435 #>  [694,]  110  123  316  634  938  159  456  766   39   913 #>  [695,]  446  178  428  975  804  239  182  146  143   530 #>  [696,]  151  501  477  626  911  304  556  899  568    76 #>  [697,]  307  588  690  513  817  290  518  725  558   667 #>  [698,]  508  356    1  346  337  910  995  275  671   436 #>  [699,]  490    8  688  757   69  455  459  138  338   192 #>  [700,]  944  439  225  298  973  683  953  460   86   821 #>  [701,]  650   93  208  986  376   89  719    6   63   841 #>  [702,]  404  997  756  935  312  720  852  982  984   861 #>  [703,]  637  542  162  680  426  687   27  289  299   576 #>  [704,]  676  827  410  632  469  402  378  618  444    79 #>  [705,]  492  514  939  164  311  516  172  735  210   290 #>  [706,]  728  867   52  405  442  397  366  570  114   617 #>  [707,]  886  230  310  103  658  396  636  447  770   564 #>  [708,]  116   76  537  485  424  325  419  810  911   401 #>  [709,]  762  755  205   44  199  619  171  341  712   653 #>  [710,]  640  746  581  104  853  583  860 1000   85   115 #>  [711,]  906  154  499  599  580  112  607  124  782   303 #>  [712,]  653  187  199  341  657  669  619  755  171   278 #>  [713,]  393   82  250  591  189  450  468  593   26   768 #>  [714,]  595   30  668  117  127  164  664  273  735   499 #>  [715,]  978  560  145  258  627  291  839  458  660   506 #>  [716,]  746  640  710  582  581   77  853  866  860   772 #>  [717,]  630   65  891  497  651  507   31  809  155   240 #>  [718,]  594  759  655  395  465  440  942  246   88   193 #>  [719,]  208  662  376  400   93  665  592  929  491    63 #>  [720,]  247  852  907  312  702  404  756   63  880   437 #>  [721,]  810  900  345  269  181  299  426  424  788   371 #>  [722,]   68  268  542  703  678  637  727  422  162    55 #>  [723,]  672   10  573  781  387  949  266  256   28   558 #>  [724,]  226   73  161  300  603  272  319  296  966   551 #>  [725,]  926  611  200  739    4  104  128  794  825   493 #>  [726,]  917  734  364  795  201  380  480  130  892   765 #>  [727,]  481  637  289  703 1000  857  816   68  268   680 #>  [728,]  867  397  797   98  475  706  472  371  767   947 #>  [729,]  870  843  368   83    5  211   33   12  928   641 #>  [730,]  476  523   34  347  318  237  765  559  928   831 #>  [731,]  876  188  661  777  542  521  406  162  345   106 #>  [732,]  348  266  892  670   42  607  599  201  828   937 #>  [733,]  161  826  605  425  932  776  666  107  724   448 #>  [734,]  726  380  917  940  399  795  130  480  364   213 #>  [735,]  612  515  492  164  664  939  941  959  920   218 #>  [736,]  385  818  875   15  204  753  170  597  466   366 #>  [737,]  438   91   35  453  540  375  220  139  132   452 #>  [738,]  631  280  404  792  441  131  511  185  935    76 #>  [739,]  926  666  794  605  611  101  433  725  776   826 #>  [740,]  207  984  326  451  369  765  444  820  602   394 #>  [741,]  390  839  219  950  173  145  715  150  635   798 #>  [742,]  638  305  972  770  343  636  230  125  806   500 #>  [743,]  538  574  786   97  552  470  302   45  977    54 #>  [744,]    3  925  258  839  922  715  334  769  590   168 #>  [745,]  833  856  888  580  898  904  505  476  828   974 #>  [746,]  710  860  640  716  581  772  785  853  288   104 #>  [747,]  780  190  448   58  932  570  943  644  170   472 #>  [748,]  649  334  478  495   87  608  962  918  693   965 #>  [749,]  236  566  596   25  601  494  135  469  763    12 #>  [750,]  254  948  132  682  990  216  837  517  411   807 #>  [751,]  564  420   70  396  500  901  644  472  658   113 #>  [752,]  239  804  791  359  108  695  400  435  811   242 #>  [753,]  818  204  875  736  885  153  943  172  981    37 #>  [754,]  100  392  893  889  970  349  262  244  883   979 #>  [755,]  709  669  762  712  947  653  199  459  657   187 #>  [756,]  702  861  852  632  997  444  795  720  207   480 #>  [757,]  688  490  459  641  699  138  578   49  338   211 #>  [758,]  677  330  413  437  354  395  718  759  655   763 #>  [759,]  543  763  718  645  465  395  354  225  246    88 #>  [760,]  155  218  314  859    9  484  197  840  497   498 #>  [761,]  255  516  974  505  904  863  263  941  169   124 #>  [762,]  199  709  171  755  137  520  619  341  539   227 #>  [763,]  465  759  410  569  395  135  718  440   22    71 #>  [764,]   83  674  102   61  924  157  391  229  773   895 #>  [765,]  523  364  559  795  480  740  347  730  890   245 #>  [766,]  262  510  855  970  467  123  996  110  938   392 #>  [767,]  847  475  947  215  788  353   72  669  657   797 #>  [768,]  591  189  283  331  171  776  713  666  137   250 #>  [769,]   47  297  484  334  506  258  351  962    3   209 #>  [770,]  806  742  638  972  305  113  343  500  636    50 #>  [771,]  823  245  486  111   57  593  488  429   82    26 #>  [772,]  785  860  794  873  509  746  582  549  129   826 #>  [773,]  391  924  102  610   61  764  841  674  835   895 #>  [774,]   32  382  301  847  767  799  182  909  353   428 #>  [775,]  449   51  547  264  877  936  858  415  815   467 #>  [776,]  666  605  107  433  283   16  768  549  272   826 #>  [777,]  521  876  188  871  731  345   69  372  192   793 #>  [778,]  343  585  305  374  870  843   75  238  606    12 #>  [779,]  615  291  285  320  784  111  935  997  451   660 #>  [780,]   58  943  747  190  170  448  932  884  981   964 #>  [781,]  573  363  329  824  523  559  256  734  266    34 #>  [782,]  961  112  154  580  902  828  467  856  808   264 #>  [783,]  921  287  185  792  626  897  131  120  186   151 #>  [784,]  803  291  180  779  615  660  627  219  145   451 #>  [785,]  860  772  794  493  873  549  739  697  725   474 #>  [786,]  552  403  882  538  648  529  743  914  383   401 #>  [787,]  150  589  219  528  186  950  173  803  741   921 #>  [788,]   72  909  767  269  182  847  475  529  807   648 #>  [789,]  532   75  494  333  398  905  958   28   12   363 #>  [790,]  217  332  370  406  485    6  322  805   76   106 #>  [791,]  108  242  267  752  435  239  375  993  265   384 #>  [792,]  131  935  252  738  623  470  184  404  287   217 #>  [793,]  373  871  812  530  142  957  669  975  459   971 #>  [794,]  739  433  826  860  129  549  666  725  605   926 #>  [795,]  364  480  765  917  380  726  734  559  894   523 #>  [796,]  602  241  394  149  179  740  253  647  207   369 #>  [797,]  475  181  867  371  728  767  548  847  788   685 #>  [798,]  531  635  920  362   84  390  463  228  983   741 #>  [799,]  301  141  175  275  910  353  838  356  987   774 #>  [800,]  852  756  317  861  997  803  976  702  689   795 #>  [801,]  562  519  988  224  434  159  874  809  883   642 #>  [802,]  489  954  269  814  428  909  143  563  990   788 #>  [803,]  180  784  173  219  660  286  692  291  627   779 #>  [804,]  239  911  325  752  501  695  358  419  592   489 #>  [805,]    6  196  208  322  790  485  986  120  662   708 #>  [806,]  770  742  638  113  305  972  707  343  500    50 #>  [807,]   72  990  203  869  657  648  556  682  401   304 #>  [808,]  154  124  300   73  551  580  112  906  902   745 #>  [809,]   65  642   31  273  292  988  945  443  497    74 #>  [810,]  721  419  269  345  563  489  116  708  909   537 #>  [811,]  359  350  752  507  239  652  358  435  919   240 #>  [812,]  373  530  517  837  793  948  411  182  657   142 #>  [813,]  384   95  193  309  625  473  845  602  149   647 #>  [814,]  118  498   92  802  497  155  507  178   53   484 #>  [815,]  858  566  936  587   36  902  467  476  671   346 #>  [816,]  680   19   44  268  284  205  545  336  109   600 #>  [817,]  290  588  462  697  307  863  255  261  331   690 #>  [818,]  753  875  736  204  885  943   15  170  780   385 #>  [819,]  964  884  445  172  281    9   37   99  966   956 #>  [820,]  629  423  862  126  647  369  675  517  147   625 #>  [821,]  973  436  995    1  455  923   96  901  460   259 #>  [822,]  958  670   42  402  676  905  937  892  201   689 #>  [823,]  771  429  245  486  593  250   90  579   26   393 #>  [824,]  527  248  464  235  229  825  105  865  861   835 #>  [825,]  464  235  527  248   13  824  222  200  256   427 #>  [826,]  605  433  107  733  666  776  272  549  739   161 #>  [827,]  363  704  469  329  402  618  410   12  676    22 #>  [828,]  833  856  295  607  745  580  237  670  732   782 #>  [829,]  983  920  462  255  941  516  761  627  399   609 #>  [830,]  609  119  492  516  817  829  290  255  744   462 #>  [831,]   34  934   12   75  363  730  274  398  329   523 #>  [832,]   32  443  397  844   98  251  987  838  617   301 #>  [833,]  745  828  195  960  274  856  888  333  831   398 #>  [834,]  899  908  184  285  360  389  921  615  320   258 #>  [835,]  335  229  102   81  674  924  773  824  391   861 #>  [836,]  886  230  238  598  125   83  374  310  165   764 #>  [837,]  411  216  517  948   26   11  812  373  862   682 #>  [838,]  175  275  799  296  356  301  251  257  292   987 #>  [839,]  627  219  145  715  173  784  741  291  692   744 #>  [840,]  884  981   37  943  586  445  324  760  278   617 #>  [841,]  106   89  650  773   63  924  391  332  731   720 #>  [842,]  504   49  991  137  539  762  171  215  199   928 #>  [843,]  363  729   12  329  674   83   75  870  585   934 #>  [844,]  257  251  932  956  832  838  524  987  324   617 #>  [845,]  309  265  501  323  185  813   95  441  267   151 #>  [846,]  895  289  610  977  102  574  865   81   27   924 #>  [847,]  767  232  475  353  788  215  947  181  774   182 #>  [848,]  952  481  857  727   45   56  955   77  583  1000 #>  [849,]  222  513  667  202  518  320  111  464  825   621 #>  [850,]  524  257  226   51  319  877  503  365  603   844 #>  [851,]   59  671  430   74  275  691  277  431   20   903 #>  [852,]  756  720  702  800  312  247  976  861  997   335 #>  [853,]  522  640  686 1000  620   19  288   77  583   104 #>  [854,]   78   46  628  471  981  999  294  520  153   341 #>  [855,]  766  970  889  645  510  262  467  123  316   110 #>  [856,]  580  607  112  745  476  828  355  295  124   237 #>  [857,]   56  470  557   45   97  217  727  743  370   289 #>  [858,]  815  936  551  902  264   36  449  671  467   587 #>  [859,]    9   41  314  956   35  340  445  760  218   155 #>  [860,]  785  794  104  493  772  746  725  710  926   739 #>  [861,]  997  756  105  976  480  824  702  835  795   553 #>  [862,]   57   11  971  517  126  820  369  233  147   837 #>  [863,]  261  974  505  588  761  331    4  255  904   101 #>  [864,]  502  684  979  206  244  413  614  491  392   665 #>  [865,]  211  600  621  248  553  578   54  982  824   846 #>  [866,]  327  980  442  377   15  597  183  170  582   385 #>  [867,]  728  797  475  397  706  371  548   98  181   472 #>  [868,]  994  881  980  882  575  366  616  622    7   597 #>  [869,]  807  383  954  203  556  278  648   72  401   882 #>  [870,]  729   33  585  368  374  843    5  200   83    44 #>  [871,]  793  521  975  777  537  957  530  152    8   373 #>  [872,]  999  168   67  628  153   78  412  854   46   525 #>  [873,]  194  690   46  582  290  153  854  210  697   785 #>  [874,]  234  519  883  571  461  526   23  357  889   434 #>  [875,]  818   15  153  170  736  597  981  753  385   780 #>  [876,]  188  731  777  661  345  521  162  542  406   426 #>  [877,]  775  896  226   51  161  936  547   50  503   724 #>  [878,]  967  518  922  887  222  849  615  119  513   639 #>  [879,]   95  665  491  813  473  534  614  384  502   312 #>  [880,]  655  594  907  440  511  625  423  147  126   629 #>  [881,]  868  416    7  160  525  882  622   67  412    18 #>  [882,]  786   67  869  914  203  556  994  648  552   401 #>  [883,]  889  234  100  874  461  645  903  893  754   543 #>  [884,]  964  445  819   37  840  943  956  172  981   283 #>  [885,]  943  190  324  884  818  466  964  780   52   819 #>  [886,]  230  836  310  598  125  221  636  165  487   238 #>  [887,]  389  908  878  834  967  184  639  160  122   654 #>  [888,]  898  604  745  101  505  904  276  128  974   833 #>  [889,]  883  100  645  754  893  970  234  262  855   392 #>  [890,]  969  169  355  894  245  179  394  326  765   486 #>  [891,]  651   31  270  497  443   52  324   92  405   155 #>  [892,]  201   42  732  348  917  726  607  599  266   670 #>  [893,]  392  244  395  754  349  645  262  417  968   100 #>  [894,]  245  145  660  486  890  627  253  364  179   326 #>  [895,]  846  610   81  924  102  289  391  553  865   977 #>  [896,]  337  259  601  698  436   25  547  407  877   346 #>  [897,]   80  544  908  783  184  388  557  792   29   389 #>  [898,]  604  888  505  904  974  745  276  348  101   128 #>  [899,]  834  258  285  156  696  441  568  978  458   560 #>  [900,]  576  613  687  721  931  114  424  552  914   529 #>  [901,]  460  995    1  821  838  436  356  799  923   683 #>  [902,]  467  449  551  858  264  936  815  782   73   775 #>  [903,]   59  851  431  945   74  543  883  988  624   110 #>  [904,]  505  974  761  255  898  888  863  169  124   745 #>  [905,]  937  958  789  822  670  266  532  482  333   732 #>  [906,]  154  711  580  124  112  499  808  355  599   607 #>  [907,]  880  312   63  511  404  720  631  655  625   594 #>  [908,]  834  887  184  921  389  654  186  285  360   287 #>  [909,]  428  269  182  788  489  143   72  990  975   802 #>  [910,]  141  275  799  508  356  698  215   49  353   175 #>  [911,]  325  304  804  556  990  501  254  696   38   203 #>  [912,]    4  347  261   82  559  101  523  611  591   213 #>  [913,]  362  349  386  228  262  915  968  656  938    24 #>  [914,]  401  648  424  203  556  786  869  529   38   882 #>  [915,]  979  996  206  510  262  684  392  303  349   913 #>  [916,]  214  496  526   14   88  152  543  142  718   461 #>  [917,]  726  201  364  795  734  892  765  480  380   523 #>  [918,]  649  515  313  334  965  612  959  735  748   993 #>  [919,]  143  358  489  269  810  419  695  563  909   428 #>  [920,]  829  983   84  941  531  635  515  798  969   263 #>  [921,]  287  186  783  185  626  834  908  151  285   441 #>  [922,]  458  111  615  168  258  462  320  878  291   627 #>  [923,]   96  995  407    1  455  436  821  337  259    49 #>  [924,]  773  391  102  895  764  610  846  835  335    61 #>  [925,]    3  744  590  639  649   87  654  258  525   168 #>  [926,]  611  725  128  739  101  167  493    4  912   200 #>  [927,]  942  440  138  469   69  423  569  410  641    61 #>  [928,]  137  641  211    5   82  991  757  842  347   559 #>  [929,]  212  400  719   23  224  930  592   95  879   384 #>  [930,]  662  400  929  719  208  592  358  239  196   572 #>  [931,]  552  613  576  900  687  786  575  616  481   424 #>  [932,]  448  844  733  251   58   16  472  257  190   780 #>  [933,]  263  579  577  450  220  393  468  438  969   340 #>  [934,]  831   34   12  274  611   75  843  363  398   729 #>  [935,]  131  792  404  997  702  982  252  441  779   623 #>  [936,]  858  551  449  431  902  264  671  815  775   467 #>  [937,]  670  905  822  732   42  266  958  828  344   892 #>  [938,]  656  946  691  430  112  996  228  968   36   417 #>  [939,]  172  281  612  218   99  735  311  314  664   941 #>  [940,]  293  256  380  734  673  480  518  213  558   527 #>  [941,]  263  579  429  920  612  933  218  829  515    91 #>  [942,]  440  927  246  423  569  138  655  594  465   142 #>  [943,]  885  884  780  190  324  840   52  617  964   466 #>  [944,]  298  700  439  225   86  174  596  759  973   236 #>  [945,]  988  903  357  624   74  292   20  460  838   683 #>  [946,]  656  394  691  985  409  938  430  417  277    71 #>  [947,]  215  767  755  199  657  227  669   49  712   504 #>  [948,]  750  254  517  132  837  682  411  216  530   990 #>  [949,]  585  104  248  825  573  200  725  235  870   493 #>  [950,]  282  253  180  463  150  660  173  602  219   145 #>  [951,]  510  378  566  958  996  295  676  766  749   402 #>  [952,]  583 1000  432  727  640  853  115  268  620   427 #>  [953,]  683  658  700  361  944  460  298  973  439    86 #>  [954,]  869   38  802  556  203  807  914  990  489    72 #>  [955,]  217  857  370   56  790  470  544  557  727   637 #>  [956,]  445  251  987  512  966  324  175  859  844   884 #>  [957,]  214  594  142  975  793  246  367  871  718   530 #>  [958,]  822  676  378  905  402  704  951  789  670   827 #>  [959,]  540  612  515   91   39  664  197   84  438   941 #>  [960,]  195  833  276  333  274  888  745  398  828   167 #>  [961,]  144  782  306  264  828  833  467  902  449   154 #>  [962,]  478  484  351  769   47  297  334   87  118   994 #>  [963,]  548  103  685  308  564  422  231   43  299   420 #>  [964,]  819  884  445   37  172  283  966  956  210   281 #>  [965,]  117  197  693  630  993  918  608  540  959   507 #>  [966,]  296  603  445  956   16  577  512  189  964   283 #>  [967,]  878  639  887  412  122   62  290  922  194   518 #>  [968,]  386  656   24  453  349   60   94  430  456   946 #>  [969,]  169  890  355  124  933  486  245  263  894   179 #>  [970,]  262  392  754  855  510  766  889  645  979   893 #>  [971,]  454  126  158  862  517   11  233  147  657   653 #>  [972,]  638  343  305  742  606  249  407  339  778   636 #>  [973,]  436  821  259  636  995  460    1  225  337   439 #>  [974,]  505  904  863  761  255  169  898  888  261   124 #>  [975,]  419  871  530  537  182  909  325  957  793   428 #>  [976,]  997   81  861  131  935  335  835  105  702   553 #>  [977,]  574  538  289   27  406  846  454  610  252   470 #>  [978,]  715  560  258  506   47  267  297  145  375   458 #>  [979,]  915  684  392  864  206  262  349  510  754   244 #>  [980,]  327  616  597  866  366  575  442  868  377   183 #>  [981,]   37  153  840  854  628  471  884  875   78   283 #>  [982,]  252  621  935  610  553  454  147  404  977   280 #>  [983,]  829  920  894  969  145  627  130  399  253   635 #>  [984,]  451  147  207  740  369  233  126  862  326    57 #>  [985,]   71  409   22  277  587   36  569  417  946   675 #>  [986,]    6  650  367  485  315  805  208  106  345   731 #>  [987,]  251  175  512  956  301   98  586  353  799   215 #>  [988,]  945  357  903  642  809  874  434  526  519   234 #>  [989,]  249  581  606  339  109  972  545  129  288    21 #>  [990,]  750  807  682  254   72  182  948  428  911   788 #>  [991,]    5  842  137  539  928  504  605   49  591   768 #>  [992,]   40  588  697  290  474  817  785  307  604   128 #>  [993,]  242  108  791  197  267  375  540  334  118   484 #>  [994,]  243  954  882  366  868  962  869  840  622   270 #>  [995,]    1  923  436  821  356   96  455  901  698   353 #>  [996,]  510  295  915  938  206  946  112  237  262   656 #>  [997,]  861  702  935  976  105  756  553   81  982   131 #>  [998,]  354  479  246  758  191  759  225  439  496   214 #>  [999,]  872   78  854   46  168  628   67  341  458   667 #> [1000,]  583  952  853  727  268  640  427  620  432   816 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.21641412 0.3246105 0.4128897 0.4336046 0.4749079 0.4882999 0.5193037 #>    [2,] 0.70305968 0.7201189 0.7232409 0.8298070 0.8445470 0.9206742 0.9546233 #>    [3,] 0.55912593 0.6034299 0.6097717 0.6986042 0.7193032 0.7964347 0.8134693 #>    [4,] 0.17939034 0.4681167 0.4722175 0.4950045 0.5507267 0.6453863 0.6627762 #>    [5,] 0.31771433 0.3522444 0.5583510 0.6106296 0.6226417 0.6391414 0.6484110 #>    [6,] 0.50090309 0.6999893 0.8203664 0.8312986 0.8432659 0.9005836 0.9024810 #>    [7,] 0.56069559 0.5897626 0.7277612 0.7865600 0.7976442 0.8335970 0.8511498 #>    [8,] 0.27659122 0.3725645 0.4693914 0.4737205 0.4910300 0.4956460 0.5026863 #>    [9,] 0.42040406 0.4445792 0.5157478 0.5402961 0.5788474 0.6039898 0.6808228 #>   [10,] 0.86167496 1.3357028 1.4749042 1.7223607 1.7481231 1.7783933 1.7951303 #>   [11,] 0.27691214 0.3163247 0.3324361 0.3698783 0.4316846 0.4356812 0.4550343 #>   [12,] 0.44964902 0.5008429 0.5126941 0.5235459 0.5252572 0.5269614 0.6079325 #>   [13,] 0.52440790 0.5697012 0.5959494 0.6360067 0.7176575 0.7281176 0.7457524 #>   [14,] 0.23694105 0.4133134 0.4577369 0.5215338 0.5582246 0.6861892 0.7309187 #>   [15,] 0.43082686 0.5756308 0.5978181 0.6233607 0.6476990 0.6816193 0.7814552 #>   [16,] 0.40871310 0.4715035 0.4875703 0.5151719 0.5482995 0.5514961 0.5592805 #>   [17,] 0.69200597 0.7107246 0.7194235 0.7530291 0.9799815 1.0029639 1.0942747 #>   [18,] 0.79764419 0.8642754 0.9295723 0.9708199 1.0394292 1.1150973 1.1621014 #>   [19,] 0.46905894 0.4821812 0.4984785 0.5590547 0.7300515 0.7750737 0.8069175 #>   [20,] 0.27633504 0.6848281 0.7071536 0.7748437 0.8052606 0.8129605 0.8676561 #>   [21,] 0.20771491 0.3978314 0.4837394 0.5588798 0.6687562 0.7022320 0.7514510 #>   [22,] 0.26956504 0.2810553 0.3297798 0.4029995 0.4775021 0.4956621 0.5580045 #>   [23,] 0.74377420 0.7534387 0.8285593 0.9099175 0.9227064 1.0194544 1.0250888 #>   [24,] 0.39003669 0.4149096 0.4461422 0.5952533 0.6263150 0.6603403 0.7368035 #>   [25,] 0.24269159 0.3654335 0.5350110 0.5477920 0.6079325 0.6167257 0.6399397 #>   [26,] 0.27691214 0.3690463 0.4008991 0.4066525 0.4113188 0.4476212 0.4557129 #>   [27,] 0.51524993 0.5231898 0.5383120 0.5598038 0.5966187 0.6535818 0.6847187 #>   [28,] 1.02404167 1.0636277 1.1250968 1.1599666 1.2541229 1.2950843 1.3292248 #>   [29,] 0.31140027 0.6763782 0.6787011 1.0301615 1.0817725 1.1123846 1.1160659 #>   [30,] 1.10184199 1.1150369 1.1720515 1.1937315 1.2325414 1.2429177 1.2747750 #>   [31,] 0.51668864 0.7083004 0.7115959 0.7504884 0.7825171 0.7825621 0.8251498 #>   [32,] 0.39636638 0.4647652 0.4717602 0.5125237 0.5976041 0.6525448 0.6542596 #>   [33,] 0.50719817 0.5513356 0.5580247 0.5590842 0.5839307 0.5874172 0.6450222 #>   [34,] 0.23253817 0.4054120 0.4781621 0.5269614 0.5465923 0.5534555 0.5778495 #>   [35,] 0.49469899 0.5362227 0.5559533 0.5738924 0.5931151 0.5943982 0.6142115 #>   [36,] 0.20383047 0.3784398 0.4050495 0.4499021 0.4815231 0.5159281 0.5190120 #>   [37,] 0.45139568 0.4588773 0.5301280 0.5543229 0.5744741 0.5957850 0.6312541 #>   [38,] 0.47957138 0.5068370 0.5756987 0.5864688 0.6021139 0.6136519 0.6409509 #>   [39,] 0.70676775 0.7074174 0.7502723 0.8341943 0.8363482 0.8369421 0.8443244 #>   [40,] 1.02395308 1.1832585 1.2197479 1.2404779 1.2458678 1.4495959 1.4572385 #>   [41,] 0.41794173 0.4327686 0.4823674 0.5107703 0.5169618 0.5410941 0.5931151 #>   [42,] 0.37046900 0.5855656 0.6316113 0.7103210 0.7138788 0.7749703 0.8232042 #>   [43,] 0.36300821 0.6206800 0.6481978 0.6920060 0.7005249 0.8706328 0.9780819 #>   [44,] 0.25365117 0.3995358 0.4821812 0.5326156 0.5590842 0.5641094 0.5821457 #>   [45,] 0.49507227 0.7277612 0.7325207 0.7386667 0.7437636 0.7800295 0.7848247 #>   [46,] 0.39745565 0.4174823 0.5205264 0.6149492 0.6208132 0.7269498 0.7629015 #>   [47,] 0.22853382 0.3392497 0.3401143 0.4264012 0.4542845 0.4587430 0.5524317 #>   [48,] 1.13966319 1.3880778 1.4893667 1.5080062 1.6377586 1.7835236 1.7949751 #>   [49,] 0.33056939 0.4200125 0.4542190 0.4632580 0.4682206 0.4954153 0.5165174 #>   [50,] 0.69297535 0.8152217 0.8270188 0.8673313 0.8832135 0.8879679 0.8894306 #>   [51,] 0.55888652 0.7319227 0.7427283 0.7503351 0.8834263 0.8947888 0.9278649 #>   [52,] 0.45440305 0.5717666 0.6363958 0.6702641 0.7129889 0.7767994 0.7812663 #>   [53,] 0.30237633 0.5978580 0.6209280 0.6765216 0.7398897 0.7514211 0.7538045 #>   [54,] 0.40818894 0.4571500 0.5485224 0.5650000 0.6430779 0.6444005 0.6472138 #>   [55,] 1.19248753 1.3087772 1.7924729 1.7986647 1.8444050 1.8574492 2.0001217 #>   [56,] 0.49507227 0.5774405 0.6174813 0.8638349 0.8705765 0.8783550 0.9362204 #>   [57,] 0.31632469 0.3233322 0.3769461 0.4066525 0.4079960 0.4608261 0.4656866 #>   [58,] 0.39464798 0.5377230 0.6891468 0.7101796 0.7113127 0.7117639 0.7349748 #>   [59,] 0.45350279 0.4763886 0.5606033 0.5701124 0.6145939 0.6180642 0.6208685 #>   [60,] 0.44150718 0.4768930 0.4940364 0.4983066 0.5005334 0.5237418 0.5464563 #>   [61,] 0.33997047 0.3914709 0.3920180 0.4733975 0.4736604 0.4744073 0.5192501 #>   [62,] 0.50165139 0.6842911 0.7865600 0.8582108 0.9169566 0.9295723 0.9603756 #>   [63,] 0.55312778 0.5633875 0.6571821 0.6751733 0.7057565 0.7426513 0.7813881 #>   [64,] 0.55198846 0.7335155 0.8251204 0.9758415 0.9832071 1.0018288 1.0749265 #>   [65,] 0.42967947 0.8504900 1.0070889 1.0316690 1.0846420 1.0944358 1.2221994 #>   [66,] 1.64330415 1.7973665 1.8601522 1.9820141 2.1434951 2.2436707 2.3069621 #>   [67,] 0.56583757 0.5857884 0.5897626 0.5940447 0.6554808 0.7061355 0.7643217 #>   [68,] 0.69292034 0.8105272 0.8203769 0.8228748 0.8236487 0.8355060 0.8633068 #>   [69,] 0.33997047 0.4648931 0.4956460 0.5159121 0.5181592 0.5200255 0.5393467 #>   [70,] 0.41619506 0.6572602 0.7430790 0.8216702 0.8379220 0.9489816 0.9496357 #>   [71,] 0.14012704 0.2359142 0.2695650 0.4213596 0.4424690 0.4507483 0.5030827 #>   [72,] 0.26598603 0.2878120 0.4148064 0.4331411 0.4528600 0.4669468 0.4791460 #>   [73,] 0.39307789 0.4001362 0.5026144 0.5427942 0.5755580 0.6434205 0.6982818 #>   [74,] 0.27633504 0.5302830 0.6071751 0.7053668 0.7183755 0.7564362 0.7771202 #>   [75,] 0.52525719 0.5729036 0.5755682 0.5954739 0.6722211 0.6775423 0.6799855 #>   [76,] 0.39834616 0.4360727 0.4449928 0.5300928 0.5478049 0.5536854 0.5993056 #>   [77,] 0.71513753 0.7800466 0.8656694 0.9118847 0.9708199 1.0688857 1.0819517 #>   [78,] 0.35411682 0.3784746 0.4839348 0.5205264 0.5413916 0.5621014 0.5670688 #>   [79,] 0.53325946 0.6247723 0.7772200 0.7780270 0.8656084 0.8836415 0.8922870 #>   [80,] 0.72495210 1.1391410 1.1495767 1.1587125 1.2393833 1.3792412 1.4002717 #>   [81,] 0.34217323 0.5384226 0.5411119 0.5478608 0.6469737 0.6666372 0.6730436 #>   [82,] 0.30164908 0.4306356 0.4372774 0.4393561 0.4812936 0.5032413 0.5049428 #>   [83,] 0.47934937 0.4920252 0.4955640 0.5223397 0.5398227 0.5536937 0.5691224 #>   [84,] 0.37459805 0.4952750 0.5130184 0.6111406 0.6374192 0.7067678 0.7285787 #>   [85,] 1.30924339 1.4442666 1.4883766 1.5264962 1.5527557 1.6818136 1.6819560 #>   [86,] 0.56743310 0.7494725 0.7576299 0.9199835 0.9445941 0.9680457 1.1593341 #>   [87,] 0.66078804 0.7771802 0.7964347 0.8221614 0.8509468 0.8675859 0.8839002 #>   [88,] 0.48444700 0.5464563 0.5701124 0.5884043 0.6246791 0.6332236 0.6450471 #>   [89,] 0.37851262 0.5821490 0.6882658 0.9614938 0.9919089 1.0134675 1.0355549 #>   [90,] 0.20771682 0.4113188 0.4430714 0.4855225 0.5383317 0.5555723 0.5779121 #>   [91,] 0.37913094 0.4412370 0.5738924 0.5969696 0.6016111 0.6186488 0.6188756 #>   [92,] 0.37212764 0.5033519 0.5805832 0.5930408 0.6209280 0.7115959 0.7744191 #>   [93,] 0.96776752 1.0167472 1.2696672 1.2918625 1.3768194 1.4659631 1.4981866 #>   [94,] 0.41490958 0.5364068 0.5658240 0.6407494 0.6559167 0.6875770 0.7972298 #>   [95,] 0.48941427 0.5839944 0.5912074 0.6372527 0.7203827 0.8849186 0.8981929 #>   [96,] 0.31414653 0.3553606 0.4987837 0.5062163 0.5359369 0.5558281 0.5607513 #>   [97,] 0.46774644 0.5396000 0.5513568 0.5636322 0.6174813 0.6275900 0.7071603 #>   [98,] 0.39746932 0.4139794 0.5143610 0.5151082 0.5994009 0.6094192 0.6511733 #>   [99,] 0.36921748 0.4792357 0.6328759 0.6813582 0.7014546 0.7295211 0.7536807 #>  [100,] 0.45987262 0.6458642 0.6820221 0.7437742 0.7787570 0.9193815 0.9374301 #>  [101,] 0.49139398 0.4950045 0.5436961 0.5903835 0.6128986 0.6365069 0.6907874 #>  [102,] 0.27226398 0.3914709 0.4031230 0.4043992 0.4060028 0.5031197 0.5250710 #>  [103,] 0.95120064 0.9646332 0.9654041 1.0529162 1.0802018 1.1260746 1.1377014 #>  [104,] 0.74204510 0.7572516 0.7905194 0.8822296 0.8841654 0.9076944 0.9132348 #>  [105,] 0.44983737 0.4937935 0.5647469 0.5797362 0.5960612 0.6076634 0.6380638 #>  [106,] 0.28627206 0.5821490 0.6156319 0.6893646 0.7057565 0.7954466 0.8432659 #>  [107,] 0.37842929 0.4005615 0.4701010 0.4756768 0.5054032 0.5220499 0.5645654 #>  [108,] 0.29998060 0.4354505 0.6913283 0.7316568 0.7993414 0.8172652 0.8823244 #>  [109,] 0.29663832 0.3113073 0.3317357 0.4837394 0.5874172 0.7318759 0.7505791 #>  [110,] 0.48821232 0.6180077 0.7147899 0.8484348 0.8663373 0.8956216 0.8964199 #>  [111,] 0.43074064 0.4340024 0.4562151 0.5456651 0.5927020 0.5973650 0.6043887 #>  [112,] 0.47089494 0.6005085 0.6286886 0.6376047 0.6394403 0.6420581 0.7053714 #>  [113,] 0.69746533 1.1943838 1.2066782 1.2208420 1.2564189 1.3082613 1.3291520 #>  [114,] 0.51289933 0.5198787 0.7275934 0.7367648 0.7849453 0.7958323 0.8114317 #>  [115,] 0.57094962 1.1974263 1.3495081 1.3625695 1.3777251 1.3814397 1.3844419 #>  [116,] 0.20682460 0.3643431 0.3983462 0.4778550 0.5046568 0.5575358 0.5958366 #>  [117,] 0.71919486 0.7259840 0.7773824 0.9195736 0.9829049 1.0030670 1.0582169 #>  [118,] 0.39207130 0.5287510 0.5747082 0.6213834 0.6487529 0.6889521 0.7052937 #>  [119,] 1.00370133 1.1643011 1.2149611 1.2349617 1.3531001 1.4402022 1.4495959 #>  [120,] 0.54338286 0.5826077 0.7214978 0.7561738 0.8319038 0.9756280 1.0617508 #>  [121,] 0.79727537 1.0229385 1.3344895 1.3526354 1.3870840 1.4160838 1.4328891 #>  [122,] 0.69650926 0.7155234 0.8323484 0.8339587 0.8458085 0.8560778 0.8596412 #>  [123,] 0.53095433 0.5325222 0.7147899 0.8634715 1.0203606 1.1265462 1.1319776 #>  [124,] 0.36138788 0.5056297 0.5300604 0.5992569 0.6286886 0.6841569 0.7011964 #>  [125,] 0.42002624 0.6233111 0.6499356 0.6787683 0.6830390 0.7210376 0.7396769 #>  [126,] 0.30709096 0.3584247 0.3946374 0.4141443 0.4166840 0.4266637 0.4268706 #>  [127,] 0.76278006 1.0339792 1.1018420 1.1922306 1.1941017 1.2270053 1.2554530 #>  [128,] 0.43946131 0.4510556 0.5704952 0.6128986 0.7379389 0.7410649 0.7491548 #>  [129,] 0.53981419 0.7829352 0.7921178 0.8615194 0.8734318 0.8829977 0.9461502 #>  [130,] 0.36228122 0.4273048 0.6255867 0.6713443 0.7201189 0.7270182 0.7944705 #>  [131,] 0.21142718 0.3243427 0.5339710 0.6012206 0.6284088 0.6308084 0.6667383 #>  [132,] 0.28117579 0.3334769 0.3348436 0.3596142 0.4499437 0.5304445 0.5319389 #>  [133,] 0.97738991 1.1605186 1.2854172 1.3338047 1.3399228 1.3556785 1.3896900 #>  [134,] 0.42730482 0.6811819 0.7030597 0.7255541 0.7420052 0.9951408 0.9956241 #>  [135,] 0.63626443 0.6369657 0.6591719 0.7007189 0.7127339 0.7580373 0.7602534 #>  [136,] 0.76278006 0.8263312 1.0341629 1.0886682 1.1025160 1.1039703 1.1172523 #>  [137,] 0.31771433 0.3892715 0.4095297 0.4280894 0.4413394 0.4741427 0.4845958 #>  [138,] 0.37331277 0.4820637 0.4997236 0.5272763 0.5337640 0.5393467 0.5603123 #>  [139,] 0.44994369 0.4733091 0.5943982 0.6367489 0.6412310 0.6466561 0.6609065 #>  [140,] 0.35550266 0.4350303 0.5855517 0.6791943 0.6991772 0.7126436 0.7184743 #>  [141,] 0.28921044 0.3183387 0.3911811 0.4032799 0.4749079 0.5416037 0.5491069 #>  [142,] 0.45773693 0.5171179 0.5595588 0.5836977 0.5894910 0.6097584 0.6120157 #>  [143,] 0.52765663 0.5640888 0.5692541 0.5763750 0.6038110 0.6865561 0.7168500 #>  [144,] 0.61848225 0.8456529 1.2540564 1.2828717 1.4118492 1.4504634 1.5768804 #>  [145,] 0.27413099 0.4110552 0.4715872 0.5287947 0.5467413 0.6276081 0.6326736 #>  [146,] 0.37039866 0.4904112 0.6456394 0.6735275 0.7535237 0.8098813 0.8324225 #>  [147,] 0.30709096 0.3164522 0.4935282 0.5076157 0.5169771 0.5213464 0.5296363 #>  [148,] 0.86167496 1.4117684 1.4708037 1.4755896 1.5080062 1.6914945 1.7244489 #>  [149,] 0.30846893 0.3978686 0.4104399 0.4627014 0.4651189 0.4874440 0.5466916 #>  [150,] 0.60118991 0.6731865 0.7638483 0.8131930 0.9929095 1.0022952 1.0183971 #>  [151,] 0.14369812 0.5224788 0.5621560 0.6362074 0.6404278 0.6507399 0.7307491 #>  [152,] 0.23694105 0.5013220 0.5171179 0.5644979 0.6073468 0.6928403 0.7016882 #>  [153,] 0.52427299 0.5510340 0.6136506 0.6623628 0.6860769 0.6995154 0.7918961 #>  [154,] 0.47059222 0.5360577 0.5674245 0.6376047 0.6841569 0.7860275 0.8829476 #>  [155,] 0.24797545 0.4067677 0.5483374 0.5805832 0.7217420 0.7339253 0.8009953 #>  [156,] 0.45073851 0.5011759 0.5138839 0.5421168 0.5696563 0.5843822 0.6106652 #>  [157,] 0.39201799 0.5059247 0.5181592 0.5536937 0.5634881 0.5656294 0.5803743 #>  [158,] 0.37472789 0.4334626 0.4687352 0.4725805 0.4754572 0.5550621 0.5565985 #>  [159,] 0.62631502 0.6614474 0.8651808 0.9291661 0.9580748 1.0117200 1.0246121 #>  [160,] 0.75155328 0.8191259 0.8656887 0.8753128 0.9106450 0.9435147 0.9458968 #>  [161,] 0.39924099 0.4946139 0.5494221 0.6351219 0.7550778 0.7658412 0.7746202 #>  [162,] 0.24887437 0.3666092 0.4692677 0.5065854 0.5227497 0.5894491 0.6694551 #>  [163,] 0.62117810 0.8333357 0.9342236 1.0354619 1.0853828 1.1693280 1.2199425 #>  [164,] 0.72263848 0.7348982 0.7604131 1.0081883 1.0488635 1.0670565 1.0783227 #>  [165,] 0.41788008 0.6019105 0.6100562 0.6153698 0.6187333 0.6600681 0.7179723 #>  [166,] 0.47956002 0.5341214 0.5958500 0.6150647 0.8002743 0.8575868 0.8698635 #>  [167,] 0.43946131 0.6130805 0.6825058 0.6940147 0.7825160 0.8242227 0.8693166 #>  [168,] 0.52638349 0.5465983 0.6185892 0.6417167 0.6562577 0.7605125 0.8134693 #>  [169,] 0.27650947 0.4432176 0.4680021 0.5300604 0.6175249 0.6300754 0.6488782 #>  [170,] 0.43082686 0.5178552 0.5354704 0.6339528 0.6500833 0.6546978 0.7113127 #>  [171,] 0.20081003 0.2669763 0.3787348 0.3965472 0.4095297 0.4483890 0.4521080 #>  [172,] 0.47572915 0.5175494 0.5543229 0.5803372 0.6054574 0.6549553 0.6843452 #>  [173,] 0.54176780 0.5661452 0.5756268 0.6114718 0.7508927 0.7620530 0.7649270 #>  [174,] 0.52538895 0.5674331 0.7980066 0.8405354 0.8996805 0.9404708 0.9532749 #>  [175,] 0.32521983 0.3349347 0.3566836 0.4151585 0.4408032 0.5111472 0.5112019 #>  [176,] 0.42501543 0.4402568 0.6107082 0.6746900 0.6791206 0.7839684 0.8132107 #>  [177,] 0.63313660 0.9408757 1.0247964 1.0793057 1.0817886 1.1119440 1.1181199 #>  [178,] 0.30237633 0.5531061 0.5783562 0.6367489 0.6654287 0.7270595 0.7603446 #>  [179,] 0.34995664 0.3901544 0.4223250 0.4627014 0.5489580 0.5496058 0.5748848 #>  [180,] 0.38812645 0.4405342 0.4420370 0.5107419 0.5756268 0.6211303 0.6276081 #>  [181,] 0.28463584 0.3890531 0.4524685 0.5014413 0.5764175 0.5772910 0.6091098 #>  [182,] 0.26631171 0.2911727 0.4669933 0.4805213 0.4979011 0.5315497 0.5520164 #>  [183,] 0.54359159 0.7384813 0.7405760 0.7800466 0.7848247 0.8335970 0.8888746 #>  [184,] 0.51407207 0.5593401 0.5636322 0.6170252 0.6363462 0.7236703 0.7665368 #>  [185,] 0.28944790 0.5525081 0.6582818 0.6595764 0.6922651 0.6933944 0.7268153 #>  [186,] 0.58754642 0.6385494 0.6450371 0.6753436 0.7071312 0.7268153 0.8854580 #>  [187,] 0.20372024 0.2656952 0.2893318 0.4233398 0.4546685 0.4756569 0.5035667 #>  [188,] 0.12808870 0.4523095 0.4675109 0.4699004 0.5371939 0.5894491 0.6029188 #>  [189,] 0.29326623 0.3353795 0.3907801 0.4411270 0.4624263 0.4872777 0.5151719 #>  [190,] 0.61412848 0.6314604 0.6514561 0.6832311 0.7635080 0.7680926 0.8276420 #>  [191,] 0.52538895 0.7127339 0.7601434 0.7747628 0.8617104 0.8619967 0.9478303 #>  [192,] 0.30081266 0.3501317 0.4241425 0.4737205 0.5579593 0.5634881 0.5832857 #>  [193,] 0.36461840 0.5226556 0.5779549 0.5881773 0.5922208 0.5992672 0.6105010 #>  [194,] 0.66428820 0.9196356 1.1995822 1.2197479 1.2272684 1.2519040 1.2713979 #>  [195,] 0.47650481 0.5481421 0.5562792 0.6866418 0.7772582 0.8538991 0.8544007 #>  [196,] 0.83768121 0.9756280 1.0171978 1.1359941 1.2900029 1.3716140 1.3827661 #>  [197,] 0.35460865 0.7259840 0.7420731 0.7616392 0.8030532 0.8061296 0.8068865 #>  [198,] 1.32276652 1.4760356 1.4839871 1.5446414 1.5571549 1.5669997 1.6421553 #>  [199,] 0.26697634 0.2805684 0.3242830 0.3356163 0.3747378 0.3797260 0.4192266 #>  [200,] 0.51347765 0.5419740 0.6662341 0.6703935 0.7074750 0.7126224 0.7154247 #>  [201,] 0.38944539 0.4025769 0.5800039 0.6800603 0.7138788 0.7487179 0.8047512 #>  [202,] 0.56499999 0.6020217 0.6255987 0.6529317 0.6826683 0.6965093 0.7477200 #>  [203,] 0.21809843 0.2647699 0.3307303 0.3747527 0.4130087 0.4611812 0.4715996 #>  [204,] 0.57259029 0.7420718 0.7495755 0.8234463 0.9247005 0.9762809 1.0038182 #>  [205,] 0.25365117 0.3417658 0.4248557 0.4571500 0.4984785 0.5283457 0.5331061 #>  [206,] 0.61330875 0.6943987 0.7092554 0.7220287 0.7310787 0.7403898 0.7491803 #>  [207,] 0.29376464 0.3210369 0.3788559 0.4935282 0.4975360 0.6022220 0.6149026 #>  [208,] 0.65845005 0.7377428 0.8903403 0.9005836 0.9966378 1.0168180 1.0615659 #>  [209,] 0.38102177 0.4009907 0.4542845 0.4981689 0.5044172 0.5138839 0.5383317 #>  [210,] 0.42501543 0.5135203 0.6486671 0.7038249 0.7056629 0.7228995 0.7900074 #>  [211,] 0.37909930 0.4545727 0.4680473 0.4955794 0.4988284 0.5635124 0.5858982 #>  [212,] 0.51826662 0.7534387 0.9502900 0.9895429 1.0959470 1.1278220 1.1459422 #>  [213,] 0.36956454 0.3797198 0.5074296 0.5784763 0.6233194 0.6380793 0.6455759 #>  [214,] 0.39239860 0.5013220 0.5203851 0.5215338 0.5374147 0.6091192 0.6844711 #>  [215,] 0.21378730 0.3989651 0.4262316 0.4510014 0.4542190 0.5159015 0.5204190 #>  [216,] 0.29469156 0.3298202 0.3596142 0.3759240 0.4627851 0.4695471 0.4733091 #>  [217,] 0.44460421 0.6440708 0.6484546 0.7982342 0.8265200 0.8394997 0.8893594 #>  [218,] 0.11859736 0.5075903 0.5704380 0.5788474 0.5925210 0.6704915 0.6829031 #>  [219,] 0.55188638 0.6114718 0.6247307 0.6385494 0.6605443 0.6793333 0.7177048 #>  [220,] 0.38533787 0.4680001 0.4997961 0.5194122 0.5608975 0.5813008 0.6241584 #>  [221,] 0.30081266 0.4343564 0.4801124 0.6799286 0.6959008 0.7023770 0.7270978 #>  [222,] 0.34154117 0.3936587 0.4106843 0.6179132 0.6410727 0.6824939 0.7281176 #>  [223,] 0.81522167 0.9463040 0.9747884 1.0424798 1.1280821 1.1281768 1.1842354 #>  [224,] 1.15244285 1.2610532 1.5498561 1.8296742 1.8422261 1.8529077 1.8532585 #>  [225,] 0.39549103 0.6474125 0.6571726 0.6609985 0.6955533 0.7357784 0.7409894 #>  [226,] 0.41677958 0.4751449 0.5026144 0.5154636 0.6809340 0.7337518 0.7731393 #>  [227,] 0.33343997 0.3747378 0.3861714 0.4854596 0.4875703 0.5124791 0.5452762 #>  [228,] 0.49527499 0.5211931 0.5724805 0.6112469 0.6376008 0.6723558 0.6910198 #>  [229,] 0.36932871 0.5241385 0.5462829 0.5844587 0.6515875 0.6564939 0.6843156 #>  [230,] 0.33698182 0.7210376 0.7415882 0.7681958 0.8223230 0.8500997 0.9677864 #>  [231,] 0.36300821 0.5479321 0.6908835 0.7726500 0.8510165 0.8605271 0.9584508 #>  [232,] 0.38629582 0.4213433 0.4751976 0.4910300 0.4987837 0.5386593 0.5510847 #>  [233,] 0.36987832 0.4507385 0.4620020 0.4680281 0.4782588 0.4805044 0.5035463 #>  [234,] 0.33460704 0.5261127 0.5488487 0.6359449 0.7584128 0.7662273 0.8659911 #>  [235,] 0.24583737 0.3190867 0.3202089 0.3646839 0.4723221 0.5020900 0.5959494 #>  [236,] 0.25954362 0.3654335 0.4522218 0.5477619 0.5880546 0.6474125 0.6800485 #>  [237,] 0.26739532 0.3701888 0.5546540 0.6087299 0.7059793 0.7244898 0.7302374 #>  [238,] 0.42002624 0.5691224 0.7243325 0.7368492 0.7535193 0.7703421 0.7711668 #>  [239,] 0.26365485 0.3744893 0.7113277 0.7259423 0.7633240 0.7743822 0.8258596 #>  [240,] 0.96957479 1.3107432 1.3848447 1.4362591 1.5039358 1.5083401 1.5131440 #>  [241,] 0.28621665 0.3499566 0.3978686 0.4190773 0.4276152 0.4987947 0.5637751 #>  [242,] 0.39436399 0.4354505 0.4900663 0.7443241 0.7550378 0.9136584 0.9735826 #>  [243,] 0.57584806 0.7376431 0.7961085 0.9248980 0.9830587 0.9864651 1.0650605 #>  [244,] 0.47741273 0.5508141 0.5717507 0.6081674 0.6133088 0.6746215 0.7191895 #>  [245,] 0.21562643 0.3670530 0.3701631 0.3944797 0.4469352 0.4708498 0.5253988 #>  [246,] 0.47626317 0.6192169 0.6267294 0.6271479 0.6370872 0.6375859 0.6556227 #>  [247,] 0.55100035 0.6820972 0.8074844 0.9518027 1.0090182 1.0168269 1.0183726 #>  [248,] 0.31908671 0.3676537 0.4113804 0.4319972 0.5007925 0.5507969 0.5780114 #>  [249,] 0.36060777 0.7303984 0.7569739 0.9254382 0.9300069 0.9379311 0.9634162 #>  [250,] 0.33252381 0.3703301 0.3763838 0.3930307 0.4372774 0.4624263 0.4731095 #>  [251,] 0.28653776 0.4139794 0.4305036 0.4916231 0.5111472 0.5482995 0.6019976 #>  [252,] 0.28652149 0.3904541 0.4937918 0.5279647 0.5339710 0.5478608 0.5794850 #>  [253,] 0.48915979 0.5107419 0.5416637 0.5467413 0.5504274 0.6226807 0.6735525 #>  [254,] 0.20919443 0.2792067 0.3334769 0.4146677 0.4571168 0.4981689 0.5417553 #>  [255,] 0.35077167 0.4440642 0.6241812 0.6619895 0.6674176 0.7238569 0.7401482 #>  [256,] 0.40101029 0.4281259 0.4722904 0.5776474 0.6202167 0.7089186 0.7457524 #>  [257,] 0.37113204 0.5927438 0.6895259 0.7630534 0.8354629 0.8402256 0.8612566 #>  [258,] 0.46293811 0.4936176 0.5608360 0.5664051 0.6097717 0.6180592 0.6185892 #>  [259,] 0.20364447 0.3626960 0.4009911 0.4522218 0.4697107 0.4860701 0.5132923 #>  [260,] 1.38439739 1.4183603 1.4615852 1.5238612 1.5322856 1.5531659 1.5548251 #>  [261,] 0.36956454 0.4681167 0.5154143 0.5566550 0.5628790 0.5825610 0.6253591 #>  [262,] 0.49593626 0.5495023 0.5557991 0.6452186 0.7223338 0.7276137 0.7819357 #>  [263,] 0.29280265 0.3373337 0.4312764 0.5229825 0.5265141 0.5601429 0.6172286 #>  [264,] 0.23567154 0.5505564 0.5883924 0.5915221 0.6047039 0.6187482 0.7144063 #>  [265,] 0.42394670 0.4631630 0.4810472 0.5667407 0.6169703 0.7900007 0.8009326 #>  [266,] 0.42290734 0.5791202 0.7503367 0.8596417 0.9382498 0.9501645 0.9586867 #>  [267,] 0.40774600 0.4810472 0.5058470 0.5564960 0.6986643 0.7316568 0.7443241 #>  [268,] 0.51752618 0.6526827 0.8633068 0.9198161 0.9642462 0.9759297 1.0392967 #>  [269,] 0.28811957 0.3237477 0.4502208 0.4684233 0.5550434 0.5655540 0.5763750 #>  [270,] 0.52381587 0.7420718 0.7767994 0.8257782 0.9248980 0.9567905 0.9759566 #>  [271,] 0.76384829 0.8251204 0.8279977 0.9123314 0.9275525 0.9699851 0.9935279 #>  [272,] 0.37842929 0.5888738 0.6152161 0.6606697 0.6613407 0.6692296 0.6791206 #>  [273,] 0.81196158 0.8539881 0.9829049 0.9970534 1.0070889 1.0148957 1.0323066 #>  [274,] 0.47650481 0.5352657 0.6770331 0.6907874 0.7568550 0.7578852 0.7593422 #>  [275,] 0.35956765 0.3911811 0.4151585 0.4223140 0.4462629 0.4505671 0.5046411 #>  [276,] 0.69401472 0.6993742 0.7364792 0.8101594 0.8417493 0.8951294 1.0355292 #>  [277,] 0.38141252 0.3843469 0.4040221 0.4050495 0.4142340 0.4983066 0.5105707 #>  [278,] 0.45206477 0.4564861 0.4756569 0.4839346 0.5259593 0.5397218 0.5423090 #>  [279,] 0.95654415 1.2386507 1.3066815 1.3087772 1.3858063 1.3944466 1.4702589 #>  [280,] 0.43346262 0.4755077 0.4996229 0.5300928 0.5520734 0.6001397 0.6244125 #>  [281,] 0.36921748 0.4445792 0.4938818 0.4981693 0.5075903 0.5803372 0.6443462 #>  [282,] 0.41985113 0.6689122 0.6735525 0.6958108 0.7701633 0.8122322 0.8131930 #>  [283,] 0.40871310 0.4360226 0.4406368 0.4411270 0.5863211 0.5882823 0.5957850 #>  [284,] 0.50612574 0.5175262 0.6678011 0.7605112 0.7679592 0.7741864 0.9015502 #>  [285,] 0.36550063 0.4494382 0.5030554 0.5055926 0.5272064 0.6283972 0.6476357 #>  [286,] 0.31140027 0.7109656 0.7472818 0.7832306 0.8728337 0.9001655 1.0059659 #>  [287,] 0.28944790 0.3957440 0.6450371 0.6513003 0.6950362 0.7008255 0.7307491 #>  [288,] 0.46905894 0.5398142 0.7505791 0.7898459 0.8466712 0.8759508 0.8811281 #>  [289,] 0.43886415 0.4437153 0.5152499 0.5311039 0.5571427 0.5798872 0.6276885 #>  [290,] 0.46758231 0.8205355 0.8823310 0.9196356 0.9258692 0.9456323 1.1100121 #>  [291,] 0.35640219 0.3655006 0.3784553 0.4399732 0.6003499 0.6365082 0.6461247 #>  [292,] 0.51749837 0.5755913 0.6071751 0.6542596 0.6887219 0.6924723 0.7071536 #>  [293,] 0.34318567 0.4010103 0.4140192 0.6620220 0.6822340 0.6875009 0.7071724 #>  [294,] 0.35275752 0.4396650 0.5136805 0.5216730 0.5331061 0.5621014 0.5839841 #>  [295,] 0.26739532 0.5107943 0.6684812 0.6699454 0.6739431 0.7034330 0.7082229 #>  [296,] 0.45056706 0.4547084 0.4909231 0.5259327 0.5964014 0.6185778 0.6189109 #>  [297,] 0.22853382 0.2501560 0.3426612 0.4057550 0.4551814 0.5945813 0.6397086 #>  [298,] 0.43715283 0.6665763 0.7494725 0.8299737 0.9404708 0.9798380 0.9852112 #>  [299,] 0.21932266 0.4692677 0.4858458 0.5014413 0.6571278 0.6784107 0.6795297 #>  [300,] 0.39307789 0.5589190 0.6267841 0.7073310 0.7089954 0.7305995 0.7576545 #>  [301,] 0.29587358 0.3252198 0.4816312 0.4976761 0.5125237 0.5174984 0.5511329 #>  [302,] 0.34029209 0.4279983 0.4611812 0.4945252 0.5238824 0.5421168 0.5438752 #>  [303,] 0.77497034 0.8967049 1.0241006 1.0724448 1.0940563 1.1403603 1.1462405 #>  [304,] 0.38776207 0.3897346 0.4715996 0.4754572 0.5193565 0.5424561 0.5438752 #>  [305,] 0.18833132 0.5840304 0.6065703 0.6787683 0.7309632 0.7449777 0.8608735 #>  [306,] 0.70993865 0.8103668 0.8456529 0.9340690 1.0264533 1.0610845 1.1340612 #>  [307,] 0.48908741 0.5194432 0.5628790 0.6453863 0.6875009 0.6950331 0.7219923 #>  [308,] 0.54793209 0.6206800 0.6219210 0.6468760 0.6738930 0.8657965 0.8776058 #>  [309,] 0.22300046 0.4239467 0.5839944 0.5900231 0.6628509 0.6846918 0.7378135 #>  [310,] 0.76702570 0.7681958 0.7748656 0.8358366 0.8557879 0.9259863 0.9347948 #>  [311,] 0.47923567 0.6746900 0.7267462 0.7807303 0.7985716 0.8088331 0.8105058 #>  [312,] 0.54275349 0.6119033 0.6330107 0.6546912 0.7982004 0.8463962 0.8530739 #>  [313,] 0.89978828 0.9693973 1.0364461 1.0729081 1.0939052 1.1099862 1.1913011 #>  [314,] 0.11859736 0.4981693 0.5157478 0.5892583 0.5930440 0.6036615 0.6261939 #>  [315,] 0.47688706 0.5121997 0.7131843 0.7166334 0.7406037 0.7760909 0.7766113 #>  [316,] 0.52555808 0.5309543 0.6180077 0.6492126 1.0052412 1.0250610 1.0346627 #>  [317,] 0.67637815 0.7109656 0.8672240 0.9281379 1.0144418 1.1894309 1.2724317 #>  [318,] 0.34927317 0.3696367 0.5343289 0.6446018 0.6575609 0.6626694 0.7239977 #>  [319,] 0.41677958 0.5861760 0.6434205 0.6786198 0.7044361 0.7254086 0.7697777 #>  [320,] 0.43074064 0.4610872 0.5098134 0.5197648 0.5272064 0.6237299 0.6273585 #>  [321,] 1.49031013 1.5793319 1.8764104 2.0051690 2.0437756 2.1274689 2.1322394 #>  [322,] 0.85758679 0.9603201 0.9842679 1.0043120 1.0049814 1.0219000 1.0843545 #>  [323,] 0.56674074 0.6778143 0.7378135 0.8511342 0.8602030 0.8754444 0.8842158 #>  [324,] 0.59424535 0.6015149 0.6488589 0.6983068 0.7100899 0.7286651 0.7771085 #>  [325,] 0.34533952 0.3878185 0.5046568 0.5393116 0.5424561 0.5478049 0.5579795 #>  [326,] 0.24609454 0.3914730 0.4223250 0.4351630 0.4469352 0.4656866 0.4983159 #>  [327,] 0.48513640 0.5435916 0.6214543 0.6306436 0.6689119 0.8408943 0.8723573 #>  [328,] 0.49586470 0.5433829 0.5852701 0.5872927 0.5958500 0.6404278 0.7660767 #>  [329,] 0.31459592 0.4877782 0.5189201 0.5466206 0.5759819 0.5778495 0.6428141 #>  [330,] 0.64853879 0.6494929 0.7684911 0.7903805 0.8198499 0.8512827 0.8617104 #>  [331,] 0.32610735 0.4872834 0.4983160 0.5573616 0.5855434 0.6276901 0.6392736 #>  [332,] 0.68936464 0.6958452 0.8506020 0.8633761 0.8714205 0.8930139 0.9023052 #>  [333,] 0.39397720 0.7329113 0.7410254 0.7663382 0.7772582 0.8030690 0.8470083 #>  [334,] 0.60951835 0.6986042 0.7586650 0.7651058 0.8122459 0.8230093 0.8261201 #>  [335,] 0.26117239 0.5462829 0.7307548 0.7817537 0.7903702 0.7959074 0.8262251 #>  [336,] 0.33173566 0.4339159 0.4584834 0.5588798 0.7306633 0.7453854 0.7456426 #>  [337,] 0.20364447 0.3570291 0.4332334 0.4477713 0.4558041 0.4605955 0.5477619 #>  [338,] 0.19349966 0.4015340 0.4744073 0.5030551 0.5200255 0.5265024 0.5483013 #>  [339,] 0.29663832 0.3318799 0.3978314 0.4339159 0.6524090 0.8009970 0.8439166 #>  [340,] 0.37592404 0.4179417 0.4643678 0.4729392 0.4997961 0.5038522 0.5653650 #>  [341,] 0.26569523 0.2725703 0.3242830 0.3500936 0.3965472 0.4226106 0.4307247 #>  [342,] 0.35550266 0.5916725 0.6373869 0.7938445 0.8269377 0.9109831 0.9256279 #>  [343,] 0.18833132 0.5253866 0.6208067 0.7211547 0.7785311 0.7845230 0.8357815 #>  [344,] 0.93219135 1.2324163 1.2582066 1.2602674 1.2873315 1.3145939 1.3544736 #>  [345,] 0.52694359 0.5371939 0.5751417 0.6363662 0.6391015 0.6638867 0.6935510 #>  [346,] 0.26391137 0.2915947 0.4170275 0.4806983 0.5065806 0.5190120 0.5994616 #>  [347,] 0.29913201 0.3001107 0.3245288 0.4722175 0.5049428 0.5051981 0.5455274 #>  [348,] 0.38340688 0.5791202 0.5939232 0.7404551 0.7609118 0.7884724 0.8084775 #>  [349,] 0.54957644 0.5717507 0.5776043 0.6039112 0.6502415 0.6559167 0.6943987 #>  [350,] 0.68495194 0.8645616 0.8797973 0.8935947 0.9048966 0.9695748 1.0356397 #>  [351,] 0.38108936 0.4009907 0.4264012 0.4551814 0.4778850 0.5654443 0.5670954 #>  [352,] 0.53065056 0.6211781 0.7583753 0.7766113 0.8380508 1.0211110 1.0522342 #>  [353,] 0.47102073 0.4751976 0.4956412 0.5035207 0.5143610 0.5198491 0.5204190 #>  [354,] 0.29016920 0.6267294 0.6394182 0.6668798 0.6857065 0.7741100 0.7747628 #>  [355,] 0.36138788 0.3662990 0.4432176 0.4689871 0.6394403 0.6526979 0.6889390 #>  [356,] 0.32461046 0.3478183 0.3760655 0.4032799 0.4223140 0.4746861 0.4916085 #>  [357,] 0.79314086 0.8037464 0.8434276 1.0077201 1.0261459 1.0480981 1.0764931 #>  [358,] 0.56025063 0.6277458 0.6683978 0.7168500 0.7356948 0.7495574 0.8031823 #>  [359,] 0.47316352 0.7349493 0.8117511 0.8797973 0.8972047 0.9227334 0.9383466 #>  [360,] 0.37642168 0.4677464 0.5251831 0.5593401 0.6712401 0.6899795 0.7720540 #>  [361,] 0.73192268 0.7874333 0.8318148 0.8349937 0.8397224 0.8882763 0.9342674 #>  [362,] 0.52119306 0.5602455 0.7476921 0.7596948 0.7825685 0.7851418 0.8273757 #>  [363,] 0.31459592 0.3639557 0.4900483 0.5008429 0.5465923 0.5954739 0.5958321 #>  [364,] 0.20070157 0.3584123 0.4055149 0.4206436 0.5269107 0.5997225 0.6078357 #>  [365,] 0.88351028 0.9052847 1.0145425 1.1134033 1.1317173 1.1357573 1.1882793 #>  [366,] 0.43640712 0.6339528 0.7064259 0.7460580 0.7732640 0.7812663 0.7814552 #>  [367,] 0.51219970 0.6281446 0.6735208 0.6828962 0.6844711 0.7574329 0.7984744 #>  [368,] 0.49556396 0.5059247 0.5294520 0.5552976 0.5580247 0.6113328 0.6339339 #>  [369,] 0.34892269 0.3914730 0.4104399 0.4240800 0.4579472 0.4620020 0.4790419 #>  [370,] 0.44460421 0.7201887 0.8050755 0.8230608 0.8376086 0.8744900 0.8783550 #>  [371,] 0.28463584 0.3941812 0.4081809 0.4768753 0.5155750 0.6249427 0.6294312 #>  [372,] 0.35013168 0.4801124 0.4943611 0.6153698 0.6871323 0.7533626 0.7538177 #>  [373,] 0.16975155 0.4080084 0.4108824 0.4128832 0.4441183 0.4591125 0.4974474 #>  [374,] 0.50612574 0.5398227 0.6743391 0.7178640 0.7391128 0.7662354 0.7703421 #>  [375,] 0.45923744 0.5058470 0.5728323 0.5803429 0.6245121 0.6345301 0.6397086 #>  [376,] 0.56338754 0.6699178 0.7234247 0.7771867 0.8235576 0.8338540 0.9175693 #>  [377,] 0.63902222 0.6842911 0.7081651 0.7151375 0.7384813 0.8408943 0.8593300 #>  [378,] 0.38249166 0.6410325 0.6652949 0.7268194 0.7903805 0.8585393 0.8702752 #>  [379,] 0.75302907 1.0042840 1.0088760 1.0522342 1.0820564 1.2285930 1.2372861 #>  [380,] 0.37971976 0.4428645 0.4525840 0.5063466 0.5162144 0.5917079 0.6078357 #>  [381,] 1.11340326 1.1890499 1.2652057 1.2789737 1.3914760 1.5265184 1.5577468 #>  [382,] 0.46011850 0.4717602 0.5391968 0.6481978 0.6908835 0.7194235 0.8064938 #>  [383,] 0.43111239 0.4566078 0.4897581 0.5512715 0.5643170 0.5959820 0.6059303 #>  [384,] 0.39375151 0.5912074 0.6352179 0.6628509 0.7402426 0.7518455 0.7972298 #>  [385,] 0.47370146 0.6233607 0.8157635 0.8891372 0.9780277 1.0065256 1.0237762 #>  [386,] 0.24496419 0.3900367 0.4902399 0.5345155 0.5364068 0.5776043 0.6723558 #>  [387,] 1.04346314 1.1151134 1.3470373 1.3652537 1.4187501 1.4228799 1.4643547 #>  [388,] 0.94856020 1.0131405 1.0481242 1.1333156 1.1463607 1.1719116 1.3091491 #>  [389,] 0.51407207 0.5513568 0.6340963 0.6899795 0.7336897 0.8596412 0.8864995 #>  [390,] 0.57441635 0.9596552 1.0064445 1.0604213 1.1312419 1.2440298 1.2478087 #>  [391,] 0.15939739 0.2722640 0.3755007 0.4219632 0.4733975 0.6157514 0.6165426 #>  [392,] 0.44869849 0.4959363 0.5411127 0.6494159 0.6502415 0.6686932 0.6746215 #>  [393,] 0.23540135 0.2902548 0.3703301 0.4158982 0.4366189 0.4484292 0.4557129 #>  [394,] 0.41259616 0.4276152 0.4425381 0.5257086 0.5560514 0.5637212 0.5868961 #>  [395,] 0.49632888 0.5505583 0.5508141 0.5815109 0.6041073 0.6273428 0.6567312 #>  [396,] 1.03209646 1.1420473 1.1558105 1.2507232 1.2608008 1.3623899 1.4969103 #>  [397,] 0.39746932 0.4101183 0.5056286 0.5284228 0.6035917 0.6340128 0.6721604 #>  [398,] 0.39397720 0.5755682 0.5759381 0.6866418 0.6874729 0.7701033 0.7933148 #>  [399,] 0.36228122 0.5784763 0.5964690 0.6111144 0.6253591 0.6811819 0.7548760 #>  [400,] 0.48587769 0.7259423 0.8636752 0.9006876 0.9172980 0.9185908 0.9597085 #>  [401,] 0.19453081 0.2180984 0.2964562 0.4528573 0.4759211 0.4945252 0.5004592 #>  [402,] 0.37018880 0.5107943 0.6046510 0.6143180 0.6200362 0.7189410 0.7487179 #>  [403,] 0.36841983 0.4311124 0.4758130 0.4768753 0.5128993 0.6287649 0.7161673 #>  [404,] 0.32673556 0.5155794 0.5600855 0.5884048 0.6146644 0.6245540 0.6284088 #>  [405,] 0.71697343 0.7938939 1.0201320 1.0240017 1.0296550 1.0483266 1.0531135 #>  [406,] 0.45917348 0.5392838 0.5798872 0.5966187 0.5999656 0.6664535 0.7263124 #>  [407,] 0.44777128 0.4593609 0.5270270 0.5839307 0.6043051 0.6339339 0.6550609 #>  [408,] 1.06042126 1.5060176 1.5451807 1.6083663 1.6372125 1.7175380 1.7778125 #>  [409,] 0.14012704 0.2532084 0.3262469 0.4029995 0.4638253 0.4969787 0.5280127 #>  [410,] 0.42849307 0.4974005 0.5614943 0.5953164 0.6034204 0.6054061 0.6410325 #>  [411,] 0.11054873 0.2946916 0.3690463 0.4533264 0.4702375 0.4728462 0.4729392 #>  [412,] 0.50165139 0.5606956 0.5940447 0.7182699 0.7515533 0.8081944 0.8339587 #>  [413,] 0.46447154 0.5485698 0.6706440 0.7191895 0.7892911 0.8226791 0.8363893 #>  [414,] 0.93743009 1.1079305 1.1567450 1.2729022 1.3692809 1.3754771 1.3933635 #>  [415,] 0.34774327 0.8103668 0.8331526 0.8461585 0.8474787 0.8832135 0.8834263 #>  [416,] 0.91702820 0.9512406 1.0033475 1.0620889 1.0800157 1.1051267 1.1606735 #>  [417,] 0.32624690 0.3894176 0.4213596 0.4662150 0.4687694 0.4746717 0.4768930 #>  [418,] 0.74564260 0.8530085 0.8650350 0.9167455 0.9461502 0.9599335 0.9820009 #>  [419,] 0.48355587 0.5506170 0.5903709 0.6034597 0.6277458 0.6426524 0.6703649 #>  [420,] 0.41619506 0.8468565 0.8515092 0.9061340 0.9112581 0.9982411 1.0210811 #>  [421,] 0.75837525 0.9342236 1.2756362 1.2791728 1.3116953 1.4349947 1.4367924 #>  [422,] 0.78269356 0.7994687 0.8390775 0.8391708 0.8393181 0.8458970 0.9107327 #>  [423,] 0.31012110 0.4275806 0.4868863 0.5146093 0.5198001 0.5293840 0.5524687 #>  [424,] 0.37428673 0.4528573 0.4778550 0.5508378 0.5944535 0.5993978 0.7083681 #>  [425,] 0.49461387 0.5637042 0.7569739 0.7592514 0.8754066 0.8894306 0.9293305 #>  [426,] 0.21932266 0.3666092 0.5760282 0.6004384 0.6120175 0.6226523 0.6435408 #>  [427,] 0.43199716 0.5020900 0.6054268 0.6098440 0.7091669 0.7326877 0.7776103 #>  [428,] 0.25225354 0.2663117 0.4502208 0.4753128 0.5460630 0.5692541 0.5777407 #>  [429,] 0.32395690 0.3763838 0.4179126 0.4519298 0.5065810 0.5117078 0.5265141 #>  [430,] 0.21438353 0.4142340 0.4763886 0.4940364 0.5159281 0.5295851 0.5391752 #>  [431,] 0.47579679 0.5492530 0.6616307 0.6658869 0.7547001 0.7713148 0.7780232 #>  [432,] 0.57094962 1.1318210 1.1505941 1.1888230 1.2646515 1.4537055 1.6024752 #>  [433,] 0.36358908 0.3888086 0.4023546 0.4749690 0.4970022 0.5220499 0.6012320 #>  [434,] 0.48631467 0.4904112 0.6324832 0.7668494 0.8688801 0.8713957 0.8842236 #>  [435,] 0.72273600 0.7550378 0.7719919 0.8823244 0.9115526 1.0289498 1.0720119 #>  [436,] 0.30987981 0.3626960 0.4130238 0.4332334 0.4336046 0.4394001 0.5594383 #>  [437,] 0.41109408 0.6820972 0.6825986 0.7234247 0.7348194 0.7768501 0.7831345 #>  [438,] 0.32645833 0.3791309 0.3853379 0.4528794 0.5651017 0.5851902 0.5897401 #>  [439,] 0.39549103 0.4722023 0.5247991 0.6714687 0.7691332 0.8299737 0.8358366 #>  [440,] 0.33558076 0.3592892 0.4405538 0.4553572 0.5146093 0.5294658 0.5614943 #>  [441,] 0.50305542 0.5520734 0.5525081 0.6277807 0.6313528 0.6362074 0.6513003 #>  [442,] 0.51785516 0.6476990 0.6982858 0.7186645 0.7237203 0.7732640 0.8008779 #>  [443,] 0.46476521 0.5166886 0.6209300 0.7372051 0.8064938 0.8233062 0.8280619 #>  [444,] 0.31747366 0.3788559 0.5489703 0.6876388 0.7031427 0.7049666 0.7115193 #>  [445,] 0.37005987 0.3811046 0.4121700 0.4283172 0.5026828 0.5834451 0.5951965 #>  [446,] 0.37039866 0.4863147 0.5201182 0.5612289 0.6654287 0.6802099 0.7479754 #>  [447,] 0.63313660 0.9427818 0.9654041 0.9780819 0.9834188 0.9951674 1.0180970 #>  [448,] 0.45384089 0.5377230 0.5524279 0.7467323 0.7527882 0.7982627 0.8156314 #>  [449,] 0.23567154 0.5150840 0.5445733 0.5479805 0.5968973 0.6452314 0.6504809 #>  [450,] 0.23540135 0.3823030 0.3938108 0.4431168 0.4643678 0.5074547 0.5310034 #>  [451,] 0.28195106 0.3689428 0.4669056 0.4975360 0.5397136 0.5607630 0.5640855 #>  [452,] 0.30846893 0.3489227 0.4983159 0.5013068 0.5035156 0.5304445 0.5484007 #>  [453,] 0.45287944 0.4680001 0.5260245 0.5323167 0.5327433 0.5345155 0.5990855 #>  [454,] 0.34672976 0.4279983 0.4911316 0.5011759 0.5496275 0.5550621 0.5598677 #>  [455,] 0.31414653 0.3725645 0.3862958 0.4699043 0.4882999 0.5141717 0.5338726 #>  [456,] 0.52602453 0.5952533 0.6145939 0.6614474 0.6891508 0.7328742 0.7940881 #>  [457,] 0.47848212 0.5332595 0.7718176 0.7909906 0.8114176 0.8206693 0.8218571 #>  [458,] 0.45621514 0.4629381 0.5270208 0.5355492 0.5465983 0.6020024 0.6289473 #>  [459,] 0.32155781 0.3818730 0.4015340 0.4189035 0.4578895 0.4583384 0.4955794 #>  [460,] 0.43119205 0.5362847 0.6079108 0.6416562 0.6457514 0.6483215 0.6838886 #>  [461,] 0.51407776 0.5488487 0.5612289 0.6246791 0.6324832 0.6456394 0.6990177 #>  [462,] 0.56328248 0.5649831 0.6302808 0.6380793 0.6678411 0.6912409 0.7276322 #>  [463,] 0.66508880 0.6689122 0.6848305 0.7421019 0.7476921 0.8279977 0.8785422 #>  [464,] 0.24583737 0.2869569 0.3676537 0.3971754 0.4642626 0.5647469 0.5768015 #>  [465,] 0.35809153 0.3890294 0.4424690 0.4638253 0.4687694 0.4775021 0.5172521 #>  [466,] 0.45440305 0.5335151 0.7958461 0.8257782 0.8903412 0.8909458 0.9229895 #>  [467,] 0.39491312 0.6452314 0.7114949 0.7144063 0.7258225 0.7371515 0.8537155 #>  [468,] 0.34927317 0.3938108 0.4393561 0.4484292 0.4848502 0.5351547 0.5359468 #>  [469,] 0.42750616 0.4336776 0.4974005 0.5497354 0.5604645 0.6362644 0.6770344 #>  [470,] 0.39045408 0.5007189 0.5186522 0.6031915 0.6484546 0.6525004 0.6889350 #>  [471,] 0.33096726 0.3861714 0.4351472 0.4388974 0.4396650 0.5133216 0.5648266 #>  [472,] 0.41011832 0.4538409 0.5642376 0.6094192 0.6930545 0.7329803 0.7349748 #>  [473,] 0.56582396 0.6081674 0.6352179 0.6384492 0.6900938 0.7040721 0.7832063 #>  [474,] 1.02395308 1.1643224 1.2545098 1.2776436 1.3088111 1.4611929 1.4643547 #>  [475,] 0.25358548 0.3748020 0.3890531 0.4081809 0.4557788 0.5280655 0.5602482 #>  [476,] 0.36963673 0.3915500 0.6038138 0.6087299 0.6351311 0.6832249 0.6916937 #>  [477,] 0.52938119 0.5577623 0.5756987 0.5912283 0.7738940 0.8002743 0.8015121 #>  [478,] 0.52359172 0.5327110 0.7486855 0.7586650 0.8515532 0.9597529 0.9756089 #>  [479,] 0.51473607 0.6394182 0.7179723 0.7394591 0.7601434 0.9385895 0.9390801 #>  [480,] 0.25254359 0.4206436 0.4525840 0.5170554 0.5377323 0.6261884 0.6488977 #>  [481,] 0.68453015 0.7325207 0.7405760 0.8413597 0.8460302 0.9544794 0.9562187 #>  [482,] 1.01567019 1.1400141 1.1574268 1.2322495 1.2808844 1.3380919 1.4570074 #>  [483,] 0.37642168 0.4646068 0.5128950 0.5341214 0.5396000 0.7660767 0.8705765 #>  [484,] 0.34266118 0.3810894 0.3920713 0.4587430 0.4943398 0.5358363 0.5883554 #>  [485,] 0.51359842 0.5269436 0.5417617 0.5575358 0.6410033 0.6882290 0.6999893 #>  [486,] 0.21562643 0.3895736 0.4175655 0.4519298 0.4878824 0.5074296 0.5649831 #>  [487,] 1.13581204 1.1538701 1.2108285 1.2386507 1.3115049 1.3929111 1.4112682 #>  [488,] 0.37676699 0.3778548 0.4079960 0.4791625 0.4939821 0.4981195 0.5352413 #>  [489,] 0.32374769 0.3996098 0.4909798 0.5273969 0.5460630 0.6021139 0.6038110 #>  [490,] 0.22777105 0.2328586 0.2540421 0.4583384 0.4682206 0.4693914 0.4997236 #>  [491,] 0.29562048 0.4644715 0.6699178 0.8032808 0.8197502 0.8383435 0.9180581 #>  [492,] 0.55839746 0.7226385 0.7554126 0.8731493 0.9134057 0.9209817 1.0738741 #>  [493,] 0.61308050 0.6942087 0.7410649 0.8467166 0.8817423 0.9344031 0.9633244 #>  [494,] 0.53433142 0.5759381 0.6391701 0.6615329 0.6717027 0.6722211 0.6942183 #>  [495,] 0.66078804 0.8099197 0.9631674 1.1275882 1.1562900 1.2565160 1.2632557 #>  [496,] 0.41331339 0.4279969 0.5203851 0.5644979 0.6454096 0.7247526 0.7282043 #>  [497,] 0.24797545 0.3339583 0.5033519 0.7106138 0.7504884 0.7915479 0.8450276 #>  [498,] 0.33395825 0.3721276 0.4067677 0.5535995 0.5978580 0.6812021 0.7052937 #>  [499,] 0.78719221 0.8043582 0.9190296 0.9530321 1.0288636 1.0783227 1.1088369 #>  [500,] 0.65726023 0.6974653 0.7960473 0.9061340 0.9281200 0.9284177 1.1122572 #>  [501,] 0.47156051 0.5503854 0.5536854 0.5621560 0.5717687 0.6169806 0.6222719 #>  [502,] 0.44281159 0.7743223 0.7939588 0.8383435 0.8408119 0.9680743 1.0176592 #>  [503,] 0.34774327 0.7759097 0.8069707 0.8270188 0.8647564 0.8949123 0.9088326 #>  [504,] 0.26680982 0.3989651 0.4200125 0.4483890 0.4520954 0.5035354 0.5151342 #>  [505,] 0.04571425 0.1392036 0.6394927 0.6487314 0.6619895 0.6751078 0.6753057 #>  [506,] 0.25015597 0.3401143 0.4592374 0.4778850 0.4943398 0.5044172 0.5517512 #>  [507,] 0.47316352 0.7321146 0.7875852 0.8683310 0.8935947 0.9213758 0.9617819 #>  [508,] 0.21269047 0.2915947 0.3760655 0.4339604 0.4774102 0.5046411 0.5193037 #>  [509,] 0.87325918 0.9052847 0.9868187 1.0222585 1.0951802 1.1349118 1.1515384 #>  [510,] 0.55579912 0.5826529 0.6153116 0.6472856 0.7414683 0.7788321 0.7880331 #>  [511,] 0.39629918 0.4268706 0.4687352 0.4996229 0.5169771 0.5261454 0.5743776 #>  [512,] 0.36298797 0.4327686 0.4547084 0.4728169 0.4916231 0.5112019 0.5194801 #>  [513,] 0.32762262 0.3893602 0.4106843 0.6300783 0.6371847 0.7545410 0.7684055 #>  [514,] 0.78396839 0.9048643 1.0985760 1.1451631 1.1573021 1.1620604 1.2064484 #>  [515,] 0.45564471 0.5202932 0.7016013 0.7504072 0.7947375 0.8731493 0.9135248 #>  [516,] 0.35077167 0.6193135 0.7554126 0.7816043 0.9528638 0.9652937 0.9864252 #>  [517,] 0.29643517 0.3650977 0.4088040 0.4128832 0.4228090 0.4266637 0.4308328 #>  [518,] 0.39365866 0.5978470 0.6021200 0.6300783 0.6620220 0.6693156 0.7309364 #>  [519,] 0.59023600 0.8691090 0.9474781 1.1567450 1.1769398 1.1806135 1.2139837 #>  [520,] 0.27257030 0.3309673 0.3527575 0.4192266 0.4546685 0.4721913 0.4839348 #>  [521,] 0.35251731 0.4657088 0.5999656 0.6029188 0.6075887 0.6638867 0.6797762 #>  [522,] 0.55401772 0.6971284 0.7395016 0.7720874 0.7754344 0.7838987 0.7905194 #>  [523,] 0.28177024 0.2991320 0.3558952 0.4232862 0.5466206 0.5534555 0.5831061 #>  [524,] 0.59274382 0.7782351 0.7786731 0.9334700 0.9720118 0.9742489 1.0527938 #>  [525,] 0.65548077 0.7605125 0.8081944 0.8172181 0.8191259 0.8509468 0.8624629 #>  [526,] 0.48444700 0.5140778 0.5371161 0.6401436 0.6802099 0.7282043 0.7458303 #>  [527,] 0.36468387 0.3971754 0.4099904 0.4270901 0.4498374 0.5697012 0.5780114 #>  [528,] 0.88078128 1.0575620 1.1517766 1.2117820 1.2938603 1.3071017 1.4734496 #>  [529,] 0.36771304 0.3684198 0.3941812 0.4791460 0.4897581 0.5381211 0.5390028 #>  [530,] 0.40382345 0.4228090 0.4591125 0.4639293 0.4752898 0.4979011 0.5119117 #>  [531,] 0.45437205 0.7082485 0.9707212 0.9931201 1.0399043 1.0677937 1.1220067 #>  [532,] 0.38663106 0.5343314 0.7663382 0.8047607 0.8661663 0.9635409 1.0636277 #>  [533,] 0.53065056 0.6219210 0.6831127 0.7131843 0.7735362 0.8333357 0.8706328 #>  [534,] 0.55198846 0.6384492 0.6875770 0.7402426 0.8273757 0.8591070 0.8643478 #>  [535,] 1.04346314 1.1526443 1.3405127 1.3637198 1.4330155 1.4368629 1.4484224 #>  [536,] 0.82855926 0.9527953 0.9963179 1.0079652 1.0326292 1.0426813 1.0906484 #>  [537,] 0.36434306 0.3878185 0.4449928 0.4945886 0.5417617 0.5565985 0.5661663 #>  [538,] 0.34029209 0.4422986 0.4569293 0.5100356 0.5506492 0.5625470 0.5868285 #>  [539,] 0.43473962 0.4632580 0.4801095 0.4845049 0.5504738 0.5513356 0.6391414 #>  [540,] 0.35460865 0.5599812 0.5969696 0.6250477 0.6740946 0.6975883 0.8426542 #>  [541,] 0.37459805 0.3901544 0.4987947 0.5563732 0.5651017 0.6112469 0.6198611 #>  [542,] 0.24887437 0.4420418 0.5066583 0.5456387 0.5760282 0.6688299 0.6784107 #>  [543,] 0.44244155 0.6330306 0.6332236 0.6401436 0.6454096 0.7373525 0.7385704 #>  [544,] 0.79727537 0.9485602 0.9683666 1.0395655 1.1678652 1.2062078 1.2315531 #>  [545,] 0.20771491 0.3113073 0.3318799 0.4584834 0.6450222 0.7544114 0.7605112 #>  [546,] 0.47688706 0.6091192 0.6831127 0.7574329 0.8095227 0.8380508 0.8453919 #>  [547,] 0.59042562 0.6689116 0.6929753 0.7733549 0.8019543 0.8286681 0.8550239 #>  [548,] 0.42219972 0.6251828 0.6738930 0.7184185 0.7354770 0.7821569 0.8336902 #>  [549,] 0.44025682 0.4701010 0.4886626 0.4970022 0.5135203 0.5367453 0.6606697 #>  [550,] 0.73351554 1.0582034 1.0611122 1.1778486 1.2360387 1.3435280 1.4136327 #>  [551,] 0.40013624 0.4645988 0.5113961 0.5152524 0.5883924 0.5968973 0.6809340 #>  [552,] 0.31854688 0.4474662 0.5993461 0.6010170 0.6605620 0.7280657 0.7616373 #>  [553,] 0.34217323 0.4469934 0.4937918 0.4937935 0.5627929 0.5843638 0.6190611 #>  [554,] 0.49063506 0.6813582 0.6982818 0.7254086 0.7731393 0.7802768 0.8199414 #>  [555,] 0.20771682 0.3810218 0.5153039 0.5259593 0.5270208 0.5395107 0.5524317 #>  [556,] 0.26476990 0.3897346 0.4759211 0.4795714 0.4934492 0.5019989 0.5287404 #>  [557,] 0.43503030 0.5697714 0.5916725 0.7278076 0.7568652 0.7749253 0.7848902 #>  [558,] 0.34318567 0.5776474 0.7219923 0.7411298 0.7765500 0.8347600 0.8608715 #>  [559,] 0.28177024 0.3245288 0.3882293 0.5377323 0.5386959 0.5759819 0.6281235 #>  [560,] 0.30788829 0.4077460 0.5153584 0.5803429 0.6014804 0.6169703 0.6459324 #>  [561,] 0.53919683 0.7005249 0.7107246 0.7704643 0.7726500 0.8233062 0.8476857 #>  [562,] 0.81196158 1.1460625 1.1937315 1.2670312 1.3563876 1.3605717 1.3610262 #>  [563,] 0.39960980 0.5864688 0.5989667 0.6885308 0.7083681 0.7356948 0.7383542 #>  [564,] 0.74307900 0.8202539 0.8515092 0.8605271 0.8972527 0.9016218 0.9834188 #>  [565,] 0.32610735 0.4430714 0.5117078 0.5387016 0.5395107 0.6197915 0.6289473 #>  [566,] 0.49001359 0.5580045 0.5923907 0.6030531 0.6171221 0.6365144 0.6768155 #>  [567,] 0.47956002 0.4958647 0.5128950 0.5419150 0.7720540 0.8079468 0.8230608 #>  [568,] 0.46460681 0.5251831 0.5293812 0.6150647 0.7248038 0.7310683 0.7443909 #>  [569,] 0.28105525 0.3580915 0.4507483 0.4536038 0.5070540 0.5344309 0.5467686 #>  [570,] 0.53351506 0.6143028 0.6363958 0.8136844 0.8576723 0.8727450 0.8807392 #>  [571,] 0.63594490 0.7233548 0.7247526 0.7373525 0.8037464 0.8926117 0.9307884 #>  [572,] 0.77199188 0.9380048 1.1153914 1.1296248 1.2037523 1.2276482 1.2293072 #>  [573,] 0.60798707 0.7565116 0.7765500 0.8491237 0.8890488 0.8898541 0.9464330 #>  [574,] 0.27398806 0.4388641 0.4422986 0.4591735 0.5007189 0.5231898 0.5441631 #>  [575,] 0.40980075 0.6306436 0.7280176 0.7515733 0.8137076 0.8825156 0.9299263 #>  [576,] 0.06443698 0.3787634 0.3908850 0.3959042 0.6010170 0.7355700 0.8176350 #>  [577,] 0.47558953 0.5229825 0.5359468 0.5589190 0.5728761 0.5759175 0.5973498 #>  [578,] 0.19349966 0.3790993 0.3818730 0.4601479 0.5133530 0.5192501 0.5250710 #>  [579,] 0.29280265 0.3933908 0.4179126 0.4366189 0.4731095 0.5039825 0.5220867 #>  [580,] 0.37653658 0.4708949 0.5360577 0.5442781 0.5992569 0.6889390 0.7118341 #>  [581,] 0.85134486 0.8816231 0.9911257 1.0271321 1.0846413 1.1353727 1.2044417 #>  [582,] 0.63902222 0.8656694 0.9184056 0.9740263 0.9929854 1.0162711 1.0370533 #>  [583,] 0.40575425 0.4707377 0.7867352 0.9418947 1.0722782 1.1318210 1.1974263 #>  [584,] 0.76041308 0.9035995 0.9470189 0.9530321 1.0021872 1.0158858 1.0286690 #>  [585,] 0.44159843 0.5719728 0.6726094 0.7147023 0.7662354 0.7999658 0.8029930 #>  [586,] 0.33343997 0.4564861 0.4728169 0.5611178 0.5702484 0.5863418 0.5943358 #>  [587,] 0.20383047 0.4413859 0.4501667 0.4746717 0.4806983 0.4900136 0.4956621 #>  [588,] 0.48908741 0.6230022 0.6341491 0.6443434 0.7579919 0.8150182 0.8630967 #>  [589,] 0.74374231 0.7490381 0.8728337 0.9580899 1.0249119 1.0575620 1.0633040 #>  [590,] 0.93595403 0.9931809 1.1643011 1.2042940 1.2044230 1.2087667 1.2517695 #>  [591,] 0.29326623 0.3333850 0.3894951 0.3930307 0.4306356 0.5351547 0.5387940 #>  [592,] 0.48587769 0.7743822 0.7859967 0.7933395 0.8189235 0.8344953 0.8442074 #>  [593,] 0.24609454 0.3769461 0.3823030 0.3944797 0.4158982 0.4234880 0.4476212 #>  [594,] 0.19052350 0.4012556 0.4514634 0.4553572 0.4897075 0.5226556 0.5479253 #>  [595,] 0.80435818 0.9925364 1.1488322 1.2095252 1.2155675 1.3362533 1.3860850 #>  [596,] 0.59436906 0.6599754 0.7257898 0.7897055 0.8019543 0.8291376 0.8365491 #>  [597,] 0.43640712 0.4534475 0.5354704 0.5978181 0.6062796 0.6995154 0.7180784 #>  [598,] 0.41788008 0.4241425 0.4343564 0.4943611 0.6630012 0.6639979 0.6671099 #>  [599,] 0.44866830 0.7091968 0.7366440 0.7884724 0.8019445 0.8610203 0.8746572 #>  [600,] 0.40818894 0.4248557 0.5000114 0.5134777 0.5326156 0.5758766 0.6098440 #>  [601,] 0.24269159 0.2595436 0.4009911 0.4558041 0.5410824 0.6451033 0.6599754 #>  [602,] 0.24100702 0.4190773 0.4651189 0.5397136 0.5863404 0.5864768 0.5952646 #>  [603,] 0.47514490 0.4906351 0.5022584 0.5755580 0.5861760 0.6450624 0.7089954 #>  [604,] 0.30799288 0.4965913 0.7555328 0.8130227 0.8264110 0.8347600 0.8417493 #>  [605,] 0.28287602 0.3336374 0.3888086 0.4309391 0.5457506 0.5645654 0.5752572 #>  [606,] 0.36060777 0.6301331 0.8357815 0.9274006 0.9410535 0.9473129 0.9718245 #>  [607,] 0.44866830 0.5059925 0.5442781 0.6316113 0.6420581 0.7012525 0.7024491 #>  [608,] 0.53271101 0.6849519 0.7953912 0.9025760 0.9112172 0.9285135 0.9617819 #>  [609,] 0.66008085 0.9302726 1.1686088 1.1862826 1.2149611 1.2331636 1.2469285 #>  [610,] 0.37550068 0.4031230 0.4771102 0.5030551 0.5133805 0.5169235 0.5501456 #>  [611,] 0.25111274 0.4913940 0.4962140 0.5507267 0.5704952 0.6136669 0.6165157 #>  [612,] 0.42403189 0.4556447 0.4994398 0.6704915 0.6815604 0.6880445 0.6887056 #>  [613,] 0.06443698 0.3734551 0.3790214 0.3800403 0.5993461 0.7887963 0.8205013 #>  [614,] 0.69581080 0.9250721 0.9680743 0.9699851 1.0132597 1.0618186 1.0636469 #>  [615,] 0.29405172 0.3784553 0.5055926 0.5164418 0.5197648 0.5456651 0.6479359 #>  [616,] 0.40980075 0.5198787 0.5993928 0.6214543 0.8165308 0.8180957 0.8807170 #>  [617,] 0.52842277 0.5717666 0.5942454 0.6250400 0.6511733 0.6562146 0.7012371 #>  [618,] 0.42750616 0.4784821 0.6247723 0.6267343 0.6835585 0.7602534 0.7621550 #>  [619,] 0.20081003 0.3520001 0.3778548 0.3797260 0.4041812 0.4307247 0.4740074 #>  [620,] 0.28136362 0.5855517 0.6373869 0.6971284 0.7484099 0.7776103 0.8323484 #>  [621,] 0.37676699 0.5098134 0.5209204 0.5338774 0.5598677 0.6052324 0.6571246 #>  [622,] 0.57584806 0.8463077 0.8964089 0.9124131 0.9634992 0.9816412 1.0138038 #>  [623,] 0.28652149 0.4469934 0.5186522 0.5411119 0.5697714 0.6012206 0.6363462 #>  [624,] 0.81276097 0.8397224 0.8531779 0.8755417 0.8947888 0.9294154 0.9409313 #>  [625,] 0.39463741 0.3962992 0.4606434 0.5555264 0.5632462 0.5694970 0.5815678 #>  [626,] 0.14369812 0.5872927 0.6007484 0.6748872 0.7008255 0.7021086 0.7214978 #>  [627,] 0.27413099 0.5112194 0.5452357 0.5453553 0.5837297 0.5864701 0.6365082 #>  [628,] 0.35411682 0.4534475 0.5083303 0.5510340 0.5918923 0.6400080 0.6542069 #>  [629,] 0.19638553 0.3401054 0.4065474 0.4275806 0.4488865 0.4527250 0.4606434 #>  [630,] 0.94695329 1.0767807 1.1662916 1.2429177 1.2784921 1.3622928 1.3745690 #>  [631,] 0.37435012 0.5261454 0.6227153 0.6315985 0.6571821 0.6953608 0.7456342 #>  [632,] 0.31747366 0.5258114 0.6186240 0.6464196 0.6687152 0.7189410 0.7636241 #>  [633,] 0.72324088 0.7420052 0.8155540 0.8608715 0.9001005 0.9143395 0.9315418 #>  [634,] 0.52555808 0.8127610 0.8663373 0.9547827 1.0203606 1.2973213 1.3016044 #>  [635,] 0.51301844 0.5563732 0.5602455 0.6376008 0.6906879 0.7151163 0.7421019 #>  [636,] 0.46971065 0.5740381 0.6233111 0.6273615 0.6481272 0.6627058 0.6800485 #>  [637,] 0.32091754 0.5456387 0.5571427 0.6664535 0.6694551 0.6851434 0.6987655 #>  [638,] 0.46563627 0.4727727 0.7309632 0.7519194 0.7785311 0.7960473 0.9169016 #>  [639,] 0.77021991 0.8619195 0.8753128 0.9639432 0.9798556 0.9864329 1.0137631 #>  [640,] 0.58626082 0.7867352 0.7993198 0.8513449 0.9844386 1.0455543 1.2382118 #>  [641,] 0.33109239 0.3735164 0.4545727 0.4578895 0.4601479 0.4868863 0.4900358 #>  [642,] 0.71671825 0.9670776 1.0178746 1.0316690 1.0969632 1.1340563 1.2516741 #>  [643,] 0.67870115 0.7472818 0.9281379 1.1643472 1.3405127 1.4463406 1.4512858 #>  [644,] 0.56423756 0.6143028 0.7664340 0.8295519 0.9027040 1.0478667 1.0485753 #>  [645,] 0.53866549 0.6607476 0.6851308 0.6857101 0.7172652 0.7454272 0.7672566 #>  [646,] 0.95654415 1.1396632 1.2108285 1.2643506 1.2824737 1.4139550 1.4750974 #>  [647,] 0.34010535 0.3646184 0.3879090 0.4226358 0.4897075 0.5142739 0.5237418 #>  [648,] 0.19453081 0.3307303 0.3324219 0.3677130 0.4148064 0.4715411 0.5401188 #>  [649,] 0.80991974 0.8230093 0.8635229 0.9252538 0.9320427 1.0183458 1.0197654 #>  [650,] 0.61563194 0.6716634 0.6751733 0.6882658 0.8203664 0.8338540 0.8493552 #>  [651,] 0.52381587 0.7891463 1.0753639 1.0913834 1.1681296 1.1708615 1.1899192 #>  [652,] 0.87646773 0.8880939 0.9020958 0.9132709 1.0097300 1.0105460 1.0205903 #>  [653,] 0.18496934 0.2893318 0.3520001 0.3823545 0.3871260 0.4226106 0.4572345 #>  [654,] 0.86568871 0.8985955 0.9579166 1.0409980 1.0534279 1.0724506 1.1321780 #>  [655,] 0.19052350 0.3586492 0.3592892 0.5142739 0.5360771 0.5959624 0.6085369 #>  [656,] 0.34163020 0.4283275 0.4855934 0.4902399 0.5257086 0.5637751 0.5724805 #>  [657,] 0.22952922 0.3600945 0.3871260 0.4080084 0.4510014 0.4528600 0.4628820 #>  [658,] 0.69139744 0.7382368 0.9408775 0.9638128 1.0101164 1.0320965 1.0437815 #>  [659,] 1.41954957 1.5318485 1.7173092 1.7461425 1.7518533 1.7629334 1.7977352 #>  [660,] 0.36894283 0.4110552 0.4420370 0.4792750 0.4891598 0.5453553 0.5525385 #>  [661,] 0.46990036 0.4847977 0.5482997 0.6286626 0.7271708 0.7390550 0.8219460 #>  [662,] 0.73774280 0.7577101 0.8029388 1.1356645 1.2171648 1.2898647 1.2918625 #>  [663,] 0.97478843 1.0761221 1.0831587 1.1567243 1.3125149 1.4832193 1.6055022 #>  [664,] 0.49943985 0.5892583 0.5925210 0.6691838 0.7191949 0.7417875 0.7739079 #>  [665,] 0.29562048 0.5485698 0.7743223 0.7771867 0.9064695 1.0134980 1.0145567 #>  [666,] 0.19619166 0.2828760 0.3635891 0.4756768 0.4886626 0.5158260 0.5450619 #>  [667,] 0.32762262 0.4598920 0.6200836 0.6208132 0.6255987 0.6410727 0.6893352 #>  [668,] 0.82488481 0.8539881 0.9593377 1.0277735 1.0339792 1.0394383 1.0709042 #>  [669,] 0.22952922 0.3823545 0.3833208 0.4101284 0.4669468 0.4860281 0.4974474 #>  [670,] 0.37046900 0.6543352 0.6616638 0.7673756 0.7830365 0.8404146 0.8988468 #>  [671,] 0.26391137 0.4339604 0.4757968 0.4815231 0.5071378 0.5099389 0.5202146 #>  [672,] 0.81294675 0.8555156 0.9248364 0.9490047 1.0309781 1.0447546 1.0624949 #>  [673,] 0.47229040 0.5978470 0.6073812 0.6149180 0.6360067 0.6822340 0.7406754 #>  [674,] 0.40439923 0.4736604 0.4814145 0.4920252 0.5241385 0.5594865 0.6157514 #>  [675,] 0.38434692 0.3879090 0.4065474 0.4415072 0.4432146 0.5013068 0.5045053 #>  [676,] 0.38249166 0.3894869 0.5953164 0.6143180 0.6256001 0.6687152 0.7372678 #>  [677,] 0.41109408 0.4264318 0.6347703 0.6485388 0.6615361 0.7076985 0.7456913 #>  [678,] 0.62866258 1.0277762 1.0462118 1.0596680 1.0671824 1.0809682 1.0927018 #>  [679,] 0.54191498 0.5826077 0.5852701 0.9081276 1.0171978 1.0222357 1.0270117 #>  [680,] 0.44204180 0.5065854 0.5329865 0.5598038 0.5822882 0.6120175 0.6795297 #>  [681,] 1.43288909 1.6949842 1.7262951 1.7454634 1.7749788 1.7769355 1.8813949 #>  [682,] 0.30499736 0.4022042 0.4298321 0.4520648 0.4571168 0.4937993 0.4986801 #>  [683,] 0.53628471 0.6852927 0.7382368 0.7808518 0.8091186 0.8318148 0.9219424 #>  [684,] 0.49929978 0.6569955 0.7939588 0.8362200 0.8473047 0.9015850 0.9429366 #>  [685,] 0.42219972 0.4858458 0.5772910 0.6468760 0.6506076 0.7339598 0.7848740 #>  [686,] 0.28136362 0.5540177 0.7155234 0.7822906 0.7938445 0.8035198 0.8554150 #>  [687,] 0.37902138 0.3908850 0.4948598 0.6231309 0.6435408 0.6836365 0.8315414 #>  [688,] 0.12311639 0.2328586 0.3099939 0.3733128 0.3735164 0.4189035 0.5026863 #>  [689,] 0.93219135 0.9357962 1.1133644 1.1138129 1.1675205 1.1732212 1.2326283 #>  [690,] 0.39745565 0.6200836 0.6371847 0.7173797 0.7469732 0.7736566 0.7966122 #>  [691,] 0.21438353 0.3784398 0.3894176 0.4040221 0.4501667 0.4503285 0.5005334 #>  [692,] 0.54176780 0.7255541 0.7887586 0.8199929 0.8511371 0.9315020 0.9357298 #>  [693,] 0.79539116 0.8968886 1.1091096 1.1910852 1.1942218 1.2096223 1.2314755 #>  [694,] 0.48821232 0.5325222 0.6492126 0.9547827 0.9782597 1.0246121 1.1020997 #>  [695,] 0.52011821 0.5531061 0.6216296 0.6875553 0.7101352 0.7113277 0.7356658 #>  [696,] 0.52247882 0.5503854 0.5577623 0.6007484 0.6161736 0.6314199 0.7265207 #>  [697,] 0.51944319 0.6230022 0.7469732 0.7684055 0.8022896 0.8205355 0.9324147 #>  [698,] 0.21269047 0.3478183 0.4128897 0.4170275 0.4605955 0.5126746 0.5530575 #>  [699,] 0.22777105 0.2765912 0.3099939 0.3690185 0.4648931 0.4699043 0.5055227 #>  [700,] 0.46835854 0.4722023 0.6609985 0.6665763 0.7245893 0.7808518 0.7843659 #>  [701,] 0.84935523 0.9677675 1.1692103 1.1784933 1.2331480 1.2555299 1.3403043 #>  [702,] 0.32673556 0.5232783 0.5239490 0.5609904 0.6119033 0.6724755 0.6856162 #>  [703,] 0.32091754 0.5066583 0.5227497 0.5822882 0.6004384 0.6231309 0.6874573 #>  [704,] 0.38948687 0.4254553 0.4284931 0.5258114 0.5604645 0.6046510 0.6652949 #>  [705,] 1.31729770 1.3347680 1.3462833 1.4458400 1.4645044 1.5371870 1.5546972 #>  [706,] 0.66555985 0.6986407 0.7129889 0.7169734 0.7186645 0.7460704 0.8057980 #>  [707,] 1.21840232 1.2904709 1.3204364 1.3516993 1.3574538 1.4969103 1.5599131 #>  [708,] 0.20682460 0.4360727 0.4945886 0.5135984 0.5944535 0.6055667 0.6426524 #>  [709,] 0.29355281 0.3099361 0.3417658 0.3995358 0.4628872 0.4786698 0.4977180 #>  [710,] 0.58626082 0.8506303 0.9911257 1.0304015 1.0361814 1.0722782 1.1457602 #>  [711,] 0.66559897 0.9981294 1.1088369 1.1147052 1.1771683 1.2456376 1.2599347 #>  [712,] 0.18496934 0.2037202 0.3356163 0.3500936 0.3600945 0.3833208 0.4041812 #>  [713,] 0.29025476 0.3016491 0.3325238 0.3333850 0.3353795 0.4431168 0.4848502 #>  [714,] 0.99253638 1.1720515 1.3099736 1.3176101 1.3230151 1.3554815 1.4524412 #>  [715,] 0.25116100 0.5153584 0.5287947 0.5664051 0.5864701 0.7319535 0.7555202 #>  [716,] 1.06366324 1.2651980 1.4948430 1.5837729 1.5986580 1.6106888 1.6903694 #>  [717,] 1.07678073 1.0846420 1.1774213 1.3176229 1.3223233 1.3675572 1.3916853 #>  [718,] 0.45146345 0.5001950 0.5360771 0.5505583 0.5547946 0.6063722 0.6265408 #>  [719,] 0.65845005 0.8029388 0.9201825 0.9597085 1.0167472 1.0714557 1.0845578 #>  [720,] 0.55100035 0.6027286 0.6056720 0.6546912 0.6724755 0.7105098 0.7391316 #>  [721,] 0.49404348 0.6267663 0.6391015 0.7269994 0.7329924 0.7807727 0.7901958 #>  [722,] 1.07052248 1.0948206 1.1011340 1.1178882 1.1387725 1.1398033 1.1648493 #>  [723,] 1.22070054 1.3357028 1.3904147 1.5894819 1.6049176 1.6530384 1.6594268 #>  [724,] 0.51546363 0.5427942 0.5494221 0.6267841 0.6450624 0.6692296 0.6786198 #>  [725,] 0.39713272 0.4962140 0.5419740 0.6898168 0.7375685 0.7572516 0.7636798 #>  [726,] 0.23147596 0.2936603 0.5269107 0.5294995 0.5800039 0.5917079 0.6488977 #>  [727,] 0.68453015 0.7444125 0.8257885 0.8789915 0.9085511 0.9132748 1.0420309 #>  [728,] 0.21899876 0.5056286 0.5968427 0.5994009 0.6064133 0.6655599 0.6930545 #>  [729,] 0.45973924 0.5011231 0.5294520 0.5937230 0.6106296 0.6328233 0.6463534 #>  [730,] 0.39155002 0.4232862 0.4781621 0.5051981 0.5343289 0.5546540 0.5998546 #>  [731,] 0.36238912 0.4675109 0.5482997 0.6689118 0.7987564 0.8212875 0.8346824 #>  [732,] 0.38340688 0.4229073 0.5867269 0.7673756 0.8356845 0.8815337 0.9049789 #>  [733,] 0.39924099 0.5162923 0.5457506 0.5637042 0.6525960 0.7744181 0.7804437 #>  [734,] 0.29366033 0.4428645 0.4866008 0.5910793 0.5964690 0.6131927 0.6255867 #>  [735,] 0.42403189 0.5202932 0.5583975 0.7348982 0.7417875 0.7629768 0.9305786 #>  [736,] 0.47370146 0.6497153 0.6628604 0.6816193 0.8234463 0.9476516 0.9721018 #>  [737,] 0.32645833 0.4412370 0.4946990 0.5327433 0.5599812 0.6245121 0.6276349 #>  [738,] 0.37435012 0.4755077 0.5600855 0.6018673 0.6277807 0.6308084 0.6346401 #>  [739,] 0.51505580 0.5158260 0.5550960 0.5856348 0.6165157 0.6365069 0.6751116 #>  [740,] 0.29376464 0.3754941 0.4351630 0.4669056 0.4959291 0.5404660 0.5489703 #>  [741,] 0.57441635 0.8385162 0.8898626 1.0604803 1.0682302 1.0969442 1.1015394 #>  [742,] 0.46563627 0.6065703 0.6115957 0.7084989 0.7211547 0.8709379 0.9904073 #>  [743,] 0.45692932 0.5441631 0.6031697 0.6275900 0.6605620 0.6889350 0.7111464 #>  [744,] 0.55912593 0.6285536 0.8340456 0.8782873 0.9105457 0.9183319 0.9872698 #>  [745,] 0.53375244 0.6075712 0.6123863 0.7118341 0.7778734 0.7924151 0.8030005 #>  [746,] 0.85063026 0.9996174 1.0455543 1.0636632 1.0846413 1.3689173 1.3985098 #>  [747,] 0.62768346 0.6832311 0.8270851 0.8773382 0.9037585 0.9758108 0.9918784 #>  [748,] 0.86352287 0.9294077 0.9597529 0.9631674 1.0310829 1.0807630 1.1016912 #>  [749,] 0.58805460 0.5923907 0.5943691 0.6167257 0.6451033 0.6615329 0.7007189 #>  [750,] 0.20919443 0.2443611 0.2811758 0.3049974 0.3481238 0.4695471 0.5221921 #>  [751,] 0.89725267 0.9112581 0.9489816 1.2507232 1.3121308 1.3127577 1.3373942 #>  [752,] 0.26365485 0.5890042 0.6673844 0.7349493 0.7993414 0.8410130 0.9006876 #>  [753,] 0.54099723 0.5725903 0.7910624 0.9476516 0.9722788 0.9941375 1.0305361 #>  [754,] 0.45987262 0.5411127 0.5925470 0.7092205 0.7488926 0.7700818 0.7909053 #>  [755,] 0.30993613 0.4101284 0.4260482 0.4505540 0.4576848 0.4777062 0.5039130 #>  [756,] 0.52394905 0.5645922 0.5750908 0.6186240 0.6440486 0.7049666 0.7156754 #>  [757,] 0.12311639 0.2540421 0.3215578 0.3310924 0.3690185 0.4820637 0.5133530 #>  [758,] 0.42643175 0.6494929 0.6706440 0.6825986 0.6857065 0.6871108 0.7273780 #>  [759,] 0.44244155 0.4772412 0.5001950 0.5386655 0.5662010 0.6615496 0.6668798 #>  [760,] 0.54833740 0.5704380 0.5930440 0.6498500 0.6808228 0.7428899 0.7616392 #>  [761,] 0.44406421 0.6193135 0.6226925 0.6487314 0.6595406 0.6700599 0.6707151 #>  [762,] 0.28056837 0.2935528 0.3787348 0.4260482 0.4413394 0.4721913 0.4740074 #>  [763,] 0.38902945 0.4772412 0.6034204 0.6041024 0.6041073 0.6369657 0.6651188 #>  [764,] 0.47934937 0.4814145 0.5031197 0.5431227 0.5815207 0.6152107 0.6165426 #>  [765,] 0.35589520 0.3584123 0.3882293 0.4599798 0.5170554 0.5404660 0.5455274 #>  [766,] 0.54950233 0.5826529 0.6192151 0.8075784 0.8537155 0.8634715 0.8890484 #>  [767,] 0.25752281 0.3748020 0.3925566 0.4262316 0.4442991 0.4956412 0.5781076 #>  [768,] 0.38949509 0.3907801 0.4360226 0.4983160 0.5060485 0.5214980 0.5405683 #>  [769,] 0.33924973 0.4057550 0.5883554 0.6095184 0.6115729 0.6603350 0.6985825 #>  [770,] 0.43637350 0.7084989 1.0283559 1.2276484 1.2425764 1.2564189 1.3546778 #>  [771,] 0.26061217 0.3670530 0.4175655 0.4340024 0.4608261 0.4873019 0.4939821 #>  [772,] 0.59492159 0.9780754 1.2357705 1.2882942 1.2979056 1.3689173 1.5374411 #>  [773,] 0.15939739 0.3813601 0.4060028 0.4771102 0.6076339 0.6894658 0.7036776 #>  [774,] 0.39636638 0.4601185 0.4976761 0.6079189 0.6293921 0.6345712 0.6546476 #>  [775,] 0.54457330 0.5588865 0.5904256 0.6047039 0.6463702 0.6777887 0.7833003 #>  [776,] 0.19619166 0.3336374 0.4005615 0.4023546 0.4406368 0.4715035 0.5214980 #>  [777,] 0.35251731 0.4286971 0.4523095 0.5211113 0.6689118 0.6935510 0.7163933 #>  [778,] 0.62080669 0.6726094 0.7449777 0.7899087 0.8647789 0.8698240 0.8759010 #>  [779,] 0.29405172 0.3564022 0.4494382 0.4610872 0.4866350 0.6043887 0.6649276 #>  [780,] 0.39464798 0.5730097 0.6276835 0.6514561 0.6546978 0.7467323 0.7765950 #>  [781,] 0.60798707 0.7251633 0.7734364 0.7858398 0.7884897 0.8325085 0.8372804 #>  [782,] 0.67828145 0.7436581 0.7860275 0.8080158 0.8712024 0.9411165 0.9462726 #>  [783,] 0.64644690 0.6950362 0.9082312 1.0227413 1.0849674 1.1105571 1.1135275 #>  [784,] 0.42750792 0.4399732 0.4405342 0.4866350 0.5164418 0.5525385 0.5837297 #>  [785,] 0.58952740 0.5949216 0.8616720 1.1864025 1.1864078 1.2400863 1.2452453 #>  [786,] 0.44746621 0.4758130 0.5359129 0.5506492 0.5913269 0.5944086 0.6031697 #>  [787,] 0.60118991 0.7490381 0.7586807 0.8807813 0.8854580 0.9732106 1.0319343 #>  [788,] 0.26598603 0.4198660 0.4442991 0.4684233 0.4805213 0.5042530 0.5280655 #>  [789,] 0.38663106 0.6799855 0.6942183 0.7329113 0.7940036 0.8673687 1.0020501 #>  [790,] 0.64407085 0.6958452 0.7201887 0.8508303 0.8551881 0.9107794 0.9603201 #>  [791,] 0.29998060 0.4900663 0.5564960 0.6673844 0.7227360 0.7633240 0.7761265 #>  [792,] 0.21142718 0.5041685 0.5794850 0.6018673 0.6592357 0.7313448 0.7665368 #>  [793,] 0.41088243 0.4125268 0.4658719 0.4752898 0.5595588 0.6122891 0.6151759 #>  [794,] 0.55509595 0.6839313 0.7610174 0.7820363 0.7829352 0.8028347 0.8096693 #>  [795,] 0.20070157 0.2525436 0.4599798 0.4712768 0.5162144 0.5294995 0.6131927 #>  [796,] 0.24100702 0.2862166 0.4425381 0.4874440 0.5748848 0.6332005 0.6891822 #>  [797,] 0.25358548 0.4524685 0.4697835 0.5155750 0.5968427 0.6121834 0.6251828 #>  [798,] 0.45437205 0.7151163 0.8651633 0.8833319 0.9408245 0.9596552 1.0711273 #>  [799,] 0.29587358 0.3183387 0.3349347 0.4462629 0.4596433 0.5035207 0.5479393 #>  [800,] 0.74344212 0.8648221 0.8672240 0.8966366 1.0129974 1.0227956 1.0785020 #>  [801,] 1.56390104 1.5657869 1.7795675 1.9119670 1.9534755 1.9732582 1.9918567 #>  [802,] 0.49097985 0.5675592 0.5830881 0.6094085 0.6387553 0.6747003 0.6865561 #>  [803,] 0.38812645 0.4275079 0.5661452 0.6605443 0.7776640 0.7832306 0.7887586 #>  [804,] 0.37448926 0.4981700 0.5393116 0.5890042 0.6800716 0.7101352 0.7495574 #>  [805,] 0.83129858 0.8376812 1.0168180 1.0219000 1.0323433 1.0548458 1.1038078 #>  [806,] 0.43637350 1.1333364 1.4578018 1.4631492 1.6266456 1.6314915 1.7330619 #>  [807,] 0.28781203 0.3585585 0.4130087 0.4464127 0.4628820 0.4715411 0.4934492 #>  [808,] 0.56742449 0.7011964 0.7073310 0.7416555 0.7795140 0.8514653 0.8572450 #>  [809,] 0.42967947 0.7167182 0.7825621 0.9970534 1.0241049 1.0656669 1.1539444 #>  [810,] 0.49404348 0.5506170 0.5655540 0.6363662 0.6885308 0.6941921 0.6978207 #>  [811,] 0.81175109 0.8645616 0.9580430 1.0926958 1.1419388 1.1611970 1.1619314 #>  [812,] 0.16975155 0.4038234 0.4308328 0.4406957 0.4658719 0.4992196 0.5183078 #>  [813,] 0.39375151 0.4894143 0.5881773 0.5900231 0.6499896 0.6900938 0.7171374 #>  [814,] 0.52875102 0.5535995 0.5930408 0.6094085 0.7106138 0.7217420 0.7321146 #>  [815,] 0.31963011 0.6171221 0.6392104 0.6579979 0.6640849 0.6927067 0.7258225 #>  [816,] 0.53298647 0.5590547 0.5821457 0.6526827 0.6678011 0.7377447 0.7544114 #>  [817,] 0.46758231 0.6341491 0.7979286 0.8022896 0.8493686 0.8912892 0.9360010 #>  [818,] 0.54099723 0.5629654 0.6497153 0.7495755 0.8771663 0.8967653 0.9428785 #>  [819,] 0.25047378 0.3825755 0.4121700 0.4757292 0.4938818 0.5402961 0.5744741 #>  [820,] 0.19638553 0.3101211 0.4165233 0.4166840 0.4226358 0.4240800 0.4432146 #>  [821,] 0.37985296 0.4394001 0.4691707 0.5241663 0.5498735 0.5875443 0.6741407 #>  [822,] 0.55466534 0.6616638 0.7103210 0.8445120 0.8616450 0.9054136 0.9090830 #>  [823,] 0.26061217 0.3239569 0.3701631 0.3895736 0.4234880 0.4853105 0.4855225 #>  [824,] 0.40999040 0.4113804 0.4642626 0.4723221 0.5844587 0.6004553 0.6076634 #>  [825,] 0.28695693 0.3202089 0.4270901 0.5007925 0.5244079 0.6004553 0.6179132 #>  [826,] 0.43093907 0.4749690 0.5054032 0.5162923 0.5477253 0.5986212 0.6613407 #>  [827,] 0.36395568 0.4254553 0.4336776 0.4877782 0.6200362 0.6267343 0.6509186 #>  [828,] 0.54724773 0.6400548 0.6739431 0.8234866 0.8314899 0.8319525 0.8616893 #>  [829,] 0.54746541 0.5665696 0.6302808 0.7401482 0.7446818 0.7816043 0.8139911 #>  [830,] 0.66008085 1.2349617 1.2588432 1.3043646 1.3828730 1.3867204 1.4800431 #>  [831,] 0.23253817 0.3510728 0.4496490 0.5729036 0.5958321 0.6636104 0.6770331 #>  [832,] 0.59760411 0.6209300 0.6340128 0.6457496 0.6742533 0.7138413 0.7479574 #>  [833,] 0.53375244 0.5472477 0.5562792 0.6091778 0.7593422 0.7846851 0.8205738 #>  [834,] 0.52583059 0.6108756 0.6170252 0.6512225 0.6712401 0.7336897 0.8157479 #>  [835,] 0.26117239 0.3693287 0.6444913 0.6730436 0.6940198 0.7092211 0.7159525 #>  [836,] 0.66299705 0.7415882 0.7535193 0.8150395 0.8228424 0.9094178 0.9138724 #>  [837,] 0.11054873 0.3298202 0.3650977 0.3899376 0.4008991 0.4356812 0.4406957 #>  [838,] 0.44080322 0.5397702 0.5479393 0.6358293 0.6545835 0.6749588 0.6831737 #>  [839,] 0.54523568 0.5518864 0.6326736 0.7555202 0.7649270 0.7975446 0.8385162 #>  [840,] 0.51431110 0.5519846 0.6312541 0.6577084 0.6824197 0.7126497 0.7771085 #>  [841,] 0.28627206 0.3785126 0.6716634 0.7036776 0.7830346 0.7932834 0.8343481 #>  [842,] 0.26680982 0.3305694 0.3814051 0.4280894 0.4347396 0.5224061 0.5427986 #>  [843,] 0.49004833 0.5011231 0.5126941 0.5189201 0.5594865 0.6340997 0.6830116 #>  [844,] 0.37113204 0.6019976 0.6071808 0.6404654 0.6457496 0.7355581 0.7782351 #>  [845,] 0.22300046 0.4631630 0.4715605 0.6778143 0.6922651 0.7171374 0.7203827 #>  [846,] 0.22981991 0.4437153 0.5169235 0.5487300 0.6360528 0.6638090 0.6767999 #>  [847,] 0.25752281 0.4213433 0.4557788 0.4710207 0.5042530 0.5335525 0.5430021 #>  [848,] 1.83152618 1.9122227 1.9983955 2.0050379 2.0383502 2.0402203 2.0426443 #>  [849,] 0.34154117 0.3893602 0.4598920 0.6020217 0.6021200 0.6273585 0.6709126 #>  [850,] 0.77867312 0.9504426 1.1360027 1.1553227 1.1762254 1.1851992 1.1884910 #>  [851,] 0.45350279 0.5099389 0.5295851 0.5302830 0.5497424 0.6379831 0.6573591 #>  [852,] 0.57509080 0.6027286 0.6856162 0.7434421 0.7982004 0.8074844 0.8509700 #>  [853,] 0.73950155 0.7993198 0.8035198 0.8218871 0.8416545 0.8965235 0.8979458 #>  [854,] 0.37847461 0.4174823 0.5083303 0.5133216 0.5551970 0.5694489 0.6094846 #>  [855,] 0.61921506 0.7681975 0.8936599 0.9329895 0.9514419 0.9519289 1.0777988 #>  [856,] 0.37653658 0.5059925 0.6005085 0.6075712 0.6351311 0.6400548 0.6526979 #>  [857,] 0.57744048 0.7181251 0.7278076 0.7437636 0.8306923 0.8893594 0.9132748 #>  [858,] 0.31963011 0.3709551 0.5113961 0.5360486 0.5915221 0.6502445 0.6504809 #>  [859,] 0.42040406 0.5169618 0.6036615 0.6341953 0.6361665 0.6374889 0.6456610 #>  [860,] 0.58952740 0.7820363 0.9132348 0.9344031 0.9780754 0.9996174 1.0742934 #>  [861,] 0.31554286 0.5645922 0.5797362 0.6570768 0.6576646 0.6943928 0.7100252 #>  [862,] 0.32333223 0.3324361 0.4041139 0.4088040 0.4141443 0.4165233 0.4790419 #>  [863,] 0.55665497 0.6199562 0.6394927 0.6443434 0.6700599 0.7087765 0.7235740 #>  [864,] 0.44281159 0.6569955 0.7541158 0.8301737 0.8532896 0.9004344 0.9250721 #>  [865,] 0.46804725 0.5000114 0.5209204 0.5507969 0.5627929 0.5978607 0.6509929 #>  [866,] 0.66891188 0.6736024 0.6982858 0.7081651 0.7917242 0.8157710 0.9225411 #>  [867,] 0.21899876 0.4697835 0.5602482 0.6035917 0.6986407 0.7082275 0.7184185 #>  [868,] 0.81534153 0.8232843 0.8277651 0.9002796 0.9299263 0.9462764 0.9552018 #>  [869,] 0.44641274 0.4566078 0.4727486 0.4728409 0.5019989 0.5397218 0.5401188 #>  [870,] 0.45973924 0.5071982 0.5719728 0.6113328 0.6743391 0.6917115 0.6967823 #>  [871,] 0.41252683 0.4657088 0.4923469 0.5211113 0.5930483 0.6433102 0.7017054 #>  [872,] 0.33735050 0.5263835 0.5857884 0.6400080 0.6860769 0.6986666 0.7182699 #>  [873,] 0.66428820 0.7736566 0.8982442 0.9184056 0.9456323 1.0856518 1.1065728 #>  [874,] 0.33460704 0.5902360 0.6917958 0.7233548 0.7393771 0.9274215 1.0194544 #>  [875,] 0.56296536 0.5756308 0.6136506 0.6500833 0.6628604 0.7180784 0.7448010 #>  [876,] 0.12808870 0.3623891 0.4286971 0.4847977 0.5751417 0.6075887 0.6728959 #>  [877,] 0.64637018 0.7172772 0.7337518 0.7427283 0.8086648 0.8286993 0.8625060 #>  [878,] 0.72503230 0.7309364 0.8018932 0.8693458 0.9057975 0.9582648 0.9968228 #>  [879,] 0.63725268 0.9064695 0.9351346 0.9972548 1.0127352 1.0188889 1.0641077 #>  [880,] 0.35864923 0.4012556 0.4068342 0.5294658 0.5743776 0.5932781 0.6095867 #>  [881,] 0.82328425 0.9170282 0.9972306 0.9992330 1.0799830 1.1300035 1.1334514 #>  [882,] 0.53591286 0.5658376 0.6142154 0.6820169 0.7451511 0.7782524 0.7945657 #>  [883,] 0.37259475 0.5261127 0.6820221 0.6917958 0.7287877 0.7672566 0.8725511 #>  [884,] 0.34790667 0.3811046 0.3825755 0.4513957 0.5143111 0.5219985 0.6470648 #>  [885,] 0.43855390 0.6141285 0.7100899 0.7574294 0.8771663 0.8909458 0.8932833 #>  [886,] 0.33698182 0.6629971 0.7748656 0.9240548 0.9476333 1.0873642 1.1030125 #>  [887,] 0.63409633 0.7291299 0.8693458 0.8870043 0.8924804 0.9635730 0.9639432 #>  [888,] 0.32641387 0.4965913 0.6123863 0.6912188 0.7140120 0.7310312 0.7364792 #>  [889,] 0.37259475 0.6458642 0.6857101 0.7092205 0.8020232 0.8239966 0.8659911 #>  [890,] 0.34450169 0.4680021 0.4689871 0.5017509 0.5487519 0.5489580 0.5560514 #>  [891,] 0.78914627 0.9212384 0.9567905 1.0306982 1.0631981 1.0807762 1.0959757 #>  [892,] 0.38944539 0.5855656 0.5867269 0.5939232 0.6257743 0.6930419 0.7024491 #>  [893,] 0.44869849 0.4774127 0.4963289 0.5925470 0.6039112 0.6607476 0.7276137 #>  [894,] 0.47084983 0.4715872 0.4792750 0.4878824 0.5017509 0.5112194 0.5504274 #>  [895,] 0.22981991 0.5133805 0.5384226 0.5561699 0.5728414 0.6276885 0.6607412 #>  [896,] 0.35702906 0.4860701 0.5410824 0.5754283 0.6311350 0.6399397 0.6689116 #>  [897,] 0.72495210 1.0395655 1.0872280 1.1105571 1.1172660 1.1333156 1.1755732 #>  [898,] 0.30799288 0.3264139 0.6751078 0.6958641 0.7017077 0.7778734 0.8101594 #>  [899,] 0.52583059 0.5608360 0.6283972 0.6851321 0.7377643 0.7416506 0.7545691 #>  [900,] 0.37876343 0.3800403 0.4948598 0.6267663 0.6416666 0.7275934 0.7628475 #>  [901,] 0.43119205 0.5363126 0.6681105 0.6819498 0.7296357 0.7298730 0.7533462 #>  [902,] 0.39491312 0.5150840 0.5152524 0.5360486 0.5505564 0.5649424 0.6927067 #>  [903,] 0.62086847 0.6853088 0.7713148 0.8044723 0.8375075 0.8535164 0.8725511 #>  [904,] 0.13920356 0.1638005 0.6595406 0.6674176 0.6958641 0.7310312 0.7342961 #>  [905,] 0.67759343 0.7915590 0.8673687 0.9054136 0.9840508 1.0538939 1.1053015 #>  [906,] 0.47059222 0.6655990 0.7199717 0.7236712 0.7391359 0.7871922 0.9172032 #>  [907,] 0.40683422 0.5427535 0.5531278 0.5862375 0.5884048 0.6056720 0.6227153 #>  [908,] 0.61087561 0.7291299 0.8138713 0.8170182 0.8864995 0.8985955 0.9520810 #>  [909,] 0.25225354 0.2881196 0.2911727 0.4198660 0.5273969 0.5640888 0.5669167 #>  [910,] 0.28921044 0.3595677 0.4596433 0.4774102 0.4916085 0.5126746 0.5159015 #>  [911,] 0.34533952 0.3877621 0.4981700 0.5287404 0.5656023 0.5717687 0.5924361 #>  [912,] 0.17939034 0.3001107 0.5154143 0.5340103 0.5386959 0.5436961 0.5831061 #>  [913,] 0.78256847 0.8032556 0.8213601 0.8473665 0.8687878 0.9201937 0.9293231 #>  [914,] 0.29645615 0.3324219 0.3742867 0.3747527 0.5605822 0.6152939 0.6278263 #>  [915,] 0.47329990 0.7015199 0.7092554 0.7880331 0.8032211 0.8362200 0.8543517 #>  [916,] 0.39239860 0.4279969 0.5371161 0.5582246 0.5884043 0.6073468 0.6330306 #>  [917,] 0.23147596 0.4025769 0.4055149 0.4712768 0.4866008 0.6257743 0.6275135 #>  [918,] 0.92525380 0.9659354 0.9693973 0.9782530 1.1085858 1.1259388 1.1686879 #>  [919,] 0.52765663 0.5602506 0.8856526 0.9535751 0.9548578 0.9619405 0.9824227 #>  [920,] 0.56656957 0.5909408 0.6111406 0.6564929 0.7082485 0.7833223 0.7947375 #>  [921,] 0.39574403 0.5875464 0.6464469 0.6595764 0.7678004 0.8157479 0.8170182 #>  [922,] 0.53554924 0.5973650 0.6479359 0.6562577 0.6802833 0.7575838 0.7923873 #>  [923,] 0.35536062 0.3779236 0.4593609 0.5275434 0.5361889 0.5594383 0.5875443 #>  [924,] 0.38136008 0.4219632 0.5375487 0.5561699 0.5815207 0.5997129 0.7090832 #>  [925,] 0.60342992 0.6285536 0.9359540 1.0137631 1.0183458 1.0392322 1.0409980 #>  [926,] 0.25111274 0.3971327 0.4510556 0.5150558 0.5903835 0.6825058 0.6942087 #>  [927,] 0.34567138 0.4405538 0.5337640 0.5497354 0.5532055 0.6357853 0.6400808 #>  [928,] 0.47414268 0.4900358 0.4988284 0.5583510 0.5608868 0.5919142 0.5984238 #>  [929,] 0.51826662 0.9998149 1.1098270 1.1262562 1.1524429 1.2100476 1.3162196 #>  [930,] 0.75771009 1.0378446 1.2100476 1.2165562 1.3294463 1.3485784 1.3537287 #>  [931,] 0.31854688 0.3734551 0.3959042 0.6416666 0.6836365 0.7351750 0.7515733 #>  [932,] 0.55242787 0.6071808 0.6525960 0.6754860 0.6891468 0.7129108 0.7329803 #>  [933,] 0.33733365 0.3933908 0.4755895 0.5074547 0.5194122 0.5436603 0.5651288 #>  [934,] 0.35107280 0.4054120 0.5235459 0.5352657 0.6723270 0.6775423 0.7272667 #>  [935,] 0.32434270 0.5041685 0.5155794 0.5323514 0.5609904 0.5657078 0.6235238 #>  [936,] 0.37095509 0.4645988 0.5479805 0.5492530 0.5649424 0.6187482 0.6292168 #>  [937,] 0.65433520 0.6775934 0.9090830 0.9652533 1.0016459 1.0605316 1.1513208 #>  [938,] 0.48559343 0.5098685 0.6232797 0.6545778 0.7053714 0.7180003 0.7225098 #>  [939,] 0.51754936 0.6443462 0.6815604 0.7133703 0.7536807 0.7629768 0.7807303 #>  [940,] 0.41401917 0.4281259 0.5063466 0.5910793 0.6149180 0.6533701 0.6693156 #>  [941,] 0.43127637 0.5220867 0.6209464 0.6564929 0.6887056 0.6963150 0.7446715 #>  [942,] 0.33558076 0.3456714 0.4762632 0.5198001 0.5344309 0.5819549 0.6085369 #>  [943,] 0.43855390 0.5219985 0.5730097 0.6314604 0.6488589 0.6577084 0.6702641 #>  [944,] 0.43715283 0.4683585 0.5247991 0.6955533 0.7576299 0.7980066 0.8291376 #>  [945,] 0.77581207 0.8044723 0.8434276 0.8531779 0.9106207 0.9496841 0.9683007 #>  [946,] 0.34163020 0.4125962 0.4503285 0.4795889 0.4969787 0.5098685 0.5391752 #>  [947,] 0.21378730 0.3925566 0.4576848 0.4639740 0.4819766 0.4854596 0.4860281 #>  [948,] 0.24436106 0.2792067 0.2964352 0.3348436 0.3899376 0.4298321 0.4533264 #>  [949,] 0.44159843 0.7420451 0.8145655 0.8346059 0.8491237 0.8516760 0.8652646 #>  [950,] 0.41985113 0.5416637 0.6211303 0.6650888 0.6731865 0.7063471 0.7508927 #>  [951,] 0.61531156 0.8702752 0.9342955 0.9588805 0.9693805 0.9977138 1.0260377 #>  [952,] 0.47073774 0.6032022 1.1505941 1.2041985 1.2382118 1.3002598 1.3814397 #>  [953,] 0.68529273 0.6913974 0.7843659 0.8349937 0.9922897 1.0763650 1.1228720 #>  [954,] 0.47274861 0.5068370 0.5675592 0.6060861 0.6641613 0.6951436 0.7058390 #>  [955,] 0.82652005 0.9540056 0.9863755 1.2224653 1.2445479 1.2612410 1.3013286 #>  [956,] 0.37005987 0.4305036 0.4809510 0.5194801 0.5393783 0.6015149 0.6319655 #>  [957,] 0.53741474 0.5661688 0.6097584 0.6115830 0.6122891 0.6192169 0.6281446 #>  [958,] 0.55466534 0.6256001 0.7268194 0.7915590 0.8675422 0.9063975 0.9588805 #>  [959,] 0.67409459 0.6880445 0.7016013 0.7329904 0.7502723 0.7739079 0.8061296 #>  [960,] 0.54814208 0.6091778 0.6993742 0.8709436 0.9175888 0.9410143 0.9760792 #>  [961,] 0.61848225 0.6782814 0.7099386 1.1398743 1.1777807 1.1995849 1.2348910 #>  [962,] 0.52359172 0.5358363 0.6920321 0.7085985 0.7377215 0.7585057 0.7651058 #>  [963,] 1.06277047 1.1260746 1.1936168 1.2638713 1.2853860 1.3249318 1.3378502 #>  [964,] 0.25047378 0.3479067 0.4283172 0.5301280 0.6054574 0.6109480 0.6610838 #>  [965,] 0.77738239 0.8494731 0.8968886 0.9469533 1.0247531 1.1085858 1.1191322 #>  [966,] 0.49092309 0.5022584 0.5026828 0.5393783 0.5514961 0.5759175 0.5908266 #>  [967,] 0.72503230 0.7702199 0.8924804 1.0538151 1.1131288 1.1333423 1.1777887 #>  [968,] 0.24496419 0.4283275 0.4461422 0.5323167 0.5495764 0.6266605 0.6407494 #>  [969,] 0.27650947 0.3445017 0.3662990 0.5056297 0.6071144 0.6263233 0.6287773 #>  [970,] 0.64521864 0.6686932 0.7488926 0.7681975 0.7788321 0.8075784 0.8239966 #>  [971,] 0.34672976 0.3584247 0.3747279 0.4041139 0.4420457 0.4550343 0.4680281 #>  [972,] 0.47277273 0.5253866 0.5840304 0.6115957 0.6301331 0.7303984 0.9231540 #>  [973,] 0.30987981 0.3798530 0.5132923 0.5740381 0.6357470 0.6416562 0.6472052 #>  [974,] 0.04571425 0.1638005 0.6199562 0.6226925 0.6241812 0.6673903 0.7017077 #>  [975,] 0.48355587 0.4923469 0.5119117 0.5661663 0.5717689 0.5805242 0.5908313 #>  [976,] 0.55573813 0.6469737 0.6570768 0.7187655 0.7773769 0.7903702 0.8196807 #>  [977,] 0.27398806 0.5100356 0.5311039 0.5383120 0.5392838 0.5487300 0.5635034 #>  [978,] 0.25116100 0.3078883 0.4936176 0.6241055 0.6535506 0.6986643 0.7181729 #>  [979,] 0.47329990 0.4992998 0.6494159 0.7541158 0.7612812 0.8519282 0.8551544 #>  [980,] 0.48513640 0.5993928 0.6062796 0.6736024 0.7064259 0.7280176 0.8008779 #>  [981,] 0.45887731 0.5242730 0.5519846 0.5551970 0.5918923 0.6429222 0.6594381 #>  [982,] 0.52796467 0.5338774 0.5657078 0.5797049 0.5843638 0.5875655 0.5894621 #>  [983,] 0.54746541 0.5909408 0.6961813 0.7412329 0.7472599 0.7504957 0.7944705 #>  [984,] 0.28195106 0.3164522 0.3210369 0.3754941 0.5223478 0.5384073 0.5591944 #>  [985,] 0.23591415 0.2532084 0.3297798 0.3814125 0.4413859 0.4499021 0.4536038 #>  [986,] 0.50090309 0.9526236 1.0334418 1.0794476 1.0824742 1.1038078 1.1204272 #>  [987,] 0.28653776 0.3566836 0.3629880 0.4809510 0.4816312 0.5151082 0.5611178 #>  [988,] 0.77581207 0.7931409 0.9141468 0.9670776 1.0656669 1.1193141 1.1615661 #>  [989,] 0.93793109 1.0271321 1.0574448 1.0774489 1.1051745 1.1380550 1.1643148 #>  [990,] 0.34812376 0.3585585 0.4022042 0.4146677 0.4331411 0.4669933 0.4675819 #>  [991,] 0.35224437 0.3814051 0.3892715 0.4845049 0.5919142 0.6135315 0.6171973 #>  [992,] 1.24586777 1.3944233 1.4846545 1.5808338 1.6212907 1.6613581 1.6938058 #>  [993,] 0.39436399 0.6913283 0.7801777 0.8068865 0.8135194 0.8307041 0.8426542 #>  [994,] 0.73764313 0.7715999 0.7945657 0.8151593 0.8153415 0.8190690 0.8532739 #>  [995,] 0.21641412 0.3779236 0.4130238 0.4691707 0.4746861 0.5062163 0.5338726 #>  [996,] 0.64728556 0.6699454 0.7015199 0.7180003 0.7310787 0.7313789 0.7580091 #>  [997,] 0.31554286 0.5232783 0.5323514 0.5557381 0.5960612 0.6440486 0.6721305 #>  [998,] 0.29016920 0.5147361 0.6556227 0.8479906 0.8619967 0.8839856 0.9197508 #>  [999,] 0.33735050 0.5413916 0.5694489 0.6149492 0.6417167 0.6542069 0.7061355 #> [1000,] 0.40575425 0.6032022 0.8218871 0.9085511 0.9759297 0.9844386 0.9986676 #>              [,8]      [,9]     [,10] #>    [1,] 0.5241663 0.5275434 0.5360822 #>    [2,] 0.9944096 1.0065311 1.0104809 #>    [3,] 0.8675129 0.8838011 0.8888405 #>    [4,] 0.6811789 0.6853269 0.6989075 #>    [5,] 0.6662341 0.6967823 0.6992277 #>    [6,] 0.9107794 0.9302870 0.9542743 #>    [7,] 0.8560778 0.8915478 0.9106450 #>    [8,] 0.5603123 0.5895567 0.5989974 #>    [9,] 0.6915624 0.7014546 0.7539542 #>   [10,] 1.8461227 1.9268436 2.0020791 #>   [11,] 0.4728462 0.4791625 0.5174249 #>   [12,] 0.6391701 0.6428141 0.6521051 #>   [13,] 0.7484099 0.8250402 0.8269377 #>   [14,] 0.7748407 0.7980401 0.8388701 #>   [15,] 0.7917242 0.9028182 0.9428785 #>   [16,] 0.5752572 0.6092614 0.6170643 #>   [17,] 1.1157133 1.1325309 1.2260343 #>   [18,] 1.1738871 1.2047626 1.2493623 #>   [19,] 0.8101929 0.8153742 0.8666391 #>   [20,] 0.8942354 0.9170867 0.9406070 #>   [21,] 0.7679592 0.8315415 0.8362564 #>   [22,] 0.5952582 0.6054061 0.6283923 #>   [23,] 1.1035421 1.1079305 1.1206534 #>   [24,] 0.8386254 0.8934898 0.9070219 #>   [25,] 0.6499356 0.6717027 0.7609222 #>   [26,] 0.5153039 0.5173599 0.5214291 #>   [27,] 0.6851434 0.6874573 0.6959969 #>   [28,] 1.3380919 1.3685917 1.3697850 #>   [29,] 1.1426518 1.1731199 1.1800791 #>   [30,] 1.4691623 1.5219124 1.7067805 #>   [31,] 0.8504900 0.9212384 0.9514088 #>   [32,] 0.7604742 0.7704643 0.7825171 #>   [33,] 0.6463534 0.6484110 0.6524090 #>   [34,] 0.6053774 0.7260781 0.7403866 #>   [35,] 0.6213834 0.6250477 0.6361665 #>   [36,] 0.5544400 0.5898331 0.5905132 #>   [37,] 0.6442973 0.6486671 0.7239793 #>   [38,] 0.6666285 0.7418691 0.7655477 #>   [39,] 0.8753341 0.8833605 0.9101185 #>   [40,] 1.4608583 1.5344623 1.5489671 #>   [41,] 0.6072154 0.6273350 0.6327310 #>   [42,] 0.8356845 0.8746572 0.8938564 #>   [43,] 1.0088760 1.0565048 1.0860978 #>   [44,] 0.6087900 0.6472138 0.6707670 #>   [45,] 0.8745540 0.8862446 0.9694777 #>   [46,] 0.7720874 0.7777702 0.7953284 #>   [47,] 0.6180592 0.6535506 0.6675316 #>   [48,] 1.8318321 1.8865322 1.8953714 #>   [49,] 0.5204194 0.5359369 0.5701681 #>   [50,] 0.9284177 0.9562345 1.0131119 #>   [51,] 0.9308193 0.9890875 1.0622841 #>   [52,] 0.7938939 0.7954979 0.8376569 #>   [53,] 0.7818773 0.8034636 0.8228067 #>   [54,] 0.6509929 0.6661552 0.6800678 #>   [55,] 2.0538726 2.1317541 2.1414888 #>   [56,] 0.9540538 0.9562187 0.9990495 #>   [57,] 0.4782588 0.5191283 0.5612241 #>   [58,] 0.7394473 0.7430269 0.7517998 #>   [59,] 0.7281587 0.7302936 0.7458303 #>   [60,] 0.5606033 0.5638438 0.5943358 #>   [61,] 0.5223397 0.5431227 0.6076339 #>   [62,] 0.9715114 0.9817339 0.9929854 #>   [63,] 0.7830346 0.8995928 0.9058508 #>   [64,] 1.0809760 1.0872358 1.0980094 #>   [65,] 1.2707198 1.2747750 1.2792837 #>   [66,] 2.3322801 2.3509798 2.3775714 #>   [67,] 0.8227067 0.8658350 0.8675762 #>   [68,] 0.8862232 0.9086438 0.9326323 #>   [69,] 0.5532055 0.5832857 0.5958279 #>   [70,] 0.9503841 1.0499936 1.0564432 #>   [71,] 0.5842304 0.5898331 0.5949584 #>   [72,] 0.5167610 0.5365861 0.5520164 #>   [73,] 0.7370662 0.7416555 0.7786343 #>   [74,] 0.7788971 0.8195319 0.8375075 #>   [75,] 0.6830116 0.7260781 0.8030690 #>   [76,] 0.6410033 0.6486726 0.6507399 #>   [77,] 1.0849191 1.1570917 1.1799575 #>   [78,] 0.6186034 0.6986666 0.7491355 #>   [79,] 0.8936649 0.9049592 0.9888519 #>   [80,] 1.4094389 1.4309318 1.4483944 #>   [81,] 0.6741293 0.6855690 0.6888587 #>   [82,] 0.5253988 0.5340103 0.5484523 #>   [83,] 0.5937230 0.6340997 0.7173358 #>   [84,] 0.7419906 0.7479412 0.7693826 #>   [85,] 1.7109535 1.7109655 1.7197670 #>   [86,] 1.1738157 1.2645900 1.2719358 #>   [87,] 0.9320427 1.0310829 1.0392322 #>   [88,] 0.6650779 0.6908140 0.7042517 #>   [89,] 1.0861177 1.0938254 1.1762737 #>   [90,] 0.5788120 0.5816343 0.5898901 #>   [91,] 0.6261939 0.6658956 0.6693295 #>   [92,] 0.7786373 0.7913647 0.8038752 #>   [93,] 1.6546359 1.7268839 1.7471799 #>   [94,] 0.9025041 0.9224546 0.9475282 #>   [95,] 0.9144791 0.9172980 0.9524249 #>   [96,] 0.5697815 0.5882875 0.5989974 #>   [97,] 0.7248038 0.7800295 0.8306923 #>   [98,] 0.6654831 0.6700051 0.6742533 #>   [99,] 0.7663296 0.8263312 0.8632101 #>  [100,] 0.9644895 1.0009346 1.0388985 #>  [101,] 0.6912188 0.7383045 0.7629608 #>  [102,] 0.5375487 0.5490596 0.5728414 #>  [103,] 1.1437848 1.1482615 1.1538701 #>  [104,] 0.9665359 0.9722721 0.9805070 #>  [105,] 0.6741293 0.6791943 0.7312454 #>  [106,] 0.8549446 0.8910378 0.9114133 #>  [107,] 0.6107082 0.6669981 0.7056629 #>  [108,] 0.9314380 0.9600419 0.9749777 #>  [109,] 0.8040092 0.8153742 0.8634589 #>  [110,] 0.9203174 0.9354275 0.9366638 #>  [111,] 0.6461247 0.6492355 0.6591790 #>  [112,] 0.7391359 0.7436581 0.7580091 #>  [113,] 1.3924626 1.4145611 1.4631492 #>  [114,] 0.8227168 0.8303572 0.8494294 #>  [115,] 1.3866131 1.5108230 1.7837379 #>  [116,] 0.6703649 0.6785736 0.6903977 #>  [117,] 1.0988460 1.1038295 1.1188710 #>  [118,] 0.7722804 0.7845305 0.7907006 #>  [119,] 1.4531171 1.4585338 1.4593984 #>  [120,] 1.0994014 1.1223253 1.1257561 #>  [121,] 1.4352439 1.4813850 1.5051005 #>  [122,] 0.8658350 0.8862446 0.9119278 #>  [123,] 1.1510393 1.1605035 1.1642687 #>  [124,] 0.7156121 0.7236712 0.7613445 #>  [125,] 0.7670257 0.7769196 0.7845230 #>  [126,] 0.4527250 0.4725805 0.5035463 #>  [127,] 1.2964606 1.3230151 1.3353740 #>  [128,] 0.7555328 0.7636798 0.8587554 #>  [129,] 0.9467496 1.0087915 1.0191723 #>  [130,] 0.8155540 0.8199929 0.8459243 #>  [131,] 0.7132001 0.7181461 0.7187655 #>  [132,] 0.5326797 0.5362227 0.5503241 #>  [133,] 1.4288741 1.4541880 1.4798004 #>  [134,] 1.0452232 1.0751312 1.0772496 #>  [135,] 0.7684911 0.8075786 0.8132140 #>  [136,] 1.1191224 1.1508822 1.1602510 #>  [137,] 0.5349382 0.5484924 0.5504738 #>  [138,] 0.5727305 0.5819549 0.6056152 #>  [139,] 0.6650779 0.6735275 0.6765216 #>  [140,] 0.7577666 0.7723086 0.7822906 #>  [141,] 0.5510847 0.5511329 0.5571369 #>  [142,] 0.6370872 0.6501220 0.6631728 #>  [143,] 0.7603446 0.7637158 0.7690662 #>  [144,] 1.5892793 1.5974954 1.6027663 #>  [145,] 0.6775295 0.6960622 0.7113796 #>  [146,] 0.8754039 0.8952966 0.9070219 #>  [147,] 0.5381647 0.5524687 0.5632462 #>  [148,] 1.7913834 1.7958706 1.8233682 #>  [149,] 0.5718878 0.6198611 0.6295082 #>  [150,] 1.0618186 1.1023741 1.1164764 #>  [151,] 0.7322811 0.7561738 0.7734669 #>  [152,] 0.7181750 0.7453587 0.7634279 #>  [153,] 0.8215973 0.8383924 0.8390905 #>  [154,] 0.9190296 0.9543013 0.9765287 #>  [155,] 0.8030532 0.8091895 0.8607360 #>  [156,] 0.6188865 0.6237299 0.6313528 #>  [157,] 0.6152107 0.6285139 0.6384929 #>  [158,] 0.5579795 0.5851218 0.5929161 #>  [159,] 1.0544737 1.0765061 1.1460625 #>  [160,] 0.9992330 1.0226837 1.0620889 #>  [161,] 0.8033828 0.8086648 0.8097833 #>  [162,] 0.6728959 0.7271708 0.7428456 #>  [163,] 1.2688936 1.2877872 1.2910252 #>  [164,] 1.1081842 1.1499937 1.1910182 #>  [165,] 0.7270978 0.7485665 0.7800670 #>  [166,] 0.8804208 0.9081276 0.9867894 #>  [167,] 0.8850784 0.9512456 0.9658613 #>  [168,] 0.8221614 0.8270234 0.8313609 #>  [169,] 0.6673903 0.6753057 0.6916937 #>  [170,] 0.8287754 0.8334650 0.8663145 #>  [171,] 0.4784632 0.4977180 0.5060485 #>  [172,] 0.7295211 0.7620071 0.7900074 #>  [173,] 0.8028637 0.8621327 0.8870274 #>  [174,] 1.0441893 1.0889704 1.1028283 #>  [175,] 0.5236046 0.5259327 0.5491069 #>  [176,] 0.8188164 0.8307215 0.8938986 #>  [177,] 1.1377014 1.1704993 1.2269578 #>  [178,] 0.7666983 0.7808829 0.7863435 #>  [179,] 0.5781081 0.5864768 0.6119961 #>  [180,] 0.6684257 0.6793333 0.6804983 #>  [181,] 0.6226523 0.6238276 0.6898764 #>  [182,] 0.5550434 0.5717689 0.5847957 #>  [183,] 0.8940677 0.9225411 0.9311501 #>  [184,] 0.7682990 0.8138713 0.8226582 #>  [185,] 0.7322811 0.7508194 0.7520306 #>  [186,] 0.8890571 0.8981349 0.9084243 #>  [187,] 0.5196713 0.5282714 0.5373571 #>  [188,] 0.6518870 0.6688299 0.6888406 #>  [189,] 0.5439155 0.5835190 0.5905297 #>  [190,] 0.8662879 0.9156486 0.9209012 #>  [191,] 0.9680457 0.9818804 1.0984766 #>  [192,] 0.6100562 0.6574053 0.6977313 #>  [193,] 0.6299190 0.6533712 0.6996170 #>  [194,] 1.3598875 1.3820306 1.3876909 #>  [195,] 0.9007631 0.9463040 0.9534350 #>  [196,] 1.3924251 1.4172594 1.4256736 #>  [197,] 0.8098582 0.8446494 0.8494731 #>  [198,] 1.6432114 1.6801941 1.7616549 #>  [199,] 0.4233398 0.4351472 0.4520954 #>  [200,] 0.7301079 0.7462538 0.7569860 #>  [201,] 0.8280891 0.8304855 0.8456212 #>  [202,] 0.7643124 0.7644988 0.7702338 #>  [203,] 0.4728409 0.5365861 0.5993978 #>  [204,] 1.0120603 1.0464350 1.0913834 #>  [205,] 0.5698755 0.6007470 0.6253263 #>  [206,] 0.7612812 0.7967973 0.8035596 #>  [207,] 0.6218870 0.6411571 0.6464196 #>  [208,] 1.0938698 1.1165971 1.1204272 #>  [209,] 0.5823686 0.5873653 0.5945813 #>  [210,] 0.8088331 0.8142593 0.8242787 #>  [211,] 0.5947140 0.6052324 0.6247480 #>  [212,] 1.1738184 1.1884479 1.1989771 #>  [213,] 0.6620367 0.6853269 0.6878145 #>  [214,] 0.6931687 0.7049160 0.7166334 #>  [215,] 0.5289547 0.5335525 0.5415440 #>  [216,] 0.4823674 0.5035156 0.5272150 #>  [217,] 0.8930139 0.8997597 0.9560215 #>  [218,] 0.6843452 0.6906729 0.7133703 #>  [219,] 0.7437423 0.7586807 0.7829158 #>  [220,] 0.6276349 0.6815746 0.6918933 #>  [221,] 0.7359306 0.7514510 0.7567254 #>  [222,] 0.7406754 0.7574691 0.7644988 #>  [223,] 1.1981253 1.2137760 1.2194959 #>  [224,] 1.8582750 1.8589938 1.8700240 #>  [225,] 0.7660510 0.7821113 0.7864713 #>  [226,] 0.7906955 0.7971930 0.7984571 #>  [227,] 0.5453156 0.5765516 0.5770612 #>  [228,] 0.7225098 0.7711759 0.7814596 #>  [229,] 0.7605628 0.7644280 0.7909906 #>  [230,] 0.9904073 0.9913285 1.0032526 #>  [231,] 0.9773544 0.9799815 0.9822186 #>  [232,] 0.5894910 0.5921933 0.5933701 #>  [233,] 0.5213464 0.5367433 0.5384073 #>  [234,] 0.8691090 0.8714451 0.9227064 #>  [235,] 0.6380638 0.6991772 0.7067346 #>  [236,] 0.6803894 0.6830390 0.6978630 #>  [237,] 0.7636190 0.7771513 0.7893205 #>  [238,] 0.8048265 0.8090614 0.8153849 #>  [239,] 0.8843634 0.8892762 0.9204034 #>  [240,] 1.5516770 1.5633564 1.6086422 #>  [241,] 0.6107934 0.6295825 0.6446328 #>  [242,] 0.9927634 1.0604338 1.0605102 #>  [243,] 1.0734164 1.0753639 1.1013512 #>  [244,] 0.7495135 0.8197502 0.8532896 #>  [245,] 0.5487519 0.5511725 0.5819298 #>  [246,] 0.6637663 0.6931687 0.7309187 #>  [247,] 1.0330657 1.0978647 1.0988272 #>  [248,] 0.6736959 0.6843156 0.7126224 #>  [249,] 0.9634691 0.9727902 1.0193162 #>  [250,] 0.4853105 0.4872834 0.5387016 #>  [251,] 0.6220457 0.6250400 0.6301557 #>  [252,] 0.6021441 0.6235238 0.6635223 #>  [253,] 0.6848305 0.6891822 0.6906879 #>  [254,] 0.5517512 0.5670954 0.5741350 #>  [255,] 0.8150182 0.9002899 0.9213481 #>  [256,] 0.7483985 0.7565116 0.8372804 #>  [257,] 0.8845291 0.9387805 0.9504426 #>  [258,] 0.6459324 0.6603350 0.6802833 #>  [259,] 0.5270270 0.5350110 0.6002058 #>  [260,] 1.6175442 1.6479599 1.6647777 #>  [261,] 0.6276901 0.6905919 0.6907278 #>  [262,] 0.7909053 0.8032211 0.8341997 #>  [263,] 0.6433826 0.6707151 0.6963355 #>  [264,] 0.7604409 0.7891073 0.7984571 #>  [265,] 0.8040342 0.8260969 0.8602720 #>  [266,] 0.9635402 0.9865430 0.9878194 #>  [267,] 0.7629501 0.7774543 0.7960540 #>  [268,] 1.0699081 1.0795759 1.0825100 #>  [269,] 0.5830881 0.5921651 0.5989667 #>  [270,] 1.0060865 1.0746375 1.0815351 #>  [271,] 1.0611122 1.1365183 1.2924400 #>  [272,] 0.7044361 0.7118987 0.7846101 #>  [273,] 1.0508621 1.0680446 1.1125986 #>  [274,] 0.8242227 0.8513719 0.8658119 #>  [275,] 0.5397702 0.5497424 0.5574720 #>  [276,] 1.0576719 1.1390817 1.1773490 #>  [277,] 0.5425838 0.5619022 0.5933854 #>  [278,] 0.5464446 0.5643170 0.5823686 #>  [279,] 1.4776904 1.4893667 1.6189698 #>  [280,] 0.6315985 0.6565097 0.6600875 #>  [281,] 0.6691838 0.7122396 0.7267462 #>  [282,] 0.8707372 0.8835613 0.9032858 #>  [283,] 0.5962707 0.5968502 0.6012320 #>  [284,] 0.9141609 0.9224547 0.9692338 #>  [285,] 0.6512225 0.7013682 0.7071312 #>  [286,] 1.0129625 1.0551798 1.0697862 #>  [287,] 0.7433781 0.7450708 0.7981849 #>  [288,] 0.8816231 0.8979458 0.9167455 #>  [289,] 0.6525004 0.7274702 0.7623799 #>  [290,] 1.1570569 1.1624001 1.1777887 #>  [291,] 0.6535996 0.6753436 0.6893538 #>  [292,] 0.7083004 0.7372051 0.7661598 #>  [293,] 0.7674898 0.8254234 0.8746039 #>  [294,] 0.6094846 0.6147029 0.6342477 #>  [295,] 0.7584290 0.7764967 0.8232042 #>  [296,] 0.6220457 0.6358293 0.6460050 #>  [297,] 0.6487529 0.6658956 0.6859822 #>  [298,] 0.9952511 0.9981488 1.0012794 #>  [299,] 0.6888406 0.7575577 0.7807727 #>  [300,] 0.7697777 0.7802768 0.7846101 #>  [301,] 0.6090910 0.6233790 0.6289061 #>  [302,] 0.5476523 0.5767624 0.5874684 #>  [303,] 1.1927898 1.2393642 1.2596086 #>  [304,] 0.5741350 0.5843822 0.6039370 #>  [305,] 0.8725756 0.8761842 0.9870775 #>  [306,] 1.1886257 1.2384301 1.2404036 #>  [307,] 0.7545410 0.7716558 0.7993163 #>  [308,] 0.8993827 0.9133287 0.9512006 #>  [309,] 0.7741098 0.7960540 0.8316466 #>  [310,] 0.9532749 0.9818804 0.9937513 #>  [311,] 0.8261331 0.9035995 0.9048643 #>  [312,] 0.8623926 0.8633956 0.9058508 #>  [313,] 1.2365669 1.2507923 1.2581840 #>  [314,] 0.7196987 0.7263979 0.7353692 #>  [315,] 0.8270969 0.8577768 0.8802109 #>  [316,] 1.0396816 1.1702557 1.3068338 #>  [317,] 1.2876194 1.2890824 1.2917117 #>  [318,] 0.7287716 0.7434493 0.7504270 #>  [319,] 0.7759097 0.8835103 0.9400326 #>  [320,] 0.6529317 0.6535996 0.6641744 #>  [321,] 2.2046752 2.2883287 2.2891050 #>  [322,] 1.0929224 1.1042936 1.1130425 #>  [323,] 0.9196681 0.9259963 0.9380048 #>  [324,] 0.7954979 0.8009953 0.8079089 #>  [325,] 0.5908313 0.6034597 0.6055667 #>  [326,] 0.5466916 0.5606437 0.5630821 #>  [327,] 0.9511976 0.9544794 0.9598556 #>  [328,] 0.7720177 0.8427284 0.8857940 #>  [329,] 0.6605130 0.6784563 0.6827301 #>  [330,] 0.9515816 0.9521452 0.9786367 #>  [331,] 0.6610789 0.6682442 0.6785809 #>  [332,] 0.9024810 0.9158734 0.9696024 #>  [333,] 0.8709436 0.8988740 0.9574391 #>  [334,] 0.8633021 0.8675859 0.8802950 #>  [335,] 0.8426035 0.8576801 0.8656084 #>  [336,] 0.7994687 0.8032544 0.8400713 #>  [337,] 0.5477920 0.6211374 0.6288471 #>  [338,] 0.5490596 0.5512090 0.5557181 #>  [339,] 0.8863414 0.9149011 0.9245183 #>  [340,] 0.5851902 0.6142115 0.6188756 #>  [341,] 0.4388974 0.4755345 0.5050554 #>  [342,] 0.9426328 0.9629206 1.0071405 #>  [343,] 0.9035131 0.9165653 0.9632095 #>  [344,] 1.5059148 1.5488654 1.6104132 #>  [345,] 0.7236259 0.7390550 0.7693271 #>  [346,] 0.6658869 0.6702071 0.6833914 #>  [347,] 0.6053774 0.6087139 0.6907278 #>  [348,] 0.8354676 0.8420912 0.8477143 #>  [349,] 0.7040721 0.7223338 0.7236977 #>  [350,] 1.0389576 1.1044896 1.1322917 #>  [351,] 0.5747082 0.5894348 0.6130390 #>  [352,] 1.1133454 1.1404421 1.1446339 #>  [353,] 0.5571369 0.5697815 0.5725576 #>  [354,] 0.7912255 0.8132140 0.8198499 #>  [355,] 0.7012525 0.7316215 0.7814596 #>  [356,] 0.5065806 0.5202146 0.5616851 #>  [357,] 1.0883645 1.1108617 1.1506142 #>  [358,] 0.8319254 0.8385719 0.8843634 #>  [359,] 0.9569825 0.9927634 1.0129071 #>  [360,] 0.7766936 0.8323824 0.8698635 #>  [361,] 0.9773899 1.0378372 1.0459183 #>  [362,] 0.8287203 0.8833319 0.8888685 #>  [363,] 0.6770344 0.7064431 0.7251633 #>  [364,] 0.6357345 0.6486692 0.6546303 #>  [365,] 1.2041491 1.2064484 1.2064980 #>  [366,] 0.8057980 0.8151593 0.8760055 #>  [367,] 0.8344953 0.8372496 0.9261674 #>  [368,] 0.6463944 0.6639979 0.6799286 #>  [369,] 0.4825787 0.4959291 0.5045053 #>  [370,] 0.9010296 0.9375211 0.9536526 #>  [371,] 0.6571278 0.6664223 0.6824648 #>  [372,] 0.8258902 0.8345804 0.8518768 #>  [373,] 0.5075377 0.5226248 0.5554289 #>  [374,] 0.7899087 0.8323980 0.8674109 #>  [375,] 0.6741648 0.7214314 0.7285001 #>  [376,] 0.9201825 0.9208788 1.0063870 #>  [377,] 0.8642754 0.8915478 0.9157344 #>  [378,] 0.8933578 0.9278102 0.9309171 #>  [379,] 1.2417422 1.3116953 1.3340592 #>  [380,] 0.6111144 0.6754760 0.6771073 #>  [381,] 1.6099989 1.6130870 1.6317790 #>  [382,] 0.8189620 0.8296234 0.8481232 #>  [383,] 0.6260967 0.6353863 0.6404342 #>  [384,] 0.8061316 0.8456496 0.8602720 #>  [385,] 1.0455255 1.0491330 1.1277168 #>  [386,] 0.7328742 0.7337955 0.7596948 #>  [387,] 1.4650276 1.5383971 1.5644270 #>  [388,] 1.3382509 1.3781026 1.3838864 #>  [389,] 0.9157384 0.9437850 0.9446861 #>  [390,] 1.2651158 1.2697303 1.2746075 #>  [391,] 0.6388887 0.6607412 0.6726971 #>  [392,] 0.7403898 0.7414683 0.7589265 #>  [393,] 0.4812936 0.4872777 0.5038522 #>  [394,] 0.5914201 0.6119961 0.6199128 #>  [395,] 0.6579719 0.6615496 0.6851308 #>  [396,] 1.5937920 1.6238089 1.6440818 #>  [397,] 0.7460704 0.7517998 0.7527882 #>  [398,] 0.7940036 0.8047607 0.8513719 #>  [399,] 0.7570359 0.7756130 0.7922161 #>  [400,] 0.9854207 0.9895429 0.9998149 #>  [401,] 0.5167610 0.5465261 0.5868285 #>  [402,] 0.7846508 0.7937955 0.8148436 #>  [403,] 0.7268873 0.7280657 0.7525404 #>  [404,] 0.6330107 0.6661852 0.6953608 #>  [405,] 1.0971362 1.1152260 1.1162727 #>  [406,] 0.7546876 0.7723689 0.7854097 #>  [407,] 0.6758513 0.6867132 0.6969409 #>  [408,] 1.7792452 1.7871648 1.8003067 #>  [409,] 0.5467686 0.5619022 0.5630662 #>  [410,] 0.6419283 0.6509186 0.6561719 #>  [411,] 0.4937993 0.5183078 0.5226248 #>  [412,] 0.8619195 0.9367791 0.9863891 #>  [413,] 0.8408119 0.9004344 0.9094613 #>  [414,] 1.4462442 1.5191790 1.5960111 #>  [415,] 1.0282234 1.0363106 1.0392569 #>  [416,] 1.1680569 1.1860284 1.2060463 #>  [417,] 0.5396879 0.5544400 0.5652803 #>  [418,] 0.9826264 0.9990696 1.0327941 #>  [419,] 0.6828962 0.6882290 0.7406037 #>  [420,] 1.0423711 1.0708421 1.1475057 #>  [421,] 1.4560769 1.5086892 1.5410421 #>  [422,] 0.9122388 0.9175600 0.9180993 #>  [423,] 0.5535543 0.5795233 0.5888208 #>  [424,] 0.7349221 0.7355700 0.7601878 #>  [425,] 0.9331486 0.9482927 0.9510739 #>  [426,] 0.6506076 0.6518870 0.6990980 #>  [427,] 0.7976090 0.7984942 0.8129376 #>  [428,] 0.5783562 0.6216296 0.6387553 #>  [429,] 0.5511725 0.5555723 0.5573616 #>  [430,] 0.5608975 0.5652803 0.6061488 #>  [431,] 0.7874333 0.8156381 0.8230401 #>  [432,] 1.6187895 1.6189698 1.6371106 #>  [433,] 0.6701464 0.6751116 0.6787133 #>  [434,] 0.8978107 0.9478926 0.9633113 #>  [435,] 1.0747769 1.1087100 1.1483377 #>  [436,] 0.5616851 0.5703322 0.6079108 #>  [437,] 0.7836395 0.7892911 0.8032808 #>  [438,] 0.6634779 0.6765694 0.6975883 #>  [439,] 0.8405354 0.8553806 0.9009329 #>  [440,] 0.6063722 0.6347703 0.6375859 #>  [441,] 0.6576066 0.6715552 0.6733660 #>  [442,] 0.8530085 0.9561014 0.9744592 #>  [443,] 0.8726903 0.8786906 0.9756503 #>  [444,] 0.7223175 0.7263434 0.7335611 #>  [445,] 0.6029121 0.6039898 0.6376112 #>  [446,] 0.7890140 0.8228067 0.8706563 #>  [447,] 1.0453324 1.0782110 1.1109331 #>  [448,] 0.8270851 0.8295519 0.8883850 #>  [449,] 0.7503351 0.7971930 0.8419694 #>  [450,] 0.5368071 0.5484523 0.5543499 #>  [451,] 0.5732995 0.5743266 0.6582784 #>  [452,] 0.5496058 0.5579422 0.5783092 #>  [453,] 0.6248886 0.6603403 0.6670747 #>  [454,] 0.5625470 0.5635034 0.5875655 #>  [455,] 0.5361889 0.5498735 0.6056152 #>  [456,] 0.8357403 0.8410829 0.8615553 #>  [457,] 0.8621679 0.8771359 0.8846594 #>  [458,] 0.6352698 0.6449340 0.6459000 #>  [459,] 0.5055227 0.5123667 0.5161241 #>  [460,] 0.6926893 0.8065382 0.8586630 #>  [461,] 0.7287877 0.7393771 0.8324578 #>  [462,] 0.7570359 0.7575838 0.7645066 #>  [463,] 0.9127416 0.9832071 1.0022952 #>  [464,] 0.6054268 0.6190611 0.6824939 #>  [465,] 0.5335152 0.5547946 0.5662010 #>  [466,] 0.9343411 0.9717732 1.0038182 #>  [467,] 0.8753140 0.8768371 0.9244624 #>  [468,] 0.5404543 0.5651288 0.5940705 #>  [469,] 0.7435963 0.7500401 0.7508839 #>  [470,] 0.7071603 0.7181251 0.7263124 #>  [471,] 0.5670688 0.5702484 0.5831934 #>  [472,] 0.7806069 0.8312343 0.8468565 #>  [473,] 0.8551404 0.8849186 0.8934898 #>  [474,] 1.4862609 1.4911178 1.5120394 #>  [475,] 0.6064133 0.6147124 0.6414329 #>  [476,] 0.7034330 0.7316215 0.7425011 #>  [477,] 0.8214430 0.8625929 0.8709809 #>  [478,] 0.9926344 1.0138954 1.0335632 #>  [479,] 0.9644825 1.0255381 1.0298959 #>  [480,] 0.6520738 0.6533701 0.6576646 #>  [481,] 0.9616430 0.9652375 1.0086554 #>  [482,] 1.5033166 1.5321330 1.5653016 #>  [483,] 0.8738917 0.8743604 0.8744900 #>  [484,] 0.7059814 0.7428899 0.7486855 #>  [485,] 0.7426668 0.7892034 0.8080300 #>  [486,] 0.5751205 0.5825610 0.6078724 #>  [487,] 1.4271493 1.4394133 1.4998741 #>  [488,] 0.5496275 0.5550662 0.5935637 #>  [489,] 0.6683978 0.6909007 0.6941921 #>  [490,] 0.5141717 0.5552976 0.5581979 #>  [491,] 0.9351346 0.9468954 0.9597483 #>  [492,] 1.0884489 1.1264002 1.1539471 #>  [493,] 0.9805070 0.9916806 1.0303063 #>  [494,] 0.7410254 0.7864178 0.8397235 #>  [495,] 1.2917359 1.3225956 1.3256244 #>  [496,] 0.7551055 0.8440635 0.8453919 #>  [497,] 0.8478186 0.8683310 0.8964971 #>  [498,] 0.7622656 0.7666983 0.7875852 #>  [499,] 1.2122231 1.2323913 1.2558674 #>  [500,] 1.1553683 1.1562468 1.1610898 #>  [501,] 0.6477206 0.6733660 0.6800716 #>  [502,] 1.0662827 1.0964439 1.1826947 #>  [503,] 0.9131738 0.9482927 0.9890875 #>  [504,] 0.5287112 0.5349382 0.5406950 #>  [505,] 0.7140120 0.7865174 0.8006153 #>  [506,] 0.6004168 0.6014804 0.6115729 #>  [507,] 0.9723882 0.9757120 0.9817033 #>  [508,] 0.5416037 0.6288471 0.6575199 #>  [509,] 1.1573021 1.1888363 1.1977335 #>  [510,] 0.9167299 0.9295345 0.9444466 #>  [511,] 0.5862375 0.6316765 0.6346401 #>  [512,] 0.5287112 0.5582370 0.5592805 #>  [513,] 0.7692819 0.7838987 0.7856236 #>  [514,] 1.2339313 1.2708054 1.3347680 #>  [515,] 0.9659354 0.9884898 1.0184635 #>  [516,] 1.0063013 1.0158858 1.0378929 #>  [517,] 0.4316846 0.4420457 0.4488865 #>  [518,] 0.7483985 0.8386657 0.8645267 #>  [519,] 1.2231208 1.2258288 1.2447385 #>  [520,] 0.5398494 0.5400601 0.5660738 #>  [521,] 0.6847187 0.6857364 0.6866129 #>  [522,] 0.7966122 0.8458085 0.8899879 #>  [523,] 0.6546303 0.6809118 0.6979180 #>  [524,] 1.1227989 1.1343176 1.1357573 #>  [525,] 0.8685616 0.9474149 0.9729045 #>  [526,] 0.7584128 0.7668494 0.8664414 #>  [527,] 0.6073812 0.6202167 0.7478557 #>  [528,] 1.5008600 1.5743373 1.5917114 #>  [529,] 0.5465261 0.5944086 0.6091098 #>  [530,] 0.5795317 0.5995565 0.6189846 #>  [531,] 1.1312419 1.1645240 1.1696267 #>  [532,] 1.0709256 1.1053015 1.1682558 #>  [533,] 0.8839088 0.9868970 0.9883690 #>  [534,] 0.8785422 0.8835613 0.8870765 #>  [535,] 1.4538106 1.4607659 1.5629357 #>  [536,] 1.0967143 1.1063837 1.1381811 #>  [537,] 0.5903709 0.5930483 0.6600875 #>  [538,] 0.5970103 0.6444005 0.6503866 #>  [539,] 0.6423011 0.6550609 0.6589192 #>  [540,] 0.8542343 0.8753341 0.8872211 #>  [541,] 0.6670747 0.7117432 0.7144222 #>  [542,] 0.6929203 0.6959969 0.7207744 #>  [543,] 0.7454272 0.7662273 0.7864713 #>  [544,] 1.3013286 1.3057057 1.3076114 #>  [545,] 0.8149552 0.8458970 0.8526290 #>  [546,] 0.8626471 0.9500185 0.9924999 #>  [547,] 0.8625060 0.8992361 0.9155426 #>  [548,] 0.8510165 0.8882874 0.8950968 #>  [549,] 0.7007837 0.7117042 0.7278251 #>  [550,] 1.4175486 1.4183603 1.4251084 #>  [551,] 0.7305995 0.7599129 0.7795140 #>  [552,] 0.7639702 0.7640405 0.8132027 #>  [553,] 0.6636443 0.6721305 0.6758197 #>  [554,] 0.8248848 0.8510496 0.8883368 #>  [555,] 0.6130390 0.6192922 0.6359053 #>  [556,] 0.5605822 0.5837628 0.5912283 #>  [557,] 0.7942786 0.8834579 0.9039262 #>  [558,] 0.8875944 0.8989040 0.9071558 #>  [559,] 0.6332539 0.6348530 0.6515251 #>  [560,] 0.6837828 0.6859822 0.8104168 #>  [561,] 0.9549994 1.0042840 1.0594239 #>  [562,] 1.3845418 1.4168116 1.4371099 #>  [563,] 0.7464719 0.7923107 0.8227350 #>  [564,] 1.0101164 1.0258472 1.0549060 #>  [565,] 0.6333903 0.6711419 0.6720859 #>  [566,] 0.6954478 0.6959877 0.6993548 #>  [567,] 0.8319038 0.8849126 0.9717576 #>  [568,] 0.7545691 0.7720177 0.7848520 #>  [569,] 0.5888208 0.5994616 0.6041024 #>  [570,] 0.9077130 0.9372087 0.9758108 #>  [571,] 1.0012794 1.0037721 1.0321857 #>  [572,] 1.3264270 1.3532990 1.3536483 #>  [573,] 0.9761622 1.0076944 1.0232481 #>  [574,] 0.6635223 0.6638090 0.7000336 #>  [575,] 0.9713259 0.9979206 1.0112694 #>  [576,] 0.8422932 0.8570954 0.8897100 #>  [577,] 0.6109260 0.6191619 0.6658626 #>  [578,] 0.5501456 0.5621668 0.5978607 #>  [579,] 0.5543499 0.5973498 0.6016111 #>  [580,] 0.7199717 0.7366440 0.8080158 #>  [581,] 1.2116146 1.2140974 1.2188193 #>  [582,] 1.1291929 1.1661646 1.1885185 #>  [583,] 1.2213021 1.2493855 1.2814437 #>  [584,] 1.1049774 1.1221333 1.1777784 #>  [585,] 0.8610990 0.9141609 0.9437487 #>  [586,] 0.5951965 0.6047097 0.6170643 #>  [587,] 0.5030827 0.5070540 0.5071378 #>  [588,] 0.8901724 0.9181058 0.9258692 #>  [589,] 1.0637614 1.0689244 1.1123846 #>  [590,] 1.2631508 1.2968904 1.3303887 #>  [591,] 0.5855434 0.5962707 0.5995747 #>  [592,] 0.8742159 0.8802603 0.8852509 #>  [593,] 0.4873019 0.5032413 0.5206082 #>  [594,] 0.5661688 0.6086897 0.6108013 #>  [595,] 1.3945674 1.4126398 1.4319402 #>  [596,] 0.9189542 0.9279540 0.9488897 #>  [597,] 0.7237203 0.7491355 0.7678326 #>  [598,] 0.7173358 0.7432223 0.7588257 #>  [599,] 0.9049789 0.9211509 0.9461370 #>  [600,] 0.6608820 0.6736959 0.7077907 #>  [601,] 0.6627058 0.6915680 0.7396769 #>  [602,] 0.6199128 0.6218870 0.6226807 #>  [603,] 0.7482699 0.8123860 0.8293967 #>  [604,] 0.8420912 0.8549691 0.8659730 #>  [605,] 0.5856348 0.6171973 0.6351219 #>  [606,] 0.9989445 1.0003386 1.0332768 #>  [607,] 0.7764967 0.8234866 0.8280891 #>  [608,] 1.0069627 1.0245008 1.0807630 #>  [609,] 1.2542851 1.2804368 1.2963717 #>  [610,] 0.5738458 0.5797049 0.5997129 #>  [611,] 0.6723270 0.7363090 0.7569860 #>  [612,] 0.7263979 0.9061079 0.9134057 #>  [613,] 0.8804708 0.8940233 0.9073722 #>  [614,] 1.0641077 1.1721255 1.1732212 #>  [615,] 0.7336747 0.8311605 0.8329012 #>  [616,] 0.8845616 0.9152447 0.9330664 #>  [617,] 0.7197067 0.7305962 0.7572252 #>  [618,] 0.8048265 0.8205040 0.8275558 #>  [619,] 0.4786698 0.4845958 0.5035667 #>  [620,] 0.8416545 0.8470399 0.8724603 #>  [621,] 0.6636443 0.6639348 0.6826683 #>  [622,] 1.0171585 1.0756057 1.1334514 #>  [623,] 0.6592357 0.6686443 0.7176732 #>  [624,] 0.9657491 1.0284618 1.0346627 #>  [625,] 0.5922208 0.5929161 0.5932781 #>  [626,] 0.7310683 0.7340320 0.7562826 #>  [627,] 0.6469143 0.6678411 0.6804983 #>  [628,] 0.7019460 0.7114233 0.7269498 #>  [629,] 0.4825787 0.5479253 0.5513528 #>  [630,] 1.3747536 1.3845418 1.4448941 #>  [631,] 0.7707528 0.8325942 0.8330455 #>  [632,] 0.7966206 0.8166106 0.8272706 #>  [633,] 0.9831734 1.0124672 1.0212720 #>  [634,] 1.3133835 1.3805684 1.3933321 #>  [635,] 0.7590510 0.7800626 0.7833223 #>  [636,] 0.7386397 0.7519194 0.7609222 #>  [637,] 0.7444125 0.8203769 0.8225556 #>  [638,] 0.9545943 0.9562345 0.9971691 #>  [639,] 1.0534279 1.0824595 1.1102820 #>  [640,] 1.2651980 1.2752177 1.3109886 #>  [641,] 0.5557181 0.5581979 0.5727305 #>  [642,] 1.3021498 1.3192696 1.3721778 #>  [643,] 1.4531171 1.5276118 1.5329399 #>  [644,] 1.0708421 1.0748476 1.0783535 #>  [645,] 0.7700234 0.8057168 0.8176896 #>  [646,] 1.5139554 1.5518862 1.5578423 #>  [647,] 0.5795233 0.5813884 0.5815678 #>  [648,] 0.5476523 0.5508378 0.5677213 #>  [649,] 1.0467517 1.0939052 1.2491191 #>  [650,] 0.8633761 0.8903403 0.9526236 #>  [651,] 1.2201146 1.3044105 1.3073908 #>  [652,] 1.0289498 1.0328940 1.0356397 #>  [653,] 0.4777062 0.4784632 0.4911316 #>  [654,] 1.1679600 1.1923046 1.2517695 #>  [655,] 0.6105010 0.6201376 0.6579719 #>  [656,] 0.5976575 0.5990855 0.6061488 #>  [657,] 0.4819766 0.4986801 0.5196713 #>  [658,] 1.0968150 1.0969776 1.1047642 #>  [659,] 1.8323839 1.8926526 1.9189571 #>  [660,] 0.5952646 0.6003499 0.6412719 #>  [661,] 0.8343053 0.9055534 0.9166336 #>  [662,] 1.3188902 1.3716140 1.4060086 #>  [663,] 1.6302109 1.6843124 1.7014641 #>  [664,] 0.8110540 0.8202503 0.8906375 #>  [665,] 1.0367778 1.0399326 1.0714557 #>  [666,] 0.5477253 0.5882823 0.6152161 #>  [667,] 0.7098156 0.7754344 0.7965556 #>  [668,] 1.0722786 1.0885365 1.1431275 #>  [669,] 0.5161241 0.5282714 0.5289547 #>  [670,] 0.9034018 0.9586867 0.9840508 #>  [671,] 0.5583854 0.5777105 0.6292168 #>  [672,] 1.0679075 1.0699619 1.1347569 #>  [673,] 0.7547993 0.8129116 0.8989040 #>  [674,] 0.6605130 0.6723129 0.6744821 #>  [675,] 0.5132644 0.5718878 0.6121575 #>  [676,] 0.8460913 0.8616450 0.8766653 #>  [677,] 0.7792140 0.8075786 0.8237526 #>  [678,] 1.1099135 1.1387725 1.1501422 #>  [679,] 1.1123048 1.1258676 1.1884289 #>  [680,] 0.6987655 0.7456504 0.7741416 #>  [681,] 1.8877751 1.8899521 1.9121167 #>  [682,] 0.4995545 0.5107703 0.5153333 #>  [683,] 0.9951674 1.0182434 1.0269506 #>  [684,] 0.9510074 0.9912093 1.0958731 #>  [685,] 0.8083250 0.8311796 0.8334161 #>  [686,] 0.8608270 0.9483362 0.9674320 #>  [687,] 0.8318897 0.8358679 0.8491155 #>  [688,] 0.5159121 0.5483013 0.5621668 #>  [689,] 1.3012095 1.3484801 1.3487068 #>  [690,] 0.8716231 0.8823310 0.8979190 #>  [691,] 0.5265994 0.5630662 0.5976575 #>  [692,] 0.9693197 0.9952684 1.0092732 #>  [693,] 1.2791379 1.2908043 1.3500314 #>  [694,] 1.1179855 1.1285806 1.1410913 #>  [695,] 0.7535237 0.7637158 0.7670433 #>  [696,] 0.7377643 0.7443909 0.7714686 #>  [697,] 0.9497753 0.9740650 0.9931739 #>  [698,] 0.5574720 0.5583854 0.5703322 #>  [699,] 0.5272763 0.5512090 0.5579593 #>  [700,] 0.8586630 0.9445941 0.9525024 #>  [701,] 1.3434557 1.3956631 1.4338671 #>  [702,] 0.6932999 0.6944836 0.7100252 #>  [703,] 0.7623799 0.8046874 0.8176350 #>  [704,] 0.6835585 0.7263434 0.7780270 #>  [705,] 1.6201091 1.6266563 1.6315307 #>  [706,] 0.8136844 0.8494294 0.8593813 #>  [707,] 1.5662930 1.5693790 1.6091057 #>  [708,] 0.7284562 0.7808237 0.7907952 #>  [709,] 0.5050554 0.5331431 0.5366474 #>  [710,] 1.2452726 1.3092434 1.3625695 #>  [711,] 1.3529202 1.4269374 1.4522989 #>  [712,] 0.4505540 0.4521080 0.4839346 #>  [713,] 0.5206082 0.5214291 0.5405683 #>  [714,] 1.5712786 1.6235231 1.6241564 #>  [715,] 0.7641955 0.7738460 0.7840936 #>  [716,] 1.7726807 1.8407622 1.9208866 #>  [717,] 1.4110078 1.4770353 1.5039358 #>  [718,] 0.6271479 0.6450471 0.6533712 #>  [719,] 1.1098270 1.1419785 1.1551731 #>  [720,] 0.7426513 0.7502433 0.7836395 #>  [721,] 0.8095940 0.8169034 0.8324889 #>  [722,] 1.1728257 1.1876185 1.1924875 #>  [723,] 1.6989985 1.7859029 1.8269751 #>  [724,] 0.7332348 0.7347986 0.7599129 #>  [725,] 0.8186713 0.8431948 0.8467166 #>  [726,] 0.6713443 0.6930419 0.7228226 #>  [727,] 1.0522732 1.0699081 1.0726923 #>  [728,] 0.7341052 0.7704882 0.7879158 #>  [729,] 0.6521051 0.6533243 0.6615754 #>  [730,] 0.6348530 0.6510867 0.6636104 #>  [731,] 0.8398572 0.8444404 0.8549446 #>  [732,] 0.9052303 0.9104148 0.9652533 #>  [733,] 0.7885825 0.8061506 0.8156314 #>  [734,] 0.6261884 0.6486692 0.6878145 #>  [735,] 0.9692714 1.0388954 1.0413995 #>  [736,] 1.0222940 1.0246647 1.0547047 #>  [737,] 0.6412310 0.6619364 0.6640161 #>  [738,] 0.6582818 0.7031754 0.7382830 #>  [739,] 0.6898168 0.7105832 0.7127419 #>  [740,] 0.5678005 0.5863404 0.5914201 #>  [741,] 1.1023741 1.1036106 1.1260186 #>  [742,] 1.0294404 1.1333364 1.1778713 #>  [743,] 0.7386667 0.7417907 0.7608051 #>  [744,] 0.9903962 0.9931809 1.0206295 #>  [745,] 0.8215176 0.8314899 0.8461843 #>  [746,] 1.4611889 1.4960998 1.5040784 #>  [747,] 1.0485753 1.0494310 1.0849498 #>  [748,] 1.1883989 1.1910852 1.2718658 #>  [749,] 0.7500401 0.8342035 0.8559628 #>  [750,] 0.5391334 0.5402652 0.5798598 #>  [751,] 1.4004928 1.4077843 1.4145611 #>  [752,] 0.9115526 0.9580430 0.9735826 #>  [753,] 1.0633566 1.0954741 1.1032102 #>  [754,] 0.8812172 0.9098366 0.9555650 #>  [755,] 0.5123667 0.5661294 0.5692530 #>  [756,] 0.7391316 0.7475575 0.7573071 #>  [757,] 0.5204194 0.5265024 0.5858982 #>  [758,] 0.8024360 0.8302526 0.8337806 #>  [759,] 0.7357784 0.7525911 0.7846846 #>  [760,] 0.7867734 0.7915479 0.8237437 #>  [761,] 0.7612949 0.7742052 0.7839209 #>  [762,] 0.4755345 0.4801095 0.5124791 #>  [763,] 0.6956373 0.6963828 0.6971501 #>  [764,] 0.6515875 0.6894658 0.7076297 #>  [765,] 0.5998546 0.6192258 0.6243999 #>  [766,] 0.8956216 0.8972576 0.9702808 #>  [767,] 0.5853646 0.5854562 0.6121834 #>  [768,] 0.5450619 0.5959670 0.6180814 #>  [769,] 0.7085985 0.7193032 0.7724441 #>  [770,] 1.4169447 1.4482292 1.4640749 #>  [771,] 0.5065810 0.5605172 0.5757330 #>  [772,] 1.5523353 1.6238716 1.6358352 #>  [773,] 0.7116933 0.7159525 0.7337539 #>  [774,] 0.6792841 0.6845281 0.6983006 #>  [775,] 0.8474787 0.8684437 0.8753140 #>  [776,] 0.5367453 0.5888738 0.5986212 #>  [777,] 0.7538177 0.7691235 0.7854232 #>  [778,] 0.9298963 0.9410535 0.9426357 #>  [779,] 0.7359592 0.7767838 0.7779128 #>  [780,] 0.7997577 0.8382415 0.8486354 #>  [781,] 0.8375812 0.8596417 0.8744140 #>  [782,] 0.9624973 1.0093593 1.0453388 #>  [783,] 1.1287726 1.1297096 1.1659020 #>  [784,] 0.6247307 0.6775295 0.7663272 #>  [785,] 1.2558704 1.2947803 1.3088111 #>  [786,] 0.6152939 0.6353863 0.6695967 #>  [787,] 1.1024069 1.1280145 1.1612117 #>  [788,] 0.5381211 0.5451077 0.5677213 #>  [789,] 1.0240417 1.0269419 1.0477927 #>  [790,] 1.0323433 1.0590987 1.0602132 #>  [791,] 0.7801777 0.7900007 0.9392979 #>  [792,] 0.7669425 0.7981849 0.7982342 #>  [793,] 0.6163299 0.6185467 0.6327913 #>  [794,] 0.8186713 0.8324293 0.8416181 #>  [795,] 0.6515251 0.6814709 0.7110985 #>  [796,] 0.6935284 0.6991920 0.7075190 #>  [797,] 0.6575086 0.7209059 0.7339598 #>  [798,] 1.0904820 1.1008841 1.1260186 #>  [799,] 0.5674126 0.5778647 0.6345712 #>  [800,] 1.0889129 1.1133644 1.1629375 #>  [801,] 2.1231839 2.1860526 2.1998939 #>  [802,] 0.7383542 0.7481791 0.7550738 #>  [803,] 0.8383424 0.8608165 0.8641824 #>  [804,] 0.7633302 0.7859967 0.8434855 #>  [805,] 1.1257561 1.1356645 1.1638551 #>  [806,] 1.7346694 1.7691258 1.7743119 #>  [807,] 0.4995545 0.5004592 0.5193565 #>  [808,] 0.9172032 0.9523291 0.9764551 #>  [809,] 1.1584307 1.1941647 1.2575877 #>  [810,] 0.7284562 0.7330067 0.7408759 #>  [811,] 1.1843255 1.2782332 1.3107432 #>  [812,] 0.5315497 0.5443782 0.5836977 #>  [813,] 0.7466194 0.7996659 0.8103537 #>  [814,] 0.7808829 0.8034636 0.8421474 #>  [815,] 0.7471899 0.7711383 0.7852269 #>  [816,] 0.8032544 0.8040092 0.8214033 #>  [817,] 0.9510516 0.9699549 0.9792162 #>  [818,] 1.0335562 1.0372652 1.0491330 #>  [819,] 0.6328759 0.6861322 0.7011115 #>  [820,] 0.4720551 0.5296363 0.5555264 #>  [821,] 0.6819498 0.6926893 0.6990663 #>  [822,] 0.9269503 0.9333370 0.9357962 #>  [823,] 0.5039825 0.5173599 0.5279270 #>  [824,] 0.6689645 0.6943928 0.7221430 #>  [825,] 0.6703935 0.7089186 0.7091669 #>  [826,] 0.7007837 0.7127419 0.7550778 #>  [827,] 0.7059336 0.7372678 0.7480572 #>  [828,] 0.9034018 0.9104148 0.9411165 #>  [829,] 0.8850676 0.8854259 0.9302726 #>  [830,] 1.5114107 1.5786993 1.6278089 #>  [831,] 0.6874729 0.7240411 0.7715859 #>  [832,] 0.7561520 0.7572252 0.7661326 #>  [833,] 0.8470083 0.8565939 0.9294144 #>  [834,] 0.8462186 0.8784217 0.8862194 #>  [835,] 0.7221430 0.7295333 0.7412781 #>  [836,] 0.9347948 0.9958348 1.0598804 #>  [837,] 0.4441183 0.5126569 0.5153333 #>  [838,] 0.6895259 0.6924723 0.7023303 #>  [839,] 0.8480734 0.8511371 0.8782873 #>  [840,] 0.7867734 0.7896772 0.8037995 #>  [841,] 0.8506020 0.9526403 0.9612175 #>  [842,] 0.5486267 0.5589546 0.6061991 #>  [843,] 0.6917115 0.7147023 0.7272667 #>  [844,] 0.7960516 0.8079089 0.8172667 #>  [845,] 0.7318638 0.7774543 0.8003298 #>  [846,] 0.6855690 0.7041064 0.7090832 #>  [847,] 0.5764175 0.6079189 0.6290889 #>  [848,] 2.0749406 2.0856943 2.1720363 #>  [849,] 0.7160291 0.7485409 0.7553586 #>  [850,] 1.2596108 1.2698013 1.2888516 #>  [851,] 0.6616307 0.6848281 0.6853088 #>  [852,] 0.8683618 0.8729598 0.8851883 #>  [853,] 0.9118847 0.9418947 0.9665359 #>  [854,] 0.6320229 0.6623628 0.7123701 #>  [855,] 1.1642687 1.1702557 1.1772549 #>  [856,] 0.6684812 0.7156121 0.7244898 #>  [857,] 0.9359941 0.9375211 0.9519876 #>  [858,] 0.6754073 0.7114949 0.7252524 #>  [859,] 0.6498500 0.6906729 0.7339253 #>  [860,] 1.1457602 1.1832289 1.2074022 #>  [861,] 0.7412781 0.7662269 0.7851720 #>  [862,] 0.4805044 0.5076157 0.5126569 #>  [863,] 0.7238569 0.7342961 0.7629608 #>  [864,] 0.9802832 1.0310429 1.0399326 #>  [865,] 0.6644266 0.6689645 0.6767999 #>  [866,] 0.9337187 0.9740263 1.0455255 #>  [867,] 0.7254243 0.7276343 0.7806069 #>  [868,] 0.9634992 1.0386796 1.0544626 #>  [869,] 0.5824853 0.6009324 0.6142154 #>  [870,] 0.7154247 0.7192687 0.7466932 #>  [871,] 0.7453587 0.7795073 0.7831500 #>  [872,] 0.7281757 0.7777702 0.8172181 #>  [873,] 1.1460913 1.1741128 1.1864078 #>  [874,] 1.0261459 1.0299885 1.0434633 #>  [875,] 0.7910624 0.8157635 0.8730134 #>  [876,] 0.7207744 0.7723689 0.7724336 #>  [877,] 0.8673313 0.8949123 0.8951913 #>  [878,] 1.0037013 1.0367952 1.0824595 #>  [879,] 1.0787910 1.0964439 1.1125645 #>  [880,] 0.6771311 0.6783905 0.6903090 #>  [881,] 1.1930187 1.1946866 1.2493623 #>  [882,] 0.8118854 0.8132027 0.8182185 #>  [883,] 0.8892980 0.9098366 0.9282013 #>  [884,] 0.6549553 0.6594381 0.6947443 #>  [885,] 0.9009273 0.9083289 0.9254392 #>  [886,] 1.1106389 1.1358120 1.1505633 #>  [887,] 1.0226837 1.0443015 1.0724506 #>  [888,] 0.7379389 0.7486631 0.8205738 #>  [889,] 0.8722673 0.8936599 0.9019537 #>  [890,] 0.5858818 0.6192258 0.6417460 #>  [891,] 1.0975460 1.1229904 1.1628165 #>  [892,] 0.7091968 0.7503367 0.7830365 #>  [893,] 0.7398307 0.7657043 0.7787570 #>  [894,] 0.5997225 0.6284624 0.6419214 #>  [895,] 0.6758197 0.6939432 0.7032033 #>  [896,] 0.6758513 0.7172772 0.7203846 #>  [897,] 1.2428030 1.2501507 1.2587446 #>  [898,] 0.8354676 0.8890325 0.9008484 #>  [899,] 0.8092542 0.8264634 0.8267756 #>  [900,] 0.7640405 0.8024027 0.8266338 #>  [901,] 0.7759821 0.7878226 0.8091186 #>  [902,] 0.8712024 0.8899289 0.9202519 #>  [903,] 0.9141468 0.9294154 0.9354275 #>  [904,] 0.7593904 0.7768916 0.7924151 #>  [905,] 1.1400141 1.1416512 1.1854668 #>  [906,] 0.9269737 0.9461370 0.9628480 #>  [907,] 0.6921495 0.7070232 0.7372458 #>  [908,] 1.0004341 1.0311939 1.0421579 #>  [909,] 0.5742818 0.5805242 0.6747003 #>  [910,] 0.5165174 0.5198491 0.5236046 #>  [911,] 0.6161736 0.6409509 0.6475472 #>  [912,] 0.6136669 0.6913104 0.6922783 #>  [913,] 0.9638907 0.9952285 1.0070706 #>  [914,] 0.6405774 0.6666285 0.6820169 #>  [915,] 0.8967049 0.9040565 0.9201937 #>  [916,] 0.6705599 0.6977468 0.6990177 #>  [917,] 0.6520738 0.7120939 0.7758581 #>  [918,] 1.1713373 1.1883989 1.2491611 #>  [919,] 0.9880163 1.0210333 1.0331978 #>  [920,] 0.8651633 0.8697261 0.8705774 #>  [921,] 0.8390607 0.8844862 0.9151085 #>  [922,] 0.8018932 0.8664917 0.8676431 #>  [923,] 0.6396289 0.6669635 0.7014315 #>  [924,] 0.7092211 0.7307548 0.7706011 #>  [925,] 1.0905591 1.1207652 1.1401608 #>  [926,] 0.6989075 0.8023436 0.8090740 #>  [927,] 0.6419283 0.6557175 0.6570375 #>  [928,] 0.6061991 0.6087139 0.6281235 #>  [929,] 1.4159552 1.4227676 1.4231930 #>  [930,] 1.3820916 1.3924251 1.4528209 #>  [931,] 0.8180957 0.8460302 0.8691629 #>  [932,] 0.7630534 0.7680926 0.7765950 #>  [933,] 0.5897401 0.6071144 0.6288513 #>  [934,] 0.7562356 0.7701033 0.7741417 #>  [935,] 0.6576066 0.6649276 0.6686443 #>  [936,] 0.6392104 0.6777887 0.7371515 #>  [937,] 1.2316653 1.2324163 1.2326388 #>  [938,] 0.7744435 0.8191419 0.8236599 #>  [939,] 0.7960606 0.8110540 0.8737002 #>  [940,] 0.6994460 0.7411298 0.7478557 #>  [941,] 0.7446818 0.7504072 0.7600579 #>  [942,] 0.6108013 0.6116753 0.6120157 #>  [943,] 0.7305962 0.7391237 0.7958461 #>  [944,] 0.9787824 0.9846187 0.9881773 #>  [945,] 0.9873798 1.0041559 1.0182434 #>  [946,] 0.5396879 0.5425838 0.5842304 #>  [947,] 0.4954153 0.4976790 0.5035354 #>  [948,] 0.4627851 0.4639293 0.4675819 #>  [949,] 0.8991930 0.9495188 0.9633244 #>  [950,] 0.7754046 0.7986208 0.8275872 #>  [951,] 1.0499115 1.0784335 1.1566260 #>  [952,] 1.4105026 1.4311033 1.5102048 #>  [953,] 1.1403367 1.1500147 1.1593341 #>  [954,] 0.7222529 0.7252319 0.7468458 #>  [955,] 1.3472002 1.3474296 1.3850320 #>  [956,] 0.6341953 0.6404654 0.6470648 #>  [957,] 0.6433102 0.6579340 0.6626036 #>  [958,] 1.0020501 1.0246180 1.0902559 #>  [959,] 0.8760480 0.8915229 0.9015115 #>  [960,] 0.9770546 0.9916606 1.0133664 #>  [961,] 1.2441537 1.2481324 1.2595825 #>  [962,] 0.7771802 0.7978340 0.8190690 #>  [963,] 1.5226300 1.5688090 1.6108931 #>  [964,] 0.7000104 0.7038249 0.7122396 #>  [965,] 1.1380595 1.2415931 1.2439757 #>  [966,] 0.6201318 0.6610838 0.6675333 #>  [967,] 1.2054743 1.2272684 1.2325339 #>  [968,] 0.6887927 0.6891508 0.7066901 #>  [969,] 0.6433826 0.6498837 0.6740832 #>  [970,] 0.9630658 0.9861067 0.9881925 #>  [971,] 0.5381647 0.5685371 0.5707344 #>  [972,] 0.9652804 1.0012216 1.0029620 #>  [973,] 0.6571726 0.6650302 0.6714687 #>  [974,] 0.7486631 0.7753879 0.7910739 #>  [975,] 0.6115830 0.6163299 0.6441861 #>  [976,] 0.8276737 0.8325226 0.8492045 #>  [977,] 0.5738458 0.6021441 0.6031915 #>  [978,] 0.7200436 0.7214314 0.7529186 #>  [979,] 0.9167299 0.9555650 0.9637244 #>  [980,] 0.8277651 0.8593300 0.8888746 #>  [981,] 0.7448010 0.7522240 0.7542072 #>  [982,] 0.6146644 0.6445492 0.6565097 #>  [983,] 0.8015755 0.8142656 0.8143064 #>  [984,] 0.6154795 0.6173642 0.6223629 #>  [985,] 0.4662150 0.4795889 0.5132644 #>  [986,] 1.1211136 1.1305371 1.1481931 #>  [987,] 0.5760790 0.5778647 0.5906846 #>  [988,] 1.1729409 1.2447385 1.2524553 #>  [989,] 1.2098600 1.2578741 1.2889180 #>  [990,] 0.4753128 0.5656023 0.5682929 #>  [991,] 0.6207860 0.6563092 0.6656549 #>  [992,] 1.7323020 1.8105273 1.8159533 #>  [993,] 0.8802950 0.8913612 0.8967464 #>  [994,] 0.9035453 0.9124131 0.9759566 #>  [995,] 0.5363126 0.5530575 0.5763685 #>  [996,] 0.7771513 0.7819357 0.8146033 #>  [997,] 0.6888587 0.7061336 0.7132001 #>  [998,] 0.9398505 0.9450594 0.9570552 #>  [999,] 0.7062615 0.7072478 0.7098156 #> [1000,] 1.0474668 1.1888230 1.2082233 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 0"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 1e-10"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample   cd45 pstat5    cd34 outcome class  multiclass event time_to_event #>    <chr>   <dbl>  <dbl>   <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 16     0.859   0.237 0.920     3.16  class1 class1         0          8.17 #>  2 6      0.244   0.739 0.376     3.22  class1 class1         0          9.87 #>  3 55     0.783   0.345 0.785     4.58  class1 class2         1          8.11 #>  4 32     0.625   0.841 0.652     3.73  class1 class2         1          9.39 #>  5 81     0.191   0.808 0.00841   3.04  class2 class3         1         11.4  #>  6 79     0.0863  0.704 0.372     4.70  class1 class3         1         10.7  #>  7 36     0.620   0.930 0.531     5.78  class1 class2         1          7.89 #>  8 24     0.109   0.127 0.638     0.998 class2 class1         0         11.0  #>  9 97     0.245   0.696 0.381     4.52  class1 class3         1          8.34 #> 10 91     0.238   0.405 0.664     0.302 class2 class3         1          8.78 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>               cd45        pstat5         cd34 #>   [1,] -0.89524881 -0.6154352891 -0.955859834 #>   [2,]  0.85239810  1.4523786920  0.912741705 #>   [3,] -1.02287200 -1.0129270990 -0.515959392 #>   [4,]  1.14311432  1.2257645412  1.453600820 #>   [5,] -0.90259578 -0.8175368289 -1.282858231 #>   [6,] -1.09418244  1.2233028968  1.024926736 #>   [7,]  0.82544860 -0.1791004655 -1.009105741 #>   [8,]  1.48370487 -0.9511216947  0.001407827 #>   [9,]  1.13921962  1.0449547123  0.582111069 #>  [10,] -1.41400530  0.3229013463  0.626967754 #>  [11,] -0.97716166  1.2962552108  0.098077238 #>  [12,] -1.19063379  0.7115139311  0.478984667 #>  [13,] -1.43907426  1.3139899131  0.933966465 #>  [14,]  0.73300754  0.7637340514 -0.861334479 #>  [15,]  0.88992883 -1.3561592116  0.709928214 #>  [16,] -0.57740826  0.5327965574 -0.100967418 #>  [17,]  0.40863309 -1.4757988662 -1.056084806 #>  [18,] -1.68964158  0.6658174673  0.142633555 #>  [19,]  0.28713521 -0.7906656843 -0.252023021 #>  [20,]  1.63302321 -1.4152438189  1.718170579 #>  [21,]  1.31419494 -1.3154939065  1.655273263 #>  [22,]  1.69415177  1.2427517162 -0.818772998 #>  [23,]  0.02077359 -0.5319146964  0.849955273 #>  [24,] -0.66658571  0.2843648936 -1.011535955 #>  [25,] -1.14708230 -1.4930297285 -1.656869664 #>  [26,]  0.24372103 -1.4034458731 -1.300166211 #>  [27,] -1.42807482 -0.4397692678  0.415148144 #>  [28,] -0.22669243  1.0475296664 -0.349675098 #>  [29,] -0.42407288 -0.8352228753  0.250196634 #>  [30,] -1.25018862 -1.3974601502  0.283948410 #>  [31,]  1.36110459  0.7299176496 -0.163309925 #>  [32,] -1.30373366  0.9339453461  1.190515463 #>  [33,]  1.27152928  0.4399364585 -0.564538755 #>  [34,]  0.81855609 -0.2089479608  1.526807437 #>  [35,]  1.16544958  0.6411187991  1.734836548 #>  [36,] -1.17801075 -0.0452609400 -1.209936889 #>  [37,] -0.84054312 -0.5233836445  1.290910951 #>  [38,] -0.32823341  1.0400420901  1.523402978 #>  [39,]  0.20366544 -0.7572589181  0.853755513 #>  [40,]  0.82762143 -1.3759850190 -0.356601905 #>  [41,]  0.40267898 -0.7471419167  1.577746949 #>  [42,] -0.51081173  0.1446524063 -1.470164873 #>  [43,] -0.38136714  1.4927627363 -1.151309171 #>  [44,]  0.96347372 -1.1872450437 -1.291932540 #>  [45,]  1.20250050  0.4047392875 -1.269049917 #>  [46,]  1.35067439 -0.8006717962 -1.225659696 #>  [47,] -0.35952848  1.2940623047  0.024049114 #>  [48,] -0.79862841  0.9073616660 -1.062274842 #>  [49,]  0.79014486  0.7193299072  1.337239018 #>  [50,] -1.54496621 -0.7946949132 -1.407908358 #>  [51,] -1.16130769  0.0007599941  1.059986364 #>  [52,]  0.26455753  1.4020534713  1.634785011 #>  [53,]  0.24175509  1.0369368167  0.928840278 #>  [54,] -0.71260652  1.1590296370  0.581857315 #>  [55,]  0.07405730  1.2764980178 -0.606596761 #>  [56,] -0.88136577  0.8706095362  0.579558086 #>  [57,] -1.58669998  1.4484051449 -1.552902088 #>  [58,]  1.58217778 -0.1054601362  0.087974802 #>  [59,] -0.48545111  1.5857751828  1.458329914 #>  [60,]  1.55071190  1.3351367772  1.210990518 #>  [61,] -1.28260832  1.1711966650 -1.105757394 #>  [62,] -0.67372990  1.5443309165  1.713699709 #>  [63,] -0.35757214 -0.1082158367 -0.481411587 #>  [64,]  0.82277613  0.6273065958  1.739428886 #>  [65,] -0.99261055 -0.7332737248 -1.141060466 #>  [66,] -1.03644251  1.2923523340  0.188708485 #>  [67,] -0.27275681  0.8349033972 -0.998760040 #>  [68,] -0.58064974 -0.4968915563  0.053851550 #>  [69,]  1.58477885 -1.3516995709 -1.049455727 #>  [70,] -0.04101399 -0.5983570067  1.103343969 #>  [71,] -1.02068445  0.6922526090 -0.644764692 #>  [72,] -0.54810328 -1.0130289281 -1.517291400 #>  [73,]  1.33041700  0.6722545796 -0.694023253 #>  [74,] -0.83007148 -1.1318840018  0.679198658 #>  [75,]  0.50893737 -0.5237140442  1.653474976 #>  [76,]  1.59802493  0.6050390436 -0.800056293 #>  [77,] -1.28943211 -1.1601061254 -0.479032756 #>  [78,] -1.44741818  0.1960273410 -1.443048754 #>  [79,]  0.21634438  0.1887757218 -0.607834172 #>  [80,] -0.05425350 -0.7758204868  0.053659744 #>  [81,]  1.52460644  1.1802237434 -0.012182008 #>  [82,]  0.39770564 -0.9660269387 -0.680078557 #>  [83,] -1.27600589 -0.9241114299  0.116217458 #>  [84,]  0.79259923  1.4017750782  0.630411007 #>  [85,]  0.82090060 -1.0000122473 -1.210176736 #>  [86,]  1.07603466  1.1248697466 -0.319344237 #>  [87,]  0.38772562 -1.3472469922 -0.353845869 #>  [88,]  1.11600155 -1.4452992294 -0.284988287 #>  [89,]  1.56314373 -1.5678679259  0.059769628 #>  [90,]  0.89384096 -0.7204741959 -0.523131362 #>  [91,]  0.88591142 -0.9416212125  0.594746035 #>  [92,] -0.72783025 -0.7239880422  0.631051121 #>  [93,]  0.42888486 -1.3710569283 -1.164541930 #>  [94,] -0.93334854  0.1198869134 -0.620289212 #>  [95,] -0.18861170  0.0829494932 -0.275092367 #>  [96,]  0.72776137  1.0537998961 -0.645462741 #>  [97,] -1.02513592  0.1747128149 -1.489467012 #>  [98,]  0.73866023 -0.8560162112  1.036846569 #>  [99,] -1.27865123 -1.3463320706  1.015711735 #> [100,]  0.12153692 -1.2743652638  1.034751282"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  2.639745929  6.925688896  2.445427697  4.750737762  6.874139454 #>   [6]  6.070602079  4.410915514  1.756304316  1.450406115  5.659417379 #>  [11]  1.699447296  3.688399968  3.609550482  4.682074015  4.801666652 #>  [16]  3.504436253  2.663530786  5.343261249  0.301239507  1.562745741 #>  [21]  4.968213834  6.080160676  2.145110035  2.810564489  0.361942756 #>  [26]  1.029844789  5.963788302  5.670413601  6.366873732  6.736752746 #>  [31]  1.028229160  3.330483342  4.412672185  4.410385231  4.110646295 #>  [36]  4.884521489  5.809100655  5.746402770  3.602341737  5.574638541 #>  [41]  4.234962673 -0.001856168  5.928982435  5.839819857  1.891645123 #>  [46]  4.326015661  2.691848886  5.206864485  3.014507063  2.111362299 #>  [51]  0.721636469  3.184238404  3.978884655  4.652122268  2.589938087 #>  [56]  0.537521692  4.371208337  2.869928649  5.518625732  3.732174302 #>  [61]  2.609525026  4.674846227  1.565735518  7.428953502  4.081494104 #>  [66]  2.452287104  2.330794669  2.974352626  2.576608138  4.803585945 #>  [71]  4.861841708  2.853015899  4.914247291  4.658714031  3.558099828 #>  [76]  5.564759463  4.417104931  3.204267433  5.644103236  4.182216198 #>  [81]  4.469183493  3.147897675  3.543365158  6.131493957  5.111519148 #>  [86]  3.948089520 -0.408905504  3.779060739  4.893392525  2.621817675 #>  [91]  3.701769686  3.459112966  2.502752009  1.483846241  6.245805237 #>  [96]  5.664096449  5.621188225 -0.359841739  4.272542227  5.245669465"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>      cd45    cd38    cd34   cd19 cluster_id .flowsom_metacluster #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>      <chr>                #>  1 -1.01  -0.521   0.252   0.478 t          2                    #>  2  1.21  -0.265  -0.111   0.439 i          2                    #>  3  0.664  0.517   0.0302  1.64  v          1                    #>  4 -0.618  0.873  -0.128  -0.110 q          1                    #>  5 -1.30  -2.61   -0.808   1.32  n          5                    #>  6  0.574  0.630   1.42    0.185 l          1                    #>  7  2.68   0.444   0.577  -0.841 c          1                    #>  8 -1.35  -0.786   1.21    0.765 j          1                    #>  9  0.879 -0.297  -0.586  -0.101 j          1                    #> 10 -1.34   0.0220  0.462  -0.929 x          1                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>      cd45    cd38    cd34   cd19 cluster_id .phenograph_metacluster #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>      <chr>                   #>  1 -1.01  -0.521   0.252   0.478 t          4                       #>  2  1.21  -0.265  -0.111   0.439 i          4                       #>  3  0.664  0.517   0.0302  1.64  v          1                       #>  4 -0.618  0.873  -0.128  -0.110 q          5                       #>  5 -1.30  -2.61   -0.808   1.32  n          4                       #>  6  0.574  0.630   1.42    0.185 l          2                       #>  7  2.68   0.444   0.577  -0.841 c          1                       #>  8 -1.35  -0.786   1.21    0.765 j          2                       #>  9  0.879 -0.297  -0.586  -0.101 j          2                       #> 10 -1.34   0.0220  0.462  -0.929 x          1                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 2                      #>  2 2                      #>  3 1                      #>  4 2                      #>  5 6                      #>  6 1                      #>  7 4                      #>  8 4                      #>  9 1                      #> 10 8                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 2                    #>  2 2                    #>  3 1                    #>  4 1                    #>  5 4                    #>  6 1                    #>  7 3                    #>  8 3                    #>  9 1                    #> 10 1                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 3                    #>  2 3                    #>  3 2                    #>  4 2                    #>  5 3                    #>  6 2                    #>  7 1                    #>  8 1                    #>  9 2                    #> 10 2                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 10                        #>  2 3                         #>  3 5                         #>  4 3                         #>  5 4                         #>  6 2                         #>  7 5                         #>  8 2                         #>  9 6                         #> 10 5                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 6                   #>  2 6                   #>  3 3                   #>  4 4                   #>  5 4                   #>  6 2                   #>  7 2                   #>  8 3                   #>  9 10                  #> 10 10                  #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 4                       #>  2 1                       #>  3 4                       #>  4 4                       #>  5 1                       #>  6 4                       #>  7 1                       #>  8 3                       #>  9 3                       #> 10 2                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1 6.23  #>  2 5.92  #>  3 6.19  #>  4 3.84  #>  5 2.49  #>  6 2.44  #>  7 3.48  #>  8 3.75  #>  9 4.23  #> 10 0.371 #> 11 4.00  #> 12 3.27  #> 13 1.44  #> 14 2.15  #> 15 4.23  #> 16 5.96  #> 17 3.69  #> 18 5.48  #> 19 1.34  #> 20 0.773"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>       cd45   cd38    cd34     cd19    .pc1    .pc2    .pc3   .pc4 #>      <dbl>  <dbl>   <dbl>    <dbl>   <dbl>   <dbl>   <dbl>  <dbl> #>  1  0.664   0.744 -1.36    0.773   -0.403   0.390  -0.0236  1.78  #>  2 -1.73   -0.486 -2.25    0.163    2.10    1.66   -0.148   0.405 #>  3  0.924  -0.256  0.229  -0.0806  -0.489  -1.04   -0.119   0.356 #>  4  0.926  -0.589 -0.532  -0.225    0.181  -1.10   -0.240   0.744 #>  5 -1.01    0.236  0.989   0.0108  -0.344   0.613   0.384  -1.19  #>  6 -0.436   0.360  0.720  -0.00349 -0.504   0.245   0.419  -0.619 #>  7 -0.0207 -0.744  0.0558 -1.15     0.817  -1.06    0.475  -0.517 #>  8  0.0534  0.792 -0.158  -0.699   -0.0939 -0.203   1.22    0.234 #>  9  1.11   -0.118 -0.123   1.58    -1.28   -0.0940 -1.33    1.16  #> 10  1.01    0.523  0.557   0.731   -1.52   -0.397  -0.202   0.616 #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>       cd45   cd38    cd34     cd19 .tsne1 .tsne2 #>      <dbl>  <dbl>   <dbl>    <dbl>  <dbl>  <dbl> #>  1  0.664   0.744 -1.36    0.773   -0.382  1.76  #>  2 -1.73   -0.486 -2.25    0.163    3.64   2.35  #>  3  0.924  -0.256  0.229  -0.0806  -1.68  -0.844 #>  4  0.926  -0.589 -0.532  -0.225   -0.785 -1.03  #>  5 -1.01    0.236  0.989   0.0108   3.19  -0.468 #>  6 -0.436   0.360  0.720  -0.00349  2.53  -0.371 #>  7 -0.0207 -0.744  0.0558 -1.15     0.921 -2.76  #>  8  0.0534  0.792 -0.158  -0.699    1.35  -0.390 #>  9  1.11   -0.118 -0.123   1.58    -2.46   1.46  #> 10  1.01    0.523  0.557   0.731   -3.01   0.290 #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>       cd45   cd38    cd34     cd19 .umap1 .umap2 #>      <dbl>  <dbl>   <dbl>    <dbl>  <dbl>  <dbl> #>  1  0.664   0.744 -1.36    0.773    2.50   3.16  #>  2 -1.73   -0.486 -2.25    0.163   -0.330 -1.65  #>  3  0.924  -0.256  0.229  -0.0806   0.189  1.34  #>  4  0.926  -0.589 -0.532  -0.225    0.708  1.58  #>  5 -1.01    0.236  0.989   0.0108   1.98  -3.40  #>  6 -0.436   0.360  0.720  -0.00349  1.90  -3.12  #>  7 -0.0207 -0.744  0.0558 -1.15     1.34   0.282 #>  8  0.0534  0.792 -0.158  -0.699    1.72  -2.13  #>  9  1.11   -0.118 -0.123   1.58    -2.21   1.71  #> 10  1.01    0.523  0.557   0.731   -2.94   2.38  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>      .pc1   .pc2 #>     <dbl>  <dbl> #>  1  0.128 -0.961 #>  2  0.298 -0.916 #>  3  1.95  -0.365 #>  4 -0.621  0.227 #>  5 -1.03   1.75  #>  6 -0.441  1.31  #>  7 -3.04  -1.30  #>  8 -0.184  0.523 #>  9  0.444 -0.853 #> 10  0.107 -0.349 #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1     PC2     PC3    PC4 #>     <dbl>   <dbl>   <dbl>  <dbl> #>  1 -1.42   1.04   -1.71   -0.102 #>  2  0.965  1.84    0.0962  0.327 #>  3 -1.20  -1.44    1.13   -0.809 #>  4 -0.199 -0.606  -1.38    0.415 #>  5 -0.996  1.23    0.344   0.588 #>  6  1.39  -0.382  -0.123   1.43  #>  7 -1.03  -0.115  -1.87    2.61  #>  8  1.94   1.67    0.985   0.596 #>  9  1.11  -0.0657  0.207   0.576 #> 10 -1.08   0.531  -1.33    1.40  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -2.21    5.70 #>  2  0.586  -4.62 #>  3  3.00   -3.74 #>  4  0.439  -8.11 #>  5  5.07   -2.65 #>  6  0.701  -6.01 #>  7 -1.52    2.84 #>  8 -0.275  -4.77 #>  9  4.90    2.82 #> 10 -4.31   -2.02 #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  1.24    8.37 #>  2 -0.956  -9.21 #>  3  0.637  -5.64 #>  4  3.47  -10.7  #>  5  2.92   -2.45 #>  6  0.224 -11.1  #>  7  1.24    1.70 #>  8 -2.34   -9.15 #>  9  2.47    6.81 #> 10 -6.27   -3.49 #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>     .umap1 .umap2 #>      <dbl>  <dbl> #>  1 -1.04   -1.76  #>  2 -1.03    0.178 #>  3 -0.0548  1.03  #>  4  2.84    2.76  #>  5  3.28   -0.749 #>  6  0.557  -2.48  #>  7  2.78    1.87  #>  8 -1.10   -0.734 #>  9  2.29   -2.45  #> 10 -4.41    0.585 #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  1.23   0.283 #>  2 -3.43   0.565 #>  3  1.82  -1.52  #>  4 -1.26  -4.27  #>  5 -0.434 -0.603 #>  6  3.39   5.71  #>  7 -1.24  -5.80  #>  8  3.42  -0.454 #>  9  2.36   2.66  #> 10 -5.46   4.50  #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>     UMAP1  UMAP2 #>     <dbl>  <dbl> #>  1 -3.86   0.837 #>  2 -0.557 -3.23  #>  3  3.07   2.52  #>  4  1.59   1.48  #>  5  0.748 -1.08  #>  6 -3.67   0.595 #>  7  0.297  1.06  #>  8 -1.67   1.32  #>  9  3.23   2.46  #> 10 -0.975 -0.478 #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.333 #>  2          0.111 #>  3          0.111 #>  4          0.111 #>  5          0     #>  6          0     #>  7          0.333 #>  8          0.111 #>  9          0.111 #> 10          0.444 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            0.2 #>  2            0.2 #>  3            0.8 #>  4            0.1 #>  5            1   #>  6            1   #>  7            1   #>  8            1   #>  9            1   #> 10            1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/37]> Bootstrap01 #>  2 <split [100/39]> Bootstrap02 #>  3 <split [100/38]> Bootstrap03 #>  4 <split [100/43]> Bootstrap04 #>  5 <split [100/35]> Bootstrap05 #>  6 <split [100/40]> Bootstrap06 #>  7 <split [100/40]> Bootstrap07 #>  8 <split [100/40]> Bootstrap08 #>  9 <split [100/36]> Bootstrap09 #> 10 <split [100/28]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)       3.55  #> 2 pstat5            1.15  #> 3 cd45              0.922 #> 4 cd34              0.127  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5        -0.193    #> 2 cd45          -0.168    #> 3 cd34          -0.00767  #> 4 (Intercept)   -0.000398  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 0 × 2 #> # ℹ 2 variables: feature <chr>, coefficient <dbl>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>        cd45   cd38    cd34   cd19 .upsample_cluster #>       <dbl>  <dbl>   <dbl>  <dbl> <chr>             #>  1  0.00501  1.31   0.193   1.20  a                 #>  2  0.496   -0.548 -0.0364 -0.314 a                 #>  3 -1.56     1.20  -0.832   0.226 a                 #>  4  0.390    0.696  1.12    1.13  a                 #>  5  1.22     0.728  0.553   1.13  a                 #>  6 -0.621   -0.936  0.409  -1.25  a                 #>  7  0.980   -1.60   0.932  -0.466 a                 #>  8 -0.902    1.28  -0.728   0.437 a                 #>  9 -0.263    0.481 -0.657   1.59  a                 #> 10 -0.411    0.199  0.325   0.579 a                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>        cd45   cd38    cd34   cd19 .upsample_cluster #>       <dbl>  <dbl>   <dbl>  <dbl> <chr>             #>  1  0.00501  1.31   0.193   1.20  a                 #>  2  0.496   -0.548 -0.0364 -0.314 b                 #>  3 -1.56     1.20  -0.832   0.226 a                 #>  4  0.390    0.696  1.12    1.13  a                 #>  5  1.22     0.728  0.553   1.13  a                 #>  6 -0.621   -0.936  0.409  -1.25  a                 #>  7  0.980   -1.60   0.932  -0.466 a                 #>  8 -0.902    1.28  -0.728   0.437 b                 #>  9 -0.263    0.481 -0.657   1.59  a                 #> 10 -0.411    0.199  0.325   0.579 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 b                 #>  4 a                 #>  5 a                 #>  6 a                 #>  7 a                 #>  8 a                 #>  9 a                 #> 10 a                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 b                 #>  4 b                 #>  5 a                 #>  6 a                 #>  7 b                 #>  8 a                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 a                 #>  5 b                 #>  6 b                 #>  7 a                 #>  8 a                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 b                 #>  5 a                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
