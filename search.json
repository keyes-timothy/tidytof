[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.4 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.35     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.9        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.3.0        bslib_0.6.2       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.4              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [89] tidyselect_1.2.1              Biostrings_2.70.3             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] readr_2.1.5                   blob_1.2.4                    #> [119] bitops_1.0-7                  listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1   8.78  -14.0 #> 2  -2.75  -11.6 #> 3  -7.14  -35.4 #> 4  -3.62  -21.2 #> 5   6.73  -19.5 #> 6 -12.3   -19.7 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1  13.1   10.9  #>  2   7.23  12.7  #>  3   1.20  35.4  #>  4  -1.01  18.2  #>  5  14.9   14.4  #>  6   3.99  24.0  #>  7   6.92  14.7  #>  8   4.97  28.1  #>  9   2.11  20.0  #> 10   8.32   7.12 #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1   .umap2 #>     <dbl>    <dbl> #>  1  9.48  -4.66    #>  2  8.61  -3.85    #>  3  3.34   0.00732 #>  4  2.90   1.80    #>  5  9.55  -4.49    #>  6  0.414  2.48    #>  7  9.61  -3.98    #>  8  2.49   0.675   #>  9  5.90   0.426   #> 10  8.00  -5.81    #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.4 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         stringr_1.5.1       #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [22] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [25] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [28] tweenr_2.0.3        irlba_2.3.5.1       parallel_4.3.3      #>  [31] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [34] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [37] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [40] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [43] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [46] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [49] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [52] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [55] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [58] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [61] Rtsne_0.17          future_1.33.1       desc_1.4.3          #>  [64] survival_3.5-8      polyclip_1.10-6     embed_1.1.4         #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [73] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [76] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [79] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [82] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [85] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [88] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [91] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [94] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [97] lava_1.8.0          uwot_0.1.16         gtable_0.3.4        #> [100] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [103] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [106] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [109] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.4 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.2         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.2     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.3        timechange_0.3.0    tidyselect_1.2.1    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [94] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.4              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 philentropy_0.8.0             #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     emdist_0.3-3                  #>  [89] RProtoBufLib_2.14.1           tidyselect_1.2.1              #>  [91] Biostrings_2.70.3             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   ggplot2_3.5.0                 #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  scales_1.3.0                  #> [127] prodlim_2023.08.28            purrr_1.0.2                   #> [129] crayon_1.5.2                  rlang_1.1.3                   #> [131] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.4 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.1       bslib_0.6.2         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.2     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.3        #>  [49] timechange_0.3.0    tidyselect_1.2.1    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.1     tidyr_1.3.1         RProtoBufLib_2.14.1 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.9          #> [103] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34   cd38 #>   <dbl>  <dbl>  <dbl> #> 1  130.  2.33   0.980 #> 2  230. -0.923 11.4   #> 3  293.  4.80   1.00  #> 4  431. -0.556 12.7   #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.4 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.4              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  tidyr_1.3.1                   #>  [73] data.table_1.15.2             hms_1.1.3                     #>  [75] tidygraph_1.3.1               utf8_1.2.4                    #>  [77] XVector_0.42.0                ggrepel_0.9.5                 #>  [79] BiocVersion_3.18.1            foreach_1.5.2                 #>  [81] pillar_1.9.0                  stringr_1.5.1                 #>  [83] RcppHNSW_0.6.0                later_1.3.2                   #>  [85] splines_4.3.3                 tweenr_2.0.3                  #>  [87] lattice_0.22-5                survival_3.5-8                #>  [89] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [91] tidyselect_1.2.1              Biostrings_2.70.3             #>  [93] knitr_1.45                    gridExtra_2.3                 #>  [95] xfun_0.42                     graphlayouts_1.1.1            #>  [97] hardhat_1.3.1                 timeDate_4032.109             #>  [99] stringi_1.8.3                 yaml_2.3.8                    #> [101] evaluate_0.23                 codetools_0.2-19              #> [103] ggraph_2.2.1                  tibble_3.2.1                  #> [105] BiocManager_1.30.22           cli_3.6.2                     #> [107] rpart_4.1.23                  xtable_1.8-4                  #> [109] systemfonts_1.0.6             munsell_0.5.0                 #> [111] jquerylib_0.1.4               Rcpp_1.0.12                   #> [113] globals_0.16.3                png_0.1-8                     #> [115] parallel_4.3.3                ellipsis_0.3.2                #> [117] pkgdown_2.0.7                 gower_1.0.1                   #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  ggridges_0.5.6                #> [127] scales_1.3.0                  prodlim_2023.08.28            #> [129] purrr_1.0.2                   crayon_1.5.2                  #> [131] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.4 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [97] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.4 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T, Davis K, Nolan G (2024). tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis. doi:10.18129/B9.bioc.tidytof, https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.4, http://www.bioconductor.org/packages/tidytof. Keyes, J. T, Koladiya, Abhishek, Lo, Yu-Chen, Nolan, P. G, Davis, L. K (2023). “tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis.” Bioinformatics Advances, 3(1). doi:10.1093/bioadv/vbad071, https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984.","code":"@Manual{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {Timothy Keyes and Kara Davis and Garry Nolan},   year = {2024},   url = {http://www.bioconductor.org/packages/tidytof},   note = {https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.4},   doi = {10.18129/B9.bioc.tidytof}, } @Article{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {{Keyes} and Timothy J. and {Koladiya} and {Abhishek} and {Lo} and {Yu-Chen} and {Nolan} and Garry P. and {Davis} and Kara L.},   year = {2023},   journal = {Bioinformatics Advances},   volume = {3},   number = {1},   doi = {10.1093/bioadv/vbad071},   url = {https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"See documentation object's original package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"# See examples in each object's original package NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `{cluster_col}_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_{cluster_name}\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 4               #>  2 16              #>  3 2               #>  4 1               #>  5 2               #>  6 10              #>  7 7               #>  8 12              #>  9 12              #> 10 17              #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 9               #>  2 18              #>  3 19              #>  4 8               #>  5 13              #>  6 7               #>  7 14              #>  8 12              #>  9 4               #> 10 6               #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 1                   #>  2 6                   #>  3 5                   #>  4 2                   #>  5 3                   #>  6 1                   #>  7 6                   #>  8 8                   #>  9 6                   #> 10 4                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 2                   #>  2 1                   #>  3 6                   #>  4 6                   #>  5 3                   #>  6 2                   #>  7 5                   #>  8 1                   #>  9 10                  #> 10 5                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>       cd45    cd38   cd34    cd19 cluster_id #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  1.35    0.389  -0.464  2.12   m          #>  2 -0.770   0.695   1.07   0.723  b          #>  3  0.0172  0.0534 -0.544 -0.459  r          #>  4  0.795  -0.388   0.134  0.434  c          #>  5 -0.282  -0.959  -0.463 -1.07   c          #>  6 -1.48   -0.297   1.60   0.566  k          #>  7  0.0401  0.0928 -0.883  0.0657 h          #>  8  0.144  -0.185  -0.263  0.214  w          #>  9 -1.11   -1.03    1.17   0.283  g          #> 10  1.67   -0.839  -0.186  2.40   h          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>       cd45    cd38   cd34    cd19 cluster_id #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  0.938  -0.984   0.144 -0.205  d          #>  2 -0.133   0.0358 -1.04   0.980  h          #>  3 -1.77   -2.13   -1.14  -1.34   l          #>  4  1.09    0.346   1.10  -0.0255 f          #>  5  0.755  -2.41   -0.608  0.718  n          #>  6 -0.254   1.07   -0.659 -1.05   y          #>  7  1.50   -1.19    1.16  -2.31   k          #>  8  0.0834 -0.0263 -0.551  1.89   g          #>  9  1.18   -0.373   2.08  -1.26   h          #> 10  0.0747  1.44    0.658  0.813  v          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 100 × 5 #>      cd45    cd38   cd34    cd19 cluster_id #>     <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  0.410 -0.967   0.178  0.677  z          #>  2 -1.08  -0.835   0.595  0.582  y          #>  3  0.795 -0.388   0.134  0.434  c          #>  4 -0.585  1.44   -0.327 -0.772  m          #>  5 -1.48  -0.297   1.60   0.566  k          #>  6 -1.47   1.01    0.604 -1.21   a          #>  7  0.144 -0.185  -0.263  0.214  w          #>  8  1.67  -0.839  -0.186  2.40   h          #>  9 -0.504 -0.828   0.304 -0.0461 a          #> 10 -2.03  -0.0748 -0.571  1.34   c          #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>       cd45    cd38   cd34   cd19 cluster_id #>      <dbl>   <dbl>  <dbl>  <dbl> <chr>      #>  1 -0.337   0.676   1.94  -0.654 l          #>  2  0.273   0.990   1.02  -0.563 l          #>  3 -0.499   0.131  -0.232  0.941 a          #>  4 -0.343   0.0948 -0.530 -1.49  o          #>  5 -0.0200  0.775   0.959 -1.07  c          #>  6 -0.118   0.538  -1.21   0.862 n          #>  7 -0.890   0.355  -1.19  -0.795 y          #>  8 -0.311   0.384  -0.236 -0.382 j          #>  9  0.293  -1.40    0.659  0.190 k          #> 10  1.03   -2.00    0.260  0.696 j          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1  0.0244 -0.307  0.447  1.80  m          #>  2  0.273   0.990  1.02  -0.563 l          #>  3  0.398  -0.890  0.179 -0.193 s          #>  4 -0.193  -0.302 -0.794  0.477 i          #>  5 -1.31    0.574 -1.26  -1.13  m          #>  6  0.757  -0.118  0.395  0.413 m          #>  7 -0.499   0.131 -0.232  0.941 a          #>  8 -0.352  -0.654  0.617  0.913 l          #>  9 -0.0200  0.775  0.959 -1.07  c          #> 10  0.121  -0.563 -0.147  0.372 h          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 488 × 4 #>      cd45   cd38    cd34    cd19 #>     <dbl>  <dbl>   <dbl>   <dbl> #>  1 -1.57  -2.46  -1.27    0.0803 #>  2  0.426  2.10   0.441   1.27   #>  3  0.122  1.44   0.400   0.0145 #>  4  0.815 -0.672 -0.616   1.63   #>  5 -0.494  1.97   0.772   0.647  #>  6  0.647  3.12   0.377   0.825  #>  7 -0.743 -0.147 -0.0563 -0.761  #>  8  0.669 -1.49  -0.698  -1.66   #>  9 -1.72   0.901 -1.25   -1.08   #> 10  1.00   1.52   0.648  -0.336  #> # ℹ 478 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 201 × 4 #>      cd45   cd38   cd34    cd19 #>     <dbl>  <dbl>  <dbl>   <dbl> #>  1 -1.57  -2.46  -1.27   0.0803 #>  2  0.647  3.12   0.377  0.825  #>  3  0.669 -1.49  -0.698 -1.66   #>  4 -0.293 -0.439 -2.58   0.565  #>  5 -0.651 -2.20   0.141  0.368  #>  6  0.180 -1.01   1.20   0.383  #>  7 -1.40   1.16   1.35  -0.407  #>  8  0.994  0.934  0.484  1.86   #>  9  2.18   0.593 -0.205 -0.262  #> 10  0.141 -0.206  0.589 -2.70   #> # ℹ 191 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 197 × 4 #>      cd45   cd38    cd34   cd19 #>     <dbl>  <dbl>   <dbl>  <dbl> #>  1  0.647  3.12   0.377   0.825 #>  2  0.669 -1.49  -0.698  -1.66  #>  3 -0.293 -0.439 -2.58    0.565 #>  4 -0.938  1.59   0.178  -1.63  #>  5  1.03  -0.987  0.0345  1.87  #>  6  0.180 -1.01   1.20    0.383 #>  7  0.261 -2.01  -1.30    0.959 #>  8 -0.525  0.123 -0.106   1.22  #>  9  0.324 -1.39  -1.45   -0.429 #> 10 -0.896 -0.478 -2.43    0.954 #> # ℹ 187 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>      cd45   cd38   cd34    cd19 cluster_id #>     <dbl>  <dbl>  <dbl>   <dbl> <chr>      #>  1  0.235 -1.99   1.03   0.953  h          #>  2  1.53   0.374 -0.387  2.16   w          #>  3 -0.822 -0.742 -0.139 -1.46   b          #>  4 -0.883 -1.60   0.681  0.682  f          #>  5  1.63   1.32   1.58  -1.86   j          #>  6  0.261 -0.990  1.13  -0.145  u          #>  7  0.257  2.38   1.81   0.807  f          #>  8  1.43  -0.283 -0.332 -0.676  k          #>  9  1.48  -0.420  0.451  1.65   r          #> 10  0.944 -1.54  -0.895  0.0457 g          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 89 × 5 #>      cd45     cd38   cd34   cd19 cluster_id #>     <dbl>    <dbl>  <dbl>  <dbl> <chr>      #>  1 -1.53  -0.00808 -0.907  0.648 a          #>  2  1.24   0.859   -0.639 -0.358 a          #>  3  0.599 -0.139   -0.365 -1.02  a          #>  4 -0.822 -0.742   -0.139 -1.46  b          #>  5 -0.406 -0.377    0.820 -0.707 b          #>  6 -0.155 -0.198    1.47   0.324 b          #>  7 -1.49  -0.500    0.328 -0.508 c          #>  8  0.275 -0.0586  -0.643 -0.730 c          #>  9  0.902  1.37    -0.484 -0.421 c          #> 10 -0.779  0.105   -0.452  1.56  d          #> # ℹ 79 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34    cd19 .spade_density #>      <dbl>  <dbl>  <dbl>   <dbl>          <dbl> #>  1  1.19    0.828  0.598 -0.199               1 #>  2 -0.0195 -0.590 -0.363 -0.378               1 #>  3  0.0519  0.366 -0.969  0.0497              1 #>  4  0.759  -1.46   0.861  0.806               1 #>  5  0.999   0.122  2.95   0.0899              1 #>  6  2.63   -0.749 -0.624 -0.440               1 #>  7 -0.0241  0.483  0.520  0.891               1 #>  8 -1.74    1.64  -0.374 -0.941               1 #>  9  0.475   0.710  0.109 -0.0416              1 #> 10 -1.13    0.232  2.37   1.76                1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>       cd45   cd38   cd34    cd19 .spade_density #>      <dbl>  <dbl>  <dbl>   <dbl>          <dbl> #>  1  1.19    0.828  0.598 -0.199             1   #>  2 -0.0195 -0.590 -0.363 -0.378             1   #>  3  0.0519  0.366 -0.969  0.0497            1   #>  4  0.759  -1.46   0.861  0.806             0.7 #>  5  0.999   0.122  2.95   0.0899            0   #>  6  2.63   -0.749 -0.624 -0.440             0.1 #>  7 -0.0241  0.483  0.520  0.891             1   #>  8 -1.74    1.64  -0.374 -0.941             0.1 #>  9  0.475   0.710  0.109 -0.0416            1   #> 10 -1.13    0.232  2.37   1.76              0   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby       -0.0111     -0.0327      0.0498      -0.215     0.00363 #> 2 mario        0.584       0.180      -0.128       -0.672    -0.182   #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel   values #>    <chr>   <chr>      <chr>      <dbl> #>  1 kirby   a          cd45    -0.0111  #>  2 kirby   a          cd38    -0.0327  #>  3 kirby   a          cd34     0.0498  #>  4 kirby   a          cd19    -0.215   #>  5 kirby   b          cd45     0.00363 #>  6 kirby   b          cd38     0.0535  #>  7 kirby   b          cd34    -0.130   #>  8 kirby   b          cd19    -0.124   #>  9 kirby   c          cd45     0.110   #> 10 kirby   c          cd38    -0.194   #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@o_emd` `stim_cd38@o_emd` `stim_cd34@o_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                  NA                NA                NA #> 2 kirby                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@o_emd` <dbl>, `stim_cd45@q_emd` <dbl>, #> #   `stim_cd38@q_emd` <dbl>, `stim_cd34@q_emd` <dbl>, `stim_cd19@q_emd` <dbl>, #> #   `stim_cd45@l_emd` <dbl>, `stim_cd38@l_emd` <dbl>, `stim_cd34@l_emd` <dbl>, #> #   `stim_cd19@l_emd` <dbl>, `stim_cd45@x_emd` <dbl>, `stim_cd38@x_emd` <dbl>, #> #   `stim_cd34@x_emd` <dbl>, `stim_cd19@x_emd` <dbl>, `stim_cd45@g_emd` <dbl>, #> #   `stim_cd38@g_emd` <dbl>, `stim_cd34@g_emd` <dbl>, `stim_cd19@g_emd` <dbl>, #> #   `stim_cd45@v_emd` <dbl>, `stim_cd38@v_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 o          cd45   stim         8.45 #>  2 o          cd38   stim         6.78 #>  3 o          cd34   stim         9.03 #>  4 o          cd19   stim         9.74 #>  5 q          cd45   stim         5.04 #>  6 q          cd38   stim         6.14 #>  7 q          cd34   stim         4.49 #>  8 q          cd19   stim         3.22 #>  9 l          cd45   stim         8.83 #> 10 l          cd38   stim         5.31 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0291   0.0364   0.0419   0.0565   0.0492   0.0510   0.0401 #> 2 mario     0.0377   0.0355   0.0488   0.0576   0.0288   0.0244   0.0244 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0291   0.0364   0.0419   0.0565   0.0492   0.0510   0.0401 #> 2 mario     0.0377   0.0355   0.0488   0.0576   0.0288   0.0244   0.0244 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@k_jsd` `stim_cd38@k_jsd` `stim_cd34@k_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                  NA                NA                NA #> 2 kirby                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@k_jsd` <dbl>, `stim_cd45@v_jsd` <dbl>, #> #   `stim_cd38@v_jsd` <dbl>, `stim_cd34@v_jsd` <dbl>, `stim_cd19@v_jsd` <dbl>, #> #   `stim_cd45@q_jsd` <dbl>, `stim_cd38@q_jsd` <dbl>, `stim_cd34@q_jsd` <dbl>, #> #   `stim_cd19@q_jsd` <dbl>, `stim_cd45@s_jsd` <dbl>, `stim_cd38@s_jsd` <dbl>, #> #   `stim_cd34@s_jsd` <dbl>, `stim_cd19@s_jsd` <dbl>, `stim_cd45@n_jsd` <dbl>, #> #   `stim_cd38@n_jsd` <dbl>, `stim_cd34@n_jsd` <dbl>, `stim_cd19@n_jsd` <dbl>, #> #   `stim_cd45@l_jsd` <dbl>, `stim_cd38@l_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 k          cd45   stim        0.936 #>  2 k          cd38   stim        0.809 #>  3 k          cd34   stim        0.745 #>  4 k          cd19   stim        0.845 #>  5 v          cd45   stim        0.875 #>  6 v          cd38   stim        0.562 #>  7 v          cd34   stim        0.812 #>  8 v          cd19   stim        0.851 #>  9 q          cd45   stim        0.821 #> 10 q          cd38   stim        0.714 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0417   0.0338   0.0477   0.0398   0.0398   0.0477   0.0378 #> 2 mario     0.0241   0.0423   0.0362   0.0362   0.0322   0.0362   0.0463 #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id   prop #>    <chr>   <chr>       <dbl> #>  1 kirby   a          0.0417 #>  2 kirby   b          0.0338 #>  3 kirby   c          0.0477 #>  4 kirby   d          0.0398 #>  5 kirby   e          0.0398 #>  6 kirby   f          0.0477 #>  7 kirby   g          0.0378 #>  8 kirby   h          0.0398 #>  9 kirby   i          0.0219 #> 10 kirby   j          0.0298 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby                0.111             0.0556             0.0556 #> 2 mario                0                 0                  0.0833 #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0.111  #>  2 kirby   a          cd38    0.0556 #>  3 kirby   a          cd34    0.0556 #>  4 kirby   a          cd19    0      #>  5 kirby   b          cd45    0.111  #>  6 kirby   b          cd38    0.111  #>  7 kirby   b          cd34    0      #>  8 kirby   b          cd19    0.111  #>  9 kirby   c          cd45    0.235  #> 10 kirby   c          cd38    0.176  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]   11   85  187   66  572  280   52  231  957   614 #>    [2,]  273  116  761  516  197  464  731  301  389   371 #>    [3,]  340  825  186  263  911  571  809  603  865   711 #>    [4,]  179  941  405  879  863  777  754  442  206   135 #>    [5,]  193  236  477  650  939  539  963  787  240   218 #>    [6,]  811  384  624  357  887  461  104  981  740   654 #>    [7,]  562  424  172  715  615  537  814  914  184   743 #>    [8,]   16  980  563  174  690  351  129  107  599   538 #>    [9,]  199  779  831   37  456  693  618  238  561   429 #>   [10,]  882  792  527  733  623  318  880  320  727    32 #>   [11,]    1  231   66   85  410  187  435   52  642   957 #>   [12,]  871  428  891  511  652  448  310   92  355   893 #>   [13,]  490  691  370  723  553  525  158  427  109   244 #>   [14,]  135  602  964  206  599   98  351   72  969   666 #>   [15,]  220   48   22  347  606  502  938  455  481   485 #>   [16,]  563  690    8  980  445  601  129  978  107   269 #>   [17,]  814  715  983  525  919  723   94  192  562   757 #>   [18,]  356  696  726  255  254   56  382  496  150   675 #>   [19,]  168  954  942  788  624  357  609   60  734   887 #>   [20,]  598  252  682  910  992  636  610  169  656   508 #>   [21,]   71   67  223  944  669  886  812   22  658   293 #>   [22,]  502  606  938   15  220  585  944  293  203   421 #>   [23,]  432  649  918  931  964  341  997  386  331   683 #>   [24,]  837   83  108  884  821  844  759  796  672   940 #>   [25,]   34  841  956  655  590  296  767  965  807   459 #>   [26,]   91  840  217  826  803  704  399  823   53   375 #>   [27,]  294  766  693  227  991  456  568  838  933   103 #>   [28,]  495  300   25  459  325  921  956  841  655   962 #>   [29,]  982  334  888  290  554  241  553  278  985   315 #>   [30,]  207  386  776  390  462  900  952  890  610   466 #>   [31,]  830  194  611  724  513  402  906  191  498   592 #>   [32,]  727  527  671  630   75  320   51  725  354   201 #>   [33,]  916  197  371  452  575  367  797  405  710   362 #>   [34,]   25  590  296  841  767  965  109  655  268    59 #>   [35,]  719  378  131  763  604  329  491  948  826   906 #>   [36,]  927  903  754  741  391  910  289  520  636   941 #>   [37,]  736  779  238  199    9  545  756  831  339   272 #>   [38,]  745  772  183  747  499  870  861  858  279   372 #>   [39,]  218  105  193  477  868  824  323   69  561    68 #>   [40,]  560  523  377  509  304  542  306  468  827   139 #>   [41,]  539  530  667  193  784    5  167  477  312   437 #>   [42,]  771   93  164  365  329  844  397  131  796   528 #>   [43,]  768  631  182  656  682  316  858  836  864   833 #>   [44,]  395  748  749  669  433  597  110  931  196    76 #>   [45,]  746  362  779  736  764  258  452  710  339   367 #>   [46,]  467  795  307  251  646  808  209  292  895   744 #>   [47,]  389  567  602  253  998  135  303  847  613   761 #>   [48,]   15  347  220  455  481  485  790  967  711   195 #>   [49,]  875  245  920  225  660  751  414  866  611   399 #>   [50,]  404  972  497  904  817  983  584  159  267   424 #>   [51,]  201  178   57   75  671   32  320  725   70   354 #>   [52,]  957  302  614  289   66  863  187  777  483   435 #>   [53,]  100  945  375  102   91  823  775  658  217    26 #>   [54,]  836  327  270  861  554  406  286  800  745   229 #>   [55,]  997  649  676  670  141  634  781  758  952   458 #>   [56,]  877  150  496  475  541  443  356  617  266   726 #>   [57,]  320  178  198   51   70   75  480  601  725   170 #>   [58,]  966  806  876  637  738  547  177  831  436   398 #>   [59,]  334  965  956  841  290  934   34   25  553   286 #>   [60,]  363  734  249  325   19  678  633  716  767   954 #>   [61,]  541  880  318   69  617  266  859  824   88   792 #>   [62,]  643  580  250   77  161  198  507  271  601    57 #>   [63,]  162   81  140  260  850  785  871  163  486   984 #>   [64,]  416  845  962  674  716  325  152  355  855   281 #>   [65,]  625  413  591  253  211  519  663  978  484   388 #>   [66,]   52  957  302   11  614  483  993  863    1   435 #>   [67,]  658  375  886   21  399  944  918  812   91   276 #>   [68,]  896  318  236  472  963  539  824  937  930   650 #>   [69,]  323   61  824  541  544  475  750  105  617   616 #>   [70,]  178  198   57   51  320  201  123  494   75   450 #>   [71,]   21  223  504  648  669  629  996  324  938   869 #>   [72,]  538  666  912  361  995  351  829  579  964    14 #>   [73,]  127  422  788  942  753  628  243  954  633   873 #>   [74,]  835  262  454  123  201  492  564  128  400   543 #>   [75,]  725  320  527   57   32   51  727  282  178   170 #>   [76,]   86  196  749  110  722   44  457  748  665   418 #>   [77,]   62  679  161  217  198  494  250  271  349   977 #>   [78,]  175  343  114  524  302  392  993  702  957   913 #>   [79,]  117  571  755  569  848  380  112  894  909   752 #>   [80,]  275  350  843  943  925  119  500  522  137   688 #>   [81,]  802  162  850  984   63  425  785  923  229   163 #>   [82,]  385  987  157  700  969  748  918  786  579   619 #>   [83,]   24  796  844  940  837  108  164  821  771   884 #>   [84,]  248  653  371  521  116  197  575    2  165   393 #>   [85,]  187    1   11  572  614  707  435  270   52   246 #>   [86,]   76  196  749  665  722  110  317  134  457   638 #>   [87,]  337  586  444  173  422  853  234  687  208   222 #>   [88,]  266   61  369  343  774  739  880  114  226   859 #>   [89,]  670  155  954  716  331  609  952  166  649   788 #>   [90,]  986  398  558  574  991   95  762  376  641   583 #>   [91,]   26  803  217  840   53  823  399  375  826   658 #>   [92,]  310  652  893  428  126  355  677  448  905    12 #>   [93,]  771  164   42  365  796  844  815  329  298   420 #>   [94,]  192  999  244  366  862  158  407  328  919   189 #>   [95,]  583  574  398  641  558  376  991   90  577   799 #>   [96,]  637  219  738  699   90  436  728  946  876   374 #>   [97,]  747  557  745  231  274  870  473  270  921   642 #>   [98,]  206  971  135  781    4  964   14  761  423   602 #>   [99,]  712  728  966  238  408  374  831   58  545   637 #>  [100,]  945  823   53  102  775  217  677  959  271    91 #>  [101,]  743  128  955  240  766  708  725  336  319   172 #>  [102,]  775   53  945  100  349  217  243  506  823   679 #>  [103,]  214  492  813  780  621  440  543  529  463    74 #>  [104,]  384  461  811  820  138    6  913  656  910   462 #>  [105,]  218  294   39   69   27  868  787  766  693   544 #>  [106,]  859  305  880  881  114  792  882  702  593   727 #>  [107,]  253  129  602  555   47    8  514  135   16    65 #>  [108,]  884  815  844  759   24   83  837  518  269   164 #>  [109,]  158  590  268  965  370  244  999   94  192   767 #>  [110,]   76  196  749  570   86  748   44  722  419   395 #>  [111,]  346  190  702  833  780  372  872  440  279   391 #>  [112,]  515  400  381  128  262  848  874  955  835   454 #>  [113,]  705  928  795  895  744  501  251   46  209   566 #>  [114,]  524  565  702  343  106  305   78  392  881   627 #>  [115,]  746   45  779  362  238  452  701  659  429   797 #>  [116,]  197    2  686  504  330  273  464  301  516   731 #>  [117,]   79  752  335  360  950  976  755  353  304   569 #>  [118,]  588  460  403  672  335  414  769  819  752   360 #>  [119,]  213   80  275  137  122  603  350  186  843   522 #>  [120,]  839  927  179  442  941  732   36  483  741   754 #>  [121,]  143  842  564  905  852  228  455  262  125   123 #>  [122,]  308  498  256  137  689  556  307  592  569   194 #>  [123,]   74  450  201  262  694  543  178  143   70   835 #>  [124,]  391  632  750  475  877  346  517  616  927   111 #>  [125,]  905  857  652  310  977  549  508  893  202   798 #>  [126,]  293  549  310  893   92  798  658  652  959   677 #>  [127,]  628   73  422  753  243  788  815  844  942   586 #>  [128,]  101  955  400  381  112  515   74  835  262   454 #>  [129,]  411  412  211  445   16  563  107    8  690   520 #>  [130,]  778  947  532  796  298  415  771   83  449    42 #>  [131,]  378   42  482  771   35  329  365   93  164   844 #>  [132,]  188  370  278  594  417  678  478  315  241   573 #>  [133,]  181  657  968  486  974  892  737  510  798   686 #>  [134,]  418  567  242  413  710  165  484  722  197   196 #>  [135,]  602  761   47  206  514  612   14  107  389    98 #>  [136,]  369  524  870  343   78  673  392  747  632   832 #>  [137,]  556  307  925  275  924  256  848  843  122   684 #>  [138,]  654  259  890  384  981  264  104  820  811     6 #>  [139,]  509  560  304  976  865  828  117   79  801   468 #>  [140,]  212   63  622  535  162  962  163  785   81    64 #>  [141,]  758  781  458  897  386  776  971   30  846   207 #>  [142,]  873  506  633  678  734  102  948  417  775   906 #>  [143,]  564  121  262  455  835  973  123  454  842   195 #>  [144,]  336  621  214  933  688  103  986  577  454   463 #>  [145,]  345  159  497  533  498  401  604  904   31   427 #>  [146,]  512  490  427  719  678  633  249  763  635   166 #>  [147,]  822  989  914  924  267  854  684  929  743   431 #>  [148,]  329  918  528  700  987  803  826  840  164    93 #>  [149,]  862  936  645  953  328  348  366  192  615    94 #>  [150,]   56  877  496  475  617  541  323  356  443   313 #>  [151,]  800  257  448  554  804  529  543  729  511   852 #>  [152,]  845   64  416  648  212  140  535  622  634   962 #>  [153,]  394  774  958  792  593  715  235  318  615   733 #>  [154,]  915  720  760  216  667  701  922  561  784   379 #>  [155,]  609  954  453   89  716  952  942  788  331   355 #>  [156,]  801  210  828  681  866  608  540  402  865   689 #>  [157,]   82  683  385   23  918  812  931  619  987   597 #>  [158,]  109  268  590  370   94  999  244  364  965   192 #>  [159,]  497  573  983  533  904  498  267   50  972   929 #>  [160,]  589  539  937  472   68  947  718  935  235   530 #>  [161,]  250   62  580  518  643   77  507  217  198   403 #>  [162,]   63  850   81  785  891  871  486   12  260   493 #>  [163,]  996  330  486  575  974  629   63  133  116   802 #>  [164,]  771   93  844  796   42  815   83  108  940   628 #>  [165,]  710  248  134  418  451  197  665   84  789   344 #>  [166,]  670   89  845   60   64  281   19  716  325   587 #>  [167,]  784  667   41  720  193  477  530  306  377   379 #>  [168,]  740   19  296  357  624  342  767  176    6   887 #>  [169,]  423  992  610  503  900  390  246   20  466   598 #>  [170,]  282  816  184   75  480   57  320  725  550   623 #>  [171,]  406  861  229  800  813  327  699  738  806   838 #>  [172,]  319  309  743  725  562  282    7   75  537   170 #>  [173,]  234  687  337  397  582   87  586  127  958    73 #>  [174,]  351    8  599   16  538  980  129  563  579   690 #>  [175,]   78  913  993  951  384  302  392  114  104   702 #>  [176,]  740  364  593  261  342  586  168  565  981   624 #>  [177,]  429  782  283  806  783  901  923  280  547   367 #>  [178,]   70   57   51  198  201  320  450   75  123   725 #>  [179,]  941  839    4  442  998  754  120  879  741   405 #>  [180,]  295  420  589  718  538  465  235  995  298   815 #>  [181,]  133  938  486  798  968  220  737  510  657   842 #>  [182,]  768  864   43  315  448  807  554  428  631   151 #>  [183,]  372  861  270  572  279  745  406   38  872    54 #>  [184,]  816  170  550  282  955  172  896  480  358   472 #>  [185,]  973  737  968  284  842  455  534  143  434   596 #>  [186,]  340  263  603  571  809    3  799  909  368   894 #>  [187,]   85  614  289   52  777  572    1  863  435   754 #>  [188,]  594  478  278  132  729  315  644  417  506   883 #>  [189,]  192  244  594  934  328  914  631  573  370   366 #>  [190,]  605  872  111  346  440  396  741  630  833   903 #>  [191,]  421  402  502  830  276  606  883  611  194   585 #>  [192,]   94  189  328  244  862  366  919  999  407   268 #>  [193,]  477    5  218   39  311   41  530  539  708   236 #>  [194,]  724   31  402  191  592  830  697  278  256   188 #>  [195,]  288  333  988  663  455  973  770  559  143   481 #>  [196,]  749  722   76   86  110  242  418  134  419   514 #>  [197,]  116    2  330  371  686   33  389  567  464   818 #>  [198,]   57  178  643   70   62  403  320  601  769   988 #>  [199,]    9   37  618  456  736  779  831  693  561   568 #>  [200,]  387  849  514  612  559  433  647  242  595   507 #>  [201,]   51  450  178  123  605   74  354  671  630   694 #>  [202,]  508  549  613  125  977  598  694  992  301   464 #>  [203,]  606  421  977  905  494  502  652  125  310   347 #>  [204,]  710  452  362  165  248   33  438  451   45   916 #>  [205,]  782  488  425  231    1   11  280  923  642   224 #>  [206,]   98  135  971  423  602  964    4  761   14   666 #>  [207,]  952  386   30  453  900  466  610  390  462   971 #>  [208,]  265  548  259  890  586  357  654  422  138   753 #>  [209,]  689  646  744  402  251  368  307  907  724   210 #>  [210,]  402  911  585  689  156  711  967  191  907   540 #>  [211,]  591  412  129  519  445  411  561   65  625   520 #>  [212,]  140  622  152   63  535  648   64  785  629   962 #>  [213,]  603  522  340  186  263  986  571   90  809   545 #>  [214,]  813  558  574  103  991  463  398  838  492   336 #>  [215,]  900  945  237  423  100  271  548  551  462   823 #>  [216,]  922  312  667  530  474  437  154  720  915   379 #>  [217,]  823   26   91  102   77  775  100  803  161   945 #>  [218,]   39  105  193  477    5  787  650  868  824    69 #>  [219,]  946  917  699  960  688   96  885  772  804   738 #>  [220,]   15  938   22  967  585   48  455  798  606   181 #>  [221,]  950  698  570  552  335  660  419  668  485   647 #>  [222,]  853   87  337  342  168  176  208  740  586   261 #>  [223,]  324  516  293  886  634  629   71   21  535   126 #>  [224,]  280  483    1  834   66   11  957   52  302   205 #>  [225,]  611  502  353  276  944  347  866  485  875   828 #>  [226,]  774  266  739  726  961  264  889  255  675   859 #>  [227,]  299  831  838  517  338  568   27  693  618   294 #>  [228,]  842  907  852  121  891  471  737  905  968   510 #>  [229,]  327  800  473  406  850  171  232   54  861   984 #>  [230,]  278  646  888  594  804  471  808  852  188   478 #>  [231,]   11  642  410  270    1   85  557  572   97   747 #>  [232,]  501  229  471  566  800  247  436  473  804   327 #>  [233,]  408  294  470  728  463  762  885  933  299    27 #>  [234,]  397  173  851  582  365  771   42  235  295   628 #>  [235,]  937  718  465  878  295  589  733   10  851   623 #>  [236,]    5  963   68  650  539  358  348  896  240   939 #>  [237,]  352  908  349  551  820  900  215  462  654   753 #>  [238,]  779   37  712    9  199  545  736  831   99   701 #>  [239,]  415  932  706  817  130  827  947  542  778   287 #>  [240,]  101  766  358  955  930  708  311  743  939   128 #>  [241,]  985  982  278   29  478  553  363  249  132   691 #>  [242,]  200  559  514  418  413  770  433  333  612   134 #>  [243,]  349  102  775  856  217  823  628  908   77   127 #>  [244,]  366  192  189   94  723  370  109  334  965   691 #>  [245,]  920  660  875   49  698  399  221  414  751   840 #>  [246,]  503  703  707  466  390  169  818  314  731    20 #>  [247,]  641  529  804  577  121  800  842  799  228   564 #>  [248,]   84  165  197  653  116  710  371   33  393   504 #>  [249,]  678  363  417  478  315   60  697  142  734   633 #>  [250,]  161   62  580  518  507  643   77  217  198   269 #>  [251,]  809  744  307  209  646  799  566  368  186   641 #>  [252,]  847  903   20  354  605  694  613  805  910   598 #>  [253,]  107   47  998   65  941  847  602  903  536   520 #>  [254,]  696  313  496  732  150  717  898   56   18   794 #>  [255,]  726  675  382  226  264  356  889  138  259   266 #>  [256,]  592  308  556  368  431  402  894  194  689   569 #>  [257,]  543  836  440  151  529  492  833  450  123   682 #>  [258,]  555  277  442  362  765  367  179  665  567   446 #>  [259,]  138  640  654  265  890  551  361  820  548   912 #>  [260,]  469  850  871  642  321   63  707   12  162   984 #>  [261,]  364  176  394  337  664  593  740  565  158   999 #>  [262,]  454  564  835  400   74  515  143  123  577   112 #>  [263,]  340  186  571  603    3  583  909   79  380   809 #>  [264,]  138  981  739  384  226  593  654  259  675   740 #>  [265,]  208  259  890  548  773  361  626  138  640   654 #>  [266,]  226  889  726   56   88   61  541  859  774   356 #>  [267,]  854  989  584  431  147  914  424  479  644   994 #>  [268,]  109  158  590  965  627  999  316  919  192   631 #>  [269,]  601  623  759  690  480  250  108  518  884   550 #>  [270,]  572  183  861   54  372  231   85  745  410   642 #>  [271,]  823  551  100   77   62  945  908  959  580   215 #>  [272,]  736  756   37  379  339  755  484  764  438   263 #>  [273,]  516    2  761  464  301  433  849  549  293   959 #>  [274,]   97  473  806  436  747  171  183  984  373   861 #>  [275,]  925  843  137  350  688   80  307  297  144   219 #>  [276,]  866  944  611  191  830  502  225   22  421   606 #>  [277,]  258  742  555  760  446  638  411  717  442   107 #>  [278,]  230  478  188  594  241  132  697   29  888   982 #>  [279,]  832  372  517  183  632  346  111  299  702   872 #>  [280,]    1  620  224  338  177  572   11  782   85   832 #>  [281,]  587  962  453  952  716  207  670  325  155    30 #>  [282,]  170  623  320   75  759  725  816  309  184   172 #>  [283,]  429  367  979  177  783  901  339  438  452   199 #>  [284,]  810  973  979  303  694  396  596  185  613   576 #>  [285,]  947  821  796  269  837   24  472   83  287   108 #>  [286,]  807  316  745  858  913   54  554  469  965   836 #>  [287,]  285  713  940  947  570  751  796  660  439   698 #>  [288,]  195  333  973  413  455  185  559  663  770   143 #>  [289,]   52  614  302  187  957  927  391  863   36   754 #>  [290,]  334  934   29  888  982  960  691  553  244   554 #>  [291,]  401  482  949  533  972  497  706  778  582   983 #>  [292,]  808  691  290  230  467  982  278  888   29   297 #>  [293,]  126  658  549  938  959  273  310  516  798    22 #>  [294,]   27  766  299  105  933  227  408  233  838   693 #>  [295,]  180  420  589  718  235  465  815  298  878   538 #>  [296,]  767   34  841  590  807  168  887    6  624   740 #>  [297,]  688  953  929  366  843  925  936  573  924   808 #>  [298,]  420   93  295  449  771  180  164  796   42   589 #>  [299,]  838  227  780  463  517  294  279  346   27   372 #>  [300,]  557  495  921   28  642   97  962  260  410   231 #>  [301,]  464  818  549  389  703  273  202  731  503   613 #>  [302,]  957   52  289   66  993  614  483  863  175    78 #>  [303,]  613  847  694  426  284  389  536  396  818    47 #>  [304,]  976  509  117  335  950  439  419  752  668   468 #>  [305,]  881  627  106  593  114  702  565  981  631   316 #>  [306,]  377  542  926  939  487  358  360  899  311   662 #>  [307,]  646  137  467  251  209   46  556  808  689   275 #>  [308,]  256  828  592  689  402  368  569  894  122   498 #>  [309,]  319  172  725  537  282   75  743  562  914    70 #>  [310,]   92  652  893  126  905  125  428  857  677   508 #>  [311,]  708  358  955  240  128  477  662  519  101   381 #>  [312,]  437  530  662  216  474  439  685  922  379   819 #>  [313,]  717  732  150  496  323  412  475  411  254   617 #>  [314,]  466  390  246  777  971  503  731  614  435   863 #>  [315,]  864  182  448  768  188  478  363  428  249   873 #>  [316,]  858  631   43  881  286  833  554  322  702   651 #>  [317,]  665  457   14  765   86  521   98  709  206   135 #>  [318,]  896  792  937   10   61   68  880  882  527   550 #>  [319,]  172  309  725  743   75  727  833  101  562   615 #>  [320,]   75   57  725  527   32  178  282   51  727   198 #>  [321,]  469  435  461  913  951  610  614  187  410   656 #>  [322,]  651  858  780  933  499  328  833  316  934   103 #>  [323,]  475  616  877  868  541   69  443  639  150   520 #>  [324,]  223  516  293  126  273  629  634  649  886   931 #>  [325,]  526  655  962  716   60  587  363  807   64   281 #>  [326,]  878  695  889  829  382  639  882  912  443   733 #>  [327,]  473  229   54  406  861  800  850  171  984   270 #>  [328,]  862  192  407  919  615  322  651  499  189   562 #>  [329,]  148  528   93   42  365  164  771  628  341   844 #>  [330,]  731  818  703  575  503  596  301  116  464   197 #>  [331,]  609  954  788   53  155  432  945   89  633   341 #>  [332,]  855  985  478  578  697  883  471  511  278   241 #>  [333,]  195  770  559  288  988  663  485  668  978   975 #>  [334,]  290   29  934  965  554  982   59  553  244   888 #>  [335,]  950  752  221  668  118  552  360  353  485   117 #>  [336,]  144  400  986  577  214  621  454  128  558   101 #>  [337,]  173  261   87  176  586  364  687  740  234   961 #>  [338,]  620  750  517  227  616  868  783  872  832   391 #>  [339,]  764  484  438  736  756  979  283  199  413   534 #>  [340,]  186  263  603  571    3  809  213  583  799   909 #>  [341,]  432  528  661  331  329  422  148  127  918    73 #>  [342,]  740  176  168  673  264  384  565  357  739   296 #>  [343,]   78  114  739  524  369   88  565  175  392   124 #>  [344,]  789  451  869  504  165  248  974  686  418   657 #>  [345,]  145   31  159  498  604  497  513  533  491   427 #>  [346,]  111  190  872  780  517  372  702  391  440   833 #>  [347,]  481   15  353   48  502  485  606  455  874   203 #>  [348,]  963  936  236    7  149  896  424  930  645   615 #>  [349,]  775  679  243  102  237  908   77  677  352   682 #>  [350,]  925  275  500  926  762  144  688  986  787   522 #>  [351,]  538  599  174  579    8   72  995  912   14   829 #>  [352,]  908  237  654  820  551  753  349  981  811   357 #>  [353,]  485  347  414  481  460  335  118  225  950   647 #>  [354,]  630  805  450  252  201  605   32   51  727   178 #>  [355,]  716  416   92  428  674   12  871  310  155   511 #>  [356,]   56  726  266  150   18  496  675  255  877   226 #>  [357,]  624    6  811  887  740  384  654  981  352   942 #>  [358,]  955  311  240  899  708  184  816  939  101   128 #>  [359,]  974  657  892  344  434  133  451  504  869   996 #>  [360,]  752  975  819  769  588  662  335  460  118   381 #>  [361,]  640  666  912  829   72  259  695  636  551   538 #>  [362,]   45  258  797  710   33  204  452  746  916   367 #>  [363,]   60  249  678  315  734  241  864  325  655   526 #>  [364,]  261  176  394  593  664  158  740  337  268   999 #>  [365,]   42  528   93  771  329  164  422  444  234   628 #>  [366,]  244   94  192  189  862  723  328  934  297   999 #>  [367,]  536  429  283  998  426  879  405  783  901   446 #>  [368,]  894  909  907  256  592  689  308  402  209   967 #>  [369,]  524  114  343   88  632  392  565   78  702   664 #>  [370,]  723  132  109  244  158  525  189  691  192   590 #>  [371,]  575  197  916    2   33  405  731   84  116   330 #>  [372,]  183  279  872  572  111  346  861  780  270   702 #>  [373,]  473  232  501  436  327  489  229  921  984   274 #>  [374,]  637   96   99  728  966  408   58  762  233   806 #>  [375,]  658   53   91  948   26  826  886  704  100   102 #>  [376,]  618  558  991  574  693  545   95  398  986   336 #>  [377,]  306  542  360  523  662  926  487  899  358   939 #>  [378,]  131   35  719  763  329   42  482  771  844   127 #>  [379,]  474  922  447  625  380  755  312  662  638   685 #>  [380,]  381  755  975  112  571  752  360  400  835   333 #>  [381,]  975  112  128  663  988  769   51  835  400   178 #>  [382,]  695  912  726  326  878  935  255  675  889   640 #>  [383,]  851  718  235  589  607  878  226  935  266   774 #>  [384,]  811    6  104  981  138  461  357  624  887   654 #>  [385,]   82  748  457  969  599  786  579  597   14   395 #>  [386,]  207  781   30  952  971  900  423  215  206   390 #>  [387,]  200  507  580  849  647  612  643  595  959   514 #>  [388,]  591  568  605  519  979  536  396  426  671   618 #>  [389,]   47  464  818  567  301  303  613  847  703   879 #>  [390,]  466  777  246  314  169  610  503  462  900   971 #>  [391,]  124  927   36  289  616  741  475  346  877   190 #>  [392,]  524  565  627  114  175   78  702  305  673   881 #>  [393,]  653  248   84  789  165  344  521  116  665   451 #>  [394,]  774  153  664  593  261  364  739  961  565   176 #>  [395,]   44  748  669  597  931  433  749  969  786   612 #>  [396,]  694  605  810  426  576  190  613  284  440   847 #>  [397,]  234  771  582  532   42  173  164   93  815   844 #>  [398,]  574  558  991  214   90  813   95  738  376   838 #>  [399,]  840  803   91   26  920  414  826  647  245   658 #>  [400,]  515  454  262  112  835  128  577  564   74   336 #>  [401,]  533  291  525  497  983  972  904  159  145    17 #>  [402,]  191  592  689  724  194  830  210  308  256   540 #>  [403,]  460  769  198  118  819  480  643  161  588   837 #>  [404,]   50  904  497  972  860  983  159  936  817   533 #>  [405,]  879  998    4  731  179  818  754  703  389   847 #>  [406,]  861  171  229  800  327   54  183  576  813   529 #>  [407,]  919  999  328  862  615  192  499  881  305   627 #>  [408,]  728  762  233  294   27  991  831  463  299   838 #>  [409,]  505  709  995   72   14  626  538  351  912   599 #>  [410,]  435  951   11  231  642  321  270  993   85    66 #>  [411,]  129  412  717  742  211  446  107  445  760   520 #>  [412,]  520  411  129  211  446  839  639  443  445   253 #>  [413,]   65  567  625  484  242   47  288  253  663   764 #>  [414,]  353  840  118  875  698  399  403  335  837   460 #>  [415,]  932  239  817  672  947  821  827  778  542   706 #>  [416,]  355  674  716   64  535  962  871  634   12    92 #>  [417,]  697  478  249  678  188  132  142  278  730   506 #>  [418,]  134  242  749  567  413  196  165  722  433   761 #>  [419,]  570  221  668  950  685  976  439  335  698   722 #>  [420,]  295  298  180   93  449  700  579  815  164   589 #>  [421,]  203  606  883  191  905  502   92  506  852   310 #>  [422,]  127   73  753  586  788  628  548  432  942   341 #>  [423,]  169  992  900  215  959  390  610  206  602   462 #>  [424,]  929    7  562  267  914  684  989  936  147   983 #>  [425,]  923  802  984  850  901   85   81  707  596   642 #>  [426,]  847  396  303  536  613  810  998  979  694   284 #>  [427,]  490  678  132  417  249  370  525  241  763   345 #>  [428,]   12   92  448  652  310  893  871  511  355   891 #>  [429,]  283  177  367  783  199    9  901  831  979   339 #>  [430,]  801  681  139  869  790  735  156  789  865   344 #>  [431,]  854  989  267  584  479  147  822  684  513   924 #>  [432,]  548  945  215  341  987  331  918  753  823   788 #>  [433,]  849  200  612  514  647  559  273  387  595   761 #>  [434,]  534  968  185  657  510  737  973  583  455   967 #>  [435,]  951  321  410  614   66  187   85   52   11   469 #>  [436,]  876  566  171  738  232  229  501  373  473   806 #>  [437,]  312  662  439  530  685  474  216  360  542   922 #>  [438,]  339  534  756  764  484  283  736  710  434   979 #>  [439,]  685  437  474  312  668  335  662  752  360   950 #>  [440,]  833  492  543  780  190  103  396  257  872   605 #>  [441,]  638  922  722  277  760  216  742  154   86   474 #>  [442,]  179  839  120    4  941  555  765  258  405   879 #>  [443,]  639  877  520  541  475  889  323   56  412   882 #>  [444,]  365   87  528  422  773  341  234   42  208   987 #>  [445,]  690  563   16  601  129  211  520   32  480   980 #>  [446,]  591  760  211  412  561  555  411  625  388    65 #>  [447,]  468  976  379  922  474  755  439  523  685   419 #>  [448,]  428  652  864  511  729   92  151   12  310   893 #>  [449,]   93  420  796  700  298  164  940  771   42   987 #>  [450,]  201  354  123  630  805  694  178  605  682    51 #>  [451,]  344  165  710  789  248  418  204  134  902   438 #>  [452,]   33  204  283  916  362  429  438  782  710   177 #>  [453,]  610  900  952  207  155  462  281  461  716   169 #>  [454,]  262  400  835  577  564  621   74  515  143   128 #>  [455,]  143  842  481  185  220   48  195  967  973   121 #>  [456,]  693  618  568  561  868  519  199  388   27   591 #>  [457,]  748  317  385   14  597  395   86   76   44   709 #>  [458,]  776  846   30  141  207  314  281  587  466   781 #>  [459,]  581  296  168   25  767  841   34  587   28   325 #>  [460,]  403  769  118  819  988  198  975  752  381   588 #>  [461,]  811  104    6  321  384  462  887  610  913   900 #>  [462,]  900  610  461  636  390  237  169  104   20   551 #>  [463,]  838  214  699  813  103  299  780  398  991   558 #>  [464,]  301  389  818  549  273  202  303  613   47     2 #>  [465,]  733  235  623  326  882   10  759  815  295   908 #>  [466,]  390  314  246  503  169  971  731  703  610   207 #>  [467,]   46  307  808  795  292  646  209  251  137   230 #>  [468,]  447  976  523  304  755  379  439  922  419   474 #>  [469,]  321  260  836   54  461  807  435  913  286    12 #>  [470,]  233  885  499  299  990  294  544  600  463   728 #>  [471,]  228  232  646  230  332  852  907  804  855   247 #>  [472,]  550  816  184  937  480  896  821  623  269   170 #>  [473,]  327  229  373  984  406  850   54  171  861   232 #>  [474,]  685  439  922  379  312  722  668  625  638   437 #>  [475,]  877  323  616  150  443   56  391  541  124   750 #>  [476,]  634  886  997  674   89  416  649  845  223   355 #>  [477,]  193    5  311  218  787  240  939   39  708   766 #>  [478,]  697  278  417  883  188  332  315  241  249   852 #>  [479,]  644  431  513  267  856  854  704  491  837   906 #>  [480,]  816  819  601  769   57  170  403  198  320   269 #>  [481,]  347  874  455   48  353  143   15  195  502   485 #>  [482,]  131  582  378  778  397   42  532  771  291   173 #>  [483,]  957   66  302   52  863  834  614  289  120   993 #>  [484,]  764  339  413  625   65  438  288  567  736   756 #>  [485,]  353  347  647  559  950   48  333  221   15   335 #>  [486,]  181  798  133  493  938  163  857  871  535   785 #>  [487,]  684  584  926  854  848  939  899  306  989   358 #>  [488,]  205  791  897  846  834  458   11  776  231    66 #>  [489,]  855  526  714  985  982  162  473  511  232   327 #>  [490,]  427  678  734  370  763  363  249  633   60   132 #>  [491,]  867  267  479  644  856   24   83  513  844   994 #>  [492,]  543  813  440  529  103   74  576  214  396   257 #>  [493,]  857  798  737  871  125  891  596  486  905   842 #>  [494,]  679  977  729   77  203   70  508  123  125   775 #>  [495,]  300   28  921  557  841   97  581  459  622   642 #>  [496,]  617  150   56  541  877  356  266  475  313   696 #>  [497,]  904   50  533  159  972  404  983  491  401   498 #>  [498,]  513  431   31  256  569  159  592  308  122   611 #>  [499,]  651  322  407  858  328   38  316  772  780   702 #>  [500,]  787  522  926  350  939  721  762  477  766     5 #>  [501,]  232  705  928  566  471  373  436  744  876   795 #>  [502,]  606   22   15  347  203  191  585  421  944   225 #>  [503,]  246  703  818  707  169  466  731  390  598   301 #>  [504,]  686  974  116  657  220  789  133  869  197    71 #>  [505,]  709  409  626   72  995   14  361  912  538   773 #>  [506,]  102  775  142  704  679  421  644   53  729   448 #>  [507,]  580  643  387   62  250  980  161  978  647   200 #>  [508,]  677  893  598  977  202  682  125  652  679   992 #>  [509,]  304  139  560  976  751  950  468  875  117   419 #>  [510,]  968  907  737  842  967  228  133  181  434   185 #>  [511,]  891   12  428  448  855  652  871  883   92   852 #>  [512,]  146  635  476  730  249  719  678  427  417   166 #>  [513,]  498  479  611  431   31  569  592  906  644   256 #>  [514,]  612  200  595  849  387  242  602  761  433   135 #>  [515,]  400  112  262  454  848  128  874  835  564   909 #>  [516,]  273    2  324  761  293  931  223  597  669   301 #>  [517,]  832  750  632  338  279  346  227  299  124   872 #>  [518,]  250  161  815  108  269  837  580  796  803   884 #>  [519,]  591  211  388  561   65  625  456  708   51   671 #>  [520,]  412  443  903   36  639   32  563  211  630   445 #>  [521,]   84  317  665  371  765  653  897   98  758   797 #>  [522,]  500  762  213  986  350  545  787  926   90   603 #>  [523,]  468  976  377  755   79  447  306  117  571   380 #>  [524,]  392  369  114   78  343  565  702  870  175   632 #>  [525,]  723  370  533   17  983  401  573  132  159   757 #>  [526,]  655  325  807  855  489  182  956   12  469   315 #>  [527,]   32  727   75   10  320  725  882  792  671   630 #>  [528,]  329  365  987  148  341   93   42  700  422   432 #>  [529,]  800  492  543  813  103  804  257  621  151   247 #>  [530,]  312  662  539  437   41  193  216  667  311   477 #>  [531,]  645  963  348  607  153  650  149  896  394   318 #>  [532,]  778  397  582  821   83  771   24  947  958   937 #>  [533,]  401  497  983  159  904  525  972   17  573   404 #>  [534,]  434  185  438  973  284  979  583  288   95   968 #>  [535,]  648  486  416  629  996  223  785  163  324   181 #>  [536,]  998  426  303  847  367  879  613  979  388   567 #>  [537,]  994  562  914  309  814  172  282    7  319   867 #>  [538,]  351   72  579  912  995  599  829    8  666   174 #>  [539,]   41  530  236  193   68    5  472  662  477   312 #>  [540,]  724  830  402  210   31  689  191  194  578   730 #>  [541,]   61  877  443  617   56  323  639  475  880   496 #>  [542,]  377  306  588  662  899  358  360  932  437   939 #>  [543,]  257  492  440  529  833  103  123   74  450   201 #>  [544,]  930  824   69  933  294  766   27  615  319   105 #>  [545,]  376  831   37  693  991  618   90  762  558   199 #>  [546,]  721  645  348  149  963  650  531  990  936   500 #>  [547,]  782  177  806  802  923   58  876  425  659    81 #>  [548,]  753  215  432  259  666  551  654  265  422   208 #>  [549,]  126  301  202  464  125  798  857  293  959   508 #>  [550,]  472  816  623  184  170  759  937  282  896   480 #>  [551,]  908  820  271  352  237  636  654  829  259   666 #>  [552,]  698  647  713  221  950  335  507  770  668   643 #>  [553,]  691  982  956   29  334  241  290  985  655   965 #>  [554,]  151  858  800   54  316  182  934   29  888   286 #>  [555,]  258  107  941  179  446  839  277  253  998   442 #>  [556,]  924  137  256  822  431  684  848  646  147   230 #>  [557,]  642  300   97  984  231  410  260  473  270   921 #>  [558,]  991  574  398  214  376  813  618   95   90   838 #>  [559,]  200  647  333  770  387  242  988  485  433   195 #>  [560,]  509  139   40  304  827  569  828  976  117   865 #>  [561,]  591  456  519  211  446  868  760  915  625   388 #>  [562,]  914  537    7  172  814  424  309  615  147   319 #>  [563,]   16  690  445    8  980  601  129  520  829   253 #>  [564,]  143  835  262  454  577  400  909   74  121   515 #>  [565,]  627  392  114  664  305  593  739  524  881   394 #>  [566,]  641  876  738  232  436  247  501  799  744   171 #>  [567,]   47  389  413  536  134  303  998  253   65   761 #>  [568,]  618  388  456  693  979  227  591  783  991   519 #>  [569,]  592  117  513  256  308   79  431  828  353   498 #>  [570,]  221  419  698  660  950  552  713  751  685   668 #>  [571,]  263  186   79  340  909  380  848  603  894   755 #>  [572,]  372  872  270  183   85  187    1  861  576   783 #>  [573,]  914  594  147  929  159  267  424  983  924   189 #>  [574,]  558  398  991  813  214   95  838  376  618   492 #>  [575,]  330  371  916  731  163   33  197  116  971   818 #>  [576,]  810  396  492  783  284  440  872  426  596   257 #>  [577,]  454  564  909  400  262  835  799  621  515   336 #>  [578,]  730  697  332  883  478  674  191  417  421   830 #>  [579,]  599  969  786  351  538  700  595   72    8   987 #>  [580,]  507  643   62  387  250  161  980  198  271    77 #>  [581,]  793  459  587  776  846  281  951  791  458   296 #>  [582,]  958  397  715  867  532  173  234  814  757   844 #>  [583,]   95  641  799   90  574  398  534  558  738   376 #>  [584,]  854  989  899  684  267  431  487  147  955   424 #>  [585,]  967  220  907   22  502  606  938  711   15   455 #>  [586,]  654  740  981  357  753  422  176   73  593   624 #>  [587,]  281  962  453  581  325  469  887  952  461   716 #>  [588,]  899  118  672  819  360  403  460  769  480   752 #>  [589,]  718  295  180  235  878  935  851  420  298   937 #>  [590,]  109  268  158  767  965   34  296   25  655   807 #>  [591,]  519  388  211   65  561  625  446  568  253   412 #>  [592,]  256  402  308  611  874  894  368  191  569   194 #>  [593,]  981  305  627  176  565  394  881  740  106   264 #>  [594,]  188  278  230  924  573  822  189  888  147   729 #>  [595,]  612  849  514  969  387  200  507  786  580   602 #>  [596,]  901  284  707  810  818  493  703  576  303   973 #>  [597,]  931  964  969  516  748  395  761  595  669   612 #>  [598,]   20  508  682  252  677  893  992  202  503   169 #>  [599,]  351  579  174  538  786    8  969   14  713   980 #>  [600,]  750  517  832  105  299  227  632  294  620   470 #>  [601,]  690  480  445  198  980   57  269   16  769   563 #>  [602,]  135   47  514  612  761  595  992  107  253   389 #>  [603,]  186  340  809  263  986  213   90  571  799   583 #>  [604,]  345   35  498  513  145  491  827  497   31   611 #>  [605,]  396  190  694  252  630  201  354  450  903   847 #>  [606,]  502  203  421   22   15  905  938  220  585   347 #>  [607,]  692  617   61   68  541  496  318  266  383    88 #>  [608,]  156  540  689  724  308  209  122  402  210   828 #>  [609,]  954  942  788  155  331  633  102  945  237   775 #>  [610,]  900  462  169  390  453   20  461  321  466   246 #>  [611,]  225  276  513   31  830  592  906  191  502   704 #>  [612,]  514  595  849  200  387  433  602  761  507   969 #>  [613,]  303  847  694  426  252  396  389  202  703   818 #>  [614,]   52  777  187  863  289  435   66  302  957    85 #>  [615,]  919  172  328  562  407    7  319  862  537   309 #>  [616,]  323  475  868  391  750  877  338  520  124   346 #>  [617,]  496  541  150   56   61   69  877  323  475   607 #>  [618,]  568  693  376  456  991  558  831  574  199   388 #>  [619,]  970   82  449  385  700  157  987  528  918   148 #>  [620,]  338  750  517  280  227  616  832  868  783     9 #>  [621,]  454  103  577  144  262  400  336   74  515   214 #>  [622,]  140  962  212  458  845  152   64  281  300   587 #>  [623,]  759  282  550   10  269  320  733  170  884   816 #>  [624,]  357  887    6  811  740  384  767  942  461   352 #>  [625,]   65  413  591  211  484  519  764  561  446   253 #>  [626,]  773  995  505  265   72  409  912  382  361   538 #>  [627,]  305  881  565  593  392  268  384  114  316   702 #>  [628,]  127  815  844  243  108  164  753  884   73   856 #>  [629,]  996  535  223  324  163  676  648  486   71   653 #>  [630,]  354  727   32  805  605  910  450  201  252   903 #>  [631,]   43  316  858  881  768  833  309  319  305   322 #>  [632,]  124  832  517  279  750  346   69  111  391   702 #>  [633,]  734  142  678  873  954  609  763  788  942    73 #>  [634,]  997  649  476  886  223  324  416  676  670    89 #>  [635,]  512  730  830  345   31  427  719  540  417   724 #>  [636,]   20  754  640  462  910  777  992  551   36   252 #>  [637,]   96  738   90  728  762  398   58  408  558   574 #>  [638,]  722  441  922  625  474  764  484  379  134   760 #>  [639,]  443  889  541  520  326  412  877  882   10   323 #>  [640,]  361  912  829  259  695  636  666  551   36   382 #>  [641,]  738  799  583   95  247  566  398   90  574   577 #>  [642,]  231  557  410  270   11  260  984   85  435   425 #>  [643,]  507  580   62  198  988  387  161  978  250   663 #>  [644,]  479  856  906  704  506  729  188  267  494   994 #>  [645,]  149  862  348  544  615  328  407  499  531   919 #>  [646,]  230  209  471  307  804  556  689  907  888   808 #>  [647,]  559  387  200  552  507  849  485  433  698   643 #>  [648,]  535  486  416  785   71  629  223  181  996   892 #>  [649,]  997  634  670  952  324   23   89  886  155   223 #>  [650,]  963    5  236   68  218  193  539   39  477   348 #>  [651,]  322  499  858  780  934  772  328  933  316   833 #>  [652,]  310  905  125  893   92  448  428  857  977   508 #>  [653,]   84  248  116    2  393  516  996  197  789   504 #>  [654,]  352  981  908  820  138  753  259  357  551   237 #>  [655,]  526  807  956  325  965   25  767  182  363    29 #>  [656,]  682  910   43   20  913  104  836  768  598   833 #>  [657,]  133  974  686  968  181  434  504  510  737   967 #>  [658,]  375  293   91   53  126  886  100   26  203   606 #>  [659,]  547  782  452  177  966   58  429  205  283   204 #>  [660,]  698  245  920  221  875  570  414  950  399   552 #>  [661,]  341   19  331  788   73  422  954   89  633   609 #>  [662,]  437  312  530  360  819  311  975  439  752   358 #>  [663,]  978  988  770  975  333  643  381  195  198    65 #>  [664,]  565  394  999  364  261  407  392  627  593   739 #>  [665,]  317   86  371  765  258  521  135  134  761   165 #>  [666,]  361   72  829  964  640  912  551  538  548   259 #>  [667,]  720  216   41  784  530  154  167  312  922   437 #>  [668,]  950  335  752  685  221  419  333  770  552   485 #>  [669,]  931  433  395  516  273   44  597  849  293    21 #>  [670,]   89  649  952  281  166  634  997  155  716   845 #>  [671,]   32  727   51  201  725   75  630  527  605   388 #>  [672,]  118  588  837  817   24  899  403  414  479    83 #>  [673,]  342  392  565  664  175  524  176  740  841    78 #>  [674,]  416  355  716   64  578  855  697  511   92   249 #>  [675,]  726  889  859  927  255   36  382  695  326   877 #>  [676,]  997  634  629  223  649  324  535  648  476    71 #>  [677,]  893  508  977  775  100  598  679  310   92   682 #>  [678,]  249  734  633  142  417  363  873  132  315    60 #>  [679,]  494  977   77  775  349  729  677  508  102   217 #>  [680,]  437  216  439  922  312  685  667  474  447   530 #>  [681,]  156  801  866   49  828  430  225  139  865   276 #>  [682,]  656  598   20  508  450   43  677  910  349   257 #>  [683,]  157  812   23  931  997  649  918  676   67   597 #>  [684,]  989  854  929  584  487  147  924  431  424   743 #>  [685,]  439  474  668  437  335  312  419  552  752   950 #>  [686,]  504  657  116  220  974  133  464  798  197   185 #>  [687,]  173  337   87  757  763  378  234   73  582   131 #>  [688,]  297  953  925  144  946  917  933  219  924   929 #>  [689,]  209  402  308  368  256  724  646  592  210   194 #>  [690,]  563   16  445  601  980  269    8  320   57   480 #>  [691,]  553  290  370  244  292   29  334  723  241   982 #>  [692,]  607  617  496  266  541   61  696  150   56   356 #>  [693,]  456  618   27  568  376  831  991  227  868   199 #>  [694,]  396  613  605  303  252  450  847  123  284   201 #>  [695,]  326  829  912  640  382  878   36  443  889   361 #>  [696,]  254  496   18  935  313  898   56  150  356   726 #>  [697,]  478  417  578  883  730  421  332  188  191   278 #>  [698,]  660  221  552  950  570  647  713  414  485   335 #>  [699,]  463  772  960  917  885  171  219  813  651   214 #>  [700,]  987  579  786  518  969  918  148  713  420   803 #>  [701,]  915  760  154  779    9  794  313  561  446   717 #>  [702,]  111  881  114  305  346  913  106  858  372   316 #>  [703,]  503  818  246  731  707  613  301  847  330   303 #>  [704,]  906   26  826  506   91  948  644  217  840   375 #>  [705,]  928  501  113  795  744  566  876  232  436   895 #>  [706,]  778  415  949  932   50  817  972  532  239   130 #>  [707,]  246  703  503  596  818   85  493  598  836   613 #>  [708,]  311  955  816  240  358  128  101  519   75    51 #>  [709,]  505  409   14  317   72  457   98  626  995   361 #>  [710,]  165  134  438  204  362  197   33  248  764   418 #>  [711,]  967  911  825  585   48  790  220  455  510   894 #>  [712,]  238  545   37   99  779  831    9  408  693   199 #>  [713,]  786  552  698  518  980  507  579  580  599   660 #>  [714,]  985  489  982  855  956  553  241  526  332   325 #>  [715,]  814  958    7  562  867  537   17  582  615   919 #>  [716,]  355  674  416  155  428  453   92   89  962    64 #>  [717,]  313  411  412  742  760  446  129  732  839   915 #>  [718,]  589  235  878  851  295  180  935  326  937   465 #>  [719,]   35  763  378  948  633  142  826  906  678   131 #>  [720,]  667  154  784  216  167  922  915   41  530   312 #>  [721,]  500  787  546  650    5  963  990  105  348   218 #>  [722,]  196  638  474  749  418  134  242   76   86   419 #>  [723,]  370  525  244  366  691  189   17   94  573   192 #>  [724,]  540  194  402  830   31  689  191  209  697   578 #>  [725,]   75  309  319  320  172  727  527   32   51   282 #>  [726,]  675  255  889  266  382  356  878  226   56   326 #>  [727,]   32  527  630   75  671  725  320  354   51   201 #>  [728,]  408  233  762  637  299  838  294  463  831   227 #>  [729,]  494  679  448  822  188  852  644  506  977   151 #>  [730,]  578  697  417  332  674  478  249  830  883   191 #>  [731,]  818  330  703  503  301  246  466  405  389   464 #>  [732,]  313  120  839  150  717  475  877  616  446    56 #>  [733,]  465  882   10  792  623  820  326  527  759   282 #>  [734,]  633  678  873  142  954   60  763  609  363   249 #>  [735,]  789   71   21  812  669  869  344  430  653   393 #>  [736,]  756   37  339  199  764  484  438  779  272     9 #>  [737,]  968  842  185  493  973  510  798  857  228   133 #>  [738,]  641  398  566  876  574  171   90  637  813    95 #>  [739,]  774  226  343  264  565  961  114  394   88   266 #>  [740,]  176  357  168  624  342    6  384  586  593   981 #>  [741,]  903  754  998   36  847  391  941  252  190   605 #>  [742,]  411  277  717  129  760  555  107  412  446   898 #>  [743,]  101  172  955  319  309  725  128  147  989   240 #>  [744,]  928  251  510  209  907  471  566  501  646   895 #>  [745,]   38  183  747  286   54  270  861  870  372   858 #>  [746,]   45  779  362  367  429  701    9  258  115   620 #>  [747,]  870   97  745   38  183  231  270  279  410   286 #>  [748,]  395   44  457  597  385  969  749  786  931   110 #>  [749,]  196   76  110  242  722   86   44  418  395   748 #>  [750,]  517  338  616  632  124  475  620  832   69   323 #>  [751,]  570  660  245  875  221  287  698  920  419    49 #>  [752,]  360  975  335  769  668  819  460  117  950   770 #>  [753,]  908  352  654  127  548  237  422  551  243   942 #>  [754,]  903  741  941  777  998   36  847  636  252   863 #>  [755,]  976  380  117  668   79  333  379  752  571   523 #>  [756,]  736  339  438   37  484  764  534  199  583    95 #>  [757,]  867  763  873  814  734   17  582   73  142   715 #>  [758,]  141  781  897   98  386  971  521  206  458   709 #>  [759,]  884  623  108  282  269  550  170  994  815   320 #>  [760,]  915  446  561  717  411  742  701  211  154   625 #>  [761,]  273  135    2  612  514  849   47  602  389   433 #>  [762,]  408   90  986  728  545  637  233  991  398   558 #>  [763,]  633  719  734  757  142   73  873  378  678   127 #>  [764,]  484  339  625  736  413  438   65  756  536   199 #>  [765,]  442  258  665  317  797  371    4   98  521   179 #>  [766,]  240   27  101  294  930  787  933  824  336   544 #>  [767,]  296  887  590  807  624    6  168  655  268   811 #>  [768,]  182   43  864  631  656  682  315  807  448   316 #>  [769,]  819  403  460  975  480  198  601  988  752   381 #>  [770,]  663  988  978  333  559  975  643  195  200   552 #>  [771,]   42  164   93  844  796  397   83  815  365   628 #>  [772,]  960  934  699   38  651  917  885  322  554   745 #>  [773,]  626  265  995  208   72  180  259  851  505   912 #>  [774,]  226  739  394  961  153  266   88  593  859   880 #>  [775,]  102  349  679  677  100  217  243  506  945    53 #>  [776,]  846  458   30  435  791  951  793  314  581    66 #>  [777,]  863  614  390  754  187  636   52  289  314   246 #>  [778,]  532  706  817   83  821  582  972   24  415   482 #>  [779,]  238   37    9  199  736  701   45  746  429   831 #>  [780,]  440  833  103  111  838  346  322  299  651   372 #>  [781,]  386  971  758   98  206  141  207   30  466   952 #>  [782,]  177  923  547  205  425  901  452  280  916   802 #>  [783,]  810  576  426  979  872  901  568  396  429   388 #>  [784,]  167   41  667  720  193  154  477  530    5   539 #>  [785,]  892  162  486  181  133   63   81  535  891   228 #>  [786,]  969  713  579  595  599  700  612  507  552   514 #>  [787,]  500  766  477  240  105  939  294    5   27   218 #>  [788,]  942  954  609   73  753  331  155  633  237   945 #>  [789,]  344  504  869  653  165  451   71  248  418   669 #>  [790,]   48  711  869   15  220  967   22  485  944   585 #>  [791,]  846  834  776  993   66  951  581  410  793   435 #>  [792,]  882   10  880  733  527  318  859  106  623   727 #>  [793,]  581  776   30  890  846  587  208  458  791   951 #>  [794,]  313  701  617  254  150  732  496   39  218   717 #>  [795,]   46  113  895  467  501  705  928  744  251   232 #>  [796,]  940  164   83  771  285  108  844   93  518   837 #>  [797,]  916  362   33  765  371  258  897  452  575   405 #>  [798,]  857  493  938  486  549  905  125  181  737   126 #>  [799,]  641  577  909  583  809  247   95  986   90   603 #>  [800,]  529  229  151  804  406  554  257   54  247   171 #>  [801,]  156  865  828  825  210  911  681  869  790   711 #>  [802,]  425  923   81  850  901  984  596  707  330   162 #>  [803,]  840   91   26  823  399  217  161  250  826   100 #>  [804,]  888  529  800  151  247  621  230  121  577   471 #>  [805,]  354  630  450  252   20  910  682   77   62   320 #>  [806,]   58  171  177  966  406  861  923  783  838   738 #>  [807,]  286  655  182  767  526  768  965  469  296   887 #>  [808,]  292  230  888  278  691  646  290  307  467   297 #>  [809,]  251  799  603  186  340  641  583  263  566    90 #>  [810,]  576  284  979  396  426  783  596  694  901   492 #>  [811,]    6  384  461  624  357  887  104  981  138   654 #>  [812,]  931   67  669   21  683  918  395   44  157   597 #>  [813,]  214  574  492  103  838  398  529  558  463   991 #>  [814,]  715  537  562  867   17  958  919  914    7   994 #>  [815,]  108  628  844  884  164  518  759  269  796   465 #>  [816,]  480  184  170  550  282   75   57  320  708   472 #>  [817,]  672  415   50  932  584  588  899   24  821   837 #>  [818,]  703  731  301  389  503  464  330  613  303   246 #>  [819,]  769  480  975  360  403  460  601  588  752   816 #>  [820,]  908  352  551  654  104  981  910  138  237   636 #>  [821,]  285  947   24   83  472  837  550  796  108   269 #>  [822,]  147  924  989  729  874  621  262  914  515   594 #>  [823,]  100  945  217  271  803   91   53  102   26   775 #>  [824,]  930  527  671  544   69  708   32  727   61   323 #>  [825,]  911  711    3  967  368  790  894  801  869    48 #>  [826,]   26  704   91  948  840  217   53  375  803   906 #>  [827,]  569  672  817  415  498  513  118  588  932    50 #>  [828,]  308  225  592  402  569  368  156  256  801   210 #>  [829,]  912  695  640  361  666  326  551  538  563    72 #>  [830,]   31  191  276  611  724  402  540  194  866   906 #>  [831,]  618  227  991  545  693  199    9  558  376   568 #>  [832,]  279  517  632  750  124  372  299  183  338   346 #>  [833,]  440  780  543  111  858  257  103  190  450   836 #>  [834,]  483  993   66  791  957  302   11   52  224   846 #>  [835,]  564   74  262  454  400  143  577  515  123   128 #>  [836,]   54  257  656  833  440  682   43  469  707   321 #>  [837,]   24   83  672  108  884  403  940  518  118   796 #>  [838,]  463  299  813  214  991  780  574  227  103   558 #>  [839,]  120  179  941  442  412  555  520  927  741    36 #>  [840,]  399   26  803   91  414  826  217  704  161   920 #>  [841,]   34  296   25  807  286  767  655  956   59   459 #>  [842,]  737  228  121  968  905  455  907  185  143   510 #>  [843,]  275  925  297  137  688  307   80  350  808   219 #>  [844,]  108  164   83  815  628  771  884   24  796   837 #>  [845,]  152   64  416  166  670  634  962  674  476    89 #>  [846,]  776  458  791  435  951   66   30  410  993   581 #>  [847,]  613  252  998  303  426  903  694  754  879   396 #>  [848,]  515  112  400  909  577  874  571  454  336   487 #>  [849,]  612  200  433  387  595  514  959  647  559   761 #>  [850,]  984  162  229   81  260  802  327  425  923    63 #>  [851,]  718  383  235  589  180  234  295  878  961   226 #>  [852,]  883  228  905  121  421  448  729  907  842   652 #>  [853,]   87  222  773  444  337  961  851  208  342   586 #>  [854,]  584  989  431  684  267  147  899  929  424   822 #>  [855,]  511  489  332  891  526  985   12  471  162   982 #>  [856,]  243  644  994  884  217  867   77  679  704   479 #>  [857,]  493  125  798  905  652  310  549  893  737   871 #>  [858,]  316  631  833  322  651  554  286   43  881   702 #>  [859,]  880  106  882  675  889  792  266  733  443    61 #>  [860,]  404   50  904  972  936  487  817  348  932   497 #>  [861,]  406  183  171  270   54  372  327  572  229   745 #>  [862,]  328  407  192  149  919   94  615  999  366   645 #>  [863,]  777  614   52  754  289   66  187  957    4   390 #>  [864,]  315  182  768  448  428   43  873  506  775   349 #>  [865,]  801  828  825  156    3  139  308  911  210   368 #>  [866,]  276  944  830  225  611  191  502  402   22   210 #>  [867,]  994  814  491  537  856  715  958  267  757   884 #>  [868,]  616  323  456  561  693  568  338  475  750   227 #>  [869,]  790  911  711  504  967  344  825  789  657   974 #>  [870,]  747  745  279  524   38  183  392  372  231    78 #>  [871,]   12  891  428  493  857  511  310  355  652    92 #>  [872,]  190  372  572  111  346  440  576  783  396   605 #>  [873,]  142  734  633  243  864  102  506  349  678   942 #>  [874,]  481  515  262  112  822  143  564  909  347   121 #>  [875,]  245   49  660  920  414  698  950  225  221   353 #>  [876,]  436  566  738   58  641  171  806  232  501   547 #>  [877,]  475   56  443  150  323  541  391  616  639   124 #>  [878,]  326  889  935  718  382  695  726  235  639   882 #>  [879,]  405  998  847  754  536  179  389  703  941   426 #>  [880,]  859  792  882  106   61  541   10  527  318   889 #>  [881,]  305  106  702  627  316  631  114  858  407    43 #>  [882,]   10  792  733  880  859  527  889  727  106   326 #>  [883,]  852  421  697  478  511  448  905  652  191   203 #>  [884,]  108  759  815   24  994  856  844  623  837   269 #>  [885,]  917  946  699  772  470  233  463  651  960   499 #>  [886,]  375  658  634  476   67   53  223  293  155   331 #>  [887,]  624    6  811  357  461  767  384  942  768   453 #>  [888,]  804  230   29  290  982  554  151  594  934   960 #>  [889,]  878  326  266  443  726  675  882  639  859   880 #>  [890,]  138  259  384  104  265  462  811   30  654   640 #>  [891,]  511   12  871  228  652  428  493  857  905   448 #>  [892,]  133  785  181  657  974  510  486  968  928   967 #>  [893,]  677  310  508  652   92  977  428  126  125   598 #>  [894,]  368  909  907  592  874  481  455  256  967   585 #>  [895,]  928  795  113  744  209  471  501  332  646    46 #>  [896,]  318   68  550  184  937  472  930  792  816    10 #>  [897,]  575  141  971  371  781  765  758  797  521    98 #>  [898,]  742  717  696  935  254  411  174  313  277   409 #>  [899,]  588  584  358  854  955  819  118  460  360   403 #>  [900,]  462  610  169  215  453  237  390  423  207   461 #>  [901,]  596  810  426  783  923  576  802  425  707   979 #>  [902,]  451  344  204  272  359    3  710  438  165   756 #>  [903,]  741  754  252   36  847  998  941  605  520   354 #>  [904,]  497  404   50  533  159  972  983  860  936   498 #>  [905,]  125  652  310  857  203  842  798  852  606   121 #>  [906,]  704  948  644  826  506  611  479   26  142   513 #>  [907,]  228  585  510  842  894  967  968  121  852   455 #>  [908,]  352  237  820  551  654  349  753  271  243   981 #>  [909,]  577  564  894  515  400  848  143  262  454   799 #>  [910,]  656   20  630  252  805  820  354  636   36   682 #>  [911,]  711  825  967  210  869  585  510  790  907   368 #>  [912,]  829  361  695  640   72  538  382  666  326   259 #>  [913,]  656  104  321  175  702  461  286  951  384   836 #>  [914,]  562  147  537  309  267  994  573  424  989   814 #>  [915,]  760  154  701  561  446  717  411  313  211   742 #>  [916,]   33  575  371  197  405  797  330  452  367   901 #>  [917,]  946  885  699  772  934  960  219  688  651   463 #>  [918,]  148  987  700  432  803  969   67   23  399    82 #>  [919,]  407  615  328  862  192  814  999  562  537   881 #>  [920,]  245  660  399  875  840  698  414   49  803   221 #>  [921,]  300  956  557   97  473  373  495   28  489   327 #>  [922,]  216  474  379  638  312  447  722  685  437   441 #>  [923,]  425  802  901  984  850  572  270   85  596   707 #>  [924,]  822  147  556  989  684  929  594  621  914   573 #>  [925,]  275  350  688  144  137  843  297  953  986   219 #>  [926,]  939  487  306  240  500  358  787  377  477   350 #>  [927,]   36  391  289  675  120  741  754  903  877    52 #>  [928,]  744  705  501  113  895  892  785  471  510   566 #>  [929,]  684  424  953  147  989  924  573  854  914   936 #>  [930,]  824  240  766  544  101  172  708  896  725   319 #>  [931,]  597  669  516  395  273  324  812  433  748   223 #>  [932,]  415  817  239  542  821  672  947  778  706   588 #>  [933,]  322  766  103  144  651  101  294  463   27   743 #>  [934,]  772  290  334  651  960  917  322  554  189   888 #>  [935,]  878  382  326  718  889  726  639  589  695   443 #>  [936,]  149  424  953  929  348    7  983  972  297   562 #>  [937,]  235  550  318  472  896   10  623  792  759   733 #>  [938,]  220  798   22  181  606   15  585  293  486   905 #>  [939,]  926  240  358  306  477    5  487  787  311   236 #>  [940,]  796   83  837  164  844   24  518  108  771   414 #>  [941,]  179  998  839  754  903    4  741  253  879    36 #>  [942,]  788  954  609  237  352  624   73  155  753   357 #>  [943,]  946   80  275   96  843  219  925  917  350   885 #>  [944,]   22  276  502  866  225   15  606   67  399   658 #>  [945,]  100  823   53  102  775  215  217  271  237   677 #>  [946,]  917  885  219  688  699  960  934  772  233   463 #>  [947,]  285  821  796  472  287   24   83  269  550   837 #>  [948,]  826  906  704  375  142  506   53   26   91   331 #>  [949,]  778  706  532  291  482  582  972  397  531   715 #>  [950,]  335  221  668  698  485  552  752  353  419   570 #>  [951,]  435  410  993  321  175  913  461  614   66   469 #>  [952,]  207  453  155  386  281  649  670  900   30   215 #>  [953,]  929  688  424  297  933  936  328  684  743   144 #>  [954,]  609  942  788  155  633  331  102  734  237    19 #>  [955,]  128  101  743  358  708  240  184  816  170   311 #>  [956,]  655  553   25  526  965  334   59  807   29   921 #>  [957,]  302   52   66  289  483  614  993  863  187   927 #>  [958,]  715  814  582  153  867  537  994  759  884   282 #>  [959,]  849  387  100  549  992  423  271  126  200   595 #>  [960,]  772  699  934  917  290  219  888  800  554   334 #>  [961,]  774  226  739  394  264  153  851  176  593   266 #>  [962,]  281   64  325  587  416  716  260  526  355    63 #>  [963,]  650  236  348   68    5  896  539  930  318   193 #>  [964,]  666  969  597  206  595  423  215   14   98    72 #>  [965,]  109  334  268  590  655  807   59  286  244   316 #>  [966,]   58  806  637   99  177  547  876  728  436   374 #>  [967,]  711  585  220  455  510  968  907   48  911   181 #>  [968,]  737  510  842  185  133  455  434  181  967   228 #>  [969,]  786  595  579  612  964  849  597  599  700   514 #>  [970,]  619  148  449  528  329  918   82  700  987    93 #>  [971,]  466  390  206  314  731   98  781  386  207   423 #>  [972,]  983   50  497  404  904  424  533  936  159   267 #>  [973,]  185  284  143  737  195  455  303  288  842   596 #>  [974,]  657  133  504  686  892  996  181  116  163   486 #>  [975,]  381  769  752  819  360  663  770  988  460   978 #>  [976,]  304  755  468  447  117  668  419  950  523   335 #>  [977,]  494  508  679  677  893  125  203  652  202    77 #>  [978,]  663  770  988  643  980  507  601  580  975   198 #>  [979,]  284  810  426  783  536  303  388  396  568   576 #>  [980,]    8   16  507  601  690  978  563  580  643   445 #>  [981,]  654  384  593  820  138  352  264  811  104   305 #>  [982,]   29  985  241  888  290  553  334  278  230   855 #>  [983,]  972  424  159  573  533   17  497  267  867   814 #>  [984,]  850  425  923  802   81  473  327  229  642   270 #>  [985,]  241  982  332  714  855   29  489  278  478   553 #>  [986,]   90  336  376  558  603  398  799  144  577   991 #>  [987,]  700  528  918  579  432  148  969   82  329   420 #>  [988,]  663  770  643  978  333  198  381  769  975   195 #>  [989,]  854  147  684  584  431  267  822  924  929   743 #>  [990,]  470  600  233  408  728  105  721  294  544   645 #>  [991,]  558  574  398  214  376  618  813  838  831    27 #>  [992,]  169  423   20  598  508  202  959  636  252   805 #>  [993,]  302  957   66  951  175   52  410  834  435    78 #>  [994,]  537  884  856  867  282  759  309  914  170   562 #>  [995,]  538   72  351  409  626  180  912  599  579   420 #>  [996,]  163  629  974  486  116  535  330  133  504   575 #>  [997,]  649  634  676  476  670  886  223  324   23    89 #>  [998,]  879  847  536  941  754  903  741  253  426    47 #>  [999,]  407   94  192  268  919  862  664  158  328   109 #> [1000,]   59  999  499   94  366  470  885  664  369   862 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.41362689 0.5218471 0.6263428 0.6287783 0.6514202 0.6728510 0.7103597 #>    [2,] 0.42878507 0.4570627 0.4989642 0.5439366 0.6220755 0.6353847 0.6660274 #>    [3,] 0.71172268 0.8516587 0.8635176 0.8764222 1.1839712 1.2173290 1.2473557 #>    [4,] 0.54425922 0.5562621 0.5975349 0.6299354 0.6396712 0.6441563 0.6533248 #>    [5,] 0.53260904 0.5459404 0.5633872 0.7652141 0.7896861 0.8472822 0.8472959 #>    [6,] 0.10496390 0.3186055 0.3368619 0.3644208 0.3766667 0.4234697 0.5347686 #>    [7,] 0.40228821 0.4885092 0.5512461 0.6319139 0.6589927 0.6685217 0.7044459 #>    [8,] 0.31904942 0.3829350 0.4413573 0.5366888 0.5611150 0.5781149 0.6422383 #>    [9,] 0.29172949 0.5650923 0.6853493 0.6904803 0.7284129 0.7684633 0.8037357 #>   [10,] 0.30189027 0.3682466 0.4019918 0.4471440 0.4587489 0.5739993 0.6111510 #>   [11,] 0.41362689 0.5017344 0.5028728 0.5249797 0.5470430 0.6577962 0.6767124 #>   [12,] 0.28443111 0.3264066 0.3628038 0.3899819 0.5811929 0.5861468 0.6173111 #>   [13,] 1.70493088 1.7925663 1.8004104 1.8231453 1.8512073 1.8584455 1.9082970 #>   [14,] 0.65655724 0.7837028 0.7970603 0.8134243 0.8317822 0.8477960 0.8482813 #>   [15,] 0.37410524 0.4271906 0.4538073 0.4899550 0.4995784 0.5006405 0.5994483 #>   [16,] 0.16008334 0.2707842 0.3190494 0.3853515 0.4160242 0.5020172 0.5354382 #>   [17,] 0.61248655 0.7393618 0.7694696 0.8953537 0.9045850 0.9060416 0.9254259 #>   [18,] 0.80679309 1.0070199 1.0280501 1.0440668 1.2278010 1.2477111 1.2645846 #>   [19,] 0.78236203 0.7831374 0.7950667 0.8166708 0.8239013 0.8439497 0.8711031 #>   [20,] 0.30077927 0.3841090 0.4055922 0.4589783 0.4748726 0.5178200 0.5212239 #>   [21,] 0.71791430 0.8641510 0.8935966 0.9063679 0.9560021 1.0769981 1.0848319 #>   [22,] 0.42074382 0.4308211 0.4402503 0.4538073 0.4826132 0.5802976 0.5939344 #>   [23,] 0.86766895 0.9344106 1.0040252 1.1035774 1.1258248 1.1488641 1.1509948 #>   [24,] 0.35854655 0.3670829 0.4788043 0.5266852 0.5464437 0.6252078 0.6913714 #>   [25,] 0.44932329 0.7642454 0.8141167 0.8179046 0.8270579 0.8956180 0.9291127 #>   [26,] 0.22376131 0.3302917 0.3463684 0.3873176 0.4271005 0.4288213 0.5351163 #>   [27,] 0.29936278 0.5249203 0.5629602 0.6509865 0.6686748 0.6794673 0.7244096 #>   [28,] 0.89715614 1.0439733 1.1191627 1.1287350 1.1624472 1.2034181 1.2200496 #>   [29,] 0.32576672 0.5541451 0.5963428 0.6254831 0.7060338 0.7080370 0.7769018 #>   [30,] 0.51269206 0.6618083 0.7002355 0.7312705 0.7393184 0.7608467 0.8053847 #>   [31,] 0.51298962 0.5999824 0.6895599 0.7262913 0.7856275 0.8507355 0.8661969 #>   [32,] 0.17611954 0.2804471 0.3654679 0.3675701 0.3718805 0.4317295 0.4441480 #>   [33,] 0.24875987 0.7388221 0.7473805 0.7742089 0.8727752 0.8761173 0.9077274 #>   [34,] 0.44932329 0.6611531 0.7158639 0.7249400 0.8444152 0.9509915 0.9548470 #>   [35,] 0.63473868 0.6561679 0.9843990 1.1837304 1.2650795 1.3040211 1.3707985 #>   [36,] 0.32177216 0.4167015 0.4844015 0.5018985 0.5117792 0.5624489 0.5693453 #>   [37,] 0.51584713 0.5428389 0.5850921 0.6102870 0.6904803 0.7603206 0.7892429 #>   [38,] 0.37789036 0.5843606 0.6705777 0.6867000 0.7862890 0.8302766 0.8323384 #>   [39,] 0.34487962 0.7332484 0.7438463 0.7902273 0.8076642 0.8614825 0.9000962 #>   [40,] 1.18041257 1.3160497 1.3362132 1.4589809 1.4742352 1.5098925 1.5293178 #>   [41,] 0.57954629 0.6980473 0.7681719 0.7990819 0.8087509 0.9398611 1.0273805 #>   [42,] 0.29168303 0.3608388 0.5292763 0.5840511 0.7887914 0.8055787 0.8088774 #>   [43,] 0.28384265 0.3967881 0.4572084 0.4704493 0.5311159 0.5400053 0.6409228 #>   [44,] 0.27187328 0.4743187 0.7803179 0.8403942 0.9792152 1.0052000 1.0157266 #>   [45,] 0.73328302 0.7919928 1.0294965 1.1938588 1.1991282 1.2136731 1.2631916 #>   [46,] 0.37818833 0.7372437 0.9629521 1.2110468 1.2470652 1.2834878 1.2971651 #>   [47,] 0.28910062 0.3798971 0.4897568 0.5039678 0.5440550 0.5449426 0.5781176 #>   [48,] 0.42719057 0.4926988 0.5422074 0.5532701 0.5748554 0.5859810 0.6087281 #>   [49,] 0.58895646 0.7239899 0.8307994 0.9920202 1.0248097 1.1511514 1.1743048 #>   [50,] 0.48489381 0.6310396 0.6731245 0.7517403 0.7962130 0.9232364 1.0416444 #>   [51,] 0.29342868 0.3160535 0.3568776 0.3881975 0.4363068 0.4441480 0.4454114 #>   [52,] 0.24610977 0.2832061 0.3275009 0.3365159 0.3728250 0.4606671 0.4706508 #>   [53,] 0.37809332 0.3787513 0.3821232 0.3969412 0.4896702 0.4930152 0.5228370 #>   [54,] 0.40649431 0.5210566 0.5767383 0.5771011 0.6216471 0.6301349 0.6547095 #>   [55,] 1.21525675 1.2489481 1.3652638 1.4425302 1.5561659 1.5848826 1.6635585 #>   [56,] 0.34469978 0.3529312 0.4814304 0.5550738 0.5684520 0.6112225 0.6519655 #>   [57,] 0.25911890 0.2762862 0.2852908 0.3568776 0.3587406 0.3599557 0.4911885 #>   [58,] 0.45315410 0.6526752 0.8971936 0.9048283 0.9915321 1.0611219 1.0697303 #>   [59,] 0.77564883 0.7848625 0.8895886 1.0576025 1.0753081 1.0837689 1.0979523 #>   [60,] 0.46435791 0.7821160 0.8087888 0.8200189 0.8799078 0.8814175 0.9152458 #>   [61,] 0.35893392 0.4786858 0.6054023 0.6772218 0.7093275 0.7122174 0.7389016 #>   [62,] 0.31364693 0.3151665 0.3307630 0.3496380 0.3719570 0.3738475 0.4097976 #>   [63,] 0.43472185 0.7461427 0.7533614 0.7592977 0.7842904 0.8557361 0.8754431 #>   [64,] 0.63951151 0.6618089 0.6958242 0.7345205 0.8170021 0.8815808 0.9430142 #>   [65,] 0.27590979 0.3613293 0.4541270 0.5505683 0.5785163 0.5883052 0.6088508 #>   [66,] 0.37282498 0.3943062 0.4892367 0.5028728 0.5249970 0.5622259 0.5817713 #>   [67,] 0.78886702 0.8063878 0.8274725 0.8641510 0.8698573 0.8865301 0.9715227 #>   [68,] 0.59547705 0.6126157 0.8238391 0.8342794 0.8389211 0.8402566 0.8412236 #>   [69,] 0.58686267 0.6772218 0.6826027 0.6878218 0.6931599 0.6967114 0.7271542 #>   [70,] 0.18773156 0.3552281 0.3587406 0.4804835 0.5233808 0.5325179 0.5381807 #>   [71,] 0.71791430 0.8561950 0.9568194 1.0949716 1.1170973 1.1312201 1.1426771 #>   [72,] 0.38989560 0.5586878 0.5598770 0.6115948 0.6331034 0.6670345 0.7079609 #>   [73,] 0.42277625 0.5669433 0.5859214 0.6780810 0.7219875 0.7711050 0.7859286 #>   [74,] 0.28946368 0.3681885 0.3792961 0.4277401 0.4553586 0.4785935 0.4872801 #>   [75,] 0.18375629 0.2482976 0.3515838 0.3599557 0.3718805 0.3881975 0.3882071 #>   [76,] 0.45366024 0.5537417 0.6109019 0.6569260 0.8905723 1.1033142 1.1040548 #>   [77,] 0.34963804 0.3819758 0.4822665 0.4874018 0.5020470 0.5048701 0.5130467 #>   [78,] 0.33565216 0.5197409 0.5851909 0.6487988 0.7043784 0.7185464 0.7465465 #>   [79,] 0.46553595 0.6200499 0.8452965 0.8632501 0.8704177 0.8857051 0.9605379 #>   [80,] 1.15895578 1.2285182 1.2653518 1.4455813 1.4548150 1.7936230 1.9152153 #>   [81,] 0.59142833 0.6039763 0.6238661 0.7194622 0.7461427 0.8248801 0.8997469 #>   [82,] 0.37887811 0.9380697 0.9556686 0.9625936 0.9779778 1.0051767 1.0176755 #>   [83,] 0.36708291 0.4952210 0.4974965 0.5150722 0.5257333 0.5795394 0.5984878 #>   [84,] 0.59832992 0.6051736 0.8053191 0.9257555 0.9368102 0.9566771 1.0011067 #>   [85,] 0.32458153 0.5218471 0.5249797 0.5508319 0.5879289 0.6591974 0.6600697 #>   [86,] 0.45366024 0.6497945 0.7704404 0.7884078 0.9071015 0.9911530 1.0018222 #>   [87,] 0.86808226 1.0571757 1.0701098 1.0841214 1.0989534 1.1714227 1.1991262 #>   [88,] 0.70707327 0.7597328 0.7774441 0.7940683 0.7971701 0.8242204 0.8752761 #>   [89,] 0.57488666 0.6448797 0.7959021 0.8086854 0.8114895 0.8180471 0.9182885 #>   [90,] 0.46088095 0.4829943 0.5967389 0.6607295 0.6736509 0.6748189 0.6973327 #>   [91,] 0.22376131 0.3900703 0.4138534 0.4205343 0.4896702 0.4928747 0.5051761 #>   [92,] 0.20671156 0.3683921 0.3723055 0.4083511 0.4962146 0.5062089 0.5539381 #>   [93,] 0.35454258 0.3550764 0.3608388 0.6219193 0.6793578 0.7509541 0.7626036 #>   [94,] 0.47079385 0.5272674 0.5701579 0.5717917 0.6608137 0.7723438 0.8186732 #>   [95,] 0.27126130 0.4888970 0.5425347 0.5718213 0.5792849 0.6346808 0.6729167 #>   [96,] 0.55661393 0.9220404 0.9507171 1.1458245 1.1542598 1.1586987 1.1890468 #>   [97,] 0.55180029 0.7441160 0.8666764 0.8876110 0.9198242 0.9718873 0.9739549 #>   [98,] 0.20029896 0.6590768 0.7291381 0.7698256 0.7869223 0.8270644 0.8477960 #>   [99,] 1.04195672 1.0919970 1.1678320 1.1982458 1.2275214 1.2405972 1.2518935 #>  [100,] 0.22637231 0.2986411 0.3780933 0.4542884 0.4896671 0.4955716 0.5082022 #>  [101,] 0.37917759 0.3978601 0.4113793 0.4403189 0.5824629 0.6296057 0.6373400 #>  [102,] 0.16857286 0.3969412 0.4308071 0.4542884 0.4607169 0.4759374 0.4779190 #>  [103,] 0.41294296 0.4212866 0.4518309 0.4815322 0.4816555 0.4905401 0.5000465 #>  [104,] 0.38458697 0.3934488 0.4429947 0.5059068 0.5232989 0.5347686 0.5503222 #>  [105,] 0.62084683 0.6982088 0.7332484 0.7667370 0.7767051 0.8450354 0.8469849 #>  [106,] 0.37735658 0.4359157 0.4701016 0.4763160 0.5726360 0.5948771 0.6069419 #>  [107,] 0.40494088 0.6170966 0.6258718 0.6409443 0.6476067 0.6505800 0.6585118 #>  [108,] 0.27416424 0.3394611 0.4295859 0.4512167 0.4788043 0.5795394 0.5812144 #>  [109,] 0.34386568 0.3775004 0.4679915 0.5667571 0.7040866 0.7930754 0.8573154 #>  [110,] 0.65692597 0.6640914 0.6903925 0.9447399 0.9911530 1.0004288 1.0157266 #>  [111,] 0.17322505 0.4381345 0.4763553 0.5001010 0.5199568 0.5208237 0.5219478 #>  [112,] 0.27934566 0.3802163 0.4325621 0.4878024 0.5291455 0.5472537 0.5652571 #>  [113,] 0.81766307 0.8539912 0.9572485 1.0208393 1.2684273 1.2711141 1.5410749 #>  [114,] 0.53399697 0.5342883 0.5487788 0.5601196 0.5726360 0.5729499 0.5851909 #>  [115,] 1.36204206 1.6571097 1.9991860 2.0239366 2.0573165 2.2044042 2.2200062 #>  [116,] 0.40125230 0.4570627 0.6049606 0.6810970 0.6855674 0.7049320 0.7125207 #>  [117,] 0.46553595 0.6236021 0.7001253 0.7349194 0.7723331 0.7862374 0.7882985 #>  [118,] 0.40179756 0.4646941 0.4831149 0.5062987 0.5727313 0.5954285 0.6077208 #>  [119,] 1.77549664 1.7936230 1.8354673 1.9510910 2.0330700 2.0391656 2.0485502 #>  [120,] 0.40615376 0.5919125 0.5920246 0.6545498 0.7093365 0.7624129 0.7772260 #>  [121,] 0.35743117 0.3866715 0.5022933 0.5536463 0.5629969 0.5665804 0.5754789 #>  [122,] 0.96504796 1.0660640 1.0692290 1.0835106 1.1479572 1.2711038 1.2921262 #>  [123,] 0.42774011 0.4402361 0.4489629 0.4641931 0.4982906 0.5003857 0.5059210 #>  [124,] 0.41918526 0.4559135 0.6475094 0.6650774 0.6671920 0.6729234 0.6743787 #>  [125,] 0.28199897 0.3286279 0.3461326 0.4684063 0.4689421 0.4891803 0.4924793 #>  [126,] 0.31280550 0.4002317 0.4008439 0.4877180 0.4962146 0.5797486 0.5911588 #>  [127,] 0.37707816 0.4227762 0.5171076 0.5795281 0.6627588 0.7975276 0.8306540 #>  [128,] 0.39786015 0.3994931 0.4237416 0.4660890 0.4878024 0.5038331 0.5121420 #>  [129,] 0.31578572 0.4644535 0.4788890 0.5036873 0.5354382 0.5658074 0.6170966 #>  [130,] 1.19754752 1.2143366 1.2243644 1.2404187 1.2626997 1.3000290 1.3032514 #>  [131,] 0.49875311 0.8376001 0.8556644 0.9708082 0.9843990 1.0550444 1.1472057 #>  [132,] 0.59002837 0.6726041 0.6958350 0.7431441 0.7469217 0.8028723 0.8085094 #>  [133,] 0.35591868 0.3687995 0.5580362 0.5737089 0.5904913 0.6092580 0.6145747 #>  [134,] 0.34423353 0.6213974 0.6929357 0.7278263 0.7330792 0.7453741 0.8500246 #>  [135,] 0.29725231 0.4986063 0.5449426 0.6004435 0.6030858 0.6332262 0.6565572 #>  [136,] 1.57668987 1.6266489 1.7168512 1.7703862 1.9419772 1.9425681 1.9539265 #>  [137,] 0.63291808 0.7534207 0.8529041 0.8828437 0.9947411 0.9953738 1.0087941 #>  [138,] 0.48339904 0.4981472 0.5057041 0.5079950 0.5095265 0.5115103 0.5232989 #>  [139,] 0.85750592 1.0056533 1.1326229 1.1615655 1.3000015 1.4115196 1.4444196 #>  [140,] 0.73074413 0.7533614 1.0052654 1.1575033 1.1657045 1.1770195 1.2117864 #>  [141,] 0.62979811 0.9103927 1.0282142 1.1005949 1.3728202 1.3777085 1.3789662 #>  [142,] 0.46397630 0.5222070 0.5445432 0.5797634 0.6532799 0.7069918 0.7283067 #>  [143,] 0.24791283 0.3574312 0.4226264 0.4530123 0.4546701 0.5092601 0.5249883 #>  [144,] 0.50343691 0.5240436 0.6625804 0.6781812 0.6977430 0.7357877 0.7363033 #>  [145,] 0.42801716 1.1077220 1.2106951 1.2333542 1.3498237 1.3858660 1.4122134 #>  [146,] 0.79282325 1.5062566 1.5488572 1.5888989 1.6550615 1.6833456 1.6937430 #>  [147,] 0.36774929 0.3732685 0.3842104 0.4538932 0.5831462 0.6044639 0.6209772 #>  [148,] 0.46923236 0.7317482 0.7605785 0.7894107 0.8505585 0.8636224 0.8657139 #>  [149,] 0.61834263 0.6932606 0.8256068 0.8999726 0.9035490 0.9503079 1.0456034 #>  [150,] 0.35293118 0.4688132 0.4695729 0.5323004 0.5921511 0.6954049 0.7075479 #>  [151,] 0.54165312 0.5588568 0.5678139 0.5685090 0.5745787 0.6053094 0.6422874 #>  [152,] 0.59814179 0.9430142 1.3062036 1.3689539 1.3767029 1.3807620 1.3817814 #>  [153,] 0.64843755 0.6731534 0.6810228 0.8088618 0.8661454 0.8855866 0.8990050 #>  [154,] 0.55904021 0.6732418 0.8727508 0.9516666 0.9535847 0.9562271 1.0479533 #>  [155,] 0.49686206 0.5374131 0.6082029 0.6448797 0.6532233 0.6533593 0.6847137 #>  [156,] 0.70018142 0.9381927 1.0154757 1.0170554 1.1379143 1.2098691 1.2164011 #>  [157,] 0.95566857 1.0588611 1.1581595 1.2131050 1.2812563 1.2955692 1.4895554 #>  [158,] 0.34386568 0.5777995 0.6039384 0.7309325 0.7723438 0.7816013 0.8591158 #>  [159,] 0.71378924 0.7408240 0.7629718 0.7692430 0.8632464 0.9802034 1.0449156 #>  [160,] 1.07539520 1.1498385 1.1904362 1.2023242 1.2244189 1.2734993 1.3063748 #>  [161,] 0.16038520 0.3719570 0.4298063 0.4565358 0.4636812 0.4822665 0.5079705 #>  [162,] 0.43472185 0.5489543 0.6039763 0.6677195 0.6780961 0.7010212 0.7721062 #>  [163,] 0.51362241 0.7131420 0.7423514 0.8604679 0.8981499 0.9095031 0.9172866 #>  [164,] 0.30619090 0.3550764 0.4387340 0.4398053 0.5292763 0.5609652 0.5984878 #>  [165,] 0.57459576 0.6679446 0.7453741 0.8462319 0.9124183 0.9670177 1.0898594 #>  [166,] 0.89703605 0.9566634 1.0673192 1.1530202 1.2928860 1.3157153 1.3172478 #>  [167,] 0.77162301 1.0268815 1.0273805 1.1125643 1.1753404 1.2810804 1.2906744 #>  [168,] 0.56559090 0.7823620 0.7828742 0.7839705 0.7860888 0.7900814 0.8027006 #>  [169,] 0.35014647 0.3707147 0.4272040 0.4430726 0.4760717 0.4799689 0.5293508 #>  [170,] 0.29721270 0.3249261 0.3574931 0.4793659 0.4928762 0.5106370 0.5119681 #>  [171,] 0.30159388 0.4799766 0.5969825 0.6687554 0.7125823 0.7242116 0.7276922 #>  [172,] 0.32800638 0.3651872 0.4187587 0.4203225 0.4998417 0.5316164 0.5512461 #>  [173,] 0.62529025 0.7245884 0.7915912 0.8545051 0.9034034 1.0841214 1.1205207 #>  [174,] 0.50486038 0.5366888 0.6140897 0.7447615 0.7535245 0.7644076 0.8076303 #>  [175,] 0.33565216 0.6085907 0.6286005 0.6628317 0.6840926 0.7009039 0.7052099 #>  [176,] 0.37354974 0.5780958 0.6350364 0.7418080 0.7420285 0.7766514 0.8058106 #>  [177,] 0.58037647 0.6760164 0.7413587 0.8101495 0.8635893 0.8693038 0.9278994 #>  [178,] 0.18773156 0.2762862 0.3160535 0.3409775 0.3902278 0.4345602 0.4701996 #>  [179,] 0.35610869 0.4352313 0.5442592 0.5445757 0.5606846 0.5852456 0.5920246 #>  [180,] 0.23273379 0.6099832 0.6245517 0.6502532 0.8401655 0.8540530 0.8610995 #>  [181,] 0.35591868 0.4789899 0.4946776 0.5569761 0.6084799 0.6340862 0.6406897 #>  [182,] 0.24785159 0.3414133 0.4572084 0.4781697 0.6141117 0.6186837 0.6703630 #>  [183,] 0.39313631 0.4499254 0.5069864 0.5502171 0.5540772 0.5563416 0.6518516 #>  [184,] 0.32307795 0.3574931 0.4832023 0.5256649 0.5962816 0.5982704 0.6000027 #>  [185,] 0.24878787 0.3678014 0.4472058 0.5223575 0.5487287 0.5487853 0.5815260 #>  [186,] 0.23581065 0.4159101 0.5466056 0.5577023 0.7093859 0.8635176 0.8639829 #>  [187,] 0.32458153 0.3573415 0.4636908 0.4706508 0.5459118 0.6013398 0.6263428 #>  [188,] 0.45921391 0.5409484 0.5619399 0.5900284 0.6226575 0.6807311 0.6988472 #>  [189,] 0.47802329 0.5667448 0.7173967 0.7441339 0.7515273 0.7572532 0.7862199 #>  [190,] 0.34105416 0.3612721 0.4381345 0.4497129 0.4598616 0.4620303 0.5845477 #>  [191,] 0.58169372 0.5929311 0.5963030 0.6306806 0.6518091 0.6576806 0.6969779 #>  [192,] 0.47079385 0.4780233 0.4897122 0.5125870 0.5747023 0.6119418 0.6372951 #>  [193,] 0.25966695 0.5326090 0.7275374 0.7438463 0.7834863 0.7990819 0.8366936 #>  [194,] 0.57601280 0.5999824 0.6966987 0.7300311 0.7842522 0.7908705 0.8242477 #>  [195,] 0.29230411 0.3486813 0.5388966 0.5524508 0.5539619 0.5638342 0.5827680 #>  [196,] 0.31019877 0.5132359 0.5537417 0.6497945 0.6640914 0.7840033 0.8414834 #>  [197,] 0.40125230 0.6220755 0.7014483 0.7063317 0.7366712 0.7388221 0.7619553 #>  [198,] 0.28529083 0.3409775 0.3501037 0.3552281 0.3738475 0.4798148 0.4819757 #>  [199,] 0.29172949 0.6102870 0.6279668 0.6453937 0.6681361 0.6738120 0.6837785 #>  [200,] 0.30321713 0.3079301 0.3194569 0.3566287 0.3808076 0.4574750 0.5045029 #>  [201,] 0.29342868 0.2988484 0.3902278 0.4489629 0.4552432 0.4553586 0.4569850 #>  [202,] 0.43488157 0.4436010 0.5125483 0.5247987 0.5282940 0.5305248 0.5395131 #>  [203,] 0.34689065 0.3952753 0.4714573 0.4904061 0.5217994 0.5634012 0.5654584 #>  [204,] 0.85908836 0.8868519 0.9926253 1.1324214 1.1619213 1.2040134 1.2757494 #>  [205,] 0.98101071 1.1379291 1.3464264 1.3709069 1.3804714 1.4124703 1.4161375 #>  [206,] 0.20029896 0.6004435 0.6245538 0.6952970 0.7128586 0.7200645 0.7231788 #>  [207,] 0.41639391 0.4536975 0.5126921 0.5697857 0.5948784 0.6497096 0.6875925 #>  [208,] 0.56369379 0.8765410 0.8958618 0.9236665 0.9829871 0.9888993 0.9911147 #>  [209,] 0.49066399 0.6587926 0.8624764 0.9112282 0.9243117 0.9247930 0.9511384 #>  [210,] 0.72310567 0.7736701 0.7870729 0.9333092 0.9381927 0.9476777 0.9663875 #>  [211,] 0.38060885 0.4747977 0.4788890 0.4903754 0.5430400 0.5659028 0.5780571 #>  [212,] 0.73074413 1.2128031 1.3767029 1.4285823 1.6045952 1.7237307 1.7338859 #>  [213,] 0.76835764 0.9996256 1.0284601 1.1104289 1.1555220 1.2470012 1.3050110 #>  [214,] 0.28183735 0.3726152 0.3852905 0.4129430 0.4149611 0.4194893 0.4216125 #>  [215,] 0.51893444 0.5297742 0.5753583 0.5893465 0.5999495 0.6030420 0.6243958 #>  [216,] 0.54602175 0.6831774 0.7118217 0.8924804 0.9169477 0.9210661 0.9516666 #>  [217,] 0.32490808 0.3463684 0.4138534 0.4759374 0.4874018 0.4924680 0.4955716 #>  [218,] 0.34487962 0.6208468 0.7275374 0.7464348 0.9314828 0.9708868 1.0074023 #>  [219,] 0.70340401 0.7278631 0.7525606 0.7588367 0.9186662 0.9220404 1.0098270 #>  [220,] 0.37410524 0.3933287 0.4826132 0.4939033 0.5039031 0.5422074 0.5525949 #>  [221,] 0.33224441 0.3594571 0.4608574 0.5497418 0.5544365 0.5562227 0.5986020 #>  [222,] 1.23056781 1.3117838 1.5281259 1.6051205 1.7261429 1.8721160 1.8896905 #>  [223,] 0.36344565 0.7513681 0.7815852 0.8478024 0.8489611 0.8540856 0.8561950 #>  [224,] 0.85205330 1.0521779 1.0532581 1.0858755 1.2213313 1.2835040 1.3043758 #>  [225,] 0.61566123 0.6666312 0.6892657 0.7333896 0.7413654 0.8038420 0.8242124 #>  [226,] 0.52452654 0.5312701 0.5457465 0.6976628 0.7026473 0.7518283 0.7975417 #>  [227,] 0.57104646 0.5996146 0.6011139 0.6158812 0.6216750 0.6307474 0.6509865 #>  [228,] 0.38043690 0.4981200 0.5135325 0.5665804 0.5714157 0.5825737 0.5968931 #>  [229,] 0.39245309 0.4992052 0.5503459 0.5570208 0.5698313 0.5969825 0.6417437 #>  [230,] 0.48362828 0.5798934 0.5851407 0.6564100 0.7463217 0.7706694 0.7961911 #>  [231,] 0.50173441 0.5051471 0.5628845 0.6584275 0.7756313 0.8182546 0.8303063 #>  [232,] 0.57626358 0.6417437 0.6768553 0.7063601 0.8314817 0.8651075 0.8813094 #>  [233,] 0.65919192 0.7454127 0.7761767 0.7913231 0.8217483 0.8777434 0.8855012 #>  [234,] 0.47397411 0.6252903 0.9615812 0.9944720 1.0003493 1.0081954 1.0301954 #>  [235,] 0.48465047 0.5410580 0.6708210 0.6986516 0.7091997 0.7435365 0.7914487 #>  [236,] 0.54594045 0.5978542 0.8238391 0.8300007 0.8362162 0.8401366 0.8980384 #>  [237,] 0.28713086 0.3216205 0.4770231 0.5297851 0.5533367 0.5562024 0.5753583 #>  [238,] 0.51856314 0.5850921 0.7452366 0.8229233 0.9468704 1.0272770 1.0568547 #>  [239,] 0.72021199 0.8113119 1.3953434 1.4548472 1.4599790 1.4819750 1.5665260 #>  [240,] 0.44031890 0.4717843 0.5460394 0.5502443 0.5846691 0.5854541 0.6132753 #>  [241,] 0.54505599 0.6498501 0.6687282 0.7080370 0.7451737 0.8224637 0.8302513 #>  [242,] 0.50496748 0.5253372 0.5304576 0.5537228 0.6159417 0.6336087 0.6553028 #>  [243,] 0.45463360 0.4779190 0.4937840 0.5055779 0.5596912 0.6259360 0.6275213 #>  [244,] 0.47107702 0.5125870 0.5667448 0.5701579 0.6648279 0.7280252 0.7930754 #>  [245,] 0.35153139 0.4726514 0.5885004 0.7239899 0.7615352 0.7816607 0.9228713 #>  [246,] 0.22556995 0.2995185 0.3914550 0.4363050 0.4460269 0.5293508 0.5590879 #>  [247,] 0.57578479 0.6062448 0.6209094 0.6407918 0.6471731 0.6644361 0.6780187 #>  [248,] 0.59832992 0.6679446 0.8326195 0.8328927 0.9135923 0.9481156 1.0624930 #>  [249,] 0.42066193 0.5121158 0.5713291 0.7689820 0.7978709 0.8087888 0.8089742 #>  [250,] 0.16038520 0.3307630 0.3609975 0.4015015 0.4558246 0.4827675 0.5130467 #>  [251,] 0.63029024 0.7706578 0.9007251 0.9243117 1.0314647 1.0651181 1.0797650 #>  [252,] 0.32606631 0.3717373 0.3841090 0.4084447 0.4153513 0.4532401 0.4585898 #>  [253,] 0.40494088 0.5039678 0.5134770 0.5505683 0.5654036 0.6231424 0.6311451 #>  [254,] 0.46267354 0.9321061 1.0012281 1.0700034 1.1089399 1.1344544 1.2021549 #>  [255,] 0.53379554 0.6740866 0.6976674 0.8423385 0.8748135 0.9271261 0.9624570 #>  [256,] 0.41093989 0.5727321 0.6551817 0.7349510 0.7795737 0.7925764 0.7980186 #>  [257,] 0.37239037 0.4240281 0.5328905 0.5588568 0.5695330 0.5752164 0.5965697 #>  [258,] 0.54406474 0.6161819 0.8858392 0.8861484 0.9168180 0.9286157 0.9456201 #>  [259,] 0.49814717 0.5476988 0.5595555 0.5874908 0.6139567 0.6361757 0.6526733 #>  [260,] 0.55491985 0.6403408 0.6887979 0.7450282 0.7497061 0.7592977 0.7662717 #>  [261,] 0.34015638 0.7418080 0.7672530 0.8610658 0.8682452 1.0508081 1.1044772 #>  [262,] 0.21267415 0.2858308 0.3065071 0.3384496 0.3681885 0.3735354 0.4226264 #>  [263,] 0.39330269 0.4159101 0.4954966 0.7086965 0.8764222 0.8886820 0.9900028 #>  [264,] 0.51151027 0.5886179 0.7038546 0.7212288 0.7518283 0.7584971 0.7705607 #>  [265,] 0.56369379 0.5874908 0.7811632 0.8270061 0.8810146 0.9268219 0.9350142 #>  [266,] 0.53127011 0.5501081 0.5826511 0.6973271 0.7070733 0.7122174 0.7188140 #>  [267,] 0.45969629 0.4762373 0.5544078 0.5582530 0.5831462 0.6244076 0.6348789 #>  [268,] 0.46799149 0.5777995 0.5928785 0.6265087 0.6481902 0.6563890 0.7747542 #>  [269,] 0.50088229 0.5025933 0.5105359 0.5331721 0.5993475 0.6110164 0.6131177 #>  [270,] 0.50338745 0.5069864 0.5682802 0.5767383 0.6378615 0.6584275 0.6678572 #>  [271,] 0.45178907 0.4906619 0.5210295 0.5328570 0.5535924 0.5591807 0.5811599 #>  [272,] 0.82538432 0.8963519 1.0299178 1.1077839 1.1416024 1.2077378 1.2177607 #>  [273,] 0.34367888 0.4287851 0.4587106 0.5434417 0.5564421 0.6007379 0.6026117 #>  [274,] 0.91982416 1.0709841 1.0882101 1.1040322 1.1742288 1.1756323 1.2025118 #>  [275,] 0.50968564 0.5468406 0.8828437 0.8869477 1.0620673 1.1589558 1.1620768 #>  [276,] 0.52398727 0.5950373 0.6177650 0.6518091 0.6626373 0.6976226 0.7333896 #>  [277,] 0.61618187 0.6538949 0.6927885 0.9540312 1.0112372 1.0522536 1.0551293 #>  [278,] 0.48362828 0.4939056 0.5619399 0.6037953 0.6687282 0.6958350 0.7944084 #>  [279,] 0.40467537 0.4248319 0.5436353 0.5540772 0.5931951 0.6376199 0.6532157 #>  [280,] 0.67285101 0.8100945 0.8520533 0.9504313 0.9573268 0.9797552 1.0319595 #>  [281,] 0.29919644 0.6198653 0.6946534 0.7043856 0.8338029 0.8801681 0.8848566 #>  [282,] 0.29721270 0.3751771 0.4415660 0.4462715 0.4537297 0.4776457 0.5085932 #>  [283,] 0.34767718 0.7289159 0.7367880 0.7413587 0.7473717 0.7587176 0.7876524 #>  [284,] 0.35312680 0.3642565 0.3801902 0.4388628 0.4990543 0.5062266 0.5132842 #>  [285,] 0.38816198 0.4834603 0.6665911 0.7317905 0.7600898 0.8072899 0.8219183 #>  [286,] 0.47113555 0.5911683 0.6146429 0.6237357 0.6537450 0.6547095 0.7362724 #>  [287,] 0.87547078 0.9482612 0.9814182 0.9858956 1.0195867 1.0214219 1.0372738 #>  [288,] 0.29230411 0.4542718 0.5965684 0.6365452 0.6505394 0.6965867 0.7363240 #>  [289,] 0.33651588 0.4150961 0.4466549 0.4636908 0.4845885 0.5139146 0.5386881 #>  [290,] 0.41472679 0.5830712 0.6254831 0.6461869 0.7145729 0.7308150 0.8001136 #>  [291,] 1.00868985 1.3056795 1.4833364 1.5248959 1.6244816 1.6482273 1.6596067 #>  [292,] 0.40468039 0.8590428 1.0628744 1.1105700 1.1221626 1.1588931 1.1628657 #>  [293,] 0.31280550 0.4970946 0.5313373 0.6546197 0.6615095 0.6785196 0.6867529 #>  [294,] 0.29936278 0.5924064 0.6591884 0.6982088 0.7160677 0.7191995 0.7368828 #>  [295,] 0.23273379 0.5755965 0.5849735 0.6316067 0.7091997 0.7677561 0.7762810 #>  [296,] 0.33358698 0.7158639 0.7390709 0.7434999 0.7536625 0.7828742 0.8055095 #>  [297,] 0.62864189 0.7539527 0.8977016 0.9588441 1.0166699 1.0184622 1.0521770 #>  [298,] 0.58166270 0.7748687 0.8100411 0.8863672 0.9120831 0.9165732 0.9301796 #>  [299,] 0.43633246 0.5710465 0.6090987 0.6194143 0.6277039 0.6591884 0.7031295 #>  [300,] 0.65937660 0.7035111 0.9378941 1.0439733 1.0595192 1.1965461 1.2600202 #>  [301,] 0.16740855 0.3816547 0.4186423 0.4471206 0.5375561 0.5564421 0.5583910 #>  [302,] 0.15143474 0.2832061 0.4466549 0.4892367 0.5399597 0.5548177 0.5989847 #>  [303,] 0.15797941 0.3687731 0.4152236 0.4173271 0.4388628 0.4712785 0.5210000 #>  [304,] 0.60732210 0.7373089 0.8063749 0.8220097 0.8383788 1.0144164 1.0297023 #>  [305,] 0.22095964 0.3795876 0.4359157 0.5475498 0.5729499 0.5853853 0.6294845 #>  [306,] 0.24336702 0.6192648 0.7544253 0.7760548 0.8335548 0.8383420 0.8691783 #>  [307,] 0.74109847 0.7534207 0.7885251 0.9007251 0.9511384 0.9629521 0.9958625 #>  [308,] 0.57273210 0.6067430 0.6586885 0.7228461 0.7748507 0.8037346 0.8385181 #>  [309,] 0.32801760 0.3651872 0.3880876 0.4623754 0.5149094 0.5174033 0.5195892 #>  [310,] 0.20671156 0.2506096 0.2961088 0.4008439 0.4262104 0.4684063 0.4706895 #>  [311,] 0.36009695 0.5329968 0.6090581 0.6132753 0.6494423 0.6799315 0.6991268 #>  [312,] 0.42309639 0.4915822 0.5345043 0.6831774 0.6885684 0.7123239 0.7601525 #>  [313,] 0.43794754 0.7480928 0.8240910 0.8750767 0.8877469 0.8969483 0.8978712 #>  [314,] 0.38394278 0.4543534 0.5633415 0.6061817 0.6281301 0.6950656 0.7173157 #>  [315,] 0.26568272 0.4781697 0.6104184 0.6497511 0.6807311 0.6934067 0.7144597 #>  [316,] 0.20744456 0.4261515 0.5400053 0.5491708 0.5911683 0.6483100 0.6592861 #>  [317,] 0.66778881 0.7986504 0.9245800 0.9904282 1.0018222 1.0143949 1.0401643 #>  [318,] 0.41083155 0.5530183 0.5619332 0.5739993 0.6054023 0.6126157 0.6683329 #>  [319,] 0.32800638 0.3280176 0.3919179 0.4908667 0.5708616 0.6295974 0.6628395 #>  [320,] 0.24829756 0.2591189 0.4086183 0.4214965 0.4317295 0.4345602 0.4415660 #>  [321,] 0.37838532 0.4356031 0.5175917 0.5676003 0.5859441 0.6097287 0.6344092 #>  [322,] 0.15918668 0.5596651 0.5975997 0.6276691 0.6294317 0.6386885 0.6479889 #>  [323,] 0.27115596 0.3713173 0.4764786 0.5626927 0.5825851 0.5868627 0.5899214 #>  [324,] 0.36344565 0.5887255 0.7428180 0.8524712 0.8676943 0.8788343 0.8866819 #>  [325,] 0.51093567 0.6249055 0.6965234 0.8174328 0.8200189 0.8448620 0.8506547 #>  [326,] 0.34547777 0.3665925 0.4688181 0.5715523 0.6109370 0.6323335 0.6375760 #>  [327,] 0.34433447 0.3924531 0.5210566 0.5942038 0.6374466 0.6857475 0.7162170 #>  [328,] 0.43069321 0.4897122 0.4991458 0.5776755 0.6102565 0.6386885 0.6657882 #>  [329,] 0.46923236 0.5218389 0.7646565 0.7887914 0.8082253 0.8212706 0.8718161 #>  [330,] 0.40821037 0.4379739 0.5738829 0.6252068 0.6572113 0.6595356 0.6615035 #>  [331,] 0.65231903 0.6833317 0.6988624 0.7218343 0.7266337 0.7781939 0.8097117 #>  [332,] 0.61102634 0.6649147 0.6728686 0.7095258 0.7273162 0.7497597 0.7955183 #>  [333,] 0.34868132 0.3563108 0.4516023 0.4542718 0.4699640 0.5125171 0.6156728 #>  [334,] 0.41472679 0.5541451 0.5851041 0.6125309 0.7480699 0.7681317 0.7756488 #>  [335,] 0.26943231 0.4674203 0.5544365 0.5701247 0.5727313 0.6096898 0.6573412 #>  [336,] 0.50343691 0.5167341 0.5218273 0.5844075 0.5890562 0.5907975 0.5938743 #>  [337,] 0.79159118 0.8610658 0.8680823 0.8871867 0.9133191 0.9175687 0.9941067 #>  [338,] 0.34887046 0.5390305 0.5391223 0.6216750 0.6380466 0.7444788 0.7920270 #>  [339,] 0.26384354 0.3204394 0.5183551 0.5567602 0.5759314 0.7665812 0.7876524 #>  [340,] 0.23581065 0.3933027 0.5867226 0.7078609 0.7117227 0.7802729 1.0284601 #>  [341,] 0.75529388 0.7823092 0.8220389 0.8283274 0.9290381 0.9458613 1.0497207 #>  [342,] 0.68478279 0.7420285 0.7900814 0.8042349 0.9937303 1.1130620 1.1155695 #>  [343,] 0.51974093 0.5601196 0.6357879 0.6501372 0.7572498 0.7940683 0.8292292 #>  [344,] 0.67795023 0.7333881 1.0258418 1.0657652 1.1274689 1.1634892 1.2528829 #>  [345,] 0.42801716 1.0829739 1.0939463 1.1323096 1.1471338 1.2377742 1.2832679 #>  [346,] 0.17322505 0.4497129 0.5236298 0.5685463 0.5770097 0.5798372 0.5970800 #>  [347,] 0.24681262 0.4899550 0.4900604 0.4926988 0.5462676 0.5513688 0.6194201 #>  [348,] 0.82516219 0.8930844 0.8980384 0.9200137 0.9503079 1.0761371 1.0990184 #>  [349,] 0.33455662 0.4055265 0.4546336 0.4607169 0.4770231 0.4971971 0.5339973 #>  [350,] 0.64648938 0.8869477 0.9539276 1.0667349 1.0920292 1.1092998 1.1417500 #>  [351,] 0.31633218 0.3501307 0.5048604 0.5358513 0.5781149 0.6670345 0.7286179 #>  [352,] 0.19230095 0.2871309 0.3509894 0.3859530 0.4975531 0.5097096 0.5657912 #>  [353,] 0.47403268 0.4900604 0.5254724 0.6086806 0.6314797 0.6713186 0.6809510 #>  [354,] 0.25621051 0.2993916 0.4008128 0.4084447 0.4569850 0.4606264 0.4938332 #>  [355,] 0.38970886 0.4533904 0.5062089 0.5281435 0.5583836 0.6321614 0.6483495 #>  [356,] 0.65196551 0.6537174 0.7369048 0.8059972 0.8067931 0.8170860 0.9023200 #>  [357,] 0.23493814 0.3644208 0.4074087 0.4894193 0.5620359 0.5669870 0.5755038 #>  [358,] 0.49927080 0.5329968 0.5460394 0.5530609 0.5992093 0.6277166 0.6956365 #>  [359,] 1.32549389 1.5115957 1.5170868 1.5482082 1.7038451 1.7151566 1.7930709 #>  [360,] 0.29562325 0.4474183 0.4853787 0.5706896 0.5985714 0.6160252 0.6573412 #>  [361,] 0.34265300 0.3809723 0.4173943 0.5372001 0.6115948 0.6526733 0.7136714 #>  [362,] 0.79199275 0.8861484 0.9032750 0.9293343 0.9703928 0.9926253 1.0089700 #>  [363,] 0.46435791 0.5121158 0.6786845 0.7144597 0.8157600 0.8302513 0.8394732 #>  [364,] 0.34015638 0.5780958 0.7926560 0.8367723 0.8584062 0.8723993 0.9082158 #>  [365,] 0.58405110 0.5996752 0.6219193 0.7879989 0.8082253 0.9038331 0.9811293 #>  [366,] 0.47107702 0.5717917 0.6119418 0.8350468 0.8420257 0.8553092 0.9141676 #>  [367,] 0.54243097 0.7047573 0.7289159 0.7537074 0.7684845 0.7700233 0.8164732 #>  [368,] 0.22790951 0.6797248 0.7307391 0.7349510 0.7605520 0.8011483 0.8037346 #>  [369,] 0.53087625 0.7275734 0.7572498 0.7774441 0.8482405 0.9400157 0.9739454 #>  [370,] 0.56903220 0.6726041 0.7040866 0.7280252 0.7309325 0.8184837 0.8263954 #>  [371,] 0.68439972 0.7063317 0.7081372 0.7114553 0.7473805 0.7647453 0.7754868 #>  [372,] 0.39313631 0.4248319 0.4316478 0.4806925 0.5208237 0.5798372 0.5995046 #>  [373,] 0.69557926 0.9743114 0.9788063 0.9830758 1.0232268 1.0297855 1.0559813 #>  [374,] 1.18343924 1.2229820 1.2405972 1.2701169 1.3271170 1.4998263 1.5081017 #>  [375,] 0.36780332 0.3821232 0.5072214 0.6304772 0.6307691 0.6332738 0.6514453 #>  [376,] 0.46545623 0.4671173 0.4815106 0.5958054 0.5992240 0.6064093 0.6346808 #>  [377,] 0.24336702 0.5721305 0.8463445 0.9267930 0.9757458 0.9805062 0.9906952 #>  [378,] 0.49875311 0.6561679 0.8333321 0.9093853 1.0269225 1.1031559 1.1495364 #>  [379,] 0.66293906 0.7195446 0.8012506 0.8443110 0.8544094 0.9098963 0.9239537 #>  [380,] 0.67841176 0.6888005 0.6987752 0.7278146 0.7590812 0.7737825 0.7795777 #>  [381,] 0.39607462 0.4325621 0.4660890 0.5207855 0.5221368 0.5578936 0.5894681 #>  [382,] 0.55442584 0.5808096 0.6050265 0.6109370 0.6668744 0.6926850 0.6976674 #>  [383,] 0.83627398 0.9678575 1.1191872 1.1556690 1.2230135 1.2651240 1.2746526 #>  [384,] 0.29533520 0.3186055 0.3845870 0.4991897 0.5079950 0.5196833 0.5669870 #>  [385,] 0.37887811 0.8331198 0.8333399 0.8931886 0.9751978 1.0162210 1.0325356 #>  [386,] 0.45369748 0.6410400 0.6618083 0.6638760 0.7275766 0.8088009 0.8151136 #>  [387,] 0.30321713 0.3079381 0.3583659 0.3610173 0.4272931 0.4478191 0.4571904 #>  [388,] 0.35856595 0.3788511 0.5410801 0.5436016 0.6096288 0.6150493 0.6178676 #>  [389,] 0.28910062 0.3818650 0.4298704 0.4371938 0.4471206 0.4712785 0.5011181 #>  [390,] 0.34408852 0.4427241 0.4460269 0.4543534 0.4799689 0.4843953 0.5492964 #>  [391,] 0.41918526 0.4328677 0.5117792 0.5386881 0.5543276 0.5602461 0.5910015 #>  [392,] 0.48490197 0.5296113 0.6033788 0.6231582 0.7052099 0.7185464 0.8018686 #>  [393,] 0.99389082 1.1074416 1.1099191 1.2879211 1.3876219 1.4641752 1.4725776 #>  [394,] 0.61117330 0.6484375 0.6980980 0.7277084 0.7672530 0.7926560 0.8077021 #>  [395,] 0.27187328 0.3497076 0.7421971 0.8037722 0.8531621 0.8631786 0.8667839 #>  [396,] 0.29533636 0.3125003 0.3985777 0.4079068 0.4144687 0.4620303 0.4883146 #>  [397,] 0.47397411 0.6984534 0.7490988 0.7864159 0.8088774 0.8545051 0.8802777 #>  [398,] 0.21960293 0.2439954 0.3191901 0.4216125 0.4829943 0.4842188 0.5425347 #>  [399,] 0.30852987 0.4874972 0.5051761 0.5351163 0.5641137 0.6833661 0.7174088 #>  [400,] 0.19172984 0.3179728 0.3384496 0.3802163 0.3909788 0.4237416 0.4655321 #>  [401,] 0.69619937 1.0086899 1.0502968 1.1538573 1.2617397 1.3392442 1.3610973 #>  [402,] 0.59293111 0.6027672 0.6185759 0.6772455 0.6966987 0.7211601 0.7231057 #>  [403,] 0.23575971 0.3265346 0.4798148 0.4831149 0.4858446 0.5382044 0.5828191 #>  [404,] 0.48489381 0.5137629 0.7760316 0.8562062 0.8808904 1.1166206 1.1246544 #>  [405,] 0.19700093 0.5462775 0.5975349 0.6159421 0.6387536 0.6928675 0.6947410 #>  [406,] 0.20991061 0.3015939 0.5570208 0.5829449 0.5942038 0.6301349 0.6518516 #>  [407,] 0.45352538 0.4878334 0.4991458 0.5726125 0.6565771 0.6589534 0.7049901 #>  [408,] 0.39688733 0.5640423 0.6591919 0.7368828 0.9045349 0.9206954 0.9496518 #>  [409,] 0.59558279 0.6743557 0.7655814 0.9603450 1.0078217 1.0095261 1.0249828 #>  [410,] 0.47579920 0.4769370 0.5470430 0.5628845 0.5941348 0.6862944 0.6961983 #>  [411,] 0.31578572 0.4387547 0.5335056 0.5604370 0.5659028 0.7271095 0.7521758 #>  [412,] 0.37540932 0.4387547 0.4644535 0.4747977 0.6249892 0.6269492 0.6443456 #>  [413,] 0.36132926 0.4705946 0.5076014 0.5423050 0.6159417 0.6181605 0.6365452 #>  [414,] 0.52547241 0.5641448 0.5954285 0.6443966 0.6674821 0.6833661 0.7300979 #>  [415,] 0.42163411 0.7202120 0.7717650 0.9986694 1.0821397 1.0865172 1.0890745 #>  [416,] 0.45339041 0.5579773 0.5824856 0.6395115 0.7691835 0.7949596 0.8465904 #>  [417,] 0.44472632 0.4971609 0.5713291 0.6641548 0.7121883 0.7469217 0.7665086 #>  [418,] 0.34423353 0.5537228 0.7848050 0.8179298 0.8245071 0.8414834 0.8462319 #>  [419,] 0.58763173 0.5986020 0.6331820 0.7202659 0.7698620 0.8595283 0.8953108 #>  [420,] 0.57559646 0.5816627 0.6099832 0.7915996 0.8031219 0.8447410 0.8772675 #>  [421,] 0.39527530 0.4201376 0.4671383 0.5816937 0.6078546 0.6215588 0.6295034 #>  [422,] 0.51710762 0.5669433 0.6399772 0.7757581 0.8184800 0.8282573 0.8363543 #>  [423,] 0.35014647 0.4192430 0.5798291 0.5893465 0.5916453 0.6599549 0.6793446 #>  [424,] 0.47785766 0.4885092 0.5587710 0.6348789 0.6490367 0.6956853 0.6972968 #>  [425,] 0.33035650 0.3582341 0.6226865 0.7165781 0.7230323 0.8199940 0.8248801 #>  [426,] 0.39850601 0.4079068 0.4173271 0.4254675 0.4347489 0.4359323 0.5140871 #>  [427,] 0.80165283 1.0619780 1.1245446 1.1919248 1.2000743 1.2926038 1.3024413 #>  [428,] 0.32640665 0.4083511 0.4123662 0.4527398 0.4706895 0.4746422 0.4937230 #>  [429,] 0.34767718 0.5803765 0.7047573 0.7218738 0.8299392 0.8415777 0.8906779 #>  [430,] 1.39318466 1.4508646 1.5349116 1.6781118 1.6929454 1.7140726 1.8393415 #>  [431,] 0.40000421 0.4389759 0.5582530 0.5836520 0.6060816 0.6415023 0.6442075 #>  [432,] 0.64045885 0.7204013 0.7453990 0.7552939 0.7776833 0.7781939 0.8110921 #>  [433,] 0.34011941 0.4574750 0.5101878 0.5770136 0.5801564 0.5881086 0.6007379 #>  [434,] 0.37684891 0.6049987 0.6069402 0.6909635 0.7050312 0.7665570 0.8034557 #>  [435,] 0.35842184 0.4356031 0.4757992 0.4963598 0.6309894 0.6361071 0.6600697 #>  [436,] 0.50349566 0.7670640 0.7973409 0.8508192 0.8813094 0.9569591 0.9795791 #>  [437,] 0.42309639 0.4998447 0.5703573 0.6363296 0.7330056 0.8619404 0.9210661 #>  [438,] 0.51835514 0.6116664 0.6481850 0.7282153 0.7399365 0.7883314 0.7995341 #>  [439,] 0.22651562 0.5703573 0.6192609 0.7123239 0.7699154 0.8019361 0.8089977 #>  [440,] 0.35112121 0.3940023 0.4036805 0.4076221 0.4598616 0.4905401 0.5098182 #>  [441,] 0.77995009 1.0170964 1.0853513 1.2555276 1.3294890 1.3306620 1.3558075 #>  [442,] 0.54457571 0.6232096 0.6545498 0.6656432 0.7330860 0.7710247 0.8213352 #>  [443,] 0.22058435 0.4505613 0.5240899 0.5362188 0.5410748 0.5512080 0.5899214 #>  [444,] 0.98854553 1.0701098 1.1866168 1.2230953 1.3882194 1.4636210 1.4844141 #>  [445,] 0.33044002 0.3788533 0.4160242 0.4787389 0.5036873 0.5430400 0.6435166 #>  [446,] 0.59045676 0.6074840 0.6194437 0.6249892 0.6252928 0.6838176 0.7271095 #>  [447,] 0.40781691 0.7659112 0.8012506 0.9027819 0.9172484 0.9795255 0.9987535 #>  [448,] 0.41236622 0.4147290 0.5056989 0.5064024 0.5351712 0.5651191 0.5678139 #>  [449,] 0.79932759 0.8031219 0.8068478 0.8621147 0.8863672 0.9173670 0.9643110 #>  [450,] 0.29884836 0.4008128 0.4402361 0.4614438 0.4619960 0.4658309 0.4701996 #>  [451,] 0.73338812 0.9124183 1.0897069 1.1602788 1.2743271 1.2818842 1.3312725 #>  [452,] 0.77420892 0.8868519 0.8897111 0.9039617 1.0089700 1.0203485 1.0366648 #>  [453,] 0.51826880 0.5360605 0.5447243 0.5697857 0.6082029 0.6641989 0.6946534 #>  [454,] 0.21267415 0.3179728 0.3373517 0.3383154 0.3423120 0.3782893 0.3792961 #>  [455,] 0.45301230 0.5306616 0.5434720 0.5487853 0.5525949 0.5532701 0.5539619 #>  [456,] 0.26251874 0.4654902 0.4896381 0.5415564 0.5674006 0.6429631 0.6453937 #>  [457,] 0.76904599 0.7986504 0.8333399 0.8720576 1.0031724 1.0847096 1.0858456 #>  [458,] 0.63248508 0.6794888 0.9129278 1.0282142 1.0479434 1.0512353 1.0834116 #>  [459,] 0.79765977 0.9912473 1.0574867 1.0603788 1.0904393 1.0945397 1.1215809 #>  [460,] 0.23575971 0.3287951 0.4646941 0.5029464 0.5434172 0.5480480 0.6000076 #>  [461,] 0.35191457 0.3934488 0.4234697 0.5175917 0.5196833 0.5248623 0.5363593 #>  [462,] 0.21534136 0.2935397 0.5248623 0.5528663 0.5573371 0.5774567 0.5830352 #>  [463,] 0.38436790 0.4194893 0.5069871 0.5190864 0.5767464 0.6194143 0.6380595 #>  [464,] 0.16740855 0.3818650 0.4305202 0.4641426 0.5434417 0.5790533 0.6088420 #>  [465,] 0.37580414 0.6708210 0.6747541 0.7143577 0.7151404 0.7238193 0.7342166 #>  [466,] 0.34408852 0.3839428 0.4363050 0.4531649 0.5354377 0.5355036 0.5728629 #>  [467,] 0.37818833 0.7885251 1.0563974 1.0747214 1.1221626 1.1742288 1.2598655 #>  [468,] 0.40781691 0.7276647 0.7835862 1.0522825 1.0697438 1.0845936 1.2442630 #>  [469,] 0.37838532 0.5549199 0.6687884 0.6982445 0.7035210 0.7152939 0.7199063 #>  [470,] 0.77617673 0.8030790 0.8771429 0.8818241 0.9520658 1.0144616 1.0449227 #>  [471,] 0.58257368 0.6768553 0.7186679 0.7706694 0.7955183 0.7986229 0.8113337 #>  [472,] 0.36817655 0.5752415 0.6436410 0.6442017 0.6667461 0.7058156 0.7081799 #>  [473,] 0.34433447 0.5503459 0.6955793 0.7254220 0.8374246 0.8379048 0.8547803 #>  [474,] 0.48122241 0.6192609 0.6307920 0.6629391 0.6885684 0.7244814 0.7400399 #>  [475,] 0.25093233 0.2711560 0.3901847 0.5323004 0.5410748 0.5550738 0.5910015 #>  [476,] 0.62965159 0.7494443 0.9206686 1.0345323 1.1111480 1.1192861 1.1412062 #>  [477,] 0.25966695 0.5633872 0.6799315 0.7464348 0.7669179 0.7712298 0.7783694 #>  [478,] 0.35221809 0.4939056 0.4971609 0.5408722 0.5409484 0.6728686 0.6934067 #>  [479,] 0.51562364 0.6060816 0.6426156 0.6501762 0.7219515 0.7487504 0.7564779 #>  [480,] 0.31953422 0.3758423 0.3998090 0.4357464 0.4911885 0.4928762 0.5382044 #>  [481,] 0.24681262 0.4228004 0.5434720 0.5748554 0.6086806 0.6547122 0.6679195 #>  [482,] 0.85566441 1.1365892 1.1495364 1.1869444 1.2604442 1.2715317 1.2737379 #>  [483,] 0.49560849 0.5622259 0.5989847 0.6092813 0.6831603 0.7266561 0.8451936 #>  [484,] 0.23221319 0.3204394 0.5423050 0.5916362 0.6274354 0.7399365 0.7771049 #>  [485,] 0.47403268 0.5513688 0.5596641 0.5679907 0.5682563 0.5859810 0.6156728 #>  [486,] 0.49467765 0.5043742 0.5737089 0.6298061 0.6584168 0.7423514 0.7429950 #>  [487,] 0.56779137 0.7185089 0.7192118 0.7692171 0.7915921 0.8091958 0.8272073 #>  [488,] 1.13792911 1.6144372 1.6213723 1.6778085 1.7012867 1.8415014 1.8576301 #>  [489,] 0.53671261 0.7255603 0.8340908 0.8745557 0.9022636 0.9048478 0.9083002 #>  [490,] 0.80165283 0.9123214 0.9875225 1.1064863 1.1339069 1.1561434 1.1568911 #>  [491,] 0.62384945 0.7236570 0.7648019 0.7977762 0.8164876 0.8553298 0.9101832 #>  [492,] 0.37777277 0.3919227 0.3940023 0.4208359 0.4212866 0.4785935 0.5095780 #>  [493,] 0.24064592 0.4285375 0.5171371 0.5369552 0.5602332 0.5859789 0.5936950 #>  [494,] 0.28882550 0.3153491 0.4342713 0.5048701 0.5217994 0.5552467 0.5914561 #>  [495,] 0.70351111 0.8971561 1.1455838 1.3060607 1.5724565 1.6143255 1.6180938 #>  [496,] 0.41451694 0.4695729 0.4814304 0.6536018 0.7375226 0.8170860 0.8432428 #>  [497,] 0.49136919 0.6731245 0.7043876 0.7137892 0.7253513 0.7760316 0.8081339 #>  [498,] 0.55091375 0.9137626 0.9196439 0.9286063 0.9363566 0.9802034 1.0330389 #>  [499,] 0.51285122 0.6294317 0.7049901 0.7140204 0.7195147 0.7862890 0.8016741 #>  [500,] 0.56107059 0.8026615 0.9366341 0.9539276 0.9651361 1.0716203 1.0740387 #>  [501,] 0.57626358 0.7829929 0.7996322 0.8345229 0.9550958 0.9788063 0.9795791 #>  [502,] 0.32157601 0.4207438 0.5006405 0.5462676 0.5634012 0.5963030 0.6009522 #>  [503,] 0.22556995 0.2257110 0.4304556 0.4334683 0.4430726 0.4531649 0.4843438 #>  [504,] 0.44706593 0.6219028 0.6810970 0.6945240 0.8420255 0.8752675 0.8930917 #>  [505,] 0.44299056 0.5955828 0.8920539 1.1278632 1.1337572 1.2330310 1.2341092 #>  [506,] 0.48776060 0.4941461 0.5222070 0.5289982 0.6311566 0.6343805 0.6378452 #>  [507,] 0.12448067 0.3064632 0.3079381 0.4097976 0.4558246 0.4772277 0.5079705 #>  [508,] 0.27599528 0.3112953 0.3398481 0.3444417 0.4348816 0.4883538 0.4924793 #>  [509,] 0.73730893 0.8575059 0.9306149 1.1342982 1.2419512 1.4130903 1.4143499 #>  [510,] 0.30436974 0.5230245 0.5477227 0.5660109 0.5940355 0.6375858 0.6384582 #>  [511,] 0.28666494 0.3899819 0.5003103 0.5064024 0.5289961 0.5942258 0.6085690 #>  [512,] 0.79282325 1.3863230 1.5063626 1.5377486 1.6634053 1.7547433 1.7748953 #>  [513,] 0.55091375 0.6426156 0.6729400 0.6907997 0.7856275 0.8194579 0.8201815 #>  [514,] 0.19973417 0.3194569 0.4043781 0.4265450 0.4940077 0.5304576 0.5409493 #>  [515,] 0.19172984 0.2793457 0.3735354 0.4108784 0.4512547 0.5038331 0.5268145 #>  [516,] 0.34367888 0.5439366 0.5887255 0.6824718 0.6945541 0.7192439 0.7513681 #>  [517,] 0.43593115 0.4665737 0.5358350 0.5391223 0.5436353 0.5770097 0.6158812 #>  [518,] 0.40150147 0.4565358 0.5817517 0.5992993 0.6175772 0.6757054 0.6904061 #>  [519,] 0.33331334 0.4903754 0.5436016 0.5520611 0.5883052 0.6417246 0.6429631 #>  [520,] 0.37540932 0.5240899 0.5450802 0.5757215 0.5902803 0.6068834 0.6165220 #>  [521,] 0.92575550 1.0143949 1.0169220 1.0881411 1.1412326 1.2155630 1.2348098 #>  [522,] 0.80266153 0.9197580 0.9996256 1.1587641 1.1619541 1.1749394 1.2017543 #>  [523,] 0.78358621 0.9188166 0.9267930 0.9613941 1.0011413 1.0047642 1.0685405 #>  [524,] 0.48490197 0.5308763 0.5339970 0.6487988 0.6501372 0.7467189 0.7932340 #>  [525,] 0.57368340 0.8184837 0.8580661 0.8953537 1.0083274 1.0502968 1.0644100 #>  [526,] 0.47408595 0.5109357 0.6512444 0.7109180 0.7255603 0.7801814 0.8163748 #>  [527,] 0.28044713 0.2942697 0.3515838 0.4019918 0.4214965 0.4344773 0.5057469 #>  [528,] 0.52183889 0.5996752 0.7027823 0.7605785 0.7823092 0.8406248 0.9314070 #>  [529,] 0.38764375 0.4208359 0.4270814 0.4846648 0.5322830 0.5463962 0.5695330 #>  [530,] 0.49158224 0.5741009 0.5905569 0.6363296 0.6980473 0.8366936 0.8924804 #>  [531,] 1.36190040 1.4337013 1.4433353 1.5782486 1.6720411 1.6970050 1.7363704 #>  [532,] 0.70675053 0.7864159 0.8577179 0.9032108 1.0483272 1.0866135 1.0923414 #>  [533,] 0.69619937 0.7043876 0.7648869 0.7692430 0.8215594 0.8580661 0.9403179 #>  [534,] 0.37684891 0.5815260 0.6116664 0.6926370 0.7307135 0.7426737 0.7806637 #>  [535,] 0.46847253 0.7464360 0.7691835 0.8165196 0.9303635 0.9470164 0.9607747 #>  [536,] 0.38000414 0.4254675 0.5210000 0.5346225 0.5424310 0.5779324 0.5999008 #>  [537,] 0.37197008 0.3826906 0.4594144 0.4623754 0.5124955 0.5752956 0.5952033 #>  [538,] 0.31633218 0.3898956 0.5748744 0.5787282 0.6002412 0.6163447 0.6450028 #>  [539,] 0.57954629 0.5905569 0.8362162 0.8386003 0.8402566 0.8472822 0.9173381 #>  [540,] 0.54501449 0.7472280 0.8369719 1.0092543 1.0375198 1.0467438 1.0468337 #>  [541,] 0.35893392 0.5239929 0.5362188 0.5400207 0.5684520 0.5825851 0.5836868 #>  [542,] 0.57213047 0.6192648 0.8513106 0.8545831 0.8909322 0.9015963 0.9450236 #>  [543,] 0.37239037 0.3777728 0.4036805 0.4270814 0.4719913 0.5000465 0.5003857 #>  [544,] 0.61618869 0.6809198 0.6931599 0.7755478 0.7837732 0.8224567 0.8772601 #>  [545,] 0.60640931 0.6498244 0.7603206 0.7976091 0.8163238 0.8216895 0.8330265 #>  [546,] 1.18063847 1.7020776 1.7216580 1.8823609 1.8949023 1.9538048 1.9879837 #>  [547,] 0.96689003 1.0039810 1.0106301 1.0114832 1.0225515 1.0611219 1.0894698 #>  [548,] 0.60385490 0.6243958 0.6404589 0.7340441 0.7551623 0.7849675 0.8133441 #>  [549,] 0.40023173 0.4186423 0.4436010 0.4641426 0.4891803 0.5166223 0.5268662 #>  [550,] 0.36817655 0.4491082 0.4582160 0.4832023 0.5389671 0.5426152 0.5449115 #>  [551,] 0.39287362 0.4221835 0.4906619 0.4975531 0.5297851 0.5824967 0.5916145 #>  [552,] 0.47275247 0.5207837 0.5361705 0.5497418 0.6048892 0.6096898 0.6135508 #>  [553,] 0.71514878 0.7529725 0.7668322 0.7769018 0.7924640 0.8224637 0.9073579 #>  [554,] 0.56850903 0.6137277 0.6179473 0.6216471 0.6592861 0.6703630 0.7012101 #>  [555,] 0.54406474 0.6409443 0.6708344 0.6710213 0.6838176 0.6920590 0.6927885 #>  [556,] 0.47460586 0.6329181 0.6551817 0.7649759 0.7992372 0.8298034 0.8479974 #>  [557,] 0.54675093 0.6593766 0.7441160 0.8119432 0.8303063 0.9423400 0.9483605 #>  [558,] 0.12545037 0.1993586 0.2439954 0.3726152 0.4671173 0.4885548 0.5638924 #>  [559,] 0.38080757 0.4116465 0.4516023 0.4542798 0.4966740 0.5253372 0.5459966 #>  [560,] 0.93061494 1.0056533 1.1804126 1.3423700 1.3847457 1.6171344 1.6745326 #>  [561,] 0.52792315 0.5415564 0.5520611 0.5780571 0.6252928 0.6512715 0.6789752 #>  [562,] 0.37137846 0.3826906 0.4022882 0.4998417 0.5264727 0.5587710 0.5763049 #>  [563,] 0.16008334 0.2449162 0.3788533 0.4413573 0.5260984 0.5370870 0.5658074 #>  [564,] 0.24791283 0.2798720 0.2858308 0.3423120 0.4119555 0.4662800 0.4747876 #>  [565,] 0.49833922 0.5296113 0.5342883 0.5863886 0.6294845 0.6617426 0.7087542 #>  [566,] 0.60310997 0.6331186 0.6412679 0.7063601 0.7670640 0.7971703 0.8345229 #>  [567,] 0.37989705 0.4371938 0.4705946 0.6188597 0.6213974 0.6811279 0.6975652 #>  [568,] 0.34861404 0.3788511 0.4896381 0.5912296 0.6285687 0.6307474 0.6462020 #>  [569,] 0.77530418 0.8144902 0.8194579 0.8333293 0.8385181 0.8632501 0.8956069 #>  [570,] 0.46085742 0.5876317 0.5912805 0.6621285 0.7426085 0.7590391 0.7947603 #>  [571,] 0.49549662 0.5577023 0.6200499 0.7078609 0.7204419 0.7590812 0.7646843 #>  [572,] 0.48069254 0.4845384 0.5033875 0.5502171 0.5508319 0.6013398 0.6514202 #>  [573,] 0.64733741 0.6893190 0.6939188 0.7063779 0.7408240 0.7476516 0.7574174 #>  [574,] 0.19935864 0.2196029 0.2727244 0.3765577 0.3852905 0.4888970 0.5927198 #>  [575,] 0.62520677 0.6843997 0.6941518 0.7094630 0.8604679 0.8727752 0.8980759 #>  [576,] 0.27239735 0.4144687 0.5095780 0.5404859 0.5464600 0.5537013 0.5703011 #>  [577,] 0.33831536 0.4119555 0.4638287 0.4655321 0.4897457 0.5053144 0.5109378 #>  [578,] 0.34520051 0.5213395 0.7095258 0.8033256 0.8034613 0.8113751 0.8588496 #>  [579,] 0.48937627 0.5242814 0.5347126 0.5358513 0.5748744 0.6125388 0.7141060 #>  [580,] 0.12448067 0.3124877 0.3151665 0.3583659 0.3609975 0.4298063 0.5330191 #>  [581,] 0.79271623 0.7976598 0.8374580 0.9756199 1.0144683 1.0513026 1.1303913 #>  [582,] 0.66620378 0.7490988 0.7994292 0.8372077 0.8577179 0.9034034 0.9944720 #>  [583,] 0.27126130 0.5277355 0.6886316 0.7302624 0.7349276 0.7379351 0.7806637 #>  [584,] 0.20839093 0.4060124 0.4523200 0.5133331 0.5544078 0.5836520 0.7185089 #>  [585,] 0.42461989 0.5039031 0.5209425 0.5802976 0.6009522 0.6022337 0.6152629 #>  [586,] 0.66483930 0.7322815 0.7427035 0.7492492 0.7614226 0.7757581 0.7766514 #>  [587,] 0.29919644 0.6991414 0.8025077 0.8374580 0.8448620 0.9047894 0.9093097 #>  [588,] 0.40056744 0.4017976 0.5389487 0.5523784 0.5985714 0.6138746 0.6235452 #>  [589,] 0.39803327 0.5849735 0.6245517 0.7435365 0.8679073 0.8742367 0.8819325 #>  [590,] 0.37750044 0.5928785 0.6039384 0.6327187 0.6367965 0.6611531 0.7434999 #>  [591,] 0.33331334 0.3585660 0.3806089 0.4541270 0.5279232 0.5550515 0.5904568 #>  [592,] 0.41093989 0.6027672 0.6586885 0.7175935 0.7550070 0.7602957 0.7605520 #>  [593,] 0.50247237 0.5475498 0.5949346 0.6350364 0.6617426 0.7277084 0.7342388 #>  [594,] 0.45921391 0.6037953 0.6564100 0.6589561 0.6893190 0.6906174 0.7173967 #>  [595,] 0.22638065 0.3724672 0.4043781 0.4415368 0.4717560 0.5167386 0.5744876 #>  [596,] 0.50913559 0.5132842 0.5454522 0.5617007 0.5888050 0.5936950 0.6058697 #>  [597,] 0.47235632 0.6698449 0.7354620 0.7830326 0.7946616 0.8037722 0.8067471 #>  [598,] 0.30077927 0.3398481 0.3761160 0.5103615 0.5155095 0.5177376 0.5231161 #>  [599,] 0.35013066 0.4893763 0.6140897 0.6163447 0.6268453 0.6908599 0.7354855 #>  [600,] 0.85673989 0.8778580 0.9008280 0.9801387 0.9934864 1.0091058 1.0207433 #>  [601,] 0.33145674 0.3998090 0.4787389 0.4888362 0.4946492 0.4953075 0.5008823 #>  [602,] 0.29725231 0.4897568 0.5409493 0.5547479 0.6199658 0.6207874 0.6243471 #>  [603,] 0.54660564 0.5867226 0.6949650 0.7086965 0.7323249 0.7683576 0.7808327 #>  [604,] 1.14713379 1.2650795 1.3230227 1.3433368 1.4122134 1.4573729 1.4818597 #>  [605,] 0.31250025 0.3410542 0.3900652 0.4153513 0.4511293 0.4552432 0.4606264 #>  [606,] 0.32157601 0.3468906 0.4201376 0.4308211 0.4995784 0.5464641 0.5498248 #>  [607,] 0.68742099 0.8715888 0.9427922 0.9829166 1.0317399 1.0346750 1.0754004 #>  [608,] 1.20986911 1.3587358 1.3709960 1.5473017 1.6061051 1.6182185 1.6343619 #>  [609,] 0.08838292 0.2716072 0.2742528 0.4968621 0.6523190 0.6626130 0.6775055 #>  [610,] 0.26875026 0.2935397 0.4272040 0.4843953 0.5182688 0.5212239 0.5525530 #>  [611,] 0.61566123 0.6177650 0.6729400 0.6895599 0.6990100 0.7175935 0.7277624 #>  [612,] 0.19973417 0.2263806 0.3005243 0.3566287 0.4478191 0.5101878 0.5547479 #>  [613,] 0.15797941 0.2714273 0.3406825 0.4347489 0.4585898 0.4883146 0.5011181 #>  [614,] 0.32750089 0.3375586 0.3573415 0.3709019 0.4150961 0.4963598 0.5249970 #>  [615,] 0.49653450 0.6003563 0.6102565 0.6150786 0.6565771 0.6589927 0.6710311 #>  [616,] 0.37131730 0.3901847 0.4934245 0.5543276 0.5720529 0.6168438 0.6380466 #>  [617,] 0.41451694 0.5400207 0.5921511 0.6924277 0.7093275 0.7697563 0.7993549 #>  [618,] 0.34861404 0.4648103 0.4654562 0.4654902 0.5143991 0.5638924 0.5925162 #>  [619,] 0.77257980 1.0997888 1.1606942 1.3961962 1.4479373 1.4918316 1.5103144 #>  [620,] 0.34887046 0.6952053 0.7751955 0.8100945 0.8473116 0.9318612 0.9531373 #>  [621,] 0.37828926 0.4816555 0.5227327 0.5240436 0.5422043 0.5736446 0.5907975 #>  [622,] 1.00526538 1.1642248 1.2128031 1.3261818 1.3719356 1.3876612 1.4061792 #>  [623,] 0.30410932 0.3751771 0.4582160 0.4587489 0.5025933 0.5080940 0.5246475 #>  [624,] 0.23493814 0.3327804 0.3368619 0.3943302 0.5870723 0.5873668 0.6757704 #>  [625,] 0.27590979 0.5076014 0.5550515 0.5907358 0.5916362 0.6417246 0.6852087 #>  [626,] 0.50184256 0.8427633 0.8920539 0.9350142 0.9591432 1.0095261 1.0992977 #>  [627,] 0.37958762 0.4942730 0.4983392 0.5949346 0.6033788 0.6481902 0.6939287 #>  [628,] 0.37707816 0.4711486 0.5190796 0.6275213 0.6358056 0.7036963 0.7103826 #>  [629,] 0.56066843 0.8165196 0.8540856 0.8788343 0.9095031 0.9374534 1.0968057 #>  [630,] 0.25621051 0.3248058 0.3675701 0.4486775 0.4511293 0.4611479 0.4614438 #>  [631,] 0.39678810 0.4261515 0.5411297 0.5538634 0.6118077 0.6260859 0.6816703 #>  [632,] 0.45591346 0.5064854 0.5358350 0.5931951 0.6084502 0.7130124 0.8028653 #>  [633,] 0.36228527 0.5445432 0.5759287 0.6332645 0.6456855 0.6626130 0.7168108 #>  [634,] 0.43367017 0.5830055 0.6296516 0.6869540 0.8489611 0.8866819 0.8897492 #>  [635,] 1.38632295 1.4011912 1.4043130 1.4310657 1.4555293 1.5030107 1.5341531 #>  [636,] 0.51782002 0.5194532 0.5509725 0.5528663 0.5613763 0.5664317 0.5813276 #>  [637,] 0.55661393 0.7506206 0.8011116 0.8263691 0.8637595 0.8734356 0.9048283 #>  [638,] 0.56019871 0.7799501 0.8060179 0.8184495 0.8310557 0.9076555 0.9126374 #>  [639,] 0.22058435 0.5783218 0.5836868 0.5902803 0.6323335 0.6443456 0.6473558 #>  [640,] 0.34265300 0.4748361 0.4893252 0.5476988 0.5488778 0.5509725 0.5977027 #>  [641,] 0.44670526 0.4971112 0.5277355 0.5718213 0.5757848 0.6031100 0.6865836 #>  [642,] 0.50514713 0.5467509 0.5941348 0.7056306 0.7287212 0.7450282 0.7729635 #>  [643,] 0.30646317 0.3124877 0.3136469 0.3501037 0.4066756 0.4571904 0.4636812 #>  [644,] 0.51562364 0.5385514 0.6075430 0.6118586 0.6378452 0.6514905 0.6988472 #>  [645,] 0.82560678 0.9358730 1.1214995 1.1410482 1.2013951 1.2052385 1.2228805 #>  [646,] 0.57989342 0.6587926 0.7186679 0.7410985 0.8574803 0.8646562 0.9201228 #>  [647,] 0.41164645 0.4272931 0.5045029 0.5207837 0.5305684 0.5575160 0.5596641 #>  [648,] 0.46847253 1.0517157 1.0706281 1.0839131 1.0949716 1.0968057 1.1248455 #>  [649,] 0.42917682 0.5830055 0.7305713 0.7878179 0.8871003 0.9344106 0.9674112 #>  [650,] 0.46783934 0.7652141 0.8300007 0.9015832 1.0074023 1.1082001 1.1287005 #>  [651,] 0.15918668 0.5128512 0.5604178 0.6104634 0.6223723 0.6249558 0.6657882 #>  [652,] 0.25060958 0.2971402 0.3461326 0.3463531 0.3683921 0.4147290 0.4527398 #>  [653,] 0.60517364 0.8328927 0.8631320 0.9284754 0.9938908 1.0591525 1.0850735 #>  [654,] 0.35098935 0.4493057 0.4611508 0.4650879 0.4833990 0.5146767 0.5595555 #>  [655,] 0.47408595 0.5038046 0.5440496 0.6249055 0.7077662 0.8179046 0.8360712 #>  [656,] 0.37556114 0.4251696 0.4704493 0.5295488 0.5400511 0.5504996 0.5507946 #>  [657,] 0.36879953 0.4109371 0.5259627 0.6424889 0.6596633 0.6909635 0.6945240 #>  [658,] 0.36780332 0.4970946 0.5333807 0.5516505 0.5911588 0.6538204 0.6595848 #>  [659,] 1.16629281 1.2406140 1.3203683 1.4583575 1.6716373 1.7259919 1.7512249 #>  [660,] 0.35621757 0.4726514 0.5215530 0.5562227 0.5982023 0.6621285 0.7503853 #>  [661,] 0.82203889 0.9315362 0.9528004 0.9689935 1.0187083 1.0253888 1.0446737 #>  [662,] 0.49984474 0.5345043 0.5741009 0.6160252 0.6535346 0.6991268 0.7608742 #>  [663,] 0.29106793 0.2923833 0.3138676 0.5102374 0.5125171 0.5188261 0.5207855 #>  [664,] 0.58638858 0.6980980 0.7487108 0.8584062 0.8682452 0.8783046 0.9181219 #>  [665,] 0.66778881 0.7884078 0.9040669 0.9443084 0.9695268 1.0169220 1.0342679 #>  [666,] 0.38097233 0.5586878 0.5638756 0.5737455 0.5977027 0.6139653 0.6452394 #>  [667,] 0.61868621 0.7118217 0.7681719 0.8755289 0.9182318 0.9535847 1.0268815 #>  [668,] 0.50907026 0.5701247 0.5707772 0.6041246 0.6160314 0.6331820 0.6333831 #>  [669,] 0.62853071 0.6533252 0.7421971 0.7852745 0.8313429 0.8403942 0.8666362 #>  [670,] 0.57488666 0.7305713 0.7891179 0.8848566 0.8970360 0.9351005 0.9452430 #>  [671,] 0.36546789 0.4205039 0.4363068 0.4726594 0.5237047 0.5295974 0.5504795 #>  [672,] 0.50629874 0.5389487 0.5682151 0.6427411 0.7211576 0.7614008 0.8108523 #>  [673,] 0.80423494 0.8688788 0.9325010 1.0765140 1.1121641 1.1299177 1.1354728 #>  [674,] 0.55797730 0.5583836 0.5799649 0.7345205 0.8113751 0.8904434 0.8920685 #>  [675,] 0.52466002 0.5541736 0.5720634 0.5746090 0.6740866 0.6743808 0.7181106 #>  [676,] 0.79330125 0.9304826 0.9374534 0.9754777 1.1072525 1.1420670 1.1856185 #>  [677,] 0.26461529 0.2759953 0.4380390 0.4775700 0.5082022 0.5155095 0.5349264 #>  [678,] 0.42066193 0.5307944 0.5759287 0.5797634 0.6641548 0.6786845 0.7677018 #>  [679,] 0.28882550 0.3758254 0.3819758 0.3993022 0.4055265 0.5343450 0.5349264 #>  [680,] 1.15783948 1.1828564 1.1906219 1.3206799 1.3257255 1.3329036 1.3523146 #>  [681,] 1.01705544 1.2076959 1.2552084 1.3397102 1.3694322 1.4508646 1.5590277 #>  [682,] 0.37556114 0.3761160 0.4055922 0.4883538 0.4948272 0.5311159 0.5549595 #>  [683,] 1.05886105 1.1127985 1.1958804 1.4609357 1.5257973 1.6309030 1.6730678 #>  [684,] 0.39722672 0.4282355 0.4477467 0.5133331 0.5677914 0.6209772 0.6323663 #>  [685,] 0.22651562 0.4812224 0.6041246 0.7330056 0.7583067 0.7601525 0.7698620 #>  [686,] 0.44706593 0.5259627 0.6049606 0.6689101 0.6709111 0.6994007 0.7163223 #>  [687,] 0.72458840 0.9941067 1.2421536 1.2437300 1.2739303 1.3110850 1.3140121 #>  [688,] 0.62864189 0.6560633 0.6798616 0.6977430 0.7636421 0.8087617 0.9174114 #>  [689,] 0.49066399 0.6185759 0.7228461 0.8011483 0.8324253 0.8405892 0.9201228 #>  [690,] 0.24491617 0.2707842 0.3304400 0.3314567 0.5125576 0.5331721 0.5611150 #>  [691,] 0.71514878 0.8001136 0.8336484 0.8376592 0.8590428 0.8705796 0.8754859 #>  [692,] 0.68742099 1.0019068 1.0299608 1.3820097 1.3901001 1.4126445 1.4155199 #>  [693,] 0.26251874 0.4648103 0.5629602 0.5912296 0.5992240 0.6501255 0.6786836 #>  [694,] 0.29533636 0.3406825 0.3900652 0.4152236 0.4532401 0.4658309 0.4768041 #>  [695,] 0.36659245 0.3672576 0.4331048 0.5488778 0.5544258 0.6798802 0.6827584 #>  [696,] 0.46267354 0.8875341 1.0070199 1.0268929 1.0818112 1.0876951 1.0957592 #>  [697,] 0.35221809 0.4447263 0.5213395 0.5253793 0.6573206 0.7042383 0.7273162 #>  [698,] 0.35621757 0.3594571 0.4727525 0.5650558 0.5912805 0.5991376 0.6499956 #>  [699,] 0.50698709 0.5425258 0.5464878 0.6213875 0.7007382 0.7276922 0.7525606 #>  [700,] 0.41819026 0.6125388 0.6990868 0.7411246 0.7699693 0.7723237 0.7894107 #>  [701,] 0.69410974 0.8406113 0.9562271 0.9585650 1.0282412 1.0491925 1.0551769 #>  [702,] 0.47635532 0.4858587 0.5487788 0.5853853 0.5970800 0.6126886 0.6342430 #>  [703,] 0.22571101 0.2700971 0.2995185 0.4198665 0.4212793 0.5228647 0.5375561 #>  [704,] 0.38942729 0.4288213 0.4760001 0.5289982 0.5542009 0.6097347 0.6118586 #>  [705,] 0.73663162 0.7829929 0.8176631 1.1974316 1.2042145 1.2166739 1.2624428 #>  [706,] 0.70957943 1.1865129 1.2398548 1.2403447 1.2691065 1.2755226 1.3152530 #>  [707,] 0.39145504 0.4212793 0.4334683 0.5454522 0.6352554 0.6591974 0.6643463 #>  [708,] 0.36009695 0.5103729 0.5699069 0.5854541 0.5992093 0.6205667 0.6296057 #>  [709,] 0.44299056 0.6743557 0.9902403 1.0987962 1.1573794 1.1665652 1.2102968 #>  [710,] 0.57459576 0.7330792 0.8542630 0.8590884 0.9293343 0.9348284 0.9397078 #>  [711,] 0.31056069 0.4860863 0.5771354 0.6429181 0.6679799 0.7120535 0.7180476 #>  [712,] 0.74523665 0.9376722 1.0318255 1.0419567 1.1289302 1.1573618 1.1613535 #>  [713,] 0.49707674 0.5361705 0.6499956 0.7171390 0.7437952 0.7810906 0.7874773 #>  [714,] 0.71005471 0.8340908 1.0345461 1.0398490 1.0766946 1.1129523 1.1411827 #>  [715,] 0.38860025 0.4160082 0.6319139 0.6879806 0.7028452 0.7140003 0.7393618 #>  [716,] 0.38970886 0.5799649 0.5824856 0.6532233 0.7009250 0.7249624 0.8057380 #>  [717,] 0.43794754 0.5335056 0.6768977 0.6882728 0.7627681 0.8224561 0.8256946 #>  [718,] 0.39803327 0.5410580 0.5976469 0.6034167 0.6316067 0.6502532 0.7762961 #>  [719,] 0.63473868 0.7595308 0.8333321 0.9938286 1.1806296 1.1972426 1.2268096 #>  [720,] 0.61868621 0.6732418 0.9252317 0.9665892 1.1125643 1.1205421 1.2024927 #>  [721,] 1.07162028 1.0929976 1.1806385 1.2381545 1.3879424 1.3919336 1.4529343 #>  [722,] 0.51323592 0.5601987 0.7244814 0.7687940 0.8556449 0.8585861 0.8834665 #>  [723,] 0.56903220 0.5736834 0.6648279 0.8553092 0.8783810 0.8858952 0.9060416 #>  [724,] 0.54501449 0.5760128 0.6772455 0.7105527 0.7262913 0.8405892 0.9162829 #>  [725,] 0.18375629 0.3880876 0.3919179 0.4086183 0.4203225 0.4220917 0.4344773 #>  [726,] 0.52466002 0.5337955 0.5517085 0.5826511 0.6050265 0.6537174 0.6961425 #>  [727,] 0.17611954 0.2942697 0.3248058 0.3882071 0.4205039 0.4220917 0.4618221 #>  [728,] 0.39688733 0.7913231 0.8220554 0.8263691 0.8894044 0.9164822 0.9404307 #>  [729,] 0.43427127 0.5343450 0.5351712 0.5715657 0.6226575 0.6514568 0.6514905 #>  [730,] 0.34520051 0.6573206 0.8237306 0.9168969 0.9279626 0.9314608 1.0137918 #>  [731,] 0.34612117 0.4082104 0.4198665 0.4843438 0.5708386 0.5709738 0.5728629 #>  [732,] 0.74809281 0.7624129 0.7779691 0.8424100 0.8798276 0.8997842 0.9610290 #>  [733,] 0.37580414 0.3905129 0.4471440 0.4733165 0.5246475 0.6911193 0.6912768 #>  [734,] 0.36228527 0.5307944 0.5332694 0.6532799 0.7744585 0.7821160 0.7996949 #>  [735,] 1.24509498 1.2598835 1.3328162 1.5821880 1.5857365 1.6334998 1.6965700 #>  [736,] 0.45162664 0.5158471 0.5567602 0.6681361 0.6906918 0.7947404 0.7995341 #>  [737,] 0.28271105 0.3359666 0.3678014 0.5171371 0.5403760 0.5477227 0.5688987 #>  [738,] 0.44670526 0.5959438 0.6412679 0.7105023 0.7153048 0.7337609 0.7344953 #>  [739,] 0.54210559 0.5457465 0.6357879 0.7038546 0.7087542 0.7639937 0.7650300 #>  [740,] 0.37354974 0.5620359 0.5655909 0.5870723 0.6847828 0.6851526 0.7129528 #>  [741,] 0.29021981 0.3435843 0.5005976 0.5018985 0.5586994 0.5602461 0.5649581 #>  [742,] 0.56043697 0.6538949 0.6882728 0.7908189 0.7955380 0.8443680 0.9321622 #>  [743,] 0.37917759 0.4187587 0.4617537 0.4908667 0.5195892 0.5492449 0.6223043 #>  [744,] 0.67685988 0.7706578 0.8401499 0.8624764 0.9287412 0.9305214 0.9740594 #>  [745,] 0.37789036 0.5563416 0.5928029 0.6146429 0.6666294 0.6900424 0.7205641 #>  [746,] 0.73328302 1.0410489 1.1327459 1.2004510 1.2083856 1.2211414 1.2370877 #>  [747,] 0.45760052 0.5518003 0.5928029 0.6867000 0.7974873 0.9142375 0.9273456 #>  [748,] 0.34970755 0.4743187 0.7690460 0.7946616 0.8331198 0.8674289 0.8703224 #>  [749,] 0.31019877 0.6109019 0.6903925 0.7407795 0.7687940 0.7704404 0.7803179 #>  [750,] 0.46657372 0.5390305 0.5720529 0.6084502 0.6475094 0.6765748 0.6952053 #>  [751,] 0.83464228 0.8353398 0.9714709 0.9838568 1.0129266 1.0214219 1.0796755 #>  [752,] 0.29562325 0.4115608 0.4674203 0.5526943 0.5707772 0.5713688 0.6011920 #>  [753,] 0.50247824 0.5097096 0.5146767 0.5795281 0.6038549 0.6109148 0.6399772 #>  [754,] 0.32128729 0.3435843 0.4699677 0.4797414 0.4830822 0.4844015 0.5066242 #>  [755,] 0.68126336 0.6888005 0.7882985 0.8049026 0.8452965 0.8841528 0.9098963 #>  [756,] 0.45162664 0.5759314 0.6481850 0.7892429 0.8050512 0.8112181 0.8117780 #>  [757,] 0.76832137 0.8043348 0.8133832 0.8664737 0.9629706 0.9699532 1.0355362 #>  [758,] 0.62979811 0.7232305 1.1802584 1.2482806 1.2957958 1.3260160 1.3376554 #>  [759,] 0.30092896 0.3041093 0.4512167 0.4537297 0.5105359 0.5426152 0.5872266 #>  [760,] 0.36973189 0.6074840 0.6789752 0.7627681 0.7772437 0.7955380 0.8406113 #>  [761,] 0.45871058 0.4986063 0.4989642 0.5608876 0.5661197 0.5972962 0.6141508 #>  [762,] 0.56404233 0.6973327 0.7968395 0.8220554 0.8418309 0.8637595 0.8777434 #>  [763,] 0.71681084 0.7595308 0.7996949 0.8043348 0.8508801 0.8724116 0.9091628 #>  [764,] 0.23221319 0.2638435 0.6852087 0.6906918 0.6979785 0.7282153 0.7426810 #>  [765,] 0.82133522 0.9168180 0.9443084 0.9904282 1.0043925 1.0429611 1.0612448 #>  [766,] 0.47178426 0.5249203 0.5824629 0.5924064 0.5928124 0.6071044 0.6336591 #>  [767,] 0.33358698 0.6025828 0.6327187 0.6446725 0.6757704 0.7614138 0.8027006 #>  [768,] 0.24785159 0.2838427 0.4491239 0.6118077 0.6309201 0.6482038 0.6497511 #>  [769,] 0.22458232 0.3265346 0.3287951 0.4016935 0.4357464 0.4962175 0.5069544 #>  [770,] 0.31386756 0.3195099 0.3365350 0.3563108 0.4542798 0.5253970 0.5386259 #>  [771,] 0.29168303 0.3061909 0.3545426 0.5684983 0.6583411 0.6984534 0.7177866 #>  [772,] 0.47395770 0.5314175 0.5425258 0.5843606 0.6249558 0.6548248 0.7266472 #>  [773,] 0.50184256 0.8810146 1.1537624 1.1990595 1.2489722 1.2695442 1.3029742 #>  [774,] 0.52452654 0.5421056 0.6111733 0.6632807 0.6731534 0.7323069 0.7971701 #>  [775,] 0.16857286 0.3345566 0.3993022 0.4775700 0.4896671 0.4924680 0.4937840 #>  [776,] 0.27940552 0.6324851 0.7002355 0.7955746 0.8100697 0.8352919 0.8654957 #>  [777,] 0.24034921 0.3375586 0.4427241 0.4797414 0.5459118 0.5664317 0.5706395 #>  [778,] 0.70675053 0.7095794 1.0062745 1.0536399 1.0836482 1.0862773 1.1036218 #>  [779,] 0.51856314 0.5428389 0.5650923 0.6738120 0.8058647 0.9585650 1.0294965 #>  [780,] 0.40762215 0.4327573 0.4815322 0.5199568 0.5648204 0.5685463 0.5975997 #>  [781,] 0.64103997 0.6792932 0.7232305 0.7698256 0.8636471 0.9103927 0.9234947 #>  [782,] 0.67601640 0.9569481 0.9668900 0.9810107 1.0027925 1.0387430 1.0743130 #>  [783,] 0.45828164 0.5404859 0.5792751 0.5795289 0.5941869 0.6215119 0.6548329 #>  [784,] 0.77162301 0.8087509 0.8755289 0.9252317 1.1416159 1.1936630 1.3300027 #>  [785,] 0.66463580 0.6677195 0.7488545 0.7510351 0.7829724 0.8557361 0.8997469 #>  [786,] 0.42709473 0.4970767 0.5347126 0.5973428 0.6268453 0.6990868 0.7277907 #>  [787,] 0.56107059 0.6071044 0.7669179 0.8456684 0.8469849 0.8498462 0.8829480 #>  [788,] 0.19138594 0.2569850 0.2742528 0.5859214 0.6856743 0.6988624 0.7015225 #>  [789,] 0.67795023 0.8752675 1.0627103 1.0931903 1.1236134 1.1602788 1.1734987 #>  [790,] 0.60872811 0.7120535 0.7566968 0.7926113 0.8223987 0.8400504 0.8711039 #>  [791,] 0.68044898 0.7861443 0.8100697 0.9015706 1.0917606 1.1233735 1.1843514 #>  [792,] 0.32302307 0.3682466 0.4144313 0.4733165 0.5338666 0.5530183 0.5917165 #>  [793,] 0.79271623 0.8654957 0.9432001 1.0355486 1.0746039 1.1608574 1.1980840 #>  [794,] 1.04908019 1.0491925 1.2376591 1.2548659 1.2591212 1.2985529 1.3256118 #>  [795,] 0.73724369 0.9572485 0.9984734 1.0747214 1.1129255 1.1974316 1.2210697 #>  [796,] 0.42585808 0.4398053 0.4952210 0.6583411 0.6665911 0.6711462 0.6766388 #>  [797,] 0.87513698 0.9032750 0.9077274 1.0043925 1.0372074 1.1390701 1.1805517 #>  [798,] 0.38352487 0.4285375 0.4399251 0.5043742 0.5166223 0.5315847 0.5328556 #>  [799,] 0.49711117 0.5109378 0.6203669 0.6886316 0.6945128 0.7010659 0.7215325 #>  [800,] 0.38764375 0.4992052 0.5416531 0.5679928 0.5829449 0.6179473 0.6314653 #>  [801,] 0.70018142 0.9340734 1.0375611 1.0376246 1.0682967 1.0790328 1.2076959 #>  [802,] 0.35823407 0.4589627 0.5914283 0.6713417 0.6822251 0.7160005 0.7170594 #>  [803,] 0.38873183 0.3900703 0.4271005 0.4754122 0.4874972 0.5054410 0.6175296 #>  [804,] 0.53139012 0.5463962 0.5679928 0.5745787 0.6209094 0.7141221 0.7463217 #>  [805,] 0.29939163 0.4486775 0.4619960 0.4882198 0.5083313 0.5270618 0.5446818 #>  [806,] 0.65267516 0.7438839 0.8101495 0.8152400 0.8577645 0.8793835 0.8969906 #>  [807,] 0.47113555 0.5038046 0.6186837 0.6446725 0.6512444 0.6850346 0.7101469 #>  [808,] 0.40468039 0.7961911 0.9253115 0.9660649 0.9766645 0.9767513 0.9978451 #>  [809,] 0.63029024 0.6945128 0.6949650 0.7093859 0.7802729 0.8626093 0.9899787 #>  [810,] 0.27239735 0.3531268 0.3844330 0.3985777 0.4359323 0.4582816 0.5617007 #>  [811,] 0.10496390 0.2953352 0.3519146 0.3943302 0.4074087 0.4103602 0.4429947 #>  [812,] 0.97281183 0.9774155 1.0310905 1.0848319 1.1127985 1.1278472 1.1437895 #>  [813,] 0.28183735 0.3765577 0.3919227 0.4518309 0.4524302 0.4842188 0.4846648 #>  [814,] 0.38860025 0.5124955 0.5264727 0.5944657 0.6124865 0.6238536 0.6481234 #>  [815,] 0.33946108 0.4711486 0.5186571 0.5265891 0.5609652 0.5817517 0.6165815 #>  [816,] 0.31953422 0.3230780 0.3249261 0.4491082 0.5085932 0.5136027 0.5452031 #>  [817,] 0.64274106 0.7717650 0.7962130 0.8055500 0.8456373 0.8535566 0.8583547 #>  [818,] 0.27009714 0.3461212 0.3816547 0.4298704 0.4304556 0.4305202 0.4379739 #>  [819,] 0.22458232 0.3758423 0.4134361 0.4853787 0.4858446 0.5029464 0.5506206 #>  [820,] 0.37422802 0.3859530 0.4221835 0.4650879 0.5059068 0.5075678 0.5409856 #>  [821,] 0.48346027 0.5319334 0.5464437 0.6789908 0.7081799 0.7142262 0.7156149 #>  [822,] 0.36774929 0.4300875 0.5323430 0.5715657 0.6013691 0.6445565 0.6769366 #>  [823,] 0.29864115 0.3098451 0.3249081 0.4517891 0.4754122 0.4928747 0.4930152 #>  [824,] 0.31859988 0.6396721 0.6621269 0.6809198 0.6826027 0.7178480 0.7236811 #>  [825,] 0.51816914 0.5771354 0.8516587 0.8641196 0.9769531 0.9892423 0.9923153 #>  [826,] 0.38731762 0.4760001 0.5135579 0.5190804 0.5657008 0.6026295 0.6265665 #>  [827,] 0.94532770 0.9460321 1.0030758 1.0890745 1.1735463 1.2010995 1.2134749 #>  [828,] 0.60674304 0.8603134 0.8703083 0.8983031 0.9291537 0.9959638 1.0154757 #>  [829,] 0.34457961 0.3672576 0.4893252 0.5372001 0.5638756 0.5715523 0.6096346 #>  [830,] 0.51298962 0.6306806 0.6626373 0.6990100 0.7105527 0.7211601 0.7472280 #>  [831,] 0.59251622 0.5996146 0.6495981 0.6498244 0.6501255 0.6837785 0.6853493 #>  [832,] 0.40467537 0.4359312 0.5064854 0.7156369 0.7664663 0.7701255 0.7908734 #>  [833,] 0.35112121 0.4327573 0.4719913 0.5001010 0.5461181 0.5965697 0.6115108 #>  [834,] 0.72665606 0.7426340 0.7456952 0.7861443 0.8458698 0.9260699 0.9981249 #>  [835,] 0.27987198 0.2894637 0.3065071 0.3373517 0.3909788 0.4546701 0.5053144 #>  [836,] 0.40649431 0.4240281 0.5507946 0.6239939 0.6464109 0.6475453 0.6530175 #>  [837,] 0.35854655 0.5257333 0.5682151 0.5812144 0.6121059 0.6241344 0.6306721 #>  [838,] 0.38436790 0.4363325 0.4524302 0.4777627 0.5529307 0.5648204 0.5927198 #>  [839,] 0.40615376 0.4352313 0.4589280 0.6232096 0.6269492 0.6920590 0.7091029 #>  [840,] 0.30852987 0.3302917 0.3887318 0.4205343 0.5641448 0.5657008 0.5897119 #>  [841,] 0.72493998 0.7390709 0.7642454 0.9361925 0.9548407 0.9703808 1.0276567 #>  [842,] 0.33596663 0.3804369 0.3866715 0.4060488 0.5079940 0.5306616 0.5470901 #>  [843,] 0.54684064 0.8770541 1.0166699 1.0657956 1.1521817 1.2446478 1.2653518 #>  [844,] 0.42958595 0.4387340 0.4974965 0.5186571 0.5190796 0.5684983 0.5912486 #>  [845,] 0.59814179 0.6618089 1.0470184 1.0673192 1.0895528 1.1266011 1.1564425 #>  [846,] 0.27940552 0.6794888 0.6804490 0.8074631 0.8558305 0.9497796 0.9508786 #>  [847,] 0.27142727 0.3260663 0.3616241 0.3687731 0.3985060 0.4490205 0.4768041 #>  [848,] 0.45125473 0.5472537 0.5563753 0.6006414 0.7486465 0.7577472 0.7646843 #>  [849,] 0.30052429 0.3079301 0.3401194 0.3610173 0.3724672 0.4265450 0.4558875 #>  [850,] 0.46565031 0.5489543 0.5698313 0.6238661 0.6403408 0.6713417 0.7162170 #>  [851,] 0.60341666 0.8362740 0.8366349 0.8819325 0.9516279 0.9615812 0.9648074 #>  [852,] 0.35334074 0.5135325 0.5347056 0.5629969 0.6411620 0.6501515 0.6514568 #>  [853,] 1.17142274 1.2305678 1.5616284 1.6374086 1.6566340 1.6619266 1.7180482 #>  [854,] 0.20839093 0.2458655 0.4000042 0.4282355 0.4596963 0.6044639 0.6166674 #>  [855,] 0.52899612 0.5367126 0.6110263 0.6827507 0.7109180 0.7317614 0.7449176 #>  [856,] 0.50557789 0.5385514 0.5427333 0.5889549 0.5982793 0.7021194 0.7028182 #>  [857,] 0.24064592 0.3286279 0.3835249 0.4511265 0.4618417 0.5028156 0.5268662 #>  [858,] 0.20744456 0.5411297 0.5461181 0.5596651 0.5604178 0.6137277 0.6237357 #>  [859,] 0.33920973 0.3773566 0.4518904 0.5720634 0.5836065 0.5917165 0.7275133 #>  [860,] 0.88089043 1.1808807 1.3172311 1.4639394 1.4672066 1.4678837 1.5660051 #>  [861,] 0.20991061 0.4499254 0.4799766 0.5682802 0.5771011 0.5995046 0.6374466 #>  [862,] 0.43069321 0.5726125 0.5747023 0.6183426 0.6324933 0.6608137 0.7161143 #>  [863,] 0.24034921 0.3709019 0.4606671 0.5601927 0.5619584 0.6198380 0.6269870 #>  [864,] 0.26568272 0.3414133 0.4491239 0.5056989 0.6141807 0.6773687 0.7481341 #>  [865,] 0.93407335 1.1703939 1.2190879 1.2748383 1.2945214 1.3000015 1.4435558 #>  [866,] 0.52398727 0.7118188 0.8186544 0.8242124 0.9058639 0.9862036 1.0278902 #>  [867,] 0.54654978 0.5944657 0.6238495 0.6916067 0.7021194 0.7028452 0.7155917 #>  [868,] 0.49342453 0.5626927 0.5674006 0.6512715 0.7040036 0.7336226 0.7444788 #>  [869,] 0.75669680 0.8464139 0.8647776 0.9075003 1.0253734 1.0258418 1.0468797 #>  [870,] 0.45760052 0.7245759 0.7885519 0.7940886 0.8302766 0.8306603 0.9062342 #>  [871,] 0.28443111 0.4660931 0.4937230 0.5369552 0.5884215 0.6085690 0.6185185 #>  [872,] 0.36127210 0.4316478 0.4845384 0.5219478 0.5236298 0.5345456 0.5703011 #>  [873,] 0.46397630 0.5332694 0.6332645 0.6828690 0.7481341 0.7559836 0.7562722 #>  [874,] 0.42280036 0.5268145 0.5306026 0.5652571 0.6013691 0.6157460 0.6255810 #>  [875,] 0.58850041 0.5889565 0.5982023 0.6084766 0.6443966 0.7821055 0.8372479 #>  [876,] 0.50349566 0.6331186 0.7105023 0.8971936 0.8981969 0.9783832 1.0101983 #>  [877,] 0.25093233 0.3446998 0.4505613 0.4688132 0.4764786 0.5239929 0.6143644 #>  [878,] 0.34547777 0.3812641 0.5840833 0.5976469 0.6668744 0.6798802 0.6961425 #>  [879,] 0.19700093 0.3614684 0.5286657 0.5646549 0.5779324 0.5981296 0.6162216 #>  [880,] 0.33920973 0.4144313 0.4248337 0.4701016 0.4786858 0.6090299 0.6111510 #>  [881,] 0.22095964 0.4763160 0.4858587 0.4942730 0.5491708 0.5538634 0.6413687 #>  [882,] 0.30189027 0.3230231 0.3905129 0.4248337 0.4518904 0.5057469 0.5677537 #>  [883,] 0.35334074 0.4671383 0.5253793 0.5408722 0.6121662 0.6251460 0.6444695 #>  [884,] 0.27416424 0.3009290 0.5265891 0.5266852 0.5403689 0.5889549 0.5912486 #>  [885,] 0.42524262 0.5382567 0.7007382 0.7266472 0.8030790 0.8855012 0.8869721 #>  [886,] 0.65144533 0.6538204 0.6869540 0.7494443 0.8274725 0.8281018 0.8478024 #>  [887,] 0.33278036 0.3766667 0.4103602 0.4894193 0.5363593 0.6025828 0.6788346 #>  [888,] 0.53139012 0.5851407 0.5963428 0.6461869 0.6903962 0.7145351 0.7167997 #>  [889,] 0.38126412 0.4688181 0.5501081 0.5512080 0.5517085 0.5541736 0.5677537 #>  [890,] 0.50570411 0.6139567 0.7647043 0.7752566 0.7811632 0.8231388 0.8241516 #>  [891,] 0.28666494 0.3628038 0.4660931 0.5714157 0.5720126 0.5791916 0.5859789 #>  [892,] 0.60925803 0.6646358 0.7181278 0.7759100 0.8025176 0.8847136 0.9612817 #>  [893,] 0.26461529 0.2961088 0.3112953 0.3463531 0.3723055 0.4564030 0.4746422 #>  [894,] 0.22790951 0.5059468 0.6199827 0.7602957 0.7790266 0.7809493 0.7939962 #>  [895,] 0.95345166 0.9984734 1.0208393 1.0972571 1.1150546 1.2552802 1.2970190 #>  [896,] 0.41083155 0.5954771 0.5990488 0.6000027 0.6552396 0.7058156 0.7453670 #>  [897,] 1.06050472 1.1005949 1.1415819 1.1462511 1.1737902 1.1784947 1.1802584 #>  [898,] 1.01213896 1.0824401 1.0876951 1.1871600 1.2021549 1.2423744 1.3038761 #>  [899,] 0.40056744 0.4523200 0.5530609 0.6166674 0.6362195 0.6764214 0.6865026 #>  [900,] 0.21534136 0.2687503 0.4760717 0.5189344 0.5360605 0.5562024 0.5735089 #>  [901,] 0.50913559 0.5997411 0.6107313 0.6215119 0.6223847 0.6797502 0.6822251 #>  [902,] 1.36326437 1.7890580 1.9175286 1.9659467 1.9898979 2.0584657 2.1228029 #>  [903,] 0.29021981 0.3212873 0.3717373 0.4167015 0.4490205 0.4897215 0.5125991 #>  [904,] 0.49136919 0.5137629 0.7517403 0.8215594 0.8632464 0.8975507 1.0233421 #>  [905,] 0.28199897 0.2971402 0.4262104 0.4511265 0.4904061 0.5079940 0.5315847 #>  [906,] 0.38942729 0.5934849 0.6075430 0.6873932 0.6938844 0.7277624 0.7762628 #>  [907,] 0.49811996 0.5209425 0.5230245 0.5470901 0.6199827 0.6217134 0.6454175 #>  [908,] 0.19230095 0.3216205 0.3742280 0.3928736 0.4611508 0.4971971 0.5024782 #>  [909,] 0.46382875 0.4747876 0.5059468 0.5548846 0.5788554 0.6006414 0.6030933 #>  [910,] 0.42516962 0.4589783 0.4611479 0.5001808 0.5270618 0.5409856 0.5605146 #>  [911,] 0.48608630 0.5181691 0.6774709 0.7736701 0.8464139 0.8898686 0.9595844 #>  [912,] 0.34457961 0.4173943 0.4331048 0.4748361 0.5598770 0.5787282 0.5808096 #>  [913,] 0.54005115 0.5503222 0.5676003 0.6085907 0.6126886 0.6329890 0.6537450 #>  [914,] 0.37137846 0.3842104 0.4594144 0.5919331 0.6244076 0.6441982 0.6473374 #>  [915,] 0.36973189 0.5590402 0.6941097 0.7283429 0.9041523 0.9059144 0.9988856 #>  [916,] 0.24875987 0.6941518 0.7081372 0.8253907 0.8314016 0.8751370 0.8946387 #>  [917,] 0.35314811 0.4252426 0.6213875 0.6548248 0.6782171 0.6820315 0.7278631 #>  [918,] 0.73174823 0.7374447 0.7723237 0.8110921 0.8388964 0.9194015 0.9715227 #>  [919,] 0.45352538 0.4965345 0.5776755 0.6324933 0.6372951 0.6481234 0.6591978 #>  [920,] 0.35153139 0.5215530 0.5641137 0.6084766 0.7431842 0.7648505 0.7792765 #>  [921,] 0.93789410 0.9468309 0.9921218 1.0125924 1.0868349 1.1117074 1.1455838 #>  [922,] 0.54602175 0.6307920 0.7195446 0.8060179 0.8296200 0.9027819 0.9625081 #>  [923,] 0.33035650 0.4589627 0.6223847 0.6367448 0.7524029 0.7827470 0.7970583 #>  [924,] 0.43008751 0.4538932 0.4746059 0.6108339 0.6323663 0.6353536 0.6589561 #>  [925,] 0.50968564 0.6464894 0.6798616 0.8065690 0.8529041 0.8770541 1.0184622 #>  [926,] 0.35507916 0.7192118 0.7544253 0.9154311 0.9366341 0.9533615 0.9802833 #>  [927,] 0.32177216 0.4328677 0.5139146 0.5746090 0.5919125 0.6048431 0.6369055 #>  [928,] 0.67685988 0.7366316 0.7996322 0.8539912 0.9534517 1.0128148 1.0659562 #>  [929,] 0.44774668 0.4778577 0.5260595 0.6210167 0.6309713 0.6353536 0.7063779 #>  [930,] 0.31859988 0.5846691 0.5928124 0.6161887 0.6986115 0.7140224 0.7380297 #>  [931,] 0.47235632 0.6285307 0.7192439 0.8531621 0.9360629 0.9626487 0.9728118 #>  [932,] 0.42163411 0.8055500 0.8113119 0.9904052 1.1794178 1.1918469 1.2002061 #>  [933,] 0.62766914 0.6336591 0.6377363 0.6781812 0.6806804 0.6829194 0.7160677 #>  [934,] 0.53141748 0.5830712 0.5851041 0.6223723 0.6294691 0.6782171 0.6786501 #>  [935,] 0.58408332 0.6926850 0.7645570 0.7762961 0.7852675 0.8257328 0.8739690 #>  [936,] 0.69326057 0.7030779 0.7855505 0.7997620 0.8930844 0.9261243 0.9476923 #>  [937,] 0.48465047 0.5449115 0.5619332 0.6442017 0.6552396 0.6651317 0.6786689 #>  [938,] 0.39332868 0.4399251 0.4402503 0.4789899 0.5498248 0.5994483 0.6152629 #>  [939,] 0.35507916 0.6793022 0.7085112 0.7760548 0.7783694 0.7896861 0.8091958 #>  [940,] 0.42585808 0.5150722 0.6306721 0.6628752 0.7552021 0.7562659 0.7806824 #>  [941,] 0.35610869 0.4442879 0.4589280 0.4699677 0.5125991 0.5562621 0.5649581 #>  [942,] 0.19138594 0.2529641 0.2716072 0.6123626 0.6760154 0.6761486 0.6780810 #>  [943,] 1.40741364 1.4455813 1.5416634 1.5540241 1.5558768 1.6064701 1.7040478 #>  [944,] 0.59393441 0.5950373 0.6495078 0.7118188 0.7413654 0.8362681 0.8584399 #>  [945,] 0.22637231 0.3098451 0.3787513 0.4308071 0.5159859 0.5297742 0.5568308 #>  [946,] 0.35314811 0.5382567 0.7034040 0.7636421 0.8275457 0.9693369 0.9920663 #>  [947,] 0.38816198 0.5319334 0.8388913 0.8848385 0.9858956 1.0134978 1.0236668 #>  [948,] 0.51908038 0.5934849 0.6097347 0.6304772 0.7283067 0.7700442 0.7754826 #>  [949,] 1.20753557 1.2398548 1.2916023 1.4833364 1.4915420 1.5385345 1.5869602 #>  [950,] 0.26943231 0.3322444 0.5090703 0.5650558 0.5682563 0.6048892 0.6513994 #>  [951,] 0.35842184 0.4769370 0.5855041 0.5859441 0.6628317 0.6791727 0.6902448 #>  [952,] 0.41639391 0.5447243 0.6533593 0.6638760 0.7043856 0.7878179 0.7891179 #>  [953,] 0.52605952 0.6560633 0.7527298 0.7539527 0.7629061 0.7855505 0.8196034 #>  [954,] 0.08838292 0.2529641 0.2569850 0.5374131 0.6456855 0.6833317 0.7587960 #>  [955,] 0.39949311 0.4113793 0.4617537 0.4992708 0.5103729 0.5502443 0.5962816 #>  [956,] 0.54404962 0.7668322 0.8141167 0.8163748 0.8709573 0.8815883 0.8895886 #>  [957,] 0.15143474 0.2461098 0.3943062 0.4845885 0.4956085 0.5617339 0.5740830 #>  [958,] 0.41600825 0.6238536 0.6662038 0.6810228 0.7155917 0.7528905 0.7848862 #>  [959,] 0.45588750 0.4871096 0.5139798 0.5509807 0.5522579 0.5916453 0.5940435 #>  [960,] 0.47395770 0.5464878 0.6294691 0.6820315 0.7308150 0.7588367 0.7706642 #>  [961,] 0.66328066 0.7026473 0.7639937 0.8204857 0.9671354 1.0421720 1.0986190 #>  [962,] 0.61986526 0.6958242 0.6965234 0.6991414 0.7949596 0.8114358 0.8772079 #>  [963,] 0.46783934 0.5978542 0.8251622 0.8389211 0.8472959 1.0359286 1.1433125 #>  [964,] 0.57374553 0.6332853 0.6698449 0.7200645 0.7386047 0.7633089 0.7899152 #>  [965,] 0.56675712 0.6125309 0.6265087 0.6367965 0.7077662 0.7101469 0.7848625 #>  [966,] 0.45315410 0.8152400 1.1203584 1.1678320 1.1760771 1.1766243 1.2105564 #>  [967,] 0.31056069 0.4246199 0.4939033 0.5601432 0.5940355 0.6142619 0.6217134 #>  [968,] 0.28271105 0.3043697 0.4060488 0.4472058 0.5580362 0.5849656 0.6049987 #>  [969,] 0.42709473 0.4415368 0.5242814 0.6278754 0.6332853 0.7328129 0.7354620 #>  [970,] 0.77257980 1.2353075 1.2661241 1.2974768 1.3230103 1.4268751 1.4424057 #>  [971,] 0.53550364 0.6136756 0.6245538 0.6281301 0.6483605 0.6590768 0.6792932 #>  [972,] 0.52583493 0.6310396 0.7253513 0.8562062 0.8975507 0.9268107 0.9403179 #>  [973,] 0.24878787 0.3642565 0.5092601 0.5403760 0.5638342 0.5691880 0.5828230 #>  [974,] 0.41093707 0.5904913 0.6219028 0.6709111 0.8025176 0.8503493 0.8730388 #>  [975,] 0.39607462 0.4016935 0.4115608 0.4134361 0.4474183 0.5102374 0.5253970 #>  [976,] 0.60732210 0.6812634 0.7276647 0.7659112 0.7862374 0.8325580 0.8595283 #>  [977,] 0.31534910 0.3444417 0.3758254 0.4380390 0.4564030 0.4689421 0.4714573 #>  [978,] 0.29106793 0.3365350 0.4579228 0.4673750 0.5140970 0.5264769 0.5578682 #>  [979,] 0.38019022 0.3844330 0.5412494 0.5795289 0.6002218 0.6046449 0.6096288 #>  [980,] 0.38293504 0.3853515 0.4772277 0.4946492 0.5125576 0.5140970 0.5260984 #>  [981,] 0.44930565 0.4991897 0.5024724 0.5075678 0.5095265 0.5698082 0.5886179 #>  [982,] 0.32576672 0.5864215 0.6498501 0.6903962 0.7145729 0.7529725 0.7681317 #>  [983,] 0.52583493 0.7301393 0.7629718 0.7645803 0.7648869 0.7694696 0.8081339 #>  [984,] 0.46565031 0.6226865 0.6367448 0.7160005 0.7194622 0.7254220 0.7351157 #>  [985,] 0.54505599 0.5864215 0.6649147 0.7100547 0.7317614 0.8149761 0.8745557 #>  [986,] 0.46088095 0.5218273 0.6631791 0.7082992 0.7323249 0.7335451 0.7361922 #>  [987,] 0.41819026 0.7027823 0.7374447 0.7667481 0.7776833 0.8505585 0.8960262 #>  [988,] 0.29238326 0.3195099 0.4066756 0.4579228 0.4699640 0.4969147 0.5221368 #>  [989,] 0.24586548 0.3732685 0.3972267 0.4060124 0.4389759 0.4762373 0.5323430 #>  [990,] 0.95206583 1.1778154 1.1961475 1.3867377 1.4313195 1.4496576 1.4529343 #>  [991,] 0.12545037 0.2727244 0.3191901 0.4149611 0.4815106 0.5143991 0.5282475 #>  [992,] 0.37071474 0.4192430 0.4748726 0.5231161 0.5426068 0.5495174 0.5522579 #>  [993,] 0.53995973 0.5740830 0.5817713 0.5855041 0.6286005 0.6831820 0.7174377 #>  [994,] 0.37197008 0.5403689 0.5427333 0.5465498 0.5502851 0.6038085 0.6211444 #>  [995,] 0.60024124 0.6331034 0.7286179 0.7655814 0.8427633 0.8668178 0.9283940 #>  [996,] 0.51362241 0.5606684 0.8503493 0.9074640 0.9102044 0.9303635 1.0326818 #>  [997,] 0.42917682 0.4336702 0.7933013 0.9206686 0.9452430 0.9884267 0.9891479 #>  [998,] 0.36146842 0.3616241 0.3800041 0.4442879 0.4830822 0.4897215 0.5005976 #>  [999,] 0.48783344 0.5272674 0.6405465 0.6563890 0.6591978 0.7305704 0.7487108 #> [1000,] 1.57277915 1.5863349 1.6150568 1.6285816 1.6393644 1.6516360 1.7014981 #>              [,8]      [,9]     [,10] #>    [1,] 0.7756313 0.7787063 0.8255689 #>    [2,] 0.6669517 0.6939794 0.7114553 #>    [3,] 1.2850569 1.2945214 1.3252576 #>    [4,] 0.6656432 0.7231788 0.7555461 #>    [5,] 0.9218626 0.9286837 0.9314828 #>    [6,] 0.6539691 0.6851526 0.7001245 #>    [7,] 0.7225017 0.7231717 0.7462477 #>    [8,] 0.6505800 0.6908599 0.6946035 #>    [9,] 0.8229233 0.8402722 0.8415777 #>   [10,] 0.6223623 0.6261380 0.6317588 #>   [11,] 0.6931003 0.7287212 0.7538553 #>   [12,] 0.6258679 0.6321614 0.6763177 #>   [13,] 1.9157829 1.9502111 2.0193290 #>   [14,] 0.8545397 0.8634923 0.8642259 #>   [15,] 0.6363414 0.6679195 0.6809282 #>   [16,] 0.6608778 0.6998958 0.7187489 #>   [17,] 0.9317326 0.9576649 0.9699532 #>   [18,] 1.3189178 1.3624354 1.3771549 #>   [19,] 0.8799078 0.8944065 0.9017654 #>   [20,] 0.5295426 0.5295488 0.5469358 #>   [21,] 1.0991970 1.1319681 1.1338939 #>   [22,] 0.7273120 0.7502917 0.7565964 #>   [23,] 1.1628721 1.1648809 1.1958804 #>   [24,] 0.7115924 0.7211576 0.7562659 #>   [25,] 0.9815970 1.0557377 1.0603788 #>   [26,] 0.5396258 0.5856194 0.6307691 #>   [27,] 0.7318615 0.7353108 0.7474210 #>   [28,] 1.2973927 1.3340744 1.4121091 #>   [29,] 0.8003088 0.8149761 0.8392517 #>   [30,] 0.8255299 0.8300583 0.8429073 #>   [31,] 0.8710757 0.9196439 0.9279560 #>   [32,] 0.4591404 0.4938332 0.5541063 #>   [33,] 0.9284126 0.9397078 0.9703928 #>   [34,] 1.0561711 1.0973390 1.0979523 #>   [35,] 1.3892106 1.4583047 1.4753695 #>   [36,] 0.5757215 0.5850509 0.6414583 #>   [37,] 0.9287052 1.0130098 1.0299178 #>   [38,] 0.8347001 0.8418645 0.8585596 #>   [39,] 0.9154528 0.9366151 0.9970424 #>   [40,] 1.6172788 1.6499924 1.6520069 #>   [41,] 1.0459254 1.1296414 1.1383148 #>   [42,] 0.8376001 0.8875497 0.9314070 #>   [43,] 0.6530175 0.6773687 0.6810271 #>   [44,] 1.0339208 1.0758137 1.1033142 #>   [45,] 1.2693643 1.2887197 1.3004408 #>   [46,] 1.3412592 1.4109874 1.5159915 #>   [47,] 0.5817484 0.5910076 0.6141508 #>   [48,] 0.6283006 0.6679799 0.7104181 #>   [49,] 1.1842526 1.2057919 1.2350810 #>   [50,] 1.0612503 1.0654873 1.0666405 #>   [51,] 0.4622657 0.4804835 0.4950005 #>   [52,] 0.5706395 0.6092813 0.6735400 #>   [53,] 0.5516505 0.5643395 0.5856194 #>   [54,] 0.6596719 0.6666294 0.6796065 #>   [55,] 1.6731018 1.7255116 1.7851629 #>   [56,] 0.6924277 0.6973271 0.7031439 #>   [57,] 0.4953075 0.4971853 0.5106370 #>   [58,] 1.1031925 1.1151394 1.1537757 #>   [59,] 1.1030404 1.1192206 1.1218281 #>   [60,] 0.9187655 0.9550655 0.9930242 #>   [61,] 0.7492932 0.7597328 0.7602771 #>   [62,] 0.5535924 0.5660631 0.5722650 #>   [63,] 0.9172866 0.9325321 0.9576115 #>   [64,] 0.9557138 1.0780755 1.1031738 #>   [65,] 0.6236950 0.6274354 0.6783798 #>   [66,] 0.6198380 0.6287783 0.6309894 #>   [67,] 0.9774155 0.9831504 1.0524691 #>   [68,] 0.8917732 0.8978763 0.9015832 #>   [69,] 0.7667370 0.7697563 0.7702980 #>   [70,] 0.5552467 0.5566595 0.5759679 #>   [71,] 1.1690739 1.1694207 1.1732807 #>   [72,] 0.7229499 0.8365431 0.8545397 #>   [73,] 0.7879324 0.8036274 0.8053219 #>   [74,] 0.5121420 0.5162716 0.5267053 #>   [75,] 0.4462715 0.4732934 0.4793659 #>   [76,] 1.1101567 1.1147761 1.1673219 #>   [77,] 0.5328570 0.5339973 0.5344222 #>   [78,] 0.7870492 0.8257125 0.8259111 #>   [79,] 0.9720953 0.9726843 0.9742868 #>   [80,] 1.9350202 1.9478069 1.9698308 #>   [81,] 0.9228244 0.9645064 0.9948089 #>   [82,] 1.0653808 1.0927103 1.0997888 #>   [83,] 0.6789908 0.7177866 0.7463745 #>   [84,] 1.0139290 1.1063154 1.1099191 #>   [85,] 0.6678572 0.6983656 0.7039485 #>   [86,] 1.0375936 1.0858456 1.1112744 #>   [87,] 1.2421536 1.2641834 1.3117838 #>   [88,] 0.8817139 0.9281758 0.9365105 #>   [89,] 0.9566634 0.9674112 0.9748975 #>   [90,] 0.7022107 0.7285309 0.7302624 #>   [91,] 0.5072214 0.5135579 0.5333807 #>   [92,] 0.5651191 0.5772208 0.6258679 #>   [93,] 0.7646565 0.7748687 0.7915996 #>   [94,] 0.8385884 0.8443430 0.8800865 #>   [95,] 0.6748189 0.7032580 0.7215325 #>   [96,] 1.2092919 1.2107669 1.2229820 #>   [97,] 0.9880035 1.0125924 1.0142163 #>   [98,] 0.8761061 0.8803018 0.8839388 #>   [99,] 1.3010412 1.3654116 1.4308330 #>  [100,] 0.5139798 0.5210295 0.5502412 #>  [101,] 0.6490338 0.6644301 0.6794955 #>  [102,] 0.4877606 0.5068669 0.5517725 #>  [103,] 0.5322830 0.5767464 0.6026538 #>  [104,] 0.5504996 0.5815638 0.5997310 #>  [105,] 0.8581058 0.9145147 0.9357285 #>  [106,] 0.6342430 0.7466857 0.7638642 #>  [107,] 0.6771902 0.6998958 0.6999505 #>  [108,] 0.5992993 0.6131177 0.6327708 #>  [109,] 0.8882664 0.9062441 0.9306821 #>  [110,] 1.0227659 1.0547594 1.1238887 #>  [111,] 0.5592231 0.6532157 0.6583083 #>  [112,] 0.6242672 0.6306412 0.6335925 #>  [113,] 1.5446556 1.7148664 1.7154891 #>  [114,] 0.6231582 0.6413687 0.6948341 #>  [115,] 2.2266091 2.2783786 2.3645343 #>  [116,] 0.7842072 0.8227920 0.8237689 #>  [117,] 0.8005813 0.8063749 0.8144902 #>  [118,] 0.6566257 0.6607073 0.6770032 #>  [119,] 2.1082849 2.1087555 2.1117435 #>  [120,] 0.8638721 0.8702154 0.8775157 #>  [121,] 0.5870735 0.5891622 0.6252149 #>  [122,] 1.3955661 1.4481562 1.4616562 #>  [123,] 0.5249883 0.5381807 0.5644130 #>  [124,] 0.7080913 0.7206887 0.7415119 #>  [125,] 0.4935828 0.5247987 0.5328556 #>  [126,] 0.6139062 0.6171056 0.6338141 #>  [127,] 0.8375028 0.8867885 0.8930591 #>  [128,] 0.5685543 0.5709785 0.5831141 #>  [129,] 0.6422383 0.6914207 0.6946208 #>  [130,] 1.3429264 1.3529104 1.3606553 #>  [131,] 1.1642241 1.1899565 1.2184455 #>  [132,] 0.8187525 0.8698585 0.8828990 #>  [133,] 0.6384582 0.6932759 0.6994007 #>  [134,] 0.8585861 0.8627584 0.9070859 #>  [135,] 0.6771902 0.7230533 0.7291381 #>  [136,] 1.9700368 1.9885121 1.9940374 #>  [137,] 1.0657956 1.0835106 1.1037101 #>  [138,] 0.5456569 0.6447935 0.7017670 #>  [139,] 1.4910912 1.5035517 1.5196142 #>  [140,] 1.2977365 1.3144825 1.3227609 #>  [141,] 1.4047381 1.4870998 1.5199879 #>  [142,] 0.7665086 0.7809960 0.8173887 #>  [143,] 0.5381658 0.5611785 0.5940340 #>  [144,] 0.7416926 0.7819503 0.7991954 #>  [145,] 1.4236206 1.4354886 1.4984554 #>  [146,] 1.7289926 1.7348999 1.7553518 #>  [147,] 0.6210167 0.6264208 0.6415023 #>  [148,] 0.9461678 0.9689744 0.9881108 #>  [149,] 1.0539534 1.0808302 1.0812076 #>  [150,] 0.8059972 0.8191243 0.8240910 #>  [151,] 0.6803765 0.7099898 0.7120053 #>  [152,] 1.3876612 1.4485658 1.4506991 #>  [153,] 0.9493994 0.9638226 0.9799203 #>  [154,] 1.1893588 1.1936630 1.2862815 #>  [155,] 0.7015225 0.7266337 0.7279227 #>  [156,] 1.2283696 1.2748383 1.3489015 #>  [157,] 1.4918316 1.5025676 1.5455580 #>  [158,] 0.8723993 0.8828047 0.8975675 #>  [159,] 1.0612503 1.0748011 1.0935908 #>  [160,] 1.3210528 1.3573299 1.3595808 #>  [161,] 0.5151739 0.5669103 0.5903365 #>  [162,] 0.7904264 0.7956830 0.8163267 #>  [163,] 0.9200083 0.9327339 0.9856520 #>  [164,] 0.6327708 0.6628752 0.7036963 #>  [165,] 1.1063154 1.1236134 1.1274689 #>  [166,] 1.3988827 1.4229614 1.4343830 #>  [167,] 1.3451816 1.3466605 1.3487003 #>  [168,] 0.8058106 0.9234573 0.9559205 #>  [169,] 0.5295426 0.5354377 0.5548089 #>  [170,] 0.5194342 0.5389671 0.5547391 #>  [171,] 0.7337609 0.7438839 0.7920346 #>  [172,] 0.5689291 0.5752956 0.5805225 #>  [173,] 1.1830776 1.2025005 1.2053155 #>  [174,] 0.8628756 0.9021538 0.9246213 #>  [175,] 0.7563504 0.7590422 0.8162452 #>  [176,] 0.8711062 0.8733237 0.8839461 #>  [177,] 0.9573268 1.0039810 1.0489679 #>  [178,] 0.4732934 0.5059210 0.5354667 #>  [179,] 0.5981296 0.6353553 0.6387536 #>  [180,] 0.8668178 0.9165732 0.9370527 #>  [181,] 0.6583591 0.6596633 0.6980779 #>  [182,] 0.6935073 0.7323470 0.7340770 #>  [183,] 0.6705777 0.7288050 0.7723274 #>  [184,] 0.6164823 0.6277166 0.6436410 #>  [185,] 0.6025178 0.6069402 0.6460916 #>  [186,] 0.9332914 0.9535116 0.9699643 #>  [187,] 0.6269870 0.6361071 0.6518062 #>  [188,] 0.7121883 0.7175626 0.7274299 #>  [189,] 0.8039426 0.8263954 0.8350468 #>  [190,] 0.5997716 0.6131797 0.6327540 #>  [191,] 0.7284051 0.7300311 0.7463026 #>  [192,] 0.6405465 0.6589534 0.7966472 #>  [193,] 0.8386003 0.9287733 0.9467863 #>  [194,] 0.8246715 0.8279101 0.8343026 #>  [195,] 0.5891158 0.5940340 0.6797727 #>  [196,] 0.9070859 0.9634523 0.9791826 #>  [197,] 0.7666869 0.7744418 0.7964837 #>  [198,] 0.4888362 0.4962175 0.4969147 #>  [199,] 0.7109461 0.7717067 0.7886674 #>  [200,] 0.5049675 0.5167386 0.5419574 #>  [201,] 0.4726594 0.4916398 0.5243275 #>  [202,] 0.5495174 0.5583910 0.5790533 #>  [203,] 0.5729645 0.6065344 0.6437963 #>  [204,] 1.3312725 1.3450013 1.4096715 #>  [205,] 1.4372892 1.4380636 1.4559538 #>  [206,] 0.7522941 0.8134243 0.8560459 #>  [207,] 0.6883399 0.7200026 0.7315843 #>  [208,] 1.0286887 1.0708560 1.0988420 #>  [209,] 1.0023530 1.0133555 1.0401941 #>  [210,] 0.9687933 0.9970315 1.0092543 #>  [211,] 0.5785163 0.5907358 0.6192674 #>  [212,] 1.7340169 1.7439838 1.7715571 #>  [213,] 1.3124237 1.3459349 1.3732552 #>  [214,] 0.4777627 0.5630150 0.5890562 #>  [215,] 0.6606684 0.6638737 0.7165392 #>  [216,] 0.9665892 1.0656026 1.0932253 #>  [217,] 0.5054410 0.5151739 0.5568308 #>  [218,] 1.0164538 1.0375509 1.0459599 #>  [219,] 1.0803710 1.1045870 1.1058794 #>  [220,] 0.5978418 0.6004640 0.6340862 #>  [221,] 0.6160314 0.6555427 0.7691007 #>  [222,] 1.9114665 1.9693299 1.9704518 #>  [223,] 0.8935966 0.9470164 0.9734911 #>  [224,] 1.3938395 1.4516680 1.4559538 #>  [225,] 0.8481651 0.8555073 0.8603134 #>  [226,] 0.8423385 0.8521621 0.8881761 #>  [227,] 0.6951851 0.7165830 0.7191995 #>  [228,] 0.6141610 0.6369692 0.6375858 #>  [229,] 0.6796065 0.6994205 0.7464688 #>  [230,] 0.8081598 0.8192946 0.8265299 #>  [231,] 0.8694153 0.8876110 0.9142375 #>  [232,] 0.9021631 0.9181598 0.9338634 #>  [233,] 0.8928274 0.9680441 0.9874315 #>  [234,] 1.0359566 1.0431142 1.0529604 #>  [235,] 0.7914871 0.8366349 0.8474899 #>  [236,] 0.9081696 0.9133673 0.9262133 #>  [237,] 0.5774567 0.5964386 0.6109148 #>  [238,] 1.0799690 1.1982458 1.2692741 #>  [239,] 1.5711039 1.6132847 1.6245975 #>  [240,] 0.6600924 0.6793022 0.6948398 #>  [241,] 0.8474003 0.8698585 0.8789340 #>  [242,] 0.6679011 0.6806753 0.6929357 #>  [243,] 0.6292574 0.6595878 0.6627588 #>  [244,] 0.7997484 0.8316858 0.8376592 #>  [245,] 0.9498940 0.9714709 1.0076202 #>  [246,] 0.5633415 0.5709738 0.5915487 #>  [247,] 0.7010659 0.7052975 0.7293210 #>  [248,] 1.0901418 1.1074416 1.1398307 #>  [249,] 0.8189068 0.8399744 0.8456468 #>  [250,] 0.5876993 0.6020930 0.6110164 #>  [251,] 1.1308674 1.1528541 1.2036914 #>  [252,] 0.4882198 0.5001808 0.5103615 #>  [253,] 0.6369337 0.6483734 0.6559888 #>  [254,] 1.2184258 1.2278010 1.2548659 #>  [255,] 0.9953736 1.0060227 1.0122004 #>  [256,] 0.8279101 0.8324253 0.8333293 #>  [257,] 0.6064811 0.6139507 0.6184990 #>  [258,] 0.9695268 1.0218143 1.0391121 #>  [259,] 0.7059185 0.7340441 0.7374395 #>  [260,] 0.7887883 0.7956830 0.7995044 #>  [261,] 1.1306067 1.1452622 1.1770409 #>  [262,] 0.4641931 0.4897457 0.5291455 #>  [263,] 1.0113191 1.0263944 1.0289487 #>  [264,] 0.8284816 0.8369369 0.8430017 #>  [265,] 0.9386576 0.9788703 0.9894501 #>  [266,] 0.7275133 0.7323069 0.7369048 #>  [267,] 0.6501762 0.7046543 0.7148199 #>  [268,] 0.7876857 0.7966472 0.8122136 #>  [269,] 0.6175772 0.6278122 0.6478021 #>  [270,] 0.6900424 0.6961983 0.7056306 #>  [271,] 0.5940435 0.5941595 0.6030420 #>  [272,] 1.2269920 1.2864881 1.2936072 #>  [273,] 0.6706000 0.6785196 0.7041438 #>  [274,] 1.2081321 1.2210457 1.2224915 #>  [275,] 1.2105540 1.2870690 1.2924073 #>  [276,] 0.8714118 0.8987510 0.9002206 #>  [277,] 1.0555275 1.0902606 1.1429227 #>  [278,] 0.8003088 0.8014427 0.8072819 #>  [279,] 0.7031295 0.7098126 0.7285000 #>  [280,] 1.0780392 1.1282404 1.1418181 #>  [281,] 0.9190369 1.0003782 1.0126405 #>  [282,] 0.5149094 0.5256649 0.5316164 #>  [283,] 0.7883314 0.8897111 0.8987029 #>  [284,] 0.5223575 0.5271001 0.5464600 #>  [285,] 0.8678044 0.8754708 0.8760578 #>  [286,] 0.7781780 0.7956838 0.8107699 #>  [287,] 1.0517926 1.0848277 1.0908683 #>  [288,] 0.7381022 0.7383754 0.7511091 #>  [289,] 0.5619584 0.5693453 0.5997006 #>  [290,] 0.9073579 0.9128229 0.9153745 #>  [291,] 1.7124882 1.7793713 1.8108123 #>  [292,] 1.1901019 1.2856445 1.2906689 #>  [293,] 0.6945541 0.7065432 0.7273120 #>  [294,] 0.7454127 0.7592463 0.7720891 #>  [295,] 0.8100411 0.9462986 0.9545278 #>  [296,] 0.8289067 0.8384879 0.8603549 #>  [297,] 1.0540585 1.0784742 1.0894172 #>  [298,] 0.9427818 0.9603965 0.9610282 #>  [299,] 0.7499207 0.7525683 0.7871076 #>  [300,] 1.3079462 1.3554649 1.3654652 #>  [301,] 0.5708386 0.5709529 0.6173755 #>  [302,] 0.6519203 0.7009039 0.7043784 #>  [303,] 0.5318358 0.5353574 0.5781176 #>  [304,] 1.0323694 1.0350475 1.0522825 #>  [305,] 0.6428234 0.7091178 0.7109969 #>  [306,] 0.9155905 0.9306853 0.9626086 #>  [307,] 1.0320210 1.1112880 1.1620768 #>  [308,] 0.9560500 0.9650480 1.0506193 #>  [309,] 0.5763049 0.5919331 0.5964692 #>  [310,] 0.5028156 0.5363620 0.5633030 #>  [311,] 0.7085510 0.7468247 0.7671778 #>  [312,] 0.8296200 0.9239537 0.9812437 #>  [313,] 0.9081756 0.9321061 0.9459121 #>  [314,] 0.7183905 0.7234864 0.7524124 #>  [315,] 0.7869793 0.7978709 0.8104695 #>  [316,] 0.6699119 0.6862905 0.6882183 #>  [317,] 1.0987962 1.1561933 1.1681321 #>  [318,] 0.7090680 0.7471091 0.7600679 #>  [319,] 0.6644301 0.6704538 0.6710311 #>  [320,] 0.4454114 0.4618221 0.4819757 #>  [321,] 0.6814805 0.6862944 0.6910802 #>  [322,] 0.6699119 0.6786501 0.6858368 #>  [323,] 0.7065201 0.7075479 0.7088968 #>  [324,] 0.8871003 0.9002830 0.9626487 #>  [325,] 0.8509839 0.8815808 0.9190369 #>  [326,] 0.6410236 0.6753144 0.6912768 #>  [327,] 0.7242116 0.7351157 0.7625139 #>  [328,] 0.7195147 0.7515273 0.7627145 #>  [329,] 0.9159261 0.9290381 0.9366923 #>  [330,] 0.6855674 0.6961589 0.7014483 #>  [331,] 0.8114895 0.8244847 0.8283274 #>  [332,] 0.8008723 0.8702796 0.9138215 #>  [333,] 0.6333831 0.6605735 0.6639826 #>  [334,] 0.7924640 0.7997484 0.8235116 #>  [335,] 0.6713186 0.6959557 0.7001253 #>  [336,] 0.6161260 0.6188386 0.6490338 #>  [337,] 1.1254434 1.1577564 1.1709622 #>  [338,] 0.8149321 0.8444429 0.8991394 #>  [339,] 0.8059470 0.8165967 0.8433081 #>  [340,] 1.0307637 1.0382076 1.1393151 #>  [341,] 1.0929900 1.1045124 1.1055626 #>  [342,] 1.1267147 1.1288956 1.1448378 #>  [343,] 0.8309837 0.9004614 0.9180999 #>  [344,] 1.3859502 1.4077422 1.4231046 #>  [345,] 1.3865243 1.4290635 1.4291724 #>  [346,] 0.6142675 0.6272313 0.6281967 #>  [347,] 0.6237195 0.6279615 0.6437963 #>  [348,] 1.1042882 1.1214995 1.1747144 #>  [349,] 0.5584209 0.5657912 0.6062746 #>  [350,] 1.1495208 1.1516734 1.1619541 #>  [351,] 0.8421877 0.8482813 0.8503012 #>  [352,] 0.5698082 0.6483445 0.6703967 #>  [353,] 0.6892657 0.6902268 0.7556036 #>  [354,] 0.4950005 0.5125062 0.5418800 #>  [355,] 0.6495378 0.7279227 0.7396762 #>  [356,] 0.9271261 0.9368972 0.9744015 #>  [357,] 0.6691903 0.6703967 0.6916611 #>  [358,] 0.7085112 0.7659299 0.8019321 #>  [359,] 1.7991851 1.7995446 1.8281164 #>  [360,] 0.6667446 0.6770032 0.7007385 #>  [361,] 0.7521922 0.7920784 0.8043478 #>  [362,] 1.1327459 1.1413037 1.1912972 #>  [363,] 0.8506547 0.8644207 0.9367760 #>  [364,] 0.9175687 0.9503679 0.9850592 #>  [365,] 0.9885455 1.0003493 1.0011477 #>  [366,] 0.9224810 0.9588441 0.9967697 #>  [367,] 0.8238337 0.8318475 0.8581214 #>  [368,] 0.8874859 0.9247930 0.9315056 #>  [369,] 1.0353572 1.0549701 1.0851520 #>  [370,] 0.8336484 0.9879150 1.0054689 #>  [371,] 0.8053191 0.8600333 0.9019193 #>  [372,] 0.6154747 0.6378615 0.6766666 #>  [373,] 1.1117074 1.1320305 1.2210457 #>  [374,] 1.6074443 1.7646647 1.8811301 #>  [375,] 0.6690753 0.6859516 0.7243707 #>  [376,] 0.6359998 0.6631791 0.6680302 #>  [377,] 0.9947288 1.0107472 1.0128407 #>  [378,] 1.1651294 1.1804606 1.2994801 #>  [379,] 0.9482425 0.9662566 0.9843370 #>  [380,] 0.8032460 0.8087202 0.8312927 #>  [381,] 0.5895918 0.5954388 0.6059563 #>  [382,] 0.7181106 0.7476284 0.7646393 #>  [383,] 1.2869393 1.2887537 1.3134688 #>  [384,] 0.5873668 0.6788346 0.6807506 #>  [385,] 1.0759876 1.0951591 1.1062912 #>  [386,] 0.8308189 0.8781016 0.8980271 #>  [387,] 0.4717560 0.4871096 0.4940077 #>  [388,] 0.6424513 0.6514926 0.6596480 #>  [389,] 0.5789406 0.6140182 0.6162216 #>  [390,] 0.5573371 0.5735089 0.6136756 #>  [391,] 0.6142675 0.6143644 0.6500387 #>  [392,] 0.8144391 0.8688788 0.8714840 #>  [393,] 1.7287082 1.7308036 1.7552014 #>  [394,] 0.8204857 0.8207346 0.9079562 #>  [395,] 0.9215524 0.9312483 1.0527774 #>  [396,] 0.5062266 0.5098182 0.5315601 #>  [397,] 0.9054090 0.9090195 0.9149136 #>  [398,] 0.5959438 0.6359998 0.6399976 #>  [399,] 0.7800415 0.7816607 0.8063884 #>  [400,] 0.4662800 0.5162716 0.5167341 #>  [401,] 1.3794815 1.3858660 1.4781024 #>  [402,] 0.7748507 0.7925764 0.8369719 #>  [403,] 0.5903365 0.6138746 0.6241344 #>  [404,] 1.2054699 1.2146512 1.2260200 #>  [405,] 0.6956901 0.7177651 0.7178211 #>  [406,] 0.7191794 0.7250745 0.7251210 #>  [407,] 0.7098818 0.7889383 0.8119588 #>  [408,] 0.9736694 0.9741670 0.9812316 #>  [409,] 1.0894938 1.1924844 1.2344389 #>  [410,] 0.7174377 0.7374630 0.7789899 #>  [411,] 0.7716996 0.7772437 0.7893691 #>  [412,] 0.6480688 0.6751497 0.6762043 #>  [413,] 0.6630050 0.6740336 0.6979785 #>  [414,] 0.7383381 0.7422430 0.7495036 #>  [415,] 1.1303688 1.1748547 1.1865129 #>  [416,] 0.8897492 0.8995750 0.9149590 #>  [417,] 0.8187790 0.8237306 0.8574963 #>  [418,] 0.8556449 0.9356671 0.9398054 #>  [419,] 0.9089671 0.9292354 0.9598196 #>  [420,] 0.8821869 0.9119912 0.9205809 #>  [421,] 0.6343805 0.6411620 0.6571222 #>  [422,] 0.8799923 0.9249530 0.9458613 #>  [423,] 0.6952970 0.7110487 0.7113949 #>  [424,] 0.7030779 0.7129030 0.7301393 #>  [425,] 0.8288294 0.8701322 0.8715636 #>  [426,] 0.5412494 0.5424903 0.5466836 #>  [427,] 1.3755398 1.3761940 1.4291724 #>  [428,] 0.5003103 0.5281435 0.5791916 #>  [429,] 0.9006036 0.9151748 0.9978768 #>  [430,] 1.8881963 1.9214921 1.9871163 #>  [431,] 0.6479711 0.6907997 0.7158094 #>  [432,] 0.8353638 0.8397608 0.8591621 #>  [433,] 0.6158746 0.6230688 0.6422417 #>  [434,] 0.8390051 0.8469450 0.8605455 #>  [435,] 0.6735400 0.6767124 0.7199063 #>  [436,] 0.9830758 1.0111669 1.0145949 #>  [437,] 0.9392536 1.0018125 1.0076918 #>  [438,] 0.8542630 0.8665346 0.9539113 #>  [439,] 0.8627950 0.8814016 0.8931126 #>  [440,] 0.5328905 0.5345456 0.5516642 #>  [441,] 1.3773296 1.3936269 1.3972973 #>  [442,] 0.8858392 0.9843224 1.0215839 #>  [443,] 0.6112225 0.6480688 0.6716522 #>  [444,] 1.5503981 1.5557690 1.5635557 #>  [445,] 0.6566171 0.6705484 0.6723332 #>  [446,] 0.7427251 0.7512392 0.7650376 #>  [447,] 1.0047642 1.0054924 1.0718230 #>  [448,] 0.5861468 0.5923687 0.6096259 #>  [449,] 1.0508899 1.0692765 1.1116738 #>  [450,] 0.4721637 0.4948272 0.5277201 #>  [451,] 1.3386196 1.3632644 1.4414029 #>  [452,] 1.0743130 1.0975967 1.1421048 #>  [453,] 0.7123429 0.7249624 0.7652737 #>  [454,] 0.4108784 0.5381658 0.5831141 #>  [455,] 0.5601432 0.5691880 0.5754789 #>  [456,] 0.6769317 0.6794673 0.7084965 #>  [457,] 1.1040548 1.1460293 1.1665652 #>  [458,] 1.1287448 1.1796054 1.1931896 #>  [459,] 1.1247640 1.1287350 1.3121100 #>  [460,] 0.6011920 0.6227041 0.6235452 #>  [461,] 0.5525530 0.6329890 0.6504444 #>  [462,] 0.5997310 0.6281706 0.6487706 #>  [463,] 0.6827904 0.6862100 0.6984199 #>  [464,] 0.6214233 0.6229524 0.6353847 #>  [465,] 0.7532900 0.7677561 0.7829984 #>  [466,] 0.6053313 0.6176010 0.6497096 #>  [467,] 1.3085160 1.4677827 1.4721423 #>  [468,] 1.2693704 1.2847300 1.2881045 #>  [469,] 0.7261044 0.7781780 0.7877847 #>  [470,] 1.0782892 1.0990187 1.1049749 #>  [471,] 0.8153133 0.8726886 0.8828079 #>  [472,] 0.7751567 0.7942162 0.7986348 #>  [473,] 0.8704619 0.8950770 0.9021631 #>  [474,] 0.8152478 0.8310557 0.8619404 #>  [475,] 0.5976440 0.6650774 0.6765748 #>  [476,] 1.1858229 1.2356224 1.2528147 #>  [477,] 0.7902273 0.8447468 0.8717427 #>  [478,] 0.7451737 0.7689820 0.7893409 #>  [479,] 0.7648019 0.7689410 0.7762628 #>  [480,] 0.5848786 0.5918114 0.5993475 #>  [481,] 0.6797727 0.6956536 0.7241801 #>  [482,] 1.3034972 1.3056795 1.3406666 #>  [483,] 0.8528747 0.8638721 0.8884492 #>  [484,] 0.7937368 0.7947404 0.8050512 #>  [485,] 0.6555427 0.6809282 0.6959557 #>  [486,] 0.7451055 0.7464360 0.7488545 #>  [487,] 0.8335548 0.8689936 0.8808412 #>  [488,] 1.8845021 1.9379860 1.9468682 #>  [489,] 0.9637568 0.9647357 0.9741418 #>  [490,] 1.1830515 1.2344642 1.2357430 #>  [491,] 0.9389856 0.9524354 0.9548956 #>  [492,] 0.5630150 0.5739765 0.5752164 #>  [493,] 0.6298061 0.6377669 0.6453739 #>  [494,] 0.6082253 0.6276665 0.6314729 #>  [495,] 1.6485546 1.6720556 1.7137453 #>  [496,] 0.8540090 0.8750767 0.8875341 #>  [497,] 1.1511040 1.1538573 1.1740050 #>  [498,] 1.0506193 1.0660640 1.0837002 #>  [499,] 0.8253594 0.8355910 0.8607336 #>  [500,] 1.0900617 1.1107911 1.1804633 #>  [501,] 1.0186605 1.0800655 1.1129255 #>  [502,] 0.6215588 0.6495078 0.6666312 #>  [503,] 0.5492964 0.5537512 0.5709529 #>  [504,] 0.9075003 0.9159172 0.9568194 #>  [505,] 1.3225984 1.3550808 1.3633453 #>  [506,] 0.6502060 0.6521786 0.6884854 #>  [507,] 0.5264769 0.5305684 0.5419574 #>  [508,] 0.5262077 0.5416459 0.5426068 #>  [509,] 1.4275455 1.4398458 1.4493380 #>  [510,] 0.6583591 0.7050312 0.7371820 #>  [511,] 0.6121662 0.6714434 0.6784793 #>  [512,] 1.7755304 1.8249189 1.8256514 #>  [513,] 0.8520224 0.9032263 0.9187822 #>  [514,] 0.5661197 0.5770136 0.6030858 #>  [515,] 0.5273005 0.5324437 0.5548846 #>  [516,] 0.7830326 0.7852745 0.7994708 #>  [517,] 0.6277039 0.6743787 0.7120103 #>  [518,] 0.6980915 0.7094986 0.7116002 #>  [519,] 0.6500827 0.6715131 0.6736725 #>  [520,] 0.6192674 0.6304639 0.6435166 #>  [521,] 1.2701461 1.3376554 1.3684133 #>  [522,] 1.2377642 1.2870926 1.2944534 #>  [523,] 1.1255700 1.1287992 1.1520032 #>  [524,] 0.7940886 0.8326830 0.9124299 #>  [525,] 1.0741139 1.0954735 1.1391325 #>  [526,] 0.8342665 0.8596974 0.8797573 #>  [527,] 0.5338666 0.5650132 0.5772574 #>  [528,] 0.9466180 0.9689322 0.9695995 #>  [529,] 0.5697722 0.6053094 0.6062448 #>  [530,] 0.9182318 0.9449066 1.0188992 #>  [531,] 1.7506426 1.8017039 1.8026173 #>  [532,] 1.1406319 1.1454969 1.1702854 #>  [533,] 1.2004867 1.2065934 1.2260200 #>  [534,] 0.7929313 0.8004995 0.8079259 #>  [535,] 1.0362400 1.0396006 1.0398975 #>  [536,] 0.6002218 0.6150493 0.6188597 #>  [537,] 0.6685217 0.6884056 0.6916067 #>  [538,] 0.6946035 0.7468146 0.7535245 #>  [539,] 0.9837108 1.0392229 1.0523939 #>  [540,] 1.0537526 1.1058285 1.1234503 #>  [541,] 0.5976440 0.6090299 0.6536018 #>  [542,] 0.9904052 1.0018125 1.0838507 #>  [543,] 0.5267053 0.5516829 0.5716634 #>  [544,] 0.8880759 0.9127268 0.9357285 #>  [545,] 0.8418309 0.8482521 0.8777914 #>  [546,] 2.0267712 2.0649341 2.0888005 #>  [547,] 1.1391976 1.1662928 1.1730230 #>  [548,] 0.8270061 0.8363543 0.8765410 #>  [549,] 0.5313373 0.5509807 0.5557716 #>  [550,] 0.5539596 0.5990488 0.6064324 #>  [551,] 0.6096346 0.6361757 0.6452394 #>  [552,] 0.6255921 0.6728571 0.6889763 #>  [553,] 0.9664642 0.9887145 1.0019485 #>  [554,] 0.7060338 0.7145351 0.7362724 #>  [555,] 0.7115467 0.7522748 0.7710247 #>  [556,] 0.8646562 0.8811904 0.8894510 #>  [557,] 0.9551539 0.9599978 0.9921218 #>  [558,] 0.5792849 0.5967389 0.6097359 #>  [559,] 0.5679907 0.5881086 0.5891158 #>  [560,] 1.7203135 1.7394032 1.7543290 #>  [561,] 0.7283429 0.7424809 0.7475826 #>  [562,] 0.6150786 0.6649941 0.6704538 #>  [563,] 0.6165220 0.6980310 0.7064000 #>  [564,] 0.4872801 0.5022933 0.5324437 #>  [565,] 0.7467189 0.7755877 0.8207346 #>  [566,] 0.9381012 0.9740594 1.0227092 #>  [567,] 0.6982408 0.7268875 0.7376239 #>  [568,] 0.6548329 0.6818245 0.6834445 #>  [569,] 0.9291537 0.9359232 0.9363566 #>  [570,] 0.8346423 0.8577575 0.8914992 #>  [571,] 0.8234142 0.8949735 0.9408843 #>  [572,] 0.6724330 0.7625827 0.7687395 #>  [573,] 0.7645803 0.7896177 0.8039426 #>  [574,] 0.5958054 0.6134112 0.6217510 #>  [575,] 0.9341299 0.9372177 0.9507595 #>  [576,] 0.5778241 0.6219959 0.6417019 #>  [577,] 0.5227327 0.5569547 0.5844075 #>  [578,] 0.8611076 0.9047704 1.0196714 #>  [579,] 0.7229499 0.7434202 0.7667481 #>  [580,] 0.5912301 0.5941595 0.6021520 #>  [581,] 1.1843514 1.2294143 1.2707180 #>  [582,] 1.0112816 1.0355362 1.0380084 #>  [583,] 0.8193125 0.8249295 0.8271877 #>  [584,] 0.7632221 0.7637372 0.7715473 #>  [585,] 0.6429181 0.6862949 0.6917889 #>  [586,] 0.8227048 0.8587368 0.8663898 #>  [587,] 0.9346986 0.9721969 0.9807785 #>  [588,] 0.6322243 0.7195043 0.7512215 #>  [589,] 0.9205809 0.9610282 1.0008796 #>  [590,] 0.8270579 0.9132721 0.9259911 #>  [591,] 0.6462020 0.6671725 0.7023843 #>  [592,] 0.7729371 0.7753042 0.7842522 #>  [593,] 0.7447875 0.7466857 0.7584971 #>  [594,] 0.7200610 0.7222503 0.7247198 #>  [595,] 0.5973428 0.6070995 0.6207874 #>  [596,] 0.6219959 0.6330031 0.6368051 #>  [597,] 0.8353010 0.8666362 0.8708113 #>  [598,] 0.5305248 0.5537512 0.5548089 #>  [599,] 0.8317822 0.8323635 0.8438549 #>  [600,] 1.0663578 1.0747242 1.0782892 #>  [601,] 0.5020172 0.5069544 0.5370870 #>  [602,] 0.6258718 0.6311451 0.6871579 #>  [603,] 0.8234142 0.8261193 0.8837420 #>  [604,] 1.4868551 1.5365457 1.6070328 #>  [605,] 0.4721637 0.5186080 0.5329286 #>  [606,] 0.6004640 0.6022337 0.6194201 #>  [607,] 1.1155042 1.2230135 1.2263011 #>  [608,] 1.6479489 1.6555058 1.7041891 #>  [609,] 0.7190598 0.7347327 0.7699475 #>  [610,] 0.6097287 0.6176010 0.6198751 #>  [611,] 0.7284051 0.8192000 0.8409160 #>  [612,] 0.5608876 0.6082830 0.6278754 #>  [613,] 0.5125483 0.5228647 0.5269067 #>  [614,] 0.5548177 0.5617339 0.5879289 #>  [615,] 0.7161143 0.7364366 0.7973701 #>  [616,] 0.7071856 0.7080913 0.7112406 #>  [617,] 0.8203152 0.8263079 0.8715888 #>  [618,] 0.6134112 0.6279668 0.6596480 #>  [619,] 1.5827223 1.6104340 1.6168726 #>  [620,] 0.9831520 0.9952533 1.0004955 #>  [621,] 0.6122262 0.6261723 0.6345314 #>  [622,] 1.4075683 1.4157577 1.4983492 #>  [623,] 0.5547391 0.5924486 0.6036538 #>  [624,] 0.6761486 0.6921403 0.7037365 #>  [625,] 0.7424809 0.7427251 0.7486793 #>  [626,] 1.1559658 1.1720825 1.1914995 #>  [627,] 0.6948341 0.7078818 0.7616317 #>  [628,] 0.7113642 0.7711050 0.7952588 #>  [629,] 1.1205266 1.1312201 1.1548141 #>  [630,] 0.4916398 0.5112319 0.5504073 #>  [631,] 0.7043136 0.7091178 0.7172559 #>  [632,] 0.8045513 0.8165901 0.8318624 #>  [633,] 0.7239884 0.7832989 0.8036274 #>  [634,] 0.9304826 0.9351005 0.9798396 #>  [635,] 1.5390226 1.5690458 1.5992813 #>  [636,] 0.5824967 0.5850509 0.5942104 #>  [637,] 0.9827428 1.0669954 1.0757129 #>  [638,] 0.9662566 0.9695643 0.9797032 #>  [639,] 0.6915663 0.6921494 0.7065201 #>  [640,] 0.6852033 0.7206921 0.7646393 #>  [641,] 0.7285309 0.7419756 0.7552745 #>  [642,] 0.8205261 0.8472277 0.8715636 #>  [643,] 0.4673750 0.4827675 0.5188261 #>  [644,] 0.7046543 0.7525316 0.7541948 #>  [645,] 1.3527108 1.3619004 1.3931839 #>  [646,] 0.9385625 0.9557412 0.9767513 #>  [647,] 0.5801564 0.5991376 0.6014291 #>  [648,] 1.1565122 1.1902543 1.1988641 #>  [649,] 0.9721705 1.0106865 1.0217204 #>  [650,] 1.1480877 1.1781449 1.1970243 #>  [651,] 0.6806804 0.6882183 0.7327452 #>  [652,] 0.4618417 0.5096128 0.5262077 #>  [653,] 1.0897413 1.0931903 1.0996281 #>  [654,] 0.5755038 0.5916145 0.5964386 #>  [655,] 0.8449237 0.8644207 0.8729751 #>  [656,] 0.6309201 0.6422626 0.6656533 #>  [657,] 0.7421385 0.7613450 0.7709893 #>  [658,] 0.7370096 0.7405788 0.7530311 #>  [659,] 1.7637501 1.7751203 1.8854585 #>  [660,] 0.7614410 0.8110115 0.8126186 #>  [661,] 1.0816553 1.0862828 1.0988661 #>  [662,] 0.8089977 0.8331414 0.8417781 #>  [663,] 0.5524508 0.5808544 0.6088508 #>  [664,] 0.9549667 0.9882079 0.9890765 #>  [665,] 1.0428957 1.0587123 1.0898594 #>  [666,] 0.7468146 0.7551623 0.7573821 #>  [667,] 1.0444756 1.0631690 1.1058599 #>  [668,] 0.6421894 0.6728571 0.6994171 #>  [669,] 0.8999834 0.9185951 0.9560021 #>  [670,] 0.9576136 1.0598304 1.0895528 #>  [671,] 0.5650132 0.5934248 0.6514926 #>  [672,] 0.8207395 0.8253611 0.8558225 #>  [673,] 1.1400008 1.1513270 1.1578552 #>  [674,] 0.8961097 0.8963751 0.8967157 #>  [675,] 0.7247632 0.7279000 0.7311145 #>  [676,] 1.2207754 1.2979093 1.3115283 #>  [677,] 0.5363620 0.5539381 0.5549595 #>  [678,] 0.8028723 0.8532896 0.8814175 #>  [679,] 0.5416459 0.5517725 0.5767979 #>  [680,] 1.4676820 1.5014344 1.5721815 #>  [681,] 1.6064612 1.6597052 1.7300343 #>  [682,] 0.5633749 0.6062746 0.6184990 #>  [683,] 1.7487605 1.7537169 1.7722963 #>  [684,] 0.6479711 0.6956853 0.7484750 #>  [685,] 0.7944991 0.8043368 0.8097003 #>  [686,] 0.7333479 0.7366712 0.7469491 #>  [687,] 1.3468321 1.3480687 1.3649240 #>  [688,] 0.9186662 0.9484968 0.9664270 #>  [689,] 0.9304481 0.9333092 0.9781046 #>  [690,] 0.5809503 0.6317380 0.6318966 #>  [691,] 0.8783810 0.8789340 0.9084173 #>  [692,] 1.4294126 1.4609636 1.4831927 #>  [693,] 0.6951851 0.7040036 0.7109461 #>  [694,] 0.4982906 0.4990543 0.5243275 #>  [695,] 0.7038185 0.7104378 0.7136714 #>  [696,] 1.1198592 1.1532690 1.1991034 #>  [697,] 0.7471641 0.7885803 0.7944084 #>  [698,] 0.6674821 0.7006753 0.7052818 #>  [699,] 0.7712567 0.7724949 0.7776693 #>  [700,] 0.8409968 0.8447410 0.8619283 #>  [701,] 1.1124872 1.1571670 1.1607512 #>  [702,] 0.6574474 0.6766666 0.6862905 #>  [703,] 0.5546170 0.5738829 0.5917325 #>  [704,] 0.6233143 0.6430844 0.6690753 #>  [705,] 1.3248256 1.3418640 1.4403258 #>  [706,] 1.3474268 1.3953434 1.4319445 #>  [707,] 0.6643970 0.6793375 0.7271264 #>  [708,] 0.6500827 0.6657698 0.6727299 #>  [709,] 1.2369523 1.2678342 1.2752023 #>  [710,] 0.9481156 0.9575572 0.9737876 #>  [711,] 0.7690195 0.8104040 0.8502097 #>  [712,] 1.2175263 1.2389980 1.2761394 #>  [713,] 0.8284482 0.8323635 0.8397861 #>  [714,] 1.1433705 1.2213279 1.2340939 #>  [715,] 0.7994292 0.8164473 0.8218581 #>  [716,] 0.8086854 0.8114358 0.8170021 #>  [717,] 0.8798276 0.8958279 0.9059144 #>  [718,] 0.8379920 0.9325223 0.9349715 #>  [719,] 1.2395043 1.2883501 1.3095617 #>  [720,] 1.2508384 1.4084602 1.4613324 #>  [721,] 1.4587559 1.4696036 1.5107668 #>  [722,] 0.8905723 0.9071015 0.9598196 #>  [723,] 0.9115859 0.9293275 0.9347026 #>  [724,] 1.0133555 1.0666359 1.0985682 #>  [725,] 0.4591404 0.4622657 0.4776457 #>  [726,] 0.6976628 0.7031439 0.8167601 #>  [727,] 0.5125062 0.5223344 0.5584131 #>  [728,] 0.9463971 0.9662145 0.9852926 #>  [729,] 0.6521786 0.6614355 0.6803765 #>  [730,] 1.0547342 1.0805393 1.0838864 #>  [731,] 0.6159421 0.6199537 0.6471020 #>  [732,] 0.9706108 0.9979522 1.0117923 #>  [733,] 0.6942479 0.6977322 0.7249295 #>  [734,] 0.8075431 0.8157600 0.8399744 #>  [735,] 1.7140726 1.7583184 1.7759101 #>  [736,] 0.8058647 0.8253843 0.8788719 #>  [737,] 0.5873308 0.5968931 0.6145747 #>  [738,] 0.7506206 0.7617965 0.7896547 #>  [739,] 0.8077021 0.8242204 0.8602294 #>  [740,] 0.7322815 0.7447875 0.7598896 #>  [741,] 0.5827955 0.5845477 0.6021945 #>  [742,] 0.9328825 0.9604549 1.0121390 #>  [743,] 0.6264208 0.6499600 0.6600924 #>  [744,] 1.0186605 1.0250634 1.0972571 #>  [745,] 0.7245759 0.7270015 0.7506150 #>  [746,] 1.2964713 1.3620421 1.3654975 #>  [747,] 1.0085002 1.0461698 1.0477122 #>  [748,] 0.8976536 0.9860270 1.0004288 #>  [749,] 0.7848050 0.8667839 0.8703224 #>  [750,] 0.7156369 0.7271542 0.7322702 #>  [751,] 1.1482089 1.1488596 1.1511514 #>  [752,] 0.6236021 0.6513994 0.6519939 #>  [753,] 0.6494944 0.6696296 0.6848075 #>  [754,] 0.5194532 0.5198059 0.5601927 #>  [755,] 0.9106400 0.9408843 0.9613941 #>  [756,] 0.8552553 0.8696752 0.8719100 #>  [757,] 1.0530001 1.0541314 1.0739288 #>  [758,] 1.4133026 1.4989177 1.5482078 #>  [759,] 0.6038085 0.6165815 0.6906763 #>  [760,] 0.8603923 0.8727508 0.8802576 #>  [761,] 0.6199658 0.6300713 0.6422417 #>  [762,] 0.8854379 0.8952777 0.9034297 #>  [763,] 0.9093853 0.9235530 1.0908811 #>  [764,] 0.8112181 0.8301034 0.8414845 #>  [765,] 1.1185457 1.1412326 1.1689996 #>  [766,] 0.7797911 0.8103680 0.8224567 #>  [767,] 0.8360712 0.8367851 0.8421800 #>  [768,] 0.6850346 0.6963282 0.7077097 #>  [769,] 0.5319057 0.5526943 0.5578936 #>  [770,] 0.5827680 0.6231881 0.6255921 #>  [771,] 0.7534836 0.7879989 0.8193721 #>  [772,] 0.7377058 0.7442335 0.7608034 #>  [773,] 1.3370653 1.3633453 1.3644863 #>  [774,] 0.8940467 0.8971110 0.8995729 #>  [775,] 0.4941461 0.5159859 0.5228370 #>  [776,] 0.9742930 0.9756199 0.9802293 #>  [777,] 0.6019647 0.6061817 0.6077390 #>  [778,] 1.1264136 1.1303688 1.1869444 #>  [779,] 1.0410489 1.0753924 1.1111208 #>  [780,] 0.6090987 0.6104634 0.6154747 #>  [781,] 1.0200746 1.1343794 1.1607494 #>  [782,] 1.0780392 1.0804644 1.0989678 #>  [783,] 0.6800033 0.7218738 0.7419318 #>  [784,] 1.3466856 1.3531927 1.3698985 #>  [785,] 0.9607747 0.9687036 0.9878939 #>  [786,] 0.7954347 0.8092687 0.8285908 #>  [787,] 0.9218626 0.9219600 0.9708868 #>  [788,] 0.7239884 0.7336303 0.7578017 #>  [789,] 1.1754824 1.1765635 1.2394117 #>  [790,] 0.8981493 0.9139388 0.9418451 #>  [791,] 1.2049489 1.2132852 1.2186344 #>  [792,] 0.5948771 0.6360774 0.6800242 #>  [793,] 1.2115058 1.2132852 1.2276193 #>  [794,] 1.3523450 1.3974122 1.4408117 #>  [795,] 1.2953849 1.3406807 1.3897906 #>  [796,] 0.6793578 0.6980915 0.7038239 #>  [797,] 1.2512142 1.2671887 1.3147481 #>  [798,] 0.5569761 0.5688987 0.5797486 #>  [799,] 0.7361922 0.7467399 0.8261193 #>  [800,] 0.6596719 0.6644361 0.6687554 #>  [801,] 1.2324947 1.2573523 1.3116484 #>  [802,] 0.8819199 0.9156550 0.9356065 #>  [803,] 0.6556841 0.6560633 0.6724398 #>  [804,] 0.8000341 0.8117170 0.8153133 #>  [805,] 0.5592270 0.5731844 0.6098538 #>  [806,] 0.9610504 0.9827315 1.0005349 #>  [807,] 0.7152939 0.7536625 0.8107690 #>  [808,] 1.0320210 1.0563974 1.0894172 #>  [809,] 1.0289487 1.0323901 1.0356476 #>  [810,] 0.5890686 0.5997411 0.6052984 #>  [811,] 0.6164410 0.6447935 0.6483051 #>  [812,] 1.2659225 1.2955692 1.3387749 #>  [813,] 0.4885548 0.5190864 0.5282475 #>  [814,] 0.6854653 0.7044459 0.7201573 #>  [815,] 0.6630469 0.7248906 0.7532900 #>  [816,] 0.5532465 0.5699069 0.5752415 #>  [817,] 0.8867432 0.9114453 0.9912110 #>  [818,] 0.5269067 0.5353574 0.5590879 #>  [819,] 0.5523784 0.5713688 0.6264051 #>  [820,] 0.5456569 0.5533367 0.6449288 #>  [821,] 0.7524418 0.7560585 0.8389503 #>  [822,] 0.6866951 0.6867988 0.6906174 #>  [823,] 0.5068669 0.5396258 0.5581004 #>  [824,] 0.7477958 0.7492932 0.7581572 #>  [825,] 1.0376246 1.0468797 1.0844196 #>  [826,] 0.6332738 0.6560633 0.6873932 #>  [827,] 1.2196494 1.2631762 1.2685596 #>  [828,] 1.0373464 1.0375611 1.0396679 #>  [829,] 0.6450028 0.6980310 0.7079609 #>  [830,] 0.7908705 0.8186544 0.9892775 #>  [831,] 0.7450319 0.7693720 0.7887061 #>  [832,] 0.8410840 0.8444429 0.8515437 #>  [833,] 0.6131797 0.6190481 0.6239939 #>  [834,] 1.0159897 1.0858755 1.1229436 #>  [835,] 0.5273005 0.5644130 0.5685543 #>  [836,] 0.6687884 0.6793375 0.6998073 #>  [837,] 0.6757054 0.6783308 0.7038239 #>  [838,] 0.6011139 0.6039425 0.6097359 #>  [839,] 0.7246644 0.7388008 0.7614496 #>  [840,] 0.6430844 0.6728643 0.7431842 #>  [841,] 1.0529621 1.0576025 1.0945397 #>  [842,] 0.5487287 0.5611785 0.5660109 #>  [843,] 1.2836138 1.3777358 1.4272045 #>  [844,] 0.6252078 0.6766388 0.7425327 #>  [845,] 1.1660705 1.1858229 1.2476859 #>  [846,] 0.9518564 0.9874961 1.0144683 #>  [847,] 0.5066242 0.5286657 0.5315601 #>  [848,] 0.7829433 0.7891758 0.7915921 #>  [849,] 0.5575160 0.5940971 0.5972962 #>  [850,] 0.7165781 0.7524029 0.7842904 #>  [851,] 1.0273703 1.0986190 1.1496238 #>  [852,] 0.6613020 0.6644767 0.6749456 #>  [853,] 1.7899444 1.9129868 1.9159615 #>  [854,] 0.7250711 0.7422464 0.7447422 #>  [855,] 0.8726886 0.8806787 0.8842603 #>  [856,] 0.7131079 0.7191847 0.7219515 #>  [857,] 0.5487319 0.5873308 0.5884215 #>  [858,] 0.6409228 0.6499800 0.6574474 #>  [859,] 0.7296692 0.7312173 0.7389016 #>  [860,] 1.5707485 1.5732811 1.6318685 #>  [861,] 0.6724330 0.6994205 0.7205641 #>  [862,] 0.7305704 0.8420257 0.9358730 #>  [863,] 0.6309583 0.6396712 0.6470107 #>  [864,] 0.7518594 0.8107571 0.8154146 #>  [865,] 1.5171349 1.6333709 1.6341501 #>  [866,] 1.1067901 1.1163671 1.1325169 #>  [867,] 0.7302591 0.7683214 0.7788274 #>  [868,] 0.7508425 0.7558967 0.7626213 #>  [869,] 1.0627103 1.0881742 1.0887648 #>  [870,] 0.9430205 0.9640640 0.9684231 #>  [871,] 0.6483495 0.6591584 0.6706259 #>  [872,] 0.5941869 0.6019915 0.6493429 #>  [873,] 0.7602017 0.7677018 0.7748892 #>  [874,] 0.6260317 0.6279615 0.6325089 #>  [875,] 0.8555073 0.8609105 0.8609558 #>  [876,] 1.0640753 1.0800655 1.0894698 #>  [877,] 0.6168438 0.6473558 0.6671920 #>  [878,] 0.6986516 0.7210840 0.7400687 #>  [879,] 0.6190664 0.6203074 0.6247881 #>  [880,] 0.6614359 0.6683329 0.6698993 #>  [881,] 0.6499800 0.7098818 0.7184881 #>  [882,] 0.6062581 0.6069419 0.6375760 #>  [883,] 0.6952933 0.6969779 0.7212692 #>  [884,] 0.5924486 0.6121059 0.6278122 #>  [885,] 0.9094123 0.9232645 0.9262252 #>  [886,] 0.8750848 0.8782525 0.8843168 #>  [887,] 0.7175828 0.7365942 0.7878638 #>  [888,] 0.7200610 0.7463957 0.7706642 #>  [889,] 0.5783218 0.5836065 0.6698993 #>  [890,] 0.8255299 0.8329353 0.8422431 #>  [891,] 0.6019405 0.6039243 0.6482349 #>  [892,] 1.0033903 1.0128148 1.0954905 #>  [893,] 0.4877180 0.4935828 0.5177376 #>  [894,] 0.7980186 0.7997437 0.8360028 #>  [895,] 1.3223704 1.4061203 1.4109874 #>  [896,] 0.7471775 0.7641996 0.7720486 #>  [897,] 1.1805517 1.2348098 1.3194719 #>  [898,] 1.3268011 1.3556734 1.3664335 #>  [899,] 0.6997413 0.7229473 0.7379794 #>  [900,] 0.5798291 0.5948784 0.6504444 #>  [901,] 0.7230323 0.7479795 0.7548000 #>  [902,] 2.1357824 2.1851253 2.2849137 #>  [903,] 0.5186080 0.5450802 0.5499770 #>  [904,] 1.3172311 1.3309602 1.3318829 #>  [905,] 0.5347056 0.5464641 0.5536463 #>  [906,] 0.7882201 0.8173887 0.8520224 #>  [907,] 0.6509460 0.6613020 0.7088266 #>  [908,] 0.5811599 0.6292574 0.6610077 #>  [909,] 0.6084992 0.6150740 0.6203669 #>  [910,] 0.5613763 0.5624489 0.5633749 #>  [911,] 1.0066512 1.0284918 1.0474054 #>  [912,] 0.6139653 0.6410236 0.7374395 #>  [913,] 0.6791727 0.6873950 0.7010664 #>  [914,] 0.6490367 0.6619224 0.6854653 #>  [915,] 1.0153530 1.0444118 1.0491733 #>  [916,] 0.9039617 0.9129511 0.9184793 #>  [917,] 0.8087617 0.8611320 0.9622713 #>  [918,] 1.0040252 1.0174762 1.0176755 #>  [919,] 0.7207361 0.7560781 0.7776236 #>  [920,] 0.8307994 0.9296337 1.0275609 #>  [921,] 1.2034181 1.2583172 1.2992574 #>  [922,] 0.9937390 1.0076918 1.0170964 #>  [923,] 0.8265963 0.8567224 0.8729395 #>  [924,] 0.6953066 0.7766902 0.7896177 #>  [925,] 1.0588853 1.0743447 1.1379793 #>  [926,] 0.9805062 1.0383080 1.0667349 #>  [927,] 0.6611427 0.6708780 0.7145552 #>  [928,] 1.1985841 1.2033075 1.2172651 #>  [929,] 0.7250711 0.7608011 0.7997620 #>  [930,] 0.7453670 0.7703197 0.7783531 #>  [931,] 0.9782801 0.9860270 0.9914032 #>  [932,] 1.2283935 1.2403447 1.2496634 #>  [933,] 0.7285778 0.7353108 0.7435754 #>  [934,] 0.7012101 0.7441339 0.7463957 #>  [935,] 0.8742367 0.9300695 0.9775383 #>  [936,] 1.0334673 1.0521770 1.0804639 #>  [937,] 0.7893899 0.8057973 0.8805693 #>  [938,] 0.6546197 0.6584168 0.6608932 #>  [939,] 0.8498462 0.8684979 0.9262133 #>  [940,] 0.8547014 0.8745855 0.8871988 #>  [941,] 0.5654036 0.6203074 0.6414583 #>  [942,] 0.6847137 0.6848075 0.6916611 #>  [943,] 1.7375316 1.7462456 1.7733016 #>  [944,] 0.8865301 0.8917457 0.8952875 #>  [945,] 0.5591807 0.6375966 0.6412243 #>  [946,] 0.9955098 1.0000243 1.0842216 #>  [947,] 1.0393500 1.0575000 1.0635721 #>  [948,] 0.8033501 0.8602234 0.9003376 #>  [949,] 1.8457247 1.8802725 1.8858596 #>  [950,] 0.6902268 0.7202659 0.7426085 #>  [951,] 0.7156082 0.7753842 0.7984359 #>  [952,] 0.8040196 0.8053847 0.8981993 #>  [953,] 0.8417582 0.8568311 0.8614136 #>  [954,] 0.7744585 0.7779968 0.7831374 #>  [955,] 0.5982749 0.6024639 0.6090581 #>  [956,] 0.9294160 0.9404047 0.9468309 #>  [957,] 0.6309583 0.6934806 0.7507638 #>  [958,] 0.7852306 0.8623653 0.8681874 #>  [959,] 0.6171056 0.6254349 0.6344209 #>  [960,] 0.8037410 0.8159587 0.8654230 #>  [961,] 1.1139701 1.1396827 1.1751159 #>  [962,] 0.9173587 0.9611089 0.9945659 #>  [963,] 1.1723234 1.2554733 1.2795460 #>  [964,] 0.7970603 0.8270644 0.8365431 #>  [965,] 0.7956838 0.8316858 0.8505911 #>  [966,] 1.2684235 1.3073332 1.3271170 #>  [967,] 0.6283006 0.6774709 0.7308427 #>  [968,] 0.6084799 0.6142619 0.6369692 #>  [969,] 0.7354855 0.7699693 0.7938203 #>  [970,] 1.4756557 1.4984280 1.5770043 #>  [971,] 0.7275766 0.7315843 0.7532773 #>  [972,] 1.0334673 1.0748011 1.0897574 #>  [973,] 0.5965684 0.6350664 0.6368051 #>  [974,] 0.8912173 0.8981499 0.9466909 #>  [975,] 0.5352457 0.6000076 0.6113217 #>  [976,] 0.9180161 0.9188166 0.9744841 #>  [977,] 0.5096128 0.5282940 0.5344222 #>  [978,] 0.6063459 0.6113217 0.6219350 #>  [979,] 0.6224880 0.6285687 0.6511806 #>  [980,] 0.5330191 0.6328009 0.6723332 #>  [981,] 0.6164410 0.6196762 0.6428234 #>  [982,] 0.8072819 0.8716676 0.8842603 #>  [983,] 0.8647478 0.9012213 0.9081826 #>  [984,] 0.7464688 0.7729635 0.7933715 #>  [985,] 0.9312126 0.9373814 0.9664642 #>  [986,] 0.7363033 0.7752902 0.7895805 #>  [987,] 0.9380697 0.9545759 0.9546495 #>  [988,] 0.5319057 0.5352457 0.5388966 #>  [989,] 0.6108339 0.6309713 0.6499600 #>  [990,] 1.4816824 1.5502742 1.5815809 #>  [991,] 0.5529307 0.6495981 0.6686748 #>  [992,] 0.5813276 0.5823722 0.6239009 #>  [993,] 0.7426340 0.7438238 0.7465465 #>  [994,] 0.6441982 0.6531230 0.6779218 #>  [995,] 0.9586978 1.0058711 1.0388588 #>  [996,] 1.0666812 1.0773295 1.0795818 #>  [997,] 1.0056209 1.1509948 1.1565760 #>  [998,] 0.5134770 0.5140871 0.5440550 #>  [999,] 0.7816013 0.8152418 0.8573154 #> [1000,] 1.7057775 1.7099707 1.7104890 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]   11   85  187   66  572  280   52  231  957   614 #>    [2,]  273  116  761  516  197  464  731  301  389   371 #>    [3,]  340  825  186  263  911  571  809  603  865   711 #>    [4,]  179  941  405  879  863  777  754  442  206   135 #>    [5,]  193  236  477  650  939  539  963  787  240   218 #>    [6,]  811  384  624  357  887  461  104  981  740   654 #>    [7,]  562  424  172  715  615  537  814  914  184   743 #>    [8,]   16  980  563  174  690  351  129  107  599   538 #>    [9,]  199  779  831   37  456  693  618  238  561   429 #>   [10,]  882  792  527  733  623  318  880  320  727    32 #>   [11,]    1  231   66   85  410  187  435   52  642   957 #>   [12,]  871  428  891  511  652  448  310   92  355   893 #>   [13,]  490  691  370  723  553  525  158  427  109   244 #>   [14,]  135  602  964  206  599   98  351   72  969   666 #>   [15,]  220   48   22  347  606  502  938  455  481   485 #>   [16,]  563  690    8  980  445  601  129  978  107   269 #>   [17,]  814  715  983  525  919  723   94  192  562   757 #>   [18,]  356  696  726  255  254   56  382  496  150   675 #>   [19,]  168  954  942  788  624  357  609   60  734   887 #>   [20,]  598  252  682  910  992  636  610  169  656   508 #>   [21,]   71   67  223  944  669  886  812   22  658   293 #>   [22,]  502  606  938   15  220  585  944  293  203   421 #>   [23,]  432  649  918  931  964  341  997  386  331   683 #>   [24,]  837   83  108  884  821  844  759  796  672   940 #>   [25,]   34  841  956  655  590  296  767  965  807   459 #>   [26,]   91  840  217  826  803  704  399  823   53   375 #>   [27,]  294  766  693  227  991  456  568  838  933   103 #>   [28,]  495  300   25  459  325  921  956  841  655   962 #>   [29,]  982  334  888  290  554  241  553  278  985   315 #>   [30,]  207  386  776  390  462  900  952  890  610   466 #>   [31,]  830  194  611  724  513  402  906  191  498   592 #>   [32,]  727  527  671  630   75  320   51  725  354   201 #>   [33,]  916  197  371  452  575  367  797  405  710   362 #>   [34,]   25  590  296  841  767  965  109  655  268    59 #>   [35,]  719  378  131  763  604  329  491  948  826   906 #>   [36,]  927  903  754  741  391  910  289  520  636   941 #>   [37,]  736  779  238  199    9  545  756  831  339   272 #>   [38,]  745  772  183  747  499  870  861  858  279   372 #>   [39,]  218  105  193  477  868  824  323   69  561    68 #>   [40,]  560  523  377  509  304  542  306  468  827   139 #>   [41,]  539  530  667  193  784    5  167  477  312   437 #>   [42,]  771   93  164  365  329  844  397  131  796   528 #>   [43,]  768  631  182  656  682  316  858  836  864   833 #>   [44,]  395  748  749  669  433  597  110  931  196    76 #>   [45,]  746  362  779  736  764  258  452  710  339   367 #>   [46,]  467  795  307  251  646  808  209  292  895   744 #>   [47,]  389  567  602  253  998  135  303  847  613   761 #>   [48,]   15  347  220  455  481  485  790  967  711   195 #>   [49,]  875  245  920  225  660  751  414  866  611   399 #>   [50,]  404  972  497  904  817  983  584  159  267   424 #>   [51,]  201  178   57   75  671   32  320  725   70   354 #>   [52,]  957  302  614  289   66  863  187  777  483   435 #>   [53,]  100  945  375  102   91  823  775  658  217    26 #>   [54,]  836  327  270  861  554  406  286  800  745   229 #>   [55,]  997  649  676  670  141  634  781  758  952   458 #>   [56,]  877  150  496  475  541  443  356  617  266   726 #>   [57,]  320  178  198   51   70   75  480  601  725   170 #>   [58,]  966  806  876  637  738  547  177  831  436   398 #>   [59,]  334  965  956  841  290  934   34   25  553   286 #>   [60,]  363  734  249  325   19  678  633  716  767   954 #>   [61,]  541  880  318   69  617  266  859  824   88   792 #>   [62,]  643  580  250   77  161  198  507  271  601    57 #>   [63,]  162   81  140  260  850  785  871  163  486   984 #>   [64,]  416  845  962  674  716  325  152  355  855   281 #>   [65,]  625  413  591  253  211  519  663  978  484   388 #>   [66,]   52  957  302   11  614  483  993  863    1   435 #>   [67,]  658  375  886   21  399  944  918  812   91   276 #>   [68,]  896  318  236  472  963  539  824  937  930   650 #>   [69,]  323   61  824  541  544  475  750  105  617   616 #>   [70,]  178  198   57   51  320  201  123  494   75   450 #>   [71,]   21  223  504  648  669  629  996  324  938   869 #>   [72,]  538  666  912  361  995  351  829  579  964    14 #>   [73,]  127  422  788  942  753  628  243  954  633   873 #>   [74,]  835  262  454  123  201  492  564  128  400   543 #>   [75,]  725  320  527   57   32   51  727  282  178   170 #>   [76,]   86  196  749  110  722   44  457  748  665   418 #>   [77,]   62  679  161  217  198  494  250  271  349   977 #>   [78,]  175  343  114  524  302  392  993  702  957   913 #>   [79,]  117  571  755  569  848  380  112  894  909   752 #>   [80,]  275  350  843  943  925  119  500  522  137   688 #>   [81,]  802  162  850  984   63  425  785  923  229   163 #>   [82,]  385  987  157  700  969  748  918  786  579   619 #>   [83,]   24  796  844  940  837  108  164  821  771   884 #>   [84,]  248  653  371  521  116  197  575    2  165   393 #>   [85,]  187    1   11  572  614  707  435  270   52   246 #>   [86,]   76  196  749  665  722  110  317  134  457   638 #>   [87,]  337  586  444  173  422  853  234  687  208   222 #>   [88,]  266   61  369  343  774  739  880  114  226   859 #>   [89,]  670  155  954  716  331  609  952  166  649   788 #>   [90,]  986  398  558  574  991   95  762  376  641   583 #>   [91,]   26  803  217  840   53  823  399  375  826   658 #>   [92,]  310  652  893  428  126  355  677  448  905    12 #>   [93,]  771  164   42  365  796  844  815  329  298   420 #>   [94,]  192  999  244  366  862  158  407  328  919   189 #>   [95,]  583  574  398  641  558  376  991   90  577   799 #>   [96,]  637  219  738  699   90  436  728  946  876   374 #>   [97,]  747  557  745  231  274  870  473  270  921   642 #>   [98,]  206  971  135  781    4  964   14  761  423   602 #>   [99,]  712  728  966  238  408  374  831   58  545   637 #>  [100,]  945  823   53  102  775  217  677  959  271    91 #>  [101,]  743  128  955  240  766  708  725  336  319   172 #>  [102,]  775   53  945  100  349  217  243  506  823   679 #>  [103,]  214  492  813  780  621  440  543  529  463    74 #>  [104,]  384  461  811  820  138    6  913  656  910   462 #>  [105,]  218  294   39   69   27  868  787  766  693   544 #>  [106,]  859  305  880  881  114  792  882  702  593   727 #>  [107,]  253  129  602  555   47    8  514  135   16    65 #>  [108,]  884  815  844  759   24   83  837  518  269   164 #>  [109,]  158  590  268  965  370  244  999   94  192   767 #>  [110,]   76  196  749  570   86  748   44  722  419   395 #>  [111,]  346  190  702  833  780  372  872  440  279   391 #>  [112,]  515  400  381  128  262  848  874  955  835   454 #>  [113,]  705  928  795  895  744  501  251   46  209   566 #>  [114,]  524  565  702  343  106  305   78  392  881   627 #>  [115,]  746   45  779  362  238  452  701  659  429   797 #>  [116,]  197    2  686  504  330  273  464  301  516   731 #>  [117,]   79  752  335  360  950  976  755  353  304   569 #>  [118,]  588  460  403  672  335  414  769  819  752   360 #>  [119,]  213   80  275  137  122  603  350  186  843   522 #>  [120,]  839  927  179  442  941  732   36  483  741   754 #>  [121,]  143  842  564  905  852  228  455  262  125   123 #>  [122,]  308  498  256  137  689  556  307  592  569   194 #>  [123,]   74  450  201  262  694  543  178  143   70   835 #>  [124,]  391  632  750  475  877  346  517  616  927   111 #>  [125,]  905  857  652  310  977  549  508  893  202   798 #>  [126,]  293  549  310  893   92  798  658  652  959   677 #>  [127,]  628   73  422  753  243  788  815  844  942   586 #>  [128,]  101  955  400  381  112  515   74  835  262   454 #>  [129,]  411  412  211  445   16  563  107    8  690   520 #>  [130,]  778  947  532  796  298  415  771   83  449    42 #>  [131,]  378   42  482  771   35  329  365   93  164   844 #>  [132,]  188  370  278  594  417  678  478  315  241   573 #>  [133,]  181  657  968  486  974  892  737  510  798   686 #>  [134,]  418  567  242  413  710  165  484  722  197   196 #>  [135,]  602  761   47  206  514  612   14  107  389    98 #>  [136,]  369  524  870  343   78  673  392  747  632   832 #>  [137,]  556  307  925  275  924  256  848  843  122   684 #>  [138,]  654  259  890  384  981  264  104  820  811     6 #>  [139,]  509  560  304  976  865  828  117   79  801   468 #>  [140,]  212   63  622  535  162  962  163  785   81    64 #>  [141,]  758  781  458  897  386  776  971   30  846   207 #>  [142,]  873  506  633  678  734  102  948  417  775   906 #>  [143,]  564  121  262  455  835  973  123  454  842   195 #>  [144,]  336  621  214  933  688  103  986  577  454   463 #>  [145,]  345  159  497  533  498  401  604  904   31   427 #>  [146,]  512  490  427  719  678  633  249  763  635   166 #>  [147,]  822  989  914  924  267  854  684  929  743   431 #>  [148,]  329  918  528  700  987  803  826  840  164    93 #>  [149,]  862  936  645  953  328  348  366  192  615    94 #>  [150,]   56  877  496  475  617  541  323  356  443   313 #>  [151,]  800  257  448  554  804  529  543  729  511   852 #>  [152,]  845   64  416  648  212  140  535  622  634   962 #>  [153,]  394  774  958  792  593  715  235  318  615   733 #>  [154,]  915  720  760  216  667  701  922  561  784   379 #>  [155,]  609  954  453   89  716  952  942  788  331   355 #>  [156,]  801  210  828  681  866  608  540  402  865   689 #>  [157,]   82  683  385   23  918  812  931  619  987   597 #>  [158,]  109  268  590  370   94  999  244  364  965   192 #>  [159,]  497  573  983  533  904  498  267   50  972   929 #>  [160,]  589  539  937  472   68  947  718  935  235   530 #>  [161,]  250   62  580  518  643   77  507  217  198   403 #>  [162,]   63  850   81  785  891  871  486   12  260   493 #>  [163,]  996  330  486  575  974  629   63  133  116   802 #>  [164,]  771   93  844  796   42  815   83  108  940   628 #>  [165,]  710  248  134  418  451  197  665   84  789   344 #>  [166,]  670   89  845   60   64  281   19  716  325   587 #>  [167,]  784  667   41  720  193  477  530  306  377   379 #>  [168,]  740   19  296  357  624  342  767  176    6   887 #>  [169,]  423  992  610  503  900  390  246   20  466   598 #>  [170,]  282  816  184   75  480   57  320  725  550   623 #>  [171,]  406  861  229  800  813  327  699  738  806   838 #>  [172,]  319  309  743  725  562  282    7   75  537   170 #>  [173,]  234  687  337  397  582   87  586  127  958    73 #>  [174,]  351    8  599   16  538  980  129  563  579   690 #>  [175,]   78  913  993  951  384  302  392  114  104   702 #>  [176,]  740  364  593  261  342  586  168  565  981   624 #>  [177,]  429  782  283  806  783  901  923  280  547   367 #>  [178,]   70   57   51  198  201  320  450   75  123   725 #>  [179,]  941  839    4  442  998  754  120  879  741   405 #>  [180,]  295  420  589  718  538  465  235  995  298   815 #>  [181,]  133  938  486  798  968  220  737  510  657   842 #>  [182,]  768  864   43  315  448  807  554  428  631   151 #>  [183,]  372  861  270  572  279  745  406   38  872    54 #>  [184,]  816  170  550  282  955  172  896  480  358   472 #>  [185,]  973  737  968  284  842  455  534  143  434   596 #>  [186,]  340  263  603  571  809    3  799  909  368   894 #>  [187,]   85  614  289   52  777  572    1  863  435   754 #>  [188,]  594  478  278  132  729  315  644  417  506   883 #>  [189,]  192  244  594  934  328  914  631  573  370   366 #>  [190,]  605  872  111  346  440  396  741  630  833   903 #>  [191,]  421  402  502  830  276  606  883  611  194   585 #>  [192,]   94  189  328  244  862  366  919  999  407   268 #>  [193,]  477    5  218   39  311   41  530  539  708   236 #>  [194,]  724   31  402  191  592  830  697  278  256   188 #>  [195,]  288  333  988  663  455  973  770  559  143   481 #>  [196,]  749  722   76   86  110  242  418  134  419   514 #>  [197,]  116    2  330  371  686   33  389  567  464   818 #>  [198,]   57  178  643   70   62  403  320  601  769   988 #>  [199,]    9   37  618  456  736  779  831  693  561   568 #>  [200,]  387  849  514  612  559  433  647  242  595   507 #>  [201,]   51  450  178  123  605   74  354  671  630   694 #>  [202,]  508  549  613  125  977  598  694  992  301   464 #>  [203,]  606  421  977  905  494  502  652  125  310   347 #>  [204,]  710  452  362  165  248   33  438  451   45   916 #>  [205,]  782  488  425  231    1   11  280  923  642   224 #>  [206,]   98  135  971  423  602  964    4  761   14   666 #>  [207,]  952  386   30  453  900  466  610  390  462   971 #>  [208,]  265  548  259  890  586  357  654  422  138   753 #>  [209,]  689  646  744  402  251  368  307  907  724   210 #>  [210,]  402  911  585  689  156  711  967  191  907   540 #>  [211,]  591  412  129  519  445  411  561   65  625   520 #>  [212,]  140  622  152   63  535  648   64  785  629   962 #>  [213,]  603  522  340  186  263  986  571   90  809   545 #>  [214,]  813  558  574  103  991  463  398  838  492   336 #>  [215,]  900  945  237  423  100  271  548  551  462   823 #>  [216,]  922  312  667  530  474  437  154  720  915   379 #>  [217,]  823   26   91  102   77  775  100  803  161   945 #>  [218,]   39  105  193  477    5  787  650  868  824    69 #>  [219,]  946  917  699  960  688   96  885  772  804   738 #>  [220,]   15  938   22  967  585   48  455  798  606   181 #>  [221,]  950  698  570  552  335  660  419  668  485   647 #>  [222,]  853   87  337  342  168  176  208  740  586   261 #>  [223,]  324  516  293  886  634  629   71   21  535   126 #>  [224,]  280  483    1  834   66   11  957   52  302   205 #>  [225,]  611  502  353  276  944  347  866  485  875   828 #>  [226,]  774  266  739  726  961  264  889  255  675   859 #>  [227,]  299  831  838  517  338  568   27  693  618   294 #>  [228,]  842  907  852  121  891  471  737  905  968   510 #>  [229,]  327  800  473  406  850  171  232   54  861   984 #>  [230,]  278  646  888  594  804  471  808  852  188   478 #>  [231,]   11  642  410  270    1   85  557  572   97   747 #>  [232,]  501  229  471  566  800  247  436  473  804   327 #>  [233,]  408  294  470  728  463  762  885  933  299    27 #>  [234,]  397  173  851  582  365  771   42  235  295   628 #>  [235,]  937  718  465  878  295  589  733   10  851   623 #>  [236,]    5  963   68  650  539  358  348  896  240   939 #>  [237,]  352  908  349  551  820  900  215  462  654   753 #>  [238,]  779   37  712    9  199  545  736  831   99   701 #>  [239,]  415  932  706  817  130  827  947  542  778   287 #>  [240,]  101  766  358  955  930  708  311  743  939   128 #>  [241,]  985  982  278   29  478  553  363  249  132   691 #>  [242,]  200  559  514  418  413  770  433  333  612   134 #>  [243,]  349  102  775  856  217  823  628  908   77   127 #>  [244,]  366  192  189   94  723  370  109  334  965   691 #>  [245,]  920  660  875   49  698  399  221  414  751   840 #>  [246,]  503  703  707  466  390  169  818  314  731    20 #>  [247,]  641  529  804  577  121  800  842  799  228   564 #>  [248,]   84  165  197  653  116  710  371   33  393   504 #>  [249,]  678  363  417  478  315   60  697  142  734   633 #>  [250,]  161   62  580  518  507  643   77  217  198   269 #>  [251,]  809  744  307  209  646  799  566  368  186   641 #>  [252,]  847  903   20  354  605  694  613  805  910   598 #>  [253,]  107   47  998   65  941  847  602  903  536   520 #>  [254,]  696  313  496  732  150  717  898   56   18   794 #>  [255,]  726  675  382  226  264  356  889  138  259   266 #>  [256,]  592  308  556  368  431  402  894  194  689   569 #>  [257,]  543  836  440  151  529  492  833  450  123   682 #>  [258,]  555  277  442  362  765  367  179  665  567   446 #>  [259,]  138  640  654  265  890  551  361  820  548   912 #>  [260,]  469  850  871  642  321   63  707   12  162   984 #>  [261,]  364  176  394  337  664  593  740  565  158   999 #>  [262,]  454  564  835  400   74  515  143  123  577   112 #>  [263,]  340  186  571  603    3  583  909   79  380   809 #>  [264,]  138  981  739  384  226  593  654  259  675   740 #>  [265,]  208  259  890  548  773  361  626  138  640   654 #>  [266,]  226  889  726   56   88   61  541  859  774   356 #>  [267,]  854  989  584  431  147  914  424  479  644   994 #>  [268,]  109  158  590  965  627  999  316  919  192   631 #>  [269,]  601  623  759  690  480  250  108  518  884   550 #>  [270,]  572  183  861   54  372  231   85  745  410   642 #>  [271,]  823  551  100   77   62  945  908  959  580   215 #>  [272,]  736  756   37  379  339  755  484  764  438   263 #>  [273,]  516    2  761  464  301  433  849  549  293   959 #>  [274,]   97  473  806  436  747  171  183  984  373   861 #>  [275,]  925  843  137  350  688   80  307  297  144   219 #>  [276,]  866  944  611  191  830  502  225   22  421   606 #>  [277,]  258  742  555  760  446  638  411  717  442   107 #>  [278,]  230  478  188  594  241  132  697   29  888   982 #>  [279,]  832  372  517  183  632  346  111  299  702   872 #>  [280,]    1  620  224  338  177  572   11  782   85   832 #>  [281,]  587  962  453  952  716  207  670  325  155    30 #>  [282,]  170  623  320   75  759  725  816  309  184   172 #>  [283,]  429  367  979  177  783  901  339  438  452   199 #>  [284,]  810  973  979  303  694  396  596  185  613   576 #>  [285,]  947  821  796  269  837   24  472   83  287   108 #>  [286,]  807  316  745  858  913   54  554  469  965   836 #>  [287,]  285  713  940  947  570  751  796  660  439   698 #>  [288,]  195  333  973  413  455  185  559  663  770   143 #>  [289,]   52  614  302  187  957  927  391  863   36   754 #>  [290,]  334  934   29  888  982  960  691  553  244   554 #>  [291,]  401  482  949  533  972  497  706  778  582   983 #>  [292,]  808  691  290  230  467  982  278  888   29   297 #>  [293,]  126  658  549  938  959  273  310  516  798    22 #>  [294,]   27  766  299  105  933  227  408  233  838   693 #>  [295,]  180  420  589  718  235  465  815  298  878   538 #>  [296,]  767   34  841  590  807  168  887    6  624   740 #>  [297,]  688  953  929  366  843  925  936  573  924   808 #>  [298,]  420   93  295  449  771  180  164  796   42   589 #>  [299,]  838  227  780  463  517  294  279  346   27   372 #>  [300,]  557  495  921   28  642   97  962  260  410   231 #>  [301,]  464  818  549  389  703  273  202  731  503   613 #>  [302,]  957   52  289   66  993  614  483  863  175    78 #>  [303,]  613  847  694  426  284  389  536  396  818    47 #>  [304,]  976  509  117  335  950  439  419  752  668   468 #>  [305,]  881  627  106  593  114  702  565  981  631   316 #>  [306,]  377  542  926  939  487  358  360  899  311   662 #>  [307,]  646  137  467  251  209   46  556  808  689   275 #>  [308,]  256  828  592  689  402  368  569  894  122   498 #>  [309,]  319  172  725  537  282   75  743  562  914    70 #>  [310,]   92  652  893  126  905  125  428  857  677   508 #>  [311,]  708  358  955  240  128  477  662  519  101   381 #>  [312,]  437  530  662  216  474  439  685  922  379   819 #>  [313,]  717  732  150  496  323  412  475  411  254   617 #>  [314,]  466  390  246  777  971  503  731  614  435   863 #>  [315,]  864  182  448  768  188  478  363  428  249   873 #>  [316,]  858  631   43  881  286  833  554  322  702   651 #>  [317,]  665  457   14  765   86  521   98  709  206   135 #>  [318,]  896  792  937   10   61   68  880  882  527   550 #>  [319,]  172  309  725  743   75  727  833  101  562   615 #>  [320,]   75   57  725  527   32  178  282   51  727   198 #>  [321,]  469  435  461  913  951  610  614  187  410   656 #>  [322,]  651  858  780  933  499  328  833  316  934   103 #>  [323,]  475  616  877  868  541   69  443  639  150   520 #>  [324,]  223  516  293  126  273  629  634  649  886   931 #>  [325,]  526  655  962  716   60  587  363  807   64   281 #>  [326,]  878  695  889  829  382  639  882  912  443   733 #>  [327,]  473  229   54  406  861  800  850  171  984   270 #>  [328,]  862  192  407  919  615  322  651  499  189   562 #>  [329,]  148  528   93   42  365  164  771  628  341   844 #>  [330,]  731  818  703  575  503  596  301  116  464   197 #>  [331,]  609  954  788   53  155  432  945   89  633   341 #>  [332,]  855  985  478  578  697  883  471  511  278   241 #>  [333,]  195  770  559  288  988  663  485  668  978   975 #>  [334,]  290   29  934  965  554  982   59  553  244   888 #>  [335,]  950  752  221  668  118  552  360  353  485   117 #>  [336,]  144  400  986  577  214  621  454  128  558   101 #>  [337,]  173  261   87  176  586  364  687  740  234   961 #>  [338,]  620  750  517  227  616  868  783  872  832   391 #>  [339,]  764  484  438  736  756  979  283  199  413   534 #>  [340,]  186  263  603  571    3  809  213  583  799   909 #>  [341,]  432  528  661  331  329  422  148  127  918    73 #>  [342,]  740  176  168  673  264  384  565  357  739   296 #>  [343,]   78  114  739  524  369   88  565  175  392   124 #>  [344,]  789  451  869  504  165  248  974  686  418   657 #>  [345,]  145   31  159  498  604  497  513  533  491   427 #>  [346,]  111  190  872  780  517  372  702  391  440   833 #>  [347,]  481   15  353   48  502  485  606  455  874   203 #>  [348,]  963  936  236    7  149  896  424  930  645   615 #>  [349,]  775  679  243  102  237  908   77  677  352   682 #>  [350,]  925  275  500  926  762  144  688  986  787   522 #>  [351,]  538  599  174  579    8   72  995  912   14   829 #>  [352,]  908  237  654  820  551  753  349  981  811   357 #>  [353,]  485  347  414  481  460  335  118  225  950   647 #>  [354,]  630  805  450  252  201  605   32   51  727   178 #>  [355,]  716  416   92  428  674   12  871  310  155   511 #>  [356,]   56  726  266  150   18  496  675  255  877   226 #>  [357,]  624    6  811  887  740  384  654  981  352   942 #>  [358,]  955  311  240  899  708  184  816  939  101   128 #>  [359,]  974  657  892  344  434  133  451  504  869   996 #>  [360,]  752  975  819  769  588  662  335  460  118   381 #>  [361,]  640  666  912  829   72  259  695  636  551   538 #>  [362,]   45  258  797  710   33  204  452  746  916   367 #>  [363,]   60  249  678  315  734  241  864  325  655   526 #>  [364,]  261  176  394  593  664  158  740  337  268   999 #>  [365,]   42  528   93  771  329  164  422  444  234   628 #>  [366,]  244   94  192  189  862  723  328  934  297   999 #>  [367,]  536  429  283  998  426  879  405  783  901   446 #>  [368,]  894  909  907  256  592  689  308  402  209   967 #>  [369,]  524  114  343   88  632  392  565   78  702   664 #>  [370,]  723  132  109  244  158  525  189  691  192   590 #>  [371,]  575  197  916    2   33  405  731   84  116   330 #>  [372,]  183  279  872  572  111  346  861  780  270   702 #>  [373,]  473  232  501  436  327  489  229  921  984   274 #>  [374,]  637   96   99  728  966  408   58  762  233   806 #>  [375,]  658   53   91  948   26  826  886  704  100   102 #>  [376,]  618  558  991  574  693  545   95  398  986   336 #>  [377,]  306  542  360  523  662  926  487  899  358   939 #>  [378,]  131   35  719  763  329   42  482  771  844   127 #>  [379,]  474  922  447  625  380  755  312  662  638   685 #>  [380,]  381  755  975  112  571  752  360  400  835   333 #>  [381,]  975  112  128  663  988  769   51  835  400   178 #>  [382,]  695  912  726  326  878  935  255  675  889   640 #>  [383,]  851  718  235  589  607  878  226  935  266   774 #>  [384,]  811    6  104  981  138  461  357  624  887   654 #>  [385,]   82  748  457  969  599  786  579  597   14   395 #>  [386,]  207  781   30  952  971  900  423  215  206   390 #>  [387,]  200  507  580  849  647  612  643  595  959   514 #>  [388,]  591  568  605  519  979  536  396  426  671   618 #>  [389,]   47  464  818  567  301  303  613  847  703   879 #>  [390,]  466  777  246  314  169  610  503  462  900   971 #>  [391,]  124  927   36  289  616  741  475  346  877   190 #>  [392,]  524  565  627  114  175   78  702  305  673   881 #>  [393,]  653  248   84  789  165  344  521  116  665   451 #>  [394,]  774  153  664  593  261  364  739  961  565   176 #>  [395,]   44  748  669  597  931  433  749  969  786   612 #>  [396,]  694  605  810  426  576  190  613  284  440   847 #>  [397,]  234  771  582  532   42  173  164   93  815   844 #>  [398,]  574  558  991  214   90  813   95  738  376   838 #>  [399,]  840  803   91   26  920  414  826  647  245   658 #>  [400,]  515  454  262  112  835  128  577  564   74   336 #>  [401,]  533  291  525  497  983  972  904  159  145    17 #>  [402,]  191  592  689  724  194  830  210  308  256   540 #>  [403,]  460  769  198  118  819  480  643  161  588   837 #>  [404,]   50  904  497  972  860  983  159  936  817   533 #>  [405,]  879  998    4  731  179  818  754  703  389   847 #>  [406,]  861  171  229  800  327   54  183  576  813   529 #>  [407,]  919  999  328  862  615  192  499  881  305   627 #>  [408,]  728  762  233  294   27  991  831  463  299   838 #>  [409,]  505  709  995   72   14  626  538  351  912   599 #>  [410,]  435  951   11  231  642  321  270  993   85    66 #>  [411,]  129  412  717  742  211  446  107  445  760   520 #>  [412,]  520  411  129  211  446  839  639  443  445   253 #>  [413,]   65  567  625  484  242   47  288  253  663   764 #>  [414,]  353  840  118  875  698  399  403  335  837   460 #>  [415,]  932  239  817  672  947  821  827  778  542   706 #>  [416,]  355  674  716   64  535  962  871  634   12    92 #>  [417,]  697  478  249  678  188  132  142  278  730   506 #>  [418,]  134  242  749  567  413  196  165  722  433   761 #>  [419,]  570  221  668  950  685  976  439  335  698   722 #>  [420,]  295  298  180   93  449  700  579  815  164   589 #>  [421,]  203  606  883  191  905  502   92  506  852   310 #>  [422,]  127   73  753  586  788  628  548  432  942   341 #>  [423,]  169  992  900  215  959  390  610  206  602   462 #>  [424,]  929    7  562  267  914  684  989  936  147   983 #>  [425,]  923  802  984  850  901   85   81  707  596   642 #>  [426,]  847  396  303  536  613  810  998  979  694   284 #>  [427,]  490  678  132  417  249  370  525  241  763   345 #>  [428,]   12   92  448  652  310  893  871  511  355   891 #>  [429,]  283  177  367  783  199    9  901  831  979   339 #>  [430,]  801  681  139  869  790  735  156  789  865   344 #>  [431,]  854  989  267  584  479  147  822  684  513   924 #>  [432,]  548  945  215  341  987  331  918  753  823   788 #>  [433,]  849  200  612  514  647  559  273  387  595   761 #>  [434,]  534  968  185  657  510  737  973  583  455   967 #>  [435,]  951  321  410  614   66  187   85   52   11   469 #>  [436,]  876  566  171  738  232  229  501  373  473   806 #>  [437,]  312  662  439  530  685  474  216  360  542   922 #>  [438,]  339  534  756  764  484  283  736  710  434   979 #>  [439,]  685  437  474  312  668  335  662  752  360   950 #>  [440,]  833  492  543  780  190  103  396  257  872   605 #>  [441,]  638  922  722  277  760  216  742  154   86   474 #>  [442,]  179  839  120    4  941  555  765  258  405   879 #>  [443,]  639  877  520  541  475  889  323   56  412   882 #>  [444,]  365   87  528  422  773  341  234   42  208   987 #>  [445,]  690  563   16  601  129  211  520   32  480   980 #>  [446,]  591  760  211  412  561  555  411  625  388    65 #>  [447,]  468  976  379  922  474  755  439  523  685   419 #>  [448,]  428  652  864  511  729   92  151   12  310   893 #>  [449,]   93  420  796  700  298  164  940  771   42   987 #>  [450,]  201  354  123  630  805  694  178  605  682    51 #>  [451,]  344  165  710  789  248  418  204  134  902   438 #>  [452,]   33  204  283  916  362  429  438  782  710   177 #>  [453,]  610  900  952  207  155  462  281  461  716   169 #>  [454,]  262  400  835  577  564  621   74  515  143   128 #>  [455,]  143  842  481  185  220   48  195  967  973   121 #>  [456,]  693  618  568  561  868  519  199  388   27   591 #>  [457,]  748  317  385   14  597  395   86   76   44   709 #>  [458,]  776  846   30  141  207  314  281  587  466   781 #>  [459,]  581  296  168   25  767  841   34  587   28   325 #>  [460,]  403  769  118  819  988  198  975  752  381   588 #>  [461,]  811  104    6  321  384  462  887  610  913   900 #>  [462,]  900  610  461  636  390  237  169  104   20   551 #>  [463,]  838  214  699  813  103  299  780  398  991   558 #>  [464,]  301  389  818  549  273  202  303  613   47     2 #>  [465,]  733  235  623  326  882   10  759  815  295   908 #>  [466,]  390  314  246  503  169  971  731  703  610   207 #>  [467,]   46  307  808  795  292  646  209  251  137   230 #>  [468,]  447  976  523  304  755  379  439  922  419   474 #>  [469,]  321  260  836   54  461  807  435  913  286    12 #>  [470,]  233  885  499  299  990  294  544  600  463   728 #>  [471,]  228  232  646  230  332  852  907  804  855   247 #>  [472,]  550  816  184  937  480  896  821  623  269   170 #>  [473,]  327  229  373  984  406  850   54  171  861   232 #>  [474,]  685  439  922  379  312  722  668  625  638   437 #>  [475,]  877  323  616  150  443   56  391  541  124   750 #>  [476,]  634  886  997  674   89  416  649  845  223   355 #>  [477,]  193    5  311  218  787  240  939   39  708   766 #>  [478,]  697  278  417  883  188  332  315  241  249   852 #>  [479,]  644  431  513  267  856  854  704  491  837   906 #>  [480,]  816  819  601  769   57  170  403  198  320   269 #>  [481,]  347  874  455   48  353  143   15  195  502   485 #>  [482,]  131  582  378  778  397   42  532  771  291   173 #>  [483,]  957   66  302   52  863  834  614  289  120   993 #>  [484,]  764  339  413  625   65  438  288  567  736   756 #>  [485,]  353  347  647  559  950   48  333  221   15   335 #>  [486,]  181  798  133  493  938  163  857  871  535   785 #>  [487,]  684  584  926  854  848  939  899  306  989   358 #>  [488,]  205  791  897  846  834  458   11  776  231    66 #>  [489,]  855  526  714  985  982  162  473  511  232   327 #>  [490,]  427  678  734  370  763  363  249  633   60   132 #>  [491,]  867  267  479  644  856   24   83  513  844   994 #>  [492,]  543  813  440  529  103   74  576  214  396   257 #>  [493,]  857  798  737  871  125  891  596  486  905   842 #>  [494,]  679  977  729   77  203   70  508  123  125   775 #>  [495,]  300   28  921  557  841   97  581  459  622   642 #>  [496,]  617  150   56  541  877  356  266  475  313   696 #>  [497,]  904   50  533  159  972  404  983  491  401   498 #>  [498,]  513  431   31  256  569  159  592  308  122   611 #>  [499,]  651  322  407  858  328   38  316  772  780   702 #>  [500,]  787  522  926  350  939  721  762  477  766     5 #>  [501,]  232  705  928  566  471  373  436  744  876   795 #>  [502,]  606   22   15  347  203  191  585  421  944   225 #>  [503,]  246  703  818  707  169  466  731  390  598   301 #>  [504,]  686  974  116  657  220  789  133  869  197    71 #>  [505,]  709  409  626   72  995   14  361  912  538   773 #>  [506,]  102  775  142  704  679  421  644   53  729   448 #>  [507,]  580  643  387   62  250  980  161  978  647   200 #>  [508,]  677  893  598  977  202  682  125  652  679   992 #>  [509,]  304  139  560  976  751  950  468  875  117   419 #>  [510,]  968  907  737  842  967  228  133  181  434   185 #>  [511,]  891   12  428  448  855  652  871  883   92   852 #>  [512,]  146  635  476  730  249  719  678  427  417   166 #>  [513,]  498  479  611  431   31  569  592  906  644   256 #>  [514,]  612  200  595  849  387  242  602  761  433   135 #>  [515,]  400  112  262  454  848  128  874  835  564   909 #>  [516,]  273    2  324  761  293  931  223  597  669   301 #>  [517,]  832  750  632  338  279  346  227  299  124   872 #>  [518,]  250  161  815  108  269  837  580  796  803   884 #>  [519,]  591  211  388  561   65  625  456  708   51   671 #>  [520,]  412  443  903   36  639   32  563  211  630   445 #>  [521,]   84  317  665  371  765  653  897   98  758   797 #>  [522,]  500  762  213  986  350  545  787  926   90   603 #>  [523,]  468  976  377  755   79  447  306  117  571   380 #>  [524,]  392  369  114   78  343  565  702  870  175   632 #>  [525,]  723  370  533   17  983  401  573  132  159   757 #>  [526,]  655  325  807  855  489  182  956   12  469   315 #>  [527,]   32  727   75   10  320  725  882  792  671   630 #>  [528,]  329  365  987  148  341   93   42  700  422   432 #>  [529,]  800  492  543  813  103  804  257  621  151   247 #>  [530,]  312  662  539  437   41  193  216  667  311   477 #>  [531,]  645  963  348  607  153  650  149  896  394   318 #>  [532,]  778  397  582  821   83  771   24  947  958   937 #>  [533,]  401  497  983  159  904  525  972   17  573   404 #>  [534,]  434  185  438  973  284  979  583  288   95   968 #>  [535,]  648  486  416  629  996  223  785  163  324   181 #>  [536,]  998  426  303  847  367  879  613  979  388   567 #>  [537,]  994  562  914  309  814  172  282    7  319   867 #>  [538,]  351   72  579  912  995  599  829    8  666   174 #>  [539,]   41  530  236  193   68    5  472  662  477   312 #>  [540,]  724  830  402  210   31  689  191  194  578   730 #>  [541,]   61  877  443  617   56  323  639  475  880   496 #>  [542,]  377  306  588  662  899  358  360  932  437   939 #>  [543,]  257  492  440  529  833  103  123   74  450   201 #>  [544,]  930  824   69  933  294  766   27  615  319   105 #>  [545,]  376  831   37  693  991  618   90  762  558   199 #>  [546,]  721  645  348  149  963  650  531  990  936   500 #>  [547,]  782  177  806  802  923   58  876  425  659    81 #>  [548,]  753  215  432  259  666  551  654  265  422   208 #>  [549,]  126  301  202  464  125  798  857  293  959   508 #>  [550,]  472  816  623  184  170  759  937  282  896   480 #>  [551,]  908  820  271  352  237  636  654  829  259   666 #>  [552,]  698  647  713  221  950  335  507  770  668   643 #>  [553,]  691  982  956   29  334  241  290  985  655   965 #>  [554,]  151  858  800   54  316  182  934   29  888   286 #>  [555,]  258  107  941  179  446  839  277  253  998   442 #>  [556,]  924  137  256  822  431  684  848  646  147   230 #>  [557,]  642  300   97  984  231  410  260  473  270   921 #>  [558,]  991  574  398  214  376  813  618   95   90   838 #>  [559,]  200  647  333  770  387  242  988  485  433   195 #>  [560,]  509  139   40  304  827  569  828  976  117   865 #>  [561,]  591  456  519  211  446  868  760  915  625   388 #>  [562,]  914  537    7  172  814  424  309  615  147   319 #>  [563,]   16  690  445    8  980  601  129  520  829   253 #>  [564,]  143  835  262  454  577  400  909   74  121   515 #>  [565,]  627  392  114  664  305  593  739  524  881   394 #>  [566,]  641  876  738  232  436  247  501  799  744   171 #>  [567,]   47  389  413  536  134  303  998  253   65   761 #>  [568,]  618  388  456  693  979  227  591  783  991   519 #>  [569,]  592  117  513  256  308   79  431  828  353   498 #>  [570,]  221  419  698  660  950  552  713  751  685   668 #>  [571,]  263  186   79  340  909  380  848  603  894   755 #>  [572,]  372  872  270  183   85  187    1  861  576   783 #>  [573,]  914  594  147  929  159  267  424  983  924   189 #>  [574,]  558  398  991  813  214   95  838  376  618   492 #>  [575,]  330  371  916  731  163   33  197  116  971   818 #>  [576,]  810  396  492  783  284  440  872  426  596   257 #>  [577,]  454  564  909  400  262  835  799  621  515   336 #>  [578,]  730  697  332  883  478  674  191  417  421   830 #>  [579,]  599  969  786  351  538  700  595   72    8   987 #>  [580,]  507  643   62  387  250  161  980  198  271    77 #>  [581,]  793  459  587  776  846  281  951  791  458   296 #>  [582,]  958  397  715  867  532  173  234  814  757   844 #>  [583,]   95  641  799   90  574  398  534  558  738   376 #>  [584,]  854  989  899  684  267  431  487  147  955   424 #>  [585,]  967  220  907   22  502  606  938  711   15   455 #>  [586,]  654  740  981  357  753  422  176   73  593   624 #>  [587,]  281  962  453  581  325  469  887  952  461   716 #>  [588,]  899  118  672  819  360  403  460  769  480   752 #>  [589,]  718  295  180  235  878  935  851  420  298   937 #>  [590,]  109  268  158  767  965   34  296   25  655   807 #>  [591,]  519  388  211   65  561  625  446  568  253   412 #>  [592,]  256  402  308  611  874  894  368  191  569   194 #>  [593,]  981  305  627  176  565  394  881  740  106   264 #>  [594,]  188  278  230  924  573  822  189  888  147   729 #>  [595,]  612  849  514  969  387  200  507  786  580   602 #>  [596,]  901  284  707  810  818  493  703  576  303   973 #>  [597,]  931  964  969  516  748  395  761  595  669   612 #>  [598,]   20  508  682  252  677  893  992  202  503   169 #>  [599,]  351  579  174  538  786    8  969   14  713   980 #>  [600,]  750  517  832  105  299  227  632  294  620   470 #>  [601,]  690  480  445  198  980   57  269   16  769   563 #>  [602,]  135   47  514  612  761  595  992  107  253   389 #>  [603,]  186  340  809  263  986  213   90  571  799   583 #>  [604,]  345   35  498  513  145  491  827  497   31   611 #>  [605,]  396  190  694  252  630  201  354  450  903   847 #>  [606,]  502  203  421   22   15  905  938  220  585   347 #>  [607,]  692  617   61   68  541  496  318  266  383    88 #>  [608,]  156  540  689  724  308  209  122  402  210   828 #>  [609,]  954  942  788  155  331  633  102  945  237   775 #>  [610,]  900  462  169  390  453   20  461  321  466   246 #>  [611,]  225  276  513   31  830  592  906  191  502   704 #>  [612,]  514  595  849  200  387  433  602  761  507   969 #>  [613,]  303  847  694  426  252  396  389  202  703   818 #>  [614,]   52  777  187  863  289  435   66  302  957    85 #>  [615,]  919  172  328  562  407    7  319  862  537   309 #>  [616,]  323  475  868  391  750  877  338  520  124   346 #>  [617,]  496  541  150   56   61   69  877  323  475   607 #>  [618,]  568  693  376  456  991  558  831  574  199   388 #>  [619,]  970   82  449  385  700  157  987  528  918   148 #>  [620,]  338  750  517  280  227  616  832  868  783     9 #>  [621,]  454  103  577  144  262  400  336   74  515   214 #>  [622,]  140  962  212  458  845  152   64  281  300   587 #>  [623,]  759  282  550   10  269  320  733  170  884   816 #>  [624,]  357  887    6  811  740  384  767  942  461   352 #>  [625,]   65  413  591  211  484  519  764  561  446   253 #>  [626,]  773  995  505  265   72  409  912  382  361   538 #>  [627,]  305  881  565  593  392  268  384  114  316   702 #>  [628,]  127  815  844  243  108  164  753  884   73   856 #>  [629,]  996  535  223  324  163  676  648  486   71   653 #>  [630,]  354  727   32  805  605  910  450  201  252   903 #>  [631,]   43  316  858  881  768  833  309  319  305   322 #>  [632,]  124  832  517  279  750  346   69  111  391   702 #>  [633,]  734  142  678  873  954  609  763  788  942    73 #>  [634,]  997  649  476  886  223  324  416  676  670    89 #>  [635,]  512  730  830  345   31  427  719  540  417   724 #>  [636,]   20  754  640  462  910  777  992  551   36   252 #>  [637,]   96  738   90  728  762  398   58  408  558   574 #>  [638,]  722  441  922  625  474  764  484  379  134   760 #>  [639,]  443  889  541  520  326  412  877  882   10   323 #>  [640,]  361  912  829  259  695  636  666  551   36   382 #>  [641,]  738  799  583   95  247  566  398   90  574   577 #>  [642,]  231  557  410  270   11  260  984   85  435   425 #>  [643,]  507  580   62  198  988  387  161  978  250   663 #>  [644,]  479  856  906  704  506  729  188  267  494   994 #>  [645,]  149  862  348  544  615  328  407  499  531   919 #>  [646,]  230  209  471  307  804  556  689  907  888   808 #>  [647,]  559  387  200  552  507  849  485  433  698   643 #>  [648,]  535  486  416  785   71  629  223  181  996   892 #>  [649,]  997  634  670  952  324   23   89  886  155   223 #>  [650,]  963    5  236   68  218  193  539   39  477   348 #>  [651,]  322  499  858  780  934  772  328  933  316   833 #>  [652,]  310  905  125  893   92  448  428  857  977   508 #>  [653,]   84  248  116    2  393  516  996  197  789   504 #>  [654,]  352  981  908  820  138  753  259  357  551   237 #>  [655,]  526  807  956  325  965   25  767  182  363    29 #>  [656,]  682  910   43   20  913  104  836  768  598   833 #>  [657,]  133  974  686  968  181  434  504  510  737   967 #>  [658,]  375  293   91   53  126  886  100   26  203   606 #>  [659,]  547  782  452  177  966   58  429  205  283   204 #>  [660,]  698  245  920  221  875  570  414  950  399   552 #>  [661,]  341   19  331  788   73  422  954   89  633   609 #>  [662,]  437  312  530  360  819  311  975  439  752   358 #>  [663,]  978  988  770  975  333  643  381  195  198    65 #>  [664,]  565  394  999  364  261  407  392  627  593   739 #>  [665,]  317   86  371  765  258  521  135  134  761   165 #>  [666,]  361   72  829  964  640  912  551  538  548   259 #>  [667,]  720  216   41  784  530  154  167  312  922   437 #>  [668,]  950  335  752  685  221  419  333  770  552   485 #>  [669,]  931  433  395  516  273   44  597  849  293    21 #>  [670,]   89  649  952  281  166  634  997  155  716   845 #>  [671,]   32  727   51  201  725   75  630  527  605   388 #>  [672,]  118  588  837  817   24  899  403  414  479    83 #>  [673,]  342  392  565  664  175  524  176  740  841    78 #>  [674,]  416  355  716   64  578  855  697  511   92   249 #>  [675,]  726  889  859  927  255   36  382  695  326   877 #>  [676,]  997  634  629  223  649  324  535  648  476    71 #>  [677,]  893  508  977  775  100  598  679  310   92   682 #>  [678,]  249  734  633  142  417  363  873  132  315    60 #>  [679,]  494  977   77  775  349  729  677  508  102   217 #>  [680,]  437  216  439  922  312  685  667  474  447   530 #>  [681,]  156  801  866   49  828  430  225  139  865   276 #>  [682,]  656  598   20  508  450   43  677  910  349   257 #>  [683,]  157  812   23  931  997  649  918  676   67   597 #>  [684,]  989  854  929  584  487  147  924  431  424   743 #>  [685,]  439  474  668  437  335  312  419  552  752   950 #>  [686,]  504  657  116  220  974  133  464  798  197   185 #>  [687,]  173  337   87  757  763  378  234   73  582   131 #>  [688,]  297  953  925  144  946  917  933  219  924   929 #>  [689,]  209  402  308  368  256  724  646  592  210   194 #>  [690,]  563   16  445  601  980  269    8  320   57   480 #>  [691,]  553  290  370  244  292   29  334  723  241   982 #>  [692,]  607  617  496  266  541   61  696  150   56   356 #>  [693,]  456  618   27  568  376  831  991  227  868   199 #>  [694,]  396  613  605  303  252  450  847  123  284   201 #>  [695,]  326  829  912  640  382  878   36  443  889   361 #>  [696,]  254  496   18  935  313  898   56  150  356   726 #>  [697,]  478  417  578  883  730  421  332  188  191   278 #>  [698,]  660  221  552  950  570  647  713  414  485   335 #>  [699,]  463  772  960  917  885  171  219  813  651   214 #>  [700,]  987  579  786  518  969  918  148  713  420   803 #>  [701,]  915  760  154  779    9  794  313  561  446   717 #>  [702,]  111  881  114  305  346  913  106  858  372   316 #>  [703,]  503  818  246  731  707  613  301  847  330   303 #>  [704,]  906   26  826  506   91  948  644  217  840   375 #>  [705,]  928  501  113  795  744  566  876  232  436   895 #>  [706,]  778  415  949  932   50  817  972  532  239   130 #>  [707,]  246  703  503  596  818   85  493  598  836   613 #>  [708,]  311  955  816  240  358  128  101  519   75    51 #>  [709,]  505  409   14  317   72  457   98  626  995   361 #>  [710,]  165  134  438  204  362  197   33  248  764   418 #>  [711,]  967  911  825  585   48  790  220  455  510   894 #>  [712,]  238  545   37   99  779  831    9  408  693   199 #>  [713,]  786  552  698  518  980  507  579  580  599   660 #>  [714,]  985  489  982  855  956  553  241  526  332   325 #>  [715,]  814  958    7  562  867  537   17  582  615   919 #>  [716,]  355  674  416  155  428  453   92   89  962    64 #>  [717,]  313  411  412  742  760  446  129  732  839   915 #>  [718,]  589  235  878  851  295  180  935  326  937   465 #>  [719,]   35  763  378  948  633  142  826  906  678   131 #>  [720,]  667  154  784  216  167  922  915   41  530   312 #>  [721,]  500  787  546  650    5  963  990  105  348   218 #>  [722,]  196  638  474  749  418  134  242   76   86   419 #>  [723,]  370  525  244  366  691  189   17   94  573   192 #>  [724,]  540  194  402  830   31  689  191  209  697   578 #>  [725,]   75  309  319  320  172  727  527   32   51   282 #>  [726,]  675  255  889  266  382  356  878  226   56   326 #>  [727,]   32  527  630   75  671  725  320  354   51   201 #>  [728,]  408  233  762  637  299  838  294  463  831   227 #>  [729,]  494  679  448  822  188  852  644  506  977   151 #>  [730,]  578  697  417  332  674  478  249  830  883   191 #>  [731,]  818  330  703  503  301  246  466  405  389   464 #>  [732,]  313  120  839  150  717  475  877  616  446    56 #>  [733,]  465  882   10  792  623  820  326  527  759   282 #>  [734,]  633  678  873  142  954   60  763  609  363   249 #>  [735,]  789   71   21  812  669  869  344  430  653   393 #>  [736,]  756   37  339  199  764  484  438  779  272     9 #>  [737,]  968  842  185  493  973  510  798  857  228   133 #>  [738,]  641  398  566  876  574  171   90  637  813    95 #>  [739,]  774  226  343  264  565  961  114  394   88   266 #>  [740,]  176  357  168  624  342    6  384  586  593   981 #>  [741,]  903  754  998   36  847  391  941  252  190   605 #>  [742,]  411  277  717  129  760  555  107  412  446   898 #>  [743,]  101  172  955  319  309  725  128  147  989   240 #>  [744,]  928  251  510  209  907  471  566  501  646   895 #>  [745,]   38  183  747  286   54  270  861  870  372   858 #>  [746,]   45  779  362  367  429  701    9  258  115   620 #>  [747,]  870   97  745   38  183  231  270  279  410   286 #>  [748,]  395   44  457  597  385  969  749  786  931   110 #>  [749,]  196   76  110  242  722   86   44  418  395   748 #>  [750,]  517  338  616  632  124  475  620  832   69   323 #>  [751,]  570  660  245  875  221  287  698  920  419    49 #>  [752,]  360  975  335  769  668  819  460  117  950   770 #>  [753,]  908  352  654  127  548  237  422  551  243   942 #>  [754,]  903  741  941  777  998   36  847  636  252   863 #>  [755,]  976  380  117  668   79  333  379  752  571   523 #>  [756,]  736  339  438   37  484  764  534  199  583    95 #>  [757,]  867  763  873  814  734   17  582   73  142   715 #>  [758,]  141  781  897   98  386  971  521  206  458   709 #>  [759,]  884  623  108  282  269  550  170  994  815   320 #>  [760,]  915  446  561  717  411  742  701  211  154   625 #>  [761,]  273  135    2  612  514  849   47  602  389   433 #>  [762,]  408   90  986  728  545  637  233  991  398   558 #>  [763,]  633  719  734  757  142   73  873  378  678   127 #>  [764,]  484  339  625  736  413  438   65  756  536   199 #>  [765,]  442  258  665  317  797  371    4   98  521   179 #>  [766,]  240   27  101  294  930  787  933  824  336   544 #>  [767,]  296  887  590  807  624    6  168  655  268   811 #>  [768,]  182   43  864  631  656  682  315  807  448   316 #>  [769,]  819  403  460  975  480  198  601  988  752   381 #>  [770,]  663  988  978  333  559  975  643  195  200   552 #>  [771,]   42  164   93  844  796  397   83  815  365   628 #>  [772,]  960  934  699   38  651  917  885  322  554   745 #>  [773,]  626  265  995  208   72  180  259  851  505   912 #>  [774,]  226  739  394  961  153  266   88  593  859   880 #>  [775,]  102  349  679  677  100  217  243  506  945    53 #>  [776,]  846  458   30  435  791  951  793  314  581    66 #>  [777,]  863  614  390  754  187  636   52  289  314   246 #>  [778,]  532  706  817   83  821  582  972   24  415   482 #>  [779,]  238   37    9  199  736  701   45  746  429   831 #>  [780,]  440  833  103  111  838  346  322  299  651   372 #>  [781,]  386  971  758   98  206  141  207   30  466   952 #>  [782,]  177  923  547  205  425  901  452  280  916   802 #>  [783,]  810  576  426  979  872  901  568  396  429   388 #>  [784,]  167   41  667  720  193  154  477  530    5   539 #>  [785,]  892  162  486  181  133   63   81  535  891   228 #>  [786,]  969  713  579  595  599  700  612  507  552   514 #>  [787,]  500  766  477  240  105  939  294    5   27   218 #>  [788,]  942  954  609   73  753  331  155  633  237   945 #>  [789,]  344  504  869  653  165  451   71  248  418   669 #>  [790,]   48  711  869   15  220  967   22  485  944   585 #>  [791,]  846  834  776  993   66  951  581  410  793   435 #>  [792,]  882   10  880  733  527  318  859  106  623   727 #>  [793,]  581  776   30  890  846  587  208  458  791   951 #>  [794,]  313  701  617  254  150  732  496   39  218   717 #>  [795,]   46  113  895  467  501  705  928  744  251   232 #>  [796,]  940  164   83  771  285  108  844   93  518   837 #>  [797,]  916  362   33  765  371  258  897  452  575   405 #>  [798,]  857  493  938  486  549  905  125  181  737   126 #>  [799,]  641  577  909  583  809  247   95  986   90   603 #>  [800,]  529  229  151  804  406  554  257   54  247   171 #>  [801,]  156  865  828  825  210  911  681  869  790   711 #>  [802,]  425  923   81  850  901  984  596  707  330   162 #>  [803,]  840   91   26  823  399  217  161  250  826   100 #>  [804,]  888  529  800  151  247  621  230  121  577   471 #>  [805,]  354  630  450  252   20  910  682   77   62   320 #>  [806,]   58  171  177  966  406  861  923  783  838   738 #>  [807,]  286  655  182  767  526  768  965  469  296   887 #>  [808,]  292  230  888  278  691  646  290  307  467   297 #>  [809,]  251  799  603  186  340  641  583  263  566    90 #>  [810,]  576  284  979  396  426  783  596  694  901   492 #>  [811,]    6  384  461  624  357  887  104  981  138   654 #>  [812,]  931   67  669   21  683  918  395   44  157   597 #>  [813,]  214  574  492  103  838  398  529  558  463   991 #>  [814,]  715  537  562  867   17  958  919  914    7   994 #>  [815,]  108  628  844  884  164  518  759  269  796   465 #>  [816,]  480  184  170  550  282   75   57  320  708   472 #>  [817,]  672  415   50  932  584  588  899   24  821   837 #>  [818,]  703  731  301  389  503  464  330  613  303   246 #>  [819,]  769  480  975  360  403  460  601  588  752   816 #>  [820,]  908  352  551  654  104  981  910  138  237   636 #>  [821,]  285  947   24   83  472  837  550  796  108   269 #>  [822,]  147  924  989  729  874  621  262  914  515   594 #>  [823,]  100  945  217  271  803   91   53  102   26   775 #>  [824,]  930  527  671  544   69  708   32  727   61   323 #>  [825,]  911  711    3  967  368  790  894  801  869    48 #>  [826,]   26  704   91  948  840  217   53  375  803   906 #>  [827,]  569  672  817  415  498  513  118  588  932    50 #>  [828,]  308  225  592  402  569  368  156  256  801   210 #>  [829,]  912  695  640  361  666  326  551  538  563    72 #>  [830,]   31  191  276  611  724  402  540  194  866   906 #>  [831,]  618  227  991  545  693  199    9  558  376   568 #>  [832,]  279  517  632  750  124  372  299  183  338   346 #>  [833,]  440  780  543  111  858  257  103  190  450   836 #>  [834,]  483  993   66  791  957  302   11   52  224   846 #>  [835,]  564   74  262  454  400  143  577  515  123   128 #>  [836,]   54  257  656  833  440  682   43  469  707   321 #>  [837,]   24   83  672  108  884  403  940  518  118   796 #>  [838,]  463  299  813  214  991  780  574  227  103   558 #>  [839,]  120  179  941  442  412  555  520  927  741    36 #>  [840,]  399   26  803   91  414  826  217  704  161   920 #>  [841,]   34  296   25  807  286  767  655  956   59   459 #>  [842,]  737  228  121  968  905  455  907  185  143   510 #>  [843,]  275  925  297  137  688  307   80  350  808   219 #>  [844,]  108  164   83  815  628  771  884   24  796   837 #>  [845,]  152   64  416  166  670  634  962  674  476    89 #>  [846,]  776  458  791  435  951   66   30  410  993   581 #>  [847,]  613  252  998  303  426  903  694  754  879   396 #>  [848,]  515  112  400  909  577  874  571  454  336   487 #>  [849,]  612  200  433  387  595  514  959  647  559   761 #>  [850,]  984  162  229   81  260  802  327  425  923    63 #>  [851,]  718  383  235  589  180  234  295  878  961   226 #>  [852,]  883  228  905  121  421  448  729  907  842   652 #>  [853,]   87  222  773  444  337  961  851  208  342   586 #>  [854,]  584  989  431  684  267  147  899  929  424   822 #>  [855,]  511  489  332  891  526  985   12  471  162   982 #>  [856,]  243  644  994  884  217  867   77  679  704   479 #>  [857,]  493  125  798  905  652  310  549  893  737   871 #>  [858,]  316  631  833  322  651  554  286   43  881   702 #>  [859,]  880  106  882  675  889  792  266  733  443    61 #>  [860,]  404   50  904  972  936  487  817  348  932   497 #>  [861,]  406  183  171  270   54  372  327  572  229   745 #>  [862,]  328  407  192  149  919   94  615  999  366   645 #>  [863,]  777  614   52  754  289   66  187  957    4   390 #>  [864,]  315  182  768  448  428   43  873  506  775   349 #>  [865,]  801  828  825  156    3  139  308  911  210   368 #>  [866,]  276  944  830  225  611  191  502  402   22   210 #>  [867,]  994  814  491  537  856  715  958  267  757   884 #>  [868,]  616  323  456  561  693  568  338  475  750   227 #>  [869,]  790  911  711  504  967  344  825  789  657   974 #>  [870,]  747  745  279  524   38  183  392  372  231    78 #>  [871,]   12  891  428  493  857  511  310  355  652    92 #>  [872,]  190  372  572  111  346  440  576  783  396   605 #>  [873,]  142  734  633  243  864  102  506  349  678   942 #>  [874,]  481  515  262  112  822  143  564  909  347   121 #>  [875,]  245   49  660  920  414  698  950  225  221   353 #>  [876,]  436  566  738   58  641  171  806  232  501   547 #>  [877,]  475   56  443  150  323  541  391  616  639   124 #>  [878,]  326  889  935  718  382  695  726  235  639   882 #>  [879,]  405  998  847  754  536  179  389  703  941   426 #>  [880,]  859  792  882  106   61  541   10  527  318   889 #>  [881,]  305  106  702  627  316  631  114  858  407    43 #>  [882,]   10  792  733  880  859  527  889  727  106   326 #>  [883,]  852  421  697  478  511  448  905  652  191   203 #>  [884,]  108  759  815   24  994  856  844  623  837   269 #>  [885,]  917  946  699  772  470  233  463  651  960   499 #>  [886,]  375  658  634  476   67   53  223  293  155   331 #>  [887,]  624    6  811  357  461  767  384  942  768   453 #>  [888,]  804  230   29  290  982  554  151  594  934   960 #>  [889,]  878  326  266  443  726  675  882  639  859   880 #>  [890,]  138  259  384  104  265  462  811   30  654   640 #>  [891,]  511   12  871  228  652  428  493  857  905   448 #>  [892,]  133  785  181  657  974  510  486  968  928   967 #>  [893,]  677  310  508  652   92  977  428  126  125   598 #>  [894,]  368  909  907  592  874  481  455  256  967   585 #>  [895,]  928  795  113  744  209  471  501  332  646    46 #>  [896,]  318   68  550  184  937  472  930  792  816    10 #>  [897,]  575  141  971  371  781  765  758  797  521    98 #>  [898,]  742  717  696  935  254  411  174  313  277   409 #>  [899,]  588  584  358  854  955  819  118  460  360   403 #>  [900,]  462  610  169  215  453  237  390  423  207   461 #>  [901,]  596  810  426  783  923  576  802  425  707   979 #>  [902,]  451  344  204  272  359    3  710  438  165   756 #>  [903,]  741  754  252   36  847  998  941  605  520   354 #>  [904,]  497  404   50  533  159  972  983  860  936   498 #>  [905,]  125  652  310  857  203  842  798  852  606   121 #>  [906,]  704  948  644  826  506  611  479   26  142   513 #>  [907,]  228  585  510  842  894  967  968  121  852   455 #>  [908,]  352  237  820  551  654  349  753  271  243   981 #>  [909,]  577  564  894  515  400  848  143  262  454   799 #>  [910,]  656   20  630  252  805  820  354  636   36   682 #>  [911,]  711  825  967  210  869  585  510  790  907   368 #>  [912,]  829  361  695  640   72  538  382  666  326   259 #>  [913,]  656  104  321  175  702  461  286  951  384   836 #>  [914,]  562  147  537  309  267  994  573  424  989   814 #>  [915,]  760  154  701  561  446  717  411  313  211   742 #>  [916,]   33  575  371  197  405  797  330  452  367   901 #>  [917,]  946  885  699  772  934  960  219  688  651   463 #>  [918,]  148  987  700  432  803  969   67   23  399    82 #>  [919,]  407  615  328  862  192  814  999  562  537   881 #>  [920,]  245  660  399  875  840  698  414   49  803   221 #>  [921,]  300  956  557   97  473  373  495   28  489   327 #>  [922,]  216  474  379  638  312  447  722  685  437   441 #>  [923,]  425  802  901  984  850  572  270   85  596   707 #>  [924,]  822  147  556  989  684  929  594  621  914   573 #>  [925,]  275  350  688  144  137  843  297  953  986   219 #>  [926,]  939  487  306  240  500  358  787  377  477   350 #>  [927,]   36  391  289  675  120  741  754  903  877    52 #>  [928,]  744  705  501  113  895  892  785  471  510   566 #>  [929,]  684  424  953  147  989  924  573  854  914   936 #>  [930,]  824  240  766  544  101  172  708  896  725   319 #>  [931,]  597  669  516  395  273  324  812  433  748   223 #>  [932,]  415  817  239  542  821  672  947  778  706   588 #>  [933,]  322  766  103  144  651  101  294  463   27   743 #>  [934,]  772  290  334  651  960  917  322  554  189   888 #>  [935,]  878  382  326  718  889  726  639  589  695   443 #>  [936,]  149  424  953  929  348    7  983  972  297   562 #>  [937,]  235  550  318  472  896   10  623  792  759   733 #>  [938,]  220  798   22  181  606   15  585  293  486   905 #>  [939,]  926  240  358  306  477    5  487  787  311   236 #>  [940,]  796   83  837  164  844   24  518  108  771   414 #>  [941,]  179  998  839  754  903    4  741  253  879    36 #>  [942,]  788  954  609  237  352  624   73  155  753   357 #>  [943,]  946   80  275   96  843  219  925  917  350   885 #>  [944,]   22  276  502  866  225   15  606   67  399   658 #>  [945,]  100  823   53  102  775  215  217  271  237   677 #>  [946,]  917  885  219  688  699  960  934  772  233   463 #>  [947,]  285  821  796  472  287   24   83  269  550   837 #>  [948,]  826  906  704  375  142  506   53   26   91   331 #>  [949,]  778  706  532  291  482  582  972  397  531   715 #>  [950,]  335  221  668  698  485  552  752  353  419   570 #>  [951,]  435  410  993  321  175  913  461  614   66   469 #>  [952,]  207  453  155  386  281  649  670  900   30   215 #>  [953,]  929  688  424  297  933  936  328  684  743   144 #>  [954,]  609  942  788  155  633  331  102  734  237    19 #>  [955,]  128  101  743  358  708  240  184  816  170   311 #>  [956,]  655  553   25  526  965  334   59  807   29   921 #>  [957,]  302   52   66  289  483  614  993  863  187   927 #>  [958,]  715  814  582  153  867  537  994  759  884   282 #>  [959,]  849  387  100  549  992  423  271  126  200   595 #>  [960,]  772  699  934  917  290  219  888  800  554   334 #>  [961,]  774  226  739  394  264  153  851  176  593   266 #>  [962,]  281   64  325  587  416  716  260  526  355    63 #>  [963,]  650  236  348   68    5  896  539  930  318   193 #>  [964,]  666  969  597  206  595  423  215   14   98    72 #>  [965,]  109  334  268  590  655  807   59  286  244   316 #>  [966,]   58  806  637   99  177  547  876  728  436   374 #>  [967,]  711  585  220  455  510  968  907   48  911   181 #>  [968,]  737  510  842  185  133  455  434  181  967   228 #>  [969,]  786  595  579  612  964  849  597  599  700   514 #>  [970,]  619  148  449  528  329  918   82  700  987    93 #>  [971,]  466  390  206  314  731   98  781  386  207   423 #>  [972,]  983   50  497  404  904  424  533  936  159   267 #>  [973,]  185  284  143  737  195  455  303  288  842   596 #>  [974,]  657  133  504  686  892  996  181  116  163   486 #>  [975,]  381  769  752  819  360  663  770  988  460   978 #>  [976,]  304  755  468  447  117  668  419  950  523   335 #>  [977,]  494  508  679  677  893  125  203  652  202    77 #>  [978,]  663  770  988  643  980  507  601  580  975   198 #>  [979,]  284  810  426  783  536  303  388  396  568   576 #>  [980,]    8   16  507  601  690  978  563  580  643   445 #>  [981,]  654  384  593  820  138  352  264  811  104   305 #>  [982,]   29  985  241  888  290  553  334  278  230   855 #>  [983,]  972  424  159  573  533   17  497  267  867   814 #>  [984,]  850  425  923  802   81  473  327  229  642   270 #>  [985,]  241  982  332  714  855   29  489  278  478   553 #>  [986,]   90  336  376  558  603  398  799  144  577   991 #>  [987,]  700  528  918  579  432  148  969   82  329   420 #>  [988,]  663  770  643  978  333  198  381  769  975   195 #>  [989,]  854  147  684  584  431  267  822  924  929   743 #>  [990,]  470  600  233  408  728  105  721  294  544   645 #>  [991,]  558  574  398  214  376  618  813  838  831    27 #>  [992,]  169  423   20  598  508  202  959  636  252   805 #>  [993,]  302  957   66  951  175   52  410  834  435    78 #>  [994,]  537  884  856  867  282  759  309  914  170   562 #>  [995,]  538   72  351  409  626  180  912  599  579   420 #>  [996,]  163  629  974  486  116  535  330  133  504   575 #>  [997,]  649  634  676  476  670  886  223  324   23    89 #>  [998,]  879  847  536  941  754  903  741  253  426    47 #>  [999,]  407   94  192  268  919  862  664  158  328   109 #> [1000,]   59  999  499   94  366  470  885  664  369   862 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 0.41362689 0.5218471 0.6263428 0.6287783 0.6514202 0.6728510 0.7103597 #>    [2,] 0.42878507 0.4570627 0.4989642 0.5439366 0.6220755 0.6353847 0.6660274 #>    [3,] 0.71172268 0.8516587 0.8635176 0.8764222 1.1839712 1.2173290 1.2473557 #>    [4,] 0.54425922 0.5562621 0.5975349 0.6299354 0.6396712 0.6441563 0.6533248 #>    [5,] 0.53260904 0.5459404 0.5633872 0.7652141 0.7896861 0.8472822 0.8472959 #>    [6,] 0.10496390 0.3186055 0.3368619 0.3644208 0.3766667 0.4234697 0.5347686 #>    [7,] 0.40228821 0.4885092 0.5512461 0.6319139 0.6589927 0.6685217 0.7044459 #>    [8,] 0.31904942 0.3829350 0.4413573 0.5366888 0.5611150 0.5781149 0.6422383 #>    [9,] 0.29172949 0.5650923 0.6853493 0.6904803 0.7284129 0.7684633 0.8037357 #>   [10,] 0.30189027 0.3682466 0.4019918 0.4471440 0.4587489 0.5739993 0.6111510 #>   [11,] 0.41362689 0.5017344 0.5028728 0.5249797 0.5470430 0.6577962 0.6767124 #>   [12,] 0.28443111 0.3264066 0.3628038 0.3899819 0.5811929 0.5861468 0.6173111 #>   [13,] 1.70493088 1.7925663 1.8004104 1.8231453 1.8512073 1.8584455 1.9082970 #>   [14,] 0.65655724 0.7837028 0.7970603 0.8134243 0.8317822 0.8477960 0.8482813 #>   [15,] 0.37410524 0.4271906 0.4538073 0.4899550 0.4995784 0.5006405 0.5994483 #>   [16,] 0.16008334 0.2707842 0.3190494 0.3853515 0.4160242 0.5020172 0.5354382 #>   [17,] 0.61248655 0.7393618 0.7694696 0.8953537 0.9045850 0.9060416 0.9254259 #>   [18,] 0.80679309 1.0070199 1.0280501 1.0440668 1.2278010 1.2477111 1.2645846 #>   [19,] 0.78236203 0.7831374 0.7950667 0.8166708 0.8239013 0.8439497 0.8711031 #>   [20,] 0.30077927 0.3841090 0.4055922 0.4589783 0.4748726 0.5178200 0.5212239 #>   [21,] 0.71791430 0.8641510 0.8935966 0.9063679 0.9560021 1.0769981 1.0848319 #>   [22,] 0.42074382 0.4308211 0.4402503 0.4538073 0.4826132 0.5802976 0.5939344 #>   [23,] 0.86766895 0.9344106 1.0040252 1.1035774 1.1258248 1.1488641 1.1509948 #>   [24,] 0.35854655 0.3670829 0.4788043 0.5266852 0.5464437 0.6252078 0.6913714 #>   [25,] 0.44932329 0.7642454 0.8141167 0.8179046 0.8270579 0.8956180 0.9291127 #>   [26,] 0.22376131 0.3302917 0.3463684 0.3873176 0.4271005 0.4288213 0.5351163 #>   [27,] 0.29936278 0.5249203 0.5629602 0.6509865 0.6686748 0.6794673 0.7244096 #>   [28,] 0.89715614 1.0439733 1.1191627 1.1287350 1.1624472 1.2034181 1.2200496 #>   [29,] 0.32576672 0.5541451 0.5963428 0.6254831 0.7060338 0.7080370 0.7769018 #>   [30,] 0.51269206 0.6618083 0.7002355 0.7312705 0.7393184 0.7608467 0.8053847 #>   [31,] 0.51298962 0.5999824 0.6895599 0.7262913 0.7856275 0.8507355 0.8661969 #>   [32,] 0.17611954 0.2804471 0.3654679 0.3675701 0.3718805 0.4317295 0.4441480 #>   [33,] 0.24875987 0.7388221 0.7473805 0.7742089 0.8727752 0.8761173 0.9077274 #>   [34,] 0.44932329 0.6611531 0.7158639 0.7249400 0.8444152 0.9509915 0.9548470 #>   [35,] 0.63473868 0.6561679 0.9843990 1.1837304 1.2650795 1.3040211 1.3707985 #>   [36,] 0.32177216 0.4167015 0.4844015 0.5018985 0.5117792 0.5624489 0.5693453 #>   [37,] 0.51584713 0.5428389 0.5850921 0.6102870 0.6904803 0.7603206 0.7892429 #>   [38,] 0.37789036 0.5843606 0.6705777 0.6867000 0.7862890 0.8302766 0.8323384 #>   [39,] 0.34487962 0.7332484 0.7438463 0.7902273 0.8076642 0.8614825 0.9000962 #>   [40,] 1.18041257 1.3160497 1.3362132 1.4589809 1.4742352 1.5098925 1.5293178 #>   [41,] 0.57954629 0.6980473 0.7681719 0.7990819 0.8087509 0.9398611 1.0273805 #>   [42,] 0.29168303 0.3608388 0.5292763 0.5840511 0.7887914 0.8055787 0.8088774 #>   [43,] 0.28384265 0.3967881 0.4572084 0.4704493 0.5311159 0.5400053 0.6409228 #>   [44,] 0.27187328 0.4743187 0.7803179 0.8403942 0.9792152 1.0052000 1.0157266 #>   [45,] 0.73328302 0.7919928 1.0294965 1.1938588 1.1991282 1.2136731 1.2631916 #>   [46,] 0.37818833 0.7372437 0.9629521 1.2110468 1.2470652 1.2834878 1.2971651 #>   [47,] 0.28910062 0.3798971 0.4897568 0.5039678 0.5440550 0.5449426 0.5781176 #>   [48,] 0.42719057 0.4926988 0.5422074 0.5532701 0.5748554 0.5859810 0.6087281 #>   [49,] 0.58895646 0.7239899 0.8307994 0.9920202 1.0248097 1.1511514 1.1743048 #>   [50,] 0.48489381 0.6310396 0.6731245 0.7517403 0.7962130 0.9232364 1.0416444 #>   [51,] 0.29342868 0.3160535 0.3568776 0.3881975 0.4363068 0.4441480 0.4454114 #>   [52,] 0.24610977 0.2832061 0.3275009 0.3365159 0.3728250 0.4606671 0.4706508 #>   [53,] 0.37809332 0.3787513 0.3821232 0.3969412 0.4896702 0.4930152 0.5228370 #>   [54,] 0.40649431 0.5210566 0.5767383 0.5771011 0.6216471 0.6301349 0.6547095 #>   [55,] 1.21525675 1.2489481 1.3652638 1.4425302 1.5561659 1.5848826 1.6635585 #>   [56,] 0.34469978 0.3529312 0.4814304 0.5550738 0.5684520 0.6112225 0.6519655 #>   [57,] 0.25911890 0.2762862 0.2852908 0.3568776 0.3587406 0.3599557 0.4911885 #>   [58,] 0.45315410 0.6526752 0.8971936 0.9048283 0.9915321 1.0611219 1.0697303 #>   [59,] 0.77564883 0.7848625 0.8895886 1.0576025 1.0753081 1.0837689 1.0979523 #>   [60,] 0.46435791 0.7821160 0.8087888 0.8200189 0.8799078 0.8814175 0.9152458 #>   [61,] 0.35893392 0.4786858 0.6054023 0.6772218 0.7093275 0.7122174 0.7389016 #>   [62,] 0.31364693 0.3151665 0.3307630 0.3496380 0.3719570 0.3738475 0.4097976 #>   [63,] 0.43472185 0.7461427 0.7533614 0.7592977 0.7842904 0.8557361 0.8754431 #>   [64,] 0.63951151 0.6618089 0.6958242 0.7345205 0.8170021 0.8815808 0.9430142 #>   [65,] 0.27590979 0.3613293 0.4541270 0.5505683 0.5785163 0.5883052 0.6088508 #>   [66,] 0.37282498 0.3943062 0.4892367 0.5028728 0.5249970 0.5622259 0.5817713 #>   [67,] 0.78886702 0.8063878 0.8274725 0.8641510 0.8698573 0.8865301 0.9715227 #>   [68,] 0.59547705 0.6126157 0.8238391 0.8342794 0.8389211 0.8402566 0.8412236 #>   [69,] 0.58686267 0.6772218 0.6826027 0.6878218 0.6931599 0.6967114 0.7271542 #>   [70,] 0.18773156 0.3552281 0.3587406 0.4804835 0.5233808 0.5325179 0.5381807 #>   [71,] 0.71791430 0.8561950 0.9568194 1.0949716 1.1170973 1.1312201 1.1426771 #>   [72,] 0.38989560 0.5586878 0.5598770 0.6115948 0.6331034 0.6670345 0.7079609 #>   [73,] 0.42277625 0.5669433 0.5859214 0.6780810 0.7219875 0.7711050 0.7859286 #>   [74,] 0.28946368 0.3681885 0.3792961 0.4277401 0.4553586 0.4785935 0.4872801 #>   [75,] 0.18375629 0.2482976 0.3515838 0.3599557 0.3718805 0.3881975 0.3882071 #>   [76,] 0.45366024 0.5537417 0.6109019 0.6569260 0.8905723 1.1033142 1.1040548 #>   [77,] 0.34963804 0.3819758 0.4822665 0.4874018 0.5020470 0.5048701 0.5130467 #>   [78,] 0.33565216 0.5197409 0.5851909 0.6487988 0.7043784 0.7185464 0.7465465 #>   [79,] 0.46553595 0.6200499 0.8452965 0.8632501 0.8704177 0.8857051 0.9605379 #>   [80,] 1.15895578 1.2285182 1.2653518 1.4455813 1.4548150 1.7936230 1.9152153 #>   [81,] 0.59142833 0.6039763 0.6238661 0.7194622 0.7461427 0.8248801 0.8997469 #>   [82,] 0.37887811 0.9380697 0.9556686 0.9625936 0.9779778 1.0051767 1.0176755 #>   [83,] 0.36708291 0.4952210 0.4974965 0.5150722 0.5257333 0.5795394 0.5984878 #>   [84,] 0.59832992 0.6051736 0.8053191 0.9257555 0.9368102 0.9566771 1.0011067 #>   [85,] 0.32458153 0.5218471 0.5249797 0.5508319 0.5879289 0.6591974 0.6600697 #>   [86,] 0.45366024 0.6497945 0.7704404 0.7884078 0.9071015 0.9911530 1.0018222 #>   [87,] 0.86808226 1.0571757 1.0701098 1.0841214 1.0989534 1.1714227 1.1991262 #>   [88,] 0.70707327 0.7597328 0.7774441 0.7940683 0.7971701 0.8242204 0.8752761 #>   [89,] 0.57488666 0.6448797 0.7959021 0.8086854 0.8114895 0.8180471 0.9182885 #>   [90,] 0.46088095 0.4829943 0.5967389 0.6607295 0.6736509 0.6748189 0.6973327 #>   [91,] 0.22376131 0.3900703 0.4138534 0.4205343 0.4896702 0.4928747 0.5051761 #>   [92,] 0.20671156 0.3683921 0.3723055 0.4083511 0.4962146 0.5062089 0.5539381 #>   [93,] 0.35454258 0.3550764 0.3608388 0.6219193 0.6793578 0.7509541 0.7626036 #>   [94,] 0.47079385 0.5272674 0.5701579 0.5717917 0.6608137 0.7723438 0.8186732 #>   [95,] 0.27126130 0.4888970 0.5425347 0.5718213 0.5792849 0.6346808 0.6729167 #>   [96,] 0.55661393 0.9220404 0.9507171 1.1458245 1.1542598 1.1586987 1.1890468 #>   [97,] 0.55180029 0.7441160 0.8666764 0.8876110 0.9198242 0.9718873 0.9739549 #>   [98,] 0.20029896 0.6590768 0.7291381 0.7698256 0.7869223 0.8270644 0.8477960 #>   [99,] 1.04195672 1.0919970 1.1678320 1.1982458 1.2275214 1.2405972 1.2518935 #>  [100,] 0.22637231 0.2986411 0.3780933 0.4542884 0.4896671 0.4955716 0.5082022 #>  [101,] 0.37917759 0.3978601 0.4113793 0.4403189 0.5824629 0.6296057 0.6373400 #>  [102,] 0.16857286 0.3969412 0.4308071 0.4542884 0.4607169 0.4759374 0.4779190 #>  [103,] 0.41294296 0.4212866 0.4518309 0.4815322 0.4816555 0.4905401 0.5000465 #>  [104,] 0.38458697 0.3934488 0.4429947 0.5059068 0.5232989 0.5347686 0.5503222 #>  [105,] 0.62084683 0.6982088 0.7332484 0.7667370 0.7767051 0.8450354 0.8469849 #>  [106,] 0.37735658 0.4359157 0.4701016 0.4763160 0.5726360 0.5948771 0.6069419 #>  [107,] 0.40494088 0.6170966 0.6258718 0.6409443 0.6476067 0.6505800 0.6585118 #>  [108,] 0.27416424 0.3394611 0.4295859 0.4512167 0.4788043 0.5795394 0.5812144 #>  [109,] 0.34386568 0.3775004 0.4679915 0.5667571 0.7040866 0.7930754 0.8573154 #>  [110,] 0.65692597 0.6640914 0.6903925 0.9447399 0.9911530 1.0004288 1.0157266 #>  [111,] 0.17322505 0.4381345 0.4763553 0.5001010 0.5199568 0.5208237 0.5219478 #>  [112,] 0.27934566 0.3802163 0.4325621 0.4878024 0.5291455 0.5472537 0.5652571 #>  [113,] 0.81766307 0.8539912 0.9572485 1.0208393 1.2684273 1.2711141 1.5410749 #>  [114,] 0.53399697 0.5342883 0.5487788 0.5601196 0.5726360 0.5729499 0.5851909 #>  [115,] 1.36204206 1.6571097 1.9991860 2.0239366 2.0573165 2.2044042 2.2200062 #>  [116,] 0.40125230 0.4570627 0.6049606 0.6810970 0.6855674 0.7049320 0.7125207 #>  [117,] 0.46553595 0.6236021 0.7001253 0.7349194 0.7723331 0.7862374 0.7882985 #>  [118,] 0.40179756 0.4646941 0.4831149 0.5062987 0.5727313 0.5954285 0.6077208 #>  [119,] 1.77549664 1.7936230 1.8354673 1.9510910 2.0330700 2.0391656 2.0485502 #>  [120,] 0.40615376 0.5919125 0.5920246 0.6545498 0.7093365 0.7624129 0.7772260 #>  [121,] 0.35743117 0.3866715 0.5022933 0.5536463 0.5629969 0.5665804 0.5754789 #>  [122,] 0.96504796 1.0660640 1.0692290 1.0835106 1.1479572 1.2711038 1.2921262 #>  [123,] 0.42774011 0.4402361 0.4489629 0.4641931 0.4982906 0.5003857 0.5059210 #>  [124,] 0.41918526 0.4559135 0.6475094 0.6650774 0.6671920 0.6729234 0.6743787 #>  [125,] 0.28199897 0.3286279 0.3461326 0.4684063 0.4689421 0.4891803 0.4924793 #>  [126,] 0.31280550 0.4002317 0.4008439 0.4877180 0.4962146 0.5797486 0.5911588 #>  [127,] 0.37707816 0.4227762 0.5171076 0.5795281 0.6627588 0.7975276 0.8306540 #>  [128,] 0.39786015 0.3994931 0.4237416 0.4660890 0.4878024 0.5038331 0.5121420 #>  [129,] 0.31578572 0.4644535 0.4788890 0.5036873 0.5354382 0.5658074 0.6170966 #>  [130,] 1.19754752 1.2143366 1.2243644 1.2404187 1.2626997 1.3000290 1.3032514 #>  [131,] 0.49875311 0.8376001 0.8556644 0.9708082 0.9843990 1.0550444 1.1472057 #>  [132,] 0.59002837 0.6726041 0.6958350 0.7431441 0.7469217 0.8028723 0.8085094 #>  [133,] 0.35591868 0.3687995 0.5580362 0.5737089 0.5904913 0.6092580 0.6145747 #>  [134,] 0.34423353 0.6213974 0.6929357 0.7278263 0.7330792 0.7453741 0.8500246 #>  [135,] 0.29725231 0.4986063 0.5449426 0.6004435 0.6030858 0.6332262 0.6565572 #>  [136,] 1.57668987 1.6266489 1.7168512 1.7703862 1.9419772 1.9425681 1.9539265 #>  [137,] 0.63291808 0.7534207 0.8529041 0.8828437 0.9947411 0.9953738 1.0087941 #>  [138,] 0.48339904 0.4981472 0.5057041 0.5079950 0.5095265 0.5115103 0.5232989 #>  [139,] 0.85750592 1.0056533 1.1326229 1.1615655 1.3000015 1.4115196 1.4444196 #>  [140,] 0.73074413 0.7533614 1.0052654 1.1575033 1.1657045 1.1770195 1.2117864 #>  [141,] 0.62979811 0.9103927 1.0282142 1.1005949 1.3728202 1.3777085 1.3789662 #>  [142,] 0.46397630 0.5222070 0.5445432 0.5797634 0.6532799 0.7069918 0.7283067 #>  [143,] 0.24791283 0.3574312 0.4226264 0.4530123 0.4546701 0.5092601 0.5249883 #>  [144,] 0.50343691 0.5240436 0.6625804 0.6781812 0.6977430 0.7357877 0.7363033 #>  [145,] 0.42801716 1.1077220 1.2106951 1.2333542 1.3498237 1.3858660 1.4122134 #>  [146,] 0.79282325 1.5062566 1.5488572 1.5888989 1.6550615 1.6833456 1.6937430 #>  [147,] 0.36774929 0.3732685 0.3842104 0.4538932 0.5831462 0.6044639 0.6209772 #>  [148,] 0.46923236 0.7317482 0.7605785 0.7894107 0.8505585 0.8636224 0.8657139 #>  [149,] 0.61834263 0.6932606 0.8256068 0.8999726 0.9035490 0.9503079 1.0456034 #>  [150,] 0.35293118 0.4688132 0.4695729 0.5323004 0.5921511 0.6954049 0.7075479 #>  [151,] 0.54165312 0.5588568 0.5678139 0.5685090 0.5745787 0.6053094 0.6422874 #>  [152,] 0.59814179 0.9430142 1.3062036 1.3689539 1.3767029 1.3807620 1.3817814 #>  [153,] 0.64843755 0.6731534 0.6810228 0.8088618 0.8661454 0.8855866 0.8990050 #>  [154,] 0.55904021 0.6732418 0.8727508 0.9516666 0.9535847 0.9562271 1.0479533 #>  [155,] 0.49686206 0.5374131 0.6082029 0.6448797 0.6532233 0.6533593 0.6847137 #>  [156,] 0.70018142 0.9381927 1.0154757 1.0170554 1.1379143 1.2098691 1.2164011 #>  [157,] 0.95566857 1.0588611 1.1581595 1.2131050 1.2812563 1.2955692 1.4895554 #>  [158,] 0.34386568 0.5777995 0.6039384 0.7309325 0.7723438 0.7816013 0.8591158 #>  [159,] 0.71378924 0.7408240 0.7629718 0.7692430 0.8632464 0.9802034 1.0449156 #>  [160,] 1.07539520 1.1498385 1.1904362 1.2023242 1.2244189 1.2734993 1.3063748 #>  [161,] 0.16038520 0.3719570 0.4298063 0.4565358 0.4636812 0.4822665 0.5079705 #>  [162,] 0.43472185 0.5489543 0.6039763 0.6677195 0.6780961 0.7010212 0.7721062 #>  [163,] 0.51362241 0.7131420 0.7423514 0.8604679 0.8981499 0.9095031 0.9172866 #>  [164,] 0.30619090 0.3550764 0.4387340 0.4398053 0.5292763 0.5609652 0.5984878 #>  [165,] 0.57459576 0.6679446 0.7453741 0.8462319 0.9124183 0.9670177 1.0898594 #>  [166,] 0.89703605 0.9566634 1.0673192 1.1530202 1.2928860 1.3157153 1.3172478 #>  [167,] 0.77162301 1.0268815 1.0273805 1.1125643 1.1753404 1.2810804 1.2906744 #>  [168,] 0.56559090 0.7823620 0.7828742 0.7839705 0.7860888 0.7900814 0.8027006 #>  [169,] 0.35014647 0.3707147 0.4272040 0.4430726 0.4760717 0.4799689 0.5293508 #>  [170,] 0.29721270 0.3249261 0.3574931 0.4793659 0.4928762 0.5106370 0.5119681 #>  [171,] 0.30159388 0.4799766 0.5969825 0.6687554 0.7125823 0.7242116 0.7276922 #>  [172,] 0.32800638 0.3651872 0.4187587 0.4203225 0.4998417 0.5316164 0.5512461 #>  [173,] 0.62529025 0.7245884 0.7915912 0.8545051 0.9034034 1.0841214 1.1205207 #>  [174,] 0.50486038 0.5366888 0.6140897 0.7447615 0.7535245 0.7644076 0.8076303 #>  [175,] 0.33565216 0.6085907 0.6286005 0.6628317 0.6840926 0.7009039 0.7052099 #>  [176,] 0.37354974 0.5780958 0.6350364 0.7418080 0.7420285 0.7766514 0.8058106 #>  [177,] 0.58037647 0.6760164 0.7413587 0.8101495 0.8635893 0.8693038 0.9278994 #>  [178,] 0.18773156 0.2762862 0.3160535 0.3409775 0.3902278 0.4345602 0.4701996 #>  [179,] 0.35610869 0.4352313 0.5442592 0.5445757 0.5606846 0.5852456 0.5920246 #>  [180,] 0.23273379 0.6099832 0.6245517 0.6502532 0.8401655 0.8540530 0.8610995 #>  [181,] 0.35591868 0.4789899 0.4946776 0.5569761 0.6084799 0.6340862 0.6406897 #>  [182,] 0.24785159 0.3414133 0.4572084 0.4781697 0.6141117 0.6186837 0.6703630 #>  [183,] 0.39313631 0.4499254 0.5069864 0.5502171 0.5540772 0.5563416 0.6518516 #>  [184,] 0.32307795 0.3574931 0.4832023 0.5256649 0.5962816 0.5982704 0.6000027 #>  [185,] 0.24878787 0.3678014 0.4472058 0.5223575 0.5487287 0.5487853 0.5815260 #>  [186,] 0.23581065 0.4159101 0.5466056 0.5577023 0.7093859 0.8635176 0.8639829 #>  [187,] 0.32458153 0.3573415 0.4636908 0.4706508 0.5459118 0.6013398 0.6263428 #>  [188,] 0.45921391 0.5409484 0.5619399 0.5900284 0.6226575 0.6807311 0.6988472 #>  [189,] 0.47802329 0.5667448 0.7173967 0.7441339 0.7515273 0.7572532 0.7862199 #>  [190,] 0.34105416 0.3612721 0.4381345 0.4497129 0.4598616 0.4620303 0.5845477 #>  [191,] 0.58169372 0.5929311 0.5963030 0.6306806 0.6518091 0.6576806 0.6969779 #>  [192,] 0.47079385 0.4780233 0.4897122 0.5125870 0.5747023 0.6119418 0.6372951 #>  [193,] 0.25966695 0.5326090 0.7275374 0.7438463 0.7834863 0.7990819 0.8366936 #>  [194,] 0.57601280 0.5999824 0.6966987 0.7300311 0.7842522 0.7908705 0.8242477 #>  [195,] 0.29230411 0.3486813 0.5388966 0.5524508 0.5539619 0.5638342 0.5827680 #>  [196,] 0.31019877 0.5132359 0.5537417 0.6497945 0.6640914 0.7840033 0.8414834 #>  [197,] 0.40125230 0.6220755 0.7014483 0.7063317 0.7366712 0.7388221 0.7619553 #>  [198,] 0.28529083 0.3409775 0.3501037 0.3552281 0.3738475 0.4798148 0.4819757 #>  [199,] 0.29172949 0.6102870 0.6279668 0.6453937 0.6681361 0.6738120 0.6837785 #>  [200,] 0.30321713 0.3079301 0.3194569 0.3566287 0.3808076 0.4574750 0.5045029 #>  [201,] 0.29342868 0.2988484 0.3902278 0.4489629 0.4552432 0.4553586 0.4569850 #>  [202,] 0.43488157 0.4436010 0.5125483 0.5247987 0.5282940 0.5305248 0.5395131 #>  [203,] 0.34689065 0.3952753 0.4714573 0.4904061 0.5217994 0.5634012 0.5654584 #>  [204,] 0.85908836 0.8868519 0.9926253 1.1324214 1.1619213 1.2040134 1.2757494 #>  [205,] 0.98101071 1.1379291 1.3464264 1.3709069 1.3804714 1.4124703 1.4161375 #>  [206,] 0.20029896 0.6004435 0.6245538 0.6952970 0.7128586 0.7200645 0.7231788 #>  [207,] 0.41639391 0.4536975 0.5126921 0.5697857 0.5948784 0.6497096 0.6875925 #>  [208,] 0.56369379 0.8765410 0.8958618 0.9236665 0.9829871 0.9888993 0.9911147 #>  [209,] 0.49066399 0.6587926 0.8624764 0.9112282 0.9243117 0.9247930 0.9511384 #>  [210,] 0.72310567 0.7736701 0.7870729 0.9333092 0.9381927 0.9476777 0.9663875 #>  [211,] 0.38060885 0.4747977 0.4788890 0.4903754 0.5430400 0.5659028 0.5780571 #>  [212,] 0.73074413 1.2128031 1.3767029 1.4285823 1.6045952 1.7237307 1.7338859 #>  [213,] 0.76835764 0.9996256 1.0284601 1.1104289 1.1555220 1.2470012 1.3050110 #>  [214,] 0.28183735 0.3726152 0.3852905 0.4129430 0.4149611 0.4194893 0.4216125 #>  [215,] 0.51893444 0.5297742 0.5753583 0.5893465 0.5999495 0.6030420 0.6243958 #>  [216,] 0.54602175 0.6831774 0.7118217 0.8924804 0.9169477 0.9210661 0.9516666 #>  [217,] 0.32490808 0.3463684 0.4138534 0.4759374 0.4874018 0.4924680 0.4955716 #>  [218,] 0.34487962 0.6208468 0.7275374 0.7464348 0.9314828 0.9708868 1.0074023 #>  [219,] 0.70340401 0.7278631 0.7525606 0.7588367 0.9186662 0.9220404 1.0098270 #>  [220,] 0.37410524 0.3933287 0.4826132 0.4939033 0.5039031 0.5422074 0.5525949 #>  [221,] 0.33224441 0.3594571 0.4608574 0.5497418 0.5544365 0.5562227 0.5986020 #>  [222,] 1.23056781 1.3117838 1.5281259 1.6051205 1.7261429 1.8721160 1.8896905 #>  [223,] 0.36344565 0.7513681 0.7815852 0.8478024 0.8489611 0.8540856 0.8561950 #>  [224,] 0.85205330 1.0521779 1.0532581 1.0858755 1.2213313 1.2835040 1.3043758 #>  [225,] 0.61566123 0.6666312 0.6892657 0.7333896 0.7413654 0.8038420 0.8242124 #>  [226,] 0.52452654 0.5312701 0.5457465 0.6976628 0.7026473 0.7518283 0.7975417 #>  [227,] 0.57104646 0.5996146 0.6011139 0.6158812 0.6216750 0.6307474 0.6509865 #>  [228,] 0.38043690 0.4981200 0.5135325 0.5665804 0.5714157 0.5825737 0.5968931 #>  [229,] 0.39245309 0.4992052 0.5503459 0.5570208 0.5698313 0.5969825 0.6417437 #>  [230,] 0.48362828 0.5798934 0.5851407 0.6564100 0.7463217 0.7706694 0.7961911 #>  [231,] 0.50173441 0.5051471 0.5628845 0.6584275 0.7756313 0.8182546 0.8303063 #>  [232,] 0.57626358 0.6417437 0.6768553 0.7063601 0.8314817 0.8651075 0.8813094 #>  [233,] 0.65919192 0.7454127 0.7761767 0.7913231 0.8217483 0.8777434 0.8855012 #>  [234,] 0.47397411 0.6252903 0.9615812 0.9944720 1.0003493 1.0081954 1.0301954 #>  [235,] 0.48465047 0.5410580 0.6708210 0.6986516 0.7091997 0.7435365 0.7914487 #>  [236,] 0.54594045 0.5978542 0.8238391 0.8300007 0.8362162 0.8401366 0.8980384 #>  [237,] 0.28713086 0.3216205 0.4770231 0.5297851 0.5533367 0.5562024 0.5753583 #>  [238,] 0.51856314 0.5850921 0.7452366 0.8229233 0.9468704 1.0272770 1.0568547 #>  [239,] 0.72021199 0.8113119 1.3953434 1.4548472 1.4599790 1.4819750 1.5665260 #>  [240,] 0.44031890 0.4717843 0.5460394 0.5502443 0.5846691 0.5854541 0.6132753 #>  [241,] 0.54505599 0.6498501 0.6687282 0.7080370 0.7451737 0.8224637 0.8302513 #>  [242,] 0.50496748 0.5253372 0.5304576 0.5537228 0.6159417 0.6336087 0.6553028 #>  [243,] 0.45463360 0.4779190 0.4937840 0.5055779 0.5596912 0.6259360 0.6275213 #>  [244,] 0.47107702 0.5125870 0.5667448 0.5701579 0.6648279 0.7280252 0.7930754 #>  [245,] 0.35153139 0.4726514 0.5885004 0.7239899 0.7615352 0.7816607 0.9228713 #>  [246,] 0.22556995 0.2995185 0.3914550 0.4363050 0.4460269 0.5293508 0.5590879 #>  [247,] 0.57578479 0.6062448 0.6209094 0.6407918 0.6471731 0.6644361 0.6780187 #>  [248,] 0.59832992 0.6679446 0.8326195 0.8328927 0.9135923 0.9481156 1.0624930 #>  [249,] 0.42066193 0.5121158 0.5713291 0.7689820 0.7978709 0.8087888 0.8089742 #>  [250,] 0.16038520 0.3307630 0.3609975 0.4015015 0.4558246 0.4827675 0.5130467 #>  [251,] 0.63029024 0.7706578 0.9007251 0.9243117 1.0314647 1.0651181 1.0797650 #>  [252,] 0.32606631 0.3717373 0.3841090 0.4084447 0.4153513 0.4532401 0.4585898 #>  [253,] 0.40494088 0.5039678 0.5134770 0.5505683 0.5654036 0.6231424 0.6311451 #>  [254,] 0.46267354 0.9321061 1.0012281 1.0700034 1.1089399 1.1344544 1.2021549 #>  [255,] 0.53379554 0.6740866 0.6976674 0.8423385 0.8748135 0.9271261 0.9624570 #>  [256,] 0.41093989 0.5727321 0.6551817 0.7349510 0.7795737 0.7925764 0.7980186 #>  [257,] 0.37239037 0.4240281 0.5328905 0.5588568 0.5695330 0.5752164 0.5965697 #>  [258,] 0.54406474 0.6161819 0.8858392 0.8861484 0.9168180 0.9286157 0.9456201 #>  [259,] 0.49814717 0.5476988 0.5595555 0.5874908 0.6139567 0.6361757 0.6526733 #>  [260,] 0.55491985 0.6403408 0.6887979 0.7450282 0.7497061 0.7592977 0.7662717 #>  [261,] 0.34015638 0.7418080 0.7672530 0.8610658 0.8682452 1.0508081 1.1044772 #>  [262,] 0.21267415 0.2858308 0.3065071 0.3384496 0.3681885 0.3735354 0.4226264 #>  [263,] 0.39330269 0.4159101 0.4954966 0.7086965 0.8764222 0.8886820 0.9900028 #>  [264,] 0.51151027 0.5886179 0.7038546 0.7212288 0.7518283 0.7584971 0.7705607 #>  [265,] 0.56369379 0.5874908 0.7811632 0.8270061 0.8810146 0.9268219 0.9350142 #>  [266,] 0.53127011 0.5501081 0.5826511 0.6973271 0.7070733 0.7122174 0.7188140 #>  [267,] 0.45969629 0.4762373 0.5544078 0.5582530 0.5831462 0.6244076 0.6348789 #>  [268,] 0.46799149 0.5777995 0.5928785 0.6265087 0.6481902 0.6563890 0.7747542 #>  [269,] 0.50088229 0.5025933 0.5105359 0.5331721 0.5993475 0.6110164 0.6131177 #>  [270,] 0.50338745 0.5069864 0.5682802 0.5767383 0.6378615 0.6584275 0.6678572 #>  [271,] 0.45178907 0.4906619 0.5210295 0.5328570 0.5535924 0.5591807 0.5811599 #>  [272,] 0.82538432 0.8963519 1.0299178 1.1077839 1.1416024 1.2077378 1.2177607 #>  [273,] 0.34367888 0.4287851 0.4587106 0.5434417 0.5564421 0.6007379 0.6026117 #>  [274,] 0.91982416 1.0709841 1.0882101 1.1040322 1.1742288 1.1756323 1.2025118 #>  [275,] 0.50968564 0.5468406 0.8828437 0.8869477 1.0620673 1.1589558 1.1620768 #>  [276,] 0.52398727 0.5950373 0.6177650 0.6518091 0.6626373 0.6976226 0.7333896 #>  [277,] 0.61618187 0.6538949 0.6927885 0.9540312 1.0112372 1.0522536 1.0551293 #>  [278,] 0.48362828 0.4939056 0.5619399 0.6037953 0.6687282 0.6958350 0.7944084 #>  [279,] 0.40467537 0.4248319 0.5436353 0.5540772 0.5931951 0.6376199 0.6532157 #>  [280,] 0.67285101 0.8100945 0.8520533 0.9504313 0.9573268 0.9797552 1.0319595 #>  [281,] 0.29919644 0.6198653 0.6946534 0.7043856 0.8338029 0.8801681 0.8848566 #>  [282,] 0.29721270 0.3751771 0.4415660 0.4462715 0.4537297 0.4776457 0.5085932 #>  [283,] 0.34767718 0.7289159 0.7367880 0.7413587 0.7473717 0.7587176 0.7876524 #>  [284,] 0.35312680 0.3642565 0.3801902 0.4388628 0.4990543 0.5062266 0.5132842 #>  [285,] 0.38816198 0.4834603 0.6665911 0.7317905 0.7600898 0.8072899 0.8219183 #>  [286,] 0.47113555 0.5911683 0.6146429 0.6237357 0.6537450 0.6547095 0.7362724 #>  [287,] 0.87547078 0.9482612 0.9814182 0.9858956 1.0195867 1.0214219 1.0372738 #>  [288,] 0.29230411 0.4542718 0.5965684 0.6365452 0.6505394 0.6965867 0.7363240 #>  [289,] 0.33651588 0.4150961 0.4466549 0.4636908 0.4845885 0.5139146 0.5386881 #>  [290,] 0.41472679 0.5830712 0.6254831 0.6461869 0.7145729 0.7308150 0.8001136 #>  [291,] 1.00868985 1.3056795 1.4833364 1.5248959 1.6244816 1.6482273 1.6596067 #>  [292,] 0.40468039 0.8590428 1.0628744 1.1105700 1.1221626 1.1588931 1.1628657 #>  [293,] 0.31280550 0.4970946 0.5313373 0.6546197 0.6615095 0.6785196 0.6867529 #>  [294,] 0.29936278 0.5924064 0.6591884 0.6982088 0.7160677 0.7191995 0.7368828 #>  [295,] 0.23273379 0.5755965 0.5849735 0.6316067 0.7091997 0.7677561 0.7762810 #>  [296,] 0.33358698 0.7158639 0.7390709 0.7434999 0.7536625 0.7828742 0.8055095 #>  [297,] 0.62864189 0.7539527 0.8977016 0.9588441 1.0166699 1.0184622 1.0521770 #>  [298,] 0.58166270 0.7748687 0.8100411 0.8863672 0.9120831 0.9165732 0.9301796 #>  [299,] 0.43633246 0.5710465 0.6090987 0.6194143 0.6277039 0.6591884 0.7031295 #>  [300,] 0.65937660 0.7035111 0.9378941 1.0439733 1.0595192 1.1965461 1.2600202 #>  [301,] 0.16740855 0.3816547 0.4186423 0.4471206 0.5375561 0.5564421 0.5583910 #>  [302,] 0.15143474 0.2832061 0.4466549 0.4892367 0.5399597 0.5548177 0.5989847 #>  [303,] 0.15797941 0.3687731 0.4152236 0.4173271 0.4388628 0.4712785 0.5210000 #>  [304,] 0.60732210 0.7373089 0.8063749 0.8220097 0.8383788 1.0144164 1.0297023 #>  [305,] 0.22095964 0.3795876 0.4359157 0.5475498 0.5729499 0.5853853 0.6294845 #>  [306,] 0.24336702 0.6192648 0.7544253 0.7760548 0.8335548 0.8383420 0.8691783 #>  [307,] 0.74109847 0.7534207 0.7885251 0.9007251 0.9511384 0.9629521 0.9958625 #>  [308,] 0.57273210 0.6067430 0.6586885 0.7228461 0.7748507 0.8037346 0.8385181 #>  [309,] 0.32801760 0.3651872 0.3880876 0.4623754 0.5149094 0.5174033 0.5195892 #>  [310,] 0.20671156 0.2506096 0.2961088 0.4008439 0.4262104 0.4684063 0.4706895 #>  [311,] 0.36009695 0.5329968 0.6090581 0.6132753 0.6494423 0.6799315 0.6991268 #>  [312,] 0.42309639 0.4915822 0.5345043 0.6831774 0.6885684 0.7123239 0.7601525 #>  [313,] 0.43794754 0.7480928 0.8240910 0.8750767 0.8877469 0.8969483 0.8978712 #>  [314,] 0.38394278 0.4543534 0.5633415 0.6061817 0.6281301 0.6950656 0.7173157 #>  [315,] 0.26568272 0.4781697 0.6104184 0.6497511 0.6807311 0.6934067 0.7144597 #>  [316,] 0.20744456 0.4261515 0.5400053 0.5491708 0.5911683 0.6483100 0.6592861 #>  [317,] 0.66778881 0.7986504 0.9245800 0.9904282 1.0018222 1.0143949 1.0401643 #>  [318,] 0.41083155 0.5530183 0.5619332 0.5739993 0.6054023 0.6126157 0.6683329 #>  [319,] 0.32800638 0.3280176 0.3919179 0.4908667 0.5708616 0.6295974 0.6628395 #>  [320,] 0.24829756 0.2591189 0.4086183 0.4214965 0.4317295 0.4345602 0.4415660 #>  [321,] 0.37838532 0.4356031 0.5175917 0.5676003 0.5859441 0.6097287 0.6344092 #>  [322,] 0.15918668 0.5596651 0.5975997 0.6276691 0.6294317 0.6386885 0.6479889 #>  [323,] 0.27115596 0.3713173 0.4764786 0.5626927 0.5825851 0.5868627 0.5899214 #>  [324,] 0.36344565 0.5887255 0.7428180 0.8524712 0.8676943 0.8788343 0.8866819 #>  [325,] 0.51093567 0.6249055 0.6965234 0.8174328 0.8200189 0.8448620 0.8506547 #>  [326,] 0.34547777 0.3665925 0.4688181 0.5715523 0.6109370 0.6323335 0.6375760 #>  [327,] 0.34433447 0.3924531 0.5210566 0.5942038 0.6374466 0.6857475 0.7162170 #>  [328,] 0.43069321 0.4897122 0.4991458 0.5776755 0.6102565 0.6386885 0.6657882 #>  [329,] 0.46923236 0.5218389 0.7646565 0.7887914 0.8082253 0.8212706 0.8718161 #>  [330,] 0.40821037 0.4379739 0.5738829 0.6252068 0.6572113 0.6595356 0.6615035 #>  [331,] 0.65231903 0.6833317 0.6988624 0.7218343 0.7266337 0.7781939 0.8097117 #>  [332,] 0.61102634 0.6649147 0.6728686 0.7095258 0.7273162 0.7497597 0.7955183 #>  [333,] 0.34868132 0.3563108 0.4516023 0.4542718 0.4699640 0.5125171 0.6156728 #>  [334,] 0.41472679 0.5541451 0.5851041 0.6125309 0.7480699 0.7681317 0.7756488 #>  [335,] 0.26943231 0.4674203 0.5544365 0.5701247 0.5727313 0.6096898 0.6573412 #>  [336,] 0.50343691 0.5167341 0.5218273 0.5844075 0.5890562 0.5907975 0.5938743 #>  [337,] 0.79159118 0.8610658 0.8680823 0.8871867 0.9133191 0.9175687 0.9941067 #>  [338,] 0.34887046 0.5390305 0.5391223 0.6216750 0.6380466 0.7444788 0.7920270 #>  [339,] 0.26384354 0.3204394 0.5183551 0.5567602 0.5759314 0.7665812 0.7876524 #>  [340,] 0.23581065 0.3933027 0.5867226 0.7078609 0.7117227 0.7802729 1.0284601 #>  [341,] 0.75529388 0.7823092 0.8220389 0.8283274 0.9290381 0.9458613 1.0497207 #>  [342,] 0.68478279 0.7420285 0.7900814 0.8042349 0.9937303 1.1130620 1.1155695 #>  [343,] 0.51974093 0.5601196 0.6357879 0.6501372 0.7572498 0.7940683 0.8292292 #>  [344,] 0.67795023 0.7333881 1.0258418 1.0657652 1.1274689 1.1634892 1.2528829 #>  [345,] 0.42801716 1.0829739 1.0939463 1.1323096 1.1471338 1.2377742 1.2832679 #>  [346,] 0.17322505 0.4497129 0.5236298 0.5685463 0.5770097 0.5798372 0.5970800 #>  [347,] 0.24681262 0.4899550 0.4900604 0.4926988 0.5462676 0.5513688 0.6194201 #>  [348,] 0.82516219 0.8930844 0.8980384 0.9200137 0.9503079 1.0761371 1.0990184 #>  [349,] 0.33455662 0.4055265 0.4546336 0.4607169 0.4770231 0.4971971 0.5339973 #>  [350,] 0.64648938 0.8869477 0.9539276 1.0667349 1.0920292 1.1092998 1.1417500 #>  [351,] 0.31633218 0.3501307 0.5048604 0.5358513 0.5781149 0.6670345 0.7286179 #>  [352,] 0.19230095 0.2871309 0.3509894 0.3859530 0.4975531 0.5097096 0.5657912 #>  [353,] 0.47403268 0.4900604 0.5254724 0.6086806 0.6314797 0.6713186 0.6809510 #>  [354,] 0.25621051 0.2993916 0.4008128 0.4084447 0.4569850 0.4606264 0.4938332 #>  [355,] 0.38970886 0.4533904 0.5062089 0.5281435 0.5583836 0.6321614 0.6483495 #>  [356,] 0.65196551 0.6537174 0.7369048 0.8059972 0.8067931 0.8170860 0.9023200 #>  [357,] 0.23493814 0.3644208 0.4074087 0.4894193 0.5620359 0.5669870 0.5755038 #>  [358,] 0.49927080 0.5329968 0.5460394 0.5530609 0.5992093 0.6277166 0.6956365 #>  [359,] 1.32549389 1.5115957 1.5170868 1.5482082 1.7038451 1.7151566 1.7930709 #>  [360,] 0.29562325 0.4474183 0.4853787 0.5706896 0.5985714 0.6160252 0.6573412 #>  [361,] 0.34265300 0.3809723 0.4173943 0.5372001 0.6115948 0.6526733 0.7136714 #>  [362,] 0.79199275 0.8861484 0.9032750 0.9293343 0.9703928 0.9926253 1.0089700 #>  [363,] 0.46435791 0.5121158 0.6786845 0.7144597 0.8157600 0.8302513 0.8394732 #>  [364,] 0.34015638 0.5780958 0.7926560 0.8367723 0.8584062 0.8723993 0.9082158 #>  [365,] 0.58405110 0.5996752 0.6219193 0.7879989 0.8082253 0.9038331 0.9811293 #>  [366,] 0.47107702 0.5717917 0.6119418 0.8350468 0.8420257 0.8553092 0.9141676 #>  [367,] 0.54243097 0.7047573 0.7289159 0.7537074 0.7684845 0.7700233 0.8164732 #>  [368,] 0.22790951 0.6797248 0.7307391 0.7349510 0.7605520 0.8011483 0.8037346 #>  [369,] 0.53087625 0.7275734 0.7572498 0.7774441 0.8482405 0.9400157 0.9739454 #>  [370,] 0.56903220 0.6726041 0.7040866 0.7280252 0.7309325 0.8184837 0.8263954 #>  [371,] 0.68439972 0.7063317 0.7081372 0.7114553 0.7473805 0.7647453 0.7754868 #>  [372,] 0.39313631 0.4248319 0.4316478 0.4806925 0.5208237 0.5798372 0.5995046 #>  [373,] 0.69557926 0.9743114 0.9788063 0.9830758 1.0232268 1.0297855 1.0559813 #>  [374,] 1.18343924 1.2229820 1.2405972 1.2701169 1.3271170 1.4998263 1.5081017 #>  [375,] 0.36780332 0.3821232 0.5072214 0.6304772 0.6307691 0.6332738 0.6514453 #>  [376,] 0.46545623 0.4671173 0.4815106 0.5958054 0.5992240 0.6064093 0.6346808 #>  [377,] 0.24336702 0.5721305 0.8463445 0.9267930 0.9757458 0.9805062 0.9906952 #>  [378,] 0.49875311 0.6561679 0.8333321 0.9093853 1.0269225 1.1031559 1.1495364 #>  [379,] 0.66293906 0.7195446 0.8012506 0.8443110 0.8544094 0.9098963 0.9239537 #>  [380,] 0.67841176 0.6888005 0.6987752 0.7278146 0.7590812 0.7737825 0.7795777 #>  [381,] 0.39607462 0.4325621 0.4660890 0.5207855 0.5221368 0.5578936 0.5894681 #>  [382,] 0.55442584 0.5808096 0.6050265 0.6109370 0.6668744 0.6926850 0.6976674 #>  [383,] 0.83627398 0.9678575 1.1191872 1.1556690 1.2230135 1.2651240 1.2746526 #>  [384,] 0.29533520 0.3186055 0.3845870 0.4991897 0.5079950 0.5196833 0.5669870 #>  [385,] 0.37887811 0.8331198 0.8333399 0.8931886 0.9751978 1.0162210 1.0325356 #>  [386,] 0.45369748 0.6410400 0.6618083 0.6638760 0.7275766 0.8088009 0.8151136 #>  [387,] 0.30321713 0.3079381 0.3583659 0.3610173 0.4272931 0.4478191 0.4571904 #>  [388,] 0.35856595 0.3788511 0.5410801 0.5436016 0.6096288 0.6150493 0.6178676 #>  [389,] 0.28910062 0.3818650 0.4298704 0.4371938 0.4471206 0.4712785 0.5011181 #>  [390,] 0.34408852 0.4427241 0.4460269 0.4543534 0.4799689 0.4843953 0.5492964 #>  [391,] 0.41918526 0.4328677 0.5117792 0.5386881 0.5543276 0.5602461 0.5910015 #>  [392,] 0.48490197 0.5296113 0.6033788 0.6231582 0.7052099 0.7185464 0.8018686 #>  [393,] 0.99389082 1.1074416 1.1099191 1.2879211 1.3876219 1.4641752 1.4725776 #>  [394,] 0.61117330 0.6484375 0.6980980 0.7277084 0.7672530 0.7926560 0.8077021 #>  [395,] 0.27187328 0.3497076 0.7421971 0.8037722 0.8531621 0.8631786 0.8667839 #>  [396,] 0.29533636 0.3125003 0.3985777 0.4079068 0.4144687 0.4620303 0.4883146 #>  [397,] 0.47397411 0.6984534 0.7490988 0.7864159 0.8088774 0.8545051 0.8802777 #>  [398,] 0.21960293 0.2439954 0.3191901 0.4216125 0.4829943 0.4842188 0.5425347 #>  [399,] 0.30852987 0.4874972 0.5051761 0.5351163 0.5641137 0.6833661 0.7174088 #>  [400,] 0.19172984 0.3179728 0.3384496 0.3802163 0.3909788 0.4237416 0.4655321 #>  [401,] 0.69619937 1.0086899 1.0502968 1.1538573 1.2617397 1.3392442 1.3610973 #>  [402,] 0.59293111 0.6027672 0.6185759 0.6772455 0.6966987 0.7211601 0.7231057 #>  [403,] 0.23575971 0.3265346 0.4798148 0.4831149 0.4858446 0.5382044 0.5828191 #>  [404,] 0.48489381 0.5137629 0.7760316 0.8562062 0.8808904 1.1166206 1.1246544 #>  [405,] 0.19700093 0.5462775 0.5975349 0.6159421 0.6387536 0.6928675 0.6947410 #>  [406,] 0.20991061 0.3015939 0.5570208 0.5829449 0.5942038 0.6301349 0.6518516 #>  [407,] 0.45352538 0.4878334 0.4991458 0.5726125 0.6565771 0.6589534 0.7049901 #>  [408,] 0.39688733 0.5640423 0.6591919 0.7368828 0.9045349 0.9206954 0.9496518 #>  [409,] 0.59558279 0.6743557 0.7655814 0.9603450 1.0078217 1.0095261 1.0249828 #>  [410,] 0.47579920 0.4769370 0.5470430 0.5628845 0.5941348 0.6862944 0.6961983 #>  [411,] 0.31578572 0.4387547 0.5335056 0.5604370 0.5659028 0.7271095 0.7521758 #>  [412,] 0.37540932 0.4387547 0.4644535 0.4747977 0.6249892 0.6269492 0.6443456 #>  [413,] 0.36132926 0.4705946 0.5076014 0.5423050 0.6159417 0.6181605 0.6365452 #>  [414,] 0.52547241 0.5641448 0.5954285 0.6443966 0.6674821 0.6833661 0.7300979 #>  [415,] 0.42163411 0.7202120 0.7717650 0.9986694 1.0821397 1.0865172 1.0890745 #>  [416,] 0.45339041 0.5579773 0.5824856 0.6395115 0.7691835 0.7949596 0.8465904 #>  [417,] 0.44472632 0.4971609 0.5713291 0.6641548 0.7121883 0.7469217 0.7665086 #>  [418,] 0.34423353 0.5537228 0.7848050 0.8179298 0.8245071 0.8414834 0.8462319 #>  [419,] 0.58763173 0.5986020 0.6331820 0.7202659 0.7698620 0.8595283 0.8953108 #>  [420,] 0.57559646 0.5816627 0.6099832 0.7915996 0.8031219 0.8447410 0.8772675 #>  [421,] 0.39527530 0.4201376 0.4671383 0.5816937 0.6078546 0.6215588 0.6295034 #>  [422,] 0.51710762 0.5669433 0.6399772 0.7757581 0.8184800 0.8282573 0.8363543 #>  [423,] 0.35014647 0.4192430 0.5798291 0.5893465 0.5916453 0.6599549 0.6793446 #>  [424,] 0.47785766 0.4885092 0.5587710 0.6348789 0.6490367 0.6956853 0.6972968 #>  [425,] 0.33035650 0.3582341 0.6226865 0.7165781 0.7230323 0.8199940 0.8248801 #>  [426,] 0.39850601 0.4079068 0.4173271 0.4254675 0.4347489 0.4359323 0.5140871 #>  [427,] 0.80165283 1.0619780 1.1245446 1.1919248 1.2000743 1.2926038 1.3024413 #>  [428,] 0.32640665 0.4083511 0.4123662 0.4527398 0.4706895 0.4746422 0.4937230 #>  [429,] 0.34767718 0.5803765 0.7047573 0.7218738 0.8299392 0.8415777 0.8906779 #>  [430,] 1.39318466 1.4508646 1.5349116 1.6781118 1.6929454 1.7140726 1.8393415 #>  [431,] 0.40000421 0.4389759 0.5582530 0.5836520 0.6060816 0.6415023 0.6442075 #>  [432,] 0.64045885 0.7204013 0.7453990 0.7552939 0.7776833 0.7781939 0.8110921 #>  [433,] 0.34011941 0.4574750 0.5101878 0.5770136 0.5801564 0.5881086 0.6007379 #>  [434,] 0.37684891 0.6049987 0.6069402 0.6909635 0.7050312 0.7665570 0.8034557 #>  [435,] 0.35842184 0.4356031 0.4757992 0.4963598 0.6309894 0.6361071 0.6600697 #>  [436,] 0.50349566 0.7670640 0.7973409 0.8508192 0.8813094 0.9569591 0.9795791 #>  [437,] 0.42309639 0.4998447 0.5703573 0.6363296 0.7330056 0.8619404 0.9210661 #>  [438,] 0.51835514 0.6116664 0.6481850 0.7282153 0.7399365 0.7883314 0.7995341 #>  [439,] 0.22651562 0.5703573 0.6192609 0.7123239 0.7699154 0.8019361 0.8089977 #>  [440,] 0.35112121 0.3940023 0.4036805 0.4076221 0.4598616 0.4905401 0.5098182 #>  [441,] 0.77995009 1.0170964 1.0853513 1.2555276 1.3294890 1.3306620 1.3558075 #>  [442,] 0.54457571 0.6232096 0.6545498 0.6656432 0.7330860 0.7710247 0.8213352 #>  [443,] 0.22058435 0.4505613 0.5240899 0.5362188 0.5410748 0.5512080 0.5899214 #>  [444,] 0.98854553 1.0701098 1.1866168 1.2230953 1.3882194 1.4636210 1.4844141 #>  [445,] 0.33044002 0.3788533 0.4160242 0.4787389 0.5036873 0.5430400 0.6435166 #>  [446,] 0.59045676 0.6074840 0.6194437 0.6249892 0.6252928 0.6838176 0.7271095 #>  [447,] 0.40781691 0.7659112 0.8012506 0.9027819 0.9172484 0.9795255 0.9987535 #>  [448,] 0.41236622 0.4147290 0.5056989 0.5064024 0.5351712 0.5651191 0.5678139 #>  [449,] 0.79932759 0.8031219 0.8068478 0.8621147 0.8863672 0.9173670 0.9643110 #>  [450,] 0.29884836 0.4008128 0.4402361 0.4614438 0.4619960 0.4658309 0.4701996 #>  [451,] 0.73338812 0.9124183 1.0897069 1.1602788 1.2743271 1.2818842 1.3312725 #>  [452,] 0.77420892 0.8868519 0.8897111 0.9039617 1.0089700 1.0203485 1.0366648 #>  [453,] 0.51826880 0.5360605 0.5447243 0.5697857 0.6082029 0.6641989 0.6946534 #>  [454,] 0.21267415 0.3179728 0.3373517 0.3383154 0.3423120 0.3782893 0.3792961 #>  [455,] 0.45301230 0.5306616 0.5434720 0.5487853 0.5525949 0.5532701 0.5539619 #>  [456,] 0.26251874 0.4654902 0.4896381 0.5415564 0.5674006 0.6429631 0.6453937 #>  [457,] 0.76904599 0.7986504 0.8333399 0.8720576 1.0031724 1.0847096 1.0858456 #>  [458,] 0.63248508 0.6794888 0.9129278 1.0282142 1.0479434 1.0512353 1.0834116 #>  [459,] 0.79765977 0.9912473 1.0574867 1.0603788 1.0904393 1.0945397 1.1215809 #>  [460,] 0.23575971 0.3287951 0.4646941 0.5029464 0.5434172 0.5480480 0.6000076 #>  [461,] 0.35191457 0.3934488 0.4234697 0.5175917 0.5196833 0.5248623 0.5363593 #>  [462,] 0.21534136 0.2935397 0.5248623 0.5528663 0.5573371 0.5774567 0.5830352 #>  [463,] 0.38436790 0.4194893 0.5069871 0.5190864 0.5767464 0.6194143 0.6380595 #>  [464,] 0.16740855 0.3818650 0.4305202 0.4641426 0.5434417 0.5790533 0.6088420 #>  [465,] 0.37580414 0.6708210 0.6747541 0.7143577 0.7151404 0.7238193 0.7342166 #>  [466,] 0.34408852 0.3839428 0.4363050 0.4531649 0.5354377 0.5355036 0.5728629 #>  [467,] 0.37818833 0.7885251 1.0563974 1.0747214 1.1221626 1.1742288 1.2598655 #>  [468,] 0.40781691 0.7276647 0.7835862 1.0522825 1.0697438 1.0845936 1.2442630 #>  [469,] 0.37838532 0.5549199 0.6687884 0.6982445 0.7035210 0.7152939 0.7199063 #>  [470,] 0.77617673 0.8030790 0.8771429 0.8818241 0.9520658 1.0144616 1.0449227 #>  [471,] 0.58257368 0.6768553 0.7186679 0.7706694 0.7955183 0.7986229 0.8113337 #>  [472,] 0.36817655 0.5752415 0.6436410 0.6442017 0.6667461 0.7058156 0.7081799 #>  [473,] 0.34433447 0.5503459 0.6955793 0.7254220 0.8374246 0.8379048 0.8547803 #>  [474,] 0.48122241 0.6192609 0.6307920 0.6629391 0.6885684 0.7244814 0.7400399 #>  [475,] 0.25093233 0.2711560 0.3901847 0.5323004 0.5410748 0.5550738 0.5910015 #>  [476,] 0.62965159 0.7494443 0.9206686 1.0345323 1.1111480 1.1192861 1.1412062 #>  [477,] 0.25966695 0.5633872 0.6799315 0.7464348 0.7669179 0.7712298 0.7783694 #>  [478,] 0.35221809 0.4939056 0.4971609 0.5408722 0.5409484 0.6728686 0.6934067 #>  [479,] 0.51562364 0.6060816 0.6426156 0.6501762 0.7219515 0.7487504 0.7564779 #>  [480,] 0.31953422 0.3758423 0.3998090 0.4357464 0.4911885 0.4928762 0.5382044 #>  [481,] 0.24681262 0.4228004 0.5434720 0.5748554 0.6086806 0.6547122 0.6679195 #>  [482,] 0.85566441 1.1365892 1.1495364 1.1869444 1.2604442 1.2715317 1.2737379 #>  [483,] 0.49560849 0.5622259 0.5989847 0.6092813 0.6831603 0.7266561 0.8451936 #>  [484,] 0.23221319 0.3204394 0.5423050 0.5916362 0.6274354 0.7399365 0.7771049 #>  [485,] 0.47403268 0.5513688 0.5596641 0.5679907 0.5682563 0.5859810 0.6156728 #>  [486,] 0.49467765 0.5043742 0.5737089 0.6298061 0.6584168 0.7423514 0.7429950 #>  [487,] 0.56779137 0.7185089 0.7192118 0.7692171 0.7915921 0.8091958 0.8272073 #>  [488,] 1.13792911 1.6144372 1.6213723 1.6778085 1.7012867 1.8415014 1.8576301 #>  [489,] 0.53671261 0.7255603 0.8340908 0.8745557 0.9022636 0.9048478 0.9083002 #>  [490,] 0.80165283 0.9123214 0.9875225 1.1064863 1.1339069 1.1561434 1.1568911 #>  [491,] 0.62384945 0.7236570 0.7648019 0.7977762 0.8164876 0.8553298 0.9101832 #>  [492,] 0.37777277 0.3919227 0.3940023 0.4208359 0.4212866 0.4785935 0.5095780 #>  [493,] 0.24064592 0.4285375 0.5171371 0.5369552 0.5602332 0.5859789 0.5936950 #>  [494,] 0.28882550 0.3153491 0.4342713 0.5048701 0.5217994 0.5552467 0.5914561 #>  [495,] 0.70351111 0.8971561 1.1455838 1.3060607 1.5724565 1.6143255 1.6180938 #>  [496,] 0.41451694 0.4695729 0.4814304 0.6536018 0.7375226 0.8170860 0.8432428 #>  [497,] 0.49136919 0.6731245 0.7043876 0.7137892 0.7253513 0.7760316 0.8081339 #>  [498,] 0.55091375 0.9137626 0.9196439 0.9286063 0.9363566 0.9802034 1.0330389 #>  [499,] 0.51285122 0.6294317 0.7049901 0.7140204 0.7195147 0.7862890 0.8016741 #>  [500,] 0.56107059 0.8026615 0.9366341 0.9539276 0.9651361 1.0716203 1.0740387 #>  [501,] 0.57626358 0.7829929 0.7996322 0.8345229 0.9550958 0.9788063 0.9795791 #>  [502,] 0.32157601 0.4207438 0.5006405 0.5462676 0.5634012 0.5963030 0.6009522 #>  [503,] 0.22556995 0.2257110 0.4304556 0.4334683 0.4430726 0.4531649 0.4843438 #>  [504,] 0.44706593 0.6219028 0.6810970 0.6945240 0.8420255 0.8752675 0.8930917 #>  [505,] 0.44299056 0.5955828 0.8920539 1.1278632 1.1337572 1.2330310 1.2341092 #>  [506,] 0.48776060 0.4941461 0.5222070 0.5289982 0.6311566 0.6343805 0.6378452 #>  [507,] 0.12448067 0.3064632 0.3079381 0.4097976 0.4558246 0.4772277 0.5079705 #>  [508,] 0.27599528 0.3112953 0.3398481 0.3444417 0.4348816 0.4883538 0.4924793 #>  [509,] 0.73730893 0.8575059 0.9306149 1.1342982 1.2419512 1.4130903 1.4143499 #>  [510,] 0.30436974 0.5230245 0.5477227 0.5660109 0.5940355 0.6375858 0.6384582 #>  [511,] 0.28666494 0.3899819 0.5003103 0.5064024 0.5289961 0.5942258 0.6085690 #>  [512,] 0.79282325 1.3863230 1.5063626 1.5377486 1.6634053 1.7547433 1.7748953 #>  [513,] 0.55091375 0.6426156 0.6729400 0.6907997 0.7856275 0.8194579 0.8201815 #>  [514,] 0.19973417 0.3194569 0.4043781 0.4265450 0.4940077 0.5304576 0.5409493 #>  [515,] 0.19172984 0.2793457 0.3735354 0.4108784 0.4512547 0.5038331 0.5268145 #>  [516,] 0.34367888 0.5439366 0.5887255 0.6824718 0.6945541 0.7192439 0.7513681 #>  [517,] 0.43593115 0.4665737 0.5358350 0.5391223 0.5436353 0.5770097 0.6158812 #>  [518,] 0.40150147 0.4565358 0.5817517 0.5992993 0.6175772 0.6757054 0.6904061 #>  [519,] 0.33331334 0.4903754 0.5436016 0.5520611 0.5883052 0.6417246 0.6429631 #>  [520,] 0.37540932 0.5240899 0.5450802 0.5757215 0.5902803 0.6068834 0.6165220 #>  [521,] 0.92575550 1.0143949 1.0169220 1.0881411 1.1412326 1.2155630 1.2348098 #>  [522,] 0.80266153 0.9197580 0.9996256 1.1587641 1.1619541 1.1749394 1.2017543 #>  [523,] 0.78358621 0.9188166 0.9267930 0.9613941 1.0011413 1.0047642 1.0685405 #>  [524,] 0.48490197 0.5308763 0.5339970 0.6487988 0.6501372 0.7467189 0.7932340 #>  [525,] 0.57368340 0.8184837 0.8580661 0.8953537 1.0083274 1.0502968 1.0644100 #>  [526,] 0.47408595 0.5109357 0.6512444 0.7109180 0.7255603 0.7801814 0.8163748 #>  [527,] 0.28044713 0.2942697 0.3515838 0.4019918 0.4214965 0.4344773 0.5057469 #>  [528,] 0.52183889 0.5996752 0.7027823 0.7605785 0.7823092 0.8406248 0.9314070 #>  [529,] 0.38764375 0.4208359 0.4270814 0.4846648 0.5322830 0.5463962 0.5695330 #>  [530,] 0.49158224 0.5741009 0.5905569 0.6363296 0.6980473 0.8366936 0.8924804 #>  [531,] 1.36190040 1.4337013 1.4433353 1.5782486 1.6720411 1.6970050 1.7363704 #>  [532,] 0.70675053 0.7864159 0.8577179 0.9032108 1.0483272 1.0866135 1.0923414 #>  [533,] 0.69619937 0.7043876 0.7648869 0.7692430 0.8215594 0.8580661 0.9403179 #>  [534,] 0.37684891 0.5815260 0.6116664 0.6926370 0.7307135 0.7426737 0.7806637 #>  [535,] 0.46847253 0.7464360 0.7691835 0.8165196 0.9303635 0.9470164 0.9607747 #>  [536,] 0.38000414 0.4254675 0.5210000 0.5346225 0.5424310 0.5779324 0.5999008 #>  [537,] 0.37197008 0.3826906 0.4594144 0.4623754 0.5124955 0.5752956 0.5952033 #>  [538,] 0.31633218 0.3898956 0.5748744 0.5787282 0.6002412 0.6163447 0.6450028 #>  [539,] 0.57954629 0.5905569 0.8362162 0.8386003 0.8402566 0.8472822 0.9173381 #>  [540,] 0.54501449 0.7472280 0.8369719 1.0092543 1.0375198 1.0467438 1.0468337 #>  [541,] 0.35893392 0.5239929 0.5362188 0.5400207 0.5684520 0.5825851 0.5836868 #>  [542,] 0.57213047 0.6192648 0.8513106 0.8545831 0.8909322 0.9015963 0.9450236 #>  [543,] 0.37239037 0.3777728 0.4036805 0.4270814 0.4719913 0.5000465 0.5003857 #>  [544,] 0.61618869 0.6809198 0.6931599 0.7755478 0.7837732 0.8224567 0.8772601 #>  [545,] 0.60640931 0.6498244 0.7603206 0.7976091 0.8163238 0.8216895 0.8330265 #>  [546,] 1.18063847 1.7020776 1.7216580 1.8823609 1.8949023 1.9538048 1.9879837 #>  [547,] 0.96689003 1.0039810 1.0106301 1.0114832 1.0225515 1.0611219 1.0894698 #>  [548,] 0.60385490 0.6243958 0.6404589 0.7340441 0.7551623 0.7849675 0.8133441 #>  [549,] 0.40023173 0.4186423 0.4436010 0.4641426 0.4891803 0.5166223 0.5268662 #>  [550,] 0.36817655 0.4491082 0.4582160 0.4832023 0.5389671 0.5426152 0.5449115 #>  [551,] 0.39287362 0.4221835 0.4906619 0.4975531 0.5297851 0.5824967 0.5916145 #>  [552,] 0.47275247 0.5207837 0.5361705 0.5497418 0.6048892 0.6096898 0.6135508 #>  [553,] 0.71514878 0.7529725 0.7668322 0.7769018 0.7924640 0.8224637 0.9073579 #>  [554,] 0.56850903 0.6137277 0.6179473 0.6216471 0.6592861 0.6703630 0.7012101 #>  [555,] 0.54406474 0.6409443 0.6708344 0.6710213 0.6838176 0.6920590 0.6927885 #>  [556,] 0.47460586 0.6329181 0.6551817 0.7649759 0.7992372 0.8298034 0.8479974 #>  [557,] 0.54675093 0.6593766 0.7441160 0.8119432 0.8303063 0.9423400 0.9483605 #>  [558,] 0.12545037 0.1993586 0.2439954 0.3726152 0.4671173 0.4885548 0.5638924 #>  [559,] 0.38080757 0.4116465 0.4516023 0.4542798 0.4966740 0.5253372 0.5459966 #>  [560,] 0.93061494 1.0056533 1.1804126 1.3423700 1.3847457 1.6171344 1.6745326 #>  [561,] 0.52792315 0.5415564 0.5520611 0.5780571 0.6252928 0.6512715 0.6789752 #>  [562,] 0.37137846 0.3826906 0.4022882 0.4998417 0.5264727 0.5587710 0.5763049 #>  [563,] 0.16008334 0.2449162 0.3788533 0.4413573 0.5260984 0.5370870 0.5658074 #>  [564,] 0.24791283 0.2798720 0.2858308 0.3423120 0.4119555 0.4662800 0.4747876 #>  [565,] 0.49833922 0.5296113 0.5342883 0.5863886 0.6294845 0.6617426 0.7087542 #>  [566,] 0.60310997 0.6331186 0.6412679 0.7063601 0.7670640 0.7971703 0.8345229 #>  [567,] 0.37989705 0.4371938 0.4705946 0.6188597 0.6213974 0.6811279 0.6975652 #>  [568,] 0.34861404 0.3788511 0.4896381 0.5912296 0.6285687 0.6307474 0.6462020 #>  [569,] 0.77530418 0.8144902 0.8194579 0.8333293 0.8385181 0.8632501 0.8956069 #>  [570,] 0.46085742 0.5876317 0.5912805 0.6621285 0.7426085 0.7590391 0.7947603 #>  [571,] 0.49549662 0.5577023 0.6200499 0.7078609 0.7204419 0.7590812 0.7646843 #>  [572,] 0.48069254 0.4845384 0.5033875 0.5502171 0.5508319 0.6013398 0.6514202 #>  [573,] 0.64733741 0.6893190 0.6939188 0.7063779 0.7408240 0.7476516 0.7574174 #>  [574,] 0.19935864 0.2196029 0.2727244 0.3765577 0.3852905 0.4888970 0.5927198 #>  [575,] 0.62520677 0.6843997 0.6941518 0.7094630 0.8604679 0.8727752 0.8980759 #>  [576,] 0.27239735 0.4144687 0.5095780 0.5404859 0.5464600 0.5537013 0.5703011 #>  [577,] 0.33831536 0.4119555 0.4638287 0.4655321 0.4897457 0.5053144 0.5109378 #>  [578,] 0.34520051 0.5213395 0.7095258 0.8033256 0.8034613 0.8113751 0.8588496 #>  [579,] 0.48937627 0.5242814 0.5347126 0.5358513 0.5748744 0.6125388 0.7141060 #>  [580,] 0.12448067 0.3124877 0.3151665 0.3583659 0.3609975 0.4298063 0.5330191 #>  [581,] 0.79271623 0.7976598 0.8374580 0.9756199 1.0144683 1.0513026 1.1303913 #>  [582,] 0.66620378 0.7490988 0.7994292 0.8372077 0.8577179 0.9034034 0.9944720 #>  [583,] 0.27126130 0.5277355 0.6886316 0.7302624 0.7349276 0.7379351 0.7806637 #>  [584,] 0.20839093 0.4060124 0.4523200 0.5133331 0.5544078 0.5836520 0.7185089 #>  [585,] 0.42461989 0.5039031 0.5209425 0.5802976 0.6009522 0.6022337 0.6152629 #>  [586,] 0.66483930 0.7322815 0.7427035 0.7492492 0.7614226 0.7757581 0.7766514 #>  [587,] 0.29919644 0.6991414 0.8025077 0.8374580 0.8448620 0.9047894 0.9093097 #>  [588,] 0.40056744 0.4017976 0.5389487 0.5523784 0.5985714 0.6138746 0.6235452 #>  [589,] 0.39803327 0.5849735 0.6245517 0.7435365 0.8679073 0.8742367 0.8819325 #>  [590,] 0.37750044 0.5928785 0.6039384 0.6327187 0.6367965 0.6611531 0.7434999 #>  [591,] 0.33331334 0.3585660 0.3806089 0.4541270 0.5279232 0.5550515 0.5904568 #>  [592,] 0.41093989 0.6027672 0.6586885 0.7175935 0.7550070 0.7602957 0.7605520 #>  [593,] 0.50247237 0.5475498 0.5949346 0.6350364 0.6617426 0.7277084 0.7342388 #>  [594,] 0.45921391 0.6037953 0.6564100 0.6589561 0.6893190 0.6906174 0.7173967 #>  [595,] 0.22638065 0.3724672 0.4043781 0.4415368 0.4717560 0.5167386 0.5744876 #>  [596,] 0.50913559 0.5132842 0.5454522 0.5617007 0.5888050 0.5936950 0.6058697 #>  [597,] 0.47235632 0.6698449 0.7354620 0.7830326 0.7946616 0.8037722 0.8067471 #>  [598,] 0.30077927 0.3398481 0.3761160 0.5103615 0.5155095 0.5177376 0.5231161 #>  [599,] 0.35013066 0.4893763 0.6140897 0.6163447 0.6268453 0.6908599 0.7354855 #>  [600,] 0.85673989 0.8778580 0.9008280 0.9801387 0.9934864 1.0091058 1.0207433 #>  [601,] 0.33145674 0.3998090 0.4787389 0.4888362 0.4946492 0.4953075 0.5008823 #>  [602,] 0.29725231 0.4897568 0.5409493 0.5547479 0.6199658 0.6207874 0.6243471 #>  [603,] 0.54660564 0.5867226 0.6949650 0.7086965 0.7323249 0.7683576 0.7808327 #>  [604,] 1.14713379 1.2650795 1.3230227 1.3433368 1.4122134 1.4573729 1.4818597 #>  [605,] 0.31250025 0.3410542 0.3900652 0.4153513 0.4511293 0.4552432 0.4606264 #>  [606,] 0.32157601 0.3468906 0.4201376 0.4308211 0.4995784 0.5464641 0.5498248 #>  [607,] 0.68742099 0.8715888 0.9427922 0.9829166 1.0317399 1.0346750 1.0754004 #>  [608,] 1.20986911 1.3587358 1.3709960 1.5473017 1.6061051 1.6182185 1.6343619 #>  [609,] 0.08838292 0.2716072 0.2742528 0.4968621 0.6523190 0.6626130 0.6775055 #>  [610,] 0.26875026 0.2935397 0.4272040 0.4843953 0.5182688 0.5212239 0.5525530 #>  [611,] 0.61566123 0.6177650 0.6729400 0.6895599 0.6990100 0.7175935 0.7277624 #>  [612,] 0.19973417 0.2263806 0.3005243 0.3566287 0.4478191 0.5101878 0.5547479 #>  [613,] 0.15797941 0.2714273 0.3406825 0.4347489 0.4585898 0.4883146 0.5011181 #>  [614,] 0.32750089 0.3375586 0.3573415 0.3709019 0.4150961 0.4963598 0.5249970 #>  [615,] 0.49653450 0.6003563 0.6102565 0.6150786 0.6565771 0.6589927 0.6710311 #>  [616,] 0.37131730 0.3901847 0.4934245 0.5543276 0.5720529 0.6168438 0.6380466 #>  [617,] 0.41451694 0.5400207 0.5921511 0.6924277 0.7093275 0.7697563 0.7993549 #>  [618,] 0.34861404 0.4648103 0.4654562 0.4654902 0.5143991 0.5638924 0.5925162 #>  [619,] 0.77257980 1.0997888 1.1606942 1.3961962 1.4479373 1.4918316 1.5103144 #>  [620,] 0.34887046 0.6952053 0.7751955 0.8100945 0.8473116 0.9318612 0.9531373 #>  [621,] 0.37828926 0.4816555 0.5227327 0.5240436 0.5422043 0.5736446 0.5907975 #>  [622,] 1.00526538 1.1642248 1.2128031 1.3261818 1.3719356 1.3876612 1.4061792 #>  [623,] 0.30410932 0.3751771 0.4582160 0.4587489 0.5025933 0.5080940 0.5246475 #>  [624,] 0.23493814 0.3327804 0.3368619 0.3943302 0.5870723 0.5873668 0.6757704 #>  [625,] 0.27590979 0.5076014 0.5550515 0.5907358 0.5916362 0.6417246 0.6852087 #>  [626,] 0.50184256 0.8427633 0.8920539 0.9350142 0.9591432 1.0095261 1.0992977 #>  [627,] 0.37958762 0.4942730 0.4983392 0.5949346 0.6033788 0.6481902 0.6939287 #>  [628,] 0.37707816 0.4711486 0.5190796 0.6275213 0.6358056 0.7036963 0.7103826 #>  [629,] 0.56066843 0.8165196 0.8540856 0.8788343 0.9095031 0.9374534 1.0968057 #>  [630,] 0.25621051 0.3248058 0.3675701 0.4486775 0.4511293 0.4611479 0.4614438 #>  [631,] 0.39678810 0.4261515 0.5411297 0.5538634 0.6118077 0.6260859 0.6816703 #>  [632,] 0.45591346 0.5064854 0.5358350 0.5931951 0.6084502 0.7130124 0.8028653 #>  [633,] 0.36228527 0.5445432 0.5759287 0.6332645 0.6456855 0.6626130 0.7168108 #>  [634,] 0.43367017 0.5830055 0.6296516 0.6869540 0.8489611 0.8866819 0.8897492 #>  [635,] 1.38632295 1.4011912 1.4043130 1.4310657 1.4555293 1.5030107 1.5341531 #>  [636,] 0.51782002 0.5194532 0.5509725 0.5528663 0.5613763 0.5664317 0.5813276 #>  [637,] 0.55661393 0.7506206 0.8011116 0.8263691 0.8637595 0.8734356 0.9048283 #>  [638,] 0.56019871 0.7799501 0.8060179 0.8184495 0.8310557 0.9076555 0.9126374 #>  [639,] 0.22058435 0.5783218 0.5836868 0.5902803 0.6323335 0.6443456 0.6473558 #>  [640,] 0.34265300 0.4748361 0.4893252 0.5476988 0.5488778 0.5509725 0.5977027 #>  [641,] 0.44670526 0.4971112 0.5277355 0.5718213 0.5757848 0.6031100 0.6865836 #>  [642,] 0.50514713 0.5467509 0.5941348 0.7056306 0.7287212 0.7450282 0.7729635 #>  [643,] 0.30646317 0.3124877 0.3136469 0.3501037 0.4066756 0.4571904 0.4636812 #>  [644,] 0.51562364 0.5385514 0.6075430 0.6118586 0.6378452 0.6514905 0.6988472 #>  [645,] 0.82560678 0.9358730 1.1214995 1.1410482 1.2013951 1.2052385 1.2228805 #>  [646,] 0.57989342 0.6587926 0.7186679 0.7410985 0.8574803 0.8646562 0.9201228 #>  [647,] 0.41164645 0.4272931 0.5045029 0.5207837 0.5305684 0.5575160 0.5596641 #>  [648,] 0.46847253 1.0517157 1.0706281 1.0839131 1.0949716 1.0968057 1.1248455 #>  [649,] 0.42917682 0.5830055 0.7305713 0.7878179 0.8871003 0.9344106 0.9674112 #>  [650,] 0.46783934 0.7652141 0.8300007 0.9015832 1.0074023 1.1082001 1.1287005 #>  [651,] 0.15918668 0.5128512 0.5604178 0.6104634 0.6223723 0.6249558 0.6657882 #>  [652,] 0.25060958 0.2971402 0.3461326 0.3463531 0.3683921 0.4147290 0.4527398 #>  [653,] 0.60517364 0.8328927 0.8631320 0.9284754 0.9938908 1.0591525 1.0850735 #>  [654,] 0.35098935 0.4493057 0.4611508 0.4650879 0.4833990 0.5146767 0.5595555 #>  [655,] 0.47408595 0.5038046 0.5440496 0.6249055 0.7077662 0.8179046 0.8360712 #>  [656,] 0.37556114 0.4251696 0.4704493 0.5295488 0.5400511 0.5504996 0.5507946 #>  [657,] 0.36879953 0.4109371 0.5259627 0.6424889 0.6596633 0.6909635 0.6945240 #>  [658,] 0.36780332 0.4970946 0.5333807 0.5516505 0.5911588 0.6538204 0.6595848 #>  [659,] 1.16629281 1.2406140 1.3203683 1.4583575 1.6716373 1.7259919 1.7512249 #>  [660,] 0.35621757 0.4726514 0.5215530 0.5562227 0.5982023 0.6621285 0.7503853 #>  [661,] 0.82203889 0.9315362 0.9528004 0.9689935 1.0187083 1.0253888 1.0446737 #>  [662,] 0.49984474 0.5345043 0.5741009 0.6160252 0.6535346 0.6991268 0.7608742 #>  [663,] 0.29106793 0.2923833 0.3138676 0.5102374 0.5125171 0.5188261 0.5207855 #>  [664,] 0.58638858 0.6980980 0.7487108 0.8584062 0.8682452 0.8783046 0.9181219 #>  [665,] 0.66778881 0.7884078 0.9040669 0.9443084 0.9695268 1.0169220 1.0342679 #>  [666,] 0.38097233 0.5586878 0.5638756 0.5737455 0.5977027 0.6139653 0.6452394 #>  [667,] 0.61868621 0.7118217 0.7681719 0.8755289 0.9182318 0.9535847 1.0268815 #>  [668,] 0.50907026 0.5701247 0.5707772 0.6041246 0.6160314 0.6331820 0.6333831 #>  [669,] 0.62853071 0.6533252 0.7421971 0.7852745 0.8313429 0.8403942 0.8666362 #>  [670,] 0.57488666 0.7305713 0.7891179 0.8848566 0.8970360 0.9351005 0.9452430 #>  [671,] 0.36546789 0.4205039 0.4363068 0.4726594 0.5237047 0.5295974 0.5504795 #>  [672,] 0.50629874 0.5389487 0.5682151 0.6427411 0.7211576 0.7614008 0.8108523 #>  [673,] 0.80423494 0.8688788 0.9325010 1.0765140 1.1121641 1.1299177 1.1354728 #>  [674,] 0.55797730 0.5583836 0.5799649 0.7345205 0.8113751 0.8904434 0.8920685 #>  [675,] 0.52466002 0.5541736 0.5720634 0.5746090 0.6740866 0.6743808 0.7181106 #>  [676,] 0.79330125 0.9304826 0.9374534 0.9754777 1.1072525 1.1420670 1.1856185 #>  [677,] 0.26461529 0.2759953 0.4380390 0.4775700 0.5082022 0.5155095 0.5349264 #>  [678,] 0.42066193 0.5307944 0.5759287 0.5797634 0.6641548 0.6786845 0.7677018 #>  [679,] 0.28882550 0.3758254 0.3819758 0.3993022 0.4055265 0.5343450 0.5349264 #>  [680,] 1.15783948 1.1828564 1.1906219 1.3206799 1.3257255 1.3329036 1.3523146 #>  [681,] 1.01705544 1.2076959 1.2552084 1.3397102 1.3694322 1.4508646 1.5590277 #>  [682,] 0.37556114 0.3761160 0.4055922 0.4883538 0.4948272 0.5311159 0.5549595 #>  [683,] 1.05886105 1.1127985 1.1958804 1.4609357 1.5257973 1.6309030 1.6730678 #>  [684,] 0.39722672 0.4282355 0.4477467 0.5133331 0.5677914 0.6209772 0.6323663 #>  [685,] 0.22651562 0.4812224 0.6041246 0.7330056 0.7583067 0.7601525 0.7698620 #>  [686,] 0.44706593 0.5259627 0.6049606 0.6689101 0.6709111 0.6994007 0.7163223 #>  [687,] 0.72458840 0.9941067 1.2421536 1.2437300 1.2739303 1.3110850 1.3140121 #>  [688,] 0.62864189 0.6560633 0.6798616 0.6977430 0.7636421 0.8087617 0.9174114 #>  [689,] 0.49066399 0.6185759 0.7228461 0.8011483 0.8324253 0.8405892 0.9201228 #>  [690,] 0.24491617 0.2707842 0.3304400 0.3314567 0.5125576 0.5331721 0.5611150 #>  [691,] 0.71514878 0.8001136 0.8336484 0.8376592 0.8590428 0.8705796 0.8754859 #>  [692,] 0.68742099 1.0019068 1.0299608 1.3820097 1.3901001 1.4126445 1.4155199 #>  [693,] 0.26251874 0.4648103 0.5629602 0.5912296 0.5992240 0.6501255 0.6786836 #>  [694,] 0.29533636 0.3406825 0.3900652 0.4152236 0.4532401 0.4658309 0.4768041 #>  [695,] 0.36659245 0.3672576 0.4331048 0.5488778 0.5544258 0.6798802 0.6827584 #>  [696,] 0.46267354 0.8875341 1.0070199 1.0268929 1.0818112 1.0876951 1.0957592 #>  [697,] 0.35221809 0.4447263 0.5213395 0.5253793 0.6573206 0.7042383 0.7273162 #>  [698,] 0.35621757 0.3594571 0.4727525 0.5650558 0.5912805 0.5991376 0.6499956 #>  [699,] 0.50698709 0.5425258 0.5464878 0.6213875 0.7007382 0.7276922 0.7525606 #>  [700,] 0.41819026 0.6125388 0.6990868 0.7411246 0.7699693 0.7723237 0.7894107 #>  [701,] 0.69410974 0.8406113 0.9562271 0.9585650 1.0282412 1.0491925 1.0551769 #>  [702,] 0.47635532 0.4858587 0.5487788 0.5853853 0.5970800 0.6126886 0.6342430 #>  [703,] 0.22571101 0.2700971 0.2995185 0.4198665 0.4212793 0.5228647 0.5375561 #>  [704,] 0.38942729 0.4288213 0.4760001 0.5289982 0.5542009 0.6097347 0.6118586 #>  [705,] 0.73663162 0.7829929 0.8176631 1.1974316 1.2042145 1.2166739 1.2624428 #>  [706,] 0.70957943 1.1865129 1.2398548 1.2403447 1.2691065 1.2755226 1.3152530 #>  [707,] 0.39145504 0.4212793 0.4334683 0.5454522 0.6352554 0.6591974 0.6643463 #>  [708,] 0.36009695 0.5103729 0.5699069 0.5854541 0.5992093 0.6205667 0.6296057 #>  [709,] 0.44299056 0.6743557 0.9902403 1.0987962 1.1573794 1.1665652 1.2102968 #>  [710,] 0.57459576 0.7330792 0.8542630 0.8590884 0.9293343 0.9348284 0.9397078 #>  [711,] 0.31056069 0.4860863 0.5771354 0.6429181 0.6679799 0.7120535 0.7180476 #>  [712,] 0.74523665 0.9376722 1.0318255 1.0419567 1.1289302 1.1573618 1.1613535 #>  [713,] 0.49707674 0.5361705 0.6499956 0.7171390 0.7437952 0.7810906 0.7874773 #>  [714,] 0.71005471 0.8340908 1.0345461 1.0398490 1.0766946 1.1129523 1.1411827 #>  [715,] 0.38860025 0.4160082 0.6319139 0.6879806 0.7028452 0.7140003 0.7393618 #>  [716,] 0.38970886 0.5799649 0.5824856 0.6532233 0.7009250 0.7249624 0.8057380 #>  [717,] 0.43794754 0.5335056 0.6768977 0.6882728 0.7627681 0.8224561 0.8256946 #>  [718,] 0.39803327 0.5410580 0.5976469 0.6034167 0.6316067 0.6502532 0.7762961 #>  [719,] 0.63473868 0.7595308 0.8333321 0.9938286 1.1806296 1.1972426 1.2268096 #>  [720,] 0.61868621 0.6732418 0.9252317 0.9665892 1.1125643 1.1205421 1.2024927 #>  [721,] 1.07162028 1.0929976 1.1806385 1.2381545 1.3879424 1.3919336 1.4529343 #>  [722,] 0.51323592 0.5601987 0.7244814 0.7687940 0.8556449 0.8585861 0.8834665 #>  [723,] 0.56903220 0.5736834 0.6648279 0.8553092 0.8783810 0.8858952 0.9060416 #>  [724,] 0.54501449 0.5760128 0.6772455 0.7105527 0.7262913 0.8405892 0.9162829 #>  [725,] 0.18375629 0.3880876 0.3919179 0.4086183 0.4203225 0.4220917 0.4344773 #>  [726,] 0.52466002 0.5337955 0.5517085 0.5826511 0.6050265 0.6537174 0.6961425 #>  [727,] 0.17611954 0.2942697 0.3248058 0.3882071 0.4205039 0.4220917 0.4618221 #>  [728,] 0.39688733 0.7913231 0.8220554 0.8263691 0.8894044 0.9164822 0.9404307 #>  [729,] 0.43427127 0.5343450 0.5351712 0.5715657 0.6226575 0.6514568 0.6514905 #>  [730,] 0.34520051 0.6573206 0.8237306 0.9168969 0.9279626 0.9314608 1.0137918 #>  [731,] 0.34612117 0.4082104 0.4198665 0.4843438 0.5708386 0.5709738 0.5728629 #>  [732,] 0.74809281 0.7624129 0.7779691 0.8424100 0.8798276 0.8997842 0.9610290 #>  [733,] 0.37580414 0.3905129 0.4471440 0.4733165 0.5246475 0.6911193 0.6912768 #>  [734,] 0.36228527 0.5307944 0.5332694 0.6532799 0.7744585 0.7821160 0.7996949 #>  [735,] 1.24509498 1.2598835 1.3328162 1.5821880 1.5857365 1.6334998 1.6965700 #>  [736,] 0.45162664 0.5158471 0.5567602 0.6681361 0.6906918 0.7947404 0.7995341 #>  [737,] 0.28271105 0.3359666 0.3678014 0.5171371 0.5403760 0.5477227 0.5688987 #>  [738,] 0.44670526 0.5959438 0.6412679 0.7105023 0.7153048 0.7337609 0.7344953 #>  [739,] 0.54210559 0.5457465 0.6357879 0.7038546 0.7087542 0.7639937 0.7650300 #>  [740,] 0.37354974 0.5620359 0.5655909 0.5870723 0.6847828 0.6851526 0.7129528 #>  [741,] 0.29021981 0.3435843 0.5005976 0.5018985 0.5586994 0.5602461 0.5649581 #>  [742,] 0.56043697 0.6538949 0.6882728 0.7908189 0.7955380 0.8443680 0.9321622 #>  [743,] 0.37917759 0.4187587 0.4617537 0.4908667 0.5195892 0.5492449 0.6223043 #>  [744,] 0.67685988 0.7706578 0.8401499 0.8624764 0.9287412 0.9305214 0.9740594 #>  [745,] 0.37789036 0.5563416 0.5928029 0.6146429 0.6666294 0.6900424 0.7205641 #>  [746,] 0.73328302 1.0410489 1.1327459 1.2004510 1.2083856 1.2211414 1.2370877 #>  [747,] 0.45760052 0.5518003 0.5928029 0.6867000 0.7974873 0.9142375 0.9273456 #>  [748,] 0.34970755 0.4743187 0.7690460 0.7946616 0.8331198 0.8674289 0.8703224 #>  [749,] 0.31019877 0.6109019 0.6903925 0.7407795 0.7687940 0.7704404 0.7803179 #>  [750,] 0.46657372 0.5390305 0.5720529 0.6084502 0.6475094 0.6765748 0.6952053 #>  [751,] 0.83464228 0.8353398 0.9714709 0.9838568 1.0129266 1.0214219 1.0796755 #>  [752,] 0.29562325 0.4115608 0.4674203 0.5526943 0.5707772 0.5713688 0.6011920 #>  [753,] 0.50247824 0.5097096 0.5146767 0.5795281 0.6038549 0.6109148 0.6399772 #>  [754,] 0.32128729 0.3435843 0.4699677 0.4797414 0.4830822 0.4844015 0.5066242 #>  [755,] 0.68126336 0.6888005 0.7882985 0.8049026 0.8452965 0.8841528 0.9098963 #>  [756,] 0.45162664 0.5759314 0.6481850 0.7892429 0.8050512 0.8112181 0.8117780 #>  [757,] 0.76832137 0.8043348 0.8133832 0.8664737 0.9629706 0.9699532 1.0355362 #>  [758,] 0.62979811 0.7232305 1.1802584 1.2482806 1.2957958 1.3260160 1.3376554 #>  [759,] 0.30092896 0.3041093 0.4512167 0.4537297 0.5105359 0.5426152 0.5872266 #>  [760,] 0.36973189 0.6074840 0.6789752 0.7627681 0.7772437 0.7955380 0.8406113 #>  [761,] 0.45871058 0.4986063 0.4989642 0.5608876 0.5661197 0.5972962 0.6141508 #>  [762,] 0.56404233 0.6973327 0.7968395 0.8220554 0.8418309 0.8637595 0.8777434 #>  [763,] 0.71681084 0.7595308 0.7996949 0.8043348 0.8508801 0.8724116 0.9091628 #>  [764,] 0.23221319 0.2638435 0.6852087 0.6906918 0.6979785 0.7282153 0.7426810 #>  [765,] 0.82133522 0.9168180 0.9443084 0.9904282 1.0043925 1.0429611 1.0612448 #>  [766,] 0.47178426 0.5249203 0.5824629 0.5924064 0.5928124 0.6071044 0.6336591 #>  [767,] 0.33358698 0.6025828 0.6327187 0.6446725 0.6757704 0.7614138 0.8027006 #>  [768,] 0.24785159 0.2838427 0.4491239 0.6118077 0.6309201 0.6482038 0.6497511 #>  [769,] 0.22458232 0.3265346 0.3287951 0.4016935 0.4357464 0.4962175 0.5069544 #>  [770,] 0.31386756 0.3195099 0.3365350 0.3563108 0.4542798 0.5253970 0.5386259 #>  [771,] 0.29168303 0.3061909 0.3545426 0.5684983 0.6583411 0.6984534 0.7177866 #>  [772,] 0.47395770 0.5314175 0.5425258 0.5843606 0.6249558 0.6548248 0.7266472 #>  [773,] 0.50184256 0.8810146 1.1537624 1.1990595 1.2489722 1.2695442 1.3029742 #>  [774,] 0.52452654 0.5421056 0.6111733 0.6632807 0.6731534 0.7323069 0.7971701 #>  [775,] 0.16857286 0.3345566 0.3993022 0.4775700 0.4896671 0.4924680 0.4937840 #>  [776,] 0.27940552 0.6324851 0.7002355 0.7955746 0.8100697 0.8352919 0.8654957 #>  [777,] 0.24034921 0.3375586 0.4427241 0.4797414 0.5459118 0.5664317 0.5706395 #>  [778,] 0.70675053 0.7095794 1.0062745 1.0536399 1.0836482 1.0862773 1.1036218 #>  [779,] 0.51856314 0.5428389 0.5650923 0.6738120 0.8058647 0.9585650 1.0294965 #>  [780,] 0.40762215 0.4327573 0.4815322 0.5199568 0.5648204 0.5685463 0.5975997 #>  [781,] 0.64103997 0.6792932 0.7232305 0.7698256 0.8636471 0.9103927 0.9234947 #>  [782,] 0.67601640 0.9569481 0.9668900 0.9810107 1.0027925 1.0387430 1.0743130 #>  [783,] 0.45828164 0.5404859 0.5792751 0.5795289 0.5941869 0.6215119 0.6548329 #>  [784,] 0.77162301 0.8087509 0.8755289 0.9252317 1.1416159 1.1936630 1.3300027 #>  [785,] 0.66463580 0.6677195 0.7488545 0.7510351 0.7829724 0.8557361 0.8997469 #>  [786,] 0.42709473 0.4970767 0.5347126 0.5973428 0.6268453 0.6990868 0.7277907 #>  [787,] 0.56107059 0.6071044 0.7669179 0.8456684 0.8469849 0.8498462 0.8829480 #>  [788,] 0.19138594 0.2569850 0.2742528 0.5859214 0.6856743 0.6988624 0.7015225 #>  [789,] 0.67795023 0.8752675 1.0627103 1.0931903 1.1236134 1.1602788 1.1734987 #>  [790,] 0.60872811 0.7120535 0.7566968 0.7926113 0.8223987 0.8400504 0.8711039 #>  [791,] 0.68044898 0.7861443 0.8100697 0.9015706 1.0917606 1.1233735 1.1843514 #>  [792,] 0.32302307 0.3682466 0.4144313 0.4733165 0.5338666 0.5530183 0.5917165 #>  [793,] 0.79271623 0.8654957 0.9432001 1.0355486 1.0746039 1.1608574 1.1980840 #>  [794,] 1.04908019 1.0491925 1.2376591 1.2548659 1.2591212 1.2985529 1.3256118 #>  [795,] 0.73724369 0.9572485 0.9984734 1.0747214 1.1129255 1.1974316 1.2210697 #>  [796,] 0.42585808 0.4398053 0.4952210 0.6583411 0.6665911 0.6711462 0.6766388 #>  [797,] 0.87513698 0.9032750 0.9077274 1.0043925 1.0372074 1.1390701 1.1805517 #>  [798,] 0.38352487 0.4285375 0.4399251 0.5043742 0.5166223 0.5315847 0.5328556 #>  [799,] 0.49711117 0.5109378 0.6203669 0.6886316 0.6945128 0.7010659 0.7215325 #>  [800,] 0.38764375 0.4992052 0.5416531 0.5679928 0.5829449 0.6179473 0.6314653 #>  [801,] 0.70018142 0.9340734 1.0375611 1.0376246 1.0682967 1.0790328 1.2076959 #>  [802,] 0.35823407 0.4589627 0.5914283 0.6713417 0.6822251 0.7160005 0.7170594 #>  [803,] 0.38873183 0.3900703 0.4271005 0.4754122 0.4874972 0.5054410 0.6175296 #>  [804,] 0.53139012 0.5463962 0.5679928 0.5745787 0.6209094 0.7141221 0.7463217 #>  [805,] 0.29939163 0.4486775 0.4619960 0.4882198 0.5083313 0.5270618 0.5446818 #>  [806,] 0.65267516 0.7438839 0.8101495 0.8152400 0.8577645 0.8793835 0.8969906 #>  [807,] 0.47113555 0.5038046 0.6186837 0.6446725 0.6512444 0.6850346 0.7101469 #>  [808,] 0.40468039 0.7961911 0.9253115 0.9660649 0.9766645 0.9767513 0.9978451 #>  [809,] 0.63029024 0.6945128 0.6949650 0.7093859 0.7802729 0.8626093 0.9899787 #>  [810,] 0.27239735 0.3531268 0.3844330 0.3985777 0.4359323 0.4582816 0.5617007 #>  [811,] 0.10496390 0.2953352 0.3519146 0.3943302 0.4074087 0.4103602 0.4429947 #>  [812,] 0.97281183 0.9774155 1.0310905 1.0848319 1.1127985 1.1278472 1.1437895 #>  [813,] 0.28183735 0.3765577 0.3919227 0.4518309 0.4524302 0.4842188 0.4846648 #>  [814,] 0.38860025 0.5124955 0.5264727 0.5944657 0.6124865 0.6238536 0.6481234 #>  [815,] 0.33946108 0.4711486 0.5186571 0.5265891 0.5609652 0.5817517 0.6165815 #>  [816,] 0.31953422 0.3230780 0.3249261 0.4491082 0.5085932 0.5136027 0.5452031 #>  [817,] 0.64274106 0.7717650 0.7962130 0.8055500 0.8456373 0.8535566 0.8583547 #>  [818,] 0.27009714 0.3461212 0.3816547 0.4298704 0.4304556 0.4305202 0.4379739 #>  [819,] 0.22458232 0.3758423 0.4134361 0.4853787 0.4858446 0.5029464 0.5506206 #>  [820,] 0.37422802 0.3859530 0.4221835 0.4650879 0.5059068 0.5075678 0.5409856 #>  [821,] 0.48346027 0.5319334 0.5464437 0.6789908 0.7081799 0.7142262 0.7156149 #>  [822,] 0.36774929 0.4300875 0.5323430 0.5715657 0.6013691 0.6445565 0.6769366 #>  [823,] 0.29864115 0.3098451 0.3249081 0.4517891 0.4754122 0.4928747 0.4930152 #>  [824,] 0.31859988 0.6396721 0.6621269 0.6809198 0.6826027 0.7178480 0.7236811 #>  [825,] 0.51816914 0.5771354 0.8516587 0.8641196 0.9769531 0.9892423 0.9923153 #>  [826,] 0.38731762 0.4760001 0.5135579 0.5190804 0.5657008 0.6026295 0.6265665 #>  [827,] 0.94532770 0.9460321 1.0030758 1.0890745 1.1735463 1.2010995 1.2134749 #>  [828,] 0.60674304 0.8603134 0.8703083 0.8983031 0.9291537 0.9959638 1.0154757 #>  [829,] 0.34457961 0.3672576 0.4893252 0.5372001 0.5638756 0.5715523 0.6096346 #>  [830,] 0.51298962 0.6306806 0.6626373 0.6990100 0.7105527 0.7211601 0.7472280 #>  [831,] 0.59251622 0.5996146 0.6495981 0.6498244 0.6501255 0.6837785 0.6853493 #>  [832,] 0.40467537 0.4359312 0.5064854 0.7156369 0.7664663 0.7701255 0.7908734 #>  [833,] 0.35112121 0.4327573 0.4719913 0.5001010 0.5461181 0.5965697 0.6115108 #>  [834,] 0.72665606 0.7426340 0.7456952 0.7861443 0.8458698 0.9260699 0.9981249 #>  [835,] 0.27987198 0.2894637 0.3065071 0.3373517 0.3909788 0.4546701 0.5053144 #>  [836,] 0.40649431 0.4240281 0.5507946 0.6239939 0.6464109 0.6475453 0.6530175 #>  [837,] 0.35854655 0.5257333 0.5682151 0.5812144 0.6121059 0.6241344 0.6306721 #>  [838,] 0.38436790 0.4363325 0.4524302 0.4777627 0.5529307 0.5648204 0.5927198 #>  [839,] 0.40615376 0.4352313 0.4589280 0.6232096 0.6269492 0.6920590 0.7091029 #>  [840,] 0.30852987 0.3302917 0.3887318 0.4205343 0.5641448 0.5657008 0.5897119 #>  [841,] 0.72493998 0.7390709 0.7642454 0.9361925 0.9548407 0.9703808 1.0276567 #>  [842,] 0.33596663 0.3804369 0.3866715 0.4060488 0.5079940 0.5306616 0.5470901 #>  [843,] 0.54684064 0.8770541 1.0166699 1.0657956 1.1521817 1.2446478 1.2653518 #>  [844,] 0.42958595 0.4387340 0.4974965 0.5186571 0.5190796 0.5684983 0.5912486 #>  [845,] 0.59814179 0.6618089 1.0470184 1.0673192 1.0895528 1.1266011 1.1564425 #>  [846,] 0.27940552 0.6794888 0.6804490 0.8074631 0.8558305 0.9497796 0.9508786 #>  [847,] 0.27142727 0.3260663 0.3616241 0.3687731 0.3985060 0.4490205 0.4768041 #>  [848,] 0.45125473 0.5472537 0.5563753 0.6006414 0.7486465 0.7577472 0.7646843 #>  [849,] 0.30052429 0.3079301 0.3401194 0.3610173 0.3724672 0.4265450 0.4558875 #>  [850,] 0.46565031 0.5489543 0.5698313 0.6238661 0.6403408 0.6713417 0.7162170 #>  [851,] 0.60341666 0.8362740 0.8366349 0.8819325 0.9516279 0.9615812 0.9648074 #>  [852,] 0.35334074 0.5135325 0.5347056 0.5629969 0.6411620 0.6501515 0.6514568 #>  [853,] 1.17142274 1.2305678 1.5616284 1.6374086 1.6566340 1.6619266 1.7180482 #>  [854,] 0.20839093 0.2458655 0.4000042 0.4282355 0.4596963 0.6044639 0.6166674 #>  [855,] 0.52899612 0.5367126 0.6110263 0.6827507 0.7109180 0.7317614 0.7449176 #>  [856,] 0.50557789 0.5385514 0.5427333 0.5889549 0.5982793 0.7021194 0.7028182 #>  [857,] 0.24064592 0.3286279 0.3835249 0.4511265 0.4618417 0.5028156 0.5268662 #>  [858,] 0.20744456 0.5411297 0.5461181 0.5596651 0.5604178 0.6137277 0.6237357 #>  [859,] 0.33920973 0.3773566 0.4518904 0.5720634 0.5836065 0.5917165 0.7275133 #>  [860,] 0.88089043 1.1808807 1.3172311 1.4639394 1.4672066 1.4678837 1.5660051 #>  [861,] 0.20991061 0.4499254 0.4799766 0.5682802 0.5771011 0.5995046 0.6374466 #>  [862,] 0.43069321 0.5726125 0.5747023 0.6183426 0.6324933 0.6608137 0.7161143 #>  [863,] 0.24034921 0.3709019 0.4606671 0.5601927 0.5619584 0.6198380 0.6269870 #>  [864,] 0.26568272 0.3414133 0.4491239 0.5056989 0.6141807 0.6773687 0.7481341 #>  [865,] 0.93407335 1.1703939 1.2190879 1.2748383 1.2945214 1.3000015 1.4435558 #>  [866,] 0.52398727 0.7118188 0.8186544 0.8242124 0.9058639 0.9862036 1.0278902 #>  [867,] 0.54654978 0.5944657 0.6238495 0.6916067 0.7021194 0.7028452 0.7155917 #>  [868,] 0.49342453 0.5626927 0.5674006 0.6512715 0.7040036 0.7336226 0.7444788 #>  [869,] 0.75669680 0.8464139 0.8647776 0.9075003 1.0253734 1.0258418 1.0468797 #>  [870,] 0.45760052 0.7245759 0.7885519 0.7940886 0.8302766 0.8306603 0.9062342 #>  [871,] 0.28443111 0.4660931 0.4937230 0.5369552 0.5884215 0.6085690 0.6185185 #>  [872,] 0.36127210 0.4316478 0.4845384 0.5219478 0.5236298 0.5345456 0.5703011 #>  [873,] 0.46397630 0.5332694 0.6332645 0.6828690 0.7481341 0.7559836 0.7562722 #>  [874,] 0.42280036 0.5268145 0.5306026 0.5652571 0.6013691 0.6157460 0.6255810 #>  [875,] 0.58850041 0.5889565 0.5982023 0.6084766 0.6443966 0.7821055 0.8372479 #>  [876,] 0.50349566 0.6331186 0.7105023 0.8971936 0.8981969 0.9783832 1.0101983 #>  [877,] 0.25093233 0.3446998 0.4505613 0.4688132 0.4764786 0.5239929 0.6143644 #>  [878,] 0.34547777 0.3812641 0.5840833 0.5976469 0.6668744 0.6798802 0.6961425 #>  [879,] 0.19700093 0.3614684 0.5286657 0.5646549 0.5779324 0.5981296 0.6162216 #>  [880,] 0.33920973 0.4144313 0.4248337 0.4701016 0.4786858 0.6090299 0.6111510 #>  [881,] 0.22095964 0.4763160 0.4858587 0.4942730 0.5491708 0.5538634 0.6413687 #>  [882,] 0.30189027 0.3230231 0.3905129 0.4248337 0.4518904 0.5057469 0.5677537 #>  [883,] 0.35334074 0.4671383 0.5253793 0.5408722 0.6121662 0.6251460 0.6444695 #>  [884,] 0.27416424 0.3009290 0.5265891 0.5266852 0.5403689 0.5889549 0.5912486 #>  [885,] 0.42524262 0.5382567 0.7007382 0.7266472 0.8030790 0.8855012 0.8869721 #>  [886,] 0.65144533 0.6538204 0.6869540 0.7494443 0.8274725 0.8281018 0.8478024 #>  [887,] 0.33278036 0.3766667 0.4103602 0.4894193 0.5363593 0.6025828 0.6788346 #>  [888,] 0.53139012 0.5851407 0.5963428 0.6461869 0.6903962 0.7145351 0.7167997 #>  [889,] 0.38126412 0.4688181 0.5501081 0.5512080 0.5517085 0.5541736 0.5677537 #>  [890,] 0.50570411 0.6139567 0.7647043 0.7752566 0.7811632 0.8231388 0.8241516 #>  [891,] 0.28666494 0.3628038 0.4660931 0.5714157 0.5720126 0.5791916 0.5859789 #>  [892,] 0.60925803 0.6646358 0.7181278 0.7759100 0.8025176 0.8847136 0.9612817 #>  [893,] 0.26461529 0.2961088 0.3112953 0.3463531 0.3723055 0.4564030 0.4746422 #>  [894,] 0.22790951 0.5059468 0.6199827 0.7602957 0.7790266 0.7809493 0.7939962 #>  [895,] 0.95345166 0.9984734 1.0208393 1.0972571 1.1150546 1.2552802 1.2970190 #>  [896,] 0.41083155 0.5954771 0.5990488 0.6000027 0.6552396 0.7058156 0.7453670 #>  [897,] 1.06050472 1.1005949 1.1415819 1.1462511 1.1737902 1.1784947 1.1802584 #>  [898,] 1.01213896 1.0824401 1.0876951 1.1871600 1.2021549 1.2423744 1.3038761 #>  [899,] 0.40056744 0.4523200 0.5530609 0.6166674 0.6362195 0.6764214 0.6865026 #>  [900,] 0.21534136 0.2687503 0.4760717 0.5189344 0.5360605 0.5562024 0.5735089 #>  [901,] 0.50913559 0.5997411 0.6107313 0.6215119 0.6223847 0.6797502 0.6822251 #>  [902,] 1.36326437 1.7890580 1.9175286 1.9659467 1.9898979 2.0584657 2.1228029 #>  [903,] 0.29021981 0.3212873 0.3717373 0.4167015 0.4490205 0.4897215 0.5125991 #>  [904,] 0.49136919 0.5137629 0.7517403 0.8215594 0.8632464 0.8975507 1.0233421 #>  [905,] 0.28199897 0.2971402 0.4262104 0.4511265 0.4904061 0.5079940 0.5315847 #>  [906,] 0.38942729 0.5934849 0.6075430 0.6873932 0.6938844 0.7277624 0.7762628 #>  [907,] 0.49811996 0.5209425 0.5230245 0.5470901 0.6199827 0.6217134 0.6454175 #>  [908,] 0.19230095 0.3216205 0.3742280 0.3928736 0.4611508 0.4971971 0.5024782 #>  [909,] 0.46382875 0.4747876 0.5059468 0.5548846 0.5788554 0.6006414 0.6030933 #>  [910,] 0.42516962 0.4589783 0.4611479 0.5001808 0.5270618 0.5409856 0.5605146 #>  [911,] 0.48608630 0.5181691 0.6774709 0.7736701 0.8464139 0.8898686 0.9595844 #>  [912,] 0.34457961 0.4173943 0.4331048 0.4748361 0.5598770 0.5787282 0.5808096 #>  [913,] 0.54005115 0.5503222 0.5676003 0.6085907 0.6126886 0.6329890 0.6537450 #>  [914,] 0.37137846 0.3842104 0.4594144 0.5919331 0.6244076 0.6441982 0.6473374 #>  [915,] 0.36973189 0.5590402 0.6941097 0.7283429 0.9041523 0.9059144 0.9988856 #>  [916,] 0.24875987 0.6941518 0.7081372 0.8253907 0.8314016 0.8751370 0.8946387 #>  [917,] 0.35314811 0.4252426 0.6213875 0.6548248 0.6782171 0.6820315 0.7278631 #>  [918,] 0.73174823 0.7374447 0.7723237 0.8110921 0.8388964 0.9194015 0.9715227 #>  [919,] 0.45352538 0.4965345 0.5776755 0.6324933 0.6372951 0.6481234 0.6591978 #>  [920,] 0.35153139 0.5215530 0.5641137 0.6084766 0.7431842 0.7648505 0.7792765 #>  [921,] 0.93789410 0.9468309 0.9921218 1.0125924 1.0868349 1.1117074 1.1455838 #>  [922,] 0.54602175 0.6307920 0.7195446 0.8060179 0.8296200 0.9027819 0.9625081 #>  [923,] 0.33035650 0.4589627 0.6223847 0.6367448 0.7524029 0.7827470 0.7970583 #>  [924,] 0.43008751 0.4538932 0.4746059 0.6108339 0.6323663 0.6353536 0.6589561 #>  [925,] 0.50968564 0.6464894 0.6798616 0.8065690 0.8529041 0.8770541 1.0184622 #>  [926,] 0.35507916 0.7192118 0.7544253 0.9154311 0.9366341 0.9533615 0.9802833 #>  [927,] 0.32177216 0.4328677 0.5139146 0.5746090 0.5919125 0.6048431 0.6369055 #>  [928,] 0.67685988 0.7366316 0.7996322 0.8539912 0.9534517 1.0128148 1.0659562 #>  [929,] 0.44774668 0.4778577 0.5260595 0.6210167 0.6309713 0.6353536 0.7063779 #>  [930,] 0.31859988 0.5846691 0.5928124 0.6161887 0.6986115 0.7140224 0.7380297 #>  [931,] 0.47235632 0.6285307 0.7192439 0.8531621 0.9360629 0.9626487 0.9728118 #>  [932,] 0.42163411 0.8055500 0.8113119 0.9904052 1.1794178 1.1918469 1.2002061 #>  [933,] 0.62766914 0.6336591 0.6377363 0.6781812 0.6806804 0.6829194 0.7160677 #>  [934,] 0.53141748 0.5830712 0.5851041 0.6223723 0.6294691 0.6782171 0.6786501 #>  [935,] 0.58408332 0.6926850 0.7645570 0.7762961 0.7852675 0.8257328 0.8739690 #>  [936,] 0.69326057 0.7030779 0.7855505 0.7997620 0.8930844 0.9261243 0.9476923 #>  [937,] 0.48465047 0.5449115 0.5619332 0.6442017 0.6552396 0.6651317 0.6786689 #>  [938,] 0.39332868 0.4399251 0.4402503 0.4789899 0.5498248 0.5994483 0.6152629 #>  [939,] 0.35507916 0.6793022 0.7085112 0.7760548 0.7783694 0.7896861 0.8091958 #>  [940,] 0.42585808 0.5150722 0.6306721 0.6628752 0.7552021 0.7562659 0.7806824 #>  [941,] 0.35610869 0.4442879 0.4589280 0.4699677 0.5125991 0.5562621 0.5649581 #>  [942,] 0.19138594 0.2529641 0.2716072 0.6123626 0.6760154 0.6761486 0.6780810 #>  [943,] 1.40741364 1.4455813 1.5416634 1.5540241 1.5558768 1.6064701 1.7040478 #>  [944,] 0.59393441 0.5950373 0.6495078 0.7118188 0.7413654 0.8362681 0.8584399 #>  [945,] 0.22637231 0.3098451 0.3787513 0.4308071 0.5159859 0.5297742 0.5568308 #>  [946,] 0.35314811 0.5382567 0.7034040 0.7636421 0.8275457 0.9693369 0.9920663 #>  [947,] 0.38816198 0.5319334 0.8388913 0.8848385 0.9858956 1.0134978 1.0236668 #>  [948,] 0.51908038 0.5934849 0.6097347 0.6304772 0.7283067 0.7700442 0.7754826 #>  [949,] 1.20753557 1.2398548 1.2916023 1.4833364 1.4915420 1.5385345 1.5869602 #>  [950,] 0.26943231 0.3322444 0.5090703 0.5650558 0.5682563 0.6048892 0.6513994 #>  [951,] 0.35842184 0.4769370 0.5855041 0.5859441 0.6628317 0.6791727 0.6902448 #>  [952,] 0.41639391 0.5447243 0.6533593 0.6638760 0.7043856 0.7878179 0.7891179 #>  [953,] 0.52605952 0.6560633 0.7527298 0.7539527 0.7629061 0.7855505 0.8196034 #>  [954,] 0.08838292 0.2529641 0.2569850 0.5374131 0.6456855 0.6833317 0.7587960 #>  [955,] 0.39949311 0.4113793 0.4617537 0.4992708 0.5103729 0.5502443 0.5962816 #>  [956,] 0.54404962 0.7668322 0.8141167 0.8163748 0.8709573 0.8815883 0.8895886 #>  [957,] 0.15143474 0.2461098 0.3943062 0.4845885 0.4956085 0.5617339 0.5740830 #>  [958,] 0.41600825 0.6238536 0.6662038 0.6810228 0.7155917 0.7528905 0.7848862 #>  [959,] 0.45588750 0.4871096 0.5139798 0.5509807 0.5522579 0.5916453 0.5940435 #>  [960,] 0.47395770 0.5464878 0.6294691 0.6820315 0.7308150 0.7588367 0.7706642 #>  [961,] 0.66328066 0.7026473 0.7639937 0.8204857 0.9671354 1.0421720 1.0986190 #>  [962,] 0.61986526 0.6958242 0.6965234 0.6991414 0.7949596 0.8114358 0.8772079 #>  [963,] 0.46783934 0.5978542 0.8251622 0.8389211 0.8472959 1.0359286 1.1433125 #>  [964,] 0.57374553 0.6332853 0.6698449 0.7200645 0.7386047 0.7633089 0.7899152 #>  [965,] 0.56675712 0.6125309 0.6265087 0.6367965 0.7077662 0.7101469 0.7848625 #>  [966,] 0.45315410 0.8152400 1.1203584 1.1678320 1.1760771 1.1766243 1.2105564 #>  [967,] 0.31056069 0.4246199 0.4939033 0.5601432 0.5940355 0.6142619 0.6217134 #>  [968,] 0.28271105 0.3043697 0.4060488 0.4472058 0.5580362 0.5849656 0.6049987 #>  [969,] 0.42709473 0.4415368 0.5242814 0.6278754 0.6332853 0.7328129 0.7354620 #>  [970,] 0.77257980 1.2353075 1.2661241 1.2974768 1.3230103 1.4268751 1.4424057 #>  [971,] 0.53550364 0.6136756 0.6245538 0.6281301 0.6483605 0.6590768 0.6792932 #>  [972,] 0.52583493 0.6310396 0.7253513 0.8562062 0.8975507 0.9268107 0.9403179 #>  [973,] 0.24878787 0.3642565 0.5092601 0.5403760 0.5638342 0.5691880 0.5828230 #>  [974,] 0.41093707 0.5904913 0.6219028 0.6709111 0.8025176 0.8503493 0.8730388 #>  [975,] 0.39607462 0.4016935 0.4115608 0.4134361 0.4474183 0.5102374 0.5253970 #>  [976,] 0.60732210 0.6812634 0.7276647 0.7659112 0.7862374 0.8325580 0.8595283 #>  [977,] 0.31534910 0.3444417 0.3758254 0.4380390 0.4564030 0.4689421 0.4714573 #>  [978,] 0.29106793 0.3365350 0.4579228 0.4673750 0.5140970 0.5264769 0.5578682 #>  [979,] 0.38019022 0.3844330 0.5412494 0.5795289 0.6002218 0.6046449 0.6096288 #>  [980,] 0.38293504 0.3853515 0.4772277 0.4946492 0.5125576 0.5140970 0.5260984 #>  [981,] 0.44930565 0.4991897 0.5024724 0.5075678 0.5095265 0.5698082 0.5886179 #>  [982,] 0.32576672 0.5864215 0.6498501 0.6903962 0.7145729 0.7529725 0.7681317 #>  [983,] 0.52583493 0.7301393 0.7629718 0.7645803 0.7648869 0.7694696 0.8081339 #>  [984,] 0.46565031 0.6226865 0.6367448 0.7160005 0.7194622 0.7254220 0.7351157 #>  [985,] 0.54505599 0.5864215 0.6649147 0.7100547 0.7317614 0.8149761 0.8745557 #>  [986,] 0.46088095 0.5218273 0.6631791 0.7082992 0.7323249 0.7335451 0.7361922 #>  [987,] 0.41819026 0.7027823 0.7374447 0.7667481 0.7776833 0.8505585 0.8960262 #>  [988,] 0.29238326 0.3195099 0.4066756 0.4579228 0.4699640 0.4969147 0.5221368 #>  [989,] 0.24586548 0.3732685 0.3972267 0.4060124 0.4389759 0.4762373 0.5323430 #>  [990,] 0.95206583 1.1778154 1.1961475 1.3867377 1.4313195 1.4496576 1.4529343 #>  [991,] 0.12545037 0.2727244 0.3191901 0.4149611 0.4815106 0.5143991 0.5282475 #>  [992,] 0.37071474 0.4192430 0.4748726 0.5231161 0.5426068 0.5495174 0.5522579 #>  [993,] 0.53995973 0.5740830 0.5817713 0.5855041 0.6286005 0.6831820 0.7174377 #>  [994,] 0.37197008 0.5403689 0.5427333 0.5465498 0.5502851 0.6038085 0.6211444 #>  [995,] 0.60024124 0.6331034 0.7286179 0.7655814 0.8427633 0.8668178 0.9283940 #>  [996,] 0.51362241 0.5606684 0.8503493 0.9074640 0.9102044 0.9303635 1.0326818 #>  [997,] 0.42917682 0.4336702 0.7933013 0.9206686 0.9452430 0.9884267 0.9891479 #>  [998,] 0.36146842 0.3616241 0.3800041 0.4442879 0.4830822 0.4897215 0.5005976 #>  [999,] 0.48783344 0.5272674 0.6405465 0.6563890 0.6591978 0.7305704 0.7487108 #> [1000,] 1.57277915 1.5863349 1.6150568 1.6285816 1.6393644 1.6516360 1.7014981 #>              [,8]      [,9]     [,10] #>    [1,] 0.7756313 0.7787063 0.8255689 #>    [2,] 0.6669517 0.6939794 0.7114553 #>    [3,] 1.2850569 1.2945214 1.3252576 #>    [4,] 0.6656432 0.7231788 0.7555461 #>    [5,] 0.9218626 0.9286837 0.9314828 #>    [6,] 0.6539691 0.6851526 0.7001245 #>    [7,] 0.7225017 0.7231717 0.7462477 #>    [8,] 0.6505800 0.6908599 0.6946035 #>    [9,] 0.8229233 0.8402722 0.8415777 #>   [10,] 0.6223623 0.6261380 0.6317588 #>   [11,] 0.6931003 0.7287212 0.7538553 #>   [12,] 0.6258679 0.6321614 0.6763177 #>   [13,] 1.9157829 1.9502111 2.0193290 #>   [14,] 0.8545397 0.8634923 0.8642259 #>   [15,] 0.6363414 0.6679195 0.6809282 #>   [16,] 0.6608778 0.6998958 0.7187489 #>   [17,] 0.9317326 0.9576649 0.9699532 #>   [18,] 1.3189178 1.3624354 1.3771549 #>   [19,] 0.8799078 0.8944065 0.9017654 #>   [20,] 0.5295426 0.5295488 0.5469358 #>   [21,] 1.0991970 1.1319681 1.1338939 #>   [22,] 0.7273120 0.7502917 0.7565964 #>   [23,] 1.1628721 1.1648809 1.1958804 #>   [24,] 0.7115924 0.7211576 0.7562659 #>   [25,] 0.9815970 1.0557377 1.0603788 #>   [26,] 0.5396258 0.5856194 0.6307691 #>   [27,] 0.7318615 0.7353108 0.7474210 #>   [28,] 1.2973927 1.3340744 1.4121091 #>   [29,] 0.8003088 0.8149761 0.8392517 #>   [30,] 0.8255299 0.8300583 0.8429073 #>   [31,] 0.8710757 0.9196439 0.9279560 #>   [32,] 0.4591404 0.4938332 0.5541063 #>   [33,] 0.9284126 0.9397078 0.9703928 #>   [34,] 1.0561711 1.0973390 1.0979523 #>   [35,] 1.3892106 1.4583047 1.4753695 #>   [36,] 0.5757215 0.5850509 0.6414583 #>   [37,] 0.9287052 1.0130098 1.0299178 #>   [38,] 0.8347001 0.8418645 0.8585596 #>   [39,] 0.9154528 0.9366151 0.9970424 #>   [40,] 1.6172788 1.6499924 1.6520069 #>   [41,] 1.0459254 1.1296414 1.1383148 #>   [42,] 0.8376001 0.8875497 0.9314070 #>   [43,] 0.6530175 0.6773687 0.6810271 #>   [44,] 1.0339208 1.0758137 1.1033142 #>   [45,] 1.2693643 1.2887197 1.3004408 #>   [46,] 1.3412592 1.4109874 1.5159915 #>   [47,] 0.5817484 0.5910076 0.6141508 #>   [48,] 0.6283006 0.6679799 0.7104181 #>   [49,] 1.1842526 1.2057919 1.2350810 #>   [50,] 1.0612503 1.0654873 1.0666405 #>   [51,] 0.4622657 0.4804835 0.4950005 #>   [52,] 0.5706395 0.6092813 0.6735400 #>   [53,] 0.5516505 0.5643395 0.5856194 #>   [54,] 0.6596719 0.6666294 0.6796065 #>   [55,] 1.6731018 1.7255116 1.7851629 #>   [56,] 0.6924277 0.6973271 0.7031439 #>   [57,] 0.4953075 0.4971853 0.5106370 #>   [58,] 1.1031925 1.1151394 1.1537757 #>   [59,] 1.1030404 1.1192206 1.1218281 #>   [60,] 0.9187655 0.9550655 0.9930242 #>   [61,] 0.7492932 0.7597328 0.7602771 #>   [62,] 0.5535924 0.5660631 0.5722650 #>   [63,] 0.9172866 0.9325321 0.9576115 #>   [64,] 0.9557138 1.0780755 1.1031738 #>   [65,] 0.6236950 0.6274354 0.6783798 #>   [66,] 0.6198380 0.6287783 0.6309894 #>   [67,] 0.9774155 0.9831504 1.0524691 #>   [68,] 0.8917732 0.8978763 0.9015832 #>   [69,] 0.7667370 0.7697563 0.7702980 #>   [70,] 0.5552467 0.5566595 0.5759679 #>   [71,] 1.1690739 1.1694207 1.1732807 #>   [72,] 0.7229499 0.8365431 0.8545397 #>   [73,] 0.7879324 0.8036274 0.8053219 #>   [74,] 0.5121420 0.5162716 0.5267053 #>   [75,] 0.4462715 0.4732934 0.4793659 #>   [76,] 1.1101567 1.1147761 1.1673219 #>   [77,] 0.5328570 0.5339973 0.5344222 #>   [78,] 0.7870492 0.8257125 0.8259111 #>   [79,] 0.9720953 0.9726843 0.9742868 #>   [80,] 1.9350202 1.9478069 1.9698308 #>   [81,] 0.9228244 0.9645064 0.9948089 #>   [82,] 1.0653808 1.0927103 1.0997888 #>   [83,] 0.6789908 0.7177866 0.7463745 #>   [84,] 1.0139290 1.1063154 1.1099191 #>   [85,] 0.6678572 0.6983656 0.7039485 #>   [86,] 1.0375936 1.0858456 1.1112744 #>   [87,] 1.2421536 1.2641834 1.3117838 #>   [88,] 0.8817139 0.9281758 0.9365105 #>   [89,] 0.9566634 0.9674112 0.9748975 #>   [90,] 0.7022107 0.7285309 0.7302624 #>   [91,] 0.5072214 0.5135579 0.5333807 #>   [92,] 0.5651191 0.5772208 0.6258679 #>   [93,] 0.7646565 0.7748687 0.7915996 #>   [94,] 0.8385884 0.8443430 0.8800865 #>   [95,] 0.6748189 0.7032580 0.7215325 #>   [96,] 1.2092919 1.2107669 1.2229820 #>   [97,] 0.9880035 1.0125924 1.0142163 #>   [98,] 0.8761061 0.8803018 0.8839388 #>   [99,] 1.3010412 1.3654116 1.4308330 #>  [100,] 0.5139798 0.5210295 0.5502412 #>  [101,] 0.6490338 0.6644301 0.6794955 #>  [102,] 0.4877606 0.5068669 0.5517725 #>  [103,] 0.5322830 0.5767464 0.6026538 #>  [104,] 0.5504996 0.5815638 0.5997310 #>  [105,] 0.8581058 0.9145147 0.9357285 #>  [106,] 0.6342430 0.7466857 0.7638642 #>  [107,] 0.6771902 0.6998958 0.6999505 #>  [108,] 0.5992993 0.6131177 0.6327708 #>  [109,] 0.8882664 0.9062441 0.9306821 #>  [110,] 1.0227659 1.0547594 1.1238887 #>  [111,] 0.5592231 0.6532157 0.6583083 #>  [112,] 0.6242672 0.6306412 0.6335925 #>  [113,] 1.5446556 1.7148664 1.7154891 #>  [114,] 0.6231582 0.6413687 0.6948341 #>  [115,] 2.2266091 2.2783786 2.3645343 #>  [116,] 0.7842072 0.8227920 0.8237689 #>  [117,] 0.8005813 0.8063749 0.8144902 #>  [118,] 0.6566257 0.6607073 0.6770032 #>  [119,] 2.1082849 2.1087555 2.1117435 #>  [120,] 0.8638721 0.8702154 0.8775157 #>  [121,] 0.5870735 0.5891622 0.6252149 #>  [122,] 1.3955661 1.4481562 1.4616562 #>  [123,] 0.5249883 0.5381807 0.5644130 #>  [124,] 0.7080913 0.7206887 0.7415119 #>  [125,] 0.4935828 0.5247987 0.5328556 #>  [126,] 0.6139062 0.6171056 0.6338141 #>  [127,] 0.8375028 0.8867885 0.8930591 #>  [128,] 0.5685543 0.5709785 0.5831141 #>  [129,] 0.6422383 0.6914207 0.6946208 #>  [130,] 1.3429264 1.3529104 1.3606553 #>  [131,] 1.1642241 1.1899565 1.2184455 #>  [132,] 0.8187525 0.8698585 0.8828990 #>  [133,] 0.6384582 0.6932759 0.6994007 #>  [134,] 0.8585861 0.8627584 0.9070859 #>  [135,] 0.6771902 0.7230533 0.7291381 #>  [136,] 1.9700368 1.9885121 1.9940374 #>  [137,] 1.0657956 1.0835106 1.1037101 #>  [138,] 0.5456569 0.6447935 0.7017670 #>  [139,] 1.4910912 1.5035517 1.5196142 #>  [140,] 1.2977365 1.3144825 1.3227609 #>  [141,] 1.4047381 1.4870998 1.5199879 #>  [142,] 0.7665086 0.7809960 0.8173887 #>  [143,] 0.5381658 0.5611785 0.5940340 #>  [144,] 0.7416926 0.7819503 0.7991954 #>  [145,] 1.4236206 1.4354886 1.4984554 #>  [146,] 1.7289926 1.7348999 1.7553518 #>  [147,] 0.6210167 0.6264208 0.6415023 #>  [148,] 0.9461678 0.9689744 0.9881108 #>  [149,] 1.0539534 1.0808302 1.0812076 #>  [150,] 0.8059972 0.8191243 0.8240910 #>  [151,] 0.6803765 0.7099898 0.7120053 #>  [152,] 1.3876612 1.4485658 1.4506991 #>  [153,] 0.9493994 0.9638226 0.9799203 #>  [154,] 1.1893588 1.1936630 1.2862815 #>  [155,] 0.7015225 0.7266337 0.7279227 #>  [156,] 1.2283696 1.2748383 1.3489015 #>  [157,] 1.4918316 1.5025676 1.5455580 #>  [158,] 0.8723993 0.8828047 0.8975675 #>  [159,] 1.0612503 1.0748011 1.0935908 #>  [160,] 1.3210528 1.3573299 1.3595808 #>  [161,] 0.5151739 0.5669103 0.5903365 #>  [162,] 0.7904264 0.7956830 0.8163267 #>  [163,] 0.9200083 0.9327339 0.9856520 #>  [164,] 0.6327708 0.6628752 0.7036963 #>  [165,] 1.1063154 1.1236134 1.1274689 #>  [166,] 1.3988827 1.4229614 1.4343830 #>  [167,] 1.3451816 1.3466605 1.3487003 #>  [168,] 0.8058106 0.9234573 0.9559205 #>  [169,] 0.5295426 0.5354377 0.5548089 #>  [170,] 0.5194342 0.5389671 0.5547391 #>  [171,] 0.7337609 0.7438839 0.7920346 #>  [172,] 0.5689291 0.5752956 0.5805225 #>  [173,] 1.1830776 1.2025005 1.2053155 #>  [174,] 0.8628756 0.9021538 0.9246213 #>  [175,] 0.7563504 0.7590422 0.8162452 #>  [176,] 0.8711062 0.8733237 0.8839461 #>  [177,] 0.9573268 1.0039810 1.0489679 #>  [178,] 0.4732934 0.5059210 0.5354667 #>  [179,] 0.5981296 0.6353553 0.6387536 #>  [180,] 0.8668178 0.9165732 0.9370527 #>  [181,] 0.6583591 0.6596633 0.6980779 #>  [182,] 0.6935073 0.7323470 0.7340770 #>  [183,] 0.6705777 0.7288050 0.7723274 #>  [184,] 0.6164823 0.6277166 0.6436410 #>  [185,] 0.6025178 0.6069402 0.6460916 #>  [186,] 0.9332914 0.9535116 0.9699643 #>  [187,] 0.6269870 0.6361071 0.6518062 #>  [188,] 0.7121883 0.7175626 0.7274299 #>  [189,] 0.8039426 0.8263954 0.8350468 #>  [190,] 0.5997716 0.6131797 0.6327540 #>  [191,] 0.7284051 0.7300311 0.7463026 #>  [192,] 0.6405465 0.6589534 0.7966472 #>  [193,] 0.8386003 0.9287733 0.9467863 #>  [194,] 0.8246715 0.8279101 0.8343026 #>  [195,] 0.5891158 0.5940340 0.6797727 #>  [196,] 0.9070859 0.9634523 0.9791826 #>  [197,] 0.7666869 0.7744418 0.7964837 #>  [198,] 0.4888362 0.4962175 0.4969147 #>  [199,] 0.7109461 0.7717067 0.7886674 #>  [200,] 0.5049675 0.5167386 0.5419574 #>  [201,] 0.4726594 0.4916398 0.5243275 #>  [202,] 0.5495174 0.5583910 0.5790533 #>  [203,] 0.5729645 0.6065344 0.6437963 #>  [204,] 1.3312725 1.3450013 1.4096715 #>  [205,] 1.4372892 1.4380636 1.4559538 #>  [206,] 0.7522941 0.8134243 0.8560459 #>  [207,] 0.6883399 0.7200026 0.7315843 #>  [208,] 1.0286887 1.0708560 1.0988420 #>  [209,] 1.0023530 1.0133555 1.0401941 #>  [210,] 0.9687933 0.9970315 1.0092543 #>  [211,] 0.5785163 0.5907358 0.6192674 #>  [212,] 1.7340169 1.7439838 1.7715571 #>  [213,] 1.3124237 1.3459349 1.3732552 #>  [214,] 0.4777627 0.5630150 0.5890562 #>  [215,] 0.6606684 0.6638737 0.7165392 #>  [216,] 0.9665892 1.0656026 1.0932253 #>  [217,] 0.5054410 0.5151739 0.5568308 #>  [218,] 1.0164538 1.0375509 1.0459599 #>  [219,] 1.0803710 1.1045870 1.1058794 #>  [220,] 0.5978418 0.6004640 0.6340862 #>  [221,] 0.6160314 0.6555427 0.7691007 #>  [222,] 1.9114665 1.9693299 1.9704518 #>  [223,] 0.8935966 0.9470164 0.9734911 #>  [224,] 1.3938395 1.4516680 1.4559538 #>  [225,] 0.8481651 0.8555073 0.8603134 #>  [226,] 0.8423385 0.8521621 0.8881761 #>  [227,] 0.6951851 0.7165830 0.7191995 #>  [228,] 0.6141610 0.6369692 0.6375858 #>  [229,] 0.6796065 0.6994205 0.7464688 #>  [230,] 0.8081598 0.8192946 0.8265299 #>  [231,] 0.8694153 0.8876110 0.9142375 #>  [232,] 0.9021631 0.9181598 0.9338634 #>  [233,] 0.8928274 0.9680441 0.9874315 #>  [234,] 1.0359566 1.0431142 1.0529604 #>  [235,] 0.7914871 0.8366349 0.8474899 #>  [236,] 0.9081696 0.9133673 0.9262133 #>  [237,] 0.5774567 0.5964386 0.6109148 #>  [238,] 1.0799690 1.1982458 1.2692741 #>  [239,] 1.5711039 1.6132847 1.6245975 #>  [240,] 0.6600924 0.6793022 0.6948398 #>  [241,] 0.8474003 0.8698585 0.8789340 #>  [242,] 0.6679011 0.6806753 0.6929357 #>  [243,] 0.6292574 0.6595878 0.6627588 #>  [244,] 0.7997484 0.8316858 0.8376592 #>  [245,] 0.9498940 0.9714709 1.0076202 #>  [246,] 0.5633415 0.5709738 0.5915487 #>  [247,] 0.7010659 0.7052975 0.7293210 #>  [248,] 1.0901418 1.1074416 1.1398307 #>  [249,] 0.8189068 0.8399744 0.8456468 #>  [250,] 0.5876993 0.6020930 0.6110164 #>  [251,] 1.1308674 1.1528541 1.2036914 #>  [252,] 0.4882198 0.5001808 0.5103615 #>  [253,] 0.6369337 0.6483734 0.6559888 #>  [254,] 1.2184258 1.2278010 1.2548659 #>  [255,] 0.9953736 1.0060227 1.0122004 #>  [256,] 0.8279101 0.8324253 0.8333293 #>  [257,] 0.6064811 0.6139507 0.6184990 #>  [258,] 0.9695268 1.0218143 1.0391121 #>  [259,] 0.7059185 0.7340441 0.7374395 #>  [260,] 0.7887883 0.7956830 0.7995044 #>  [261,] 1.1306067 1.1452622 1.1770409 #>  [262,] 0.4641931 0.4897457 0.5291455 #>  [263,] 1.0113191 1.0263944 1.0289487 #>  [264,] 0.8284816 0.8369369 0.8430017 #>  [265,] 0.9386576 0.9788703 0.9894501 #>  [266,] 0.7275133 0.7323069 0.7369048 #>  [267,] 0.6501762 0.7046543 0.7148199 #>  [268,] 0.7876857 0.7966472 0.8122136 #>  [269,] 0.6175772 0.6278122 0.6478021 #>  [270,] 0.6900424 0.6961983 0.7056306 #>  [271,] 0.5940435 0.5941595 0.6030420 #>  [272,] 1.2269920 1.2864881 1.2936072 #>  [273,] 0.6706000 0.6785196 0.7041438 #>  [274,] 1.2081321 1.2210457 1.2224915 #>  [275,] 1.2105540 1.2870690 1.2924073 #>  [276,] 0.8714118 0.8987510 0.9002206 #>  [277,] 1.0555275 1.0902606 1.1429227 #>  [278,] 0.8003088 0.8014427 0.8072819 #>  [279,] 0.7031295 0.7098126 0.7285000 #>  [280,] 1.0780392 1.1282404 1.1418181 #>  [281,] 0.9190369 1.0003782 1.0126405 #>  [282,] 0.5149094 0.5256649 0.5316164 #>  [283,] 0.7883314 0.8897111 0.8987029 #>  [284,] 0.5223575 0.5271001 0.5464600 #>  [285,] 0.8678044 0.8754708 0.8760578 #>  [286,] 0.7781780 0.7956838 0.8107699 #>  [287,] 1.0517926 1.0848277 1.0908683 #>  [288,] 0.7381022 0.7383754 0.7511091 #>  [289,] 0.5619584 0.5693453 0.5997006 #>  [290,] 0.9073579 0.9128229 0.9153745 #>  [291,] 1.7124882 1.7793713 1.8108123 #>  [292,] 1.1901019 1.2856445 1.2906689 #>  [293,] 0.6945541 0.7065432 0.7273120 #>  [294,] 0.7454127 0.7592463 0.7720891 #>  [295,] 0.8100411 0.9462986 0.9545278 #>  [296,] 0.8289067 0.8384879 0.8603549 #>  [297,] 1.0540585 1.0784742 1.0894172 #>  [298,] 0.9427818 0.9603965 0.9610282 #>  [299,] 0.7499207 0.7525683 0.7871076 #>  [300,] 1.3079462 1.3554649 1.3654652 #>  [301,] 0.5708386 0.5709529 0.6173755 #>  [302,] 0.6519203 0.7009039 0.7043784 #>  [303,] 0.5318358 0.5353574 0.5781176 #>  [304,] 1.0323694 1.0350475 1.0522825 #>  [305,] 0.6428234 0.7091178 0.7109969 #>  [306,] 0.9155905 0.9306853 0.9626086 #>  [307,] 1.0320210 1.1112880 1.1620768 #>  [308,] 0.9560500 0.9650480 1.0506193 #>  [309,] 0.5763049 0.5919331 0.5964692 #>  [310,] 0.5028156 0.5363620 0.5633030 #>  [311,] 0.7085510 0.7468247 0.7671778 #>  [312,] 0.8296200 0.9239537 0.9812437 #>  [313,] 0.9081756 0.9321061 0.9459121 #>  [314,] 0.7183905 0.7234864 0.7524124 #>  [315,] 0.7869793 0.7978709 0.8104695 #>  [316,] 0.6699119 0.6862905 0.6882183 #>  [317,] 1.0987962 1.1561933 1.1681321 #>  [318,] 0.7090680 0.7471091 0.7600679 #>  [319,] 0.6644301 0.6704538 0.6710311 #>  [320,] 0.4454114 0.4618221 0.4819757 #>  [321,] 0.6814805 0.6862944 0.6910802 #>  [322,] 0.6699119 0.6786501 0.6858368 #>  [323,] 0.7065201 0.7075479 0.7088968 #>  [324,] 0.8871003 0.9002830 0.9626487 #>  [325,] 0.8509839 0.8815808 0.9190369 #>  [326,] 0.6410236 0.6753144 0.6912768 #>  [327,] 0.7242116 0.7351157 0.7625139 #>  [328,] 0.7195147 0.7515273 0.7627145 #>  [329,] 0.9159261 0.9290381 0.9366923 #>  [330,] 0.6855674 0.6961589 0.7014483 #>  [331,] 0.8114895 0.8244847 0.8283274 #>  [332,] 0.8008723 0.8702796 0.9138215 #>  [333,] 0.6333831 0.6605735 0.6639826 #>  [334,] 0.7924640 0.7997484 0.8235116 #>  [335,] 0.6713186 0.6959557 0.7001253 #>  [336,] 0.6161260 0.6188386 0.6490338 #>  [337,] 1.1254434 1.1577564 1.1709622 #>  [338,] 0.8149321 0.8444429 0.8991394 #>  [339,] 0.8059470 0.8165967 0.8433081 #>  [340,] 1.0307637 1.0382076 1.1393151 #>  [341,] 1.0929900 1.1045124 1.1055626 #>  [342,] 1.1267147 1.1288956 1.1448378 #>  [343,] 0.8309837 0.9004614 0.9180999 #>  [344,] 1.3859502 1.4077422 1.4231046 #>  [345,] 1.3865243 1.4290635 1.4291724 #>  [346,] 0.6142675 0.6272313 0.6281967 #>  [347,] 0.6237195 0.6279615 0.6437963 #>  [348,] 1.1042882 1.1214995 1.1747144 #>  [349,] 0.5584209 0.5657912 0.6062746 #>  [350,] 1.1495208 1.1516734 1.1619541 #>  [351,] 0.8421877 0.8482813 0.8503012 #>  [352,] 0.5698082 0.6483445 0.6703967 #>  [353,] 0.6892657 0.6902268 0.7556036 #>  [354,] 0.4950005 0.5125062 0.5418800 #>  [355,] 0.6495378 0.7279227 0.7396762 #>  [356,] 0.9271261 0.9368972 0.9744015 #>  [357,] 0.6691903 0.6703967 0.6916611 #>  [358,] 0.7085112 0.7659299 0.8019321 #>  [359,] 1.7991851 1.7995446 1.8281164 #>  [360,] 0.6667446 0.6770032 0.7007385 #>  [361,] 0.7521922 0.7920784 0.8043478 #>  [362,] 1.1327459 1.1413037 1.1912972 #>  [363,] 0.8506547 0.8644207 0.9367760 #>  [364,] 0.9175687 0.9503679 0.9850592 #>  [365,] 0.9885455 1.0003493 1.0011477 #>  [366,] 0.9224810 0.9588441 0.9967697 #>  [367,] 0.8238337 0.8318475 0.8581214 #>  [368,] 0.8874859 0.9247930 0.9315056 #>  [369,] 1.0353572 1.0549701 1.0851520 #>  [370,] 0.8336484 0.9879150 1.0054689 #>  [371,] 0.8053191 0.8600333 0.9019193 #>  [372,] 0.6154747 0.6378615 0.6766666 #>  [373,] 1.1117074 1.1320305 1.2210457 #>  [374,] 1.6074443 1.7646647 1.8811301 #>  [375,] 0.6690753 0.6859516 0.7243707 #>  [376,] 0.6359998 0.6631791 0.6680302 #>  [377,] 0.9947288 1.0107472 1.0128407 #>  [378,] 1.1651294 1.1804606 1.2994801 #>  [379,] 0.9482425 0.9662566 0.9843370 #>  [380,] 0.8032460 0.8087202 0.8312927 #>  [381,] 0.5895918 0.5954388 0.6059563 #>  [382,] 0.7181106 0.7476284 0.7646393 #>  [383,] 1.2869393 1.2887537 1.3134688 #>  [384,] 0.5873668 0.6788346 0.6807506 #>  [385,] 1.0759876 1.0951591 1.1062912 #>  [386,] 0.8308189 0.8781016 0.8980271 #>  [387,] 0.4717560 0.4871096 0.4940077 #>  [388,] 0.6424513 0.6514926 0.6596480 #>  [389,] 0.5789406 0.6140182 0.6162216 #>  [390,] 0.5573371 0.5735089 0.6136756 #>  [391,] 0.6142675 0.6143644 0.6500387 #>  [392,] 0.8144391 0.8688788 0.8714840 #>  [393,] 1.7287082 1.7308036 1.7552014 #>  [394,] 0.8204857 0.8207346 0.9079562 #>  [395,] 0.9215524 0.9312483 1.0527774 #>  [396,] 0.5062266 0.5098182 0.5315601 #>  [397,] 0.9054090 0.9090195 0.9149136 #>  [398,] 0.5959438 0.6359998 0.6399976 #>  [399,] 0.7800415 0.7816607 0.8063884 #>  [400,] 0.4662800 0.5162716 0.5167341 #>  [401,] 1.3794815 1.3858660 1.4781024 #>  [402,] 0.7748507 0.7925764 0.8369719 #>  [403,] 0.5903365 0.6138746 0.6241344 #>  [404,] 1.2054699 1.2146512 1.2260200 #>  [405,] 0.6956901 0.7177651 0.7178211 #>  [406,] 0.7191794 0.7250745 0.7251210 #>  [407,] 0.7098818 0.7889383 0.8119588 #>  [408,] 0.9736694 0.9741670 0.9812316 #>  [409,] 1.0894938 1.1924844 1.2344389 #>  [410,] 0.7174377 0.7374630 0.7789899 #>  [411,] 0.7716996 0.7772437 0.7893691 #>  [412,] 0.6480688 0.6751497 0.6762043 #>  [413,] 0.6630050 0.6740336 0.6979785 #>  [414,] 0.7383381 0.7422430 0.7495036 #>  [415,] 1.1303688 1.1748547 1.1865129 #>  [416,] 0.8897492 0.8995750 0.9149590 #>  [417,] 0.8187790 0.8237306 0.8574963 #>  [418,] 0.8556449 0.9356671 0.9398054 #>  [419,] 0.9089671 0.9292354 0.9598196 #>  [420,] 0.8821869 0.9119912 0.9205809 #>  [421,] 0.6343805 0.6411620 0.6571222 #>  [422,] 0.8799923 0.9249530 0.9458613 #>  [423,] 0.6952970 0.7110487 0.7113949 #>  [424,] 0.7030779 0.7129030 0.7301393 #>  [425,] 0.8288294 0.8701322 0.8715636 #>  [426,] 0.5412494 0.5424903 0.5466836 #>  [427,] 1.3755398 1.3761940 1.4291724 #>  [428,] 0.5003103 0.5281435 0.5791916 #>  [429,] 0.9006036 0.9151748 0.9978768 #>  [430,] 1.8881963 1.9214921 1.9871163 #>  [431,] 0.6479711 0.6907997 0.7158094 #>  [432,] 0.8353638 0.8397608 0.8591621 #>  [433,] 0.6158746 0.6230688 0.6422417 #>  [434,] 0.8390051 0.8469450 0.8605455 #>  [435,] 0.6735400 0.6767124 0.7199063 #>  [436,] 0.9830758 1.0111669 1.0145949 #>  [437,] 0.9392536 1.0018125 1.0076918 #>  [438,] 0.8542630 0.8665346 0.9539113 #>  [439,] 0.8627950 0.8814016 0.8931126 #>  [440,] 0.5328905 0.5345456 0.5516642 #>  [441,] 1.3773296 1.3936269 1.3972973 #>  [442,] 0.8858392 0.9843224 1.0215839 #>  [443,] 0.6112225 0.6480688 0.6716522 #>  [444,] 1.5503981 1.5557690 1.5635557 #>  [445,] 0.6566171 0.6705484 0.6723332 #>  [446,] 0.7427251 0.7512392 0.7650376 #>  [447,] 1.0047642 1.0054924 1.0718230 #>  [448,] 0.5861468 0.5923687 0.6096259 #>  [449,] 1.0508899 1.0692765 1.1116738 #>  [450,] 0.4721637 0.4948272 0.5277201 #>  [451,] 1.3386196 1.3632644 1.4414029 #>  [452,] 1.0743130 1.0975967 1.1421048 #>  [453,] 0.7123429 0.7249624 0.7652737 #>  [454,] 0.4108784 0.5381658 0.5831141 #>  [455,] 0.5601432 0.5691880 0.5754789 #>  [456,] 0.6769317 0.6794673 0.7084965 #>  [457,] 1.1040548 1.1460293 1.1665652 #>  [458,] 1.1287448 1.1796054 1.1931896 #>  [459,] 1.1247640 1.1287350 1.3121100 #>  [460,] 0.6011920 0.6227041 0.6235452 #>  [461,] 0.5525530 0.6329890 0.6504444 #>  [462,] 0.5997310 0.6281706 0.6487706 #>  [463,] 0.6827904 0.6862100 0.6984199 #>  [464,] 0.6214233 0.6229524 0.6353847 #>  [465,] 0.7532900 0.7677561 0.7829984 #>  [466,] 0.6053313 0.6176010 0.6497096 #>  [467,] 1.3085160 1.4677827 1.4721423 #>  [468,] 1.2693704 1.2847300 1.2881045 #>  [469,] 0.7261044 0.7781780 0.7877847 #>  [470,] 1.0782892 1.0990187 1.1049749 #>  [471,] 0.8153133 0.8726886 0.8828079 #>  [472,] 0.7751567 0.7942162 0.7986348 #>  [473,] 0.8704619 0.8950770 0.9021631 #>  [474,] 0.8152478 0.8310557 0.8619404 #>  [475,] 0.5976440 0.6650774 0.6765748 #>  [476,] 1.1858229 1.2356224 1.2528147 #>  [477,] 0.7902273 0.8447468 0.8717427 #>  [478,] 0.7451737 0.7689820 0.7893409 #>  [479,] 0.7648019 0.7689410 0.7762628 #>  [480,] 0.5848786 0.5918114 0.5993475 #>  [481,] 0.6797727 0.6956536 0.7241801 #>  [482,] 1.3034972 1.3056795 1.3406666 #>  [483,] 0.8528747 0.8638721 0.8884492 #>  [484,] 0.7937368 0.7947404 0.8050512 #>  [485,] 0.6555427 0.6809282 0.6959557 #>  [486,] 0.7451055 0.7464360 0.7488545 #>  [487,] 0.8335548 0.8689936 0.8808412 #>  [488,] 1.8845021 1.9379860 1.9468682 #>  [489,] 0.9637568 0.9647357 0.9741418 #>  [490,] 1.1830515 1.2344642 1.2357430 #>  [491,] 0.9389856 0.9524354 0.9548956 #>  [492,] 0.5630150 0.5739765 0.5752164 #>  [493,] 0.6298061 0.6377669 0.6453739 #>  [494,] 0.6082253 0.6276665 0.6314729 #>  [495,] 1.6485546 1.6720556 1.7137453 #>  [496,] 0.8540090 0.8750767 0.8875341 #>  [497,] 1.1511040 1.1538573 1.1740050 #>  [498,] 1.0506193 1.0660640 1.0837002 #>  [499,] 0.8253594 0.8355910 0.8607336 #>  [500,] 1.0900617 1.1107911 1.1804633 #>  [501,] 1.0186605 1.0800655 1.1129255 #>  [502,] 0.6215588 0.6495078 0.6666312 #>  [503,] 0.5492964 0.5537512 0.5709529 #>  [504,] 0.9075003 0.9159172 0.9568194 #>  [505,] 1.3225984 1.3550808 1.3633453 #>  [506,] 0.6502060 0.6521786 0.6884854 #>  [507,] 0.5264769 0.5305684 0.5419574 #>  [508,] 0.5262077 0.5416459 0.5426068 #>  [509,] 1.4275455 1.4398458 1.4493380 #>  [510,] 0.6583591 0.7050312 0.7371820 #>  [511,] 0.6121662 0.6714434 0.6784793 #>  [512,] 1.7755304 1.8249189 1.8256514 #>  [513,] 0.8520224 0.9032263 0.9187822 #>  [514,] 0.5661197 0.5770136 0.6030858 #>  [515,] 0.5273005 0.5324437 0.5548846 #>  [516,] 0.7830326 0.7852745 0.7994708 #>  [517,] 0.6277039 0.6743787 0.7120103 #>  [518,] 0.6980915 0.7094986 0.7116002 #>  [519,] 0.6500827 0.6715131 0.6736725 #>  [520,] 0.6192674 0.6304639 0.6435166 #>  [521,] 1.2701461 1.3376554 1.3684133 #>  [522,] 1.2377642 1.2870926 1.2944534 #>  [523,] 1.1255700 1.1287992 1.1520032 #>  [524,] 0.7940886 0.8326830 0.9124299 #>  [525,] 1.0741139 1.0954735 1.1391325 #>  [526,] 0.8342665 0.8596974 0.8797573 #>  [527,] 0.5338666 0.5650132 0.5772574 #>  [528,] 0.9466180 0.9689322 0.9695995 #>  [529,] 0.5697722 0.6053094 0.6062448 #>  [530,] 0.9182318 0.9449066 1.0188992 #>  [531,] 1.7506426 1.8017039 1.8026173 #>  [532,] 1.1406319 1.1454969 1.1702854 #>  [533,] 1.2004867 1.2065934 1.2260200 #>  [534,] 0.7929313 0.8004995 0.8079259 #>  [535,] 1.0362400 1.0396006 1.0398975 #>  [536,] 0.6002218 0.6150493 0.6188597 #>  [537,] 0.6685217 0.6884056 0.6916067 #>  [538,] 0.6946035 0.7468146 0.7535245 #>  [539,] 0.9837108 1.0392229 1.0523939 #>  [540,] 1.0537526 1.1058285 1.1234503 #>  [541,] 0.5976440 0.6090299 0.6536018 #>  [542,] 0.9904052 1.0018125 1.0838507 #>  [543,] 0.5267053 0.5516829 0.5716634 #>  [544,] 0.8880759 0.9127268 0.9357285 #>  [545,] 0.8418309 0.8482521 0.8777914 #>  [546,] 2.0267712 2.0649341 2.0888005 #>  [547,] 1.1391976 1.1662928 1.1730230 #>  [548,] 0.8270061 0.8363543 0.8765410 #>  [549,] 0.5313373 0.5509807 0.5557716 #>  [550,] 0.5539596 0.5990488 0.6064324 #>  [551,] 0.6096346 0.6361757 0.6452394 #>  [552,] 0.6255921 0.6728571 0.6889763 #>  [553,] 0.9664642 0.9887145 1.0019485 #>  [554,] 0.7060338 0.7145351 0.7362724 #>  [555,] 0.7115467 0.7522748 0.7710247 #>  [556,] 0.8646562 0.8811904 0.8894510 #>  [557,] 0.9551539 0.9599978 0.9921218 #>  [558,] 0.5792849 0.5967389 0.6097359 #>  [559,] 0.5679907 0.5881086 0.5891158 #>  [560,] 1.7203135 1.7394032 1.7543290 #>  [561,] 0.7283429 0.7424809 0.7475826 #>  [562,] 0.6150786 0.6649941 0.6704538 #>  [563,] 0.6165220 0.6980310 0.7064000 #>  [564,] 0.4872801 0.5022933 0.5324437 #>  [565,] 0.7467189 0.7755877 0.8207346 #>  [566,] 0.9381012 0.9740594 1.0227092 #>  [567,] 0.6982408 0.7268875 0.7376239 #>  [568,] 0.6548329 0.6818245 0.6834445 #>  [569,] 0.9291537 0.9359232 0.9363566 #>  [570,] 0.8346423 0.8577575 0.8914992 #>  [571,] 0.8234142 0.8949735 0.9408843 #>  [572,] 0.6724330 0.7625827 0.7687395 #>  [573,] 0.7645803 0.7896177 0.8039426 #>  [574,] 0.5958054 0.6134112 0.6217510 #>  [575,] 0.9341299 0.9372177 0.9507595 #>  [576,] 0.5778241 0.6219959 0.6417019 #>  [577,] 0.5227327 0.5569547 0.5844075 #>  [578,] 0.8611076 0.9047704 1.0196714 #>  [579,] 0.7229499 0.7434202 0.7667481 #>  [580,] 0.5912301 0.5941595 0.6021520 #>  [581,] 1.1843514 1.2294143 1.2707180 #>  [582,] 1.0112816 1.0355362 1.0380084 #>  [583,] 0.8193125 0.8249295 0.8271877 #>  [584,] 0.7632221 0.7637372 0.7715473 #>  [585,] 0.6429181 0.6862949 0.6917889 #>  [586,] 0.8227048 0.8587368 0.8663898 #>  [587,] 0.9346986 0.9721969 0.9807785 #>  [588,] 0.6322243 0.7195043 0.7512215 #>  [589,] 0.9205809 0.9610282 1.0008796 #>  [590,] 0.8270579 0.9132721 0.9259911 #>  [591,] 0.6462020 0.6671725 0.7023843 #>  [592,] 0.7729371 0.7753042 0.7842522 #>  [593,] 0.7447875 0.7466857 0.7584971 #>  [594,] 0.7200610 0.7222503 0.7247198 #>  [595,] 0.5973428 0.6070995 0.6207874 #>  [596,] 0.6219959 0.6330031 0.6368051 #>  [597,] 0.8353010 0.8666362 0.8708113 #>  [598,] 0.5305248 0.5537512 0.5548089 #>  [599,] 0.8317822 0.8323635 0.8438549 #>  [600,] 1.0663578 1.0747242 1.0782892 #>  [601,] 0.5020172 0.5069544 0.5370870 #>  [602,] 0.6258718 0.6311451 0.6871579 #>  [603,] 0.8234142 0.8261193 0.8837420 #>  [604,] 1.4868551 1.5365457 1.6070328 #>  [605,] 0.4721637 0.5186080 0.5329286 #>  [606,] 0.6004640 0.6022337 0.6194201 #>  [607,] 1.1155042 1.2230135 1.2263011 #>  [608,] 1.6479489 1.6555058 1.7041891 #>  [609,] 0.7190598 0.7347327 0.7699475 #>  [610,] 0.6097287 0.6176010 0.6198751 #>  [611,] 0.7284051 0.8192000 0.8409160 #>  [612,] 0.5608876 0.6082830 0.6278754 #>  [613,] 0.5125483 0.5228647 0.5269067 #>  [614,] 0.5548177 0.5617339 0.5879289 #>  [615,] 0.7161143 0.7364366 0.7973701 #>  [616,] 0.7071856 0.7080913 0.7112406 #>  [617,] 0.8203152 0.8263079 0.8715888 #>  [618,] 0.6134112 0.6279668 0.6596480 #>  [619,] 1.5827223 1.6104340 1.6168726 #>  [620,] 0.9831520 0.9952533 1.0004955 #>  [621,] 0.6122262 0.6261723 0.6345314 #>  [622,] 1.4075683 1.4157577 1.4983492 #>  [623,] 0.5547391 0.5924486 0.6036538 #>  [624,] 0.6761486 0.6921403 0.7037365 #>  [625,] 0.7424809 0.7427251 0.7486793 #>  [626,] 1.1559658 1.1720825 1.1914995 #>  [627,] 0.6948341 0.7078818 0.7616317 #>  [628,] 0.7113642 0.7711050 0.7952588 #>  [629,] 1.1205266 1.1312201 1.1548141 #>  [630,] 0.4916398 0.5112319 0.5504073 #>  [631,] 0.7043136 0.7091178 0.7172559 #>  [632,] 0.8045513 0.8165901 0.8318624 #>  [633,] 0.7239884 0.7832989 0.8036274 #>  [634,] 0.9304826 0.9351005 0.9798396 #>  [635,] 1.5390226 1.5690458 1.5992813 #>  [636,] 0.5824967 0.5850509 0.5942104 #>  [637,] 0.9827428 1.0669954 1.0757129 #>  [638,] 0.9662566 0.9695643 0.9797032 #>  [639,] 0.6915663 0.6921494 0.7065201 #>  [640,] 0.6852033 0.7206921 0.7646393 #>  [641,] 0.7285309 0.7419756 0.7552745 #>  [642,] 0.8205261 0.8472277 0.8715636 #>  [643,] 0.4673750 0.4827675 0.5188261 #>  [644,] 0.7046543 0.7525316 0.7541948 #>  [645,] 1.3527108 1.3619004 1.3931839 #>  [646,] 0.9385625 0.9557412 0.9767513 #>  [647,] 0.5801564 0.5991376 0.6014291 #>  [648,] 1.1565122 1.1902543 1.1988641 #>  [649,] 0.9721705 1.0106865 1.0217204 #>  [650,] 1.1480877 1.1781449 1.1970243 #>  [651,] 0.6806804 0.6882183 0.7327452 #>  [652,] 0.4618417 0.5096128 0.5262077 #>  [653,] 1.0897413 1.0931903 1.0996281 #>  [654,] 0.5755038 0.5916145 0.5964386 #>  [655,] 0.8449237 0.8644207 0.8729751 #>  [656,] 0.6309201 0.6422626 0.6656533 #>  [657,] 0.7421385 0.7613450 0.7709893 #>  [658,] 0.7370096 0.7405788 0.7530311 #>  [659,] 1.7637501 1.7751203 1.8854585 #>  [660,] 0.7614410 0.8110115 0.8126186 #>  [661,] 1.0816553 1.0862828 1.0988661 #>  [662,] 0.8089977 0.8331414 0.8417781 #>  [663,] 0.5524508 0.5808544 0.6088508 #>  [664,] 0.9549667 0.9882079 0.9890765 #>  [665,] 1.0428957 1.0587123 1.0898594 #>  [666,] 0.7468146 0.7551623 0.7573821 #>  [667,] 1.0444756 1.0631690 1.1058599 #>  [668,] 0.6421894 0.6728571 0.6994171 #>  [669,] 0.8999834 0.9185951 0.9560021 #>  [670,] 0.9576136 1.0598304 1.0895528 #>  [671,] 0.5650132 0.5934248 0.6514926 #>  [672,] 0.8207395 0.8253611 0.8558225 #>  [673,] 1.1400008 1.1513270 1.1578552 #>  [674,] 0.8961097 0.8963751 0.8967157 #>  [675,] 0.7247632 0.7279000 0.7311145 #>  [676,] 1.2207754 1.2979093 1.3115283 #>  [677,] 0.5363620 0.5539381 0.5549595 #>  [678,] 0.8028723 0.8532896 0.8814175 #>  [679,] 0.5416459 0.5517725 0.5767979 #>  [680,] 1.4676820 1.5014344 1.5721815 #>  [681,] 1.6064612 1.6597052 1.7300343 #>  [682,] 0.5633749 0.6062746 0.6184990 #>  [683,] 1.7487605 1.7537169 1.7722963 #>  [684,] 0.6479711 0.6956853 0.7484750 #>  [685,] 0.7944991 0.8043368 0.8097003 #>  [686,] 0.7333479 0.7366712 0.7469491 #>  [687,] 1.3468321 1.3480687 1.3649240 #>  [688,] 0.9186662 0.9484968 0.9664270 #>  [689,] 0.9304481 0.9333092 0.9781046 #>  [690,] 0.5809503 0.6317380 0.6318966 #>  [691,] 0.8783810 0.8789340 0.9084173 #>  [692,] 1.4294126 1.4609636 1.4831927 #>  [693,] 0.6951851 0.7040036 0.7109461 #>  [694,] 0.4982906 0.4990543 0.5243275 #>  [695,] 0.7038185 0.7104378 0.7136714 #>  [696,] 1.1198592 1.1532690 1.1991034 #>  [697,] 0.7471641 0.7885803 0.7944084 #>  [698,] 0.6674821 0.7006753 0.7052818 #>  [699,] 0.7712567 0.7724949 0.7776693 #>  [700,] 0.8409968 0.8447410 0.8619283 #>  [701,] 1.1124872 1.1571670 1.1607512 #>  [702,] 0.6574474 0.6766666 0.6862905 #>  [703,] 0.5546170 0.5738829 0.5917325 #>  [704,] 0.6233143 0.6430844 0.6690753 #>  [705,] 1.3248256 1.3418640 1.4403258 #>  [706,] 1.3474268 1.3953434 1.4319445 #>  [707,] 0.6643970 0.6793375 0.7271264 #>  [708,] 0.6500827 0.6657698 0.6727299 #>  [709,] 1.2369523 1.2678342 1.2752023 #>  [710,] 0.9481156 0.9575572 0.9737876 #>  [711,] 0.7690195 0.8104040 0.8502097 #>  [712,] 1.2175263 1.2389980 1.2761394 #>  [713,] 0.8284482 0.8323635 0.8397861 #>  [714,] 1.1433705 1.2213279 1.2340939 #>  [715,] 0.7994292 0.8164473 0.8218581 #>  [716,] 0.8086854 0.8114358 0.8170021 #>  [717,] 0.8798276 0.8958279 0.9059144 #>  [718,] 0.8379920 0.9325223 0.9349715 #>  [719,] 1.2395043 1.2883501 1.3095617 #>  [720,] 1.2508384 1.4084602 1.4613324 #>  [721,] 1.4587559 1.4696036 1.5107668 #>  [722,] 0.8905723 0.9071015 0.9598196 #>  [723,] 0.9115859 0.9293275 0.9347026 #>  [724,] 1.0133555 1.0666359 1.0985682 #>  [725,] 0.4591404 0.4622657 0.4776457 #>  [726,] 0.6976628 0.7031439 0.8167601 #>  [727,] 0.5125062 0.5223344 0.5584131 #>  [728,] 0.9463971 0.9662145 0.9852926 #>  [729,] 0.6521786 0.6614355 0.6803765 #>  [730,] 1.0547342 1.0805393 1.0838864 #>  [731,] 0.6159421 0.6199537 0.6471020 #>  [732,] 0.9706108 0.9979522 1.0117923 #>  [733,] 0.6942479 0.6977322 0.7249295 #>  [734,] 0.8075431 0.8157600 0.8399744 #>  [735,] 1.7140726 1.7583184 1.7759101 #>  [736,] 0.8058647 0.8253843 0.8788719 #>  [737,] 0.5873308 0.5968931 0.6145747 #>  [738,] 0.7506206 0.7617965 0.7896547 #>  [739,] 0.8077021 0.8242204 0.8602294 #>  [740,] 0.7322815 0.7447875 0.7598896 #>  [741,] 0.5827955 0.5845477 0.6021945 #>  [742,] 0.9328825 0.9604549 1.0121390 #>  [743,] 0.6264208 0.6499600 0.6600924 #>  [744,] 1.0186605 1.0250634 1.0972571 #>  [745,] 0.7245759 0.7270015 0.7506150 #>  [746,] 1.2964713 1.3620421 1.3654975 #>  [747,] 1.0085002 1.0461698 1.0477122 #>  [748,] 0.8976536 0.9860270 1.0004288 #>  [749,] 0.7848050 0.8667839 0.8703224 #>  [750,] 0.7156369 0.7271542 0.7322702 #>  [751,] 1.1482089 1.1488596 1.1511514 #>  [752,] 0.6236021 0.6513994 0.6519939 #>  [753,] 0.6494944 0.6696296 0.6848075 #>  [754,] 0.5194532 0.5198059 0.5601927 #>  [755,] 0.9106400 0.9408843 0.9613941 #>  [756,] 0.8552553 0.8696752 0.8719100 #>  [757,] 1.0530001 1.0541314 1.0739288 #>  [758,] 1.4133026 1.4989177 1.5482078 #>  [759,] 0.6038085 0.6165815 0.6906763 #>  [760,] 0.8603923 0.8727508 0.8802576 #>  [761,] 0.6199658 0.6300713 0.6422417 #>  [762,] 0.8854379 0.8952777 0.9034297 #>  [763,] 0.9093853 0.9235530 1.0908811 #>  [764,] 0.8112181 0.8301034 0.8414845 #>  [765,] 1.1185457 1.1412326 1.1689996 #>  [766,] 0.7797911 0.8103680 0.8224567 #>  [767,] 0.8360712 0.8367851 0.8421800 #>  [768,] 0.6850346 0.6963282 0.7077097 #>  [769,] 0.5319057 0.5526943 0.5578936 #>  [770,] 0.5827680 0.6231881 0.6255921 #>  [771,] 0.7534836 0.7879989 0.8193721 #>  [772,] 0.7377058 0.7442335 0.7608034 #>  [773,] 1.3370653 1.3633453 1.3644863 #>  [774,] 0.8940467 0.8971110 0.8995729 #>  [775,] 0.4941461 0.5159859 0.5228370 #>  [776,] 0.9742930 0.9756199 0.9802293 #>  [777,] 0.6019647 0.6061817 0.6077390 #>  [778,] 1.1264136 1.1303688 1.1869444 #>  [779,] 1.0410489 1.0753924 1.1111208 #>  [780,] 0.6090987 0.6104634 0.6154747 #>  [781,] 1.0200746 1.1343794 1.1607494 #>  [782,] 1.0780392 1.0804644 1.0989678 #>  [783,] 0.6800033 0.7218738 0.7419318 #>  [784,] 1.3466856 1.3531927 1.3698985 #>  [785,] 0.9607747 0.9687036 0.9878939 #>  [786,] 0.7954347 0.8092687 0.8285908 #>  [787,] 0.9218626 0.9219600 0.9708868 #>  [788,] 0.7239884 0.7336303 0.7578017 #>  [789,] 1.1754824 1.1765635 1.2394117 #>  [790,] 0.8981493 0.9139388 0.9418451 #>  [791,] 1.2049489 1.2132852 1.2186344 #>  [792,] 0.5948771 0.6360774 0.6800242 #>  [793,] 1.2115058 1.2132852 1.2276193 #>  [794,] 1.3523450 1.3974122 1.4408117 #>  [795,] 1.2953849 1.3406807 1.3897906 #>  [796,] 0.6793578 0.6980915 0.7038239 #>  [797,] 1.2512142 1.2671887 1.3147481 #>  [798,] 0.5569761 0.5688987 0.5797486 #>  [799,] 0.7361922 0.7467399 0.8261193 #>  [800,] 0.6596719 0.6644361 0.6687554 #>  [801,] 1.2324947 1.2573523 1.3116484 #>  [802,] 0.8819199 0.9156550 0.9356065 #>  [803,] 0.6556841 0.6560633 0.6724398 #>  [804,] 0.8000341 0.8117170 0.8153133 #>  [805,] 0.5592270 0.5731844 0.6098538 #>  [806,] 0.9610504 0.9827315 1.0005349 #>  [807,] 0.7152939 0.7536625 0.8107690 #>  [808,] 1.0320210 1.0563974 1.0894172 #>  [809,] 1.0289487 1.0323901 1.0356476 #>  [810,] 0.5890686 0.5997411 0.6052984 #>  [811,] 0.6164410 0.6447935 0.6483051 #>  [812,] 1.2659225 1.2955692 1.3387749 #>  [813,] 0.4885548 0.5190864 0.5282475 #>  [814,] 0.6854653 0.7044459 0.7201573 #>  [815,] 0.6630469 0.7248906 0.7532900 #>  [816,] 0.5532465 0.5699069 0.5752415 #>  [817,] 0.8867432 0.9114453 0.9912110 #>  [818,] 0.5269067 0.5353574 0.5590879 #>  [819,] 0.5523784 0.5713688 0.6264051 #>  [820,] 0.5456569 0.5533367 0.6449288 #>  [821,] 0.7524418 0.7560585 0.8389503 #>  [822,] 0.6866951 0.6867988 0.6906174 #>  [823,] 0.5068669 0.5396258 0.5581004 #>  [824,] 0.7477958 0.7492932 0.7581572 #>  [825,] 1.0376246 1.0468797 1.0844196 #>  [826,] 0.6332738 0.6560633 0.6873932 #>  [827,] 1.2196494 1.2631762 1.2685596 #>  [828,] 1.0373464 1.0375611 1.0396679 #>  [829,] 0.6450028 0.6980310 0.7079609 #>  [830,] 0.7908705 0.8186544 0.9892775 #>  [831,] 0.7450319 0.7693720 0.7887061 #>  [832,] 0.8410840 0.8444429 0.8515437 #>  [833,] 0.6131797 0.6190481 0.6239939 #>  [834,] 1.0159897 1.0858755 1.1229436 #>  [835,] 0.5273005 0.5644130 0.5685543 #>  [836,] 0.6687884 0.6793375 0.6998073 #>  [837,] 0.6757054 0.6783308 0.7038239 #>  [838,] 0.6011139 0.6039425 0.6097359 #>  [839,] 0.7246644 0.7388008 0.7614496 #>  [840,] 0.6430844 0.6728643 0.7431842 #>  [841,] 1.0529621 1.0576025 1.0945397 #>  [842,] 0.5487287 0.5611785 0.5660109 #>  [843,] 1.2836138 1.3777358 1.4272045 #>  [844,] 0.6252078 0.6766388 0.7425327 #>  [845,] 1.1660705 1.1858229 1.2476859 #>  [846,] 0.9518564 0.9874961 1.0144683 #>  [847,] 0.5066242 0.5286657 0.5315601 #>  [848,] 0.7829433 0.7891758 0.7915921 #>  [849,] 0.5575160 0.5940971 0.5972962 #>  [850,] 0.7165781 0.7524029 0.7842904 #>  [851,] 1.0273703 1.0986190 1.1496238 #>  [852,] 0.6613020 0.6644767 0.6749456 #>  [853,] 1.7899444 1.9129868 1.9159615 #>  [854,] 0.7250711 0.7422464 0.7447422 #>  [855,] 0.8726886 0.8806787 0.8842603 #>  [856,] 0.7131079 0.7191847 0.7219515 #>  [857,] 0.5487319 0.5873308 0.5884215 #>  [858,] 0.6409228 0.6499800 0.6574474 #>  [859,] 0.7296692 0.7312173 0.7389016 #>  [860,] 1.5707485 1.5732811 1.6318685 #>  [861,] 0.6724330 0.6994205 0.7205641 #>  [862,] 0.7305704 0.8420257 0.9358730 #>  [863,] 0.6309583 0.6396712 0.6470107 #>  [864,] 0.7518594 0.8107571 0.8154146 #>  [865,] 1.5171349 1.6333709 1.6341501 #>  [866,] 1.1067901 1.1163671 1.1325169 #>  [867,] 0.7302591 0.7683214 0.7788274 #>  [868,] 0.7508425 0.7558967 0.7626213 #>  [869,] 1.0627103 1.0881742 1.0887648 #>  [870,] 0.9430205 0.9640640 0.9684231 #>  [871,] 0.6483495 0.6591584 0.6706259 #>  [872,] 0.5941869 0.6019915 0.6493429 #>  [873,] 0.7602017 0.7677018 0.7748892 #>  [874,] 0.6260317 0.6279615 0.6325089 #>  [875,] 0.8555073 0.8609105 0.8609558 #>  [876,] 1.0640753 1.0800655 1.0894698 #>  [877,] 0.6168438 0.6473558 0.6671920 #>  [878,] 0.6986516 0.7210840 0.7400687 #>  [879,] 0.6190664 0.6203074 0.6247881 #>  [880,] 0.6614359 0.6683329 0.6698993 #>  [881,] 0.6499800 0.7098818 0.7184881 #>  [882,] 0.6062581 0.6069419 0.6375760 #>  [883,] 0.6952933 0.6969779 0.7212692 #>  [884,] 0.5924486 0.6121059 0.6278122 #>  [885,] 0.9094123 0.9232645 0.9262252 #>  [886,] 0.8750848 0.8782525 0.8843168 #>  [887,] 0.7175828 0.7365942 0.7878638 #>  [888,] 0.7200610 0.7463957 0.7706642 #>  [889,] 0.5783218 0.5836065 0.6698993 #>  [890,] 0.8255299 0.8329353 0.8422431 #>  [891,] 0.6019405 0.6039243 0.6482349 #>  [892,] 1.0033903 1.0128148 1.0954905 #>  [893,] 0.4877180 0.4935828 0.5177376 #>  [894,] 0.7980186 0.7997437 0.8360028 #>  [895,] 1.3223704 1.4061203 1.4109874 #>  [896,] 0.7471775 0.7641996 0.7720486 #>  [897,] 1.1805517 1.2348098 1.3194719 #>  [898,] 1.3268011 1.3556734 1.3664335 #>  [899,] 0.6997413 0.7229473 0.7379794 #>  [900,] 0.5798291 0.5948784 0.6504444 #>  [901,] 0.7230323 0.7479795 0.7548000 #>  [902,] 2.1357824 2.1851253 2.2849137 #>  [903,] 0.5186080 0.5450802 0.5499770 #>  [904,] 1.3172311 1.3309602 1.3318829 #>  [905,] 0.5347056 0.5464641 0.5536463 #>  [906,] 0.7882201 0.8173887 0.8520224 #>  [907,] 0.6509460 0.6613020 0.7088266 #>  [908,] 0.5811599 0.6292574 0.6610077 #>  [909,] 0.6084992 0.6150740 0.6203669 #>  [910,] 0.5613763 0.5624489 0.5633749 #>  [911,] 1.0066512 1.0284918 1.0474054 #>  [912,] 0.6139653 0.6410236 0.7374395 #>  [913,] 0.6791727 0.6873950 0.7010664 #>  [914,] 0.6490367 0.6619224 0.6854653 #>  [915,] 1.0153530 1.0444118 1.0491733 #>  [916,] 0.9039617 0.9129511 0.9184793 #>  [917,] 0.8087617 0.8611320 0.9622713 #>  [918,] 1.0040252 1.0174762 1.0176755 #>  [919,] 0.7207361 0.7560781 0.7776236 #>  [920,] 0.8307994 0.9296337 1.0275609 #>  [921,] 1.2034181 1.2583172 1.2992574 #>  [922,] 0.9937390 1.0076918 1.0170964 #>  [923,] 0.8265963 0.8567224 0.8729395 #>  [924,] 0.6953066 0.7766902 0.7896177 #>  [925,] 1.0588853 1.0743447 1.1379793 #>  [926,] 0.9805062 1.0383080 1.0667349 #>  [927,] 0.6611427 0.6708780 0.7145552 #>  [928,] 1.1985841 1.2033075 1.2172651 #>  [929,] 0.7250711 0.7608011 0.7997620 #>  [930,] 0.7453670 0.7703197 0.7783531 #>  [931,] 0.9782801 0.9860270 0.9914032 #>  [932,] 1.2283935 1.2403447 1.2496634 #>  [933,] 0.7285778 0.7353108 0.7435754 #>  [934,] 0.7012101 0.7441339 0.7463957 #>  [935,] 0.8742367 0.9300695 0.9775383 #>  [936,] 1.0334673 1.0521770 1.0804639 #>  [937,] 0.7893899 0.8057973 0.8805693 #>  [938,] 0.6546197 0.6584168 0.6608932 #>  [939,] 0.8498462 0.8684979 0.9262133 #>  [940,] 0.8547014 0.8745855 0.8871988 #>  [941,] 0.5654036 0.6203074 0.6414583 #>  [942,] 0.6847137 0.6848075 0.6916611 #>  [943,] 1.7375316 1.7462456 1.7733016 #>  [944,] 0.8865301 0.8917457 0.8952875 #>  [945,] 0.5591807 0.6375966 0.6412243 #>  [946,] 0.9955098 1.0000243 1.0842216 #>  [947,] 1.0393500 1.0575000 1.0635721 #>  [948,] 0.8033501 0.8602234 0.9003376 #>  [949,] 1.8457247 1.8802725 1.8858596 #>  [950,] 0.6902268 0.7202659 0.7426085 #>  [951,] 0.7156082 0.7753842 0.7984359 #>  [952,] 0.8040196 0.8053847 0.8981993 #>  [953,] 0.8417582 0.8568311 0.8614136 #>  [954,] 0.7744585 0.7779968 0.7831374 #>  [955,] 0.5982749 0.6024639 0.6090581 #>  [956,] 0.9294160 0.9404047 0.9468309 #>  [957,] 0.6309583 0.6934806 0.7507638 #>  [958,] 0.7852306 0.8623653 0.8681874 #>  [959,] 0.6171056 0.6254349 0.6344209 #>  [960,] 0.8037410 0.8159587 0.8654230 #>  [961,] 1.1139701 1.1396827 1.1751159 #>  [962,] 0.9173587 0.9611089 0.9945659 #>  [963,] 1.1723234 1.2554733 1.2795460 #>  [964,] 0.7970603 0.8270644 0.8365431 #>  [965,] 0.7956838 0.8316858 0.8505911 #>  [966,] 1.2684235 1.3073332 1.3271170 #>  [967,] 0.6283006 0.6774709 0.7308427 #>  [968,] 0.6084799 0.6142619 0.6369692 #>  [969,] 0.7354855 0.7699693 0.7938203 #>  [970,] 1.4756557 1.4984280 1.5770043 #>  [971,] 0.7275766 0.7315843 0.7532773 #>  [972,] 1.0334673 1.0748011 1.0897574 #>  [973,] 0.5965684 0.6350664 0.6368051 #>  [974,] 0.8912173 0.8981499 0.9466909 #>  [975,] 0.5352457 0.6000076 0.6113217 #>  [976,] 0.9180161 0.9188166 0.9744841 #>  [977,] 0.5096128 0.5282940 0.5344222 #>  [978,] 0.6063459 0.6113217 0.6219350 #>  [979,] 0.6224880 0.6285687 0.6511806 #>  [980,] 0.5330191 0.6328009 0.6723332 #>  [981,] 0.6164410 0.6196762 0.6428234 #>  [982,] 0.8072819 0.8716676 0.8842603 #>  [983,] 0.8647478 0.9012213 0.9081826 #>  [984,] 0.7464688 0.7729635 0.7933715 #>  [985,] 0.9312126 0.9373814 0.9664642 #>  [986,] 0.7363033 0.7752902 0.7895805 #>  [987,] 0.9380697 0.9545759 0.9546495 #>  [988,] 0.5319057 0.5352457 0.5388966 #>  [989,] 0.6108339 0.6309713 0.6499600 #>  [990,] 1.4816824 1.5502742 1.5815809 #>  [991,] 0.5529307 0.6495981 0.6686748 #>  [992,] 0.5813276 0.5823722 0.6239009 #>  [993,] 0.7426340 0.7438238 0.7465465 #>  [994,] 0.6441982 0.6531230 0.6779218 #>  [995,] 0.9586978 1.0058711 1.0388588 #>  [996,] 1.0666812 1.0773295 1.0795818 #>  [997,] 1.0056209 1.1509948 1.1565760 #>  [998,] 0.5134770 0.5140871 0.5440550 #>  [999,] 0.7816013 0.8152418 0.8573154 #> [1000,] 1.7057775 1.7099707 1.7104890 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 0"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 0.003162278"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample  cd45 pstat5   cd34 outcome class  multiclass event time_to_event #>    <chr>  <dbl>  <dbl>  <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 39     0.644  0.118 0.974     1.52 class2 class2         1         11.0  #>  2 1      0.153  0.698 0.193     2.44 class2 class1         0          6.84 #>  3 15     0.470  0.889 0.450     4.77 class1 class1         0          9.65 #>  4 25     0.219  0.394 0.119     1.29 class2 class1         0          7.34 #>  5 93     0.912  0.159 0.556     2.46 class2 class3         1          7.45 #>  6 2      0.427  0.884 0.0596    3.71 class1 class1         0          7.81 #>  7 41     0.428  0.678 0.932     2.54 class2 class2         1          9.72 #>  8 37     0.341  0.945 0.423     6.02 class1 class2         1          7.34 #>  9 79     0.452  0.453 0.230     1.89 class2 class3         1         11.1  #> 10 88     0.945  0.190 0.568     4.54 class1 class3         1         10.9  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>                cd45      pstat5        cd34 #>   [1,]  1.283521685  0.96515700  1.10019693 #>   [2,] -1.073738265  0.46640733 -0.44812674 #>   [3,] -0.387489066 -1.62370130  0.48375752 #>   [4,] -0.312018768  0.21659241  1.29991230 #>   [5,] -1.440500778  0.86112942 -0.75574602 #>   [6,] -0.400939188 -0.99366374 -1.01992969 #>   [7,]  0.363432498 -0.01818634  0.09528527 #>   [8,]  0.385108674  0.33969737  0.93609397 #>   [9,]  1.108224762  0.16504853 -0.88714251 #>  [10,]  0.341753710  0.24690340  0.76004170 #>  [11,] -0.803695080  0.11783008  0.63175731 #>  [12,]  1.300829920 -1.07512619  1.19057548 #>  [13,]  0.461025012 -0.93778687  0.88703439 #>  [14,]  0.006289479  1.63635966 -1.40833669 #>  [15,]  1.218411727  0.86810836 -0.45100612 #>  [16,] -0.836891317 -0.58690553  1.62309472 #>  [17,]  1.096376483  0.65524320  1.43564574 #>  [18,]  1.368741478  0.88512650  1.04452735 #>  [19,]  0.549644623  1.64956921 -1.68492788 #>  [20,]  1.607447684  0.57263081 -0.05136409 #>  [21,] -1.163896962  0.78659287  1.57380741 #>  [22,]  0.714196027  1.26277457  0.55128927 #>  [23,] -0.543742732  0.39257713  0.36229855 #>  [24,]  0.876213976 -1.48628526 -0.25019316 #>  [25,] -0.405843621 -1.63928193 -1.15480484 #>  [26,]  0.981216586 -0.46157412  0.82137384 #>  [27,]  1.578470547  0.17627233  1.47507818 #>  [28,]  0.528037419 -0.53156668 -0.53392100 #>  [29,]  0.758245049 -0.20663406 -0.55243459 #>  [30,]  0.661264582 -0.80137989 -0.27038351 #>  [31,] -1.421883433 -1.76624921 -1.58929714 #>  [32,] -0.478889531 -1.01371339 -0.21824315 #>  [33,]  0.661525235  1.34714058  1.07730000 #>  [34,] -1.554953521  0.47028558 -1.43041351 #>  [35,]  0.731143593  1.59247694  1.45064578 #>  [36,] -0.734763298 -0.70510662 -0.63106712 #>  [37,]  0.898227157 -0.10059060 -0.94637349 #>  [38,] -0.082611040  0.43143846 -1.21866247 #>  [39,] -0.644623842 -0.14661809  1.56571760 #>  [40,] -1.318631409 -1.74073593  1.45389798 #>  [41,] -0.922213316 -0.62666212  1.39311266 #>  [42,]  0.385560116  0.87075567 -0.27830406 #>  [43,]  0.493958441  1.05462484 -0.88319457 #>  [44,]  1.369838408  0.37495990 -1.01989690 #>  [45,] -1.491135141  0.36944263  0.58338233 #>  [46,]  0.287984304  0.81345619 -1.16055161 #>  [47,]  1.429797352  1.65688671  0.91927325 #>  [48,]  1.230338407  0.05925837 -0.78544577 #>  [49,]  0.115608178 -0.84778366  0.24339492 #>  [50,]  0.693373233 -0.94025332  1.41810294 #>  [51,]  1.680939367 -1.60538505 -1.13053380 #>  [52,] -0.167497676  0.12271253  1.06790508 #>  [53,] -1.577376473  0.10898213 -0.98704093 #>  [54,] -0.713631620  1.16734810  0.68858773 #>  [55,]  0.129077061  1.51843280 -1.63388008 #>  [56,]  1.627857630 -0.82597431 -1.66383594 #>  [57,] -1.630772464  1.40183330 -1.40708154 #>  [58,] -0.103586679  1.74266368  1.33926460 #>  [59,] -1.096917709 -0.94563719 -0.82272031 #>  [60,] -0.499305672  1.42399184  0.95537034 #>  [61,] -0.886942669 -0.36037508  1.45927635 #>  [62,]  1.414815535 -0.30005155 -1.59471580 #>  [63,]  1.082151939 -0.34617415  0.68880324 #>  [64,] -1.139099612 -1.84578673 -1.00369044 #>  [65,] -1.196537793  0.10963574  0.76372988 #>  [66,] -1.599563586 -1.55089039 -0.66371360 #>  [67,] -1.502482674 -0.68818072 -1.28287233 #>  [68,]  0.677081520  1.16674413 -1.36240780 #>  [69,] -0.199836834 -1.69845090 -0.17240931 #>  [70,]  0.274274647  0.55824825 -1.17794690 #>  [71,] -0.181518018  0.77612355  0.55541616 #>  [72,]  1.490075060 -1.72770385  0.69416795 #>  [73,] -1.235493464  1.31281577 -0.15630921 #>  [74,] -1.668774386  0.97361487 -1.11302325 #>  [75,]  0.635571042  0.16435436  0.64818684 #>  [76,] -1.469091151 -0.77467621  0.86298477 #>  [77,]  0.328000256 -0.73160694 -1.46424596 #>  [78,] -0.994168436 -1.49661614 -1.17371660 #>  [79,] -1.298830342 -0.78217158  0.16547043 #>  [80,] -0.877476759  0.26780720  0.48698855 #>  [81,] -0.509389624  0.17170343 -0.23087815 #>  [82,]  0.983094904 -0.53649988  1.06446045 #>  [83,] -0.389820878 -1.81454610  0.47909144 #>  [84,]  1.255394656  0.14987307  0.52190355 #>  [85,]  1.602962021  0.78868821 -0.32355584 #>  [86,]  0.311594445 -0.65197057  0.66073893 #>  [87,] -1.411533795  0.65067429  0.86894251 #>  [88,]  1.181565977 -1.51731461 -0.16319252 #>  [89,]  0.832412853 -1.19957773  1.44085235 #>  [90,]  0.603326689  0.11461101 -0.44632655 #>  [91,] -1.563413643  0.36613249  0.88798595 #>  [92,] -0.247842409  1.01393416  0.23856540 #>  [93,]  0.089470060  1.17138290 -1.20049047 #>  [94,] -0.685820210  0.12151444 -0.78439391 #>  [95,] -0.156402638  0.54919712 -0.62939973 #>  [96,]  0.096989064  1.44186179 -0.12225607 #>  [97,]  0.533751304  1.14890174 -0.51615978 #>  [98,]  1.055776587 -0.69371039  1.53801664 #>  [99,] -1.552512127  0.15460739 -0.80150446 #> [100,] -0.797889311 -1.62003142 -0.79523861"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1]  0.828286711  3.396937793  5.247078826  4.699993431  3.290441520 #>   [6]  4.343990166  3.573766444  4.076345559  5.466377152  7.870434812 #>  [11]  4.588515886  6.768890161  2.287125979  0.874235627  2.040407456 #>  [16]  6.314100841  3.372727564  2.738737431  4.651066710  7.602203824 #>  [21]  0.351767777  5.350528415  2.705255936  4.282800327  5.170074506 #>  [26] -0.652036240  5.319259670  3.927156788  3.257196507  3.622559804 #>  [31]  1.539780036  6.084325615  5.194192789  2.426798029  7.154693522 #>  [36]  5.793422831  2.910226004  2.433495221  3.717288110  1.921600621 #>  [41]  2.111919997  4.888103197  0.449382497  4.220944045  3.363981587 #>  [46]  2.234807604  1.545877921  5.507858637  2.681061236  2.305554573 #>  [51]  3.091079158  2.981533457  0.520257750  3.578155510  4.607666281 #>  [56]  2.553459284  3.402683599  5.931313253  3.379365771  5.793940066 #>  [61]  0.757855936  0.793349057  1.428415152  7.269955618  5.641658030 #>  [66]  1.503308471  4.819243409  6.267971555  4.048445153  3.179031654 #>  [71]  4.229746325  5.806739516  6.525065172  4.263115341  3.684920345 #>  [76]  6.018734648  0.075872818  4.703852114  2.958903716  5.588453513 #>  [81]  0.005076438  2.775559488  5.092729803  3.542603091  2.342633574 #>  [86]  5.476805496  4.407806766  3.930795855  0.179762007  2.730296158 #>  [91]  3.147778914  4.783546214  3.889491933  0.898828627  2.031567029 #>  [96]  2.158195493  3.338551201  4.715901565  3.197040302  3.668526467"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>        cd45   cd38     cd34    cd19 cluster_id .flowsom_metacluster #>       <dbl>  <dbl>    <dbl>   <dbl> <chr>      <chr>                #>  1  0.628   -0.157  1.26     0.358  v          1                    #>  2  0.123    0.770  2.24     1.41   k          1                    #>  3  0.368   -0.765 -0.806   -0.958  e          1                    #>  4 -0.727    0.778 -1.00    -0.809  i          2                    #>  5 -2.57     0.506 -0.491   -0.917  y          1                    #>  6  0.211    0.613 -1.04    -1.25   b          1                    #>  7 -0.735    0.339 -0.224    0.437  k          1                    #>  8 -0.561    0.425  1.53    -0.660  w          3                    #>  9 -0.00155 -0.310 -0.990   -0.0668 m          1                    #> 10 -0.707    0.141  0.00556 -1.80   x          1                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>        cd45   cd38     cd34    cd19 cluster_id .phenograph_metacluster #>       <dbl>  <dbl>    <dbl>   <dbl> <chr>      <chr>                   #>  1  0.628   -0.157  1.26     0.358  v          1                       #>  2  0.123    0.770  2.24     1.41   k          2                       #>  3  0.368   -0.765 -0.806   -0.958  e          2                       #>  4 -0.727    0.778 -1.00    -0.809  i          3                       #>  5 -2.57     0.506 -0.491   -0.917  y          1                       #>  6  0.211    0.613 -1.04    -1.25   b          3                       #>  7 -0.735    0.339 -0.224    0.437  k          2                       #>  8 -0.561    0.425  1.53    -0.660  w          1                       #>  9 -0.00155 -0.310 -0.990   -0.0668 m          2                       #> 10 -0.707    0.141  0.00556 -1.80   x          2                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 6                      #>  2 3                      #>  3 3                      #>  4 5                      #>  5 5                      #>  6 2                      #>  7 3                      #>  8 7                      #>  9 2                      #> 10 9                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 1                    #>  2 6                    #>  3 6                    #>  4 7                    #>  5 4                    #>  6 1                    #>  7 1                    #>  8 6                    #>  9 1                    #> 10 1                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 1                    #>  2 2                    #>  3 2                    #>  4 1                    #>  5 4                    #>  6 4                    #>  7 1                    #>  8 2                    #>  9 2                    #> 10 2                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 2                         #>  2 4                         #>  3 1                         #>  4 9                         #>  5 4                         #>  6 3                         #>  7 9                         #>  8 9                         #>  9 10                        #> 10 7                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 7                   #>  2 5                   #>  3 6                   #>  4 10                  #>  5 6                   #>  6 5                   #>  7 6                   #>  8 5                   #>  9 7                   #> 10 3                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 1                       #>  2 2                       #>  3 3                       #>  4 1                       #>  5 3                       #>  6 2                       #>  7 1                       #>  8 4                       #>  9 1                       #> 10 2                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1  4.13 #>  2  3.63 #>  3  2.23 #>  4  3.29 #>  5  3.98 #>  6  3.30 #>  7  3.59 #>  8  4.60 #>  9  4.85 #> 10  4.24 #> 11  4.11 #> 12  3.92 #> 13  5.26 #> 14  4.78 #> 15  4.79 #> 16  5.52 #> 17  2.95 #> 18  3.15 #> 19  4.42 #> 20  4.80"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>       cd45   cd38   cd34      cd19   .pc1   .pc2    .pc3    .pc4 #>      <dbl>  <dbl>  <dbl>     <dbl>  <dbl>  <dbl>   <dbl>   <dbl> #>  1 -0.849   2.27  -0.698 -0.535     0.170 -1.97  -0.767  -1.26   #>  2 -2.26   -2.32  -1.72   0.0520   -3.40   0.521 -0.0338  0.490  #>  3 -0.619  -0.352 -0.172 -0.000278 -0.542  0.117  0.191  -0.146  #>  4  2.99    0.215  1.27  -0.397     2.83   0.293  0.648   1.32   #>  5  1.19   -0.437  1.20   0.201     1.39   0.986  0.811   0.370  #>  6 -0.0840  0.739  1.94  -1.64      1.45  -1.02   2.41   -0.614  #>  7 -0.479   0.458  0.644  0.198     0.415  0.161  0.394  -0.891  #>  8  0.784   1.46   0.470 -1.37      1.47  -1.67   0.642   0.0124 #>  9  0.296  -0.914 -0.132 -0.0560   -0.204  0.459  0.270   0.711  #> 10 -1.07    0.279  0.357  0.204    -0.208  0.111  0.347  -1.04   #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>       cd45   cd38   cd34      cd19  .tsne1 .tsne2 #>      <dbl>  <dbl>  <dbl>     <dbl>   <dbl>  <dbl> #>  1 -0.849   2.27  -0.698 -0.535    -2.52    4.22  #>  2 -2.26   -2.32  -1.72   0.0520   -0.0584 -5.27  #>  3 -0.619  -0.352 -0.172 -0.000278  0.104  -0.821 #>  4  2.99    0.215  1.27  -0.397     3.06    3.02  #>  5  1.19   -0.437  1.20   0.201     2.35    0.765 #>  6 -0.0840  0.739  1.94  -1.64      4.12    1.21  #>  7 -0.479   0.458  0.644  0.198     0.595   0.736 #>  8  0.784   1.46   0.470 -1.37      4.29    0.753 #>  9  0.296  -0.914 -0.132 -0.0560   -1.57   -1.56  #> 10 -1.07    0.279  0.357  0.204     0.675  -0.512 #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>       cd45   cd38   cd34      cd19  .umap1 .umap2 #>      <dbl>  <dbl>  <dbl>     <dbl>   <dbl>  <dbl> #>  1 -0.849   2.27  -0.698 -0.535     3.11   -5.18  #>  2 -2.26   -2.32  -1.72   0.0520    0.826   4.38  #>  3 -0.619  -0.352 -0.172 -0.000278 -1.99   -0.280 #>  4  2.99    0.215  1.27  -0.397    -1.00    0.995 #>  5  1.19   -0.437  1.20   0.201    -1.17    0.564 #>  6 -0.0840  0.739  1.94  -1.64     -0.0902  0.282 #>  7 -0.479   0.458  0.644  0.198     1.51   -2.64  #>  8  0.784   1.46   0.470 -1.37      0.333   0.770 #>  9  0.296  -0.914 -0.132 -0.0560   -0.506   3.61  #> 10 -1.07    0.279  0.357  0.204     1.60   -2.60  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>       .pc1    .pc2 #>      <dbl>   <dbl> #>  1 -0.0984 -1.24   #>  2 -1.48    0.466  #>  3  0.542   0.727  #>  4 -0.832  -0.0868 #>  5 -0.569  -0.622  #>  6  0.771   1.26   #>  7 -0.245  -1.17   #>  8  1.11   -0.518  #>  9  1.32    1.62   #> 10  0.468  -0.405  #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1    PC2    PC3    PC4 #>     <dbl>  <dbl>  <dbl>  <dbl> #>  1  1.23  -0.478  1.02  -1.12  #>  2  0.949 -0.243 -0.168  0.837 #>  3 -3.08   0.226  0.809 -1.32  #>  4 -0.597  0.198 -1.24   1.50  #>  5  0.201 -0.925  2.04   1.36  #>  6 -1.14  -0.479  0.690  0.497 #>  7 -0.108 -0.644 -0.961  0.877 #>  8 -0.203  0.357 -0.476 -0.660 #>  9 -0.195  0.634  0.871  0.127 #> 10 -0.400 -0.276  1.51  -1.37  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>    .tsne1  .tsne2 #>     <dbl>   <dbl> #>  1  4.83  -0.178  #>  2  1.05   1.83   #>  3 -6.59   5.33   #>  4 -1.13  -0.0796 #>  5 -2.97  -2.20   #>  6 -0.386 10.0    #>  7 -6.02  -3.39   #>  8  5.84   0.503  #>  9  2.83   0.160  #> 10  1.66   8.05   #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -1.01   2.67  #>  2 -3.98  -3.03  #>  3 -1.51  -7.65  #>  4  5.46   0.666 #>  5 -0.102  3.68  #>  6 -3.74   2.05  #>  7 -0.986  8.40  #>  8 -3.08   0.984 #>  9 -0.687 -1.07  #> 10 -6.13  -7.09  #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>     .umap1  .umap2 #>      <dbl>   <dbl> #>  1  0.723  -1.11   #>  2 -3.09   -0.870  #>  3  0.251  -4.55   #>  4  3.61    2.63   #>  5 -0.0189 -4.65   #>  6  1.68    2.21   #>  7 -0.0286 -4.67   #>  8 -3.18    1.37   #>  9  3.80   -0.0906 #> 10 -4.03    0.953  #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -6.43    3.50 #>  2 -0.122   5.20 #>  3  4.31   -1.69 #>  4  1.01   -3.88 #>  5  1.81    1.87 #>  6 -5.16   -4.94 #>  7  3.00    1.29 #>  8 -2.85    4.73 #>  9  4.08   -3.26 #> 10 -0.271  -2.13 #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>      UMAP1     UMAP2 #>      <dbl>     <dbl> #>  1 -4.18   -1.19     #>  2 -1.54    0.819    #>  3  2.76   -0.342    #>  4 -4.00   -0.525    #>  5  2.52   -0.817    #>  6  5.00    1.59     #>  7 -0.423  -1.95     #>  8 -0.250   0.214    #>  9 -0.484   0.000615 #> 10 -0.0559  1.41     #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            NaN #>  2            NaN #>  3            NaN #>  4            NaN #>  5            NaN #>  6            NaN #>  7            NaN #>  8            NaN #>  9            NaN #> 10            NaN #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0.333 #>  2          0.833 #>  3          0.167 #>  4          0     #>  5          0.5   #>  6          0.667 #>  7          0     #>  8          0.167 #>  9          0.167 #> 10          0.333 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            1   #>  2            1   #>  3            0.4 #>  4            1   #>  5            1   #>  6            0.7 #>  7            1   #>  8            1   #>  9            1   #> 10            1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/35]> Bootstrap01 #>  2 <split [100/37]> Bootstrap02 #>  3 <split [100/36]> Bootstrap03 #>  4 <split [100/31]> Bootstrap04 #>  5 <split [100/29]> Bootstrap05 #>  6 <split [100/31]> Bootstrap06 #>  7 <split [100/40]> Bootstrap07 #>  8 <split [100/37]> Bootstrap08 #>  9 <split [100/36]> Bootstrap09 #> 10 <split [100/41]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)      3.31   #> 2 pstat5           1.04   #> 3 cd45             0.957  #> 4 cd34            -0.0794  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 0.25 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 3 × 2 #>   feature      coefficient #>   <chr>              <dbl> #> 1 pstat5      -0.0410      #> 2 cd45        -0.0208      #> 3 (Intercept) -0.000000201  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 3 × 2 #>   feature coefficient #>   <chr>         <dbl> #> 1 cd34        -0.151  #> 2 cd45         0.0554 #> 3 pstat5      -0.0173"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>       cd45    cd38   cd34    cd19 .upsample_cluster #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>             #>  1  0.171   0.807  -1.08   0.0369 a                 #>  2  0.0385 -0.958  -0.135 -0.803  b                 #>  3 -0.237   0.0523 -0.476  1.76   a                 #>  4 -2.81    2.44   -0.327  1.66   a                 #>  5  0.924  -3.16    1.25   0.618  a                 #>  6  0.713  -0.754   0.474 -1.04   b                 #>  7 -1.11    1.59    0.869 -0.0695 b                 #>  8 -1.22    0.567  -2.44  -0.960  a                 #>  9  0.0476  1.03    0.421 -0.484  b                 #> 10  0.504  -0.827  -0.269  0.245  a                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>       cd45    cd38   cd34    cd19 .upsample_cluster #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>             #>  1  0.171   0.807  -1.08   0.0369 a                 #>  2  0.0385 -0.958  -0.135 -0.803  a                 #>  3 -0.237   0.0523 -0.476  1.76   b                 #>  4 -2.81    2.44   -0.327  1.66   a                 #>  5  0.924  -3.16    1.25   0.618  a                 #>  6  0.713  -0.754   0.474 -1.04   a                 #>  7 -1.11    1.59    0.869 -0.0695 b                 #>  8 -1.22    0.567  -2.44  -0.960  a                 #>  9  0.0476  1.03    0.421 -0.484  b                 #> 10  0.504  -0.827  -0.269  0.245  a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 a                 #>  4 b                 #>  5 b                 #>  6 b                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 a                 #>  4 b                 #>  5 b                 #>  6 b                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 a                 #>  3 a                 #>  4 a                 #>  5 a                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 a                 #>  4 a                 #>  5 a                 #>  6 b                 #>  7 a                 #>  8 a                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0994","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.4","title":"tidytof 0.99.4","text":"NEW FEATURES Update tests. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0993","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.3","title":"tidytof 0.99.3","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992-1","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Removed unnecessary files caused build fail. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
