[{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tidytof","title":"Contributing to tidytof","text":"outlines propose change tidytof. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tidytof","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tidytof","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tidytof","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"keyes-timothy/tidytof\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tidytof","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tidytof","text":"Please note tidytof project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Timothy Keyes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"clustering-with-tof_cluster","dir":"Articles","previous_headings":"","what":"Clustering with tof_cluster()","title":"Clustering and metaclustering","text":"demonstrate, can apply PhenoGraph clustering algorithm tidytof’s built-phenograph_data. Note phenograph_data contains 3000 total cells (1000 3 clusters identified original PhenoGraph publication). demonstration purposes, also metacluster PhenoGraph clusters using k-means clustering. outputs tof_cluster() tof_metacluster() tof_tbl identical input tibble, now addition additional column (case, “.phenograph_cluster” “.kmeans_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy clustering procedure compared original clustering PhenoGraph paper. , can see clustering procedure groups cells PhenoGraph cluster one another (small number mistakes). change clustering algorithm tof_cluster uses, alter method flag. change columns used compute clusters, change cluster_cols flag. finally, want return one-column tibble includes cluster labels (opposed cluster labels added new column input tof_tbl), set augment FALSE.","code":"data(phenograph_data)  set.seed(203L)  phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"),         num_neighbors = 50L,         distance_function = \"cosine\",         method = \"phenograph\"     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster,         metacluster_cols = starts_with(\"cd\"),         num_metaclusters = 3L,         method = \"kmeans\"     )  phenograph_clusters |>     dplyr::select(sample_name, .phenograph_cluster, .kmeans_metacluster) |>     head() #> # A tibble: 6 × 3 #>   sample_name            .phenograph_cluster .kmeans_metacluster #>   <chr>                  <chr>               <chr>               #> 1 H1_PhenoGraph_cluster1 6                   2                   #> 2 H1_PhenoGraph_cluster1 1                   2                   #> 3 H1_PhenoGraph_cluster1 6                   2                   #> 4 H1_PhenoGraph_cluster1 6                   2                   #> 5 H1_PhenoGraph_cluster1 6                   2                   #> 6 H1_PhenoGraph_cluster1 6                   2 phenograph_clusters |>     dplyr::count(phenograph_cluster, .kmeans_metacluster, sort = TRUE) #> # A tibble: 4 × 3 #>   phenograph_cluster .kmeans_metacluster     n #>   <chr>              <chr>               <int> #> 1 cluster2           3                    1000 #> 2 cluster3           1                    1000 #> 3 cluster1           2                     995 #> 4 cluster1           1                       5 # use the kmeans algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\"     )  # use the flowsom algorithm phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"flowsom\"     ) # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = contains(\"cd\"),         method = \"kmeans\",         augment = FALSE     ) |>     head() #> # A tibble: 6 × 1 #>   .kmeans_cluster #>   <chr>           #> 1 2               #> 2 1               #> 3 19              #> 4 9               #> 5 2               #> 6 9"},{"path":"https://keyes-timothy.github.io/tidytof/articles/clustering.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Clustering and metaclustering","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-guidelines","dir":"Articles","previous_headings":"","what":"General Guidelines","title":"How to contribute code","text":"extend tidytof include new algorithm - example, one ’ve just developed - can take 1 2 general strategies (cases, may take !). first write tidytof-style verb algorithm can included standalone package. case, benefit writing tidytof-style verb algorithm taking advantage tidytof’s design schema make algorithm easy users access without learning much () new syntax still allowing maintain code base independently team. second approach write tidytof-style function ’d like team add tidytof next release. case, code review process take bit time, also allow teams collaborate provide greater degree critical feedback one another well share burden code maintenance future. either case, ’re welcome contact tidytof team review code via pull request /issue tidytof GitHub page. tutorial may helpful don’t lot experience collaborating programmers via GitHub. open request, can submit code team reviewed. Whether want method incorporated tidytof ’re simply looking external code review/feedback team, please mention request.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"code-style","dir":"Articles","previous_headings":"","what":"Code style","title":"How to contribute code","text":"tidytof uses tidyverse style guide. Adhering tidyverse style something team expect code incorporated tidytof, ’s also something encourage functions write analysis packages. experience, best code written just executed, also read humans! also many tools can use lint automatically style R code, {lintr} {styler} packages.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"How to contribute code","text":"addition written well-styled code, encourage write unit tests every function write. common practice software engineering world, common probably (!) bioinformatics community. tidytof team uses {testthat} package unit tests, ’s great tutorial .","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"general-principles","dir":"Articles","previous_headings":"How to contribute","what":"General principles","title":"How to contribute code","text":"important part writing function extends tidytof adhere tidytof verb syntax. exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. exceptions, tidytof extension include 3 argument types (order). addition, functions extend tidytof name starts prefix tof_. make easier users find tidytof functions using text completion functionality included development environments.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contributing-a-new-method-to-an-existing-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Contributing a new method to an existing {tidytof} verb","title":"How to contribute code","text":"tidytof currently includes multiple verbs perform fundamental single-cell data manipulation tasks. Currently, tidytof’s extensible verbs following: tof_analyze_abundance: Perform differential cluster abundance analysis tof_analyze_expression: Perform differential marker expression analysis tof_annotate_clusters: Annotate clusters manual IDs tof_batch_correct: Perform batch correction tof_cluster: Cluster cells subpopulations tof_downsample: Subsample dataset smaller number cells tof_extract: Calculate sample-level summary statistics tof_metacluster: Metacluster clusters smaller number subpopulations tof_plot_cells: Plot cell-level data tof_plot_clusters: Plot cluster-level data tof_plot_model: Plot results sample-level model tof_read_data: Read data memory disk tof_reduce_dimensions: Perform dimensionality reduction tof_transform: Transform marker expression values vectorized fashion tof_upsample: Assign new cells existing clusters (defined downsample dataset) tof_write_data: Write data memory disk tidytof verb wraps family related functions perform basic task. example, tof_cluster verb wrapper following functions: tof_cluster_ddpr, tof_cluster_flowsom, tof_cluster_kmeans, tof_cluster_phenograph. functions implement different clustering algorithm, share underlying logic standardized tof_cluster abstraction. practice, means users can apply DDPR, FlowSOM, K-means, PhenoGraph clustering algorithms datasets either calling one tof_cluster_* functions directly, calling tof_cluster method argument set appropriate value (“ddpr”, “flowsom”, “kmeans”, “phenograph”, respectively). extend existing tidytof verb, write function whose name fits pattern tof_{verb name}_*, “*” represents name algorithm used perform computation. function definition, try share many arguments possible tidytof verb ’re extending, return output object described “Value” heading help file verb extended. example, suppose wanted write tidytof-style interface new clustering algorithm “supercluster”, performs k-means clustering dataset twice outputs final cluster assignment equal two k-means cluster assignments spliced together. add supercluster algorithm tidytof, might write function like : example , note tof_cluster_supercluster named using tof_{verb name}_* style, function definition uses tof_tibble cluster_cols arguments tof_cluster, returned output object tof_tbl single column encoding cluster ids cells tof_tibble.","code":"#' Perform superclustering on high-dimensional cytometry data. #' #' This function applies the silly, hypothetical clustering algorithm #' \"supercluster\" to high-dimensional cytometry data using user-specified #' input variables/cytometry measurements. #' #' @param tof_tibble A `tof_tbl` or `tibble`. #' #' @param cluster_cols Unquoted column names indicating which columns in #' `tof_tibble` to use in computing the supercluster clusters. #' Supports tidyselect helpers. #' #' @param num_kmeans_clusters An integer indicating how many clusters should be #' used for the two k-means clustering steps. #' #' @param sep A string to use when splicing the 2 k-means clustering assignments #' to one another. #' #' @param ... Optional additional parameters to pass to #' \\code{\\link[tidytof]{tof_cluster_kmeans}} #' #' @return A tibble with one column named `.supercluster_cluster` containing #' a character vector of length `nrow(tof_tibble)` indicating the id of the #' supercluster cluster to which each cell (i.e. each row) in `tof_tibble` was #' assigned. #' #' @importFrom dplyr tibble #' tof_cluster_supercluster <-     function(tof_tibble, cluster_cols, num_kmeans_clusters = 10L, sep = \"_\", ...) {         kmeans_1 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          kmeans_2 <-             tof_tibble |>             tof_cluster_kmeans(                 cluster_cols = {{ cluster_cols }},                 num_clusters = num_kmeans_clusters,                 ...             )          final_result <-             dplyr::tibble(                 .supercluster_cluster =                     paste(kmeans_1$.kmeans_cluster, kmeans_2$.kmeans_cluster, sep = sep)             )          return(final_result)     }"},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"creating-a-new-tidytof-verb","dir":"Articles","previous_headings":"How to contribute","what":"Creating a new {tidytof} verb","title":"How to contribute code","text":"want contribute function tidytof represents new operation encompassed existing verbs , include suggestion create new verb pull request tidytof team. case, ’ll considerably flexibility define interface tidytof use implement new verb, tidytof team happy work figure makes sense (least brainstorm together).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"a-note-about-modeling-functions","dir":"Articles","previous_headings":"How to contribute","what":"A note about modeling functions","title":"How to contribute code","text":"point development, don’t recommend extending tidytof’s modeling functionality, likely abstracted standalone package (emphasis interoperability tidymodels ecosystem) point future.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"contact-us","dir":"Articles","previous_headings":"","what":"Contact us","title":"How to contribute code","text":"general questions/comments/concerns tidytof, feel free reach team GitHub .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/contributing-to-tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to contribute code","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.35     desc_1.4.3        R6_2.5.1          fastmap_1.1.1     #>  [5] xfun_0.42         magrittr_2.0.3    cachem_1.0.8      knitr_1.45        #>  [9] memoise_2.0.1     htmltools_0.5.7   rmarkdown_2.26    lifecycle_1.0.4   #> [13] cli_3.6.2         vctrs_0.6.5       sass_0.4.9        pkgdown_2.0.7     #> [17] textshaping_0.3.7 jquerylib_0.1.4   systemfonts_1.0.6 compiler_4.3.3    #> [21] purrr_1.0.2       tools_4.3.3       ragg_1.3.0        bslib_0.6.2       #> [25] evaluate_0.23     yaml_2.3.8        jsonlite_1.8.8    rlang_1.1.3       #> [29] fs_1.6.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Differential discovery analysis","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-abundance-analysis-using-tof_analyze_abundance","dir":"Articles","previous_headings":"","what":"Differential abundance analysis using tof_analyze_abundance()","title":"Differential discovery analysis","text":"might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance() verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest","code":"daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"differential-expression-analysis-with-tof_analyze_expression","dir":"Articles","previous_headings":"","what":"Differential expression analysis with tof_analyze_expression()","title":"Differential discovery analysis","text":"Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:  , details can found documentation tof_analyze_expression_* function family member: tof_analyze_expression_diffcyt tof_analyze_expression_lmm tof_analyze_expression_ttest","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         method = \"ttest\",         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_data <-     dea_result |>     mutate(         log2_fc = log(mean_fc, base = 2),         log_p = -log(p_adj),         significance =             case_when(                 p_adj < 0.05 & mean_fc > 1 ~ \"increased\",                 p_adj < 0.05 & mean_fc < 1 ~ \"decreased\",                 TRUE ~ NA_character_             ),         marker =             str_extract(marker, \".+_\") |>                 str_remove(\"_\"),         pair = str_c(marker, str_c(\"cluster \", population_id), sep = \"@\")     )  volcano_data |>     ggplot(aes(x = log2_fc, y = log_p, fill = significance)) +     geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray50\") +     geom_hline(yintercept = -log(0.05), linetype = \"dashed\", color = \"red\") +     geom_point(shape = 21, size = 2) +     ggrepel::geom_text_repel(         aes(label = pair),         data = slice_head(volcano_data, n = 10L),         size = 2     ) +     scale_fill_manual(         values = c(\"decreased\" = \"#cd5241\", \"increased\" = \"#207394\"),         na.value = \"#cdcdcd\"     ) +     labs(         x = \"log2(Fold-change)\",         y = \"-log10(p-value)\",         fill = NULL,         caption = \"Labels indicate the 10 most significant marker-cluster pairs\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/differential-discovery-analysis.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential discovery analysis","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] tidyr_1.3.1                 ggplot2_3.5.0               #> [19] stringr_1.5.1               dplyr_1.1.4                 #> [21] tidytof_0.99.5              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [89] tidyselect_1.2.1              Biostrings_2.70.3             #>  [91] knitr_1.45                    gridExtra_2.3                 #>  [93] xfun_0.42                     graphlayouts_1.1.1            #>  [95] hardhat_1.3.1                 timeDate_4032.109             #>  [97] stringi_1.8.3                 yaml_2.3.8                    #>  [99] evaluate_0.23                 codetools_0.2-19              #> [101] ggraph_2.2.1                  tibble_3.2.1                  #> [103] BiocManager_1.30.22           cli_3.6.2                     #> [105] rpart_4.1.23                  xtable_1.8-4                  #> [107] systemfonts_1.0.6             munsell_0.5.0                 #> [109] jquerylib_0.1.4               Rcpp_1.0.12                   #> [111] globals_0.16.3                png_0.1-8                     #> [113] parallel_4.3.3                ellipsis_0.3.2                #> [115] pkgdown_2.0.7                 gower_1.0.1                   #> [117] readr_2.1.5                   blob_1.2.4                    #> [119] bitops_1.0-7                  listenv_0.9.1                 #> [121] glmnet_4.1-8                  viridisLite_0.4.2             #> [123] ipred_0.9-14                  scales_1.3.0                  #> [125] prodlim_2023.08.28            purrr_1.0.2                   #> [127] crayon_1.5.2                  rlang_1.1.3                   #> [129] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"dimensionality-reduction-with-tof_reduce_dimensions-","dir":"Articles","previous_headings":"","what":"Dimensionality reduction with tof_reduce_dimensions().","title":"Dimensionality reduction","text":"example call tof_reduce_dimensions() use tSNE visualize data tidytof’s built-phenograph_data dataset. default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Changing method argument results different low-dimensional embeddings:","code":"data(phenograph_data)  # perform the dimensionality reduction phenograph_tsne <-     phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\") #> Loading required namespace: Rtsne  # select only the tsne embedding columns phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1   5.75 -16.0  #> 2  -1.53  -7.52 #> 3 -23.2  -15.1  #> 4  -8.86 -16.9  #> 5   2.17 -17.9  #> 6  -8.98 -24.1 phenograph_data |>     tof_preprocess() |>     tof_reduce_dimensions(method = \"tsne\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .tsne1  .tsne2 #>     <dbl>   <dbl> #>  1 -13.1  -12.2   #>  2 -10.9   -0.332 #>  3 -32.5   10.2   #>  4 -18.5    0.134 #>  5 -17.9   -9.29  #>  6 -21.1    7.89  #>  7 -11.2    1.36  #>  8 -25.7    8.52  #>  9 -18.5    3.61  #> 10  -6.88  -7.10  #> # ℹ 2,990 more rows phenograph_data |>     tof_reduce_dimensions(method = \"umap\", augment = FALSE) #> # A tibble: 3,000 × 2 #>    .umap1 .umap2 #>     <dbl>  <dbl> #>  1 -9.77    4.05 #>  2 -8.71    3.49 #>  3 -7.10    2.62 #>  4 -2.22   -2.59 #>  5 -9.86    3.80 #>  6  0.174  -3.20 #>  7 -9.85    3.23 #>  8 -1.38   -1.78 #>  9 -6.17    1.24 #> 10 -8.62    5.78 #> # ℹ 2,990 more rows  phenograph_data |>     tof_reduce_dimensions(method = \"pca\", augment = FALSE) #> # A tibble: 3,000 × 5 #>       .pc1     .pc2   .pc3    .pc4   .pc5 #>      <dbl>    <dbl>  <dbl>   <dbl>  <dbl> #>  1 -2.77    1.23    -0.868  0.978   3.49  #>  2 -0.969  -1.02    -0.787  1.22    0.329 #>  3 -2.36    2.54    -1.95  -0.882  -1.30  #>  4 -3.68   -0.00565  0.962  0.410   0.788 #>  5 -4.03    2.07    -0.829  1.59    5.39  #>  6 -2.59   -0.108    1.32  -1.41   -1.24  #>  7 -1.55   -0.651   -0.233  1.08    0.129 #>  8 -1.18   -0.446    0.134 -0.771  -0.932 #>  9 -2.00   -0.485    0.593 -0.0416 -0.658 #> 10 -0.0356 -0.924   -0.692  1.45    0.270 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"method-specifications-for-tof_reduce_-functions","dir":"Articles","previous_headings":"","what":"Method specifications for tof_reduce_*() functions","title":"Dimensionality reduction","text":"tof_reduce_dimensions() provides high-level API three lower-level functions: tof_reduce_pca(), tof_reduce_umap(), tof_reduce_tsne(). help files functions provide details algorithm-specific method specifications associated dimensionality reduction approaches. example, tof_reduce_pca takes num_comp argument determine many principal components returned: see ?tof_reduce_pca, ?tof_reduce_umap, ?tof_reduce_tsne additional details.","code":"# 2 principal components phenograph_data |>     tof_reduce_pca(num_comp = 2) #> # A tibble: 3,000 × 2 #>       .pc1     .pc2 #>      <dbl>    <dbl> #>  1 -2.77    1.23    #>  2 -0.969  -1.02    #>  3 -2.36    2.54    #>  4 -3.68   -0.00565 #>  5 -4.03    2.07    #>  6 -2.59   -0.108   #>  7 -1.55   -0.651   #>  8 -1.18   -0.446   #>  9 -2.00   -0.485   #> 10 -0.0356 -0.924   #> # ℹ 2,990 more rows # 3 principal components phenograph_data |>     tof_reduce_pca(num_comp = 3) #> # A tibble: 3,000 × 3 #>       .pc1     .pc2   .pc3 #>      <dbl>    <dbl>  <dbl> #>  1 -2.77    1.23    -0.868 #>  2 -0.969  -1.02    -0.787 #>  3 -2.36    2.54    -1.95  #>  4 -3.68   -0.00565  0.962 #>  5 -4.03    2.07    -0.829 #>  6 -2.59   -0.108    1.32  #>  7 -1.55   -0.651   -0.233 #>  8 -1.18   -0.446    0.134 #>  9 -2.00   -0.485    0.593 #> 10 -0.0356 -0.924   -0.692 #> # ℹ 2,990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"visualization-using-tof_plot_cells_embedding","dir":"Articles","previous_headings":"","what":"Visualization using tof_plot_cells_embedding()","title":"Dimensionality reduction","text":"Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package). tidytof also provides helper functions easily generating dimensionality reduction plots tof_tbl tibble columns representing embedding dimensions:   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = phenograph_cluster     ) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     tof_plot_cells_embedding(         embedding_cols = contains(\".tsne\"),         color_col = cd11b     ) +     ggplot2::scale_fill_viridis_c()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/dimensionality-reduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Dimensionality reduction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] RcppAnnoy_0.0.22    matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         stringr_1.5.1       #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [22] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [25] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [28] tweenr_2.0.3        irlba_2.3.5.1       parallel_4.3.3      #>  [31] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [34] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [37] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [40] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [43] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [46] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [49] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [52] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [55] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [58] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [61] Rtsne_0.17          future_1.33.1       desc_1.4.3          #>  [64] survival_3.5-8      polyclip_1.10-6     embed_1.1.4         #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [73] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [76] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [79] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [82] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [85] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [88] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [91] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [94] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [97] lava_1.8.0          uwot_0.1.16         gtable_0.3.4        #> [100] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [103] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [106] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [109] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"downsampling-with-tof_downsample","dir":"Articles","previous_headings":"","what":"Downsampling with tof_downsample()","title":"Downsampling","text":"Using tidytof’s built-dataset phenograph_data, can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample() using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling reduces number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  Thus, can see density downsampling uniform (though exactly uniform) across range cd34/cd38 values phenograph_data.","code":"data(phenograph_data)  phenograph_data |>     dplyr::count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"constant\",         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         group_cols = phenograph_cluster,         method = \"prop\",         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 rescale_max <-     function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {         x / from[2] * to[2]     }  phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     ) phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(method = \"density\", density_cols = c(cd34, cd38)) |>     # plot     ggplot(aes(x = cd34, y = cd38)) +     geom_hex() +     coord_fixed(ratio = 0.4) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     scale_fill_viridis_c(         labels = function(x) round(rescale_max(x), 2)     ) +     labs(         fill = \"relative density\"     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"additional-documentation","dir":"Articles","previous_headings":"","what":"Additional documentation","title":"Downsampling","text":"details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/downsampling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Downsampling","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.0  dplyr_1.1.4    tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       ggraph_2.2.1        #>  [13] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [16] tzdb_0.4.0          ragg_1.3.0          purrr_1.0.2         #>  [19] xfun_0.42           glmnet_4.1-8        cachem_1.0.8        #>  [22] jsonlite_1.8.8      recipes_1.0.10      highr_0.10          #>  [25] tweenr_2.0.3        parallel_4.3.3      R6_2.5.1            #>  [28] bslib_0.6.2         stringi_1.8.3       parallelly_1.37.1   #>  [31] rpart_4.1.23        lubridate_1.9.3     jquerylib_0.1.4     #>  [34] Rcpp_1.0.12         iterators_1.0.14    knitr_1.45          #>  [37] future.apply_1.11.1 readr_2.1.5         flowCore_2.14.2     #>  [40] Matrix_1.6-5        splines_4.3.3       nnet_7.3-19         #>  [43] igraph_2.0.3        timechange_0.3.0    tidyselect_1.2.1    #>  [46] yaml_2.3.8          viridis_0.6.5       timeDate_4032.109   #>  [49] doParallel_1.0.17   codetools_0.2-19    listenv_0.9.1       #>  [52] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [55] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [58] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [61] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [64] generics_0.1.3      RcppHNSW_0.6.0      S4Vectors_0.40.2    #>  [67] hms_1.1.3           munsell_0.5.0       scales_1.3.0        #>  [70] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [73] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [76] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [79] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [82] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [85] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [88] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [91] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [94] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #>  [97] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [100] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [103] MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Feature extraction","text":"demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = 1:length(file_name),         patient = stringr::str_extract(file_name, \"patient[:digit:]\"),         stimulation = stringr::str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-proportions-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating cluster proportions using tof_extract_proportion()","title":"Feature extraction","text":"First, tof_extract_proportion(), extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values columns specified group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument:","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-cluster-marker-expression-measures-using-tof_extract_central_tendency","dir":"Articles","previous_headings":"","what":"Calculating cluster marker expression measures using tof_extract_central_tendency()","title":"Feature extraction","text":"Another member tof_extract_*() function family, tof_extract_central_tendency(), computes central tendency (e.g. mean median) user-specified markers cluster. argument central_tendency_function can used compute summary statistic. example, following choice central_tendency_function compute 75th percentile marker-cluster pair citrus_data:","code":"citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = function(x) quantile(x = x, probs = 0.75)     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          5.30                 -0.0186 #> 2 patient1 Basal                           5.18                  1.32   #> 3 patient2 BCR-XL                          5.41                 -0.0201 #> 4 patient2 Basal                           5.28                  1.39   #> 5 patient3 BCR-XL                          5.42                 -0.0362 #> 6 patient3 Basal                           5.41                  1.27   #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-the-proportion-of-cells-with-marker-expression-above-a-threshold-using-tof_extract_proportion","dir":"Articles","previous_headings":"","what":"Calculating the proportion of cells with marker expression above a threshold using tof_extract_proportion()","title":"Feature extraction","text":"tof_extract_threshold() similar tof_extract_central_tendency(), calculates proportion cells user-specified expression value marker instead measure central tendency:","code":"citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"calculating-differences-in-marker-distributions-using-tof_extract_emd-and-tof_extract_jsd","dir":"Articles","previous_headings":"","what":"Calculating differences in marker distributions using tof_extract_emd() and tof_extract_jsd()","title":"Feature extraction","text":"two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd – designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation column (using emd_col jsd_col argument) identifies stimulation condition cell , reference_level specifies reference (.e. unstimulated) condition within emd_col jsd_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency.","code":"# Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"putting-it-all-together-with-tof_extract_features","dir":"Articles","previous_headings":"","what":"Putting it all together with tof_extract_features()","title":"Feature extraction","text":"Finally, tof_extract_features() verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 193 #>   patient  `prop@cluster1` `prop@cluster2` `prop@cluster3` `prop@cluster4` #>   <chr>              <dbl>           <dbl>           <dbl>           <dbl> #> 1 patient1          0.0149          0.0438           0.356           0.351 #> 2 patient2          0.0115          0.0212           0.425           0.323 #> 3 patient3          0.0255          0.0594           0.355           0.217 #> 4 patient4          0.0127          0.0418           0.320           0.223 #> 5 patient5          0.0207          0.0423           0.377           0.269 #> 6 patient6          0.0183          0.0493           0.459           0.250 #> # ℹ 188 more variables: `prop@cluster5` <dbl>, `prop@cluster6` <dbl>, #> #   `prop@cluster7` <dbl>, `prop@cluster8` <dbl>, #> #   `CD45_In115@cluster1_ct` <dbl>, `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD33_Nd148@cluster1_ct` <dbl>, `CD45_In115@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD33_Nd148@cluster2_ct` <dbl>, #> #   `CD45_In115@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD33_Nd148@cluster3_ct` <dbl>, `CD45_In115@cluster4_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/articles/feature-extraction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Feature extraction","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         stringr_1.5.1               #> [17] dplyr_1.1.4                 tidytof_0.99.5              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 philentropy_0.8.0             #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] ggforce_0.4.2                 MASS_7.3-60.0.1               #>  [55] lava_1.8.0                    rappdirs_0.3.3                #>  [57] DelayedArray_0.28.0           tools_4.3.3                   #>  [59] interactiveDisplayBase_1.40.0 httpuv_1.6.14                 #>  [61] future.apply_1.11.1           nnet_7.3-19                   #>  [63] glue_1.7.0                    promises_1.2.1                #>  [65] grid_4.3.3                    generics_0.1.3                #>  [67] recipes_1.0.10                gtable_0.3.4                  #>  [69] tzdb_0.4.0                    class_7.3-22                  #>  [71] tidyr_1.3.1                   data.table_1.15.2             #>  [73] hms_1.1.3                     tidygraph_1.3.1               #>  [75] utf8_1.2.4                    XVector_0.42.0                #>  [77] ggrepel_0.9.5                 BiocVersion_3.18.1            #>  [79] foreach_1.5.2                 pillar_1.9.0                  #>  [81] RcppHNSW_0.6.0                later_1.3.2                   #>  [83] splines_4.3.3                 tweenr_2.0.3                  #>  [85] lattice_0.22-5                survival_3.5-8                #>  [87] bit_4.0.5                     emdist_0.3-3                  #>  [89] RProtoBufLib_2.14.1           tidyselect_1.2.1              #>  [91] Biostrings_2.70.3             knitr_1.45                    #>  [93] gridExtra_2.3                 xfun_0.42                     #>  [95] graphlayouts_1.1.1            hardhat_1.3.1                 #>  [97] timeDate_4032.109             stringi_1.8.3                 #>  [99] yaml_2.3.8                    evaluate_0.23                 #> [101] codetools_0.2-19              ggraph_2.2.1                  #> [103] tibble_3.2.1                  BiocManager_1.30.22           #> [105] cli_3.6.2                     rpart_4.1.23                  #> [107] xtable_1.8-4                  systemfonts_1.0.6             #> [109] munsell_0.5.0                 jquerylib_0.1.4               #> [111] Rcpp_1.0.12                   globals_0.16.3                #> [113] png_0.1-8                     parallel_4.3.3                #> [115] ellipsis_0.3.2                pkgdown_2.0.7                 #> [117] gower_1.0.1                   ggplot2_3.5.0                 #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  scales_1.3.0                  #> [127] prodlim_2023.08.28            purrr_1.0.2                   #> [129] crayon_1.5.2                  rlang_1.1.3                   #> [131] KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Building predictive models","text":"illustrate work, first download patient-level data paper combine sample-level clinical annotations one tidytof’s built-datasets (ddpr_metadata). data processing steps result tibble called ddpr_patients. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). metadata columns, important ones indicate patient develop refractory disease (“relapse”), /happen. information stored relapse_status time_to_relapse columns, respectively. also preprocessing steps might want perform now save us headaches ’re fitting models later. next part vignette, ’ll use patient-level data build predictive models using resampling procedures like k-fold cross-validation bootstrapping.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # download the data and combine it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     dplyr::left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  # preview only the metadata (i.e. non-numeric) columns ddpr_patients |>     dplyr::select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             NA              Train… #> 4 UPN3       Female Standard Standard      No             NA              Train… #> 5 UPN4       Male   Standard Standard      No             NA              Valid… #> 6 UPN5       Female Standard High          No             NA              Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor     # and create the time_to_event and event columns for survival modeling     dplyr::mutate(         relapse_status = as.factor(relapse_status),         time_to_event = dplyr::if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = dplyr::if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-classifier-using-elastic-net-regularized-logistic-regression","dir":"Articles","previous_headings":"","what":"Building a classifier using elastic net-regularized logistic regression","title":"Building predictive models","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_patients outcome variable: can see samples annotated, can throw away samples don’t clinical outcome associated . original DDPR paper, 10-fold cross-validation used tune glmnet model estimate error model new datasets. , can use tof_split_data() function split cohort training test set either 10 times using k-fold cross-validation bootstrapping. Reading documentation tof_split_data() demonstrates use resampling methods (like bootstrapping). output tof_split_data() varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test observations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note , case, illustrative purposes ’re incorporating features one populations interest (population 2) model, whereas original model incorporated features 12 populations (likely required quite bit computational power result). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. training model, might interested seeing performs. One way assess classification model see well works applied directly back data trained (model’s “training data”). , can use tof_assess_model() function arguments: tof_assess_model() returns list several model assessment metrics differ depending kind tof_model trained. two-class classifier models, among useful confusion_matrix, shows classifier classified observation relative true class assignment. case, can see model performed perfectly training data (expected, model optimized using data !). can also visualize model’s performance using tof_plot_model() verb, case two-class model give us Receiver-Operating Characteristic (ROC) curve:  shown , tof_plot_model() return receiver-operating curve two-class model. ’s unusual get AUC 1 machine learning world, can note case, classification problem wasn’t particularly difficult (lot input features work ). training model, generally isn’t sufficient evaluate model performs training data alone, provide overly-optimistic representation model perform data ’s never seen (problem often called “overfitting” model training data). get fairer estimate model’s performance new datasets, can also evaluate cross-validation error calling tof_assess_model() tof_plot_model() new_data argument set “tuning”.  case, plot ROC Curve using predictions observation excluded model training cross-validation, approach gives accurate estimate model’s performance new data simple evaluation training dataset.","code":"# find how many of each outcome we have in our cohort ddpr_patients |>     dplyr::count(relapse_status) #> # A tibble: 3 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                37 #> 2 Yes               24 #> 3 NA                12 ddpr_patients_unannotated <-     ddpr_patients |>     dplyr::filter(is.na(relapse_status))  ddpr_patients <-     ddpr_patients |>     dplyr::filter(!is.na(relapse_status)) set.seed(3000L)  training_split <-     ddpr_patients |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 10,         strata = relapse_status     )  training_split #> #  10-fold cross-validation using stratification  #> # A tibble: 10 × 2 #>    splits         id     #>    <list>         <chr>  #>  1 <split [54/7]> Fold01 #>  2 <split [54/7]> Fold02 #>  3 <split [54/7]> Fold03 #>  4 <split [54/7]> Fold04 #>  5 <split [55/6]> Fold05 #>  6 <split [55/6]> Fold06 #>  7 <split [55/6]> Fold07 #>  8 <split [56/5]> Fold08 #>  9 <split [56/5]> Fold09 #> 10 <split [56/5]> Fold10 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <54/7/61> my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1           3.06      0.583    0.00449    0.164       1.94     0.416 #> 2 UPN1-Rx        0.0395    0.618    0.0634     0.572       2.93     0.944 #> 3 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 4 UPN3           0.633     0.0234   0.0165     0.0327      2.25     0.226 #> 5 UPN4           0.0443    0.129    0.0447     0.232       2.47     0.336 #> 6 UPN5           0.0647    0.0577   0.0163     0.162       2.89     0.406 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN6          5.62      0.550     0.00374     0.622      2.86     0.342 #> 2 UPN10-Rx      0.00240   0.167     0.203       0.802      2.57     0.822 #> 3 UPN13         0.0634    0.0300    0.0219      0.109      2.34     0.314 #> 4 UPN22-Rx      0.0643    1.68      0.0804      1.56       3.06     0.529 #> 5 UPN58         0.00546   0.00918   0.0168      0.480      2.70     0.112 #> 6 UPN95         0.300     0.389     0.00454     0.697      2.45     0.247 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … hyperparams <- tof_create_grid(mixture_values = 1)  class_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-10  #> # A tibble: 28 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 p4EBP1_dP_IL7_Pop2          -3.10 #>  2 pCreb_dP_PVO4_Pop2          -2.66 #>  3 TSLPr_Pop2                   2.07 #>  4 CD43_Pop2                    2.00 #>  5 pSTAT5_FC_PVO4_Pop2         -1.80 #>  6 pS6_dP_IL7_Pop2              1.56 #>  7 pPLCg1_2_dP_PVO4_Pop2        1.44 #>  8 (Intercept)                 -1.43 #>  9 pSTAT5_FC_BCR_Pop2           1.24 #> 10 pErk_dP_IL7_Pop2            -1.23 #> # ℹ 18 more rows training_classifier_metrics <-     class_mod |>     tof_assess_model() training_classifier_metrics$confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              37 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             24 class_mod |>     tof_plot_model() cv_classifier_metrics <-     class_mod |>     tof_assess_model(new_data = \"tuning\")  class_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"building-a-survival-model-using-elastic-net-regularized-cox-regression","dir":"Articles","previous_headings":"","what":"Building a survival model using elastic net-regularized cox regression","title":"Building predictive models","text":"Building ideas , sophisticated way model data simply predict relapse won’t, build time--event model estimates patients’ probabilities relapse function time since diagnosis. approach called “survival modeling” (specifically, case use Cox-proportional hazards modeling) takes account patients adverse events different times course disease (.e. everyone relapses time). build survival model using tidytof, use tof_train_model() verb setting model_type flag “survival”. addition, need provide two outcome columns. first columns (event_col) indicates patient relapsed (.e. experienced event--interest) censored certain amount follow-time. second (time_col) indicates much time took patient relapse censored analysis. survival model trained, can used predict patient’s probability event--interest different times post-diagnosis. However, common way survival models applied practice use patient’s predicted relative risk event--interest divide patients low- high-risk subgroups. tidytof can automatically according optimal split obtained using log-rank test possible split points dataset tof_assess_model(). addition, return predicted survival curve patient time: survival models, tof_plot_model() plots average survival curves low- high-risk groups:","code":"hyperparams <- tof_create_grid(mixture_values = 1)  survival_mod <-     training_split |>     tof_train_model(         predictor_cols = c(contains(\"Pop2\")),         time_col = time_to_event,         event_col = event,         model_type = \"survival\",         hyperparameter_grid = hyperparams,         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     )  print(survival_mod) #> A survival `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 40 × 2 #>    feature               coefficient #>    <chr>                       <dbl> #>  1 pErk_dP_TSLP_Pop2           -7.03 #>  2 pCreb_dP_PVO4_Pop2          -5.47 #>  3 CD19_Pop2                   -3.73 #>  4 CD34_Pop2                    3.63 #>  5 pSTAT5_FC_BCR_Pop2           3.40 #>  6 HLADR_Pop2                  -3.38 #>  7 pPLCg1_2_dP_IL7_Pop2         3.33 #>  8 pPLCg1_2_dP_PVO4_Pop2        3.14 #>  9 pSyk_dP_TSLP_Pop2            2.88 #> 10 CD123_Pop2                   2.77 #> # ℹ 30 more rows survival_metrics <-     survival_mod |>     tof_assess_model()  survival_metrics #> $model_metrics #> # A tibble: 3 × 2 #>   metric                        value #>   <chr>                         <dbl> #> 1 neg_log_partial_likelihood 1.76e+ 1 #> 2 concordance_index          1   e+ 0 #> 3 log_rank_p_value           1.47e-22 #>  #> $survival_curves #> # A tibble: 61 × 6 #>    row_index survival_curve    relative_risk time_to_event event risk_group #>    <chr>     <list>                    <dbl>         <dbl> <dbl> <chr>      #>  1 1         <tibble [54 × 2]>       2.83e+3          1043     1 low        #>  2 2         <tibble [54 × 2]>       2.61e+3          1043     1 low        #>  3 3         <tibble [54 × 2]>       1.58e-8          5406     0 low        #>  4 4         <tibble [54 × 2]>       2.09e-4          4917     0 low        #>  5 5         <tibble [54 × 2]>       9.98e-3          4538     0 low        #>  6 6         <tibble [54 × 2]>       6.62e-1          4490     0 low        #>  7 7         <tibble [54 × 2]>       4.09e+9           136     1 high       #>  8 8         <tibble [54 × 2]>       2.57e+8           364     1 high       #>  9 9         <tibble [54 × 2]>       1.27e+9           237     1 high       #> 10 10        <tibble [54 × 2]>       2.31e+4           886     1 low        #> # ℹ 51 more rows survival_mod |>     tof_plot_model() cv_survival_metrics <-     survival_mod |>     tof_assess_model(new_data = \"tuning\") survival_mod |>     tof_plot_model(new_data = \"tuning\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/modeling.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Building predictive models","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] stringr_1.5.1  tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] furrr_0.3.1         matrixStats_1.2.0   compiler_4.3.3      #>   [7] systemfonts_1.0.6   vctrs_0.6.5         crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ellipsis_0.3.2      labeling_0.4.3      ggraph_2.2.1        #>  [16] utf8_1.2.4          rmarkdown_2.26      prodlim_2023.08.28  #>  [19] tzdb_0.4.0          ragg_1.3.0          bit_4.0.5           #>  [22] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [25] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [28] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [31] R6_2.5.1            rsample_1.2.1       bslib_0.6.2         #>  [34] stringi_1.8.3       parallelly_1.37.1   rpart_4.1.23        #>  [37] lubridate_1.9.3     jquerylib_0.1.4     Rcpp_1.0.12         #>  [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.1 #>  [43] readr_2.1.5         flowCore_2.14.2     Matrix_1.6-5        #>  [46] splines_4.3.3       nnet_7.3-19         igraph_2.0.3        #>  [49] timechange_0.3.0    tidyselect_1.2.1    yaml_2.3.8          #>  [52] viridis_0.6.5       timeDate_4032.109   doParallel_1.0.17   #>  [55] codetools_0.2-19    curl_5.2.1          listenv_0.9.1       #>  [58] lattice_0.22-5      tibble_3.2.1        Biobase_2.62.0      #>  [61] withr_3.0.0         evaluate_0.23       future_1.33.1       #>  [64] desc_1.4.3          survival_3.5-8      polyclip_1.10-6     #>  [67] pillar_1.9.0        foreach_1.5.2       stats4_4.3.3        #>  [70] generics_0.1.3      vroom_1.6.5         RcppHNSW_0.6.0      #>  [73] S4Vectors_0.40.2    hms_1.1.3           ggplot2_3.5.0       #>  [76] munsell_0.5.0       scales_1.3.0        globals_0.16.3      #>  [79] class_7.3-22        glue_1.7.0          tools_4.3.3         #>  [82] data.table_1.15.2   gower_1.0.1         fs_1.6.3            #>  [85] graphlayouts_1.1.1  tidygraph_1.3.1     grid_4.3.3          #>  [88] yardstick_1.3.1     tidyr_1.3.1         RProtoBufLib_2.14.1 #>  [91] ipred_0.9-14        colorspace_2.1-0    ggforce_0.4.2       #>  [94] cli_3.6.2           textshaping_0.3.7   fansi_1.0.6         #>  [97] cytolib_2.14.1      viridisLite_0.4.2   lava_1.8.0          #> [100] dplyr_1.1.4         gtable_0.3.4        sass_0.4.9          #> [103] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [106] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [109] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [112] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"preprocessing-with-tof_preprocess","dir":"Articles","previous_headings":"","what":"Preprocessing with tof_preprocess","title":"Preprocessing","text":"Generally speaking, raw ion counts measured analyte mass cytometer (content raw FCS files obtained directly mass cytometer) need transformed CyTOF data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess tidytof’s built-phenograph_data tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument specify columns tof_tibble transformed. Alter transform_fun argument specify vector-valued function used transform channel_cols. example, suppose want center scale numeric columns instead arcsinh-transforming : keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE.","code":"data(phenograph_data)  # before preprocessing phenograph_data %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows phenograph_data %>%     # perform preprocessing     tof_preprocess() %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45    cd34  cd38 #>   <dbl>   <dbl> <dbl> #> 1  3.96  0.608  0.298 #> 2  4.52 -0.116  1.56  #> 3  4.76  0.909  0.360 #> 4  5.15  0.0725 1.70  #> # ℹ 2 more rows phenograph_data %>%     # preprocess     tof_preprocess(transform_fun = scale) %>%     # inspect new values     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>   cd45[,1] cd34[,1] cd38[,1] #>      <dbl>    <dbl>    <dbl> #> 1   -1.40     1.01   -0.437  #> 2   -1.15    -0.911   0.0316 #> 3   -0.999    2.00   -0.422  #> 4   -0.661   -0.436   0.120  #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"postprocessing-with-tof_postprocess","dir":"Articles","previous_headings":"","what":"Postprocessing with tof_postprocess","title":"Preprocessing","text":"final note, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"print(phenograph_data) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> #> # A tibble: 6 × 3 #>    cd45   cd34  cd38 #>   <dbl>  <dbl> <dbl> #> 1  131.  3.23   1.51 #> 2  230. -0.582 11.4  #> 3  293.  5.20   1.84 #> 4  431.  0.363 13.3  #> # ℹ 2 more rows  # after preprocessing and post-processing, the data are the same # except that the re-added noise component is different for each value phenograph_data %>%     tof_preprocess() %>%     tof_postprocess(redo_noise = TRUE) %>%     select(cd45, cd34, cd38) %>%     head() #> # A tibble: 6 × 3 #>    cd45   cd34   cd38 #>   <dbl>  <dbl>  <dbl> #> 1  130.  2.62   0.535 #> 2  230. -0.918 11.0   #> 3  293.  4.91   1.10  #> 4  430.  0.318 13.3   #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/preprocessing.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Preprocessing","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] tidyselect_1.2.1    viridisLite_0.4.2   timeDate_4032.109   #>   [4] farver_2.1.1        viridis_0.6.5       ggraph_2.2.1        #>   [7] fastmap_1.1.1       tweenr_2.0.3        rpart_4.1.23        #>  [10] digest_0.6.35       timechange_0.3.0    lifecycle_1.0.4     #>  [13] yardstick_1.3.1     survival_3.5-8      magrittr_2.0.3      #>  [16] compiler_4.3.3      rlang_1.1.3         sass_0.4.9          #>  [19] tools_4.3.3         igraph_2.0.3        utf8_1.2.4          #>  [22] yaml_2.3.8          data.table_1.15.2   knitr_1.45          #>  [25] graphlayouts_1.1.1  withr_3.0.0         purrr_1.0.2         #>  [28] RProtoBufLib_2.14.1 BiocGenerics_0.48.1 desc_1.4.3          #>  [31] nnet_7.3-19         grid_4.3.3          polyclip_1.10-6     #>  [34] stats4_4.3.3        fansi_1.0.6         RcppHNSW_0.6.0      #>  [37] future_1.33.1       colorspace_2.1-0    ggplot2_3.5.0       #>  [40] globals_0.16.3      scales_1.3.0        iterators_1.0.14    #>  [43] MASS_7.3-60.0.1     cli_3.6.2           rmarkdown_2.26      #>  [46] ragg_1.3.0          generics_0.1.3      future.apply_1.11.1 #>  [49] tzdb_0.4.0          cachem_1.0.8        flowCore_2.14.2     #>  [52] ggforce_0.4.2       stringr_1.5.1       splines_4.3.3       #>  [55] parallel_4.3.3      matrixStats_1.2.0   vctrs_0.6.5         #>  [58] hardhat_1.3.1       glmnet_4.1-8        Matrix_1.6-5        #>  [61] jsonlite_1.8.8      cytolib_2.14.1      hms_1.1.3           #>  [64] S4Vectors_0.40.2    ggrepel_0.9.5       listenv_0.9.1       #>  [67] systemfonts_1.0.6   foreach_1.5.2       gower_1.0.1         #>  [70] tidyr_1.3.1         jquerylib_0.1.4     recipes_1.0.10      #>  [73] parallelly_1.37.1   glue_1.7.0          pkgdown_2.0.7       #>  [76] codetools_0.2-19    stringi_1.8.3       lubridate_1.9.3     #>  [79] gtable_0.3.4        shape_1.4.6.1       munsell_0.5.0       #>  [82] tibble_3.2.1        pillar_1.9.0        htmltools_0.5.7     #>  [85] ipred_0.9-14        lava_1.8.0          R6_2.5.1            #>  [88] textshaping_0.3.7   doParallel_1.0.17   tidygraph_1.3.1     #>  [91] evaluate_0.23       Biobase_2.62.0      lattice_0.22-5      #>  [94] readr_2.1.5         memoise_2.0.1       bslib_0.6.2         #>  [97] class_7.3-22        Rcpp_1.0.12         prodlim_2023.08.28  #> [100] gridExtra_2.3       xfun_0.42           fs_1.6.3            #> [103] pkgconfig_2.0.3"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Quality control","text":"demonstrate use {tidytof}’s quality control verbs, use combination simulated real data vignette. Simulated data generated --fly sections , walk download real dataset section. want download dataset originally collected development PhenoGraph algorithm. data built HDCytoData package, available Bioconductor can downloaded following command: load PhenoGraph data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s. also add lines dplyr code clean column names perform standard arcsinh transformation. Thus, can see levine tof_tbl 265627 cells (one row) 40 pieces information cell (one column).","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") levine <-     HDCytoData::Levine_32dim_flowSet() |>     as_tof_tbl() |>     # a bit of data cleaning     dplyr::mutate(population_id = as.character(population_id)) |>     dplyr::rename_with(         .fn = \\(x) stringr::str_to_lower(stringr::str_remove(x, \"\\\\|.+\"))     ) |>     dplyr::mutate(dplyr::across(c(file_number, population_id), as.character)) |>     # arcsinh transformation     tof_preprocess(         channel_cols =             c(-time, -cell_length, -event_number, -file_number, -population_id)     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"detect-low-expression-i-e--potentially-failed-channels-with-tof_assess_channels","dir":"Articles","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels with tof_assess_channels()","title":"Quality control","text":"data collection, might wonder channels include downstream analyses. particular, might want exclude channels positive values, situation indicates antibody may failed, signal particular channel may weak detected. , can use tof_assess_channels(), verb calculates many cells negative (.e. use-specified threshold, negative_threshold) channel flags channels user-specified proportion negative cells (negative_proportion_flag). levine dataset, look markers 97.5% cells threshold 5 ion counts: can see two channels 97.5% cells dataset 5 counts. given experiment, might expected (.e. marker expressed rare cell population) unexpected (marker expressed many cells). case, can visualize marker negative cells manually inspect (recommend flagged channels).  case, looks like small population cells slightly positive cd14, simply measurement noise/nonspecific binding antibody. user whether include cd14 downstream analyses.","code":"# convert 5 counts to asinh value with a cofactor of 5 threshold <- asinh(5 / 5)  levine |>     tof_assess_channels(         negative_threshold = threshold,         negative_proportion_flag = 0.975     ) #> # A tibble: 38 × 3 #>    channel negative_proportion flagged_channel #>    <chr>                 <dbl> <lgl>           #>  1 cd14                  0.988 TRUE            #>  2 cd133                 0.975 TRUE            #>  3 cd117                 0.969 FALSE           #>  4 cd16                  0.967 FALSE           #>  5 flt3                  0.960 FALSE           #>  6 cd15                  0.940 FALSE           #>  7 cd41                  0.923 FALSE           #>  8 cd34                  0.909 FALSE           #>  9 cd61                  0.890 FALSE           #> 10 cd33                  0.885 FALSE           #> # ℹ 28 more rows levine |>     tof_plot_cells_density(marker_col = cd14)"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"identify-time-periods-of-abnormally-low-or-high-flow-rate-during-data-acquisition-using-tof_assess_flow_rate","dir":"Articles","previous_headings":"","what":"Identify time periods of abnormally low or high flow rate during data acquisition using tof_assess_flow_rate()","title":"Quality control","text":"Large changes flow rate cytometer can impact quality signal acquired data collection: example, abnormally low flow rates can caused partial occlusions cytometer’s flow cell, leading debris air infiltration cytometer’s microfluidics system. Thus, can useful perform quality control step explicitly interrogates flow rate course cytometry experiment order flag cells collected unusually high low rates acquisition. , {tidytof} provides tof_assess_flow_rate(), function implements simplified version FlowAI’s flow rate analysis. short, relative flow rates timestep cytometry experiment calculated, outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged. size timesteps user-defined parameter calculation, significance level (0 1) within t-distribution determines anomalous time step’s flow rate must cells flagged. can apply tof_assess_flow_rate() levine dataset , using  result , can see last several timesteps flagged potentially low flow rates. decision include exclude cells analyses left user. group_cols argument can also used analyze flow rates samples, patients, mass cytometry barcode plates, etc. separately.","code":"levine |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 200,         # flag timepoints in which flow rates are high or low at a signicance level         # of p = 0.01         alpha_threshold = 0.01,         # plot the number of cells in each timestep, and whether or not the         # rates were flagged as too high or too low         visualize = TRUE     ) levine |>     tof_assess_flow_rate(         time_col = time,         # analyze two files in the levine dataset separately         group_cols = file_number,         alpha_threshold = 0.01,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-that-are-unusually-far-from-the-centroid-of-a-cluster-to-which-they-have-been-assigned-with-tof_assess_clusters_distance","dir":"Articles","previous_headings":"","what":"Flag cells that are unusually far from the centroid of a cluster to which they have been assigned with tof_assess_clusters_distance()","title":"Quality control","text":"using favorite clustering algorithm define cell subpopulations (example, using tof_cluster()), may wonder well clustering procedure worked. example, may clusters contain outliers - , cells less similar cells cluster typical. detect cells, tidytof provides tof_assess_clusters_distance() verb, computes Mahalanobis distance cell centroid cluster assigned. , computes z-score mahalanobis distances cells cluster flags cells z-score user-specified threshold. Altogether, procedure flags cells unusually far cluster centroid - .e. candidate outliers. demonstrate use tof_assess_clusters_distance() simulated data. simulate data 3 clusters, large population cells “truly” belong cluster well small population outliers cells erroneously assigned cluster. following plots visualize simulated data described :   Using dataset, see tof_assess_clusters_distance() can successfully flag majority outlier cells cluster.","code":"set.seed(2020L)  # simulate large population of cells that truly belong in their assigned cluster sim_data_base <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"non-outlier\"     )  # simulate outlier cells that do not belong in their assigned cluster sim_data_outlier <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outlier\"     )  # bind simulated data together sim_data <- bind_rows(sim_data_base, sim_data_outlier) sim_data |>     tof_plot_cells_embedding(color_col = cluster_id) sim_data |>     tof_plot_cells_embedding(color_col = dataset) sim_data |>     tof_assess_clusters_distance(         cluster_col = cluster_id,         # flag cells with a mahalanobis distance z-score over 3         z_threshold = 3,         augment = TRUE     ) |>     # visualize result as above     dplyr::select(-dplyr::starts_with(\".mahala\"), -z_score) |>     dplyr::mutate(flagged_cell = as.character(flagged_cell)) |>     tof_plot_cells_embedding(color_col = flagged_cell) +     scale_fill_manual(values = tof_generate_palette(num_colors = 2))"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"flag-cells-whose-cluster-assignment-is-ambiguous-with-tof_assess_clusters_entropy","dir":"Articles","previous_headings":"","what":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","title":"Quality control","text":"may also wish evaluate clustering result based cell’s absolute distance centroid cluster assigned, based relative distances cell cluster centroids. , order confident cell’s cluster assignment, ideally want cell close centroid cluster assigned, relatively distant clusters. contrasts scenario cell might similarly close centroids 2-3 clusters, case might think cell “ambiguous” phenotype, phenotype intermediate clusters clustering algorithm identified. flag “ambiguous” clusters, {tidytof} provides tof_assess_clusters_entropy() verb. tof_assess_clusters_entropy() computes entropy L1-scaled mahalanobis distance vector (.e. mahalanobis distance cell centroids clusters dataset) - entropy low (close 0) confident cell’s cluster assignment, high (near 1) equally close multiple cluster centroids. demonstrate use function simulated data levine dataset .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"simulated-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Simulated data","title":"Quality control","text":"First, simulate fake dataset 3000 cells 4 channels. simulated dataset, two well-defined clusters (“b” “c”) dispersed cluster intermediate others (“”). data visualized :  dataset, can imagine first analysis approach might involve clustering cells 2 distinct clusters. data simulated, already know number clusters small - can calculating entropy cells resulting clusters help us realize without prior knowledge? check, can use tof_assess_clusters_entropy():   plots , can see cells middle 2 k-means clusters (correspond well ground-truth clusters “b” “c” ) high entropy values, whereas cells closer one centroids low entropy values. can also see tof_assess_clusters_entropy() flags cells potentially anomalous (.e. intermediate phenotype two clusters identified) entropy values 75th percentile (user-specified parameter) entropy values dataset. user wish recluster dataset, filter anomalous cells, processing steps.  can see , expected, intermediate cluster (“”) higher entropies either distinct clusters (“b” “c”).","code":"sim_data <-     dplyr::tibble(         cd45 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd38 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd34 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cd19 =             c(                 rnorm(n = 1000, sd = 2),                 rnorm(n = 1000, mean = 2),                 rnorm(n = 1000, mean = -2)             ),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     ) sim_data |>     tof_reduce_dimensions(method = \"pca\") |>     tof_plot_cells_embedding(         embedding_cols = c(.pc1, .pc2),         color_col = cluster_id     ) set.seed(17L)  entropy_result <-     sim_data |>     # cluster into 2 clusters     tof_cluster(         num_clusters = 2,         method = \"kmeans\"     ) |>     # calculate the entropy of all cells     tof_assess_clusters_entropy(         cluster_col = .kmeans_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # plot the clusters in PCA space entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = .kmeans_cluster) # show the entropy values for each cell entropy_result |>     select(-starts_with(\".mahala\"), -flagged_cell) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = entropy) +     scale_fill_viridis_c() entropy_result |>     select(-starts_with(\".mahala\")) |>     tof_reduce_dimensions(pca_cols = starts_with(\"cd\"), method = \"pca\") |>     tof_plot_cells_embedding(embedding_cols = c(.pc1, .pc2), color_col = flagged_cell) +     scale_fill_viridis_d() entropy_result |>     ggplot(aes(x = entropy, fill = cluster_id)) +     geom_density(alpha = 0.4) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"real-data","dir":"Articles","previous_headings":"Flag cells whose cluster assignment is ambiguous with tof_assess_clusters_entropy()","what":"Real data","title":"Quality control","text":"can also apply tof_assess_clusters_entropy() dataset derived levine data. Suppose take 5 largest clusters levine save result small_levine tof_tbl. , can perturb dataset replacing labels cells smallest cluster (cluster 9) random labels. effectively creates population cells dataset whose “true” cluster label absent. scenario, expect cells perturbed cluster relatively distant remaining clusters, whereas unperturbed cells relatively close cluster centroid (correct centroid). Thus, can test tof_assess_clusters_entropy() successfully flags cells perturbed cluster relative others: plot , can see cells cluster 9 larger entropy values cells clusters, expected.  Similarly, can see majority cells 9 successfully flagged tof_assess_clusters_entropy() using entropy quantile threshold 0.9. Conversely, cells cluster (cluster 15) flagged.","code":"clusters_to_keep <-     levine |>     dplyr::count(population_id) |>     dplyr::slice_max(order_by = n, n = 5L) |>     dplyr::arrange(n) |>     pull(population_id)  smallest_cluster <- clusters_to_keep[1] largest_cluster <- clusters_to_keep[[length(clusters_to_keep)]]  small_levine <-     levine |>     dplyr::filter(population_id %in% clusters_to_keep) # perform the perturbation small_levine <-     small_levine |>     dplyr::mutate(         new_population_id =             dplyr::if_else(                 population_id %in% smallest_cluster,                 sample(                     clusters_to_keep[-which(clusters_to_keep %in% smallest_cluster)],                     size = nrow(small_levine),                     replace = TRUE                 ),                 population_id             )     )  # perform the entropy assessment entropy_levine <-     small_levine |>     tof_assess_clusters_entropy(         cluster_col = new_population_id,         marker_cols = starts_with(\"cd\"),         augment = TRUE     ) entropy_levine |>     mutate(population_id = fct_reorder(population_id, entropy)) |>     tof_plot_cells_density(         marker_col = entropy,         group_col = population_id,         use_ggridges = TRUE,         scale = 0.1     ) +     ggplot2::theme(legend.position = \"none\") +     ggplot2::labs(x = \"Entropy\", y = \"Cluster ID\") entropy_levine |>     mutate(flagged_cell = entropy > quantile(entropy, prob = 0.9)) |>     dplyr::count(population_id, flagged_cell) |>     group_by(population_id) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     dplyr::filter(flagged_cell) #> # A tibble: 2 × 4 #>   population_id flagged_cell     n   prop #>   <chr>         <lgl>        <int>  <dbl> #> 1 15            TRUE         12888 0.0798 #> 2 9             TRUE         11666 0.706"},{"path":"https://keyes-timothy.github.io/tidytof/articles/quality-control.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Quality control","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HDCytoData_1.22.1           flowCore_2.14.2             #>  [3] SummarizedExperiment_1.32.0 Biobase_2.62.0              #>  [5] GenomicRanges_1.54.1        GenomeInfoDb_1.38.8         #>  [7] IRanges_2.36.0              S4Vectors_0.40.2            #>  [9] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [11] ExperimentHub_2.10.0        AnnotationHub_3.10.0        #> [13] BiocFileCache_2.10.1        dbplyr_2.5.0                #> [15] BiocGenerics_0.48.1         forcats_1.0.0               #> [17] ggplot2_3.5.0               dplyr_1.1.4                 #> [19] tidytof_0.99.5              #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.8                shape_1.4.6.1                 #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.26                fs_1.6.3                      #>   [7] zlibbioc_1.48.2               ragg_1.3.0                    #>   [9] vctrs_0.6.5                   memoise_2.0.1                 #>  [11] RCurl_1.98-1.14               htmltools_0.5.7               #>  [13] S4Arrays_1.2.1                curl_5.2.1                    #>  [15] SparseArray_1.2.4             sass_0.4.9                    #>  [17] parallelly_1.37.1             bslib_0.6.2                   #>  [19] desc_1.4.3                    lubridate_1.9.3               #>  [21] cachem_1.0.8                  igraph_2.0.3                  #>  [23] mime_0.12                     lifecycle_1.0.4               #>  [25] iterators_1.0.14              pkgconfig_2.0.3               #>  [27] Matrix_1.6-5                  R6_2.5.1                      #>  [29] fastmap_1.1.1                 shiny_1.8.0                   #>  [31] GenomeInfoDbData_1.2.11       future_1.33.1                 #>  [33] digest_0.6.35                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.64.1          textshaping_0.3.7             #>  [37] RSQLite_2.3.5                 labeling_0.4.3                #>  [39] filelock_1.0.3                cytolib_2.14.1                #>  [41] fansi_1.0.6                   yardstick_1.3.1               #>  [43] timechange_0.3.0              httr_1.4.7                    #>  [45] polyclip_1.10-6               abind_1.4-5                   #>  [47] compiler_4.3.3                bit64_4.0.5                   #>  [49] withr_3.0.0                   doParallel_1.0.17             #>  [51] viridis_0.6.5                 DBI_1.2.2                     #>  [53] highr_0.10                    ggforce_0.4.2                 #>  [55] MASS_7.3-60.0.1               lava_1.8.0                    #>  [57] rappdirs_0.3.3                DelayedArray_0.28.0           #>  [59] tools_4.3.3                   interactiveDisplayBase_1.40.0 #>  [61] httpuv_1.6.14                 future.apply_1.11.1           #>  [63] nnet_7.3-19                   glue_1.7.0                    #>  [65] promises_1.2.1                grid_4.3.3                    #>  [67] generics_0.1.3                recipes_1.0.10                #>  [69] gtable_0.3.4                  tzdb_0.4.0                    #>  [71] class_7.3-22                  tidyr_1.3.1                   #>  [73] data.table_1.15.2             hms_1.1.3                     #>  [75] tidygraph_1.3.1               utf8_1.2.4                    #>  [77] XVector_0.42.0                ggrepel_0.9.5                 #>  [79] BiocVersion_3.18.1            foreach_1.5.2                 #>  [81] pillar_1.9.0                  stringr_1.5.1                 #>  [83] RcppHNSW_0.6.0                later_1.3.2                   #>  [85] splines_4.3.3                 tweenr_2.0.3                  #>  [87] lattice_0.22-5                survival_3.5-8                #>  [89] bit_4.0.5                     RProtoBufLib_2.14.1           #>  [91] tidyselect_1.2.1              Biostrings_2.70.3             #>  [93] knitr_1.45                    gridExtra_2.3                 #>  [95] xfun_0.42                     graphlayouts_1.1.1            #>  [97] hardhat_1.3.1                 timeDate_4032.109             #>  [99] stringi_1.8.3                 yaml_2.3.8                    #> [101] evaluate_0.23                 codetools_0.2-19              #> [103] ggraph_2.2.1                  tibble_3.2.1                  #> [105] BiocManager_1.30.22           cli_3.6.2                     #> [107] rpart_4.1.23                  xtable_1.8-4                  #> [109] systemfonts_1.0.6             munsell_0.5.0                 #> [111] jquerylib_0.1.4               Rcpp_1.0.12                   #> [113] globals_0.16.3                png_0.1-8                     #> [115] parallel_4.3.3                ellipsis_0.3.2                #> [117] pkgdown_2.0.7                 gower_1.0.1                   #> [119] readr_2.1.5                   blob_1.2.4                    #> [121] bitops_1.0-7                  listenv_0.9.1                 #> [123] glmnet_4.1-8                  viridisLite_0.4.2             #> [125] ipred_0.9-14                  ggridges_0.5.6                #> [127] scales_1.3.0                  prodlim_2023.08.28            #> [129] purrr_1.0.2                   crayon_1.5.2                  #> [131] rlang_1.1.3                   KEGGREST_1.42.0"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"accessing-the-data-for-this-vignette","dir":"Articles","previous_headings":"","what":"Accessing the data for this vignette","title":"Reading and writing data","text":"tidytof comes bundled several example mass cytometry datasets. access raw FCS CSV files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: details datasets contained directories isn’t particularly important, basic information follows: aml - one FCS file containing myeloid cells healthy bone marrow one FCS file containing myeloid cells AML patient bone marrow ddpr - two FCS files containing B-cell lineage cells paper mix - two FCS files different CyTOF antigen panels (one FCS file “aml” directory one “phenograph” directory) mix2 - three files different CyTOF antigen panels different file extensions (one FCS file “aml” directory two CSV files “phenograph_csv directory) phenograph - three FCS files containing AML cells paper phenograph_csv - cells “phenograph” directory, stored CSV files scaffold - three FCS files paper statistical_scaffold - three FCS files paper surgery - three FCS files paper obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command:","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"reading-data-with-tof_read_data","dir":"Articles","previous_headings":"","what":"Reading Data with tof_read_data","title":"Reading and writing data","text":"Using one directories (directory containing CyTOF data local machine), can use tof_read_data read CyTOF data raw files. Acceptable formats include FCS files CSV files. Importantly, tof_read_data smart enough read single FCS/CSV files multiple FCS/CSV files depending whether first argument (path) leads single file directory files. , can use tof_read_data read FCS files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input data file type, tidytof reads data extended tibble class called tof_tbl (pronounced “tof tibble”). tof tibbles S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing CyTOF data individual experiments, CyTOF users often want compare panels experiments find common markers compare metals associated particular markers across panels. retrieve panel information tof_tbl, use tof_get_panel: additional notes tof_tbls: tof_tbls contains one cell per row one CyTOF channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls.","code":"phenograph <-     tidytof_example_data(\"phenograph\") %>%     tof_read_data()  phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"using-tibble-methods-with-tidytof-tibbles","dir":"Articles","previous_headings":"","what":"Using tibble methods with {tidytof} tibbles","title":"Reading and writing data","text":"extension tbl_df class, tof_tbls get access dplyr tidyr free. can useful performing variety common operations. example, phenograph object two columns - PhenoGraph Condition - encode categorical variables numeric codes. might interested converting types columns strings make sure don’t accidentally perform quantitative operations later. Thus, dplyr’s useful mutate method can applied phenograph convert two columns character vectors. note tof_tbl class preserved even transformations. Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input FCS file(s) guess metals antigens used data acquisition. Thus, CSV files read using tof_read_data, recommended use panel_info argument provide panel manually (CSV files, unlike FCS files, provide built-metadata columns contain).","code":"phenograph <-     phenograph %>%     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph %>%     # use dplyr's select method to show     # that the columns have been changed     select(where(is.character)) #> # A tibble: 300 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> # ℹ 296 more rows phenograph %>%     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" # when csv files are read, the tof_tibble's \"panel\" # attribute will be empty by default tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data() %>%     tof_get_panel() #> # A tibble: 0 × 0  # to add a panel manually, provide it as a tibble # to tof_read_data phenograph_panel <-     phenograph %>%     tof_get_panel()  tidytof_example_data(\"phenograph_csv\") %>%     tof_read_data(panel_info = phenograph_panel) %>%     tof_get_panel() #> # A tibble: 44 × 2 #>   antigens    metals      #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 DNA1        Ir191       #> 4 DNA2        Ir193       #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"writing-data-from-a-tof_tbl-to-disk","dir":"Articles","previous_headings":"","what":"Writing data from a tof_tbl to disk","title":"Reading and writing data","text":"Users may wish store CyTOF data FCS CSV files transformation, concatenation, filtering, data processing. write single-cell data tof_tbl FCS CSV files, use tof_write_data. illustrate use verb, use tidytof’s built-phenograph_data dataset. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (rows tof_tibble) separate FCS CSV files. Simply put, argument allows tof_write_data create single FCS CSV file unique combination values group_cols columns specified user. example , cells grouped 3 output FCS files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs Note file names match distinct values group_cols column (phenograph_cluster): However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs , note file names match distinct values group_cols columns (phenograph_cluster expression_group): useful feature tof_write_data automatically concatenate cells single FCS CSV files based specified group_cols regardless many unique files cells came . allows easy concatenation FCS CSV files containing data single sample acquired multiple CyTOF runs, example.","code":"data(phenograph_data)  print(phenograph_data) #> # A tibble: 3,000 × 25 #>   sample_name  phenograph_cluster    cd19 cd11b   cd34  cd45  cd123   cd33  cd47 #>   <chr>        <chr>                <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl> <dbl> #> 1 H1_PhenoGra… cluster1           -0.168  29.0   3.23   131. -0.609  1.21   13.0 #> 2 H1_PhenoGra… cluster1            1.65    4.83 -0.582  230.  2.53  -0.507  12.9 #> 3 H1_PhenoGra… cluster1            2.79   36.1   5.20   293. -0.265  3.67   27.1 #> 4 H1_PhenoGra… cluster1            0.0816 48.8   0.363  431.  2.04   9.40   41.0 #> # ℹ 2,996 more rows #> # ℹ 16 more variables: cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, #> #   cd117 <dbl>, cd64 <dbl>, cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, #> #   pampk <dbl>, p4ebp1 <dbl>, ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, #> #   prb <dbl>, `perk1-2` <dbl> # when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data %>%     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     distinct(phenograph_cluster) #> # A tibble: 3 × 1 #>   phenograph_cluster #>   <chr>              #> 1 cluster1           #> 2 cluster2           #> 3 cluster3 phenograph_data %>%     # create a variable representing if a cell is above or below     # the median expression level of pstat5     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     ) phenograph_data %>%     mutate(         expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")     ) %>%     distinct(phenograph_cluster, expression_group) #> # A tibble: 6 × 2 #>   phenograph_cluster expression_group #>   <chr>              <chr>            #> 1 cluster1           low              #> 2 cluster1           high             #> 3 cluster2           low              #> 4 cluster2           high             #> # ℹ 2 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/articles/reading-and-writing-data.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Reading and writing data","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4    tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       crayon_1.5.2        #>  [10] pkgconfig_2.0.3     shape_1.4.6.1       fastmap_1.1.1       #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] bit_4.0.5           purrr_1.0.2         xfun_0.42           #>  [22] glmnet_4.1-8        cachem_1.0.8        jsonlite_1.8.8      #>  [25] recipes_1.0.10      tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         evaluate_0.23       #>  [58] future_1.33.1       desc_1.4.3          survival_3.5-8      #>  [61] polyclip_1.10-6     pillar_1.9.0        foreach_1.5.2       #>  [64] stats4_4.3.3        generics_0.1.3      vroom_1.6.5         #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          gtable_0.3.4        sass_0.4.9          #>  [97] digest_0.6.35       BiocGenerics_0.48.1 ggrepel_0.9.5       #> [100] farver_2.1.1        memoise_2.0.1       htmltools_0.5.7     #> [103] pkgdown_2.0.7       lifecycle_1.0.4     hardhat_1.3.1       #> [106] bit64_4.0.5         MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with tidytof","text":"tidytof makes heavy use two concepts may unfamiliar R beginners. first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . tidytof users also benefit relatively -depth understanding dplyr package, wonderful introductory vignette : Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":"vignette(\"dplyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"workflow-basics","dir":"Articles","previous_headings":"","what":"Workflow basics","title":"Getting started with tidytof","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data described : Reading, writing, preprocessing, visualizing data level individual cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples tidytof provides functions (“verbs”) operate levels analysis: Cell-level data: tof_read_data() reads single-cell data FCS CSV files disk tidy data frame called tof_tbl. tof_tbls represent cell row protein measurement (piece information associated given cell) column. tof_preprocess() transforms protein expression values using user-provided function (.e. log-transformation, centering, scaling) tof_downsample() reduces number cells tof_tibble via subsampling. tof_reduce_dimensions() performs dimensionality reduction (across columns) tof_write_data writes single-cell data tof_tibble back disk form FCS CSV file. Cluster-level data: tof_cluster() clusters cells using one several algorithms commonly applied high-dimensional cytometry data tof_metacluster() agglomerates clusters smaller number metaclusters tof_analyze_abundance() performs differential abundance analysis (DAA) clusters metaclusters across experimental groups tof_analyze_expression() performs differential expression analysis (DEA) clusters’ metaclusters’ marker expression levels across experimental groups tof_extract_features() computes summary statistics (mean marker expression) cluster. Also (optionally) pivots summary statistics sample-level tidy data frame row represents sample column represents cluster-level summary statistic. Sample-level data: tof_split_data() splits sample-level data training test set predictive modeling tof_create_grid() creates elastic net hyperparameter search grid model tuning tof_train_model() trains sample-level elastic net model saves tof_model object tof_predict() Applies trained tof_model new data predict sample-level outcomes tof_assess_model() calculates performance metrics trained tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"tidytof-verb-syntax","dir":"Articles","previous_headings":"","what":"{tidytof} verb syntax","title":"Getting started with tidytof","text":"exceptions, tidytof functions follow specific, shared syntax involves 3 types arguments always occur order. argument types follows: almost tidytof functions, first argument data frame (tibble). enables use pipe (|>) multi-step calculations, means first argument functions implicit (passed previous function using pipe). also means tidytof functions -called “single-table verbs,” exception tof_cluster_ddpr, “two-table verb” (details use tof_cluster_ddpr, see “clustering--metaclustering” vignette). second group arguments called column specifications, end suffix _col _cols. Column specifications unquoted column names tell tidytof verb columns compute particular operation. example, cluster_cols argument tof_cluster allows user specify column input data frames used perform clustering. Regardless verb requires , column specifications support tidyselect helpers follow rules tidyselection tidyverse verbs like dplyr::select() tidyr::pivot_longer(). Finally, third group arguments tidytof verb called method specifications, ’re comprised every argument isn’t input data frame column specification. Whereas column specifications represent columns used perform operation, method specifications represent details operation performed. example, tof_cluster_phenograph() function requires method specification num_neighbors, specifies many nearest neighbors used construct PhenoGraph algorithm’s k-nearest-neighbor graph. cases, tidytof sets reasonable defaults verb’s particular method specifications, workflows can also customized experimenting non-default values. following code demonstrates tidytof verb syntax looks practice, column method specifications explicitly pointed :","code":"data(ddpr_data)  set.seed(777L)  ddpr_data |>     tof_preprocess() |>     tof_cluster(         cluster_cols = starts_with(\"cd\"), # column specification         method = \"phenograph\", # method specification,     ) |>     tof_metacluster(         cluster_col = .phenograph_cluster, # column specification         num_metaclusters = 4, # method specification         method = \"kmeans\" # method specification     ) |>     tof_downsample(         group_cols = .kmeans_metacluster, # column specification         num_cells = 200, # method specification         method = \"constant\" # method specification     ) |>     tof_plot_cells_layout(         knn_cols = starts_with(\"cd\"), # column specification         color_col = .kmeans_metacluster, # column specification         num_neighbors = 7L, # method specification         node_size = 2L # method specification     )"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"pipelines","dir":"Articles","previous_headings":"","what":"Pipelines","title":"Getting started with tidytof","text":"tidytof verbs can used combination one another using pipe (|>) operator. example, multistep “pipeline” takes built-tidytof dataset performs following analytical steps: Arcsinh-transform column protein measurements (default behavior tof_preprocess verb Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding","code":"ddpr_data |>     # step 1     tof_preprocess() |>     # step 2     tof_cluster(         cluster_cols = starts_with(\"cd\"),         method = \"phenograph\",         # num_metaclusters = 4L,         seed = 2020L     ) |>     # step 3     tof_downsample(         group_cols = .phenograph_cluster,         method = \"constant\",         num_cells = 400     ) |>     # step 4     tof_reduce_dimensions(method = \"tsne\") |>     # step 5     tof_plot_cells_embedding(         embedding_cols = contains(\"tsne\"),         color_col = .phenograph_cluster     ) +     ggplot2::theme(legend.position = \"none\") #> Loading required namespace: Rtsne"},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"other-tips","dir":"Articles","previous_headings":"","what":"Other tips","title":"Getting started with tidytof","text":"tidytof designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze high-dimensional cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. Practically speaking, means things using tidytof. First, means tidytof designed quality--life features mind. example, may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search tidytof functions easily (even can’t remember specific function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions). Second, means tidytof functions relatively intuitive use due shared logic - words, understand use one tidytof function, understand use others. example shared logic across tidytof functions argument group_cols, shows multiple verbs (tof_downsample, tof_cluster, tof_daa, tof_dea, tof_extract_features, tof_write_data). case, group_cols works way: accepts unquoted vector column names (specified manually using tidyselection) used group cells operation performed. idea generalizes throughout tidytof: see argument one place, behave identically (least similarly) wherever else encounter . Finally, means tidytof optimized first ease--use, performance. humans computers interact data differently, always trade-choosing data representation intuitive human user vs. choosing data representation optimized computational speed memory efficiency. design choices conflict one another, team tends err side choosing representation easy--understand users even expense small performance costs. Ultimately, means tidytof may optimal tool every high-dimensional cytometry analysis, though hopefully general framework provide users useful functionality.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/articles/tidytof.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with tidytof","text":"","code":"sessionInfo() #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidytof_0.99.5 #>  #> loaded via a namespace (and not attached): #>   [1] gridExtra_2.3       rlang_1.1.3         magrittr_2.0.3      #>   [4] matrixStats_1.2.0   compiler_4.3.3      systemfonts_1.0.6   #>   [7] vctrs_0.6.5         stringr_1.5.1       pkgconfig_2.0.3     #>  [10] shape_1.4.6.1       fastmap_1.1.1       labeling_0.4.3      #>  [13] ggraph_2.2.1        utf8_1.2.4          rmarkdown_2.26      #>  [16] prodlim_2023.08.28  tzdb_0.4.0          ragg_1.3.0          #>  [19] purrr_1.0.2         xfun_0.42           glmnet_4.1-8        #>  [22] cachem_1.0.8        jsonlite_1.8.8      recipes_1.0.10      #>  [25] highr_0.10          tweenr_2.0.3        parallel_4.3.3      #>  [28] R6_2.5.1            bslib_0.6.2         stringi_1.8.3       #>  [31] parallelly_1.37.1   rpart_4.1.23        lubridate_1.9.3     #>  [34] jquerylib_0.1.4     Rcpp_1.0.12         iterators_1.0.14    #>  [37] knitr_1.45          future.apply_1.11.1 readr_2.1.5         #>  [40] flowCore_2.14.2     Matrix_1.6-5        splines_4.3.3       #>  [43] nnet_7.3-19         igraph_2.0.3        timechange_0.3.0    #>  [46] tidyselect_1.2.1    yaml_2.3.8          viridis_0.6.5       #>  [49] timeDate_4032.109   doParallel_1.0.17   codetools_0.2-19    #>  [52] listenv_0.9.1       lattice_0.22-5      tibble_3.2.1        #>  [55] Biobase_2.62.0      withr_3.0.0         Rtsne_0.17          #>  [58] evaluate_0.23       future_1.33.1       desc_1.4.3          #>  [61] survival_3.5-8      polyclip_1.10-6     pillar_1.9.0        #>  [64] foreach_1.5.2       stats4_4.3.3        generics_0.1.3      #>  [67] RcppHNSW_0.6.0      S4Vectors_0.40.2    hms_1.1.3           #>  [70] ggplot2_3.5.0       munsell_0.5.0       scales_1.3.0        #>  [73] globals_0.16.3      class_7.3-22        glue_1.7.0          #>  [76] tools_4.3.3         data.table_1.15.2   gower_1.0.1         #>  [79] fs_1.6.3            graphlayouts_1.1.1  tidygraph_1.3.1     #>  [82] grid_4.3.3          yardstick_1.3.1     tidyr_1.3.1         #>  [85] RProtoBufLib_2.14.1 ipred_0.9-14        colorspace_2.1-0    #>  [88] ggforce_0.4.2       cli_3.6.2           textshaping_0.3.7   #>  [91] fansi_1.0.6         cytolib_2.14.1      viridisLite_0.4.2   #>  [94] lava_1.8.0          dplyr_1.1.4         gtable_0.3.4        #>  [97] sass_0.4.9          digest_0.6.35       BiocGenerics_0.48.1 #> [100] ggrepel_0.9.5       farver_2.1.1        memoise_2.0.1       #> [103] htmltools_0.5.7     pkgdown_2.0.7       lifecycle_1.0.4     #> [106] hardhat_1.3.1       MASS_7.3-60.0.1"},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes T, Davis K, Nolan G (2024). tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis. doi:10.18129/B9.bioc.tidytof, https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.5, http://www.bioconductor.org/packages/tidytof. Keyes, J. T, Koladiya, Abhishek, Lo, Yu-Chen, Nolan, P. G, Davis, L. K (2023). “tidytof: user-friendly framework scalable reproducible high-dimensional cytometry data analysis.” Bioinformatics Advances, 3(1). doi:10.1093/bioadv/vbad071, https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984.","code":"@Manual{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {Timothy Keyes and Kara Davis and Garry Nolan},   year = {2024},   url = {http://www.bioconductor.org/packages/tidytof},   note = {https://github.com/keyes-timothy/tidytof/tidytof - R package version 0.99.5},   doi = {10.18129/B9.bioc.tidytof}, } @Article{,   title = {tidytof: a user-friendly framework for scalable and reproducible high-dimensional cytometry data analysis},   author = {{Keyes} and Timothy J. and {Koladiya} and {Abhishek} and {Lo} and {Yu-Chen} and {Nolan} and Garry P. and {Davis} and Kara L.},   year = {2023},   journal = {Bioinformatics Advances},   volume = {3},   number = {1},   doi = {10.1093/bioadv/vbad071},   url = {https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad071/7192984}, }"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytof-a-user-friendly-framework-for-interactive-and-reproducible-cytometry-data-analysis-","dir":"","previous_headings":"","what":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof R package implements open-source, integrated “grammar” single-cell data analysis high-dimensional cytometry data (.e. mass cytometry, full-spectrum flow cytometry, sequence-based cytometry). Specifically, tidytof provides easy--use pipeline handling high-dimensional cytometry data multiple levels observation - single-cell level, cell subpopulation (cluster) level, whole-sample level - automating many common data-processing tasks common “tidy data” interface. extension tidyverse ecosystem data manipulation tools R, tidytof’s functions developed internally consistent, human-centered set design principles. means using tidytof equally intuitive among scientists wide range coding experience (including beginners).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"prerequisites","dir":"","previous_headings":"Getting started","what":"Prerequisites","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof makes heavy use two concepts R beginners may unfamiliar . first pipe (|>), can read . second “grouping” data data.frame tibble using dplyr::group_by, can read . Everything else self-explanatory beginner advanced R users, though zero background running R code, read chapter R Data Science Hadley Wickham.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"package-structure","dir":"","previous_headings":"Getting started","what":"Package structure","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Broadly speaking, tidytof’s functionality organized support 3 levels analysis inherent single-cell data: Reading, writing, preprocessing, visualizing data level single cells Identifying describing cell subpopulations clusters Building models (inference prediction) level patients samples use tidytof levels cytometry data analysis detailed “Usage” section .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"can install development version tidytof GitHub following command: tidytof installed, can attach current R session using following code: addition, can install load packages need vignette:","code":"if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"keyes-timothy/tidytof\") library(tidytof) if (!require(FlowSOM)) BiocManager::install(\"FlowSOM\") library(FlowSOM)  if (!require(tidyverse)) install.packages(\"tidyverse\") library(tidyverse)"},{"path":[]},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"reading-data-with-tof_read_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Reading data with tof_read_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof comes bundled several example mass cytometry datasets. access raw .fcs .csv files containing data, use tidytof_example_data function. called arguments, tidytof_example_data return character vector naming datasets contained tidytof: obtain file path directory containing dataset, call tidytof_example_data one dataset names argument. example, obtain directory phenograph data, use following command: Using one directories (directory containing cytometry data local machine), can use tof_read_data read cytometry data raw files. Acceptable formats include .fcs files .csv files. Importantly, tof_read_data smart enough read single .fcs/.csv files multiple .fcs/.csv files depending whether first argument (path) leads single file directory files. , can use tof_read_data read .fcs files “phenograph” example dataset bundled tidytof store phenograph variable. Regardless input format, tidytof reads data extended tibble called tof_tbl (pronounced “tof tibble”), S3 class identical tbl_df, one additional attribute (“panel”). tidytof stores additional attribute tof_tbls , addition analyzing cytometry data individual experiments, cytometry users often want compare panels experiments find common markers compare metals associated particular markers across panels. notes tof_tbls: tof_tbls contains one cell per row one cytometry channel per column (provide data “tidy” format). tof_read_data adds additional column output tof_tbl encoding name file cell read (“file_name” column). tof_tbls inherit tbl_df class, methods available tibbles also available tof_tbls. example, dplyr’s useful mutate method can applied tof_tbl named phenograph convert columns encoding phenograph cluster ID stimulation condition cell belongs character vectors (instead original numeric codes uncleaned dataset). tof_tbl class preserved even transformations. Finally, retrieve panel information tof_tbl, use tof_get_panel: Importantly, tof_read_data uses opinionated heuristic mine different keyword slots input .fcs file(s) guess metals antigens used data collection. Thus, .csv files read using tof_read_data, recommended use panel_info argument provide panel manually (.csv files, unlike .fcs files, provide built-metadata columns contain).","code":"tidytof_example_data() #>  [1] \"aml\"                  \"ddpr\"                 \"ddpr_metadata.csv\"    #>  [4] \"mix\"                  \"mix2\"                 \"phenograph\"           #>  [7] \"phenograph_csv\"       \"scaffold\"             \"statistical_scaffold\" #> [10] \"surgery\" tidytof_example_data(\"phenograph\") #> [1] \"/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/tidytof/extdata/phenograph\" phenograph <-     tidytof_example_data(\"phenograph\") |>     tof_read_data()  phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph <-     phenograph |>     # mutate the input tof_tbl     mutate(         PhenoGraph = as.character(PhenoGraph),         Condition = as.character(Condition)     )  phenograph |>     # use dplyr's select method to show that the columns have been changed     select(where(is.character)) |>     head() #> # A tibble: 6 × 3 #>   file_name                  PhenoGraph Condition #>   <chr>                      <chr>      <chr>     #> 1 H1_PhenoGraph_cluster1.fcs 7          7         #> 2 H1_PhenoGraph_cluster1.fcs 6          6         #> 3 H1_PhenoGraph_cluster1.fcs 9          9         #> 4 H1_PhenoGraph_cluster1.fcs 2          2         #> 5 H1_PhenoGraph_cluster1.fcs 15         15        #> 6 H1_PhenoGraph_cluster1.fcs 12         12 phenograph |>     class() #> [1] \"tof_tbl\"    \"tbl_df\"     \"tbl\"        \"data.frame\" phenograph |>     tof_get_panel() |>     head() #> # A tibble: 6 × 2 #>   metals      antigens    #>   <chr>       <chr>       #> 1 Time        Time        #> 2 Cell_length Cell_length #> 3 Ir191       DNA1        #> 4 Ir193       DNA2        #> 5 Pd104       BC1         #> 6 Pd106       BC2"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"pre-processing-with-tof_preprocess","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Pre-processing with tof_preprocess","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Generally, raw ion counts analyte measured mass cytometer need transformed cytometry data analysis. Common preprocessing steps may include variance-stabilizing transformations - hyperbolic arcsine (arcsinh) transformation log transformation - scaling/centering, /denoising. perform standard preprocessing tasks tidytof, use tof_preprocess. tof_preprocess’s default behavior apply arcsinh transformation (cofactor 5) numeric column input tof_tibble well remove gaussian noise Fluidigm software adds ion count (noise added visualization purposes, analyses, removing recommended). example, can preprocess phenograph tof_tibble see first measurements change . alter tof_preprocess’s default behavior, change channel_cols argument (specify columns tof_tibble transformed) transform_fun argument (specify vector-valued function used transform channel_cols). keep gaussian noise added Fluidigm software (working dataset noise), set undo_noise argument FALSE. Finally, note built-function tof_postprocess works nearly identically tof_preprocess, provides different default behavior (namely, applying reverse arcsinh transformation cofactor 5 numeric columns. See ?tof_postprocess details).","code":"# before preprocessing phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1        440.         0.256        18.7  #> 2        705.         1.96         41.2  #> 3        383.        -0.302         6.51 #> 4         44.4        2.74         27.2  #> 5        892.         4.08         24.5  #> 6        448.         2.69         11.1 # perform preprocessing phenograph <-     phenograph |>     tof_preprocess()  # inspect new values phenograph |>     select(`CD45|Sm154`, `CD34|Nd148`, `CD38|Er167`) |>     head() #> # A tibble: 6 × 3 #>   `CD45|Sm154` `CD34|Nd148` `CD38|Er167` #>          <dbl>        <dbl>        <dbl> #> 1         5.17       0.0512         2.03 #> 2         5.64       0.382          2.81 #> 3         5.03      -0.0603         1.08 #> 4         2.88       0.524          2.40 #> 5         5.88       0.746          2.29 #> 6         5.19       0.515          1.54"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"downsampling-with-tof_downsample","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Downsampling with tof_downsample","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Often, cytometry experiments collect tens hundreds millions cells total, can useful downsample smaller, computationally tractable number cells - either final analysis developing code. , tidytof implements tof_downsample verb, allows downsampling using 3 methods. Using tidytof’s built-dataset phenograph_data (smaller version dataset read ), can see original size dataset 1000 cells per cluster, 3000 cells total: randomly sample 200 cells per cluster, can use tof_downsample using “constant” method: Alternatively, wanted sample 50% cells cluster, use “prop” method: finally, might also interested taking slightly different approach downsampling downsamples number cells fixed constant proportion, fixed density phenotypic space. example, following scatterplot demonstrates certain areas phenotypic density phenograph_data contain cells others along cd34/cd38 axes:  reduce number cells dataset local density around cell dataset relatively constant, can use “density” method tof_downsample:  details, check documentation 3 underlying members tof_downsample_* function family (wrapped tof_downsample): tof_downsample_constant tof_downsample_prop tof_downsample_density","code":"data(phenograph_data)  phenograph_data |>     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1            1000 #> 2 cluster2            1000 #> 3 cluster3            1000 phenograph_data |>     # downsample     tof_downsample(         method = \"constant\",         group_cols = phenograph_cluster,         num_cells = 200     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             200 #> 2 cluster2             200 #> 3 cluster3             200 phenograph_data |>     # downsample     tof_downsample(         method = \"prop\",         group_cols = phenograph_cluster,         prop_cells = 0.5     ) |>     # count the number of downsampled cells in each cluster     count(phenograph_cluster) #> # A tibble: 3 × 2 #>   phenograph_cluster     n #>   <chr>              <int> #> 1 cluster1             500 #> 2 cluster2             500 #> 3 cluster3             500 phenograph_data |>     # preprocess all numeric columns in the dataset     tof_preprocess(undo_noise = FALSE) |>     # make a scatterplot     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw() phenograph_data |>     tof_preprocess(undo_noise = FALSE) |>     tof_downsample(         density_cols = c(cd34, cd38),         target_prop_cells = 0.25,         method = \"density\",     ) |>     ggplot(aes(x = cd34, y = cd38)) +     geom_point(alpha = 0.5) +     scale_x_continuous(limits = c(NA, 1.5)) +     scale_y_continuous(limits = c(NA, 4)) +     theme_bw()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"writing-data-with-tof_write_data","dir":"","previous_headings":"Usage > Analyzing data at the single-cell level","what":"Writing data with tof_write_data","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"Finally, users may wish store single-cell data .fcs .csv files transformation, concatenation, filtering, data processing steps dimensionality reduction /clustering (see ). write single-cell data tof_tbl .fcs .csv files, use tof_write_data. tof_write_data’s trickiest argument group_cols, argument used specify columns tof_tibble used group cells (.e. rows tof_tibble) separate .fcs .csv files. Simply put, argument allows tof_write_data create single .fcs .csv file unique combination values columns specified user. example , cells grouped 3 output .fcs files - one 3 clusters encoded phenograph_cluster column phenograph_data. files following names (derived values phenograph_cluster column): cluster1.fcs cluster2.fcs cluster3.fcs However, suppose wanted write multiple files cluster breaking cells two groups: express high levels pstat5 express low levels pstat5. can use dplyr::mutate create new column phenograph_data breaks cells high- low-pstat5 expression groups, add column group_cols specification: write 6 files following names (derived values phenograph_cluster expression_group). cluster1_low.fcs cluster1_high.fcs cluster2_low.fcs cluster2_high.fcs cluster3_low.fcs cluster3_high.fcs useful feature tof_write_data automatically concatenate cells single .fcs .csv files based specified group_cols regardless many unique files cells came , allowing easy concatenation .fcs .csv files containing data single sample acquired multiple cytometry runs.","code":"# when copying and pasting this code, feel free to change this path # to wherever you'd like to save your output files my_path <- file.path(\"~\", \"Desktop\", \"tidytof_vignette_files\")  phenograph_data |>     tof_write_data(         group_cols = phenograph_cluster,         out_path = my_path,         format = \"fcs\"     ) phenograph_data |>     # create a variable representing if a cell is above or below the median     # expression level of pstat5     mutate(expression_group = if_else(pstat5 > median(pstat5), \"high\", \"low\")) |>     tof_write_data(         group_cols = c(phenograph_cluster, expression_group),         out_path = my_path,         format = \"fcs\"     )"},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"identifying-clusters-with-tof_cluster","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Identifying clusters with tof_cluster","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"input files read tabular format preprocessed/downsampled, might interested clustering data define communities cells shared characteristics. , can use tof_cluster verb. Several clustering methods implemented tidytof, including FlowSOM, PhenoGraph, k-means, others. demonstrate, can apply FlowSOM clustering algorithm phenograph_data . Note phenograph_data contains 6000 total cells (2000 3 clusters identified original PhenoGraph publication). output tof_cluster tof_tbl identical input tibble, now addition additional column (“.flowsom_metacluster”) encodes cluster id cell input tof_tbl. Note output columns added tibble tof_tbl tidytof begin full-stop (“.”) reduce likelihood collisions existing column names. output tof_cluster tof_tbl, can use dplyr’s count method assess accuracy FlowSOM clustering compared original clustering PhenoGraph paper. , can see FlowSOM algorithm groups cells PhenoGraph cluster one another (small number mistakes per PhenoGraph cluster). change clustering algorithm tof_cluster uses, alter method flag; change columns used compute clusters, change cluster_cols flag. finally, want return tibble includes cluster labels (cluster labels added new column input tof_tbl), set augment FALSE.","code":"phenograph_clusters <-     phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"))  phenograph_clusters |>     select(sample_name, .flowsom_metacluster, everything()) |>     head() #> # A tibble: 6 × 26 #>   sample_name      .flowsom_metacluster phenograph_cluster    cd19 cd11b    cd34 #>   <chr>            <chr>                <chr>                <dbl> <dbl>   <dbl> #> 1 H1_PhenoGraph_c… 13                   cluster1           -0.0336 2.46   0.608  #> 2 H1_PhenoGraph_c… 18                   cluster1            0.324  0.856 -0.116  #> 3 H1_PhenoGraph_c… 10                   cluster1            0.532  2.67   0.909  #> 4 H1_PhenoGraph_c… 8                    cluster1            0.0163 2.97   0.0725 #> 5 H1_PhenoGraph_c… 13                   cluster1            0.144  2.98   0.128  #> 6 H1_PhenoGraph_c… 8                    cluster1            0.742  3.41   0.336  #> # ℹ 20 more variables: cd45 <dbl>, cd123 <dbl>, cd33 <dbl>, cd47 <dbl>, #> #   cd7 <dbl>, cd44 <dbl>, cd38 <dbl>, cd3 <dbl>, cd117 <dbl>, cd64 <dbl>, #> #   cd41 <dbl>, pstat3 <dbl>, pstat5 <dbl>, pampk <dbl>, p4ebp1 <dbl>, #> #   ps6 <dbl>, pcreb <dbl>, `pzap70-syk` <dbl>, prb <dbl>, `perk1-2` <dbl> phenograph_clusters |>     count(phenograph_cluster, .flowsom_metacluster, sort = TRUE) #> # A tibble: 23 × 3 #>    phenograph_cluster .flowsom_metacluster     n #>    <chr>              <chr>                <int> #>  1 cluster3           12                     323 #>  2 cluster3           15                     318 #>  3 cluster2           3                      309 #>  4 cluster1           17                     234 #>  5 cluster2           2                      218 #>  6 cluster2           4                      206 #>  7 cluster1           8                      182 #>  8 cluster1           18                     167 #>  9 cluster1           9                      162 #> 10 cluster3           20                     162 #> # ℹ 13 more rows # will result in a tibble with only 1 column (the cluster labels) phenograph_data |>     tof_preprocess() |>     tof_cluster(method = \"flowsom\", cluster_cols = contains(\"cd\"), augment = FALSE) |>     head() #> # A tibble: 6 × 1 #>   .flowsom_metacluster #>   <chr>                #> 1 13                   #> 2 3                    #> 3 10                   #> 4 11                   #> 5 10                   #> 6 11"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"dimensionality-reduction-with-tof_reduce_dimensions","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Dimensionality reduction with tof_reduce_dimensions()","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"clusters identified, useful tool visualizing dimensionality reduction, form unsupervised machine learning used represent high-dimensional datasets smaller, easier--visualize number dimensions. tidytof includes several algorithms commonly used biologists dimensionality reduction: Principal component analysis (PCA), t-distributed stochastic neighbor embedding (tSNE), uniform manifold approximation projection (UMAP). apply dataset, use tof_reduce_dimensions: default, tof_reduce_dimensions add reduced-dimension feature embeddings input tof_tbl return augmented tof_tbl (, tof_tbl new columns embedding dimension) result. return features embeddings , set augment FALSE (tof_cluster). Regardless method used, reduced-dimension feature embeddings can visualized using ggplot2 (graphics package):   visualizations can helpful qualitatively describing phenotypic differences clusters dataset. example, example , can see one clusters high CD11b expression, whereas others lower CD11b expression.","code":"# perform the dimensionality reduction phenograph_tsne <-     phenograph_clusters |>     tof_reduce_dimensions(method = \"tsne\")  # select only the tsne embedding columns using a tidyselect helper (contains) phenograph_tsne |>     select(contains(\"tsne\")) |>     head() #> # A tibble: 6 × 2 #>   .tsne1 .tsne2 #>    <dbl>  <dbl> #> 1  -8.41   17.2 #> 2   1.91   13.6 #> 3  23.9    20.1 #> 4   4.79   22.3 #> 5  -4.99   22.4 #> 6  11.0    20.2 # plot the tsne embeddings using color to distinguish between clusters phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = phenograph_cluster)) +     geom_point(shape = 21) +     theme_bw() +     labs(fill = NULL) # plot the tsne embeddings using color to represent CD11b expression phenograph_tsne |>     ggplot(aes(x = .tsne1, y = .tsne2, fill = cd11b)) +     geom_point(shape = 21) +     scale_fill_viridis_c() +     theme_bw() +     labs(fill = \"CD11b expression\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"differential-discovery-analysis-with-tof_analyze_abundance-and-tof_analyze_expression","dir":"","previous_headings":"Usage > Analyzing data at the cluster-level","what":"Differential discovery analysis with tof_analyze_abundance and tof_analyze_expression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"dimensionality reduction can used visualize clustering result, many cytometry users also want use statistical tools rigorously quantify clusters(s) dataset associate particular experimental clinical variable. analyses often grouped umbrella term differential discovery analysis include comparing relative size clusters experimental conditions (differential abundance analysis; DAA) well comparing marker expression patterns clusters experimental conditions (differential expression analysis; DEA). tidytof provides tof_analyze_abundance tof_analyze_expression verbs differential abundance differential expression analyses, respectively. demonstrate use verbs, ’ll first download dataset originally collected development CITRUS algorithm. data available HDCytoData package, available Bioconductor can downloaded following command: load CITRUS data current R session, can call function HDCytoData, provide us format {flowCore} package (called “flowSet”). convert tidy tibble, can use tidytof built-method converting flowCore objects tof_tbl’s . Thus, can see citrus_data tof_tbl 172791 cells (one row) 39 pieces information cell (one column). can also extract metadata raw data join single-cell data using functions tidyverse: Thus, now sample-level information patient sample collected stimulation condition (“Basal” “BCR-XL”) sample exposed data acquisition. Finally, can join metadata single-cell tof_tbl obtain cleaned dataset. data cleaning steps, now citrus_data, tof_tbl containing cells collected 8 patients. Specifically, 2 samples taken patient: one cells’ B-cell receptors stimulated (BCR-XL) one (Basal). citrus_data, cell’s patient origin stored patient column, cell’s stimulation condition stored stimulation column. addition, population_id column stores information cluster labels applied cell using combination FlowSOM clustering manual merging (details, run ?HDCytoData::Bodenmiller_BCR_XL R console). might wonder certain clusters expand deplete within patients two stimulation conditions described - question requires differential abundance analysis (DAA). tidytof’s tof_analyze_abundance verb supports use 3 statistical approaches performing DAA: diffcyt, generalized-linear mixed modeling (GLMMs), simple t-tests. setup described uses paired design 2 experimental conditions interest (Basal vs. BCR-XL), can use paired t-test method: Based output, can see 6 8 clusters statistically different abundance two stimulation conditions. Using tidytof easy integration tidyverse packages, can use result visualize fold-changes cluster (within patient) BCR-XL condition compared Basal condition using ggplot2:  Importantly, output tof_analyze_abundance depends slightly underlying statistical method used, details can found documentation tof_analyze_abundance_* function family member: tof_analyze_abundance_diffcyt tof_analyze_abundance_glmm tof_analyze_abundance_ttest Similarly, suppose ’re interested intracellular signaling proteins change expression levels two stimulation conditions clusters. Differential Expression Analysis (DEA) can performed using tidytof’s tof_analyze_expression verb. , can use paired t-tests multiple-hypothesis correction test significant differences cluster’s expression signaling markers stimulation conditions. output tof_analyze_expression() also depends underlying test used, can see result looks relatively similar output tof_analyze_abundance(). , output tibble row represents differential expression results single cluster-marker pair - example, first row represents difference expression pS6 cluster 1 BCR-XL Basal conditions. row includes raw p-value multiple-hypothesis-corrected p-value cluster-marker pair. result can used make volcano plot visualize results cluster-marker pairs:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"HDCytoData\") citrus_raw <- HDCytoData::Bodenmiller_BCR_XL_flowSet()  citrus_data <-     citrus_raw |>     as_tof_tbl(sep = \"_\") citrus_metadata <-     tibble(         file_name = as.character(flowCore::pData(citrus_raw)[[1]]),         sample_id = seq_along(file_name),         patient = str_extract(file_name, \"patient[:digit:]\"),         stimulation = str_extract(file_name, \"(BCR-XL)|Reference\")     ) |>     mutate(         stimulation = if_else(stimulation == \"Reference\", \"Basal\", stimulation)     )  citrus_metadata |>     head() #> # A tibble: 6 × 4 #>   file_name                          sample_id patient  stimulation #>   <chr>                                  <int> <chr>    <chr>       #> 1 PBMC8_30min_patient1_BCR-XL.fcs            1 patient1 BCR-XL      #> 2 PBMC8_30min_patient1_Reference.fcs         2 patient1 Basal       #> 3 PBMC8_30min_patient2_BCR-XL.fcs            3 patient2 BCR-XL      #> 4 PBMC8_30min_patient2_Reference.fcs         4 patient2 Basal       #> 5 PBMC8_30min_patient3_BCR-XL.fcs            5 patient3 BCR-XL      #> 6 PBMC8_30min_patient3_Reference.fcs         6 patient3 Basal citrus_data <-     citrus_data |>     left_join(citrus_metadata, by = \"sample_id\") daa_result <-     citrus_data |>     tof_analyze_abundance(         cluster_col = population_id,         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  daa_result #> # A tibble: 8 × 8 #>   population_id    p_val   p_adj significant      t    df mean_diff mean_fc #>   <chr>            <dbl>   <dbl> <chr>        <dbl> <dbl>     <dbl>   <dbl> #> 1 1             0.000924 0.00535 \"*\"         -5.48      7  -0.00743   0.644 #> 2 2             0.00623  0.0166  \"*\"         -3.86      7  -0.0156    0.674 #> 3 3             0.0235   0.0314  \"*\"         -2.88      7  -0.0638    0.849 #> 4 4             0.0235   0.0314  \"*\"          2.88      7   0.0832    1.38  #> 5 5             0.0116   0.0232  \"*\"          3.39      7   0.00246   1.08  #> 6 6             0.371    0.371   \"\"          -0.955     7  -0.0168    0.919 #> 7 7             0.00134  0.00535 \"*\"          5.14      7   0.0202    1.14  #> 8 8             0.236    0.270   \"\"          -1.30      7  -0.00228   0.901 plot_data <-     citrus_data |>     mutate(population_id = as.character(population_id)) |>     left_join(         select(daa_result, population_id, significant, mean_fc),         by = \"population_id\"     ) |>     dplyr::count(patient, stimulation, population_id, significant, mean_fc, name = \"n\") |>     group_by(patient, stimulation) |>     mutate(prop = n / sum(n)) |>     ungroup() |>     pivot_wider(         names_from = stimulation,         values_from = c(prop, n),     ) |>     mutate(         diff = `prop_BCR-XL` - prop_Basal,         fc = `prop_BCR-XL` / prop_Basal,         population_id = fct_reorder(population_id, diff),         direction =             case_when(                 mean_fc > 1 & significant == \"*\" ~ \"increase\",                 mean_fc < 1 & significant == \"*\" ~ \"decrease\",                 TRUE ~ NA_character_             )     )  significance_data <-     plot_data |>     group_by(population_id, significant, direction) |>     summarize(diff = max(diff), fc = max(fc)) |>     ungroup()  plot_data |>     ggplot(aes(x = population_id, y = fc, fill = direction)) +     geom_violin(trim = FALSE) +     geom_hline(yintercept = 1, color = \"red\", linetype = \"dotted\", size = 0.5) +     geom_point() +     geom_text(         aes(x = population_id, y = fc, label = significant),         data = significance_data,         size = 8,         nudge_x = 0.2,         nudge_y = 0.06     ) +     scale_x_discrete(labels = function(x) str_c(\"cluster \", x)) +     scale_fill_manual(         values = c(\"decrease\" = \"#cd5241\", \"increase\" = \"#207394\"),         na.translate = FALSE     ) +     labs(         x = NULL,         y = \"Abundance fold-change (stimulated / basal)\",         fill = \"Effect\",         caption = \"Asterisks indicate significance at an adjusted p-value of 0.05\"     ) signaling_markers <-     c(         \"pNFkB_Nd142\", \"pStat5_Nd150\", \"pAkt_Sm152\", \"pStat1_Eu153\", \"pStat3_Gd158\",         \"pSlp76_Dy164\", \"pBtk_Er166\", \"pErk_Er168\", \"pS6_Yb172\", \"pZap70_Gd156\"     )  dea_result <-     citrus_data |>     tof_preprocess(channel_cols = any_of(signaling_markers)) |>     tof_analyze_expression(         cluster_col = population_id,         marker_cols = any_of(signaling_markers),         effect_col = stimulation,         group_cols = patient,         test_type = \"paired\",         method = \"ttest\"     )  dea_result |>     head() #> # A tibble: 6 × 9 #>   population_id marker   p_val   p_adj significant     t    df mean_diff mean_fc #>   <chr>         <chr>    <dbl>   <dbl> <chr>       <dbl> <dbl>     <dbl>   <dbl> #> 1 1             pS6_Y… 7.58e-8 2.12e-6 *            22.9     7     2.56    4.31  #> 2 2             pS6_Y… 1.16e-7 2.12e-6 *            21.6     7     2.13    2.49  #> 3 3             pBtk_… 1.32e-7 2.12e-6 *           -21.2     7    -0.475   0.289 #> 4 7             pBtk_… 1.18e-7 2.12e-6 *           -21.5     7    -0.518   0.286 #> 5 8             pBtk_… 1.30e-7 2.12e-6 *           -21.2     7    -0.516   0.324 #> 6 4             pBtk_… 7.85e-7 1.05e-5 *           -16.3     7    -0.462   0.296 volcano_plot <-     dea_result |>     tof_plot_clusters_volcano(         use_ggrepel = TRUE     )  volcano_plot"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"analyzing-data-at-the-patient--and-sample-level","dir":"","previous_headings":"Usage","what":"Analyzing data at the patient- and sample-level","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition verbs operate single-cell data directly, tidytof implements functions aggregating single-cell measurements cluster- sample-level summary statistics can analyzed using variety statistical models.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"feature-extraction-with-tof_extract_features","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Feature extraction with tof_extract_features","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"addition functions analyzing visualizing cytometry data single-cell cluster levels, tidytof’s tof_extract_features verb allows users aggregate single-cell cluster-level information order summarize whole-samples (whole-patients) cells collected. features can useful visualizing differences patients samples different experimental conditions building machine learning models. understand tof_extract_features verb works, ’s easiest look subroutines (members tof_extract_* function family) independently. First, tof_extract_proportion, extracts proportion cells cluster within sample (samples defined using group_cols argument): Like members tof_extract_* function family, tof_extract_proportion() returns one row sample (defined unique combination values group_cols) one column extracted feature (, one column proportion 8 clusters citrus_data). values can also returned “long” format changing format argument: Another member function family, tof_extract_central_tendency, computes central tendency (e.g. mean median) user-specified markers cluster. tof_extract_threshold similar tof_extract_central_tendency, calculates proportion cells user-specified expression value marker instead measure central tendency: two final members tof_extract_* function family – tof_extract_emd tof_extract_jsd designed specifically comparing distributions marker expression stimulation conditions. , must given stimulation_col identifies stimulation condition cell , basal_level specifies reference (.e. unstimulated) condition within stimulation_col. additional arguments, tof_extract_emd computes Earth-mover’s distance marker’s distribution stimulation conditions (within cluster) basal condition; similarly, tof_extract_jsd computes Jensen-Shannon divergence index distributions. values ways compare different 2 distributions one another computationally expensive (also higher-resolution) simply comparing measures central tendency. Finally, tof_extract_features verb provides wrapper members function family, allowing users extract multiple features types . example, following code extracts proportion cluster, median several markers cluster, EMD basal condition stimulated condition cluster patients citrus_data.","code":"# preprocess the numeric columns in the citrus dataset citrus_data <-     citrus_data |>     mutate(cluster = str_c(\"cluster\", population_id)) |>     tof_preprocess()  citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation)     ) |>     head() #> # A tibble: 6 × 10 #>   patient  stimulation `prop@cluster1` `prop@cluster2` `prop@cluster3` #>   <chr>    <chr>                 <dbl>           <dbl>           <dbl> #> 1 patient1 Basal                0.0190          0.0482           0.447 #> 2 patient1 BCR-XL               0.0109          0.0395           0.268 #> 3 patient2 Basal                0.0130          0.0280           0.491 #> 4 patient2 BCR-XL               0.0101          0.0143           0.358 #> 5 patient3 Basal                0.0326          0.0830           0.397 #> 6 patient3 BCR-XL               0.0200          0.0412           0.323 #> # ℹ 5 more variables: `prop@cluster4` <dbl>, `prop@cluster5` <dbl>, #> #   `prop@cluster6` <dbl>, `prop@cluster7` <dbl>, `prop@cluster8` <dbl> citrus_data |>     tof_extract_proportion(         cluster_col = cluster,         group_cols = c(patient, stimulation),         format = \"long\"     ) |>     head() #> # A tibble: 6 × 4 #>   patient  stimulation cluster     prop #>   <chr>    <chr>       <chr>      <dbl> #> 1 patient1 Basal       cluster1 0.0190  #> 2 patient1 Basal       cluster2 0.0482  #> 3 patient1 Basal       cluster3 0.447   #> 4 patient1 Basal       cluster4 0.237   #> 5 patient1 Basal       cluster5 0.00219 #> 6 patient1 Basal       cluster6 0.0759 citrus_data |>     tof_extract_central_tendency(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         central_tendency_function = mean     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_ct` `CD4_Nd145@cluster1_ct` #>   <chr>    <chr>                          <dbl>                   <dbl> #> 1 patient1 BCR-XL                          4.80                  0.0967 #> 2 patient1 Basal                           4.68                  0.765  #> 3 patient2 BCR-XL                          5.00                 -0.0579 #> 4 patient2 Basal                           4.88                  0.808  #> 5 patient3 BCR-XL                          5.04                 -0.0432 #> 6 patient3 Basal                           4.98                  0.745  #> # ℹ 22 more variables: `CD20_Sm147@cluster1_ct` <dbl>, #> #   `CD45_In115@cluster2_ct` <dbl>, `CD4_Nd145@cluster2_ct` <dbl>, #> #   `CD20_Sm147@cluster2_ct` <dbl>, `CD45_In115@cluster3_ct` <dbl>, #> #   `CD4_Nd145@cluster3_ct` <dbl>, `CD20_Sm147@cluster3_ct` <dbl>, #> #   `CD45_In115@cluster4_ct` <dbl>, `CD4_Nd145@cluster4_ct` <dbl>, #> #   `CD20_Sm147@cluster4_ct` <dbl>, `CD45_In115@cluster5_ct` <dbl>, #> #   `CD4_Nd145@cluster5_ct` <dbl>, `CD20_Sm147@cluster5_ct` <dbl>, … citrus_data |>     tof_extract_threshold(         cluster_col = cluster,         group_cols = c(patient, stimulation),         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         threshold = 5     ) |>     head() #> # A tibble: 6 × 26 #>   patient  stimulation `CD45_In115@cluster1_threshold` CD4_Nd145@cluster1_thre…¹ #>   <chr>    <chr>                                 <dbl>                     <dbl> #> 1 patient1 BCR-XL                                0.516                         0 #> 2 patient1 Basal                                 0.365                         0 #> 3 patient2 BCR-XL                                0.554                         0 #> 4 patient2 Basal                                 0.452                         0 #> 5 patient3 BCR-XL                                0.547                         0 #> 6 patient3 Basal                                 0.549                         0 #> # ℹ abbreviated name: ¹​`CD4_Nd145@cluster1_threshold` #> # ℹ 22 more variables: `CD20_Sm147@cluster1_threshold` <dbl>, #> #   `CD45_In115@cluster2_threshold` <dbl>, #> #   `CD4_Nd145@cluster2_threshold` <dbl>, #> #   `CD20_Sm147@cluster2_threshold` <dbl>, #> #   `CD45_In115@cluster3_threshold` <dbl>, #> #   `CD4_Nd145@cluster3_threshold` <dbl>, … # Earth-mover's distance citrus_data |>     tof_extract_emd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         emd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                   0.864                   2.47                  13.0  #> 2 patient2                   1.11                    7.05                  10.8  #> 3 patient3                   0.670                   6.23                  10.5  #> 4 patient4                   2.64                    5.86                   9.90 #> 5 patient5                   0.594                   7.56                   8.13 #> 6 patient6                   0.661                   4.77                   7.97 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_emd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_emd`, ³​`BCR-XL_CD20_Sm147@cluster3_emd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_emd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_emd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_emd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_emd` <dbl>, … # Jensen-Shannon Divergence citrus_data |>     tof_extract_jsd(         cluster_col = cluster,         group_cols = patient,         marker_cols = any_of(c(\"CD45_In115\", \"CD4_Nd145\", \"CD20_Sm147\")),         jsd_col = stimulation,         reference_level = \"Basal\"     ) |>     head() #> # A tibble: 6 × 25 #>   patient  BCR-XL_CD45_In115@clu…¹ BCR-XL_CD4_Nd145@clu…² BCR-XL_CD20_Sm147@cl…³ #>   <chr>                      <dbl>                  <dbl>                  <dbl> #> 1 patient1                 0.0367                  0.0513                  0.347 #> 2 patient2                 0.00831                 0.168                   0.401 #> 3 patient3                 0.0104                  0.115                   0.357 #> 4 patient4                 0.0301                  0.135                   0.205 #> 5 patient5                 0.00911                 0.0789                  0.274 #> 6 patient6                 0.00972                 0.0346                  0.214 #> # ℹ abbreviated names: ¹​`BCR-XL_CD45_In115@cluster3_jsd`, #> #   ²​`BCR-XL_CD4_Nd145@cluster3_jsd`, ³​`BCR-XL_CD20_Sm147@cluster3_jsd` #> # ℹ 21 more variables: `BCR-XL_CD45_In115@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD20_Sm147@cluster7_jsd` <dbl>, #> #   `BCR-XL_CD45_In115@cluster4_jsd` <dbl>, #> #   `BCR-XL_CD4_Nd145@cluster4_jsd` <dbl>, … citrus_data |>     tof_extract_features(         cluster_col = cluster,         group_cols = patient,         stimulation_col = stimulation,         lineage_cols = any_of(c(\"CD45_In115\", \"CD20_Sm147\", \"CD33_Nd148\")),         signaling_cols = any_of(signaling_markers),         signaling_method = \"emd\",         basal_level = \"Basal\"     ) |>     head()"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"outcomes-modeling-with-tof_model","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level","what":"Outcomes modeling with tof_model","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"[brief intro building predictive models might motivated .] tidytof implements several functions building predictive models using sample- patient-level data. illustrate work, first download patient-level data paper combining sample-level clinical annotations one tidytof’s built-data objects (ddpr_metadata). data processing steps result ddpr_patients tibble. numeric columns ddpr_patients represent aggregated cell population features sample (see Supplementary Table 5 paper details). non-numeric columns represent clinical metadata sample (run ?ddpr_metadata information). also preprocessing steps might want perform now save us headaches ’re fitting models later.","code":"data(ddpr_metadata)  # link for downloading the sample-level data from the Nature Medicine website data_link <-     \"https://static-content.springer.com/esm/art%3A10.1038%2Fnm.4505/MediaObjects/41591_2018_BFnm4505_MOESM3_ESM.csv\"  # downloading the data and combining it with clinical annotations ddpr_patients <-     readr::read_csv(data_link, skip = 2L, n_max = 78L, show_col_types = FALSE) |>     dplyr::rename(patient_id = Patient_ID) |>     left_join(ddpr_metadata, by = \"patient_id\") |>     dplyr::filter(!str_detect(patient_id, \"Healthy\"))  ddpr_patients |>     select(where(~ !is.numeric(.x))) |>     head() #> # A tibble: 6 × 8 #>   patient_id gender mrd_risk nci_rome_risk relapse_status type_of_relapse cohort #>   <chr>      <chr>  <chr>    <chr>         <chr>          <chr>           <chr>  #> 1 UPN1       Male   Interme… Standard      Yes            Early           Train… #> 2 UPN1-Rx    Male   Interme… Standard      Yes            Early           Train… #> 3 UPN2       Male   Interme… Standard      No             <NA>            Train… #> 4 UPN3       Female Standard Standard      No             <NA>            Train… #> 5 UPN4       Male   Standard Standard      No             <NA>            Valid… #> 6 UPN5       Female Standard High          No             <NA>            Valid… #> # ℹ 1 more variable: ddpr_risk <chr> ddpr_patients <-     ddpr_patients |>     # convert the relapse_status variable to a factor first,     # which is something we'll want for fitting the model later     # and create the time_to_event and event columns for survival modeling     mutate(         relapse_status = as.factor(relapse_status),         time_to_event = if_else(relapse_status == \"Yes\", time_to_relapse, ccr),         event = if_else(relapse_status == \"Yes\", 1, 0)     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"separating-the-training-and-validation-cohorts","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Separating the training and validation cohorts","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"original DDPR paper, patients used fit model rest used assess model tuned. can separate training validation cohorts using cohort variable ddpr_patients","code":"ddpr_training <-     ddpr_patients |>     dplyr::filter(cohort == \"Training\")  ddpr_validation <-     ddpr_patients |>     dplyr::filter(cohort == \"Validation\") nrow(ddpr_training) #> [1] 49  nrow(ddpr_validation) #> [1] 12"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"building-a-classifier-using-logistic-regression","dir":"","previous_headings":"Usage > Analyzing data at the patient- and sample-level > Outcomes modeling with tof_model","what":"Building a classifier using logistic regression","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"First, can build elastic net classifier predict patients relapse patients won’t (ignoring time--event data now). , can use relapse_status column ddpr_training outcome variable: Specifically, can use tof_split_data function split cohort training test set either (“simple” split) multiple times (using either k-fold cross-validation bootstrapping). case, use 5-fold cross-validation, reading documentation tof_split_data demonstrates use methods. output tof_split_data varies depending split_method used. cross-validation, result rset object rsample package. rset objects type tibble two columns: splits - column entry rsplit object (contains single resample full dataset) id - character column entry represents name fold entry splits belongs . can inspect one resamples splits column see contain: Note can use rsample::training rsample::testing return training test obeservations resampling: , can feed training_split tof_train_model function tune logistic regression model predicts relapse_status leukemia patient. sure check tof_create_grid documentation learn make hyperparameter search grid model tuning (case, limit mixture parameter value 1, fits sparse lasso model). Also note demonstration purposes, include features come one cell population (“Population 2”) original dataset, means probably shouldn’t expect model perform well one original paper (select many features). output tof_train_model tof_model, object containing information trained model (can passed tof_predict tof_assess_model verbs). tof_model printed, information optimal hyperparamters printed, table nonzero model coefficients model. can use trained model make predictions validation data set aside earlier: can see model gets (!) predictions correct validation set set aside. can also assess model directly using tof_assess_model can make ROC curve using metrics:  can assess model validation data…","code":"# find how many of each outcome we have in our cohort ddpr_training |>     dplyr::count(relapse_status) #> # A tibble: 2 × 2 #>   relapse_status     n #>   <fct>          <int> #> 1 No                31 #> 2 Yes               18 training_split <-     ddpr_training |>     tof_split_data(         split_method = \"k-fold\",         num_cv_folds = 5,         strata = relapse_status     )  training_split #> #  5-fold cross-validation using stratification  #> # A tibble: 5 × 2 #>   splits          id    #>   <list>          <chr> #> 1 <split [38/11]> Fold1 #> 2 <split [39/10]> Fold2 #> 3 <split [39/10]> Fold3 #> 4 <split [40/9]>  Fold4 #> 5 <split [40/9]>  Fold5 my_resample <- training_split$splits[[1]]  print(my_resample) #> <Analysis/Assess/Total> #> <38/11/49>  class(my_resample) #> [1] \"vfold_split\" \"rsplit\" my_resample |>     rsample::training() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN1          3.06       0.583   0.00449     0.164       1.94     0.416 #> 2 UPN1-Rx       0.0395     0.618   0.0634      0.572       2.93     0.944 #> 3 UPN3          0.633      0.0234  0.0165      0.0327      2.25     0.226 #> 4 UPN8          0.951      0.958   0.161       0.556       3.18     0.556 #> 5 UPN10         0.00374    0.761   0.000696    0.829       3.19     0.886 #> 6 UPN10-Rx      0.00240    0.167   0.203       0.802       2.57     0.822 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, …  my_resample |>     rsample::testing() |>     head() #> # A tibble: 6 × 1,854 #>   patient_id Pop_P_Pop1 CD19_Pop1 CD20_Pop1 CD24_Pop1 CD34_Pop1 CD38_Pop1 #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> #> 1 UPN2           0.139     0.0662   0.0221     0.0825      2.25     0.454 #> 2 UPN6           5.62      0.550    0.00374    0.622       2.86     0.342 #> 3 UPN7           0.474     0.966    0.124      1.24        2.59     0.243 #> 4 UPN9          15.6       0.446    0.0445     0.163       2.86     0.434 #> 5 UPN12          0.0565    0.185    0.0115     0.142       2.49     0.254 #> 6 UPN17          1.40      1.52     0.0128     0.284       3.46     0.656 #> # ℹ 1,847 more variables: CD127_Pop1 <dbl>, CD179a_Pop1 <dbl>, #> #   CD179b_Pop1 <dbl>, IgMi_Pop1 <dbl>, IgMs_Pop1 <dbl>, TdT_Pop1 <dbl>, #> #   CD22_Pop1 <dbl>, tIkaros_Pop1 <dbl>, CD79b_Pop1 <dbl>, Ki67_Pop1 <dbl>, #> #   TSLPr_Pop1 <dbl>, RAG1_Pop1 <dbl>, CD123_Pop1 <dbl>, CD45_Pop1 <dbl>, #> #   CD10_Pop1 <dbl>, Pax5_Pop1 <dbl>, CD43_Pop1 <dbl>, CD58_Pop1 <dbl>, #> #   HLADR_Pop1 <dbl>, p4EBP1_FC_Basal_Pop1 <dbl>, pSTAT5_FC_Basal_Pop1 <dbl>, #> #   pPLCg1_2_FC_Basal_Pop1 <dbl>, pAkt_FC_Basal_Pop1 <dbl>, … class_mod <-     training_split |>     tof_train_model(         predictor_cols = contains(\"Pop2\"),         response_col = relapse_status,         model_type = \"two-class\",         hyperparameter_grid = tof_create_grid(mixture_values = 1),         impute_missing_predictors = TRUE,         remove_zv_predictors = TRUE # often a smart decision     ) print(class_mod) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 1e-05  #> # A tibble: 25 × 2 #>    feature             coefficient #>    <chr>                     <dbl> #>  1 p4EBP1_dP_IL7_Pop2        -2.59 #>  2 CD58_Pop2                  2.23 #>  3 (Intercept)               -1.83 #>  4 pSTAT5_dP_TSLP_Pop2        1.69 #>  5 p4EBP1_FC_IL7_Pop2         1.46 #>  6 CD43_Pop2                  1.37 #>  7 HLADR_Pop2                -1.32 #>  8 pSyk_dP_TSLP_Pop2          1.08 #>  9 pErk_dP_IL7_Pop2          -1.05 #> 10 Ki67_Pop2                 -1.05 #> # ℹ 15 more rows class_predictions <-     class_mod |>     tof_predict(new_data = ddpr_validation, prediction_type = \"class\")  class_predictions |>     dplyr::mutate(         truth = ddpr_validation$relapse_status     ) #> # A tibble: 12 × 2 #>    .pred truth #>    <chr> <fct> #>  1 Yes   No    #>  2 No    No    #>  3 No    Yes   #>  4 No    No    #>  5 No    No    #>  6 Yes   Yes   #>  7 Yes   Yes   #>  8 No    No    #>  9 No    No    #> 10 No    Yes   #> 11 No    Yes   #> 12 No    Yes # calling the function with no new_data evaluates the # the nodel using its training data training_assessment <-     class_mod |>     tof_assess_model()  training_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                    value #>   <chr>                     <dbl> #> 1 binomial_deviance       0.0291  #> 2 misclassification_error 0       #> 3 roc_auc                 1       #> 4 mse                     0.00119 #> 5 mae                     0.0285  #> 6 accuracy                1       #>  #> $roc_curve #> # A tibble: 51 × 5 #>       .threshold specificity sensitivity   tpr   fpr #>            <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf               0                1     1 1     #>  2    0.00000114      0                1     1 1     #>  3    0.0000955       0.0323           1     1 0.968 #>  4    0.000160        0.0645           1     1 0.935 #>  5    0.000190        0.0968           1     1 0.903 #>  6    0.000612        0.129            1     1 0.871 #>  7    0.000896        0.161            1     1 0.839 #>  8    0.00135         0.194            1     1 0.806 #>  9    0.00142         0.226            1     1 0.774 #> 10    0.00194         0.258            1     1 0.742 #> # ℹ 41 more rows #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                              31 #> 2 No           Yes                              0 #> 3 Yes          No                               0 #> 4 Yes          Yes                             18 class_mod |>     tof_plot_model() +     labs(subtitle = \"ROC Curve (Training data)\") validation_assessment <-     class_mod |>     tof_assess_model(new_data = ddpr_validation)  validation_assessment #> $model_metrics #> # A tibble: 6 × 2 #>   metric                  value #>   <chr>                   <dbl> #> 1 binomial_deviance       4.75  #> 2 misclassification_error 0.417 #> 3 roc_auc                 0.639 #> 4 mse                     0.759 #> 5 mae                     0.879 #> 6 accuracy                0.583 #>  #> $roc_curve #> # A tibble: 14 × 5 #>     .threshold specificity sensitivity   tpr   fpr #>          <dbl>       <dbl>       <dbl> <dbl> <dbl> #>  1 -Inf              0           1     1     1     #>  2    0.000240       0           1     1     1     #>  3    0.00105        0.167       1     1     0.833 #>  4    0.00195        0.167       0.833 0.833 0.833 #>  5    0.00230        0.333       0.833 0.833 0.667 #>  6    0.00472        0.5         0.833 0.833 0.5   #>  7    0.00618        0.667       0.833 0.833 0.333 #>  8    0.0464         0.667       0.667 0.667 0.333 #>  9    0.273          0.667       0.5   0.5   0.333 #> 10    0.286          0.667       0.333 0.333 0.333 #> 11    0.844          0.833       0.333 0.333 0.167 #> 12    0.852          0.833       0.167 0.167 0.167 #> 13    1.00           0.833       0     0     0.167 #> 14  Inf              1           0     0     0     #>  #> $confusion_matrix #> # A tibble: 4 × 3 #>   true_outcome predicted_outcome num_observations #>   <chr>        <chr>                        <int> #> 1 No           No                               5 #> 2 No           Yes                              1 #> 3 Yes          No                               4 #> 4 Yes          Yes                              2 class_mod |>     tof_plot_model(new_data = ddpr_validation) +     labs(subtitle = \"ROC Curve (Validation data)\")"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"tidytofs-design-principles-and-some-tips","dir":"","previous_headings":"","what":"{tidytof}’s Design Principles (and some tips)","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"{tidytof} designed multidisciplinary team wet-lab biologists, bioinformaticians, physician-scientists analyze cytometry kinds single-cell data solve variety problems. result, tidytof’s high-level API designed great care mirror tidyverse - , human-centered, consistent, composable, inclusive wide userbase. section, describe miscellaneous design decisions tips using tidytof may help enthusiastic user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_1-use-the-tof_-prefix-to-your-advantage","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"1. Use the tof_ prefix to your advantage.","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"may notice tidytof functions begin prefix tof_. intentional, allow use development environment’s code-completing software search functions easily (even don’t remember function name). reason, recommend using tidytof within RStudio development environment; however, many code editors predictive text functionality serves similar function. general, tidytof verbs organized way IDE’s code-completion tools also allow search (compare) related functions relative ease. (instance, tof_cluster_ prefix used clustering functions, tof_downsample_ prefix used downsampling functions).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_2-tidytof-functions-use-2-kinds-of-arguments","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"2. {tidytof} functions use 2 kinds of arguments","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof functions optimized working “tidy” data form tibbles data.frames. means tidytof functions share basic design principles terms arguments work. details design principles, check Getting Started tidytof vignette","code":""},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_3-use-tidytof-to-write-human-readable-pipelines","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"3. Use {tidytof} to write human-readable pipelines","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"real “magic” tidytof derives ability simplify multistep data-processing tasks simple readable chunk code. example, suppose just acquired .fcs files mass cytometer want perform following analysis: Read .fcs files R session Arcsinh-transform column protein measurements Cluster cells based surface markers panel Downsample dataset 100 random cells picked cluster Perform dimensionality reduction downsampled dataset using tSNE Visualize clusters using low-dimensional tSNE embedding using appropriate tidytof verbs step analysis, can easily write code function call corresponds exactly one step pipeline:  shown , stringing together tidytof verbs creates pipeline can read easily left--right top--bottom – means relatively easy return code later (modify , write methods section next high-impact manuscript!) , perhaps importantly, one colleagues return later want recreate analysis.","code":"input_path <- tidytof_example_data(\"phenograph\")  set.seed(0012)  input_path |>     # step 1     tof_read_data() |>     # step 2     tof_preprocess() |>     # step 3     tof_cluster(method = \"phenograph\") |>     # step 4     tof_downsample(         group_cols = .phenograph_cluster,         num_cells = 100,         method = \"constant\"     ) |>     # step 5     tof_reduce_dimensions(perplexity = 50, method = \"tsne\") |>     # step 6     tof_plot_cells_embedding(         embedding_cols = starts_with(\".tsne\"),         color_col = .phenograph_cluster     )"},{"path":"https://keyes-timothy.github.io/tidytof/index.html","id":"id_4-additional-resources","dir":"","previous_headings":"{tidytof}’s Design Principles (and some tips)","what":"4. Additional resources","title":"Analyze High-dimensional Cytometry Data Using Tidy Data Principles","text":"tidytof built top tidyverse family R packages. result, users tidytof benefit substantially spending hours dplyr, ggplot2, tidyr package vignettes learn many useful functions packages provide. access recommended list package vignettes, run following lines R code console:","code":"# dplyr vignette(topic = \"dplyr\", package = \"dplyr\") vignette(topic = \"grouping\", package = \"dplyr\") vignette(topic = \"colwise\", package = \"dplyr\")  # ggplot2 vignette(topic = \"ggplot2-specs\", package = \"ggplot2\")  # tidyr vignette(topic = \"tidy-data\", package = \"tidyr\") vignette(topic = \"nest\", package = \"tidyr\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"Coerce object SingleCellExperiment Coerce tof_tbl SingleCellExperiment","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"as_SingleCellExperiment(x, ...)  # S3 method for tof_tbl as_SingleCellExperiment(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"SingleCellExperiment SingleCellExperiment.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_SingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SingleCellExperiment — as_SingleCellExperiment","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a SeuratObject — as_seurat","title":"Coerce an object into a SeuratObject — as_seurat","text":"Coerce object SeuratObject Coerce tof_tbl SeuratObject","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"as_seurat(x, ...)  # S3 method for tof_tbl as_seurat(   x,   channel_cols = where(tof_is_numeric),   reduced_dimensions_cols,   metadata_cols = where(function(.x) !tof_is_numeric(.x)),   split_reduced_dimensions = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a SeuratObject — as_seurat","text":"x tof_tbl ... Unused. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default numeric columns. reduced_dimensions_cols Unquoted column names representing columns contain dimensionality reduction embeddings, tSNE UMAP embeddings. Supports tidyselect helpers. metadata_cols Unquoted column names representing columns contain metadata samples cell collected. nothing specified, default non-numeric columns. split_reduced_dimensions boolean value indicating whether dimensionality results x split separate slots resulting SingleCellExperiment. FALSE (default), split performed reducedDims slot result single entry (\"tidytof_reduced_dimensions\"). TRUE, split performed reducedDims slot result 1-4 entries depending dimensionality reduction results present x (\"tidytof_pca\", \"tidytof_tsne\", \"tidytof_umap\", \"tidytof_reduced_dimensions\"). Note \"tidytof_reduced_dimensions\" include dimensionality reduction results named according tidytof's pca, umap, tsne conventions.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a SeuratObject — as_seurat","text":"SeuratObject SeuratObject.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a SeuratObject — as_seurat","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"Convert object tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"flow_data FlowSet sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tof_tbl — as_tof_tbl.flowSet","text":"`tof_tbl`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"Coerce flowFrames flowSets tof_tbl's.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"as_tof_tbl(flow_data, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"flow_data flowFrame flowSet sep string indicating symbol used separate antigen names metal names columns output tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"tof_tbl.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tof_tbl's. — as_tof_tbl","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]]  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the cosine similarity between two vectors — cosine_similarity","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"Find cosine similarity two vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"","code":"cosine_similarity(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"x numeric vector y numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the cosine similarity between two vectors — cosine_similarity","text":"scalar value representing cosine similarity x y","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"dataset containing CyTOF measurements immune cells originally studied following paper:   Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"","code":"data(ddpr_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data frame 10000 rows 24 variables: sample_name name sample data read cd45 CyTOF measurement raw ion counts cd19 CyTOF measurement raw ion counts cd22 CyTOF measurement raw ion counts cd79b CyTOF measurement raw ion counts cd20 CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd10 CyTOF measurement raw ion counts cd24 CyTOF measurement raw ion counts cd127 CyTOF measurement raw ion counts cd43 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd58 CyTOF measurement raw ion counts psyk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pakt CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts perk CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"https://github.com/kara-davis-lab/DDPR","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from two samples: 5,000 B-cell lineage cells from a healthy\npatient and 5,000 B-cell lineage cells from a B-cell precursor Acute\nLymphoblastic Leukemia (BCP-ALL) patient. — ddpr_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"dataset containing patient-level clinical metadata samples originally studied following paper:  Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"","code":"data(ddpr_metadata)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data frame 10000 rows 12 variables: patient_id Name sample data read gender Gender patient sample collected age_at_diagnosis Age (years) patient sample collected wbc_count diagnostic White Blood Cell (WBC) count patient sample collected mrd_risk Risk stratification category patient using minimal residual disease (MRD) criteria nci_rome_risk Risk stratification category patient using National Cancer Institute (NCI) criteria relapse_status string representing whether patient relapsed time_to_relapse time (days) took patient relapse. Patients relapse value NA type_of_relapse string representing timing relapse patient.   \"early\" relapses occurred less 18 months diagnosis;   \"Early\" relapses occurred 18 months 32 months diagnosis;   \"Late\" relapses occurred later 32 months diagnosis. ccr number documented days continuous complete remission (CCR) patients relapse. patients relapsed value NA. cohort string representing sample used \"Training\" \"Validation\" cohort original study ddpr_risk risk category (\"Low\" \"High\") assigned sample using original paper's risk-stratification algorithm","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"Good Z, Sarno J, et al. Single-cell developmental classification B cell precursor acute lymphoblastic leukemia diagnosis reveals predictors relapse. Nat Med. 2018 May;24(4):474-483. doi: 10.1038/nm.4505. Epub 2018 Mar 5. PMID: 29505032; PMCID: PMC5953207. Supplementary Table 1.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/ddpr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical metadata for each patient sample in Good & Sarno et al. (2018). — ddpr_metadata","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the dot product between two vectors. — dot","title":"Find the dot product between two vectors. — dot","text":"Find dot product two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the dot product between two vectors. — dot","text":"","code":"dot(x, y)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the dot product between two vectors. — dot","text":"x numeric vector. y numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the dot product between two vectors. — dot","text":"dot product x y.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the extension for a file — get_extension","title":"Find the extension for a file — get_extension","text":"Find extension file","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the extension for a file — get_extension","text":"","code":"get_extension(filename)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the extension for a file — get_extension","text":"filename string representing name file local directory","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/get_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the extension for a file — get_extension","text":"file extension `filename`","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"L2 normalize an input vector x to a length of 1 — l2_normalize","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"L2 normalize input vector x length 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"","code":"l2_normalize(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"x numeric vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/l2_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L2 normalize an input vector x to a length of 1 — l2_normalize","text":"vector length length(x) magnitude 1","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the magnitude of a vector. — magnitude","title":"Find the magnitude of a vector. — magnitude","text":"Find magnitude vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the magnitude of a vector. — magnitude","text":"","code":"magnitude(x)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the magnitude of a vector. — magnitude","text":"x numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/magnitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the magnitude of a vector. — magnitude","text":"scalar value (magnitude x).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector used `tof_read_fcs` `tof_read_data` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"character vector entry pattern tidytof searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of metal name patterns supported by tidytof. — metal_masterlist","text":"named character vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_model. — new_tof_model","title":"Constructor for a tof_model. — new_tof_model","text":"Constructor tof_model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_model. — new_tof_model","text":"","code":"new_tof_model(   model,   recipe,   penalty,   mixture,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   outcome_colnames,   training_data )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_model. — new_tof_model","text":"model glmnet model. recipe prepped recipe object. penalty double indicating lambda value used within glmnet path. mixture double indicating alpha value used fit glmnet model. model_type string indicating type glmnet model fit. outcome_colnames training_data ","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_model. — new_tof_model","text":"`tof_model`, S3 class includes trained glmnet model recipe used perform associated preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"dataset containing CyTOF measurements healthy control cells originally studied following paper:   Levine JH, Simonds EF, et al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell. 2015 Jul 2;162(1):184-97. doi: 10.1016/j.cell.2015.05.047. Epub 2015 Jun 18. PMID: 26095251; PMCID: PMC4508757.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"","code":"data(phenograph_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data frame 6000 rows 26 variables: sample_name Name sample data read phenograph_cluster Numeric ID cluster assignment row cd19 CyTOF measurement raw ion counts cd11b CyTOF measurement raw ion counts cd34 CyTOF measurement raw ion counts cd45 CyTOF measurement raw ion counts cd123 CyTOF measurement raw ion counts cd33 CyTOF measurement raw ion counts cd47 CyTOF measurement raw ion counts cd7 CyTOF measurement raw ion counts cd44 CyTOF measurement raw ion counts cd38 CyTOF measurement raw ion counts cd3 CyTOF measurement raw ion counts cd117 CyTOF measurement raw ion counts cd64 CyTOF measurement raw ion counts cd41 CyTOF measurement raw ion counts pstat3 CyTOF measurement raw ion counts pstat5 CyTOF measurement raw ion counts pampk CyTOF measurement raw ion counts p4ebp1 CyTOF measurement raw ion counts ps6 CyTOF measurement raw ion counts pcreb CyTOF measurement raw ion counts pzap70-syk CyTOF measurement raw ion counts prb CyTOF measurement raw ion counts perk1-2 CyTOF measurement raw ion counts","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"https://cytobank.org/nolanlab/reports/Levine2015.html","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"data.frame","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/phenograph_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CyTOF data from 6,000 healthy immune cells from a single patient. — phenograph_data","text":"2000 cells 3 clusters identified original paper sampled.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% rlang :=, .data tidyselect all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, starts_with","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"See documentation object's original package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"# See examples in each object's original package NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"Reverses arcsinh transformation cofactor `scale_factor` shift `shift_factor`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"rev_asinh(x, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"x numeric vector. shift_factor scalar value `` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`. scale_factor scalar value `b` following equation used transform high-dimensional cytometry raw data ion counts using hyperbolic arcsinh function:    `new_x <- asinh(+ b * x)`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"numeric vector undergoing reverse arcsinh transformation","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/rev_asinh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverses arcsinh transformation with cofactor `scale_factor` and a\nshift of `shift_factor`. — rev_asinh","text":"","code":"shift_factor <- 0 scale_factor <- 1 / 5  input_value <- 20 asinh_value <- asinh(shift_factor + input_value * scale_factor)  restored_value <- rev_asinh(asinh_value, shift_factor, scale_factor)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to tidytof example data — tidytof_example_data","title":"Get paths to tidytof example data — tidytof_example_data","text":"tidytof comes bundled number sample .fcs files inst/extdata directory. function makes easy access.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data(dataset_name = NULL)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to tidytof example data — tidytof_example_data","text":"dataset_name Name dataset want access. NULL, names datasets (different study) listed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to tidytof example data — tidytof_example_data","text":"character vector file paths requested .fcs files located. `dataset_name` NULL, character vector dataset names (can used values `dataset_name`) returned instead.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tidytof_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to tidytof example data — tidytof_example_data","text":"","code":"tidytof_example_data() #> [1] \"aml\"               \"ddpr\"              \"ddpr_metadata.csv\" #> [4] \"mix\"               \"mix2\"              \"phenograph\"        #> [7] \"phenograph_csv\"    \"surgery\"           tidytof_example_data(dataset_name = \"phenograph\") #> [1] \"/home/runner/work/_temp/Library/tidytof/extdata/phenograph\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_abundance_*` function family: tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"tof_analyze_abundance(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"glmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_abundance_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_abundance_diffcyt, tof_analyze_abundance_glmm, tof_analyze_abundance_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Abundance Analysis (DAA) on high-dimensional cytometry data — tof_analyze_abundance","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using one three methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"tof_analyze_abundance_diffcyt(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"glmm\", \"edgeR\", \"voom\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without multiple samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential abundance analysis. Valid methods include \"glmm\" (default), \"edgeR\", \"voom\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"glmm\" differential abundance model. details OLREs , see diffcyt paper. \"glmm\" method can model observation-level random effects, values ignore argument (throw warning set TRUE). Defaults FALSE. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential abundance analysis. See testDA_GLMM, testDA_edgeR, testDA_voom details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect` character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named `fixed_effect` levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results` list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find several columns including following: * `p_val`, p-value associated tested effect input cluster * `p_adj`, multiple-comparison adjusted p-value (using p.adjust function) * values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared). details, see glmFit, voom, topTable, testDA_GLMM.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"three methods based generalized linear mixed models (\"glmm\"), edgeR (\"edgeR\"), voom (\"voom\"). \"glmm\" \"voom\" methods can model fixed effects random effects, \"edgeR\" method can model fixed effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with diffcyt — tof_analyze_abundance_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using generalized linear mixed-models. Users specify columns represent sample, cluster, fixed effect, random effect information, (mixed) binomial regression model fit using either glmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"tof_analyze_abundance_glmm(   tof_tibble,   sample_col,   cluster_col,   fixed_effect_cols,   random_effect_cols,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential abundance analysis. Supports tidyselect helpers. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential abundance analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"nested tibble two columns: `tested_effect` `daa_results`. first column, `tested_effect`, character vector indicating term differential abundance model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential abundance model represent difference cluster abundances samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `daa_results`, list tibbles entry gives differential abundance results tested_effect. Within entry `daa_results`, find `p_value`, p-value associated tested effect input cluster; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential abundance analysis (log-fold change cluster abundance levels compared).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with generalized linear mixed-models (GLMMs) — tof_analyze_abundance_glmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"function performs differential abundance analysis cell clusters contained within `tof_tbl` using simple t-tests. Users specify columns represent sample, cluster, effect information, either paired unpaired t-test (one per cluster) used detect significant differences sample types.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"tof_analyze_abundance_ttest(   tof_tibble,   cluster_col,   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster tested.   entry column match unique value input   {cluster_col}. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_abundance_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Abundance Analysis (DAA) with t-tests — tof_analyze_abundance_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one three methods (\"diffcyt\", \"glmm\", \"ttest\"). wraps members `tof_analyze_expression_*` function family: tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"tof_analyze_expression(tof_tibble, method = c(\"diffcyt\", \"glmm\", \"ttest\"), ...)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tof_tibble `tof_tbl` `tibble`. method string indicating statistical method used. Valid values include \"diffcyt\", \"lmm\", \"ttest\". ... Additional arguments pass onto `tof_analyze_expression_*` function family member corresponding chosen method.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"tibble nested tibble containing differential abundance results chosen method. See tof_analyze_expression_diffcyt, tof_analyze_expression_lmm, tof_analyze_expression_ttest details.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Differential Expression Analysis (DEA) on high-dimensional cytometry data — tof_analyze_expression","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using one two methods implemented diffcyt package differential discovery analysis high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"tof_analyze_expression_diffcyt(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   diffcyt_method = c(\"lmm\", \"limma\"),   include_observation_level_random_effects = FALSE,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `fixed_effect_cols`. Defaults numeric (integer double) columns. Supports tidyselect helpers. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. Note without many samples level random effect variables, can easy overfit mixed models. high-dimensional cytometry experiments, 2 fewer (often 0) random effect variables appropriate. diffcyt_method string indicating diffcyt method used differential expression analysis. Valid methods include \"lmm\" (default) \"limma\". include_observation_level_random_effects boolean value indicating \"observation-level random effects\" (OLREs) included random effect terms \"lmm\" differential expression model. details OLREs , see diffcyt paper. Defaults FALSE. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. ... Optional additional arguments pass --hood diffcyt function used perform differential expression analysis. See testDS_LMM testDS_limma details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `dea_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values conditions compared). tibble `dea_results` also two columns representing cluster marker corresponding p-value row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"two methods based linear mixed models (\"lmm\") limma (\"limma\"). \"lmm\" \"limma\" methods can model fixed effects random effects.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_diffcyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with diffcyt — tof_analyze_expression_diffcyt","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using linear mixed-models. Users specify columns represent sample, cluster, marker, fixed effect, random effect information, (mixed) linear regression model fit using either lmer glm.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"tof_analyze_expression_lmm(   tof_tibble,   sample_col,   cluster_col,   marker_cols = where(tof_is_numeric),   fixed_effect_cols,   random_effect_cols,   central_tendency_function = median,   min_cells = 3,   min_samples = 5,   alpha = 0.05 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` represents id sample cell collected. `sample_col` serve unique identifier sample collected data acquisition - cells value `sample_col` treated part observational unit. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) included differential discovery analysis. Defaults numeric (integer double) columns. Supports tidyselection. fixed_effect_cols Unquoted column names representing columns `tof_tibble` used model fixed effects differential expression analysis. Supports tidyselection. Generally speaking, fixed effects represent comparisons biological interest (often variables manipulated experiments), treated vs. non-treated, -treatment vs. -treatment, healthy vs. non-healthy. random_effect_cols Optional. Unquoted column names representing columns `tof_tibble` used model random effects differential expression analysis. Supports tidyselection. Generally speaking, random effects represent variables researcher wants control/account , necessarily biological interest. Example random effect variables might include batch id, patient id (paired design), patient age. analyses include random effects. central_tendency_function function used calculate measurement central tendency cluster/marker pair (used dependent variable linear model). Defaults median. min_cells integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential expression analysis. Clusters included differential expression testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"nested tibble two columns: `tested_effect` `dea_results`. first column, `tested_effect` character vector indicating term differential expression model used significance testing. values row obtained pasting together column names fixed effect variable values. example, fixed effect column named fixed_effect levels \"\", \"b\", \"c\" two terms `tested_effect`: \"fixed_effectb\" \"fixed_effectc\" (note level \"\" fixed_effect set reference level dummy coding). values correspond terms differential expression model represent difference cluster median expression values marker samples fixed_effect = \"b\" fixed_effect = \"\" samples fixed_effect = \"c\" fixed_effect = \"\", respectively. addition, note first row `tested_effect` always represent \"omnibus\" test, test significant differences levels fixed effect variable model. second column, `dea_results` list tibbles entry gives differential expression results tested_effect. Within entry `daa_results`, find `p_val`, p-value associated tested effect input cluster/marker pair; `p_adj`, multiple-comparison adjusted p-value (using p.adjust function), values associated underlying method used perform differential expression analysis (log-fold change clusters' median marker expression values levels compared).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"Specifically, one linear model fit cluster/marker pair. cluster/marker pair, user-supplied measurement central tendency (`central_tendency_function`), mean median, calculated across cells cluster sample--sample basis. , central tendency value used dependent variable linear model `fixed_effect_cols` fixed effects predictors `random_effect_cols` random effects predictors. models (one per cluster/marker pair) fit, p-values coefficient model multiple-comparisons adjusted using p.adjust function.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_lmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with linear mixed-models (LMMs) — tof_analyze_expression_lmm","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"function performs differential expression analysis cell clusters contained within `tof_tbl` using simple t-tests. Specifically, either unpaired paired t-test compare samples' marker expression distributions (two conditions) within cluster using user-specified summary function (.e. mean median). One t-test conducted per cluster/marker pair significant differences sample types detected multiple-hypothesis correction.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"tof_analyze_expression_ttest(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   effect_col,   group_cols,   test_type = c(\"unpaired\", \"paired\"),   summary_function = mean,   min_cells = 3,   min_samples = 5,   alpha = 0.05,   quiet = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names representing columns `tof_tibble` (.e. high-dimensional cytometry protein measurements) tested differential expression levels `effect_col`. Defaults numeric (integer double) columns. Supports tidyselect helpers. effect_col Unquoted column name representing column `tof_tibble` used break samples groups t-test. 2 unique values. group_cols Unquoted names columns `effect_col` used group cells independent observations. Fills similar role `sample_col` `tof_analyze_abundance_*` functions. example, experiment involves analyzing samples taken multiple patients two timepoints (`effect_col = timepoint`), group_cols name column representing patient IDs. test_type string indicating whether t-test \"unpaired\" (default) \"paired\". summary_function vector-valued function used summarize distribution marker cluster (within sample, grouped `group_cols`). Defaults `mean`. min_cells integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 3. min_samples integer value used filter clusters differential abundance analysis. Clusters included differential abundance testing least `min_cells` least `min_samples` samples. Defaults 5. alpha numeric value 0 1 indicating significance level applied multiple-comparison adjusted p-values differential abundance analysis. Defaults 0.05. quiet boolean value indicating whether warnings printed. Defaults `TRUE`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"tibble 7 columns: {cluster_col} name/ID cluster cluster/marker pair   tested. entry column match unique value input   {cluster_col}. marker name marker cluster/marker pair tested. t t-statistic computed cluster. df degrees freedom used t-test cluster. p_val (unadjusted) p-value t-test cluster. p_adj p.adjust-adjusted p-value t-test cluster. significant character vector \"*\" clusters    p_adj < alpha \"\" otherwise. mean_diff unpaired t-test, difference average   proportions cluster two levels `effect_col`. paired   t-test, average difference proportions cluster   two levels `effect_col` within given patient. mean_fc unpaired t-test, ratio average   proportions cluster two levels `effect_col`. paired   t-test, average ratio proportions cluster   two levels `effect_col` within given patient. 0.001 added   denominator ratio avoid divide--zero errors. \"levels\" attribute result indicates order different levels `effect_col` considered. `mean_diff` value row output computed subtracting second level first level, `mean_fc` value row computed dividing first level second level.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_analyze_expression_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Expression Analysis (DEA) with t-tests — tof_analyze_expression_ttest","text":"","code":"# For differential discovery examples, please see the package vignettes NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"function adds additional column `tibble` `tof_tbl` allow users incorporate manual cell type labels clusters identified using unsupervised algorithms.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"tof_annotate_clusters(tof_tibble, cluster_col, annotations)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` contains ids unsupervised cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. annotations data structure indicating annotate cluster id `cluster_col`. `annotations` can provided data.frame two columns (first name `cluster_col` contain unique cluster id; second can name contain character vector indicating manual annotation matched cluster id first column). `annotations` can also provided named character vector; case, entry `annotations` unique cluster id, names entry corresponding manual cluster annotation. See examples.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"`tof_tbl` number rows `tof_tibble` one additional column containing manual cluster annotations cell (character vector). `annotations` provided data.frame, new column name column containing cluster annotations `annotations`. `annotations` provided named character vector, new column named `{cluster_col}_annotation`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_annotate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually annotate tidytof-computed clusters using user-specified labels — tof_annotate_clusters","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # using named character vector sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = c(\"macrophage\" = \"a\", \"dendritic cell\" = \"b\")     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_id_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>                 #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage            #>  2  0.255   -0.216  0.120  0.400 a          macrophage            #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage            #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage            #>  5  0.622   -1.30  -0.301  0.987 a          macrophage            #>  6  1.15    -0.377 -0.602  2.19  a          macrophage            #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage            #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage            #>  9 -0.244    1.50   0.799  0.941 a          macrophage            #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage            #> # ℹ 990 more rows  # using two-column data.frame annotation_data_frame <-     data.frame(         cluster_id = c(\"a\", \"b\"),         cluster_annotation = c(\"macrophage\", \"dendritic cell\")     )  sim_data |>     tof_annotate_clusters(         cluster_col = cluster_id,         annotations = annotation_data_frame     ) #> # A tibble: 1,000 × 6 #>        cd45   cd38   cd34   cd19 cluster_id cluster_annotation #>       <dbl>  <dbl>  <dbl>  <dbl> <chr>      <chr>              #>  1 -1.40    -0.337 -0.166  1.12  a          macrophage         #>  2  0.255   -0.216  0.120  0.400 a          macrophage         #>  3 -2.44     0.621 -0.662 -0.985 a          macrophage         #>  4 -0.00557 -1.28  -0.531 -0.503 a          macrophage         #>  5  0.622   -1.30  -0.301  0.987 a          macrophage         #>  6  1.15    -0.377 -0.602  2.19  a          macrophage         #>  7 -1.82     0.104 -0.318 -0.165 a          macrophage         #>  8 -0.247   -0.704  0.308 -0.686 a          macrophage         #>  9 -0.244    1.50   0.799  0.941 a          macrophage         #> 10 -0.283   -0.303  1.75  -0.164 a          macrophage         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"Perform developmental clustering CyTOF data using pre-fit classifier","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"tof_apply_classifier(   cancer_tibble = NULL,   classifier_fit = NULL,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1,   parallel_vars )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"cancer_tibble `tibble` `tof_tibble` containing cells classified nearest healthy subpopulation (generally cancer cells). classifier_fit nested `tibble` produced `tof_build_classifier` row represents healthy cell subpopulation cells `cancer_tibble` classified using minimum distance. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_vars Unquoted column names indicating columns `cancer_tibble` use breaking data order parallelize classification. Defaults NULL. Supports tidyselect helpers.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"tibble `nrow(cancer_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `cancer_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_apply_classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on CyTOF data using a pre-fit classifier — tof_apply_classifier","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"Detect low-expression (.e. potentially failed) channels high-dimensional cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"tof_assess_channels(   tof_tibble,   channel_cols = where(tof_is_numeric),   negative_threshold = asinh(10/5),   negative_proportion_flag = 0.95 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tof_tibble `tof_tbl` `tibble`. channel_cols vector unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default analyze numeric columns. negative_threshold scalar indicating threshold measurement considered negative. Defaults hyperbolic arcsine transformation 10 counts. negative_proportion_flag scalar 0 1 indicating proportion cells tof_tibble need `negative_threshold` given marker order marker flagged. Defaults 0.95.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"tibble 3 columns number rows equal number columns `tof_tibble` chosen `channel_cols`. three columns \"channel\", character vector channel names, \"negative_proportion\", numeric vector values 0 1 indicating many cells `tof_tibble` `negative_threshold` channel, `flagged_channel`, boolean vector indicating whether channel flagged potentially failed (TRUE means channel large number cells `negative_threshold`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect low-expression (i.e. potentially failed) channels in high-dimensional cytometry data — tof_assess_channels","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1)     )  tof_assess_channels(tof_tibble = sim_data) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE            tof_assess_channels(tof_tibble = sim_data, channel_cols = c(cd4, cd8)) #> # A tibble: 2 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE            tof_assess_channels(tof_tibble = sim_data, negative_threshold = 2) #> # A tibble: 3 × 3 #>   channel negative_proportion flagged_channel #>   <chr>                 <dbl> <lgl>           #> 1 cd8                       1 TRUE            #> 2 cd4                       0 FALSE           #> 3 cd33                      0 FALSE"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"function evaluates result clustering procedure comparing mahalanobis distance cell centroid cluster assigned among cells given cluster. cells mahalanobis-distance z-score user-specified threshold flagged potentially anomalous. Note z-score calculated using modified formula minimize effect outliers (Z = x - median(x) / mad(x)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"tof_assess_clusters_distance(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   z_threshold = 3,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. z_threshold scalar indicating distance z-score threshold cell considered anomalous. Defaults 3. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"augment = FALSE (default), tibble 3 columns: \".mahalanobis_distance\" (mahalanobis distance cell centroid tits assigned cluster), \"z_score\" (modified z-score cell's mahalanobis distance relative cells dataset), \"flagged_cell\" (boolean indicating whether cell flagged z-score z_threshold). augment = TRUE, 3 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the z-score of each cell's\nmahalanobis distance to its cluster centroid and flagging outliers. — tof_assess_clusters_distance","text":"","code":"# simulate data sim_data_inner <-     dplyr::tibble(         cd45 = c(rnorm(n = 600), rnorm(n = 500, mean = -4)),         cd38 =             c(                 rnorm(n = 100, sd = 0.5),                 rnorm(n = 500, mean = -3),                 rnorm(n = 500, mean = 8)             ),         cd34 =             c(                 rnorm(n = 100, sd = 0.2, mean = -10),                 rnorm(n = 500, mean = 4),                 rnorm(n = 500, mean = 60)             ),         cd19 = c(rnorm(n = 100, sd = 0.3, mean = 10), rnorm(n = 1000)),         cluster_id = c(rep(\"a\", 100), rep(\"b\", 500), rep(\"c\", 500)),         dataset = \"inner\"     )  sim_data_outer <-     dplyr::tibble(         cd45 = c(rnorm(n = 10), rnorm(50, mean = 3), rnorm(n = 50, mean = -12)),         cd38 =             c(                 rnorm(n = 10, sd = 0.5),                 rnorm(n = 50, mean = -10),                 rnorm(n = 50, mean = 10)             ),         cd34 =             c(                 rnorm(n = 10, sd = 0.2, mean = -15),                 rnorm(n = 50, mean = 15),                 rnorm(n = 50, mean = 70)             ),         cd19 = c(rnorm(n = 10, sd = 0.3, mean = 19), rnorm(n = 100)),         cluster_id = c(rep(\"a\", 10), rep(\"b\", 50), rep(\"c\", 50)),         dataset = \"outer\"     )  sim_data <- rbind(sim_data_inner, sim_data_outer)  # detect anomalous cells (in this case, the \"outer\" dataset contains small # clusters that get lumped into the larger clusters in the \"inner\" dataset) z_result <-     sim_data |>     tof_assess_clusters_distance(cluster_col = cluster_id, z_threshold = 2.5)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"function evaluates result clustering procedure calculating mahalanobis distance cell centroids clusters dataset finding shannon entropy resulting vector distances. cells entropy threshold user-specified threshold flagged potentially anomalous. Entropy minimized (0) cell close one (small number) clusters, far rest . cell close multiple cluster centroids (.e. ambiguous phenotype), entropy large.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"tof_assess_clusters_entropy(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   entropy_threshold,   entropy_quantile = 0.9,   num_closest_clusters,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. entropy_threshold scalar indicating entropy threshold cell considered anomalous. unspecified, threshold computed using `entropy_quantile` (see ). (Note: Entropy often 0 1, can larger many classes/clusters). entropy_quantile scalar 0 1 indicating entropy quantile cell considered anomalous. Defaults 0.9, means cells entropy 90th percentile flagged. Ignored entropy_threshold specified directly. num_closest_clusters integer indicating many cell's closest cluster centroids mahalanobis distance included entropy calculation. Playing argument allow ignore distances clusters far away cell (thus may distort result, many distant centroids large distances can artificially inflate cells' entropy value; said, rarely issue empirically). Defaults clusters tof_tibble. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"augment = FALSE (default), tibble 2 + NUM_CLUSTERS columns. NUM_CLUSTERS number unique clusters cluster_col. Two columns \"entropy\" (entropy value cell) \"flagged_cell\" (boolean value indicating cell entropy value entropy_threshold). NUM_CLUSTERS columns contain mahalanobis distances cell clusters cluster_col (named \".mahalanobis_{cluster_name}\"). augment = TRUE, 2 + NUM_CLUSTERS columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_entropy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating the shannon entropy of each cell's\nmahalanobis distance to all cluster centroids and flagging outliers. — tof_assess_clusters_entropy","text":"","code":"# simulate data sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  # imagine a \"reference\" dataset in which \"cluster a\" isn't present sim_data_reference <-     sim_data |>     dplyr::filter(cluster_id %in% c(\"b\", \"c\"))  # if we cluster into the reference dataset, we will force all cells in # cluster a into a population where they don't fit very well sim_data <-     sim_data |>     tof_cluster(         healthy_tibble = sim_data_reference,         healthy_label_col = cluster_id,         method = \"ddpr\"     )  # we can evaluate the clustering quality by calculating by the entropy of the # mahalanobis distance vector for each cell to all cluster centroids entropy_result <-     sim_data |>     tof_assess_clusters_entropy(         cluster_col = .mahalanobis_cluster,         marker_cols = starts_with(\"cd\"),         entropy_quantile = 0.8,         augment = TRUE     )  # most cells in \"cluster a\" are flagged, and few cells in the other clusters are flagged_cluster_proportions <-     entropy_result |>     dplyr::group_by(cluster_id) |>     dplyr::summarize(         prop_flagged = mean(flagged_cell)     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"function evaluates result clustering procedure finding cell's K nearest neighbors, determining cluster majority assigned , checking matches cell's cluster assignment. cluster assignment majority cell's nearest neighbors match cell's cluster assignment, cell flagged potentially anomalous.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"tof_assess_clusters_knn(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   num_neighbors = min(10, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers used mahalanobis distance calculation. Defaults numeric columns. Supports tidyselection. num_neighbors integer indicating many neighbors found nearest neighbor calculation. distance_function string indicating distance function used perform k nearest neighbor calculation.  Options \"euclidean\" (default) \"cosine\". augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"augment = FALSE (default), tibble 2 columns: \".knn_cluster\" (character vector indicating cluster received majority vote cell's k nearest neighbors) \"flagged_cell\" (boolean value indicating cell's cluster assignment matched majority vote (TRUE) (FALSE)). augment = TRUE, 2 columns column-bound tof_tibble, resulting tibble returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_clusters_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a clustering result by calculating a cell's cluster assignment to that\nof its K nearest neighbors. — tof_assess_clusters_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd38 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd34 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cd19 = c(rnorm(n = 1000, sd = 1.5), rnorm(n = 1000, mean = 2), rnorm(n = 1000, mean = -2)),         cluster_id = c(rep(\"a\", 1000), rep(\"b\", 1000), rep(\"c\", 1000))     )  knn_result <-     sim_data |>     tof_assess_clusters_knn(         cluster_col = cluster_id,         num_neighbors = 10     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"tof_assess_flow_rate(   tof_tibble,   time_col,   group_cols,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   visualize = FALSE,   ...,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. group_cols Optional. Unquoted column names indicating columns used group cells analysis. Flow rate calculation performed independently within group. Supports tidyselect helpers. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. visualize boolean value indicating plot generated visualize timestep's relative flow rate (group) instead returning tibble directly. Defaults FALSE. ... Optional additional arguments pass facet_wrap. Ignored visualize = FALSE. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated). visualize = TRUE, ggplot object returned instead tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data — tof_assess_flow_rate","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         file_name = c(rep(\"a\", times = 500), rep(\"b\", times = 500)),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )   sim_data |>     tof_assess_flow_rate(         time_col = time,         group_cols = file_name,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"function performs simplified version flowAI's statistical test detect time periods abnormal flow rates course flow cytometry experiment. Briefly, relative flow rates timestep throughout data acquisition calculated (see tof_calculate_flow_rate), outlier timepoints particularly high low flow rates (.e. beyond extreme values t-distribution across timesteps) flagged.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"tof_assess_flow_rate_tibble(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000,   alpha_threshold = 0.01,   augment = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection. alpha_threshold scalar 0 1 indicating two-tailed significance level draw outlier thresholds t-distribution `num_timesteps` - 1 degrees freedom. Defaults 0.01. augment boolean value indicating output column-bind computed flags cell (see ) new columns `tof_tibble` (TRUE) tibble including computed flags returned (FALSE, default).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"tibble number rows `tof_tibble`. augment = FALSE (default), 3 columns: \"{time_col}\" (column `time_col`), \"timestep\" (numeric timestep cell assigned based value `time_col`), \"flagged_window\" (boolean vector indicating cell collecting timestep flagged high low flow rate). augment = TRUE, 3 columns column-bound `tof_tibble` return augmented version input dataset. (Note case, time_col duplicated).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_flow_rate_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect flow rate abnormalities in high-dimensional cytometry data (stored in a\nsingle data.frame) — tof_assess_flow_rate_tibble","text":"","code":"set.seed(1000L) sim_data <-     data.frame(         cd4 = rnorm(n = 1000, mean = 5, sd = 0.5),         cd8 = rnorm(n = 1000, mean = 0, sd = 0.1),         cd33 = rnorm(n = 1000, mean = 10, sd = 0.1),         time =             c(                 sample(1:100, size = 200, replace = TRUE),                 sample(100:400, size = 300, replace = TRUE),                 sample(1:150, size = 400, replace = TRUE),                 sample(1:500, size = 100, replace = TRUE)             )     )  sim_data |>     tof_assess_flow_rate(         time_col = time,         num_timesteps = 20,         visualize = TRUE     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess a trained elastic net model — tof_assess_model","title":"Assess a trained elastic net model — tof_assess_model","text":"function assesses trained `tof_model`'s performance new data computing model type-specific performance measurements. new data provided, performance metrics training data provided.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"tof_assess_model(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess a trained elastic net model — tof_assess_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance. new_data provided, model evaluation performed using training data used fit model. Alternatively, string \"tuning\" can provided access model's performance metrics (resampled) model tuning process.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess a trained elastic net model — tof_assess_model","text":"list performance metrics whose components depend model type: \"model_metrics\" tibble two columns (\"metric\" \"value\") containing standard performance metrics model type. linear models, \"mse\" (mean squared error predictions) \"mae\" (mean absolute error predictions). two-class models, \"roc_auc\" (area Receiver-Operating Curve classification), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). multiclass models, \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . survival models, \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). \"roc_curve\" Reported \"two-class\" \"multiclass\" models. ,  tibble provided reporting true-positive rate (tpr) false-positive  rate (fpr) threshold classification use plotting  receiver-operating curve. \"multiclass\" models, \".level\" column  allows separating values roc_curve one ROC can plotted  class. \"confusion_matrix\" Reported \"two-class\" \"multiclass\" models. , tibble provided reporting \"confusion matrix\" classification long-format. \"survival_curves\" Reported \"survival\" models. tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset whether sample placed \"high\" \"low\" risk group according predicted relative risk (tof_model's optimal relative_risk cutoff training dataset).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess a trained elastic net model — tof_assess_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # assess the model on new data tof_assess_model(tof_model = regression_model, new_data = new_tibble) #> $model_metrics #> # A tibble: 2 × 2 #>   metric value #>   <chr>  <dbl> #> 1 mse    0.795 #> 2 mae    0.788 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"Compute trained elastic net model's performance metrics using new_data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"","code":"tof_assess_model_new_data(tof_model, new_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations used evaluate `tof_model`'s performance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a trained elastic net model's performance metrics using new_data. — tof_assess_model_new_data","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"Access trained elastic net model's performance metrics using tuning data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"","code":"tof_assess_model_tuning(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"tof_model `tof_model` trained using tof_train_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_assess_model_tuning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a trained elastic net model's performance metrics using its tuning data. — tof_assess_model_tuning","text":"list performance metrics whose components depend model type.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"function performs quantile normalization high-dimensional cytometry data tidy format using either linear rescaling quantile normalization. channel specified `channel_cols` batch corrected, `group_cols` can used break cells groups batch correction performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"tof_batch_correct(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE,   method = c(\"rescale\", \"quantile\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted. method string indicating batch correction method used. Valid options \"rescale\" linear scaling (default) \"quantile\" quantile normalization using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles. Optionally, groups can specified normalized separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"tof_batch_correct_quantile(   tof_tibble,   channel_cols,   group_cols,   augment = TRUE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"function performs quantile normalization high-dimensional cytometry data tidy format using normalize.quantiles.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"tof_batch_correct_quantile_tibble(tof_tibble, channel_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_quantile_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch-correct a tibble of high-dimensional cytometry data using quantile\nnormalization. — tof_batch_correct_quantile_tibble","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"function performs quantile normalization high-dimensional cytometry data tidy format using linear rescaling. channel specified `channel_cols` rescaled maximum value 1 minimum value 0. `group_cols` specifies columns used break cells groups rescaling performed separately.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"tof_batch_correct_rescale(tof_tibble, channel_cols, group_cols, augment = TRUE)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells batch correction. Batch correction performed independently within group. Supports tidyselect helpers. augment boolean value indicating output replace `channel_cols` `tof_tibble` new, batch corrected columns (TRUE, default) return batch-corrected columns (FALSE) columns omitted.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"augment = TRUE, tibble number rows columns tof_tibble, columns specified `channel_cols` batch-corrected. augment = FALSE, tibble containing batch-corrected `channel_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_batch_correct_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform groupwise linear rescaling of high-dimensional cytometry measurements — tof_batch_correct_rescale","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"function takes `tibble` `tof_tibble` storing healthy cell measurements rows vector (`healthy_cell_labels`) representing cell subpopulation cell belongs. uses values calculate several values required perform \"developmental classification\" described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"","code":"tof_build_classifier(   healthy_tibble = NULL,   healthy_cell_labels = NULL,   classifier_markers = where(tof_is_numeric),   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_cell_labels character integer vector length `nrow(healthy_tibble)`. entry vector represent cell subpopulation label (cluster id) corresponding row `healthy_tibble`. classifier_markers Unquoted column names indicating columns `healthy_tibble` use developmental classification. Defaults numeric columns `healthy_tibble`. Supports tidyselect helpers. verbose boolean value indicating updates printed console classification. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_build_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids and covariance matrices for each cell subpopulation in\nhealthy CyTOF data. — tof_build_classifier","text":"tibble three columns: population (id healthy cell population), centroid (centroid vector cell population), covariance_matrix (covariance matrix cell population)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"Calculate relative flow rates different timepoints throughout flow mass cytometry run.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"tof_calculate_flow_rate(   tof_tibble,   time_col,   num_timesteps = nrow(tof_tibble)/1000 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tof_tibble `tof_tbl` `tibble`. time_col unquoted column name indicating column `tof_tibble` contains time cell collected. num_timesteps number bins `time_col` split. define \"timesteps\" data collection process. number cells analyzed cytometer counted bin separately represent relative average flow rate timestep data collection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"tibble 3 columns num_timesteps rows. row represent single timestep (error thrown `num_timesteps` larger number rows `tof_tibble`). three columns follows: \"timestep\", numeric vector indicating timestep represented given row; \"time_window\", factor showing interval `time_col` \"timestep\" defined; \"num_cells\", number cells collected timestep.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_calculate_flow_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the relative flow rates of different timepoints throughout a flow\nor mass cytometry run. — tof_calculate_flow_rate","text":"","code":"# simulate some data sim_data <-     data.frame(         cd4 = rnorm(n = 100, mean = 5, sd = 0.5),         cd8 = rnorm(n = 100, mean = 0, sd = 0.1),         cd33 = rnorm(n = 100, mean = 10, sd = 0.1),         time = sample(1:300, size = 100)     )  tof_calculate_flow_rate(tof_tibble = sim_data, time_col = time, num_timesteps = 20L) #>    timestep time_window num_cells #> 1         1 (6.71,21.6]         4 #> 2         2 (21.6,36.2]         6 #> 3         3 (36.2,50.8]         7 #> 4         4 (50.8,65.4]         7 #> 5         5   (65.4,80]         5 #> 6         6   (80,94.6]         4 #> 7         7  (94.6,109]         5 #> 8         8   (109,124]         4 #> 9         9   (124,138]         1 #> 10       10   (138,153]         7 #> 11       11   (153,168]         5 #> 12       12   (168,182]         2 #> 13       13   (182,197]         7 #> 14       14   (197,211]         7 #> 15       15   (211,226]         5 #> 16       16   (226,241]         2 #> 17       17   (241,255]         4 #> 18       18   (255,270]         5 #> 19       19   (270,284]         7 #> 20       20   (284,299]         6"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check argument specifications for a glmnet model. — tof_check_model_args","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"Check argument specifications glmnet model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"","code":"tof_check_model_args(   split_data,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   best_model_type = c(\"best\", \"best with sparsity\"),   response_col,   time_col,   event_col )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. Alternatively, unsplit tbl_df can provided, though recommended. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. best_model_type Currently unused. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_check_model_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check argument specifications for a glmnet model. — tof_check_model_args","text":"tibble. arguments specified correctly, tibble can used create recipe preprocessing.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"function uses specified distance metric classify cell data.frame matrix (`cancer_data`) one `nrow(classifier_fit)` subpopulations based minimum distance, described paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"","code":"tof_classify_cells(   classifier_fit,   cancer_data,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"classifier_fit tibble produced tof_build_classifier. cancer_data matrix row corresponds cell column corresponds measured CyTOF antigen. distance_function string indicating three distance functions used calculate distances row `cancer_data` healthy developmental subpopulations corresponding row `classifier_fit`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_classify_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify each cell (i.e. each row) in a matrix of cancer cells into its most\nsimilar healthy developmental subpopulation. — tof_classify_cells","text":"data.frame column represents distance cell input data healthy subpopulation cells classified .","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"Rename glmnet's default model evaluation metrics make interpretable","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"","code":"tof_clean_metric_names(metric_tibble, model_type)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"metric_tibble tibble column represents glmnet model evaluation metric default name. model_type string indicating type glmnet model trained.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_clean_metric_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename glmnet's default model evaluation metrics to make them more interpretable — tof_clean_metric_names","text":"tibble column represents glmnet model evaluation metric \"cleaned\" name.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster high-dimensional cytometry data. — tof_cluster","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"function wrapper around tidytof's tof_cluster_* function family. performs clustering high-dimensional cytometry data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"tof_cluster(   tof_tibble,   cluster_cols = where(tof_is_numeric),   group_cols = NULL,   ...,   augment = TRUE,   method )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. group_cols Optional. Unquoted column names indicating columns used group cells clustering. Clustering performed group independently. Supports tidyselect helpers. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster high-dimensional cytometry data. — tof_cluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 500),         cd38 = rnorm(n = 500),         cd34 = rnorm(n = 500),         cd19 = rnorm(n = 500)     )  tof_cluster(tof_tibble = sim_data, method = \"kmeans\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .kmeans_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>           #>  1  1.33  -0.447  1.50   0.436 11              #>  2 -1.20  -0.481 -0.391 -1.54  9               #>  3 -0.541  0.666 -1.68  -0.986 16              #>  4 -1.22   1.32   0.689 -0.791 10              #>  5  0.639  0.519 -1.32  -0.204 18              #>  6 -0.239  0.397 -0.780  0.372 1               #>  7  0.651  0.997 -0.665  0.805 18              #>  8  0.788  1.26   0.584 -0.953 19              #>  9 -0.344  0.388 -0.407 -0.442 13              #> 10  0.120  0.885 -2.26   0.583 17              #> # ℹ 490 more rows tof_cluster(tof_tibble = sim_data, method = \"phenograph\") #> # A tibble: 500 × 5 #>      cd45   cd38   cd34   cd19 .phenograph_cluster #>     <dbl>  <dbl>  <dbl>  <dbl> <chr>               #>  1  1.33  -0.447  1.50   0.436 2                   #>  2 -1.20  -0.481 -0.391 -1.54  1                   #>  3 -0.541  0.666 -1.68  -0.986 1                   #>  4 -1.22   1.32   0.689 -0.791 3                   #>  5  0.639  0.519 -1.32  -0.204 5                   #>  6 -0.239  0.397 -0.780  0.372 5                   #>  7  0.651  0.997 -0.665  0.805 4                   #>  8  0.788  1.26   0.584 -0.953 8                   #>  9 -0.344  0.388 -0.407 -0.442 1                   #> 10  0.120  0.885 -2.26   0.583 5                   #> # ℹ 490 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"function performs distance-based clustering high-dimensional cytometry data sorting cancer cells (passed function `tof_tibble`) phenotypically similar healthy cell subpopulation (passed function using `healthy_tibble`). details algorithm used perform clustering, see paper.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"tof_cluster_ddpr(   tof_tibble,   healthy_tibble,   healthy_label_col,   cluster_cols = where(tof_is_numeric),   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   parallel_cols,   return_distances = FALSE,   verbose = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"tof_tibble `tibble` `tof_tbl` containing cells classified nearest healthy subpopulation (generally cancer cells). healthy_tibble `tibble` `tof_tibble` containing cells healthy control samples (.e. disease samples). healthy_label_col unquoted column name indicating column `healthy_tibble` contains subpopulation label (cluster id) cell `healthy_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing DDPR clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. distance_function string indicating distance function used perform classification. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize classification using `foreach` `doParallel` backend. Supports tidyselect helpers. return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` healthy subpopulation centroids (return_distances = TRUE). verbose boolean value indicating whether progress updates printed developmental classification. Default FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"`return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`, character vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows `nrow(classifier_fit) + 1` columns. row represents cell `tof_tibble`, `nrow(classifier_fit)` columns represent distance cell healthy subpopulations' cluster centroids. final column represents cluster id healthy subpopulation minimum distance cell represented row. `return_distances = FALSE`, tibble one column named `.{distance_function}_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id developmental cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_ddpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform developmental clustering on high-dimensional cytometry data. — tof_cluster_ddpr","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  healthy_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  tof_cluster_ddpr(     tof_tibble = sim_data,     healthy_tibble = healthy_data,     healthy_label_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .mahalanobis_cluster #>    <chr>                #>  1 b                    #>  2 b                    #>  3 b                    #>  4 a                    #>  5 b                    #>  6 b                    #>  7 b                    #>  8 a                    #>  9 a                    #> 10 b                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"function performs FlowSOM clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around SOM MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"tof_cluster_flowsom(   tof_tibble = NULL,   cluster_cols = where(tof_is_numeric),   som_xdim = 10,   som_ydim = 10,   som_distance_function = c(\"euclidean\", \"manhattan\", \"chebyshev\", \"cosine\"),   perform_metaclustering = TRUE,   num_metaclusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing flowSOM clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. som_xdim width grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_ydim height grid used self-organizing map. total number clusters returned FlowSOM som_xdim * som_ydim, adjust value affect final number clusters. Defaults 10. som_distance_function distance function used self-organizing map calculations. Options \"euclidean\" (default), \"manhattan\", \"chebyshev\", \"cosine\". perform_metaclustering boolean value indicating metaclustering performed initial clustering result returned FlowSOM. Defaults TRUE. num_metaclusters integer indicating maximum number metaclusters returned metaclustering. Defaults 20. ... Optional additional parameters can passed BuildSOM function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"tibble one column named `.flowsom_cluster` `.flowsom_metacluster` depending value `perform_metaclustering`. column contain integer vector length `nrow(tof_tibble)` indicating id flowSOM cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"additional details FlowSOM algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform FlowSOM clustering on high-dimensional cytometry data — tof_cluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  tof_cluster_flowsom(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 200 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 10                   #>  2 10                   #>  3 8                    #>  4 5                    #>  5 10                   #>  6 15                   #>  7 6                    #>  8 8                    #>  9 15                   #> 10 2                    #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering grouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"","code":"tof_cluster_grouped(tof_tibble, group_cols, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"tof_tibble `tof_tbl` `tibble`. group_cols unquoted column name indicating columns used group cells clustering. Clustering performed group independently. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (grouped) high-dimensional cytometry data. — tof_cluster_grouped","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"function performs k-means clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements. mostly convenient wrapper around kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"tof_cluster_kmeans(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_clusters = 20,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tof_tibble `tof_tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing k-means clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_clusters integer indicating maximum number clusters returned. Defaults 20. ... Optional additional arguments can passed kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"tibble one column named `.kmeans_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id k-means cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on high-dimensional cytometry data. — tof_cluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_kmeans(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 14              #>  2 11              #>  3 4               #>  4 6               #>  5 20              #>  6 6               #>  7 16              #>  8 9               #>  9 3               #> 10 7               #> # ℹ 990 more rows tof_cluster_kmeans(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .kmeans_cluster #>    <chr>           #>  1 3               #>  2 9               #>  3 6               #>  4 12              #>  5 13              #>  6 15              #>  7 4               #>  8 18              #>  9 6               #> 10 18              #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"function performs PhenoGraph clustering high-dimensional cytometry data using user-specified selection input variables/high-dimensional cytometry measurements.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"tof_cluster_phenograph(   tof_tibble,   cluster_cols = where(tof_is_numeric),   num_neighbors = 30,   distance_function = c(\"euclidean\", \"cosine\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_cols Unquoted column names indicating columns `tof_tibble` use computing PhenoGraph clusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 30. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. ... Optional additional parameters can passed tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"tibble one column named `.phenograph_cluster`. column contain integer vector length `nrow(tof_tibble)` indicating id PhenoGraph cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"additional details Phenograph algorithm, see paper.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PhenoGraph clustering on high-dimensional cytometry data. — tof_cluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) tof_cluster_phenograph(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 6                   #>  2 3                   #>  3 4                   #>  4 6                   #>  5 5                   #>  6 5                   #>  7 1                   #>  8 10                  #>  9 10                  #> 10 7                   #> # ℹ 990 more rows tof_cluster_phenograph(tof_tibble = sim_data, cluster_cols = c(cd45, cd19)) #> # A tibble: 1,000 × 1 #>    .phenograph_cluster #>    <chr>               #>  1 11                  #>  2 7                   #>  3 5                   #>  4 5                   #>  5 5                   #>  6 1                   #>  7 9                   #>  8 6                   #>  9 6                   #> 10 2                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"function wrapper around tidytof's tof_cluster_* function family provides low-level API clustering ungrouped data frames. subroutine tof_cluster called directly users.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"","code":"tof_cluster_tibble(tof_tibble, ..., augment = TRUE, method)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"tof_tibble `tof_tbl` `tibble`. ... Additional arguments pass `tof_cluster_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"flowsom\", \"phenograph\", \"kmeans\", \"ddpr\", \"xshift\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cluster_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster (ungrouped) high-dimensional cytometry data. — tof_cluster_tibble","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"Compute Kaplan-Meier curve sample-level survival data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"","code":"tof_compute_km_curve(survival_curves)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"survival_curves tibble Kaplan-Meier curve computed. row must represent observation must two columns named \"time_to_event\" \"event\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_compute_km_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a Kaplan-Meier curve from sample-level survival data — tof_compute_km_curve","text":"tibble 3 columns: time_to_event, survival_probability, is_censored (whether event censored timepoint).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"function finding cosine distance rows numeric matrix numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"tof_cosine_dist(matrix, vector)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"matrix numeric matrix. vector numeric vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"numeric vector distances length `nrow(matrix)` ith entry represents cosine distance ith row `matrix` `vector`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_cosine_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for finding the cosine distance between each of the rows of a numeric\nmatrix and a numeric vector. — tof_cosine_dist","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"function creates regular hyperparameter search grid (form tibble) specifying search space two hyperparameters generalized linear model using glmnet package: regularization penalty term lasso/ridge regression mixture term.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid(   penalty_values,   mixture_values,   num_penalty_values = 5,   num_mixture_values = 5 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"penalty_values numeric vector unique elastic net penalty values (\"lambda\") include hyperparameter grid. unspecified, regular grid `num_penalty_values` 10^(-10) 10^(0) used. mixture_values numeric vector elastic net mixture values (\"alpha\") include hyperparameter grid. unspecified, regular grid `num_mixture_values` 0 1 used. num_penalty_values Optional. `penalty_values` supplied, `num_penalty_values` (integer) can given specify many equally-spaced penalty values 10^(-10) 1 included hyperparameter grid. method used, regular grid always returned. Defaults 5. num_mixture_values Optional. `mixture_values` supplied, `num_mixture_values` (integer) can given specify many equally-spaced penalty values 0 (ridge regression) 1 (lasso) included hyperparameter grid. method used, regular grid always returned. Defaults 5.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"tibble two numeric columns: `penalty` `mixture`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an elastic net hyperparameter search grid of a specified size — tof_create_grid","text":"","code":"tof_create_grid() #> # A tibble: 25 × 2 #>         penalty mixture #>           <dbl>   <dbl> #>  1 0.0000000001    0    #>  2 0.0000000001    0.25 #>  3 0.0000000001    0.5  #>  4 0.0000000001    0.75 #>  5 0.0000000001    1    #>  6 0.0000000316    0    #>  7 0.0000000316    0.25 #>  8 0.0000000316    0.5  #>  9 0.0000000316    0.75 #> 10 0.0000000316    1    #> # ℹ 15 more rows  tof_create_grid(num_penalty_values = 10, num_mixture_values = 5) #> # A tibble: 50 × 2 #>          penalty mixture #>            <dbl>   <dbl> #>  1 0.0000000001     0    #>  2 0.0000000001     0.25 #>  3 0.0000000001     0.5  #>  4 0.0000000001     0.75 #>  5 0.0000000001     1    #>  6 0.00000000129    0    #>  7 0.00000000129    0.25 #>  8 0.00000000129    0.5  #>  9 0.00000000129    0.75 #> 10 0.00000000129    1    #> # ℹ 40 more rows  tof_create_grid(penalty_values = c(0.01, 0.1, 0.5)) #> # A tibble: 15 × 2 #>    penalty mixture #>      <dbl>   <dbl> #>  1    0.01    0    #>  2    0.01    0.25 #>  3    0.01    0.5  #>  4    0.01    0.75 #>  5    0.01    1    #>  6    0.1     0    #>  7    0.1     0.25 #>  8    0.1     0.5  #>  9    0.1     0.75 #> 10    0.1     1    #> 11    0.5     0    #> 12    0.5     0.25 #> 13    0.5     0.5  #> 14    0.5     0.75 #> 15    0.5     1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"Create recipe preprocessing sample-level cytometry data elastic net model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"","code":"tof_create_recipe(   feature_tibble,   predictor_cols,   outcome_cols,   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. predictor_cols Unquoted column names indicating columns data contained `feature_tibble` used predictors elastic net model. Supports tidyselect helpers. outcome_cols Unquoted column names indicating columns `feature_tibble` used outcome variables elastic net model. Supports tidyselect helpers. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a recipe for preprocessing sample-level cytometry data for an elastic net model — tof_create_recipe","text":"recipe object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data. — tof_downsample","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"function downsamples number cells `tof_tbl` using one three methods (randomly sampling constant number cells, randomly sampling proportion cells, performing density-dependent downsampling per algorithm Qiu et al., (2011)).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"tof_downsample(   tof_tibble,   group_cols = NULL,   ...,   method = c(\"constant\", \"prop\", \"density\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). ... Additional arguments pass `tof_downsample_*` function family member corresponding chosen method. method string indicating downsampling method use: \"constant\" (default), \"prop\", \"density\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"downsampled `tof_tbl` number columns input `tof_tibble`, fewer rows. number rows result depend chosen downsampling method.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data. — tof_downsample","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 200 cells from the input data tof_downsample(     tof_tibble = sim_data,     num_cells = 200L,     method = \"constant\" ) #> # A tibble: 200 × 5 #>      cd45    cd38    cd34    cd19 cluster_id #>     <dbl>   <dbl>   <dbl>   <dbl> <chr>      #>  1  1.26   0.998   0.444  -0.591  h          #>  2  0.341  1.50   -0.0357  1.11   a          #>  3  1.39   0.0528  0.900   0.851  o          #>  4 -0.542 -1.44    0.510   0.435  a          #>  5  1.14   1.77   -2.72    2.04   p          #>  6 -0.271 -0.450   0.541   0.325  k          #>  7 -1.19  -0.680   0.459   0.557  b          #>  8 -0.492  0.726   0.215  -1.06   g          #>  9 -0.926  1.10    0.989   0.741  s          #> 10 -1.31   0.203   1.83   -0.0195 c          #> # ℹ 190 more rows  # sample 10% of all cells from the input data tof_downsample(     tof_tibble = sim_data,     prop_cells = 0.1,     method = \"prop\" ) #> # A tibble: 100 × 5 #>      cd45    cd38    cd34   cd19 cluster_id #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>      #>  1 -0.271 -0.450   0.541   0.325 k          #>  2  1.49  -0.0481  1.25    0.344 q          #>  3 -0.190 -1.77   -0.665   0.240 n          #>  4 -1.25  -0.0155  0.439  -1.53  r          #>  5 -1.05   0.616  -0.159   0.989 m          #>  6 -0.236  1.32   -0.388   0.134 i          #>  7 -1.22   1.36    0.209   0.293 m          #>  8 -1.50  -0.976  -2.46    0.688 r          #>  9  0.287  0.0766 -0.0885  0.133 l          #> 10 -1.34  -0.197  -1.06    1.45  f          #> # ℹ 90 more rows  # sample ~10% of cells from the input data using density dependence tof_downsample(     tof_tibble = sim_data,     target_prop_cells = 0.1,     method = \"density\" ) #> # A tibble: 93 × 5 #>      cd45    cd38     cd34   cd19 cluster_id #>     <dbl>   <dbl>    <dbl>  <dbl> <chr>      #>  1 -0.754 -1.28    0.537    0.824 z          #>  2 -1.52   0.146   0.895   -1.11  v          #>  3 -0.952  0.705  -0.481   -1.59  p          #>  4  0.668  0.911  -0.406    1.03  e          #>  5 -1.58   0.504   1.99    -0.764 r          #>  6  1.22   2.31   -0.486    0.649 a          #>  7  0.417 -2.14   -1.70     0.713 y          #>  8  1.36   0.199  -0.00351  1.11  b          #>  9 -0.546  0.574   1.65     0.230 r          #> 10  0.658 -0.0507  1.25     0.855 c          #> # ℹ 83 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"function downsamples number cells `tof_tbl` randomly selecting `num_cells` cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"tof_downsample_constant(tof_tibble, group_cols = NULL, num_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `num_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). num_cells integer number cells sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `num_cells` multiplied number unique combinations values `group_cols`. group fewer `num_cells` number cells, cells group kept.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a constant number of cells per group. — tof_downsample_constant","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 500 cells from the input data tof_downsample_constant(     tof_tibble = sim_data,     num_cells = 500L ) #> # A tibble: 500 × 5 #>       cd45   cd38   cd34   cd19 cluster_id #>      <dbl>  <dbl>  <dbl>  <dbl> <chr>      #>  1 -1.15   -0.746 -1.73  -0.625 y          #>  2  1.50   -1.49   0.641  1.54  i          #>  3 -0.0911 -1.43  -1.09   0.407 n          #>  4  1.28    2.04  -0.208  0.289 q          #>  5  0.508  -0.314 -0.516  2.53  g          #>  6 -1.28   -0.686 -1.75  -0.873 n          #>  7  0.284  -1.12  -0.919  0.171 c          #>  8 -0.456   1.70  -1.30  -0.718 w          #>  9  0.602  -0.255  1.05   0.507 e          #> 10  0.876  -0.737  1.68   2.06  g          #> # ℹ 490 more rows  # sample 20 cells per cluster from the input data tof_downsample_constant(     tof_tibble = sim_data,     group_cols = cluster_id,     num_cells = 20L ) #> # A tibble: 520 × 5 #>       cd45    cd38   cd34    cd19 cluster_id #>      <dbl>   <dbl>  <dbl>   <dbl> <chr>      #>  1  0.545   0.0489 -0.702  1.63   x          #>  2 -0.0911 -1.43   -1.09   0.407  n          #>  3 -0.322   1.61   -1.02   0.315  t          #>  4  0.508  -0.314  -0.516  2.53   g          #>  5 -1.28   -0.686  -1.75  -0.873  n          #>  6 -0.456   1.70   -1.30  -0.718  w          #>  7 -0.682  -0.121   0.689  0.220  b          #>  8 -0.366   0.197  -0.802  0.0356 m          #>  9  0.544   0.490  -0.973  0.898  i          #> 10  0.876  -0.737   1.68   2.06   g          #> # ℹ 510 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"function downsamples number cells `tof_tbl` using density-dependent downsampling algorithm described Qiu et al., (2011).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"tof_downsample_density(   tof_tibble,   group_cols = NULL,   density_cols = where(tof_is_numeric),   target_num_cells,   target_prop_cells,   target_percentile = 0.03,   outlier_percentile = 0.01,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   density_estimation_method = c(\"mean_distance\", \"sum_distance\", \"spade\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups within downsampling performed. Supports tidyselect helpers. Defaults `NULL` (grouping). density_cols Unquoted names columns `tof_tibble` use density estimation cell. Defaults numeric columns `tof_tibble`. target_num_cells approximate constant number cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. target_prop_cells approximate proportion cells (0 1) sampled group defined `group_cols`. Slightly fewer cells may returned due density calculation performed. Ignored `target_num_cells` specified. target_percentile local density percentile (.e. value 0 1) downsampling procedure adjust cells. short, algorithm continue remove cells input `tof_tibble` local densities remaining cells equal `target_percentile`. Lower values result cells removed. See Qiu et al., (2011) details. Defaults 0.1 (10th percentile local densities). Ignored either `target_num_cells` `target_prop_cells` specified. outlier_percentile local density percentile (.e. value 0 1) cells considered outliers (discarded). Cells local density `outlier_percentile` never selected downsampling procedure. Defaults 0.01 (cells 1st local density percentile removed). distance_function string indicating distance function use cell--cell distance calculations. Options include \"euclidean\" (default) \"cosine\" distances. density_estimation_method string indicating algorithm used calculate local density estimate cell. Options include k-nearest neighbor density estimation using mean distance cell's k-nearest neighbors (\"mean_distance\"; default), k-nearest neighbor density estimation using summed distance cell's k nearest neighbors (\"sum_distance\") counting number neighboring cells within spherical radius around cell described Qiu et al., 2011  (\"spade\"). \"spade\" often produces best results, slower knn-density estimation methods. ... Optional additional arguments pass tof_knn_density tof_spade_density.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. number rows depend chosen value `target_percentile`, fewer cells selected lower values `target_percentile`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_prop_cells = 0.5,     density_estimation_method = \"spade\" ) #> # A tibble: 496 × 4 #>      cd45    cd38   cd34     cd19 #>     <dbl>   <dbl>  <dbl>    <dbl> #>  1  0.860  0.781   0.646 -0.0890  #>  2 -1.04   0.117  -0.565  0.114   #>  3  0.489 -1.27   -0.524 -0.438   #>  4 -1.01  -2.04    1.44  -0.187   #>  5  1.48  -0.0556 -0.164 -1.29    #>  6 -1.50   0.663  -0.140 -0.379   #>  7 -2.10  -0.486   0.189 -0.477   #>  8 -0.465 -1.13    0.908 -0.674   #>  9 -0.895 -0.984  -0.459 -0.00729 #> 10  0.678  2.00    0.224 -0.963   #> # ℹ 486 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"spade\" ) #> # A tibble: 187 × 4 #>      cd45   cd38    cd34     cd19 #>     <dbl>  <dbl>   <dbl>    <dbl> #>  1  0.985 -2.11  -0.162  -0.342   #>  2  0.489 -1.27  -0.524  -0.438   #>  3 -0.895 -0.984 -0.459  -0.00729 #>  4  0.678  2.00   0.224  -0.963   #>  5 -0.536 -0.362 -0.705  -0.0699  #>  6  0.102 -1.93  -1.39   -1.03    #>  7  2.04  -0.528  0.177   0.406   #>  8  1.58  -0.313  0.0864  1.35    #>  9  1.62   1.23  -1.12   -0.366   #> 10  0.568  1.67   0.386  -2.56    #> # ℹ 177 more rows  tof_downsample_density(     tof_tibble = sim_data,     density_cols = c(cd45, cd34, cd38),     target_num_cells = 200L,     density_estimation_method = \"mean_distance\" ) #> # A tibble: 179 × 4 #>      cd45   cd38   cd34   cd19 #>     <dbl>  <dbl>  <dbl>  <dbl> #>  1  0.262  1.34  -1.33  -0.422 #>  2 -1.50   0.663 -0.140 -0.379 #>  3 -0.654  1.56   0.730 -0.603 #>  4 -2.48  -0.611  0.623  0.906 #>  5 -0.767 -0.744  0.648 -0.214 #>  6 -1.33   0.690  0.796 -0.804 #>  7 -0.706  0.537 -0.125 -0.746 #>  8  0.795 -1.04  -1.66  -0.695 #>  9 -1.90  -0.139 -1.34  -1.92  #> 10 -1.37  -1.01  -0.892  0.426 #> # ℹ 169 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"function downsamples number cells `tof_tbl` randomly selecting `prop_cells` proportion total number cells unique combination values `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"tof_downsample_prop(tof_tibble, group_cols = NULL, prop_cells)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used define groups `prop_cells` downsampled. Supports tidyselect helpers. Defaults `NULL` (grouping). prop_cells proportion cells (0 1) sampled group defined `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"`tof_tbl` number columns input `tof_tibble`, fewer rows. Specifically, number rows `prop_cells` times number rows input `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_downsample_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample high-dimensional cytometry data by randomly selecting a proportion of the cells in each group. — tof_downsample_prop","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # sample 10% of all cells from the input data tof_downsample_prop(     tof_tibble = sim_data,     prop_cells = 0.1 ) #> # A tibble: 100 × 5 #>      cd45     cd38   cd34   cd19 cluster_id #>     <dbl>    <dbl>  <dbl>  <dbl> <chr>      #>  1  1.44   0.286    0.409 -0.554 i          #>  2 -0.944 -2.00    -1.11   2.09  i          #>  3 -1.30   0.893    0.643  0.217 c          #>  4  0.167 -1.23    -1.91   0.895 o          #>  5 -0.955 -0.00646  0.221 -0.748 r          #>  6 -0.326  1.23     1.26  -0.237 w          #>  7 -0.862 -0.826   -0.232  0.859 y          #>  8  0.664  0.570    1.23   0.738 j          #>  9  1.73   0.625   -0.695 -0.216 d          #> 10 -0.613  1.07    -0.387  0.133 g          #> # ℹ 90 more rows  # sample 10% of all cells from each cluster in the input data tof_downsample_prop(     tof_tibble = sim_data,     group_cols = cluster_id,     prop_cells = 0.1 ) #> # A tibble: 90 × 5 #>      cd45    cd38    cd34   cd19 cluster_id #>     <dbl>   <dbl>   <dbl>  <dbl> <chr>      #>  1 -0.573 -2.37    1.00    0.239 a          #>  2 -1.77   1.23    1.44    0.309 a          #>  3  0.667  1.45    0.701  -0.234 a          #>  4 -0.770  1.36   -1.04    0.806 a          #>  5  0.178  0.427   1.85   -0.188 b          #>  6  0.409  1.10    1.57   -0.626 b          #>  7  1.02   0.316  -0.220  -0.622 b          #>  8 -1.16   1.74   -0.435   0.814 c          #>  9  0.478  2.03    0.692  -0.541 c          #> 10 -0.418 -0.0122  0.0897  0.516 c          #> # ℹ 80 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"function wrapper around tidytof's tof_*_density() function family. performs local density estimation high-dimensional cytometry data using user-specified method (3 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"tof_estimate_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   normalize = TRUE,   ...,   augment = TRUE,   method = c(\"mean_distance\", \"sum_distance\", \"spade\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional arguments pass `tof_*_density()` function family member corresponding chosen `method`. augment boolean value indicating output column-bind local density estimates cell new column `tof_tibble` (TRUE; default) single-column tibble including local density estimates returned (FALSE). method string indicating local density estimation method used. Valid values include \"mean_distance\", \"sum_distance\", \"spade\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding local density estimates cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding local density estimates.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the local densities for all cells in a high-dimensional cytometry dataset. — tof_estimate_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_estimate_density(tof_tibble = sim_data, method = \"spade\") #> # A tibble: 1,000 × 5 #>      cd45   cd38    cd34     cd19 .spade_density #>     <dbl>  <dbl>   <dbl>    <dbl>          <dbl> #>  1  0.414 -1.35   1.28   -0.00732              1 #>  2  1.63   1.31  -0.726  -0.672                1 #>  3 -1.36  -0.108 -0.191  -0.884                1 #>  4 -0.975 -0.826 -0.0932 -0.586                1 #>  5 -1.03   0.359  0.379  -0.390                1 #>  6  0.649 -0.805 -0.368   0.411                1 #>  7  2.17   0.861  1.02   -0.199                1 #>  8 -1.16   1.94  -1.16    0.205                1 #>  9  1.76  -0.453  0.680   0.357                1 #> 10 -0.719 -1.65   0.947  -0.0462               1 #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_estimate_density(     tof_tibble = sim_data,     alpha_multiplier = 2,     method = \"spade\" ) #> # A tibble: 1,000 × 5 #>      cd45   cd38    cd34     cd19 .spade_density #>     <dbl>  <dbl>   <dbl>    <dbl>          <dbl> #>  1  0.414 -1.35   1.28   -0.00732            0.9 #>  2  1.63   1.31  -0.726  -0.672              0.4 #>  3 -1.36  -0.108 -0.191  -0.884              1   #>  4 -0.975 -0.826 -0.0932 -0.586              1   #>  5 -1.03   0.359  0.379  -0.390              1   #>  6  0.649 -0.805 -0.368   0.411              1   #>  7  2.17   0.861  1.02   -0.199              0.1 #>  8 -1.16   1.94  -1.16    0.205              0.2 #>  9  1.76  -0.453  0.680   0.357              1   #> 10 -0.719 -1.65   0.947  -0.0462             1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"feature extraction function calculates user-specified measurement central tendency (.e. median mode) cells cluster `tof_tibble` across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"tof_extract_central_tendency(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   central_tendency_function = stats::median,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tof_tibble `tof_tibble` `tibble` row represents single cell column represents CyTOF measurement piece metadata (.e. cluster id, patient id, etc.) cell. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselection. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (central tendency given marker given cluster). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_ct\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_central_tendency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the central tendencies of CyTOF markers in each cluster in a `tof_tibble`. — tof_extract_central_tendency","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_ct` `cd38@a_ct` `cd34@a_ct` `cd19@a_ct` `cd45@b_ct` #>   <chr>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1 kirby        -0.239      -0.135       0.128      -0.489      0.0664 #> 2 mario         0.485       0.232      -0.313      -0.563      0.264  #> # ℹ 99 more variables: `cd38@b_ct` <dbl>, `cd34@b_ct` <dbl>, `cd19@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd34@c_ct` <dbl>, `cd19@c_ct` <dbl>, #> #   `cd45@d_ct` <dbl>, `cd38@d_ct` <dbl>, `cd34@d_ct` <dbl>, `cd19@d_ct` <dbl>, #> #   `cd45@e_ct` <dbl>, `cd38@e_ct` <dbl>, `cd34@e_ct` <dbl>, `cd19@e_ct` <dbl>, #> #   `cd45@f_ct` <dbl>, `cd38@f_ct` <dbl>, `cd34@f_ct` <dbl>, `cd19@f_ct` <dbl>, #> #   `cd45@g_ct` <dbl>, `cd38@g_ct` <dbl>, `cd34@g_ct` <dbl>, `cd19@g_ct` <dbl>, #> #   `cd45@h_ct` <dbl>, `cd38@h_ct` <dbl>, `cd34@h_ct` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_central_tendency(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel  values #>    <chr>   <chr>      <chr>     <dbl> #>  1 kirby   a          cd45    -0.239  #>  2 kirby   a          cd38    -0.135  #>  3 kirby   a          cd34     0.128  #>  4 kirby   a          cd19    -0.489  #>  5 kirby   b          cd45     0.0664 #>  6 kirby   b          cd38    -0.428  #>  7 kirby   b          cd34     0.125  #>  8 kirby   b          cd19     0.140  #>  9 kirby   c          cd45     0.0619 #> 10 kirby   c          cd38    -0.540  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"feature extraction function calculates earth-mover's distance (EMD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"tof_extract_emd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   emd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included earth-mover's distance calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. emd_col unquoted column name indicates column `tof_tibble` used group cells different distributions compared one another EMD calculation. example, want compare marker expression distributions across stimulation conditions, `emd_col` column `tof_tibble` containing information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `emd_col` corresponds \"reference\" value values `emd_col` compared. example, `emd_col` represents stimulation condition cell, reference_level might take value \"basal\" \"unstimulated\" want compare stimulation basal state. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments EMD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (EMD distribution given marker given cluster basal condition distribution marker given cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_emd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_emd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using earth-mover's distance (EMD) — tof_extract_emd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract emd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     emd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@p_emd` `stim_cd38@p_emd` `stim_cd34@p_emd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 kirby                  NA                NA                NA #> 2 mario                  NA                NA                NA #> # ℹ 101 more variables: `stim_cd19@p_emd` <dbl>, `stim_cd45@y_emd` <dbl>, #> #   `stim_cd38@y_emd` <dbl>, `stim_cd34@y_emd` <dbl>, `stim_cd19@y_emd` <dbl>, #> #   `stim_cd45@c_emd` <dbl>, `stim_cd38@c_emd` <dbl>, `stim_cd34@c_emd` <dbl>, #> #   `stim_cd19@c_emd` <dbl>, `stim_cd45@r_emd` <dbl>, `stim_cd38@r_emd` <dbl>, #> #   `stim_cd34@r_emd` <dbl>, `stim_cd19@r_emd` <dbl>, `stim_cd45@b_emd` <dbl>, #> #   `stim_cd38@b_emd` <dbl>, `stim_cd34@b_emd` <dbl>, `stim_cd19@b_emd` <dbl>, #> #   `stim_cd45@v_emd` <dbl>, `stim_cd38@v_emd` <dbl>, …  # extract emd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_emd(     tof_tibble = sim_data,     cluster_col = cluster_id,     emd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   emd #>    <chr>      <chr>  <chr>       <dbl> #>  1 p          cd45   stim         9.59 #>  2 p          cd38   stim        12.4  #>  3 p          cd34   stim        10.5  #>  4 p          cd19   stim        11.4  #>  5 y          cd45   stim         5.34 #>  6 y          cd38   stim         4.73 #>  7 y          cd34   stim         4.07 #>  8 y          cd19   stim        10.3  #>  9 c          cd45   stim         7.95 #> 10 c          cd38   stim         9.91 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"function wraps members `tof_extract_*` function family extract sample-level features lineage (.e. cell surface antigen) CyTOF channels assumed stable across stimulation conditions signaling CyTOF channels assumed change across stimulation conditions. Features extracted cluster within independent sample (defined `group_cols` argument).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"tof_extract_features(   tof_tibble,   cluster_col,   group_cols = NULL,   stimulation_col = NULL,   lineage_cols,   signaling_cols,   central_tendency_function = stats::median,   signaling_method = c(\"threshold\", \"emd\", \"jsd\", \"central tendency\"),   basal_level = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). lineage_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered lineage markers feature extraction calculation. Supports tidyselect helpers. signaling_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) considered signaling markers feature extraction calculation. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster (used dependent variable linear model). Defaults median. signaling_method string indicating feature extraction method use signaling markers (identified `signaling_cols` argument). Options \"threshold\" (default), \"emd\", \"jsd\", \"central tendency\". basal_level string indicating value `stimulation_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). ... Optional additional arguments passed tof_extract_threshold, tof_extract_emd, tof_extract_jsd.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"tibble. output tibble 1 row combination grouping variables provided `group_cols` (thus, row represent considered single \"sample\" based grouping provided). one column grouping variable one column extracted feature (\"wide\" format).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"Lineage channels specified using `lineage_cols` argument, extracted features measurements central tendency (computed user-supplied `central_tendency_function`). Signaling channels specified using `signaling_cols` argument, extracted features depend user's chosen `signaling_method`. `signaling method` == \"threshold\" (default), tof_extract_threshold used calculate proportion cells cluster signaling marker expression `threshold` stimulation condition. `signaling_method` == \"emd\" `signaling_method` == \"jsd\", tof_extract_emd tof_extract_jsd used calculate earth-mover's distance (EMD) Jensen-Shannon Distance (JSD), respectively, basal condition stimulated conditions cluster sample. Finally, none options chosen, tof_extract_central_tendency used calculate measurements central tendency. addition, tof_extract_proportion used extract proportion cells cluster computed sample. calculations can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated, sample-level features from CyTOF data. — tof_extract_features","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (median) of cd45 and cd38 in each cluster #    - the proportion of cells in each cluster with cd34 expression over #      the default threshold (asinh(10 / 5)) tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     stimulation_col = stim ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0476   0.0290   0.0373   0.0476   0.0393   0.0414   0.0331 #> 2 mario     0.0484   0.0387   0.0542   0.0309   0.0445   0.0426   0.0445 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …  # extract the following features from each cluster in each # patient/stimulation: #    - proportion of each cluster #    - central tendency (mean) of cd45 and cd38 in each cluster #    - the earth mover's distance between each cluster's cd34 histogram in #      the \"basal\" and \"stim\" conditions tof_extract_features(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     lineage_cols = c(cd45, cd38),     signaling_cols = cd34,     central_tendency_function = mean,     stimulation_col = stim,     signaling_method = \"emd\",     basal_level = \"basal\" ) #> # A tibble: 2 × 131 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby     0.0476   0.0290   0.0373   0.0476   0.0393   0.0414   0.0331 #> 2 mario     0.0484   0.0387   0.0542   0.0309   0.0445   0.0426   0.0445 #> # ℹ 123 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>, #> #   `cd45@a_ct` <dbl>, `cd38@a_ct` <dbl>, `cd45@b_ct` <dbl>, `cd38@b_ct` <dbl>, #> #   `cd45@c_ct` <dbl>, `cd38@c_ct` <dbl>, `cd45@d_ct` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"feature extraction function calculates Jensen-Shannon Distance (JSD) stimulated unstimulated (\"basal\") experimental conditions samples CyTOF experiment. calculation performed across user-specified selection CyTOF antigens can performed either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"tof_extract_jsd(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   jsd_col,   reference_level,   format = c(\"wide\", \"long\"),   num_bins = 100 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. jsd_col unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). reference_level string indicating value `jsd_col` corresponds basal stimulation condition (.e. \"basal\" \"unstimulated\"). format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row). num_bins Optional. number bins use dividing one-dimensional marker distributions discrete segments JSD calculation. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (JSD distribution given marker given cluster basal condition distribution marker cluster stimulated condition). names column containing cluster features obtained using following pattern: \"{stimulation_id}_{marker_id}@{cluster_id}_jsd\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_jsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using the Jensen-Shannon Distance (JSD) — tof_extract_jsd","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract jsd of each cluster in each patient (using the \"basal\" stim # condition as a reference) in wide format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     jsd_col = stim,     reference_level = \"basal\" ) #> # A tibble: 2 × 105 #>   patient `stim_cd45@e_jsd` `stim_cd38@e_jsd` `stim_cd34@e_jsd` #>   <chr>               <dbl>             <dbl>             <dbl> #> 1 mario                 0.9               0.8               0.9 #> 2 kirby                NA                NA                NA   #> # ℹ 101 more variables: `stim_cd19@e_jsd` <dbl>, `stim_cd45@p_jsd` <dbl>, #> #   `stim_cd38@p_jsd` <dbl>, `stim_cd34@p_jsd` <dbl>, `stim_cd19@p_jsd` <dbl>, #> #   `stim_cd45@s_jsd` <dbl>, `stim_cd38@s_jsd` <dbl>, `stim_cd34@s_jsd` <dbl>, #> #   `stim_cd19@s_jsd` <dbl>, `stim_cd45@r_jsd` <dbl>, `stim_cd38@r_jsd` <dbl>, #> #   `stim_cd34@r_jsd` <dbl>, `stim_cd19@r_jsd` <dbl>, `stim_cd45@q_jsd` <dbl>, #> #   `stim_cd38@q_jsd` <dbl>, `stim_cd34@q_jsd` <dbl>, `stim_cd19@q_jsd` <dbl>, #> #   `stim_cd45@c_jsd` <dbl>, `stim_cd38@c_jsd` <dbl>, …  # extract jsd of each cluster (using the \"basal\" stim # condition as a reference) in long format tof_extract_jsd(     tof_tibble = sim_data,     cluster_col = cluster_id,     jsd_col = stim,     reference_level = \"basal\",     format = \"long\" ) #> # A tibble: 104 × 4 #>    cluster_id marker stimulation   jsd #>    <chr>      <chr>  <chr>       <dbl> #>  1 e          cd45   stim        0.749 #>  2 e          cd38   stim        0.785 #>  3 e          cd34   stim        0.829 #>  4 e          cd19   stim        0.771 #>  5 p          cd45   stim        0.625 #>  6 p          cd38   stim        0.823 #>  7 p          cd34   stim        0.601 #>  8 p          cd19   stim        0.800 #>  9 s          cd45   stim        0.647 #> 10 s          cd38   stim        0.858 #> # ℹ 94 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"feature extraction function allows calculate proportion cells cluster `tof_tibble` - either overall broken subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"tof_extract_proportion(   tof_tibble,   cluster_col,   group_cols = NULL,   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). format string indicating data returned \"wide\" format (default; cluster proportion given column) \"long\" format (cluster proportion provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable well one column proportion cells cluster. names column containing cluster proportions obtained using following pattern: \"prop@{cluster_id}\". format == \"long\", tibble 1 row combination grouping variables `group_cols` cluster id (.e. level) `cluster_col`. one column grouping variable, one column cluster ids, one column (`prop`) containing cluster proportions.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the proportion of cells in each cluster in a `tof_tibble`. — tof_extract_proportion","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 27 #>   patient `prop@a` `prop@b` `prop@c` `prop@d` `prop@e` `prop@f` `prop@g` #>   <chr>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 kirby      0.036    0.028    0.042    0.022    0.05     0.044    0.046 #> 2 mario      0.046    0.046    0.028    0.04     0.028    0.06     0.02  #> # ℹ 19 more variables: `prop@h` <dbl>, `prop@i` <dbl>, `prop@j` <dbl>, #> #   `prop@k` <dbl>, `prop@l` <dbl>, `prop@m` <dbl>, `prop@n` <dbl>, #> #   `prop@o` <dbl>, `prop@p` <dbl>, `prop@q` <dbl>, `prop@r` <dbl>, #> #   `prop@s` <dbl>, `prop@t` <dbl>, `prop@u` <dbl>, `prop@v` <dbl>, #> #   `prop@w` <dbl>, `prop@x` <dbl>, `prop@y` <dbl>, `prop@z` <dbl>  # extract proportion of each cluster in each patient in long format tof_extract_proportion(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 52 × 3 #>    patient cluster_id  prop #>    <chr>   <chr>      <dbl> #>  1 kirby   a          0.036 #>  2 kirby   b          0.028 #>  3 kirby   c          0.042 #>  4 kirby   d          0.022 #>  5 kirby   e          0.05  #>  6 kirby   f          0.044 #>  7 kirby   g          0.046 #>  8 kirby   h          0.04  #>  9 kirby   i          0.026 #> 10 kirby   j          0.046 #> # ℹ 42 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"feature extraction function calculates proportion cells given cluster CyTOF antigen expression user-specified threshold across user-specified selection CyTOF markers. calculations can done either overall (across cells dataset) breaking cells subgroups using `group_cols`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"tof_extract_threshold(   tof_tibble,   cluster_col,   group_cols = NULL,   marker_cols = where(tof_is_numeric),   stimulation_col = NULL,   threshold = asinh(10/5),   format = c(\"wide\", \"long\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. group_cols Unquoted column names representing columns `tof_tibble` used break rows `tof_tibble` subgroups feature extraction calculation. Defaults NULL (.e. performing extraction without subgroups). marker_cols Unquoted column names representing columns `tof_tibble` (.e. CyTOF protein measurements) included feature extraction calculation. Defaults numeric (integer double) columns. Supports tidyselect helpers. stimulation_col Optional. unquoted column name indicates column `tof_tibble` contains information stimulation condition cell exposed data acquisition. provided, feature extraction broken subgroups stimulation condition (features stimulation condition included features wide format). threshold double integer length 1 indicating threshold used. format string indicating data returned \"wide\" format (default; cluster feature given column) \"long\" format (cluster feature provided row).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"tibble. format == \"wide\", tibble 1 row combination grouping variables provided `group_cols` one column grouping variable, one column extracted feature (proportion cells given cluster marker expression values `threshold`). names column containing cluster features obtained using following pattern: \"{marker_id}@{cluster_id}_threshold\". format == \"long\", tibble 1 row combination grouping variables `group_cols`, cluster id (.e. level) `cluster_col`, marker `marker_cols`. one column grouping variable, one column cluster ids, one column CyTOF channel names, one column (`value`) containing features.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_extract_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract aggregated features from CyTOF data using a binary threshold — tof_extract_threshold","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         patient = sample(c(\"kirby\", \"mario\"), size = 1000, replace = TRUE),         stim = sample(c(\"basal\", \"stim\"), size = 1000, replace = TRUE)     )  # extract proportion of each cluster in each patient in wide format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient ) #> # A tibble: 2 × 105 #>   patient `cd45@a_threshold` `cd38@a_threshold` `cd34@a_threshold` #>   <chr>                <dbl>              <dbl>              <dbl> #> 1 kirby               0.0556             0.0556              0.111 #> 2 mario               0.125              0                   0     #> # ℹ 101 more variables: `cd19@a_threshold` <dbl>, `cd45@b_threshold` <dbl>, #> #   `cd38@b_threshold` <dbl>, `cd34@b_threshold` <dbl>, #> #   `cd19@b_threshold` <dbl>, `cd45@c_threshold` <dbl>, #> #   `cd38@c_threshold` <dbl>, `cd34@c_threshold` <dbl>, #> #   `cd19@c_threshold` <dbl>, `cd45@d_threshold` <dbl>, #> #   `cd38@d_threshold` <dbl>, `cd34@d_threshold` <dbl>, #> #   `cd19@d_threshold` <dbl>, `cd45@e_threshold` <dbl>, …  # extract proportion of each cluster in each patient in long format tof_extract_threshold(     tof_tibble = sim_data,     cluster_col = cluster_id,     group_cols = patient,     format = \"long\" ) #> # A tibble: 208 × 4 #>    patient cluster_id channel values #>    <chr>   <chr>      <chr>    <dbl> #>  1 kirby   a          cd45    0.0556 #>  2 kirby   a          cd38    0.0556 #>  3 kirby   a          cd34    0.111  #>  4 kirby   a          cd19    0.111  #>  5 kirby   b          cd45    0.0455 #>  6 kirby   b          cd38    0.0909 #>  7 kirby   b          cd34    0.0455 #>  8 kirby   b          cd19    0      #>  9 kirby   c          cd45    0.0526 #> 10 kirby   c          cd38    0.158  #> # ℹ 198 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"Find optimal hyperparameters elastic net model candidate performance metrics","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"","code":"tof_find_best(performance_metrics, model_type, optimization_metric)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"performance_metrics tibble performance metrics elastic net model (wide format) model_type string indicating type glmnet model trained. optimization_metric string indicating performance metric used select optimal model.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the optimal hyperparameters for an elastic net model from candidate performance metrics — tof_find_best","text":"tibble 3 columns: \"mixture\", \"penalty\", column containing chosen optimization metric. returned tibble 1 column, means 1 mixture/penalty combination yielded optimal result (.e. tuning procedure resulted tie).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"Calculate store predicted outcomes validation set observation model tuning","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"","code":"tof_find_cv_predictions(   split_data,   prepped_recipe,   lambda,   alpha,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe lambda single numeric value indicating penalty (lambda) value used make predictions alpha single numeric value indicating mixture (alpha) value used make predictions model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_cv_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and store the predicted outcomes for each validation set observation during model tuning — tof_find_cv_predictions","text":"tibble containing predicted true values outcome validation observations `split_data`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"Find earth-mover's distance two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"","code":"tof_find_emd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use performing kernel density estimation two vectors. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_emd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the earth-mover's distance between two numeric vectors — tof_find_emd","text":"double (length 1) representing EMD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"Find Jensen-Shannon Divergence (JSD) two numeric vectors","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"","code":"tof_find_jsd(vec_1, vec_2, num_bins = 100)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"vec_1 numeric vector. vec_2 numeric vector. num_bins integer number bins use binning across two vectors' combined range. Defaults 100.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_jsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Jensen-Shannon Divergence (JSD) between two numeric vectors — tof_find_jsd","text":"double (length 1) representing JSD two vectors.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"Find k-nearest neighbors cell high-dimensional cytometry dataset.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"tof_find_knn(   .data,   k = min(10, nrow(.data)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   .query,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":".data `tof_tibble` `tibble` row represents cell column represents high-dimensional cytometry measurement. k integer indicating number nearest neighbors return cell. distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. .query set cells queried .data (.e. set cells find nearest neighbors within .data). Defaults .data , .e. finding nearest neighbors cells .data. ... Optional additional arguments pass hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"list two elements: \"neighbor_ids\" \"neighbor_distances,\" n k matrices (n number cells input `.data`. [,j]-th entry \"neighbor_ids\" represents row index j-th nearest neighbor cell -th row `.data`. [,j]-th entry \"neighbor_distances\" represents distance two cells according `distance_function`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_knn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the k-nearest neighbors of each cell in a high-dimensional cytometry dataset. — tof_find_knn","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # Find the 10 nearest neighbors of each cell in the dataset tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\" ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  845  770  791   44  698  273  336  765  338   277 #>    [2,]  873  936  304  397  677  479  667  680  230   856 #>    [3,]  480  369  471  186  486  911  569  826  178    10 #>    [4,]  288  481  746   93  802  252  120  849   17   291 #>    [5,]  295   33  212  289  484  556  466  851  776   804 #>    [6,]  999  575  125  386   36  211  695  651   20  1000 #>    [7,]  510  644   30  933  275  407  990  189  483   190 #>    [8,]  953  943   55  278  966  576  730  168  342   870 #>    [9,]  657  493  899   38   71  404  268  401  227   307 #>   [10,]  468  930  569  710  486  238  615  186  981   664 #>   [11,]  456  884  872  375  752  423  218  909  738   430 #>   [12,]  314   64  603  790  421  359  800  478  757   740 #>   [13,]  264  889   46  394   63  131   64  314  972    88 #>   [14,]  720  412  780  352  585  226  320  526  945   537 #>   [15,]  475  215   83  793  521  982  217  411  900   946 #>   [16,]  107  465   86  819  560  101  355  523  592   728 #>   [17,]  252  481  220  675  120  672  446   19  612   302 #>   [18,]  613   32   77  606  121  810  944   12  757   314 #>   [19,]  446  843  836  821  189  931  269  164  988   252 #>   [20,]  651  692  125  386   36  575 1000  901    6   370 #>   [21,]  188  914  627  213  101  629  272  417  777   136 #>   [22,]  283  906  426  256  321  992  537  945  595   501 #>   [23,]  421  518  869  575  562  591  566   47   36   999 #>   [24,]  492  682  787  550  912  517  463  679  522   572 #>   [25,]  798  942  932  157  405  640  638  348  561    86 #>   [26,]  597  704  222  191  940   40  895   90  413   735 #>   [27,]  960  126  592  417  213  913  346  523  152   766 #>   [28,]  588  646  169  114  512  669  750  789  768   932 #>   [29,]  673  790  767  901  881  921  406  307  501   963 #>   [30,]  644  933  969    7  173  483  189  510  407   275 #>   [31,]  812   87  648  917  187  165  554  958  571   858 #>   [32,]   18   77  613  314  944  448  606   64   12   871 #>   [33,]  295    5  289  776  212  556  926  484  180   513 #>   [34,]  639  109  763  498  891  702  712  827  119   519 #>   [35,]  815  690  182   92  831  607  382  200  803   715 #>   [36,]  386  695  651    6  165  439   20  575  999   858 #>   [37,]  711  323  113  973  351  726  450  665  353   393 #>   [38,]   71   53  307  657  352    9  310  827  493   956 #>   [39,]  659  400  613  810   32  643  800   64  606   121 #>   [40,]  357   90  702  498  735  863  222  624   75   763 #>   [41,]  954  976  623  829  468  270  155   10   84   348 #>   [42,]  556  289  263  225  851  337  762  466  212     5 #>   [43,]  621  736  311  145  919  395  122  713  924   484 #>   [44,]  601  368  777  336  654  592  126  152  188   960 #>   [45,]  898  864  535   73  134  469  964  440  124   541 #>   [46,]  301  264  972   13  889  413   63  256  769   998 #>   [47,]  349  591  562  593  518   23  695  723  485   165 #>   [48,]  599  579  146  239  936  690  461  479  803   934 #>   [49,]  734  616  161  780  196  507 1000  335  370   760 #>   [50,]  720  531  429  167  881  878  596  767  921   501 #>   [51,]  497   96  751  227  841  310  657  478   89   659 #>   [52,]  647  296  528  788  224  304  241  977  505   392 #>   [53,]  956  583  903  245   38  876  320  880  424   454 #>   [54,]  833  739  979  342  943  604  549  995  384   776 #>   [55,]  730  953  966    8  278  342  943   99  725   384 #>   [56,]  539  879  396  724  274  885  962  974  850   271 #>   [57,]  680  799  241  667  839  304    2  977  397   757 #>   [58,]  315  223   69  742   94  946  303  473  521   215 #>   [59,]  253  701  433  914  764  860  627  485  447   473 #>   [60,]  718  817  113  323   74  162  668  108  489   747 #>   [61,]  694  370  939  857  616  715  142  333  692   719 #>   [62,]  509  228  901  625  699  234  461   20  727   359 #>   [63,]  264  394  192  889  800   64  191   13  413    46 #>   [64,]  800  314   12  131  192  264   63  394  643    32 #>   [65,]  701  398  957  930  829  473  238   59  886    84 #>   [66,]  487  452  112  347  238  473  118  833  826   534 #>   [67,]  500  807  442  408  770  608  277  136  584   929 #>   [68,]  373  462  594  193   71  542  657  741  975   341 #>   [69,]  315  416   58  398  764   94  914  174  708   941 #>   [70,]  445  684  627  416  447   80  708  204  914   764 #>   [71,]  657  310   38  103  373  504    9  519  542   827 #>   [72,]  623  842   41  560  296  829  241  954  819   528 #>   [73,]  864  134  617   45  564  219  266  458  884   115 #>   [74,]   60  817  718  358  530  820  258  325  489   162 #>   [75,]  624  823  712  735  863  754  876  702  979   498 #>   [76,]  643  400   63  435  413   46  800   26  264   895 #>   [77,]   32   18  871  613  376  314   12   64  183   800 #>   [78,]  781  137  621  122  736  709  958  983  924   322 #>   [79,]  383  250  655  125  152  728  200  668  575   355 #>   [80,]  447  761  204  445  123  684  347  253   70    59 #>   [81,]  844  240  535  849   93  865  882  380  199   743 #>   [82,]  197  636  545  661  492  269  923   24  371   133 #>   [83,]  620  521  411  349  678  215  593  475  486    47 #>   [84,]  886  954  930  591  797  154  829  723  107   560 #>   [85,]  309  988  732  824  743  446  882  931  344   117 #>   [86,]  101  433  346  819   16  701  561  942   25   640 #>   [87,]  917  554   31  812  571  974  389  274  187   292 #>   [88,]  889   13  264  321   63  256  394  426  906    22 #>   [89,]  519  310  763  498   96  497   90   71  827    34 #>   [90,]  357   40  674  191  498  863   89  735  763   192 #>   [91,]  488  555  631  362  986  978  522  558  249   948 #>   [92,]   35  815  409  984  182  520  607  628  825   689 #>   [93,]  574  481  849    4  506  586   17  802  431   746 #>   [94,]  946  605  941  354  764  860  742  331  315   306 #>   [95,]  679  568   99  492  778  931  159  953  852   269 #>   [96,]  827  497  454  227  754  876   51  981  823   478 #>   [97,]  693  106  343  326  363  925  310  504  519   390 #>   [98,]  892  997  738  218  330  769  992  256  456   731 #>   [99,]  730  538  679  966   55   95  953  778  233   564 #>  [100,]  120  984  288  990  291    7  697    4  927   510 #>  [101,]   21   86  465  777  188  592  213   27  523   445 #>  [102,]  740  570  186  349  122  911  828  678   47   841 #>  [103,]  504  887   71  779  373  925  519  310  891   547 #>  [104,]  214  300  220  662  120  849  481  252  893   267 #>  [105,]  317  273  512  324  729  114  932  508  332   698 #>  [106,]  693  343   97  326  285  947  788  925  363   310 #>  [107,]  560   16   84  436  728  465  819  566  355   886 #>  [108,]  973  113  711  718  668  323  374   79  654   681 #>  [109,]  891   34  639  604  424  827  808  342  796   472 #>  [110,]  646  378  502  746    7  181  407  288  990   514 #>  [111,]  571  854  974  554  999  587  902  904  879   217 #>  [112,]  427  957   66  238  473  615  178  480  315   452 #>  [113,]  711  108  973  323  668   37  747  718   60   162 #>  [114,]  512  483  588  645  811   28  646  254   30   434 #>  [115,]  563  327  263  538  180  134  564  289  159   568 #>  [116,]  183  128  687  871  290  994  137  376  284   301 #>  [117,]  578  743  267  506  573  672  688  586  541   988 #>  [118,]  569  534  312  238  441  468  626  957  664   472 #>  [119,]  432  763  498   34  702  639  859  712  455    40 #>  [120,]  252  214  481  220  139   17  697  104  927   662 #>  [121,]  810   18  613  318   39   77   32  659  606   744 #>  [122,]  781  143   78  621  102   43  736  983  137    31 #>  [123,]  761  536  524   80  452  347  739  487  447   293 #>  [124,]  864   45  513  535  543   73  266  865  198   883 #>  [125,] 1000    6  575  386   20  651  523   36  152    79 #>  [126,]   27  960  565  592  801  152  417  188  913   766 #>  [127,]  385  703  422  631  727  816  759  625  963   950 #>  [128,]  290  116  137  994  958  284  709  781  183   143 #>  [129,]  402  255  297  784  144  243  305  276  414   229 #>  [130,]  364  532  768  344  821  725  928  169  460   931 #>  [131,]  394  921  673  998   64  264  192  390  314    29 #>  [132,]  176  837  286  830  786  726  660  495  144   474 #>  [133,]  339  923  580  163  714   82  676  517  568    24 #>  [134,]  266  115  564  541  198  864  964  159  327   263 #>  [135,]  419  119  443  432  451  859  166  822  896   410 #>  [136,]  629   21  627  914  188  353  941  807  777   428 #>  [137,]  709   78  128  958  781  290  143  917  752   122 #>  [138,]  230  757  667  566  977  401  421  899  869   304 #>  [139,]  220  476  120  866  214  252  716  189  991   371 #>  [140,]  282  707  429  955  671  968  978  691  720   719 #>  [141,]  691  276  978  522  488  589  671  968  707   996 #>  [142,]  526  818  780  616  412  719  760  196  370    49 #>  [143,]  917  122  709   87  290  128  137   31  850   781 #>  [144,]  402  660  129  176  235  582  474  755  276   600 #>  [145,]  484   43  180  943   54  538  384  995  924   736 #>  [146,]  934  579  239   48  232  690  681  509  257   599 #>  [147,]  895  313   76  540  769   26  330  400   88   961 #>  [148,]  929  408  708  324  729  834  867  761  524   762 #>  [149,]  847  803  899  231  208  232  934  959  936   401 #>  [150,]  851   42  354  696  556  337  225  212  466   148 #>  [151,]  272  174  706  391  807  353  217  136  748    21 #>  [152,]  592  383  523  960  801  125   27 1000  417   985 #>  [153,]  582  660  868  637  144  297  235  175  474   129 #>  [154,]  797  930   84  886  723   10  710  562  954   591 #>  [155,]  751  270  710  954  810  369   10   41   51   468 #>  [156,]  795  826  455  859  480  737  569    3  626   119 #>  [157,]  798  942   25  312  405  932  561  640  348   332 #>  [158,]  172  666  441  669  542  626  796  789  822   341 #>  [159,]  852  568  263  198   95  266  778  180   99   289 #>  [160,]  897  577  860  935  766  813  306  194  331   253 #>  [161,]  507  546  366  766  734  346   49  335  533   635 #>  [162,]  668  630  699  748  747  221  489  999    6   575 #>  [163,]  676  834  337  705  912  517   24  682  225   568 #>  [164,]  910  344  581   19  197  931  189  661  988   821 #>  [165,]  648  695  439   36  880   31  903  386  187   812 #>  [166,]  451  298  419  552  443  280  460  181  618   364 #>  [167,]  596  531   50  406  767  881  998  970  284   656 #>  [168,]  356  794  635  576    8  236  278  848  836   546 #>  [169,]  588  768  618  669  280  181  808   28  460   130 #>  [170,]  820  184  195  853  228  461  234  359   62   448 #>  [171,]  430  784  255  501  399  752  759  878  596   972 #>  [172,]  158  789  441  626  669  666  822  410  472   796 #>  [173,]  969  649  855   30  716  760  644  203  689   915 #>  [174,]  272  151  391  706  605  217  215  914  411   946 #>  [175,]  474  235  663  209  950  496  377  582  857   939 #>  [176,]  132  837  144  726  286   91  660  235  600   474 #>  [177,]  937  286  923  600  132  837  339  786  714   328 #>  [178,]    3  480  615  186  486  223  112  471  919   553 #>  [179,]  623   41  842  348  829   65  976   72  441   666 #>  [180,]  145  289  543  563  115  513  159  538  549   484 #>  [181,]  280  618  460  378  169  588  746  821  768   887 #>  [182,]  815  831  965  505  381  231  585  690   35   607 #>  [183,]  116  871  376  128  290  687  242  994   77   143 #>  [184,]  170  853  799  944  606  448  613   18  359    32 #>  [185,]  782  320  196  955  439  734  996  707  720   531 #>  [186,]  471  486  911  570    3  102  710  678  615   981 #>  [187,]  292   31  897  648   87  935  165  812  160   439 #>  [188,]  777   21  101  417  152  213  985  592  221    27 #>  [189,]  644  716  875  510  843  476   19   30    7   969 #>  [190,]  407  741  933  594  462  275  967  990  378   975 #>  [191,]  387  192  971   90  735  413  828  863   63   674 #>  [192,]  497  191  800  971  390  387   64  454   63   131 #>  [193,]  207  975  259  533  405  493  260  642  638   640 #>  [194,]  420  306  787  160  572  682  870  331  897   558 #>  [195,]  170  491  820  461  228  184  599  448  516   509 #>  [196,]  185  320  734  719  707   49  370  780  955   720 #>  [197,]   82  661  910  467  636  545  269  875  164   838 #>  [198,]  159  266  852  134  263  568  578  824  180   115 #>  [199,]  602  731  380  499  414  844  745  300  440   243 #>  [200,]  250  381  993  717  715  965   79  383  388   182 #>  [201,]  497   89  498   90   51  192  841  763  400   191 #>  [202,]  907  572  577  782  766  801  319  439  185   196 #>  [203,]  689  173  483  855   30  360  915  379  434   261 #>  [204,]   80  684  347  447  761  445   70  312  949   123 #>  [205,]  861  984  382  520   92  628  299  611  815   477 #>  [206,]  327  225  444  115  696  134  337  563  263    42 #>  [207,]  259  533  193  507  366  493  840  346  758   260 #>  [208,]  959  231  232  401  899  566  355  381  404   149 #>  [209,]  857  939  175  991  663  257  377  474  866   950 #>  [210,]  840  758  880  259  245  260  956  635  576   207 #>  [211,]  614    6  695  485  999  386   36  813  213   523 #>  [212,]    5  466  851  295  556   33  804  289  762   303 #>  [213,]  523  417  433   21  766   27  813  101  211   346 #>  [214,]  104  120  220  252  481  300  139  849  662    17 #>  [215,]  521   83  411   15  946  174  620  217  605   742 #>  [216,]  726  333  362  948  692  631  985  694  319   450 #>  [217,]  411  391  605  485  111  813  272  793  521   211 #>  [218,]  738  548  892  992   98  243  334  255  456   745 #>  [219,]  437  924  938  926  736  367  372  641  617   145 #>  [220,]  214  139  252  104  120   17  300  634  267   529 #>  [221,]  654  706  162  188  748  777  465  551  125   272 #>  [222,]  704   40  367   26  365  597  449  265  735   316 #>  [223,]   58  178  620  494  742  521  315  919  615   544 #>  [224,]  392  993  717  505  528  647  462   68  404   296 #>  [225,]  337  696  912  444   42  263  517  327  354   163 #>  [226,]  412  515  526   14  945  780  920  302  510   275 #>  [227,]  478  603  981   96  664  880  758  591  869   827 #>  [228,]  461   62  234  509  359  448  901  790   29   673 #>  [229,]  688  745  243  683  414  602  573  276  305   541 #>  [230,]  397  304  138  667  959  566  436  856  479   916 #>  [231,]  232  404  208  899  959  505  585  381  847   401 #>  [232,]  231  208  934  965  959  404  847  401  585   149 #>  [233,]  691  782  550  996  522  955  249  966  572   558 #>  [234,]  359  854  228  994  518  790   62  587  853   421 #>  [235,]  474  175  950  402  144  663  582  857  129   877 #>  [236,]  928  508  168  356  332    8  836  467  532   953 #>  [237,]  265  322  656  940  805  334  597  458  704   387 #>  [238,]  615  473  678   10  253  468  930  957  118   486 #>  [239,]  934  501  146  537  673  149  921   48  426   131 #>  [240,]  552  365  783  262  574  802  313  922  908   431 #>  [241,]  977  680   57  304  270  667  285  397  947    72 #>  [242,]  183  525  871  475  376  116  853  318  329   632 #>  [243,]  548  683  229  745  602  414  688  440  297   246 #>  [244,]  206  271  658  563  653  115  806  444  544   134 #>  [245,]  583  424  576  956  635  210  260  756   53   840 #>  [246,]  414  602  297  440  243  548  683  229  755   129 #>  [247,]  318  376  710  911  486  740  102  369   83   871 #>  [248,]  940  413  617  456  597  435  423  301  237    46 #>  [249,]  558  996  287  389  488  812  907  631  978   858 #>  [250,]  200  381  717  993  383  965   79  355  231   715 #>  [251,]  728  325  655  699   79  681  479  959  397   856 #>  [252,]   17  481  120  220  988  214   19    4  139   104 #>  [253,]  935   59  433  160  860  756   80  473  238   485 #>  [254,]  557  594  933  190  114  407  915   30  483   765 #>  [255,]  784  129  297  402  243  548  305  171  745   430 #>  [256,]  906  769  889   22  430  394  264   46  283   992 #>  [257,]  399  759  816  950  939  857  377  209  146   681 #>  [258,]  323   60  113  368  711  654   37  108  489   530 #>  [259,]  207  533  840  210  260  758  507  635  366   193 #>  [260,]  259  245  840  533  424  210  827  207  956   891 #>  [261,]  689  403  409  360  722  855  476  716  875   173 #>  [262,]  888  862  783  922  832  330  731  365  574   846 #>  [263,]  568  289  159  852  538  115   42  556  563   679 #>  [264,]   13  889  394   63   46  131   64  314  998   256 #>  [265,]  805  237  322  980  735  863  458  316  995   597 #>  [266,]  578  159  134  198  564  541  778  180  117   864 #>  [267,]  529  117  634  300  743  918  988  220  573   578 #>  [268,]  954  657    9  751  947  977  528   51  270   640 #>  [269,]  836  492  463  636  467  550  730   19   95   679 #>  [270,]  751  155  954  977  268  810  947  241   41    51 #>  [271,]  850  653  709  544  917  287   87  143   56   539 #>  [272,]  706  391  151  174   21  914  217  813  188   605 #>  [273,]  774  913  932  791   25  798  942  684  811    86 #>  [274,]  974  571   87  879  902  554  389  558  812   948 #>  [275,]  407  990  933  510  190  515  741    7  779   502 #>  [276,]  141  909  229  589  905  691  986  488  573   683 #>  [277,]  929  408  126  565  770  845  136  324  708   629 #>  [278,]  966  955  730  583   55    8  782  168  848   576 #>  [279,]  609  722  830  495  338  818  855  476  261   360 #>  [280,]  618  181  822  669  169  166  419  460  887   588 #>  [281,]  910  164  633   85  988  581  792  732  514   545 #>  [282,]  140  955  707  671  691  966  559  302  278   522 #>  [283,]   22  426  906  537  945  595  920  256  321   501 #>  [284,]  994  406  958  167  290  128  596  767  490   423 #>  [285,]  947  106  241  270  326  751  343  788  977   268 #>  [286,]  837  132  176  726  830  177  495  340  786   923 #>  [287,]  249  389  558  890  488  589   87  274  986   812 #>  [288,]    4  291  481  802  746  697  100  120  849    93 #>  [289,]  556  263    5  563  484   42  295  180   33   568 #>  [290,]  128  994  958  917  116  137  284  294  554   143 #>  [291,]  697  927  502  288  746  990  431  515  120   481 #>  [292,]  187  897   87  306  411   31  860  274  311   395 #>  [293,]  549  833  928  524  739   54  776  236  943   123 #>  [294,]  587  554  571  290  974  904  994  917  958   854 #>  [295,]   33    5  289  212  776  556  484  926  804   180 #>  [296,]  528   52  224  560  647  652  993  107   72   392 #>  [297,]  129  414  255  246  243  402  548  784  602   229 #>  [298,]  808  639  166  451  364  109  443  342   34   604 #>  [299,]  611  607  861  520  945  927  920  515  893   697 #>  [300,]  104  414  267  220  602  634  529  214  918   229 #>  [301,]  687   46  972  413  423  116  314   64  998   871 #>  [302,]  559  612  848  675  794  843  282  779  547   846 #>  [303,]  851  713  466  742  354  315  395  919  311   212 #>  [304,]  397  230  667  977  138  680    2  528  936   959 #>  [305,]  968  429  745  140  229  402  688  255  129   499 #>  [306,]  897  420  194  331  860  160  292  813  187   890 #>  [307,]  673  921   38   29  603   53  401  478  790   869 #>  [308,]  464  358  422  816  817  457  385  950  127   703 #>  [309,]   85  732  814  931  824  344  778  446  364   852 #>  [310,]   71   89  519  657  504   38  103  390   96    51 #>  [311,]  395  713  919   43  870  292  187  484  935   306 #>  [312,]  157  347  949  118  348  534  332  798  204    25 #>  [313,]  922  908   97  363  888   26  262  365  240    90 #>  [314,]   64  448   12  800   32  131   77  264   13   359 #>  [315,]  473  742   58  303  416   94  764   69  860   521 #>  [316,]  449  612  832  559  805  846  265  672  674   675 #>  [317,]  105  729  273  952  750  324  932  204  684   512 #>  [318,]  247  744  871   77  121   18   32  376  183   242 #>  [319,]  333  801  616  202  572  818  772  216  719   550 #>  [320,]  720  185  196  335  734  955  531   53  782   848 #>  [321,]  426   22  283  906  908   88  595  888  256   363 #>  [322,]  805  656  458  237  265  671  980  970  686   968 #>  [323,]  113   37  973  711  108  718  351   60  817   747 #>  [324,]  729  148  105  929  503  453  277  204  508   408 #>  [325,]  251  873  856  397  728  479    2  304  230   699 #>  [326,]   97  310  542  343  106  504  519  947   71    89 #>  [327,]  444  115  538  986  555  890  517  263  225   568 #>  [328,]  600  937  425  177  650  874  714  755  582   660 #>  [329,]  525  242  871  318  183  687  744  301  116   491 #>  [330,]  769  888  731  262  256  704  992   98  334   738 #>  [331,]  813  897  860  306  605  764  914  160  629   194 #>  [332,]  508  949  928  236  157  808  312  811  356   768 #>  [333,]  319  216  801  616  694  719  692  818  202   907 #>  [334,]  237  458  745  322  704  449  499  738  265   805 #>  [335,]  734  533  848  780  507  320   49  161  412   546 #>  [336,]   44  791  383  592  622  655  960  601  152   915 #>  [337,]  696  225  163  676  834   42  912  517  705   263 #>  [338,]  845  609  279  601  855  336  722   44  360   173 #>  [339,]  133  580  923  714  163   82  676  177  517   874 #>  [340,]  989  912  885  724  517  396  555  428  787   682 #>  [341,]  542   68  158  666  326  373  638  669  887   594 #>  [342,]  604  979   54   55  424    8  583  943  576   245 #>  [343,]  106  693   97  326  925  504  310  363  788   390 #>  [344,]  931  164  661  532   19  446  130  910  836   725 #>  [345,]  773  785  516  377  663  951  868  153  997   175 #>  [346,]  366  507  546  161  207  259  960  523  405   766 #>  [347,]  452  487  204  123  312  761   80  949  447   473 #>  [348,]  640  561  798  441  157  819   25  312  942   829 #>  [349,]   47  593  485  695  102  165  518  562  570    83 #>  [350,]  361  247  318  494  242   83  121  475  376   486 #>  [351,]  973   37  323  374  495  726  711  108  132   113 #>  [352,]  390   14  921   38  595  585  847  307  131   720 #>  [353,]  450  188  629  136  272  428  711  391  706   985 #>  [354,]  466  851   94  303  225  941  420  306  556   212 #>  [355,]  493  401  231  208  899  404  959  381  250   566 #>  [356,]  168  546  642  635  507  811  236  794  405   533 #>  [357,]   90   40  547  674  863  763  702  498  519   735 #>  [358,]  817  464  809  457  820  747  308  489  482    60 #>  [359,]  234  790  518  228  421  854  448   12  994    23 #>  [360,]  855  875  716  476  261  403  689  644  173   189 #>  [361,]  350  247  900  632   83  475  376  593  562    15 #>  [362,]  948  631  907  558  216  902  249   91  885   389 #>  [363,]  925  922  504  390   97  908  595  103  547   310 #>  [364,]  532  725  130  298  814  549  931  293  446   778 #>  [365,]  222  574  552  586  262  704  865   40  832   451 #>  [366,]  346  546  507  161  207  259  405  533  840   913 #>  [367,]  384  222  265  624  641  924  702  543  938    40 #>  [368,]  601   44  654  711  336  655  108  777  113   973 #>  [369,]    3  911  471  186  480  737  486  553  710   841 #>  [370,]   61  694  196   49  692  616   20  142  651   780 #>  [371,]  685  636  634  918  529  786  522  269   82   550 #>  [372,]  641  938  437  924  736  122  983  553  781   911 #>  [373,]   68  504   71  103  887  741  585  462  657   967 #>  [374,]  495  973   61  694  216  108  333  985  711   818 #>  [375,]   11  884  872  456  653  469  752  909  738   548 #>  [376,]  871  183  593  632   77  853  116  518  247   349 #>  [377,]  663  257  950  209  175  816  399  235  857   939 #>  [378,]  502  887  407  181  741  190  967  275  779   933 #>  [379,]  483  434  698  203  514  855  360  875   30   910 #>  [380,]  743  199  882  844  964  602  440  541  117   267 #>  [381,]  250  231  993  200  959  208  717  505  355   232 #>  [382,]  527   35  205  520  815  861  611   92  690   299 #>  [383,]  649  760  152   79  250   49  616  370  592    61 #>  [384,]  367  549   55   54  995  145  979  342  943   778 #>  [385,]  703  127  631  422  457  948  362  904  902   389 #>  [386,]   36  651 1000  695    6  125  439  577   20   575 #>  [387,]  191  998  971  828  192  413  903  167  423   656 #>  [388,]  200  409  715  250   35  681  655  108  993   251 #>  [389,]  812  554  249  571  974  287   87  858  958   948 #>  [390,]  352  192  394  310  363  131  925  921   38   497 #>  [391,]  217  605  272  813  331  706  411  174  914   629 #>  [392,]  224  993  717  652  915  462  647  182  381   505 #>  [393,]  500   37  286  726  438  396  937  351  837   724 #>  [394,]  131  264  921  998  889   63  390  192   13    64 #>  [395,]  311  713  919  742   43  292  935  187  303   122 #>  [396,]  724  885   56  340  539  989  438  962  362   274 #>  [397,]  304  230  856  667    2  138  479  680  977   916 #>  [398,]  701   70  416  684  445   59  914   69   65   764 #>  [399,]  759  257  816  950  509  415  422  727  501   127 #>  [400,]  643   39   76  659  800   63   64  201  192   264 #>  [401,]  566  208  899  959  869  493  355  231  307   404 #>  [402,]  129  144  255  305  297  235  276  474  229   784 #>  [403,]  261  360  722  689  409  476  875  855  139   716 #>  [404,]  899  231  505  585  847  355  208    9  232   401 #>  [405,]  942  366  798  193  157  811  546  207   25   642 #>  [406,]  284  167  596  767  790   29  881  994  901   903 #>  [407,]  190  933  275  990  741  594  378    7  510   462 #>  [408,]  929  277  705  148  834  708  324   67  163   770 #>  [409,]  261  689  403   92  722  715  984  360  388   991 #>  [410,]  472  789  808  639  172  298  534  669  949   419 #>  [411,]  217  485  521  605  292  860  897   83  813   946 #>  [412,]  526  226  780   14  142  515  335  140  720   320 #>  [413,]  387  191  940  248  423  998  301  800   63   597 #>  [414,]  602  229  243  246  297  683  688  745  440   300 #>  [415,]  878  877  537  429  759  719  963  939  857   881 #>  [416,]  761  764   70   80  914  315   59  627  204   123 #>  [417,]  213  523  766  577  801 1000   27   21  813   152 #>  [418,]  753  398  151  174  465  272  706   69  101   136 #>  [419,]  166  443  822  280  460  298  451  669  410   618 #>  [420,]  194  306  870  787  536  682  160  897  331   890 #>  [421,]   23  869  518  603  723  566  562  790  359   591 #>  [422,]  127  816  703  625  759  509  385  727  399   904 #>  [423,]  998  656  284  687  413  430  387  167  301   752 #>  [424,]  245  956  583  876  827  979  260  891  576   604 #>  [425,]  328  937  600  650  177  874  868  755  582   714 #>  [426,]  283  906   22  595  945  537  321  239  352   394 #>  [427,]  112  494  957  178  223  615  480   58  486    66 #>  [428,]  629  724  941  989  885  331  353  565  136   340 #>  [429,]   50  968  878  537  305  720  140  415  671   531 #>  [430,]  171  656  998  167  423  968  501  256   50   429 #>  [431,]  675  574  746  547  832  802  862   17  552   612 #>  [432,]  119  702  859  498  712  624   34  763  639    40 #>  [433,]  213  840  253   59  523  758  160  210   86   346 #>  [434,]  698  379  855  875  483   30  173  203  512   114 #>  [435,]  643  248   76  413  940  597   26  400  800   617 #>  [436,]  699  630  566  916  575   23  230  728  421   107 #>  [437,]  736  924  938  372  983   43  219  145  641   919 #>  [438,]  608  584  442  396  724  500  539   56  428   393 #>  [439,]  648  858  577  165  907  386  782  185   36   695 #>  [440,]  683  602  541  243  246  964  414  548  229   688 #>  [441,]  666  158  172  348  626  796  118  789  157   472 #>  [442,]  584  608  438  696  500  340  989   67  428   337 #>  [443,]  419  451  298  166  364  130  410  460  639   883 #>  [444,]  327  890  986  555  225  517  912  287  787   558 #>  [445,]  684   70  447  627   80  204  701   27   59   101 #>  [446,]  725  931   19  821  532  988  836   17  344   364 #>  [447,]   80  445  684  204   70  627  761   59  433   253 #>  [448,]  314  359  228   32  613   12  590  461   64   757 #>  [449,]  316  586  832  672  612  506  805  265  559   334 #>  [450,]  985  353  216  711  665  362  188  948  801   726 #>  [451,]  166  298  443  702  419  364  552  432  119   639 #>  [452,]  347  487  123   66  761  473  416  739  204    80 #>  [453,]  503  524  661  463  236  679  467  928  804   953 #>  [454,]  971  754  876  828   96  823  956  497  903   478 #>  [455,]  626  569  712  826  480  795  471   34  498   823 #>  [456,]   11  423  248  738  940  884  237  218  430   413 #>  [457,]  809  962  902  703  904  385  482  974  879   587 #>  [458,]  322  686  564  805  265  334  237  656  745   688 #>  [459,]  700  765  652  557  622  791  774  915  254   825 #>  [460,]  181  169  419  280  166  588  130  618  821   768 #>  [461,]  228  509   62  448  599   48  239  901  146   759 #>  [462,]  741  190   68  373  407  594  585  275  933   975 #>  [463,]  838  467  492  572  836  269  953  679   24   550 #>  [464,]  308  358  817  718  323   37  457  816  351    60 #>  [465,]   16  101  107   86  221  886  829  777  819    21 #>  [466,]  536  212  354  484  851  303    5  870  556   420 #>  [467,]  838  463  836  503  269  236  168  356  772   546 #>  [468,]   10  930  664  981  569  954  591  238  710   570 #>  [469,]  375  898   45  884   11   73  872  653  755   892 #>  [470,]  708  398   69  416   70  729  204  867  148   684 #>  [471,]  911  186    3  369  841  480  823  712  486   570 #>  [472,]  534  808  410  639  604  109  796  298  756   626 #>  [473,]  238  315  742  253  615  452   59  678  416   347 #>  [474,]  235  175  866  663  402  857  991  496  950   877 #>  [475,]   15  632   83  982  376  593  111  793  242   143 #>  [476,]  716  875  360  139  189  855  772  818  644   866 #>  [477,]  520  815  741  462  595  693  925  504  831   373 #>  [478,]  603  227  880  454  869  981   96  307  754    53 #>  [479,]  936  579  856  230  397  146    2  959   48   599 #>  [480,]    3  826  569  471  186  455  369  957  486   178 #>  [481,]  252  120   17    4  849  214  662   93  288   220 #>  [482,]  962  809  457  294  879  587  850  974  571   904 #>  [483,]   30  379  203  114    7  434  557  644  514   933 #>  [484,]  145    5  289  466  870  538  713   43  311   943 #>  [485,]  411  211  935  614  860  813  349  897  605   187 #>  [486,]  186  615  678  710    3   10  911  620  471   238 #>  [487,]  452  347   66  123  739  534  833  949  312   761 #>  [488,]   91  555  249  558  986  287  141  978  589   996 #>  [489,]  748  793  162  747  706  809  668  982  113   630 #>  [490,]  596  589  963  996  881  978  167  767  389   958 #>  [491,]  195  972  170  687  525  516  301  820  461   228 #>  [492,]   24  679  463  682  269  550   95  787  522   636 #>  [493,]  207  758  401  355    9  869  193  259  307   533 #>  [494,]  223  427  350  215   83  620  486   58  521   112 #>  [495,]  374  818  279  830  837  609  333  726  216   319 #>  [496,]  474  175  637  786  660  866  830  918  991   235 #>  [497,]  192   96   51  454  841  971   89  201  310   754 #>  [498,]  763  712  702   34  432   40   75  823  624    89 #>  [499,]  745  992  672  305  688  334  731  662  199   893 #>  [500,]  608   67  393  438  428  807  353  442  584   136 #>  [501,]  767  878  537   50  881  239   29  921  596   167 #>  [502,]  378  291  990  746  275  407  741  887  697   510 #>  [503,]  453  524  463  467  838  236  508  536  661   928 #>  [504,]  925  103  373   71  887  310  363  519  352   326 #>  [505,]  831  404  231  899  847  182  585  381  803   224 #>  [506,]  586  117  672  449  743  578   93  574  865    17 #>  [507,]  546  161  366  533  346  207  335  259  734    49 #>  [508,]  332  236  928  949  811  356  503  467   80   768 #>  [509,]   62  625  901  727  228  461  422  759  399   146 #>  [510,]    7  275  843  644  189  990  515  407  933    30 #>  [511,]  482  749  962  879  358  850  982  457  809   793 #>  [512,]  114  645  434  105  483  588  811   28  768   508 #>  [513,]  543  180   33  776  295  549  814  778  367   384 #>  [514,]  581  483  379    7  645  164  910  100  644   189 #>  [515,]  226  275  990  412  526  697  510  927   14   945 #>  [516,]  491  785  195  872  972  171  997  399  461   951 #>  [517,]  912  555   24  787  682  989  340  444  986   492 #>  [518,]  562  593   23  421   47  359  349  854  234   632 #>  [519,]   89  763  310  103   71  357   34  504   90   891 #>  [520,]  477  815  299  861  607  611  182  990  462   595 #>  [521,]  620   83  215  411  742  946  678  485  605   217 #>  [522,]  550  707  141  691  233  978  488  955   91    24 #>  [523,]  213  417 1000  125  346  152  433  766  386   592 #>  [524,]  453  503  536  123  761  804  293  762  928   236 #>  [525,]  242  329  491  183  871  853  687  116  475   376 #>  [526,]  412  780  226  142  515   14  649  335  965   969 #>  [527,]  382  690   35  579   48  803  815  733  677   831 #>  [528,]  296  899  224  560  404  505  304  977  355   959 #>  [529,]  918  634  267  685  637  371  300  220  786   214 #>  [530,]  718  323   60  108  817  388  681  973  113   351 #>  [531,]   50  970  720  167  671  320  903  185   53   596 #>  [532,]  725  364  931  836  446  236  814  953  549    55 #>  [533,]  207  259  507  335  260  193  546  366  161   975 #>  [534,]  472  756  604  118  639  739  312  109  664   487 #>  [535,]  380   45  898  864  964  199  440  541  743   124 #>  [536,]  870  123  466  524  420  761  943  739  194   484 #>  [537,]  429  878  501  415   50  945  920  283   14   720 #>  [538,]   99  870  679  568  484  233  263  943  327   115 #>  [539,]   56  724  885  396  274  879  890  428  271    94 #>  [540,]  895  617  248  147   98  940   26  330  769   704 #>  [541,]  683  440  964  573  688  564  229  602  578   266 #>  [542,]  341  158   71  796  887   68  373  326  519   657 #>  [543,]  513  180  549  367  384  778  776  814   33   295 #>  [544,]  983  143  271   43  395  122  919  437  736   311 #>  [545,]   82  197  923  792  636  661  834  910  133   705 #>  [546,]  507  161  366  346  356  635  533  405  259   207 #>  [547,]  846  675  832  357  612  302  103  862  431   674 #>  [548,]  243  218  745  683  297  602  255  246  440   414 #>  [549,]  293  384  778  943  953   54   55  814  532   776 #>  [550,]  522   24  572  492  707  233  787  682  463   955 #>  [551,]  598  221  630  436  748  162  465  706  699   916 #>  [552,]  166  574  431  365  451  802  547  746  675   280 #>  [553,]  737  471  369  372  911    3  178  795  641   938 #>  [554,]  571  974  917   87  812  389   31  294  958   587 #>  [555,]  986  488  517   91  444  522  890  787  327   905 #>  [556,]   42  289    5  851  563  466  212  263  484   295 #>  [557,]  254  483  203  825  765  933  114  915  190    30 #>  [558,]  249  890  287  362  488  907  948  996  389   274 #>  [559,]  302  612  316  848  278  966  282  674  671   805 #>  [560,]  107   84   16  436  528  138  728  954  819   566 #>  [561,]  640  819  348  942  157  758  798  840   86   193 #>  [562,]  518  593  723   47   23  421  591  349  632   710 #>  [563,]  115  289  926  556  180  484  263  538  145   327 #>  [564,]  458  686  266   99  541  573  115  134  538   578 #>  [565,]  126  801  417  629  766  319   27  985  194   572 #>  [566,]  401  575  959  869  208   23  436  421  138   355 #>  [567,]  409  209  663  403  722  496  377  175  987   984 #>  [568,]  263  159  679  852   95  538  676   99  289   492 #>  [569,]  480  118  455   10  468  664    3  626  186   981 #>  [570,]  981  102  186  678  935  754  740  880   47   349 #>  [571,]  974  554  389  902  812  917   87  274  111   294 #>  [572,]  202  550  766  782  955  319  463  734  838   194 #>  [573,]  688  229  541  578  683  276  141   99  117   564 #>  [574,]  431  675   93  586  832  552  365  506  547   802 #>  [575,]    6  125  566   23   36   20  386  869  999   651 #>  [576,]  635  245  756  583  168    8  424  604  278   840 #>  [577,]  439  202  907  160  386  766  648  417  782  1000 #>  [578,]  117  266  573  778   99  541  506  743  159   564 #>  [579,]   48  936  803  690  146  479  149  599  677   239 #>  [580,]  339  133  714  923  964  529  874  267  918   685 #>  [581,]  514  164  910    7   19  189  821  483  510   644 #>  [582,]  153  144  660  868  235  175  474  176  132   402 #>  [583,]  245  956  424  576  278   53  979  848  876   342 #>  [584,]  442  438  608  696  340  500  937  989  393   396 #>  [585,]  404  847  231   14  505  373  352  232  965   899 #>  [586,]  506  449  574  832  672  865  316  675   93   612 #>  [587,]  294  904  571  554  854  974  111  994  809   902 #>  [588,]  169  768   28  618  181  669  646  280  114   460 #>  [589,]  490  752  978  488  141  249  996  287  389   276 #>  [590,]  667  839  757  149  448  936  659  138  677    12 #>  [591,]  723   47   23  869  562   84  421  227  603   886 #>  [592,]  152  960   27  126  523  101  346  913  777   213 #>  [593,]  518  562  349  632   47  376  854   23   83   999 #>  [594,]  975  190  933  642  967  407  638  462   68   741 #>  [595,]  426  352  925  945  363   14  283  847  504   906 #>  [596,]  881  490  767  167  963  406  878   50  284   531 #>  [597,]  940   26  237  265  617  191  704  413  735   248 #>  [598,]  721  551  797  465  560  916  436  221  107   630 #>  [599,]   48  579  146  461  479  936  239  690  509   681 #>  [600,]  650  937  905  328  176  144  986  755  714   555 #>  [601,]   44  368  338  336  845  495  374  654  609   126 #>  [602,]  414  243  229  246  440  683  688  745  548   297 #>  [603,]  478  869  227  421  880  307  790   12   23   591 #>  [604,]  342  756  109  424  576  534   54  245  808   979 #>  [605,]  860  331  813  411  391  764  897  914  217   946 #>  [606,]  944  613   18   32  799   39  810  744  121   839 #>  [607,]  299  611  182  945  520  965  715  515  815   920 #>  [608,]  438  442  584  500  724  396  428  539   56   807 #>  [609,]  279  722  338  830  495  855  601  261  360   818 #>  [610,]  807  151  500  353  608  258  438   67  489   706 #>  [611,]  299  861  607  945  920  893  927  520  877   283 #>  [612,]  832  846  675  559  302  316  672  547  449   862 #>  [613,]   18   32  810  757  606   77  944   12   39   121 #>  [614,]  211  886  485  591   47    6  695  999   23   349 #>  [615,]  678  238  486  186   10  620  473  930  570   742 #>  [616,]  760   49  818  801  333  142  319  772  734   370 #>  [617,]  940  597  248  237  924   26  219   73  435   413 #>  [618,]  280  669  181  169  967  768  588  808  887   796 #>  [619,]  633  545  923  792  177  786  286  339   82   830 #>  [620,]   83  521  678  742  615  411  349  486  102   935 #>  [621,]   43  736   78  924  122  781  995  980  983   686 #>  [622,]  774  915  791  765  336  717  638  913  652   993 #>  [623,]  179   41  842   72  976  666  829  348  954   819 #>  [624,]   75  712  702  823  735  863  641  498  979   995 #>  [625,]  727  509  665  422  901   62  747  816  127   759 #>  [626,]  455  172  158  441  569  666  639   34  664   472 #>  [627,]  914  445  629   21  764   70  447  331  213   813 #>  [628,]  825  984   92  520  205  100  815  990  477   557 #>  [629,]  136  627  428   21  941  331  914  764  813   565 #>  [630,]  699  436  162  748  999  916   23  575  518     6 #>  [631,]  948  362  907  996  692   91  249  858  385   978 #>  [632,]  593  853  982  518  376  562  475  234  854   111 #>  [633,]  619  792  281  786  545  496  923  830  529   637 #>  [634,]  918  529  685  371  267  637  220  300  229   573 #>  [635,]  576  245  840  259  168  756  546  210  260   356 #>  [636,]  371   82  269  550  685  492  522  772   24   197 #>  [637,]  918  529  660  634  685  786  496  300  414   402 #>  [638,]  942  798  193   25  640  594  405  932  975    68 #>  [639,]   34  109  472  298  702  604  534  808  119   712 #>  [640,]  561  819  348  798  942   25  157  638  193   405 #>  [641,]  938  372  924  624  995   75  735  736  712   437 #>  [642,]  975  356  594  967  405  811  507  533  546   969 #>  [643,]  400  800   76   64  435   63  413   39  659   301 #>  [644,]  189   30    7  510  716  969  875  173  933   275 #>  [645,]  512  114  483  646  514  379  581   28  434   164 #>  [646,]   28  588  114  169  181  110  460  645  512   254 #>  [647,]   52  224  788  392  528  296  505  831   68   993 #>  [648,]  439  165   31  812  858  187  695  577  903   782 #>  [649,]  969  760  383  173   49  780  965  616  526   142 #>  [650,]  600  905  986  144  385  755  176  396   91   962 #>  [651,]   20  386  692   36 1000  858  125  439    6   907 #>  [652,]  993  392  717  915  224  622  200  655  250   381 #>  [653,]  271  884  709  752  287  905  909  686  137   589 #>  [654,]  221  655  777   44  188  152  368   79  108   113 #>  [655,]   79  654  728  383  250  336  152  200  993    16 #>  [656,]  322  237  167  430  805  423  970  752  998   968 #>  [657,]    9   71   38  310  268  373  493   51   96   227 #>  [658,]  806  926  244  563  219   33  556  437  295   851 #>  [659,]   39  400  810   51  590  800  613   64  497   201 #>  [660,]  786  144  637  918  582  176  132  685  874   474 #>  [661,]  453  344   82  197   95  931  492  269  679   503 #>  [662,]  893  927  481  849  104  697   17  499  220   862 #>  [663,]  175  377  474  235  209  877  950  857  257   939 #>  [664,]  981  827  227  468   96  210  840  758  876   754 #>  [665,]  747  668  625  692  727  902  904  216  450   948 #>  [666,]  441  158  976  172  626  542  348  341  796   640 #>  [667,]  977  304  230  138  590  936  680  397  757   677 #>  [668,]  747  162  665  113  108  625  973  699   79     6 #>  [669,]  822  280  618  789  158  172  169  796  588   542 #>  [670,]  662  893  783  927  861  849  697  291  104   288 #>  [671,]  691  970  968  531  805  980  978  140  282   955 #>  [672,]  612  688  449  316  506  832  586  117  499    17 #>  [673,]   29  307  921  790  131  767  406  901  934   881 #>  [674,]  863  735  357  971   90  876   53  454  559   956 #>  [675,]  612  431  547  832  302  846  574  862  559    17 #>  [676,]  163  834  337  568  852  762  263  225  705   133 #>  [677,]  936  803  667  839    2  579  149  590  831   304 #>  [678,]  615  620  486  570  935  238  742  186  102   521 #>  [679,]   95  492  568  953   99  463   24  538  730   269 #>  [680,]   57  667  799  304  977  241  397  230    2   839 #>  [681,]  718  146  625  257  817  509  108  668   62   727 #>  [682,]  787   24  912  492  517  550  194  420  463   989 #>  [683,]  243  440  229  541  602  688  745  414  548   909 #>  [684,]  445   70  447  204   80  701  627  273   86    27 #>  [685,]  634  371  918  529  636  522  786  573  637   402 #>  [686,]  458  564  322  909  621  141  884   78  691   327 #>  [687,]  116  301  423  128  183  290  284  871  972   994 #>  [688,]  229  745  573  683  243  602  672  414  305   541 #>  [689,]  261  409  203  855  360  173  403  716  969   915 #>  [690,]  803  579  831  847   35  182  146  815  149    48 #>  [691,]  141  671  978  707  233  522  996  968  282   955 #>  [692,]  694  651  907   20  948  631  333  727  858  1000 #>  [693,]  106   97  343  326  925  363  504  477  908   788 #>  [694,]   61  370  692  333  727  719  216   20  651   616 #>  [695,]   36  165  386    6  211  999  439  648  858    31 #>  [696,]  337  225  912  989  163  340  442  517  444   354 #>  [697,]  927  291  515  120  662  990  502  226  893   431 #>  [698,]  434  379  791  203  765  483  855  114  338   105 #>  [699,]  630  436  162  575   62  566  916  668   23   728 #>  [700,]  459  765  622  774  750  842  296  652  791   638 #>  [701,]   59   86  684  445  398  433  447  101   70    80 #>  [702,]  624  432   40  498  712   75   34  357  639   763 #>  [703,]  385  127  422  904  631  457  902  389  948   587 #>  [704,]  222   26  597  237  334  940  265  449   40   888 #>  [705,]  834  163  929  408  676  337  696  148  545   912 #>  [706,]  272  748  151  221  391  174   21  217  188   353 #>  [707,]  978  955  996  140  719  522  196  691  282   550 #>  [708,]   70  416  148  941  445  627  929  136  684   761 #>  [709,]  137  128  143  958   78  290  917  781  983    87 #>  [710,]  486  186   10  723  468   47  911  591  841   562 #>  [711,]  973  113   37  108  450  323  985  374  353   665 #>  [712,]   75  823  624  498  702  432   34  763  754   876 #>  [713,]  919  395  311  303  484   43  739  742  145   833 #>  [714,]  580  874  339  133  964  905  986  755  555   923 #>  [715,]  965   61  939  200  250  370  857  649  607   232 #>  [716,]  476  875  189  855  644  360  173  772  969   760 #>  [717,]  993  250  915  381  200  392  652  224  965   649 #>  [718,]  817   60  681  108  323  973  113  668  747   625 #>  [719,]  707  196  978  333  142  694  631  140  319   996 #>  [720,]  320   50  531   14  429  185  196  140  671   881 #>  [721,]  598  551   72  797  560  465  829  107  418    84 #>  [722,]  609  279  261  403  360  830  409  338  855   689 #>  [723,]  591  562  421   23   47  518  710  603  954    84 #>  [724,]  885  396  428   56  340  539  989  274  362   890 #>  [725,]  532  364  446   55  931  794  836  778  821   953 #>  [726,]  216  837  362  176  333  495  450   91  948   885 #>  [727,]  625  901  694  692  509  963   20  127  759   665 #>  [728,]  251  959   79  436  381  566  107  208  655   699 #>  [729,]  324  204  867  148  105  317  952  761  949   684 #>  [730,]  966   55   99  953  278    8  955  233  679   836 #>  [731,]  330  199  499  992  262  888  334  738  218   769 #>  [732,]  309   85  824  344  931  814  852  661  164   988 #>  [733,]  527  788  647  382  815   52  477  677  831    35 #>  [734,]  335   49  161  196  955  320  185  507  780   782 #>  [735,]  863   75  624  674  995  971   40  823  265   191 #>  [736,]  924  621  437   43  983   78  122  781  372   995 #>  [737,]  553  795  369    3  471  826  480  156  911   178 #>  [738,]  218  892   98  548  334  456  731  992   11   330 #>  [739,]  833   54  756  943  604  123  536  713  534   293 #>  [740,]  102  828  841  911  570  454  971  754  478   186 #>  [741,]  190  462  407  275  373  378  887  990  594   933 #>  [742,]  315  395  521  620  678  935  860  473  713   303 #>  [743,]  117  882  506  267  380  578  844  988  586    93 #>  [744,]  318  606  944  121   18   32   77  613   39   871 #>  [745,]  688  229  243  683  305  548  499  602  414   968 #>  [746,]  431  802  502  181  821    4  291  510  378   288 #>  [747,]  665  668  809  162  625  904  113  902  489   727 #>  [748,]  706  999  162  489  630  793    6  221  211   272 #>  [749,]  308  482  962  511  457  358  294  872  703   491 #>  [750,]  932   25  798  765  638  774   28  254  942   842 #>  [751,]  270  155   51  268  947  954  810  227  977   723 #>  [752,]  589  490  656  909  958  884  137  423   11   709 #>  [753,]  418  174  900   65  215  151  398   69  154   797 #>  [754,]  876  454  823  971  956  828  827   96  981    75 #>  [755,]  905  874  144  909  246  440  129  243  683   276 #>  [756,]  576  604  245  635  739  534  424  840  210   342 #>  [757,]  138  613  421   12  667  590  723  810  359   230 #>  [758,]  210  840  259  880  493  207  869  433  260   227 #>  [759,]  399  816  257  422  509  415  727  950  127   625 #>  [760,]  616  649  772  818  383   49  142  173  801   969 #>  [761,]  123   80  416  536  524  204  347  452  447   867 #>  [762,]  804  852  524  676  212   42  453  289  263   568 #>  [763,]  498   34   89  519  357  119  712   90  702   432 #>  [764,]  914  860  331  605  627  813   59  416  897   941 #>  [765,]  791  774  622  700  273  254  459  557  932   750 #>  [766,]  161  417  202  572  577  160  213  801  346   523 #>  [767,]  881  596  963   29  901  878  501  406  167    50 #>  [768,]  169  588  808  821  618  356  794  236  130   928 #>  [769,]  330  256  888   63   46  704  413  906  940   237 #>  [770,]  277  136  708   67    1  777   70  807   44   408 #>  [771,]  835   66   33  295  776  487  867    5  212   452 #>  [772,]  616  760  818  838  716  319  142  467  476   734 #>  [773,]   22  283  611  321  992  893  861  426  663   906 #>  [774,]  622  791  273  765  932  913   25  942  811   798 #>  [775,]  894  839   48  527  677  599  936  579    2    88 #>  [776,]  833   54  295   33  549  145  293    5  484   739 #>  [777,]  188  101   21  654   44  592  152   27  221   126 #>  [778,]  549   95   99  814  578  725  159  384   55   532 #>  [779,]  967  887  103  848  794  302  275  891  642   843 #>  [780,]  412  526  335  142   49  734   14  196  320   649 #>  [781,]   78  122  137  621  128  958  709  143  736   290 #>  [782,]  185  955  996  439  202  278  233  572  707   320 #>  [783,]  262  862  670  908  662  291  802  431  574   697 #>  [784,]  255  129  171  297  305  402  430  992  548   785 #>  [785,]  784  868  255  297  171  129  872  153  399   516 #>  [786,]  660  918  132  371  685  637  792  496  830   923 #>  [787,]  682  912   24  194  517  420  550  890  233   492 #>  [788,]  647  505  343  831  677   52  528  803  224    68 #>  [789,]  172  669  410  158  822  441  472  169  808   796 #>  [790,]   29  673  406  359  603  307  421  901   36    12 #>  [791,]  774  765  622  273  913  336  698  960  173   915 #>  [792,]  371  786  476  636   82  545  875  139  923   918 #>  [793,]  982  111  748  217  489  632   15  809  879   475 #>  [794,]  168  848  302  843  779  356  725  836  891   342 #>  [795,]  156  826  737  455  859  480    3  432  553   471 #>  [796,]  109  260  967  441  669  891  618  808  405   542 #>  [797,]  154   84  886  723  930  954  562  560  591   900 #>  [798,]   25  942  157  932  405  640  348  638  561    86 #>  [799,]  680  839   57  606  184  613  944  757  667   810 #>  [800,]   64  192  643  314   63   12  400  191  387   497 #>  [801,]  333  319  616  985  202  417 1000  565  766   152 #>  [802,]  746    4  288  431   93  574  291  552  783   502 #>  [803,]  831  690  149  579  847  936  505  677  231   899 #>  [804,]  762  852  524  814  212  289  453    5  293   295 #>  [805,]  322  265  980  671  316  458  237  970  656   559 #>  [806,]  658  926  544  223  244  851  437  563  219   983 #>  [807,]  136  151  353  500  941  629  428  391  272    67 #>  [808,]  472  298  768  604  109  618  796  410  639   169 #>  [809,]  457  904  902  587  747  482  111  974  665   962 #>  [810,]  121  613   18  757  659   39  751  270  606    12 #>  [811,]  405  642  356  913  546  932  942  508  975   366 #>  [812,]   31  389  858  554   87  648  571  958  439   974 #>  [813,]  331  860  897  605  914  485  160  764  391   417 #>  [814,]  549  778  532  364  931  804  852   95  293   309 #>  [815,]  182  831  520   35  690  505  607  477   92   462 #>  [816,]  950  759  422  399  257  127  625  727  509   385 #>  [817,]  718  358   60  681  747  625  464  820  668   816 #>  [818,]  616  142  772  760  319  333  866  991  719    61 #>  [819,]  640  829  561  348   86   16  798   25  107   942 #>  [820,]  170  228  358   62  195  817  461  234  509   587 #>  [821,]  768   19  446  794  510  843  725  746  181   130 #>  [822,]  669  280  419  618  172  789  158  181  169   542 #>  [823,]   75  754  712  876  624  454  827   96  498   735 #>  [824,]  309  198   85  732  743  578  266  159  852   117 #>  [825,]  628  203  557  392  689  915   92  254  652   717 #>  [826,]  156  795  480  455  859    3  569  471  737   178 #>  [827,]  876   96  424  754  956  664  891  454  981   823 #>  [828,]  971  454  903  754  740  387  876  192  191   841 #>  [829,]  819   84  640  348  561   86  954  107  465    16 #>  [830,]  279  495  132  609  837  866  991  786  286   722 #>  [831,]  505  803  847  182  690  231  404  815  585   149 #>  [832,]  846  612  316  675  547  862  449  672  586   559 #>  [833,]   54  739  776  293  943  604  342  549  979   145 #>  [834,]  163  705  676  929  337  408  682  912  762    24 #>  [835,]  771   66  867  487  452  112  952  347  212   427 #>  [836,]  467  269  463  168  843   19  953  838  794   236 #>  [837,]  286  132  176  726  495  830  319  216  786   818 #>  [838,]  467  463  772  572  161  546  836  766  503   734 #>  [839,]  590  667  799  677  936  448  680  613  757   606 #>  [840,]  210  259  758  635  260  207  245  433  576   880 #>  [841,]  911  740  497   96  454  754  828  471   51   823 #>  [842,]  348  819  638  640  623  829  666   72  798   750 #>  [843,]  510  836  794   19  302  189  168  335  848   779 #>  [844,]  849  882  743  199  380  300  104   93  662   267 #>  [845,]  338  601   44  609  277  279    1  126  336   698 #>  [846,]  832  612  547  862  316  675  559  302  674   888 #>  [847,]  831  585  149  231  803  404  505  232  934   352 #>  [848,]  335  302  794  559  583  278  779  168  320   533 #>  [849,]  481  844   93  662  104  214    4  882  252    17 #>  [850,]  917  271  143  879  974   87  554  571  709   294 #>  [851,]  354  466  556  212  303    5   42  484  289   295 #>  [852,]  159  568  263  804  198   95  762  289  676   814 #>  [853,]  632  234  376  359  170  184  518  982  593    77 #>  [854,]  234  994  999  111  587  904  359  695  518   790 #>  [855,]  360  875  716  173  476  261  203  689  434   644 #>  [856,]  916  479  397  230  699  436  304  325    2   251 #>  [857,]  939  209   61  991  877  415  257  950  866   694 #>  [858,]  812  439  907  648  389  948  651  963  996   249 #>  [859,]  432  826  119  712  702  795  624  639  156    75 #>  [860,]  897  331  813  605  764  160  914  306  485   935 #>  [861,]  611  299  520  927  607  670  893  697  205   945 #>  [862,]  846  832  888  262  547  675  922  612  431   662 #>  [863,]  735  674   75  624  995  971   40  357  876   979 #>  [864,]   73  134  266   45  564  898  541  115  180   964 #>  [865,]  586  506  449  365  222  367  704  266  574   578 #>  [866,]  991  818  142  857  939  474  877  139  476   719 #>  [867,]  761  212  123  452  729  347  148  524  204   487 #>  [868,]  582  153  785  144  235  308  950  175  129   755 #>  [869,]  603  421   23  401  566  493  880  575  478    36 #>  [870,]  536  943  420  538  194    8  484  311  953   466 #>  [871,]  183  116   77  376   32  128  318  687  242    18 #>  [872,]   11  171  375  456  218  255  884  784  752   972 #>  [873,]    2  325  397  304  479  856  936  251  230   579 #>  [874,]  714  755  660  637  580  144  964  600  246   918 #>  [875,]  360  716  855  476  189  644  173  434  197    30 #>  [876,]  754  454  956  827  424  823  971   53   96   583 #>  [877,]  920  415  939  857  537  866  991  945  474   429 #>  [878,]  881  415  963  767  429   50  596  501  537   490 #>  [879,]  974  274   56  571  902  962  850  111  554   809 #>  [880,]  210  758  478  165  603   53  869  956  840   227 #>  [881,]  767  963  596  878   50  901   29  406  167   490 #>  [882,]  743  844  267  380  849  117  988   85  506    93 #>  [883,]  451  443  543  513  364  166  309  814  778   367 #>  [884,]   11  909  752  375  653  686  548  458  456   322 #>  [885,]  724  396  362  340  989  274  558  890   56   428 #>  [886,]  614   84  930  591  211  485   47  107  465   433 #>  [887,]  967  103  779  378  373  504  618  741  542    71 #>  [888,]  262  330  862  922  769  846  832  704  731   499 #>  [889,]  264   13  394   63   88   46  131  256   64   906 #>  [890,]  558  444  287  787  249  488  306  555  420   274 #>  [891,]  109  424  827  260   34  103  848  794  779   604 #>  [892,]   98  218  738  997  548  456  992  872  731    11 #>  [893,]  662  927  920  945  697  499  862  670  283   611 #>  [894,]   88  106  693  839  677  343  775  590   39    97 #>  [895,]  540   26  940  704  769  248  597  330  617   222 #>  [896,]  222  365   40  432   26  367  451  702  119   704 #>  [897,]  860  331  306  813  160  292  187  605  935   485 #>  [898,]   45  964  864  535  440  134  541   73  380   683 #>  [899,]  404  231  401  959  208  505    9  355  149   493 #>  [900,]  632  982  215  593  154   15  793  797  361   886 #>  [901,]  767   29  881  963  509  727   20  406   62   790 #>  [902,]  974  571  904  948  809  274  554  362  389   457 #>  [903,]  828  971   53  165  531  454  648  406  880   970 #>  [904,]  587  902  809  571  703  294  854  974  554   111 #>  [905,]  986  909  276  555  755  650  488  653  600   589 #>  [906,]  283   22  426  256  394  537  501  430  595   889 #>  [907,]  202  948  858  577  692  439  362  631  996   249 #>  [908,]  922  363  321  925  862  888  783  262  313    97 #>  [909,]  276  884  905  686  683  243  752  589  141   458 #>  [910,]  164  197  581  344   19  875  661  189  434    82 #>  [911,]  471  186  841  369  740  102    3  486  710   570 #>  [912,]  517  682  787  989   24  340  225  555  890   444 #>  [913,]  960  811  366  346   27  546  273  774  592   507 #>  [914,]  764  627   21  860  813  605  331   59  629   897 #>  [915,]  622  717  392  993  173  652  969  649  774   203 #>  [916,]  436  856  630  230  699  397  757  138  304    23 #>  [917,]   87  554  143  571   31  974  290  812  958   850 #>  [918,]  634  529  685  637  371  786  267  660  300   220 #>  [919,]  713  395  311   43  145  484  742  437  122   303 #>  [920,]  945  877  537  893  226  429  412  305  283   526 #>  [921,]  131  673   29   50  307  394  352  167  501   767 #>  [922,]  363  908  862  888  925  547  846  262   90   832 #>  [923,]  133  339   82  545  786  636  371  177  580   286 #>  [924,]  736  437  641  621  938  995   43  372  145    78 #>  [925,]  363  504  103  595  390   97  310  922  352   373 #>  [926,]  563  437  145   33  484  180  295    5  289   556 #>  [927,]  697  291  893  515  662  945  299  226  120   920 #>  [928,]  236  508  332  293  949  532  808  453  524   768 #>  [929,]  408  148  834  277  705  324  708  163  503   453 #>  [930,]   10  468   84  886  591  154  615  238  678   614 #>  [931,]  344  446  532  725   95   19  836  661  814   778 #>  [932,]   25  798  942  157  811  774  405  273  638   750 #>  [933,]  407  190  275  594   30    7  642  969  975   990 #>  [934,]  232  239  146  847  231  149  208  673  537    29 #>  [935,]  253  485  160  187  860  897  678  570  742   395 #>  [936,]  677  579  803  149  479  667    2   48  839   590 #>  [937,]  177  600  328  286  393  340  584  132  176   650 #>  [938,]  641  372  924  437  995  624  736   75  145   919 #>  [939,]  857   61  209  991  877  415  257  715  866   694 #>  [940,]  597  248  237  617  413   26  704  265  456   191 #>  [941,]  428  629  764  331   94  914  136  306  627   605 #>  [942,]  798   25  405  157  932  640  638  561  811   366 #>  [943,]    8  953  870   54   55  739  342  979  549   536 #>  [944,]  606   32  613   18   39  799  448  744   77   184 #>  [945,]  920  537  226  283   14  595  426  893  927   515 #>  [946,]   94  605  521  411  217  215  742  391  292   860 #>  [947,]  285  268  751  326  270   51  657  977  343   106 #>  [948,]  362  631  907  902  858  692  389  558  249   216 #>  [949,]  332  312  508  928  347  204  472  157  487   808 #>  [950,]  816  235  257  759  857  399  377  175  939   127 #>  [951,]  308  516  464  195  817  358  820  749  377   816 #>  [952,]  949  729  317  204  347  312  332  410  487   867 #>  [953,]    8   55  730  943  966  679  278  463   99   836 #>  [954,]   84  268  468  591  723   10   41  561  227   930 #>  [955,]  782  278  707  185  966  734  282  320  572   140 #>  [956,]   53  424  245  583  876  754  827  210  454   260 #>  [957,]  112  238  118  480  569  615   10   65  468   473 #>  [958,]  812  290  137  284  389   31  128  554  917    87 #>  [959,]  208  401  231  566  899  381  232  355  404   728 #>  [960,]   27  592  913  126  346  152  366  161  546   766 #>  [961,]  997  321   88  147   98  330  773  256  908   769 #>  [962,]  457  482  879  809   56  974  902  571  703   274 #>  [963,]  881  767  596  878  490  901  858  631  406   996 #>  [964,]  541  440  683  134  714  380  602  898  580   573 #>  [965,]  715  232  231  250  182  649  585  381  780   717 #>  [966,]  730  278   55  955    8  953  282  559   99   233 #>  [967,]  887  779  594  642  975  618  190  933  796   407 #>  [968,]  305  429  671  691  140  141  978   50  656   745 #>  [969,]  173  649   30  642  644  933  975  760  716   526 #>  [970,]  671  531  980  167  996  782  185  490  805   903 #>  [971,]  828  454  754  903  876  387  192  674  735   191 #>  [972,]   46  301   13  264  687  889  423  171  256   998 #>  [973,]  108  711  113  374  323   37  665  351  718   668 #>  [974,]  571  554  274  902  389   87  917  879  812   111 #>  [975,]  642  594  193  967  533  405  207  933  969   507 #>  [976,]  666   41  626  441  158  268  172  947  751   569 #>  [977,]  667  304  138  241  680  230  528  397  268   270 #>  [978,]  996  707  691  141  490  719  671  589  488   249 #>  [979,]  995  342  583   54  424   75  245  943  876   863 #>  [980,]  805  970  671  995  265  322  278  979  966   583 #>  [981,]  664  570  227  754   96  827  478  876  210   468 #>  [982,]  793  632  111  475  748  593  853  489   15   854 #>  [983,]  736  544  122   78  437  621  709  781   43   924 #>  [984,]  100   92  403  409  628  205  689  299  520   261 #>  [985,]  450  801  216  152  417  333  692  188  665   565 #>  [986,]  555  905  488   91  444  276  327  287  517   890 #>  [987,]  722  409  567  261  403  609  279  689  338   360 #>  [988,]  252  446   19  267   17   85  117  931  743   481 #>  [989,]  340  912  885  517  724  428  682  787  396   890 #>  [990,]  275  407  515    7  510  933  190  741  502   644 #>  [991,]  866  857  939  818  142  209  877  474  476    61 #>  [992,]  499  218  256  731  784   22  906  430  738   330 #>  [993,]  717  652  381  250  200  392  224  915  355   182 #>  [994,]  284  290  128  406  854  958  234  587  294   790 #>  [995,]  979  980  735  863  641  924   75  621  624   265 #>  [996,]  978  249  707  782  185  490  907  970  631   691 #>  [997,]   98  256  892  972   46  992  769  218  330   738 #>  [998,]  387  167  394  423  131  430  921  656  284   413 #>  [999,]    6  695  854  211   36  111  575  748   23   386 #> [1000,]  125  386  651  523   49   20  801  417  692   577 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 1.21046951 1.2814328 1.3088671 1.3903896 1.4093499 1.5123118 1.5177298 #>    [2,] 0.55047599 0.7540306 0.7634534 0.7722017 0.8163211 0.8700257 0.9226647 #>    [3,] 0.35784179 0.4869218 0.5242352 0.5781613 0.6461551 0.6900840 0.7158303 #>    [4,] 0.53401809 0.5887559 0.7787472 0.7808913 0.7860686 0.8376048 0.9398310 #>    [5,] 0.34914673 0.4117812 0.4147237 0.5550794 0.5681887 0.5832709 0.6670932 #>    [6,] 0.34558386 0.3718587 0.3866957 0.4058981 0.4168423 0.4366775 0.4563907 #>    [7,] 0.46565599 0.4989607 0.5344266 0.5990700 0.6116902 0.6150030 0.6260920 #>    [8,] 0.24524756 0.3766672 0.4190034 0.4619930 0.4910142 0.4985297 0.5080894 #>    [9,] 0.26592251 0.5272305 0.5303869 0.5855830 0.5917343 0.5936955 0.6659433 #>   [10,] 0.20624216 0.4890596 0.6274324 0.6552598 0.6766045 0.6837926 0.6886020 #>   [11,] 0.57189888 0.5912276 0.6606174 0.6676028 0.7789707 0.9019471 0.9936128 #>   [12,] 0.59154586 0.5943194 0.6043368 0.6477592 0.6792485 0.6849131 0.6892158 #>   [13,] 0.19424836 0.2125101 0.6348915 0.6565775 0.7102408 0.7548653 0.7556356 #>   [14,] 0.50366019 0.5213843 0.5306987 0.5441858 0.5766456 0.6146114 0.6332020 #>   [15,] 0.66621597 0.7634713 0.9313510 0.9380089 0.9422618 0.9714016 1.0029979 #>   [16,] 0.42796979 0.5702875 0.6811840 0.7296882 0.7650716 0.8027896 0.8264574 #>   [17,] 0.43980417 0.5712633 0.6833969 0.7022311 0.7234893 0.7255583 0.7870018 #>   [18,] 0.32998788 0.3715182 0.4313687 0.7057181 0.7156661 0.7459431 0.7606691 #>   [19,] 0.53175341 0.5804025 0.6025482 0.6220356 0.6549309 0.6895867 0.7023902 #>   [20,] 0.25537990 0.4888065 0.5012188 0.5132578 0.5201907 0.5244126 0.5297184 #>   [21,] 0.44869504 0.5176139 0.5201538 0.5333403 0.5528347 0.5637833 0.6056317 #>   [22,] 0.24270294 0.4181342 0.4994289 0.7301984 0.7687906 0.8701522 0.8722797 #>   [23,] 0.27916247 0.4182686 0.4627760 0.5187923 0.5625505 0.5745288 0.5912516 #>   [24,] 0.27801534 0.2808169 0.4150215 0.4842020 0.5161527 0.5207735 0.5940268 #>   [25,] 0.07900148 0.2370228 0.3602234 0.3902051 0.5426235 0.6006307 0.6474137 #>   [26,] 0.61071508 0.6573590 0.7340550 0.7405824 0.7735499 0.7830390 0.8050931 #>   [27,] 0.34159301 0.3748690 0.3932452 0.5942108 0.6043088 0.6143347 0.6237749 #>   [28,] 0.62085681 0.6916244 0.7386633 0.9016987 1.0270393 1.0317743 1.1095360 #>   [29,] 0.22512765 0.3803994 0.3970135 0.4499811 0.4840932 0.4850417 0.4858446 #>   [30,] 0.39126729 0.4931540 0.5295156 0.5344266 0.5987257 0.6567391 0.6665549 #>   [31,] 0.30912486 0.3716844 0.4069067 0.4383080 0.4538033 0.4771445 0.4805272 #>   [32,] 0.37151820 0.4253336 0.4780872 0.6146927 0.6674207 0.7188448 0.7326479 #>   [33,] 0.09113993 0.4117812 0.6715584 0.7239671 0.7447867 0.7682577 0.8076352 #>   [34,] 0.37734773 0.4000469 0.4212806 0.5560209 0.5659865 0.5809123 0.6173314 #>   [35,] 0.69441613 0.7249473 0.7624164 0.8119654 0.9839406 1.0092612 1.0173604 #>   [36,] 0.24808700 0.2723521 0.4092183 0.4168423 0.4383710 0.5023097 0.5201907 #>   [37,] 0.52469938 0.6230936 0.7173692 0.7371090 0.7860783 0.9153443 0.9223275 #>   [38,] 0.45160491 0.5060944 0.5127088 0.5314992 0.5812371 0.5855830 0.6128921 #>   [39,] 0.33992786 0.6105890 0.7697521 0.8120088 0.8502975 0.8543398 0.8718331 #>   [40,] 0.45826699 0.4952567 0.5293771 0.5759559 0.5790945 0.5833047 0.5974994 #>   [41,] 0.78237982 0.8547462 0.9179658 0.9656688 1.0256551 1.0375951 1.0403373 #>   [42,] 0.34658311 0.5914036 0.6843618 0.7177654 0.8091027 0.8208785 0.8380186 #>   [43,] 0.36424210 0.4869968 0.5056829 0.5323747 0.5782066 0.5927128 0.6488748 #>   [44,] 0.45940455 0.6715617 0.6978360 0.7154144 0.7471025 0.7953747 0.8342867 #>   [45,] 0.66295655 1.0285802 1.1348424 1.1780126 1.5407360 1.5456936 1.5925654 #>   [46,] 0.59517291 0.6055320 0.6175850 0.6348915 0.6934208 0.7472936 0.7604855 #>   [47,] 0.26748597 0.4514422 0.5305996 0.5355726 0.5653137 0.5940433 0.6347029 #>   [48,] 0.44182012 0.4790345 0.7311678 0.7590097 0.7912512 0.8369607 0.8826947 #>   [49,] 0.39492438 0.4265521 0.4639095 0.4944305 0.4999843 0.5031262 0.5226127 #>   [50,] 0.36671734 0.3998036 0.4010056 0.4295132 0.4577139 0.4684129 0.4841514 #>   [51,] 0.48536186 0.5327137 0.6370667 0.6729774 0.6874784 0.6910342 0.6948833 #>   [52,] 0.58197751 0.8388852 0.9412836 1.0082361 1.0723705 1.1975280 1.2467210 #>   [53,] 0.28197372 0.4617600 0.4898238 0.5057847 0.5060944 0.5117953 0.5443672 #>   [54,] 0.31425204 0.4628165 0.4717548 0.4836014 0.4837092 0.5745749 0.6417850 #>   [55,] 0.33077154 0.3722042 0.3859907 0.4190034 0.4615879 0.5161005 0.5482435 #>   [56,] 0.35792720 0.5561728 0.6250605 0.6409314 0.7018025 0.7086441 0.7429670 #>   [57,] 0.47956545 0.7789857 0.9671439 1.1418139 1.1795548 1.2010407 1.2126780 #>   [58,] 0.63049552 0.9036267 0.9673234 0.9727745 1.0094522 1.0096174 1.0156655 #>   [59,] 0.46314350 0.5494480 0.5521143 0.5776104 0.6092869 0.6229224 0.7165581 #>   [60,] 0.66813811 0.7942737 0.8143436 0.9562376 0.9588842 0.9783526 1.0074788 #>   [61,] 0.30665876 0.3083442 0.5477442 0.5914676 0.6283700 0.6488153 0.6576743 #>   [62,] 0.48137672 0.5174087 0.5922966 0.6447556 0.6930791 0.6942257 0.7407218 #>   [63,] 0.53136017 0.5715258 0.6273539 0.6438647 0.6653796 0.6855298 0.6951885 #>   [64,] 0.29071253 0.3427768 0.5943194 0.6082906 0.6168765 0.6543068 0.6855298 #>   [65,] 0.90797943 1.0011695 1.0073150 1.0568285 1.1074157 1.1380730 1.1655519 #>   [66,] 0.51356621 0.6649191 0.7882149 0.8889239 0.9799349 1.0152143 1.0274019 #>   [67,] 0.91009161 1.1452958 1.1939267 1.2397482 1.2778259 1.3142367 1.3691782 #>   [68,] 0.43896058 0.6626579 0.7063940 0.7192270 0.7217734 0.7289212 0.7324372 #>   [69,] 0.89069032 0.9313217 0.9673234 0.9976411 0.9996854 1.0331601 1.0587833 #>   [70,] 0.33989198 0.4327614 0.5350378 0.6258618 0.6469255 0.7164036 0.7242920 #>   [71,] 0.38397973 0.3862299 0.4516049 0.4913964 0.4920131 0.5414338 0.5917343 #>   [72,] 1.00848047 1.0768269 1.0943501 1.1057459 1.1238643 1.1548307 1.2246481 #>   [73,] 0.49674503 1.1517222 1.1530540 1.1780126 1.2000227 1.2599610 1.2891031 #>   [74,] 0.95888418 1.4328568 1.4894015 1.6543722 1.6595918 1.6635901 1.6692800 #>   [75,] 0.20286252 0.2775229 0.3058515 0.4774863 0.4874333 0.5379454 0.5445072 #>   [76,] 0.56327896 0.6449463 0.8223549 0.8228872 0.9294344 0.9357540 1.0041295 #>   [77,] 0.42533361 0.4313687 0.5218097 0.6681459 0.6745087 0.7003972 0.7146743 #>   [78,] 0.31406018 0.4260126 0.4445334 0.5684864 0.5926834 0.6159768 0.6696777 #>   [79,] 0.58282320 0.5919036 0.6241585 0.6445785 0.6560100 0.7319469 0.7938257 #>   [80,] 0.19979753 0.5161356 0.5565107 0.5836934 0.5945889 0.6472249 0.6842989 #>   [81,] 1.81951854 1.9922656 2.0205986 2.0790480 2.0946907 2.1277494 2.1302952 #>   [82,] 0.55400715 0.5834456 0.7181371 0.7294277 0.7365553 0.7525134 0.7698621 #>   [83,] 0.38538472 0.4618722 0.6916650 0.7051790 0.7148987 0.7293677 0.7540948 #>   [84,] 0.47027993 0.5917161 0.6165220 0.6246316 0.6297133 0.7374528 0.7390052 #>   [85,] 0.72936937 0.8543112 0.9746944 1.0084146 1.1090694 1.1174333 1.1207087 #>   [86,] 0.59078288 0.6462234 0.6689212 0.6699648 0.6811840 0.6858087 0.6860345 #>   [87,] 0.27254531 0.3651141 0.3716844 0.3921957 0.4445022 0.4630358 0.4686448 #>   [88,] 0.66562908 0.8177474 0.8235249 0.9084179 0.9557719 1.0141622 1.0408833 #>   [89,] 0.31747977 0.4114420 0.4268198 0.6100400 0.6136000 0.6282401 0.6387592 #>   [90,] 0.43156060 0.4952567 0.5908792 0.6033091 0.6173670 0.6258699 0.6387592 #>   [91,] 0.31421513 0.5338823 0.5412133 0.5900256 0.6272943 0.6422183 0.6592550 #>   [92,] 0.81196536 0.9115486 0.9346957 0.9929918 1.0456172 1.0754124 1.0787575 #>   [93,] 0.64736887 0.7271914 0.7541340 0.7808913 0.7979371 0.8244759 0.8497188 #>   [94,] 0.49533234 0.6598227 0.7076012 0.7186929 0.7863789 0.8153246 0.8174131 #>   [95,] 0.34692452 0.5627264 0.6081151 0.6135268 0.6495568 0.6515160 0.6583607 #>   [96,] 0.39060104 0.4790116 0.4927501 0.4989591 0.5117631 0.5192327 0.5327137 #>   [97,] 0.55207656 0.5697016 0.6301777 0.6495728 0.6696607 0.7135412 0.8605164 #>   [98,] 0.63783218 0.7148571 0.7776584 0.8507334 0.9494797 1.0558888 1.0583920 #>   [99,] 0.39020552 0.4962837 0.5675716 0.5861157 0.5976980 0.6081151 0.6092434 #>  [100,] 0.89978391 0.9308147 0.9408754 0.9696101 0.9858472 0.9923786 1.0627488 #>  [101,] 0.55283471 0.5907829 0.5922631 0.6141458 0.6261074 0.6392327 0.6421244 #>  [102,] 0.35502072 0.4501754 0.6099109 0.6260703 0.6280210 0.6670661 0.6866346 #>  [103,] 0.37801086 0.4721603 0.4913964 0.5124604 0.5450710 0.6028122 0.6238292 #>  [104,] 0.34134019 0.5929541 0.6372357 0.7820931 0.7897595 0.8339584 0.8447999 #>  [105,] 0.54679682 0.9584708 0.9619867 0.9668903 1.1132133 1.1147389 1.1797309 #>  [106,] 0.42115831 0.5175675 0.5697016 0.7871844 1.0125592 1.0360698 1.0951413 #>  [107,] 0.37049110 0.4279698 0.7430611 0.7789587 0.7795453 0.7839516 0.7865491 #>  [108,] 0.37950826 0.5067155 0.6800699 0.6945929 0.7168134 0.7420902 0.7524010 #>  [109,] 0.31009228 0.4000469 0.4590026 0.5164836 0.5549018 0.6026765 0.6227651 #>  [110,] 1.01791160 1.0815005 1.0840109 1.2249167 1.2279099 1.2384120 1.2896179 #>  [111,] 0.51360556 0.5314622 0.5624893 0.5767651 0.5827102 0.6198561 0.6221631 #>  [112,] 0.70836509 0.7513724 0.7882149 0.8676796 0.8703300 0.9034353 0.9156993 #>  [113,] 0.49869553 0.5067155 0.5460506 0.5801585 0.6696494 0.7173692 0.7608483 #>  [114,] 0.40062803 0.7368107 0.8528844 0.8633145 0.8855950 0.9016987 0.9022142 #>  [115,] 0.39939033 0.5879220 0.6793512 0.6805757 0.7058957 0.7344912 0.7391128 #>  [116,] 0.31704666 0.3983268 0.5037551 0.5216523 0.5296416 0.6908122 0.7452978 #>  [117,] 0.37326479 0.5340094 0.5787218 0.5794222 0.7135245 0.7212985 0.7981541 #>  [118,] 0.58711013 0.6636078 0.6993385 0.7835613 0.7958064 0.8146638 0.8318024 #>  [119,] 0.38781056 0.6292556 0.6395271 0.6717917 0.6905921 0.7365392 0.7809893 #>  [120,] 0.51972264 0.5565621 0.5588898 0.6499334 0.6994073 0.7234893 0.7733899 #>  [121,] 0.52007377 0.7156661 0.7769445 0.8729608 0.9187279 0.9307765 0.9801876 #>  [122,] 0.37462522 0.5608964 0.5684864 0.5867999 0.6280210 0.6488748 0.6532210 #>  [123,] 0.28637481 0.5232306 0.5870548 0.5945889 0.6033274 0.6372778 0.6648775 #>  [124,] 1.46107996 1.6845896 1.6912515 1.6925196 1.7416590 1.7471112 1.8158605 #>  [125,] 0.34397845 0.3866957 0.3924534 0.4412515 0.5012188 0.5058887 0.5131453 #>  [126,] 0.37486905 0.4751257 0.5087351 0.5887325 0.7051331 0.7298008 0.7491495 #>  [127,] 0.29550828 0.3681418 0.5015297 0.6060122 0.6288299 0.6308819 0.6992010 #>  [128,] 0.21279658 0.3983268 0.4456823 0.4821855 0.5067848 0.5608770 0.5763736 #>  [129,] 0.33082271 0.3812432 0.4656621 0.5812384 0.6536513 0.7041940 0.7333086 #>  [130,] 0.59124589 0.7267236 0.7863414 0.8405639 0.8473076 0.8762039 0.8769079 #>  [131,] 0.29341112 0.3539795 0.5754289 0.5817286 0.6082906 0.6362094 0.6390304 #>  [132,] 0.38097849 0.4882768 0.5360774 0.7430517 0.7626059 0.8503862 0.8728612 #>  [133,] 0.34767639 0.5731660 0.6695476 0.8528346 0.8894494 0.8955452 0.9042629 #>  [134,] 0.67153583 0.7344912 0.7583382 0.7931788 0.8128573 0.8623701 0.9081630 #>  [135,] 1.14665624 1.2219094 1.2304212 1.3831278 1.4038045 1.4243506 1.5006148 #>  [136,] 0.44825377 0.6461841 0.7169382 0.7503173 0.7732450 0.7867631 0.8033412 #>  [137,] 0.26411020 0.4260126 0.4456823 0.4673949 0.4828882 0.5533188 0.6529094 #>  [138,] 0.52191310 0.5914450 0.5995905 0.6128027 0.6217932 0.6322603 0.6677923 #>  [139,] 0.58668618 0.6357454 0.6994073 0.7920784 0.8237250 0.8393177 0.8492497 #>  [140,] 0.29261567 0.4439449 0.5403259 0.5471188 0.5475349 0.5604020 0.5725399 #>  [141,] 0.25265749 0.4204692 0.4459950 0.4995554 0.5339018 0.5646986 0.5659258 #>  [142,] 0.44731276 0.4693085 0.4891228 0.4957363 0.5366771 0.5708846 0.5962150 #>  [143,] 0.43630431 0.5608964 0.5913644 0.6018143 0.6031855 0.6383166 0.6529094 #>  [144,] 0.55029717 0.6149651 0.6536513 0.6960493 0.7244467 0.7711151 0.8378862 #>  [145,] 0.46758775 0.5323747 0.6548214 0.6687391 0.6954821 0.6959315 0.6987302 #>  [146,] 0.56358593 0.6714041 0.7109351 0.7311678 0.7458959 0.7665936 0.7959432 #>  [147,] 1.27924469 1.3343597 1.4185485 1.4773048 1.7597464 1.7606057 1.7904207 #>  [148,] 0.69682063 0.8924923 0.9030081 0.9054818 1.0016268 1.0311475 1.0401675 #>  [149,] 0.47105967 0.5015533 0.5732198 0.5992964 0.6070402 0.6333816 0.6404007 #>  [150,] 1.08881693 1.1088618 1.1437963 1.2449947 1.2620592 1.2672230 1.3379752 #>  [151,] 0.60289777 0.6267536 0.6512268 0.8387839 0.8905984 0.9767534 1.0555368 #>  [152,] 0.38434510 0.5474227 0.5580321 0.6047128 0.6159771 0.6368901 0.6379932 #>  [153,] 0.76091799 1.0115355 1.0132570 1.0881376 1.0951688 1.1263791 1.1440797 #>  [154,] 0.42601353 0.7362994 0.7374528 0.9115949 0.9399216 0.9703215 0.9797734 #>  [155,] 0.55380071 0.5868136 0.8971739 0.9859653 0.9871506 1.0210517 1.0258789 #>  [156,] 0.38074638 0.5154705 0.8954715 0.9021617 0.9227504 1.0985167 1.1493428 #>  [157,] 0.33667180 0.3653168 0.3902051 0.4978214 0.5171986 0.6065168 0.6329947 #>  [158,] 0.35433111 0.4546433 0.5162549 0.5985664 0.6256440 0.6345276 0.7123310 #>  [159,] 0.46309918 0.4648272 0.4978386 0.5025315 0.6583607 0.6659381 0.7088686 #>  [160,] 0.43700057 0.4744331 0.5245809 0.5412125 0.5517345 0.5612849 0.5615328 #>  [161,] 0.26497463 0.3009462 0.3889990 0.4135342 0.4214572 0.4266499 0.4639095 #>  [162,] 0.42839864 0.5531608 0.5698067 0.6107278 0.6536423 0.7160076 0.7929313 #>  [163,] 0.35057975 0.4309376 0.5965018 0.7168258 0.7637036 0.7787982 0.7869576 #>  [164,] 0.37272716 0.6543357 0.6840445 0.7475963 0.8614908 0.9399279 0.9457978 #>  [165,] 0.28816770 0.3682785 0.3965755 0.4383710 0.4658402 0.4771445 0.5262443 #>  [166,] 0.49137345 0.6205306 0.6278612 0.7186285 0.7435339 0.7440504 0.7887943 #>  [167,] 0.32875221 0.4161305 0.4295132 0.4324372 0.4674339 0.4922360 0.5073235 #>  [168,] 0.34534255 0.4533731 0.4648813 0.4786173 0.5276847 0.5344793 0.5385578 #>  [169,] 0.23154039 0.4996064 0.5751151 0.6726457 0.6773536 0.7041913 0.7237772 #>  [170,] 0.52243421 0.7852364 0.8055764 0.8948322 0.9694110 1.0355170 1.0355223 #>  [171,] 0.57831635 0.6068026 0.7323271 0.8061708 0.9309761 0.9451110 0.9462643 #>  [172,] 0.35433111 0.4766277 0.5867573 0.5916953 0.6389778 0.6756414 0.7301892 #>  [173,] 0.39210704 0.5408687 0.5812758 0.5987257 0.6104140 0.6381541 0.7037034 #>  [174,] 0.60447661 0.6267536 0.7537042 0.7770416 0.7910509 0.7976067 0.8122335 #>  [175,] 0.37131688 0.4732668 0.6357584 0.7240616 0.7558192 0.8210686 0.8438541 #>  [176,] 0.38097849 0.6842423 0.6960493 0.7390536 0.7940312 0.8275767 0.8500671 #>  [177,] 0.61987271 0.9503676 0.9604526 1.1101986 1.1372493 1.1962238 1.1983213 #>  [178,] 0.86356366 0.8696071 0.8979664 0.9135622 0.9136056 0.9146832 0.9156993 #>  [179,] 0.90251624 1.2391223 1.2551132 1.3247592 1.3892696 1.4173955 1.5960577 #>  [180,] 0.65482141 0.6582334 0.6583989 0.6872535 0.7058957 0.7233368 0.7298838 #>  [181,] 0.47581826 0.5598178 0.6172547 0.6436547 0.7041913 0.7288602 0.7499769 #>  [182,] 0.46401044 0.5627313 0.5956964 0.6124989 0.6997715 0.7332486 0.7392277 #>  [183,] 0.31704666 0.3587281 0.6026883 0.6088547 0.6555160 0.7286017 0.7831765 #>  [184,] 0.78523641 0.9052024 0.9599744 1.0731588 1.0797704 1.1046482 1.1092652 #>  [185,] 0.26858368 0.3132308 0.3914943 0.4122333 0.4825606 0.4826539 0.4865361 #>  [186,] 0.42992809 0.4314484 0.4412957 0.5306193 0.5781613 0.6099109 0.6317479 #>  [187,] 0.32558630 0.4538033 0.4867114 0.5004484 0.5212093 0.5499718 0.5767945 #>  [188,] 0.27986585 0.4486950 0.6261074 0.6478857 0.6791720 0.6830734 0.7098652 #>  [189,] 0.35281360 0.4997944 0.5622268 0.6197868 0.6285987 0.6537978 0.6549309 #>  [190,] 0.27383529 0.3569462 0.3955108 0.4536409 0.4845361 0.5086319 0.6688656 #>  [191,] 0.43967830 0.4634355 0.5661557 0.6033091 0.6095929 0.6202265 0.6597499 #>  [192,] 0.44065919 0.4634355 0.5367478 0.5504818 0.5631576 0.5679693 0.6168765 #>  [193,] 0.35144341 0.4494418 0.4993466 0.5087696 0.5155247 0.5654223 0.5736881 #>  [194,] 0.22112194 0.3996389 0.5086507 0.5654880 0.5935245 0.5983421 0.6027282 #>  [195,] 0.80557643 0.9636475 0.9959560 1.0036229 1.2343316 1.2907756 1.2967553 #>  [196,] 0.39149426 0.4101772 0.4281875 0.4773816 0.4779779 0.4999843 0.5505670 #>  [197,] 0.55400715 0.7314181 0.7574815 0.7799084 0.7873526 0.8264940 0.8332343 #>  [198,] 0.50253147 0.6811196 0.6893140 0.8128573 0.8158326 0.8572884 0.9836412 #>  [199,] 0.72804450 0.8080975 0.8230186 0.8388021 0.9040104 0.9090553 0.9122911 #>  [200,] 0.36816787 0.5370509 0.5996214 0.6130515 0.7065292 0.7703608 0.7938257 #>  [201,] 0.63311158 0.7397344 0.7983179 0.8409059 0.8487797 0.8629053 0.8852884 #>  [202,] 0.35553709 0.3656315 0.3725824 0.4895812 0.4997822 0.5088901 0.5389288 #>  [203,] 0.65886490 0.7329002 0.7347903 0.7411261 0.7580537 0.8624063 0.8720974 #>  [204,] 0.55651070 0.5587885 0.5830566 0.5955075 0.6618140 0.7156208 0.7315282 #>  [205,] 1.12746773 1.1447031 1.1611430 1.2061711 1.2973666 1.2998117 1.4372318 #>  [206,] 1.04008113 1.0741286 1.0838163 1.0959222 1.1050789 1.1226859 1.1568236 #>  [207,] 0.21900050 0.2742296 0.3514434 0.4414084 0.4509631 0.4979605 0.4985219 #>  [208,] 0.21563769 0.3590978 0.3669434 0.3987107 0.4993616 0.5127696 0.5669487 #>  [209,] 0.55611113 0.5794918 0.7240616 0.7361423 0.8079934 0.8221198 0.8290688 #>  [210,] 0.20603309 0.2903457 0.3807584 0.3999190 0.4606817 0.4924360 0.5132561 #>  [211,] 0.35146422 0.4366775 0.4686757 0.4812793 0.5317383 0.5949025 0.6197411 #>  [212,] 0.41472370 0.5742801 0.6313599 0.6807774 0.6951039 0.7447867 0.7760244 #>  [213,] 0.24306608 0.2691089 0.4780553 0.5333403 0.5817011 0.6043088 0.6178096 #>  [214,] 0.34134019 0.5565621 0.5584969 0.6664560 0.6867161 0.8019273 0.8237250 #>  [215,] 0.46304774 0.7293677 0.7351532 0.7634713 0.8081023 0.8122335 0.8499778 #>  [216,] 0.40235927 0.4250036 0.5136656 0.5626172 0.5915929 0.5997113 0.6013005 #>  [217,] 0.36827211 0.4581167 0.5627529 0.6870920 0.6881646 0.7117143 0.7378429 #>  [218,] 0.33982358 0.5976765 0.7207886 0.7449855 0.8507334 0.9094096 0.9321405 #>  [219,] 0.73585058 0.9232594 0.9565458 1.0190818 1.0440702 1.0562080 1.0697942 #>  [220,] 0.55849685 0.5866862 0.6150630 0.6372357 0.6499334 0.6833969 0.6999140 #>  [221,] 0.63004997 0.6805731 0.7160076 0.7317062 0.7545404 0.7969842 0.7992506 #>  [222,] 0.44727767 0.5974994 0.7193678 0.7340550 0.7608659 0.7996507 0.7997487 #>  [223,] 0.90362672 0.9146832 0.9180192 0.9874210 0.9927248 1.0419432 1.1020623 #>  [224,] 0.46826716 0.6439832 0.7046757 0.7119260 0.7290976 0.7391057 0.7963469 #>  [225,] 0.49106116 0.5244854 0.6788071 0.7176650 0.7177654 0.7749013 0.7870105 #>  [226,] 0.32322310 0.3357362 0.4338062 0.6146114 0.6173491 0.6359929 0.6747795 #>  [227,] 0.28556909 0.4419782 0.4688051 0.4989591 0.5661041 0.5827281 0.6393244 #>  [228,] 0.43303596 0.5174087 0.5792943 0.5882164 0.6120067 0.6697537 0.6772856 #>  [229,] 0.24611185 0.3842782 0.3983348 0.4293245 0.4612341 0.4862838 0.5753730 #>  [230,] 0.39388994 0.4755652 0.5219131 0.5983490 0.6630029 0.6829525 0.6841384 #>  [231,] 0.30036760 0.3198414 0.3590978 0.4168866 0.4785825 0.4997144 0.5040527 #>  [232,] 0.30036760 0.3669434 0.3815305 0.5653624 0.5656248 0.5965183 0.5996629 #>  [233,] 0.50544474 0.5182948 0.5418878 0.5623380 0.5669282 0.5773719 0.5893375 #>  [234,] 0.31343717 0.4221985 0.5792943 0.6308612 0.6487788 0.6565327 0.6942257 #>  [235,] 0.32559725 0.4732668 0.6090162 0.6755251 0.7244467 0.7776300 0.8144492 #>  [236,] 0.42319471 0.4568666 0.5344793 0.5792409 0.5955864 0.6276450 0.6599847 #>  [237,] 0.46543336 0.4792014 0.5336176 0.5733939 0.5851822 0.6046285 0.6290967 #>  [238,] 0.42144588 0.5031239 0.6132328 0.6837926 0.7049319 0.7312486 0.7506026 #>  [239,] 0.46484263 0.5704845 0.7109351 0.7118330 0.7417987 0.7526987 0.7569339 #>  [240,] 1.09317617 1.1040206 1.1193103 1.2529562 1.2863927 1.2939069 1.3269674 #>  [241,] 0.69303540 0.8205277 0.9671439 0.9847831 1.0134838 1.0473081 1.1663187 #>  [242,] 0.78317649 0.8697816 0.8849601 0.9668492 1.0168150 1.0595519 1.1677669 #>  [243,] 0.35963054 0.3806475 0.3983348 0.4068962 0.4617965 0.4657141 0.5526758 #>  [244,] 1.26864772 1.6713056 1.7214903 1.7557255 1.7616370 1.7898021 1.8336938 #>  [245,] 0.23444596 0.2765470 0.2852333 0.2970063 0.4048737 0.4606817 0.4664689 #>  [246,] 0.47238131 0.4935583 0.5652610 0.6414176 0.6576266 0.6836239 0.8132373 #>  [247,] 0.78307298 0.8013535 0.8650611 0.8930465 0.9029668 0.9399767 0.9486970 #>  [248,] 0.51792634 0.6692384 0.7227889 0.7777086 0.7952843 0.8018866 0.9766410 #>  [249,] 0.31072384 0.3755687 0.4014202 0.4074870 0.4573402 0.5314506 0.5385851 #>  [250,] 0.36816787 0.4060399 0.5202421 0.5714498 0.5858707 0.5880933 0.5919036 #>  [251,] 0.60180716 0.6018285 0.9662172 0.9774597 0.9816729 1.0145107 1.0180882 #>  [252,] 0.43980417 0.4874431 0.5197226 0.6150630 0.6634790 0.6664560 0.7864254 #>  [253,] 0.44190042 0.4631435 0.5505767 0.5886008 0.6377367 0.6873164 0.7012542 #>  [254,] 0.39100186 0.7409369 0.7806299 0.8388192 0.9217313 0.9222943 0.9345085 #>  [255,] 0.34632790 0.3812432 0.5636713 0.6431622 0.6769138 0.6824575 0.6911725 #>  [256,] 0.54436133 0.5948165 0.7289802 0.7301984 0.7438620 0.7875841 0.7967487 #>  [257,] 0.57458790 0.5926552 0.6283424 0.6438393 0.6785323 0.6825467 0.7500568 #>  [258,] 1.27783404 1.2900982 1.2950464 1.4985037 1.5286311 1.5460156 1.5713194 #>  [259,] 0.21900050 0.3075903 0.3096341 0.3999190 0.4035350 0.4148944 0.4527564 #>  [260,] 0.40353499 0.4664689 0.4852165 0.4871731 0.4873610 0.4924360 0.5023658 #>  [261,] 0.41794591 0.5664209 0.5781964 0.5864097 0.6685038 0.6909388 0.8368906 #>  [262,] 0.48463135 0.6728008 0.8050962 0.8370144 0.8376331 0.8393648 0.8598953 #>  [263,] 0.32319175 0.4870720 0.4978386 0.5671789 0.6692245 0.6793512 0.6843618 #>  [264,] 0.19424836 0.2040277 0.4992867 0.5313602 0.6055320 0.6362094 0.6543068 #>  [265,] 0.36833863 0.4654334 0.5017085 0.5656454 0.6003747 0.6170498 0.6251389 #>  [266,] 0.58386724 0.6659381 0.6715358 0.6811196 0.6829526 0.7913083 0.8226197 #>  [267,] 0.53151133 0.5787218 0.6020524 0.6985332 0.7286656 0.7835030 0.7867163 #>  [268,] 0.64847362 0.6573676 0.6659433 0.7604574 0.7968490 0.8643554 0.9069869 #>  [269,] 0.49223996 0.5229711 0.5686139 0.6100679 0.6674642 0.6830877 0.6999881 #>  [270,] 0.47282196 0.5868136 0.8988946 0.9045820 0.9142488 0.9619491 0.9636785 #>  [271,] 0.56905828 0.7277196 0.7705092 0.8684019 0.8710113 0.8973821 0.8976672 #>  [272,] 0.32987731 0.5085852 0.6028978 0.6044766 0.6056317 0.7368727 0.7378429 #>  [273,] 0.57827386 0.6399215 0.6848409 0.7001828 0.7300695 0.7999589 0.8096686 #>  [274,] 0.38353125 0.4820388 0.5002889 0.5103997 0.5439551 0.5473826 0.5618381 #>  [275,] 0.31634825 0.3453730 0.4488479 0.4783741 0.5086319 0.5134158 0.6014621 #>  [276,] 0.42046922 0.4730321 0.6023254 0.6381665 0.6473181 0.6619429 0.6708163 #>  [277,] 0.75559906 0.8434938 0.9864432 1.0654337 1.0883128 1.1004546 1.1442323 #>  [278,] 0.23177341 0.3876206 0.4300517 0.4489872 0.4615879 0.4619930 0.5083644 #>  [279,] 0.17043615 0.6115139 0.6144349 0.7220758 0.7441820 0.9432558 0.9551188 #>  [280,] 0.31136211 0.4758183 0.5105971 0.5345327 0.6773536 0.7440504 0.7614294 #>  [281,] 1.28735206 1.4495158 1.5862658 1.5876154 1.6128527 1.6299672 1.6443932 #>  [282,] 0.29261567 0.4436452 0.5262098 0.5505027 0.5601840 0.5625149 0.5846818 #>  [283,] 0.24270294 0.3663440 0.3688916 0.6605804 0.6611236 0.8047881 0.8244194 #>  [284,] 0.34324427 0.3852723 0.4807027 0.5292069 0.5543009 0.5608770 0.5657912 #>  [285,] 0.62918180 1.0125592 1.1663187 1.2016624 1.2094716 1.2117365 1.2418795 #>  [286,] 0.29686347 0.5360774 0.7940312 0.8762371 0.9201335 0.9503676 0.9619168 #>  [287,] 0.40142020 0.4634532 0.4824160 0.5110722 0.5282545 0.6008158 0.6378858 #>  [288,] 0.53401809 0.6609695 0.7889064 0.7917791 0.8890348 0.8939098 0.9408754 #>  [289,] 0.38448622 0.4870720 0.5550794 0.5776140 0.5852819 0.5914036 0.6358499 #>  [290,] 0.21279658 0.3871573 0.4590166 0.5166758 0.5296416 0.5533188 0.5543009 #>  [291,] 0.35604642 0.5907578 0.6481719 0.6609695 0.7840776 0.8362565 0.8475800 #>  [292,] 0.32558630 0.4674089 0.5277063 0.5832308 0.6203573 0.6430868 0.6531550 #>  [293,] 0.58301167 0.6375903 0.6964726 0.7071698 0.7245649 0.7315685 0.7625511 #>  [294,] 0.27397800 0.4990195 0.5213306 0.5736358 0.5985232 0.6072090 0.6459071 #>  [295,] 0.09113993 0.3491467 0.6358499 0.6807774 0.6979795 0.7459699 0.7863417 #>  [296,] 0.64120027 0.8388852 0.8525389 0.9818075 1.0069490 1.0293006 1.0614266 #>  [297,] 0.46566207 0.5201454 0.5636713 0.5652610 0.6131437 0.6701657 0.6707414 #>  [298,] 0.57944873 0.5921952 0.6205306 0.6440024 0.6743616 0.6780611 0.7077063 #>  [299,] 0.35056102 0.4323315 0.5741677 0.6964146 0.7629855 0.7754890 0.8597179 #>  [300,] 0.59295405 0.6744941 0.6985332 0.6999140 0.7287384 0.7367904 0.7500358 #>  [301,] 0.58706661 0.5951729 0.6874442 0.7326062 0.7522365 0.8230275 0.8272819 #>  [302,] 0.36175024 0.4209899 0.4813064 0.5223277 0.5475791 0.6160059 0.6233547 #>  [303,] 0.63812120 0.6595335 0.6641357 0.7310347 0.7366293 0.7377899 0.7552492 #>  [304,] 0.28967890 0.4755652 0.5373530 0.6050027 0.7367644 0.7569945 0.7634534 #>  [305,] 0.39860107 0.5109188 0.5967728 0.6581444 0.6616765 0.6637005 0.6784733 #>  [306,] 0.35967592 0.3691845 0.3996389 0.4213417 0.5454917 0.5615328 0.5832308 #>  [307,] 0.39541408 0.5084299 0.5127088 0.5249234 0.5292019 0.5643657 0.5927760 #>  [308,] 0.72699233 1.0108327 1.0447182 1.0627107 1.1576053 1.1857721 1.2353420 #>  [309,] 0.72936937 0.7679370 0.8357712 0.9106449 0.9236965 1.0219507 1.0300689 #>  [310,] 0.38622987 0.4114420 0.4536031 0.5582578 0.6083764 0.6128921 0.6449446 #>  [311,] 0.22968159 0.3896564 0.4692602 0.5056829 0.6336309 0.6535046 0.6674393 #>  [312,] 0.49782138 0.6603331 0.6654162 0.6993385 0.7263683 0.7397532 0.7719971 #>  [313,] 0.94691536 1.0304489 1.2154122 1.2366640 1.2861856 1.3044798 1.3060265 #>  [314,] 0.34277683 0.5761198 0.5915459 0.5993767 0.6146927 0.6753620 0.7003972 #>  [315,] 0.50998616 0.5479445 0.6304955 0.7377899 0.7726233 0.8401201 0.8418575 #>  [316,] 0.35402695 0.4413732 0.4589638 0.4667636 0.5178635 0.5726849 0.6361679 #>  [317,] 0.54679682 1.1183533 1.1625312 1.2716053 1.2726941 1.2864367 1.3436808 #>  [318,] 0.78307298 0.8124752 0.8480663 0.8515825 0.8729608 0.9198239 1.0690410 #>  [319,] 0.30066148 0.4654537 0.4985146 0.5389288 0.5498350 0.5507061 0.6302704 #>  [320,] 0.31021064 0.3132308 0.4101772 0.4694301 0.4810949 0.5101946 0.5164189 #>  [321,] 0.75567952 0.7687906 0.8486365 0.8781762 0.8926911 0.9084179 0.9230808 #>  [322,] 0.34928645 0.3637145 0.3923042 0.4792014 0.5017085 0.5937359 0.6005207 #>  [323,] 0.58015850 0.6230936 0.6470833 0.7195649 0.7420902 0.7616721 0.7977826 #>  [324,] 0.79251236 0.9054818 0.9668903 1.0041571 1.0512183 1.1058004 1.1671591 #>  [325,] 0.60182850 0.9306545 0.9786673 1.0296871 1.0457754 1.1541700 1.2631363 #>  [326,] 0.64957283 0.7590596 0.7749350 0.7850495 0.7871844 0.7927290 0.8156598 #>  [327,] 0.42672090 0.5879220 0.6760600 0.6836464 0.6876713 0.7225715 0.7573887 #>  [328,] 0.91433588 0.9158306 0.9784031 1.2583021 1.2764300 1.3413194 1.5356199 #>  [329,] 1.01843729 1.2450534 1.4353399 1.4878778 1.4932276 1.5408669 1.5720413 #>  [330,] 0.53075473 0.5583400 0.6635461 0.8393648 0.8629734 0.9292874 0.9293687 #>  [331,] 0.26707323 0.2953271 0.3320452 0.4213417 0.4737726 0.4925101 0.5484479 #>  [332,] 0.28263796 0.4708422 0.5357388 0.5955864 0.6937404 0.7394286 0.7719971 #>  [333,] 0.30066148 0.4250036 0.4539085 0.4947684 0.4997310 0.5221296 0.5411184 #>  [334,] 0.60462854 0.6625574 0.6892968 0.7561637 0.7664300 0.7800571 0.7937415 #>  [335,] 0.35753455 0.3898205 0.4122781 0.4397189 0.4454174 0.4694301 0.5457032 #>  [336,] 0.71541443 0.7496531 0.7674448 0.7797565 0.8114114 0.8249625 0.8688823 #>  [337,] 0.44798338 0.4910612 0.5965018 0.6305607 0.8125750 0.8208785 0.8604156 #>  [338,] 0.59733251 0.6119211 0.7441820 0.7640671 0.8495275 0.9484934 0.9795572 #>  [339,] 0.34767639 0.4231106 0.7018844 0.7598041 1.1616720 1.1800716 1.1930159 #>  [340,] 0.25283902 0.5982736 0.6251264 0.6512282 0.6701734 0.6992505 0.8306882 #>  [341,] 0.62170404 0.7770250 0.8326278 0.8458111 0.9135953 1.0200667 1.0227937 #>  [342,] 0.33306395 0.4476540 0.4836014 0.5161005 0.5396148 0.5397691 0.5607260 #>  [343,] 0.51756753 0.5550128 0.6301777 0.7850495 0.7903039 0.8444186 0.8738890 #>  [344,] 0.46604194 0.6543357 0.6882759 0.7544034 0.8082659 0.8203685 0.8405639 #>  [345,] 2.08627568 2.2164901 2.3605552 2.4335841 2.4893736 2.7627295 2.8010679 #>  [346,] 0.13034995 0.4238135 0.4250519 0.4266499 0.5022303 0.5382494 0.5479820 #>  [347,] 0.34099743 0.4887354 0.5830566 0.6372778 0.6603331 0.6619228 0.6842989 #>  [348,] 0.51517039 0.5962294 0.6121996 0.6451439 0.6529798 0.6540016 0.6602214 #>  [349,] 0.26748597 0.4683940 0.5793739 0.6053595 0.6260703 0.6309714 0.6394856 #>  [350,] 0.76858466 1.1761635 1.2582593 1.2940643 1.5105286 1.6101623 1.6421377 #>  [351,] 0.76916011 0.7860783 0.7977826 0.8974579 0.9256936 0.9290629 0.9301239 #>  [352,] 0.52825894 0.5441858 0.5634698 0.5812371 0.6239770 0.6274126 0.6737094 #>  [353,] 0.58578655 0.7566644 0.7721850 0.7867631 0.7960317 0.8069427 0.8407096 #>  [354,] 0.58458911 0.6064475 0.7186929 0.7366293 0.8120694 0.8515900 0.9056615 #>  [355,] 0.52335784 0.5589289 0.5656257 0.5669487 0.5721419 0.5722827 0.6008707 #>  [356,] 0.34534255 0.4616561 0.5112414 0.5470238 0.5596469 0.5750012 0.5792409 #>  [357,] 0.43156060 0.4582670 0.5476464 0.5485833 0.5877672 0.6220212 0.6434446 #>  [358,] 0.73220521 0.8099764 0.8445454 0.9186037 0.9566207 0.9656704 1.0108327 #>  [359,] 0.31343717 0.5510211 0.6036509 0.6120067 0.6209275 0.6326844 0.6540326 #>  [360,] 0.36655786 0.3690922 0.5734929 0.5834994 0.5864097 0.6540622 0.7491659 #>  [361,] 0.76858466 1.0874815 1.1149484 1.1430548 1.2046681 1.2715879 1.2920916 #>  [362,] 0.19062462 0.3839844 0.4583266 0.4943451 0.5136656 0.5699897 0.5736296 #>  [363,] 0.28951401 0.4910873 0.6248821 0.6611893 0.6696607 0.7183489 0.7233776 #>  [364,] 0.42181553 0.4877192 0.5912459 0.6743616 0.7056267 0.7461754 0.8017895 #>  [365,] 0.76086589 0.7760302 0.8728537 0.9342568 0.9361687 0.9381583 0.9653260 #>  [366,] 0.13034995 0.3167348 0.3422170 0.3889990 0.4509631 0.4680016 0.4929429 #>  [367,] 0.57134342 0.7193678 0.8413470 0.8535926 0.8536220 0.8554087 0.8668236 #>  [368,] 0.63441274 0.6715617 0.8162489 1.0910088 1.1201771 1.1260417 1.1408357 #>  [369,] 0.48692180 0.5494740 0.5578253 0.7312511 0.8092917 0.8365102 0.8545020 #>  [370,] 0.30834417 0.3717870 0.5505670 0.5663475 0.5913376 0.6025436 0.6040373 #>  [371,] 0.37423009 0.4064087 0.5369217 0.5752935 0.6668281 0.7664228 0.7809228 #>  [372,] 0.54015491 0.5936938 0.6481829 0.6765533 0.7104502 0.8064179 0.8720588 #>  [373,] 0.43896058 0.4437918 0.4920131 0.5450710 0.5919320 0.6239316 0.6245348 #>  [374,] 0.44397251 0.5654979 0.6834941 0.6972669 0.7510266 0.7524010 0.7836004 #>  [375,] 0.66760280 0.7469794 0.9887768 1.0101594 1.1013004 1.1914199 1.2538680 #>  [376,] 0.59437982 0.6026883 0.6497441 0.6697146 0.6745087 0.7748304 0.7891744 #>  [377,] 0.66407082 0.7500568 0.7535016 0.8290688 0.8438541 0.9890276 1.0188957 #>  [378,] 0.41627299 0.5488501 0.6116729 0.6436547 0.6610865 0.6855123 0.7180888 #>  [379,] 0.69345760 0.7210034 0.8104446 0.8915143 0.9844797 1.0110316 1.0172064 #>  [380,] 0.76087780 0.8230186 0.9407532 0.9450609 0.9547859 0.9661827 0.9709767 #>  [381,] 0.40603994 0.5180424 0.5222549 0.5370509 0.5608112 0.5768237 0.5923872 #>  [382,] 0.73832735 1.0173604 1.1611430 1.1846141 1.1984804 1.2295837 1.2735942 #>  [383,] 0.53100533 0.5449393 0.5474227 0.5828232 0.5858707 0.6840361 0.6868059 #>  [384,] 0.57134342 0.5851683 0.6375299 0.6651148 0.6688456 0.6987302 0.6993011 #>  [385,] 0.27373125 0.2955083 0.5659957 0.6637059 0.6880188 0.6971506 0.7213557 #>  [386,] 0.24808700 0.3510083 0.3794034 0.3877919 0.4058981 0.4412515 0.4755460 #>  [387,] 0.43967830 0.4726402 0.4932683 0.5055582 0.5679693 0.5897617 0.6561252 #>  [388,] 0.84819084 1.1595079 1.1723107 1.1948092 1.2608081 1.2782794 1.2918580 #>  [389,] 0.32217673 0.3829084 0.4074870 0.4187954 0.4443748 0.4634532 0.4686448 #>  [390,] 0.52825894 0.5631576 0.6271125 0.6557014 0.6611893 0.6657764 0.6932175 #>  [391,] 0.45811669 0.5054670 0.5085852 0.6096429 0.6646026 0.7051882 0.7080762 #>  [392,] 0.46826716 0.6150778 0.6268764 0.6573377 0.7076093 0.8563626 0.9239508 #>  [393,] 0.95746914 1.0086629 1.0406724 1.0532450 1.1052959 1.1057283 1.1518480 #>  [394,] 0.29341112 0.4992867 0.5268116 0.5280320 0.5652156 0.5715258 0.6271125 #>  [395,] 0.22968159 0.3101792 0.3454661 0.5909986 0.5927128 0.6689339 0.6976758 #>  [396,] 0.36120649 0.4103122 0.6250605 0.6992505 0.7602595 0.8301865 0.8850193 #>  [397,] 0.28967890 0.3938899 0.7029221 0.7187057 0.7722017 0.8253453 0.8307571 #>  [398,] 0.75147404 0.7849116 0.9170330 0.9208913 0.9440306 0.9802764 0.9832832 #>  [399,] 0.24282195 0.5745879 0.6237231 0.7167928 0.7501435 0.7539793 0.7585124 #>  [400,] 0.44085544 0.6105890 0.6449463 0.6787343 0.7155752 0.7958527 0.8565443 #>  [401,] 0.33143558 0.3987107 0.4398471 0.4584524 0.4812428 0.5219024 0.5589289 #>  [402,] 0.33082271 0.5502972 0.6431622 0.6637005 0.6701657 0.6755251 0.7168742 #>  [403,] 0.56642090 0.6540622 0.8223332 0.8576855 0.8731733 0.8882479 0.9480153 #>  [404,] 0.26714363 0.3198414 0.4024143 0.4422043 0.5714739 0.5722827 0.5828092 #>  [405,] 0.30823539 0.4929429 0.5151064 0.5155247 0.5171986 0.5267013 0.5308653 #>  [406,] 0.38527232 0.4324372 0.4494279 0.4531303 0.4787794 0.4858446 0.4919623 #>  [407,] 0.27383529 0.2797752 0.3163482 0.4943825 0.5064923 0.5986820 0.6116729 #>  [408,] 0.38240555 0.8434938 0.8584295 0.8924923 0.9832103 1.1613203 1.2121301 #>  [409,] 0.57819639 0.6505936 0.8731733 0.9346957 0.9573444 1.0097077 1.0714018 #>  [410,] 0.52591639 0.6012587 0.7080196 0.7624489 0.7958698 0.8552217 0.8827765 #>  [411,] 0.36827211 0.4711137 0.4719894 0.4929756 0.6203573 0.6707708 0.6902118 #>  [412,] 0.23216678 0.3232231 0.3311819 0.5213843 0.5366771 0.5760775 0.5889128 #>  [413,] 0.58976169 0.6202265 0.6450097 0.6692384 0.6843983 0.7223482 0.7326062 #>  [414,] 0.24263568 0.4612341 0.4657141 0.4723813 0.5201454 0.6181234 0.6518934 #>  [415,] 0.36476374 0.5452436 0.5489041 0.6107487 0.6231284 0.6486865 0.6606610 #>  [416,] 0.60728448 0.6157924 0.6258618 0.7511654 0.7687882 0.7726233 0.7889009 #>  [417,] 0.26910893 0.3252515 0.4800824 0.5574661 0.5587419 0.5779394 0.5942108 #>  [418,] 1.12512471 1.3314374 1.4135245 1.4562553 1.5906817 1.6334235 1.6924701 #>  [419,] 0.62786122 0.6749549 0.6909721 0.7614294 0.7672396 0.8301462 0.8979768 #>  [420,] 0.22112194 0.3691845 0.5145285 0.5252724 0.5844169 0.6151094 0.6728585 #>  [421,] 0.27916247 0.4592070 0.4632790 0.4938952 0.5738974 0.5998774 0.6008497 #>  [422,] 0.50152971 0.5310501 0.5585375 0.6059301 0.6115119 0.6137666 0.6637059 #>  [423,] 0.53080944 0.5963091 0.6491302 0.6666116 0.6843983 0.6985799 0.7032316 #>  [424,] 0.27654704 0.2951427 0.3070175 0.3842054 0.4358474 0.4817677 0.4873610 #>  [425,] 0.97840314 1.7536070 1.8131297 2.0017496 2.1434535 2.1819352 2.2393017 #>  [426,] 0.36634397 0.4353989 0.4994289 0.5350266 0.7159151 0.7472615 0.7556795 #>  [427,] 0.70836509 1.0437403 1.1130162 1.2179101 1.2229333 1.3177732 1.3912272 #>  [428,] 0.55813831 0.5829462 0.5906029 0.6822739 0.7171960 0.8027568 0.8069427 #>  [429,] 0.40100564 0.4380599 0.4580945 0.4843531 0.5109188 0.5388405 0.5403259 #>  [430,] 0.57831635 0.5799145 0.6269897 0.6892983 0.6985799 0.7360508 0.7376631 #>  [431,] 0.44682494 0.4837806 0.5786943 0.6870117 0.7904464 0.8035448 0.8086243 #>  [432,] 0.38781056 0.4518521 0.5390001 0.5638302 0.6139850 0.6920587 0.7199420 #>  [433,] 0.47805534 0.5401356 0.5505767 0.5521143 0.5617291 0.6032702 0.6186321 #>  [434,] 0.64271917 0.7210034 0.7781986 0.8294768 0.8347201 0.9185371 0.9272091 #>  [435,] 0.78213116 0.8018866 0.8228872 0.8803566 1.0575084 1.0734745 1.0943855 #>  [436,] 0.42797926 0.5164301 0.5924125 0.6018320 0.6691727 0.6717369 0.6841384 #>  [437,] 0.46247887 0.5067058 0.6335023 0.6481829 0.6948617 0.7102101 0.7358506 #>  [438,] 0.21124475 0.8079009 0.8139015 0.8850193 0.9155204 0.9589698 1.0491241 #>  [439,] 0.25940823 0.3564569 0.3725663 0.3965755 0.4547488 0.4755460 0.4823437 #>  [440,] 0.40146034 0.5058961 0.5291942 0.5949664 0.6414176 0.6517776 0.6678141 #>  [441,] 0.43381139 0.5162549 0.5867573 0.6451439 0.6698491 0.6805422 0.7958064 #>  [442,] 0.27226466 0.7965124 0.8139015 0.9680754 1.0481851 1.0729468 1.1314613 #>  [443,] 0.67495487 0.6964098 0.7077063 0.7435339 0.8941679 0.9820487 0.9932132 #>  [444,] 0.42672090 0.4742585 0.6577665 0.6621273 0.7176650 0.7227302 0.7306703 #>  [445,] 0.27374113 0.3398920 0.4336246 0.4878851 0.5836934 0.7156208 0.7161151 #>  [446,] 0.49775036 0.5057079 0.5317534 0.6670638 0.6812482 0.7011247 0.7810805 #>  [447,] 0.19979753 0.4336246 0.5156453 0.5955075 0.6469255 0.6540243 0.6858037 #>  [448,] 0.57611984 0.6540326 0.6697537 0.7188448 0.7964828 0.8270086 0.8270891 #>  [449,] 0.35402695 0.5317214 0.5661899 0.6237384 0.6483689 0.6932376 0.7014995 #>  [450,] 0.37853720 0.5857865 0.6541418 0.6932700 0.7015655 0.7664324 0.7808781 #>  [451,] 0.49137345 0.6440024 0.6964098 0.7731717 0.8979768 0.9132668 0.9222713 #>  [452,] 0.34099743 0.3787914 0.6033274 0.6649191 0.6806684 0.7186290 0.8443421 #>  [453,] 0.32777468 0.4084296 0.5964598 0.6985484 0.7299506 0.7334949 0.7418415 #>  [454,] 0.24444572 0.2539434 0.3194772 0.3515583 0.4927501 0.5041885 0.5241539 #>  [455,] 0.55947715 0.6226706 0.7406254 0.7418054 0.8031751 0.8122835 0.8346231 #>  [456,] 0.57189888 0.7630114 0.7777086 0.8392729 0.8726374 0.9481810 0.9678224 #>  [457,] 0.41927666 0.4611625 0.6163551 0.6427449 0.6779266 0.6880188 0.7513486 #>  [458,] 0.39230424 0.5280235 0.5472313 0.5493735 0.6251389 0.6625574 0.6653248 #>  [459,] 0.77560656 0.9673221 1.3283529 1.4040438 1.4118502 1.4425507 1.4774432 #>  [460,] 0.61725469 0.7662297 0.7672396 0.7733261 0.7887943 0.8812575 0.9060264 #>  [461,] 0.43303596 0.5888637 0.7407218 0.8279811 0.8655723 0.8826947 0.9146768 #>  [462,] 0.42912632 0.4845361 0.6626579 0.6728326 0.6761037 0.6790748 0.7104630 #>  [463,] 0.41043967 0.4491331 0.4698574 0.5527091 0.5605946 0.5686139 0.5844173 #>  [464,] 0.72699233 0.8099764 0.9777157 1.2406322 1.2518960 1.3226513 1.3457507 #>  [465,] 0.57028752 0.5922631 0.7839516 0.7948862 0.7992506 0.8687603 0.9287249 #>  [466,] 0.52735350 0.5742801 0.5845891 0.6067881 0.6068605 0.6641357 0.6670932 #>  [467,] 0.28297282 0.4491331 0.4689097 0.6411230 0.6674642 0.6797679 0.6916542 #>  [468,] 0.20624216 0.5091761 0.5980774 0.6159974 0.6453148 0.6593648 0.7085769 #>  [469,] 1.19141986 1.5441863 1.5456936 1.7348901 1.8111149 1.8559001 1.9191438 #>  [470,] 1.41774477 1.4487873 1.4903795 1.6992258 1.7577959 1.7602376 1.8522810 #>  [471,] 0.29797572 0.4299281 0.5242352 0.5578253 0.6776225 0.7056283 0.7425035 #>  [472,] 0.38302962 0.5127490 0.5259164 0.5390705 0.6286051 0.6704237 0.7531162 #>  [473,] 0.50312387 0.5099862 0.6608039 0.7022452 0.7096227 0.7186290 0.7293509 #>  [474,] 0.32559725 0.3713169 0.7130241 0.7659304 0.7700191 0.7789670 0.7808682 #>  [475,] 0.66621597 0.7830272 0.7831751 0.8182106 0.8966966 0.9351781 0.9509069 #>  [476,] 0.31706208 0.4752431 0.5834994 0.6357454 0.6537978 0.6696843 0.7443812 #>  [477,] 0.63307436 0.8746795 0.9048494 1.0334246 1.0734693 1.0859972 1.1214003 #>  [478,] 0.24835875 0.2855691 0.4485579 0.5506574 0.5675909 0.5897147 0.5921158 #>  [479,] 0.67299483 0.6867017 0.6929659 0.7637374 0.8307571 0.8561672 0.8700257 #>  [480,] 0.35784179 0.5513518 0.5670087 0.7056283 0.7706672 0.8031751 0.8092917 #>  [481,] 0.48744310 0.5588898 0.5712633 0.5887559 0.6020757 0.6867161 0.6954605 #>  [482,] 0.64034442 0.7109808 0.7513486 0.7552150 0.7938263 0.8022374 0.9097428 #>  [483,] 0.65673910 0.6934576 0.7347903 0.7368107 0.7609579 0.8347201 0.8816674 #>  [484,] 0.46758775 0.5681887 0.5852819 0.6067881 0.6260452 0.6605836 0.6614731 #>  [485,] 0.47111371 0.4812793 0.4850204 0.5201222 0.5477646 0.5577346 0.5793739 #>  [486,] 0.43144845 0.4391736 0.5432727 0.5923682 0.6461551 0.6766045 0.7690241 #>  [487,] 0.37879138 0.4887354 0.5135662 0.7270004 0.7552587 0.7578103 0.8245740 #>  [488,] 0.31421513 0.4441723 0.4573402 0.4961898 0.5060788 0.5282545 0.5339018 #>  [489,] 0.65656076 0.7463260 0.7929313 0.8194621 0.9020570 0.9177525 0.9422374 #>  [490,] 0.30104083 0.3744047 0.4592138 0.5041361 0.5161984 0.5169359 0.5456778 #>  [491,] 0.96364754 1.1528099 1.1904007 1.2277327 1.2608628 1.3413665 1.3659466 #>  [492,] 0.27801534 0.4372083 0.4698574 0.5177640 0.5229711 0.5237595 0.6135268 #>  [493,] 0.49796048 0.5036863 0.5219024 0.5233578 0.5272305 0.5284553 0.5654223 #>  [494,] 0.98742099 1.0437403 1.2940643 1.3715098 1.3899578 1.3997916 1.4121160 #>  [495,] 0.44397251 0.7141122 0.7220758 0.7276547 0.7367931 0.7933537 0.7945902 #>  [496,] 0.78865536 0.8210686 0.8651220 0.8884697 0.9370270 1.0128090 1.0499836 #>  [497,] 0.44065919 0.4790116 0.4853619 0.5303881 0.5448443 0.6220982 0.6282401 #>  [498,] 0.34765312 0.4310536 0.5417388 0.5560209 0.5638302 0.5759559 0.5821031 #>  [499,] 0.62476464 0.6853526 0.7231728 0.7364530 0.7754434 0.7937415 0.8122482 #>  [500,] 0.86382960 0.9100916 0.9574691 0.9589698 0.9872226 1.0080292 1.0085337 #>  [501,] 0.44876414 0.5102163 0.5347131 0.5379716 0.5645399 0.5704845 0.6053305 #>  [502,] 0.41627299 0.6481719 0.6935705 0.6963693 0.6982418 0.7340551 0.7619814 #>  [503,] 0.32777468 0.4800625 0.6171153 0.6411230 0.6927322 0.7000504 0.7321665 #>  [504,] 0.35071989 0.3780109 0.4437918 0.5414338 0.6048693 0.6083764 0.6248821 #>  [505,] 0.33721916 0.4024143 0.4997144 0.5299611 0.5741004 0.6124989 0.6187411 #>  [506,] 0.29866995 0.5794222 0.6637734 0.6932376 0.7236006 0.7750488 0.7979371 #>  [507,] 0.21629621 0.2649746 0.3422170 0.3558626 0.4238135 0.4414084 0.4454174 #>  [508,] 0.28263796 0.4568666 0.4619486 0.7048069 0.7134353 0.7177440 0.7321665 #>  [509,] 0.48137672 0.4824022 0.5419171 0.5632433 0.5882164 0.5888637 0.6137666 #>  [510,] 0.46565599 0.4783741 0.5334498 0.5335707 0.6197868 0.6302965 0.6626189 #>  [511,] 1.08972495 1.4503325 1.4872049 1.6333087 1.6377813 1.6615663 1.6656201 #>  [512,] 0.40062803 0.7811736 0.9422343 0.9619867 0.9771794 0.9813070 1.0157656 #>  [513,] 0.24363560 0.7233368 0.9136292 0.9197246 0.9389733 0.9935159 1.0471151 #>  [514,] 0.57508362 0.8877721 0.9844797 1.0681754 1.0911114 1.1350714 1.1527929 #>  [515,] 0.33573616 0.5134158 0.5348730 0.5760775 0.6140883 0.6615503 0.6626189 #>  [516,] 1.34136645 1.3838227 1.4342775 1.4943989 1.5133858 1.5837403 1.6842036 #>  [517,] 0.31680663 0.5132193 0.5207735 0.5239781 0.5288084 0.6530337 0.6701734 #>  [518,] 0.33083441 0.3806689 0.4182686 0.4632790 0.5653137 0.6036509 0.6394856 #>  [519,] 0.31747977 0.4444787 0.4536031 0.6238292 0.6440949 0.6693203 0.6872239 #>  [520,] 0.63307436 0.6750776 0.6964146 0.7806849 0.7888541 0.9482153 0.9678648 #>  [521,] 0.43546948 0.4618722 0.4630477 0.4719894 0.6224500 0.6884615 0.7096870 #>  [522,] 0.27135405 0.4652345 0.4995554 0.5058957 0.5669282 0.6064614 0.6081116 #>  [523,] 0.24306608 0.3252515 0.4779854 0.5131453 0.5564435 0.5580321 0.5617291 #>  [524,] 0.40842964 0.4800625 0.5511625 0.5870548 0.6589856 0.6864307 0.7071698 #>  [525,] 0.86978163 1.0184373 1.2608628 1.2638072 1.3526222 1.4484502 1.4599987 #>  [526,] 0.23216678 0.3463831 0.4338062 0.4473128 0.6140883 0.6430809 0.6863041 #>  [527,] 0.73832735 1.0898115 1.1625550 1.2302076 1.2953288 1.3461254 1.3687894 #>  [528,] 0.64120027 0.7090600 0.7290976 0.8012898 0.8137912 0.8145357 0.8163358 #>  [529,] 0.31341527 0.3253701 0.5315113 0.5945311 0.6297303 0.6668281 0.7500358 #>  [530,] 1.14549023 1.2158055 1.3127295 1.4186153 1.4811360 1.5310853 1.5420888 #>  [531,] 0.39980361 0.4032872 0.4148328 0.4161305 0.4579549 0.5164189 0.5330906 #>  [532,] 0.37766750 0.4218155 0.5093474 0.6618992 0.6812482 0.6834770 0.6870574 #>  [533,] 0.27422963 0.3075903 0.3558626 0.3898205 0.4871731 0.5087696 0.5242883 #>  [534,] 0.38302962 0.5250651 0.5477875 0.6636078 0.7090112 0.7146490 0.7397532 #>  [535,] 1.12806137 1.1348424 1.1938812 1.4175963 1.5498325 1.5511832 1.6104801 #>  [536,] 0.41300116 0.5232306 0.5273535 0.5511625 0.5844169 0.6403226 0.6632456 #>  [537,] 0.48435314 0.5178139 0.5347131 0.5489041 0.5685398 0.5879447 0.6548786 #>  [538,] 0.49628373 0.5831077 0.6269285 0.6550708 0.6605836 0.6656679 0.6692245 #>  [539,] 0.35792720 0.6560213 0.7569771 0.7602595 0.7759812 0.7785397 0.8970102 #>  [540,] 0.76904320 1.4661106 1.4702632 1.4773048 1.5262415 1.5297211 1.5432717 #>  [541,] 0.44133972 0.5291942 0.6068363 0.6208701 0.7134594 0.7263323 0.7303278 #>  [542,] 0.62170404 0.6256440 0.6446191 0.7070516 0.7112517 0.7289212 0.7560268 #>  [543,] 0.24363560 0.6583989 0.8760443 0.8771099 0.8894776 0.8955944 0.9222511 #>  [544,] 0.65932573 0.8223836 0.8684019 0.8693571 0.8740993 0.8921200 0.9172862 #>  [545,] 0.71813707 0.8264940 0.9067110 1.0099780 1.1022822 1.2036360 1.2095566 #>  [546,] 0.21629621 0.3009462 0.3167348 0.4250519 0.4616561 0.5050785 0.5242883 #>  [547,] 0.45699431 0.4590581 0.5355108 0.5476464 0.5826571 0.6701486 0.6719392 #>  [548,] 0.35963054 0.5976765 0.6206061 0.6336101 0.6707414 0.6790821 0.6824575 #>  [549,] 0.58301167 0.5851683 0.6196863 0.6228291 0.6402223 0.6417850 0.6535752 #>  [550,] 0.27135405 0.4842020 0.4882325 0.5237595 0.5327186 0.5418878 0.5643148 #>  [551,] 0.80281248 0.8087226 0.9071681 0.9365881 0.9549767 0.9721787 1.0265847 #>  [552,] 0.71862846 0.7597058 0.8234266 0.8728537 0.9222713 0.9789055 1.0440381 #>  [553,] 0.45094915 0.8421501 0.8582952 0.8886290 0.9141369 0.9763113 0.9821884 #>  [554,] 0.13934368 0.2428452 0.3342411 0.3651141 0.3679166 0.3829084 0.4805272 #>  [555,] 0.27237342 0.4441723 0.5132193 0.5338823 0.6621273 0.6778590 0.6797562 #>  [556,] 0.34658311 0.3844862 0.5832709 0.6088823 0.6749278 0.6793633 0.6951039 #>  [557,] 0.39100186 0.8816674 0.9568694 0.9716891 1.0118846 1.0173781 1.0519565 #>  [558,] 0.31072384 0.4064494 0.4824160 0.4943451 0.4961898 0.5423066 0.5552995 #>  [559,] 0.36175024 0.4205963 0.4667636 0.5322349 0.5562671 0.5765295 0.5846818 #>  [560,] 0.37049110 0.7604475 0.7650716 0.8009941 0.8012898 0.8748209 0.8785264 #>  [561,] 0.21399890 0.5146832 0.5962294 0.6301110 0.6329947 0.6412104 0.6431744 #>  [562,] 0.33083441 0.4327513 0.4589491 0.5305996 0.5625505 0.6008497 0.6177383 #>  [563,] 0.39939033 0.5776140 0.6556661 0.6749278 0.6872535 0.7165905 0.7329333 #>  [564,] 0.54723126 0.5513452 0.6829526 0.7028998 0.7263323 0.7384764 0.7391128 #>  [565,] 0.50873514 0.5717532 0.6554691 0.6807494 0.6955825 0.7046757 0.7062653 #>  [566,] 0.33143558 0.4451621 0.4826764 0.4883416 0.5127696 0.5912516 0.5924125 #>  [567,] 1.41926620 1.4453761 1.5806618 1.6063033 1.6172418 1.6276178 1.6809096 #>  [568,] 0.32319175 0.4648272 0.5217926 0.5503828 0.5627264 0.6550708 0.7109863 #>  [569,] 0.56700865 0.5871101 0.6226706 0.6274324 0.6453148 0.7142274 0.7158303 #>  [570,] 0.43535072 0.4501754 0.5306193 0.5830972 0.5962874 0.6341743 0.6489536 #>  [571,] 0.13267935 0.1393437 0.4187954 0.4336526 0.4364860 0.4371461 0.4445022 #>  [572,] 0.36563150 0.4882325 0.5004472 0.5279354 0.5432098 0.5498350 0.5527091 #>  [573,] 0.50642499 0.5753730 0.6208701 0.6528180 0.6671471 0.6804542 0.6851323 #>  [574,] 0.48378059 0.6244787 0.6473689 0.6603144 0.7580379 0.7597058 0.7760302 #>  [575,] 0.37185869 0.3924534 0.4451621 0.5187923 0.5219579 0.5244126 0.5347960 #>  [576,] 0.23445424 0.2852333 0.4086348 0.4174691 0.4786173 0.4985297 0.5030537 #>  [577,] 0.37256625 0.3725824 0.4192504 0.4744331 0.5042462 0.5308093 0.5538165 #>  [578,] 0.37326479 0.5838672 0.6528180 0.6782440 0.7643309 0.7686223 0.7750488 #>  [579,] 0.47903449 0.5110472 0.5121367 0.5338226 0.6714041 0.6867017 0.7523310 #>  [580,] 0.42311058 0.6695476 0.7311306 0.9776841 1.0525541 1.0632890 1.0634033 #>  [581,] 0.57508362 0.6840445 0.8620530 0.9108403 0.9978395 1.0064777 1.0194699 #>  [582,] 0.76091799 0.7711151 0.8032878 0.8050413 0.8144492 0.8472938 0.9161961 #>  [583,] 0.23444596 0.3015421 0.3070175 0.4174691 0.4489872 0.4617600 0.4706032 #>  [584,] 0.27226466 0.8079009 0.8499023 1.0784853 1.0893290 1.1458741 1.1687427 #>  [585,] 0.44220434 0.4669321 0.5040527 0.5766456 0.6187411 0.6245348 0.6274126 #>  [586,] 0.29866995 0.5317214 0.6603144 0.7035090 0.7042937 0.7435667 0.8003562 #>  [587,] 0.27397800 0.3872981 0.5268575 0.5447722 0.5489092 0.6181197 0.6198561 #>  [588,] 0.23154039 0.5680358 0.6208568 0.6608245 0.7288602 0.7413602 0.7439166 #>  [589,] 0.37440467 0.5032150 0.5277032 0.5510784 0.5646986 0.5658666 0.5828211 #>  [590,] 0.64620569 0.6604637 0.7526997 0.7527220 0.8270891 0.8307374 0.8406601 #>  [591,] 0.40406787 0.4514422 0.5745288 0.5820708 0.6177383 0.6246316 0.6402169 #>  [592,] 0.38434510 0.3900757 0.3932452 0.5887325 0.6267533 0.6392327 0.6516217 #>  [593,] 0.38066893 0.4327513 0.4683940 0.4974019 0.5355726 0.6497441 0.7012273 #>  [594,] 0.38085583 0.4536409 0.4904569 0.5187908 0.5235230 0.5986820 0.6696586 #>  [595,] 0.53502656 0.6239770 0.6597689 0.6757738 0.7233776 0.7877170 0.8047881 #>  [596,] 0.27831665 0.3010408 0.3120374 0.3287522 0.3432095 0.4494279 0.4723983 #>  [597,] 0.37616048 0.6107151 0.6290967 0.6931054 0.6972586 0.7213988 0.7268775 #>  [598,] 0.76376970 0.8028125 1.4043754 1.4072762 1.4190972 1.4209938 1.4947212 #>  [599,] 0.44182012 0.7566974 0.8450309 0.8655723 0.9357569 1.0665545 1.0948709 #>  [600,] 0.55397237 0.7960216 0.8821900 0.9143359 0.9184174 0.9304678 0.9681963 #>  [601,] 0.45940455 0.6344127 0.7640671 0.8751113 0.9069941 0.9339558 0.9425497 #>  [602,] 0.24263568 0.4617965 0.4862838 0.4935583 0.5058961 0.5164612 0.6160175 #>  [603,] 0.24835875 0.3899307 0.4419782 0.4938952 0.5140316 0.5292019 0.6025951 #>  [604,] 0.33306395 0.4201660 0.5164836 0.5178701 0.5361367 0.5477875 0.5745749 #>  [605,] 0.40116324 0.4737726 0.4747191 0.4929756 0.5054670 0.5098325 0.5183205 #>  [606,] 0.26497430 0.6516321 0.7057181 0.7326479 0.8690916 0.9142811 0.9759745 #>  [607,] 0.43233153 0.6705407 0.7719599 0.7760562 0.7888541 0.8285201 0.8285825 #>  [608,] 0.21124475 0.7965124 0.8499023 0.8638296 0.9862154 1.0242589 1.0566198 #>  [609,] 0.17043615 0.5791031 0.6119211 0.7568780 0.7933537 0.9401932 0.9784879 #>  [610,] 1.27251818 1.4007409 1.5872242 1.6502714 1.6759689 1.7931794 1.7962503 #>  [611,] 0.35056102 0.5386376 0.6705407 0.8652738 0.8902867 0.9165879 0.9442007 #>  [612,] 0.36081713 0.4053927 0.4144134 0.4205963 0.4209899 0.4413732 0.5342375 #>  [613,] 0.32998788 0.4780872 0.5829748 0.6451118 0.6516321 0.6681459 0.7481556 #>  [614,] 0.35146422 0.3814274 0.5201222 0.7057621 0.7107186 0.7137567 0.7610594 #>  [615,] 0.36291605 0.4214459 0.4391736 0.6600433 0.6886020 0.7072703 0.7096227 #>  [616,] 0.34646260 0.4265521 0.4487823 0.4702363 0.4947684 0.4957363 0.4985146 #>  [617,] 0.62805720 0.6972586 0.7227889 1.0564521 1.0855136 1.0942662 1.1260716 #>  [618,] 0.31136211 0.5369502 0.5598178 0.5751151 0.6118213 0.6281894 0.6608245 #>  [619,] 1.11726240 1.3848146 1.6063874 1.6113179 1.6482571 1.8290001 1.8811300 #>  [620,] 0.38538472 0.4354695 0.4614661 0.6278003 0.7072703 0.7150355 0.7591022 #>  [621,] 0.36424210 0.4117843 0.4445334 0.5619969 0.5867999 0.5987444 0.6254579 #>  [622,] 0.42107740 0.5226775 0.6905425 0.8072431 0.8114114 0.8218081 0.8353734 #>  [623,] 0.90251624 0.9179658 1.0056713 1.0084805 1.1554840 1.3880295 1.4135907 #>  [624,] 0.20286252 0.3610021 0.4372544 0.4740533 0.4997761 0.5182454 0.5524235 #>  [625,] 0.25229778 0.4824022 0.5822296 0.6059301 0.6334506 0.6447556 0.6600611 #>  [626,] 0.55947715 0.5916953 0.6345276 0.6698491 0.7170007 0.7471335 0.7557454 #>  [627,] 0.46573585 0.4878851 0.5195055 0.5201538 0.5315147 0.5350378 0.6540243 #>  [628,] 0.93623884 1.0977995 1.1947872 1.2876165 1.2998117 1.4436202 1.4755800 #>  [629,] 0.44825377 0.5195055 0.5581383 0.5637833 0.5975474 0.5977062 0.6021255 #>  [630,] 0.37536730 0.5164301 0.5531608 0.6666422 0.7220469 0.7574397 0.7691004 #>  [631,] 0.32903489 0.3839844 0.4796330 0.5315577 0.5368963 0.5412133 0.5453723 #>  [632,] 0.49740194 0.5447744 0.6280775 0.6527705 0.6697146 0.7372376 0.7830272 #>  [633,] 1.11726240 1.2423258 1.5862658 1.6544705 1.6930723 1.7550223 1.8218150 #>  [634,] 0.27820372 0.3253701 0.3660151 0.5369217 0.6020524 0.7003384 0.7089577 #>  [635,] 0.23445424 0.4048737 0.4322466 0.4608005 0.4648813 0.4977342 0.5050785 #>  [636,] 0.40640874 0.5834456 0.6100679 0.6851942 0.7146722 0.7241467 0.7301356 #>  [637,] 0.46252459 0.6297303 0.6331314 0.7003384 0.8112534 0.8124345 0.8651220 #>  [638,] 0.60088987 0.6339919 0.6388741 0.6474137 0.6474838 0.6696586 0.6988707 #>  [639,] 0.37734773 0.4590026 0.5390705 0.5921952 0.6671026 0.6974902 0.7090112 #>  [640,] 0.21399890 0.4031256 0.5151704 0.5494136 0.5664058 0.6006307 0.6424917 #>  [641,] 0.29207978 0.5401549 0.5474909 0.5524235 0.5796832 0.6059761 0.6585259 #>  [642,] 0.29137886 0.5112414 0.5187908 0.5307719 0.5494953 0.5495123 0.5756728 #>  [643,] 0.44085544 0.5514176 0.5632790 0.7421846 0.7821312 0.7895657 0.7912623 #>  [644,] 0.35281360 0.3912673 0.4989607 0.5335707 0.5414298 0.6156885 0.6527913 #>  [645,] 0.78117363 0.8633145 1.0734705 1.0875151 1.0911114 1.1794586 1.2188109 #>  [646,] 0.69162439 0.7439166 0.9022142 0.9147525 0.9972726 1.0179116 1.0717781 #>  [647,] 0.58197751 0.7391057 0.8008340 0.9239508 0.9941564 1.0069490 1.0591957 #>  [648,] 0.25940823 0.2881677 0.4069067 0.4167995 0.4490281 0.5004484 0.5369063 #>  [649,] 0.43361530 0.4576543 0.5310053 0.5408687 0.5907444 0.6274188 0.6276467 #>  [650,] 0.55397237 0.7664153 0.9252118 0.9803168 1.0258493 1.0333822 1.0508506 #>  [651,] 0.25537990 0.3510083 0.3896725 0.4092183 0.4114427 0.5009519 0.5058887 #>  [652,] 0.50856221 0.6573377 0.6668035 0.7638306 0.8564216 0.8851545 0.9487532 #>  [653,] 0.72771956 0.7701128 0.8085942 0.8565908 0.8612755 0.8616950 0.9033424 #>  [654,] 0.63004997 0.6790883 0.6930265 0.7471025 0.7796087 0.8001579 0.8162489 #>  [655,] 0.62415853 0.6790883 0.8149223 0.8164451 0.8245908 0.8249625 0.8542619 #>  [656,] 0.36371447 0.5336176 0.5416509 0.5799145 0.5927017 0.5963091 0.5968608 #>  [657,] 0.26592251 0.3839797 0.5314992 0.5582578 0.6573676 0.6859789 0.6869186 #>  [658,] 0.96860515 1.5596684 1.7214903 1.8390047 1.8732701 2.0095196 2.0340435 #>  [659,] 0.33992786 0.6787343 0.7953610 0.7995270 0.8406601 0.8451771 0.8946463 #>  [660,] 0.57850160 0.6149651 0.6331314 0.7958120 0.8032878 0.8500671 0.8728612 #>  [661,] 0.59645976 0.6882759 0.7294277 0.7314181 0.7398650 0.7451284 0.7905992 #>  [662,] 0.51562884 0.6948035 0.6954605 0.7612766 0.7820931 0.7821108 0.8110738 #>  [663,] 0.63575836 0.6640708 0.7659304 0.7776300 0.8079934 0.8763540 0.9216423 #>  [664,] 0.32642149 0.5204109 0.5661041 0.5980774 0.6062228 0.6408244 0.6936385 #>  [665,] 0.34583666 0.5094248 0.5822296 0.6019879 0.6508259 0.6516076 0.6744814 #>  [666,] 0.43381139 0.4546433 0.5788702 0.6756414 0.7471335 0.8011819 0.8455020 #>  [667,] 0.53467357 0.5373530 0.5983490 0.5995905 0.6462057 0.7008084 0.7061636 #>  [668,] 0.37654869 0.4283986 0.5094248 0.6696494 0.7168134 0.7303654 0.7825482 #>  [669,] 0.45033714 0.5345327 0.5369502 0.5948893 0.5985664 0.6389778 0.6726457 #>  [670,] 0.83931843 0.8628560 0.9748641 0.9761721 1.0343402 1.0928670 1.0943788 #>  [671,] 0.36481889 0.3875701 0.4533006 0.4579549 0.5029217 0.5244214 0.5263868 #>  [672,] 0.53423748 0.6205033 0.6237384 0.6597708 0.6637734 0.6859404 0.7042937 #>  [673,] 0.22512765 0.3954141 0.4057245 0.4066714 0.5754289 0.5981497 0.6459042 #>  [674,] 0.41796157 0.5450184 0.5485833 0.5590485 0.5908792 0.5971899 0.6076136 #>  [675,] 0.41441336 0.4468249 0.4590581 0.4647662 0.5223277 0.5907237 0.6244787 #>  [676,] 0.35057975 0.6053708 0.6305607 0.7109863 0.7912119 0.8047230 0.8227136 #>  [677,] 0.47357398 0.6408472 0.7471467 0.7822333 0.8163211 0.8184313 0.8571742 #>  [678,] 0.36291605 0.4614661 0.5432727 0.5830972 0.5858808 0.6132328 0.6351667 #>  [679,] 0.34692452 0.4372083 0.5217926 0.5248431 0.5675716 0.5873715 0.6131153 #>  [680,] 0.47956545 0.7061636 0.7550567 0.7569945 0.8113778 0.8205277 0.8486483 #>  [681,] 0.69219525 0.7959432 0.7989554 0.8713739 0.8858275 0.8900467 0.9009966 #>  [682,] 0.23817426 0.2808169 0.3592144 0.5177640 0.5288084 0.5930796 0.5983421 #>  [683,] 0.38064751 0.4014603 0.4293245 0.4413397 0.5164612 0.5171589 0.5566918 #>  [684,] 0.27374113 0.4327614 0.5156453 0.5587885 0.6472249 0.7160519 0.7567857 #>  [685,] 0.36601515 0.3742301 0.4121055 0.5945311 0.7146722 0.7312741 0.7746565 #>  [686,] 0.52802346 0.5513452 0.6314889 0.6345006 0.7183474 0.7496084 0.7939503 #>  [687,] 0.50375515 0.5870666 0.6666116 0.7169169 0.7286017 0.8465621 0.8663543 #>  [688,] 0.24611185 0.3370508 0.5064250 0.5171589 0.5526758 0.6160175 0.6205033 #>  [689,] 0.41794591 0.6505936 0.6588649 0.7485899 0.7491659 0.7548487 0.8576855 #>  [690,] 0.48897230 0.5338226 0.5631145 0.6876064 0.7249473 0.7610390 0.7665936 #>  [691,] 0.25265749 0.3648189 0.4231851 0.4983350 0.5054447 0.5058957 0.5379967 #>  [692,] 0.37194528 0.3896725 0.4518190 0.4888065 0.5286499 0.5368963 0.5411184 #>  [693,] 0.42115831 0.5520766 0.5550128 0.9107576 0.9213139 0.9311899 1.0733480 #>  [694,] 0.30665876 0.3717870 0.3719453 0.4997310 0.5480230 0.6036892 0.6316852 #>  [695,] 0.27235215 0.3682785 0.3877919 0.4563907 0.4686757 0.4790775 0.5102164 #>  [696,] 0.44798338 0.5244854 0.8689665 0.9423840 0.9442252 0.9472707 0.9680754 #>  [697,] 0.27562530 0.3560464 0.6615503 0.7733899 0.7821108 0.7931469 0.8066735 #>  [698,] 0.64271917 0.8104446 0.8518589 0.9819177 1.0527555 1.0704130 1.1284419 #>  [699,] 0.37536730 0.4279793 0.5698067 0.6805403 0.6930791 0.7037863 0.7775509 #>  [700,] 0.77560656 0.8556852 1.1021752 1.1159335 1.1821154 1.2422865 1.2640127 #>  [701,] 0.54944796 0.6858087 0.7160519 0.7161151 0.7514740 0.8011942 0.8040033 #>  [702,] 0.43725443 0.4518521 0.5293771 0.5417388 0.5617081 0.5693952 0.5809123 #>  [703,] 0.27373125 0.3681418 0.5585375 0.5629239 0.6276305 0.6427449 0.6776797 #>  [704,] 0.44727767 0.6573590 0.7268775 0.7276097 0.7664300 0.7956606 0.8151043 #>  [705,] 0.48215564 0.7168258 0.7797592 0.8584295 0.8881306 0.9258788 1.1747701 #>  [706,] 0.32987731 0.5539253 0.6512268 0.6805731 0.7051882 0.7770416 0.8028310 #>  [707,] 0.34290313 0.3916555 0.4384343 0.4439449 0.4451151 0.4652345 0.4779779 #>  [708,] 0.72429204 0.8485679 0.9030081 1.0299906 1.0379055 1.0509786 1.0511232 #>  [709,] 0.26411020 0.5763736 0.5913644 0.6009726 0.6159768 0.6332756 0.6387827 #>  [710,] 0.59236817 0.6317479 0.6552598 0.6905037 0.7620866 0.7751092 0.7835180 #>  [711,] 0.49777424 0.4986955 0.5246994 0.6800699 0.6932700 0.7195649 0.7310794 #>  [712,] 0.30585146 0.3569595 0.3610021 0.4310536 0.5617081 0.6139850 0.6173314 #>  [713,] 0.22730905 0.3101792 0.3896564 0.6595335 0.6614731 0.6616534 0.7026276 #>  [714,] 0.73113062 0.7404447 0.7598041 0.8894494 0.9218340 0.9772646 1.0149214 #>  [715,] 0.53546582 0.6488153 0.6827288 0.7065292 0.7176423 0.7196598 0.7858885 #>  [716,] 0.31706208 0.3824672 0.4997944 0.5211668 0.5414298 0.5734929 0.6104140 #>  [717,] 0.29573626 0.5202421 0.5274417 0.5923872 0.6130515 0.6268764 0.6668035 #>  [718,] 0.51787090 0.6681381 0.6921952 0.6945929 0.7616721 0.7728200 0.7767504 #>  [719,] 0.44511515 0.4773816 0.5208903 0.5221296 0.5708846 0.6036892 0.6071663 #>  [720,] 0.31021064 0.3667173 0.4148328 0.5036602 0.5388405 0.5443826 0.5743608 #>  [721,] 0.76376970 1.4945173 1.5618344 1.6583313 1.7226438 1.7337409 1.8270387 #>  [722,] 0.57910311 0.6115139 0.6685038 0.8223332 0.8940572 0.9323082 0.9573444 #>  [723,] 0.40406787 0.4589491 0.5738974 0.6282063 0.6353663 0.6645386 0.6905037 #>  [724,] 0.26361352 0.3612065 0.5829462 0.6409314 0.6512282 0.6560213 0.6666938 #>  [725,] 0.37766750 0.4877192 0.4977504 0.6141899 0.6374305 0.6463524 0.7035879 #>  [726,] 0.40235927 0.7095820 0.7211537 0.7390536 0.7565762 0.8014326 0.8093141 #>  [727,] 0.25229778 0.5443461 0.5480230 0.5517974 0.5632433 0.6230362 0.6285004 #>  [728,] 0.60180716 0.6345307 0.7319469 0.7498497 0.7510102 0.7522254 0.7795453 #>  [729,] 0.79251236 0.9169129 0.9624720 1.0016268 1.1132133 1.1183533 1.1703586 #>  [730,] 0.21651187 0.3307715 0.3902055 0.4048998 0.4300517 0.5080894 0.5970754 #>  [731,] 0.66354613 0.8080975 0.8122482 0.8448919 0.8598953 0.8703998 0.8736572 #>  [732,] 0.76793703 0.9746944 1.0603844 1.1809858 1.3134783 1.3312986 1.4184369 #>  [733,] 1.41806022 1.4979673 1.5334406 1.6314486 1.6429539 1.7030105 1.7172150 #>  [734,] 0.35753455 0.3949244 0.4214572 0.4281875 0.4408832 0.4810949 0.4826539 #>  [735,] 0.16898732 0.4774863 0.4997761 0.5450184 0.5577090 0.5654247 0.5790945 #>  [736,] 0.27779408 0.4117843 0.4624789 0.4869968 0.5152503 0.5926834 0.6532210 #>  [737,] 0.45094915 0.7870609 0.8365102 0.9197372 0.9669580 0.9771254 1.0148486 #>  [738,] 0.33982358 0.7319139 0.7776584 0.7905012 0.8014663 0.8392729 0.9160105 #>  [739,] 0.39752836 0.4628165 0.5139286 0.5557389 0.6299496 0.6648775 0.6892268 #>  [740,] 0.35502072 0.5015861 0.5160277 0.6083196 0.6489536 0.6874109 0.6959152 #>  [741,] 0.35694620 0.4291263 0.5064923 0.6014621 0.6239316 0.6610865 0.6857948 #>  [742,] 0.54794447 0.5909986 0.6224500 0.6278003 0.6351667 0.6394549 0.6607352 #>  [743,] 0.53400936 0.5574238 0.7236006 0.7286656 0.7608778 0.7813525 0.8909473 #>  [744,] 0.81247524 1.0111774 1.0421754 1.0457865 1.1062559 1.1693766 1.2517755 #>  [745,] 0.33705076 0.3842782 0.4068962 0.5566918 0.5967728 0.6206061 0.6247646 #>  [746,] 0.57869430 0.6643098 0.6963693 0.7499769 0.7532504 0.7787472 0.7840776 #>  [747,] 0.34583666 0.3765487 0.6485353 0.6536423 0.6600611 0.6950010 0.7608483 #>  [748,] 0.55392527 0.6011789 0.6107278 0.6565608 0.6666422 0.7067511 0.7295667 #>  [749,] 1.28096940 1.3035623 1.4027108 1.4503325 1.5398309 1.6228690 1.6251855 #>  [750,] 0.75682393 0.9759578 1.0086455 1.0171610 1.0781083 1.0961189 1.1095360 #>  [751,] 0.47282196 0.5538007 0.6370667 0.7604574 0.8299728 0.8469233 0.8905465 #>  [752,] 0.50321505 0.6012756 0.6440738 0.6763688 0.6811249 0.6878932 0.7024877 #>  [753,] 1.12512471 1.5002459 1.6186691 1.6746142 1.6971242 1.7244525 1.7529364 #>  [754,] 0.19126137 0.2539434 0.3530391 0.4211737 0.4610017 0.4735912 0.4812976 #>  [755,] 0.74738137 0.8490869 0.8598790 0.8819419 0.8834692 0.8956083 0.9020044 #>  [756,] 0.40863482 0.4201660 0.4875000 0.4977342 0.5139286 0.5250651 0.5548998 #>  [757,] 0.59144499 0.6451118 0.6556036 0.6960641 0.7246572 0.7526997 0.7562335 #>  [758,] 0.29034567 0.3153831 0.4148944 0.4420203 0.5036863 0.5100027 0.5967067 #>  [759,] 0.24282195 0.5158832 0.5926552 0.6115119 0.6196056 0.6231284 0.6441286 #>  [760,] 0.34646260 0.4576543 0.5116226 0.5403305 0.5449393 0.5790349 0.5962150 #>  [761,] 0.28637481 0.5161356 0.6072845 0.6403226 0.6589856 0.6618140 0.6619228 #>  [762,] 0.22663217 0.7094030 0.7527483 0.8047230 0.8173328 0.8380186 0.8391967 #>  [763,] 0.34765312 0.4212806 0.4268198 0.4444787 0.6220212 0.6292556 0.6796196 #>  [764,] 0.25529604 0.4244684 0.4925101 0.5098325 0.5315147 0.5866931 0.6092869 #>  [765,] 0.63149423 0.6344471 0.8072431 0.8556852 0.9310300 0.9539625 0.9673221 #>  [766,] 0.41353422 0.4800824 0.4997822 0.5004472 0.5308093 0.5517345 0.5817011 #>  [767,] 0.17192229 0.3120374 0.3274886 0.3970135 0.4186993 0.4204261 0.4487641 #>  [768,] 0.49960642 0.5680358 0.5989883 0.6187675 0.6281894 0.6901499 0.7043782 #>  [769,] 0.53075473 0.5948165 0.7371089 0.7845360 0.8615314 0.8746930 0.9299736 #>  [770,] 1.08831280 1.1290978 1.2708480 1.2778259 1.2814328 1.3589799 1.4092152 #>  [771,] 0.84050232 1.2081018 1.3537660 1.3676314 1.3998444 1.4217575 1.4250399 #>  [772,] 0.49874972 0.5116226 0.5348619 0.5606675 0.6284367 0.6302704 0.6997016 #>  [773,] 1.01823009 1.1625109 1.1724161 1.2807257 1.3346802 1.3372022 1.3953495 #>  [774,] 0.42107740 0.5228137 0.5782739 0.6344471 0.6408634 0.6552209 0.7278126 #>  [775,] 1.44425777 1.5024005 1.5148908 1.5275841 1.5392507 1.5788080 1.6184525 #>  [776,] 0.51100732 0.6797352 0.6979795 0.7239671 0.7271320 0.7607239 0.7625511 #>  [777,] 0.27986585 0.6141458 0.6186548 0.6930265 0.6978360 0.7064858 0.7565171 #>  [778,] 0.61968631 0.6495568 0.6692727 0.6764916 0.6782440 0.7079180 0.7088686 #>  [779,] 0.45979711 0.4943986 0.5124604 0.5573640 0.5791735 0.6387119 0.6584954 #>  [780,] 0.33118191 0.3463831 0.4397189 0.4891228 0.4944305 0.5297014 0.5306987 #>  [781,] 0.31406018 0.3746252 0.4828882 0.5987444 0.6003784 0.6580683 0.6789879 #>  [782,] 0.26858368 0.3672683 0.4606300 0.4823437 0.4895812 0.5083644 0.5182948 #>  [783,] 0.80509624 0.9642723 0.9748641 0.9932183 1.0175262 1.0440972 1.0506605 #>  [784,] 0.34632790 0.5812384 0.6068026 0.6817921 0.7782817 0.7818776 0.8135992 #>  [785,] 0.95031389 1.1390276 1.1488276 1.1717946 1.1885282 1.2093484 1.2547582 #>  [786,] 0.57850160 0.7428819 0.7626059 0.7664228 0.7746565 0.8124345 0.8786955 #>  [787,] 0.23817426 0.3740172 0.4150215 0.5086507 0.5239781 0.5252724 0.5643148 #>  [788,] 0.80083402 0.8688661 0.8952005 0.9025712 1.0016799 1.0082361 1.0213946 #>  [789,] 0.47662769 0.5948893 0.6012587 0.7134555 0.7582208 0.8186225 0.8845991 #>  [790,] 0.38039938 0.4066714 0.4787794 0.5510211 0.6025951 0.6032960 0.6046658 #>  [791,] 0.52281365 0.6314942 0.6905425 0.7001828 0.7370280 0.7496531 0.8518589 #>  [792,] 0.87344003 0.8786955 0.9130445 0.9356086 1.0061377 1.0099780 1.0406190 #>  [793,] 0.39295645 0.6883166 0.7067511 0.7409552 0.7463260 0.9268664 0.9380089 #>  [794,] 0.45337305 0.5127075 0.5475791 0.5705612 0.5791735 0.5867750 0.6463524 #>  [795,] 0.38074638 0.5428344 0.7870609 0.8122835 0.8285331 0.9000570 1.0503715 #>  [796,] 0.65741762 0.6595386 0.6786018 0.6805422 0.6911190 0.6945954 0.6964581 #>  [797,] 0.42601353 0.6297133 0.8849188 0.9089493 0.9556250 0.9724911 1.0142959 #>  [798,] 0.07900148 0.2134423 0.3366718 0.3990870 0.5151064 0.5494136 0.6121996 #>  [799,] 0.75505674 0.7705614 0.7789857 0.8690916 0.9599744 0.9880098 1.0048817 #>  [800,] 0.29071253 0.5367478 0.5514176 0.5993767 0.6653796 0.6892158 0.7155752 #>  [801,] 0.45390851 0.4654537 0.4702363 0.4998753 0.5088901 0.5587419 0.5677993 #>  [802,] 0.66430980 0.7860686 0.7917791 0.8035448 0.8512671 0.8943658 0.9688910 #>  [803,] 0.43339983 0.4889723 0.5015533 0.5121367 0.5496062 0.5623404 0.6369267 #>  [804,] 0.22663217 0.6737981 0.6864307 0.7741433 0.7760244 0.7914695 0.8054832 #>  [805,] 0.34928645 0.3683386 0.3883146 0.5029217 0.5178635 0.5493735 0.5851822 #>  [806,] 0.96860515 1.5474225 1.6916781 1.7508751 1.8336938 1.8432269 1.8601614 #>  [807,] 0.81823719 0.8905984 0.9877874 1.0080292 1.0574307 1.0694985 1.0751693 #>  [808,] 0.51274896 0.5794487 0.5989883 0.6016442 0.6227651 0.6675875 0.7007486 #>  [809,] 0.41927666 0.4758018 0.5229936 0.6353158 0.6485353 0.7109808 0.7184761 #>  [810,] 0.52007377 0.5829748 0.7459431 0.7847037 0.7953610 0.8120088 0.8905465 #>  [811,] 0.52670130 0.5495123 0.5750012 0.5960382 0.6278278 0.6401071 0.6482104 #>  [812,] 0.30912486 0.3221767 0.3445838 0.3679166 0.3921957 0.4167995 0.4364860 #>  [813,] 0.26707323 0.3675232 0.3676174 0.4747191 0.5430170 0.5577346 0.5612849 #>  [814,] 0.66246718 0.6764916 0.6870574 0.7056267 0.7653108 0.7741433 0.7975241 #>  [815,] 0.46401044 0.6718409 0.6750776 0.6944161 0.8141279 0.8415446 0.8674535 #>  [816,] 0.40585333 0.5158832 0.5310501 0.6237231 0.6283424 0.6308819 0.6735509 #>  [817,] 0.51787090 0.7322052 0.7942737 0.8858275 0.8992017 0.9529758 0.9777157 #>  [818,] 0.44878229 0.4693085 0.5348619 0.5403305 0.5507061 0.5780262 0.5890797 #>  [819,] 0.40312556 0.4724889 0.5146832 0.6540016 0.6699648 0.7296882 0.7548694 #>  [820,] 0.52243421 0.9528990 0.9566207 0.9690615 0.9959560 1.0041419 1.0048973 #>  [821,] 0.61876751 0.6220356 0.6670638 0.7302815 0.7320587 0.7336890 0.7419142 #>  [822,] 0.45033714 0.5105971 0.6909721 0.7200852 0.7301892 0.7582208 0.7617684 #>  [823,] 0.27752292 0.3530391 0.3569595 0.4105468 0.4740533 0.5041885 0.5822294 #>  [824,] 0.92369646 0.9935013 1.0084146 1.0603844 1.1688281 1.2238993 1.2536617 #>  [825,] 0.93623884 0.9670659 0.9716891 1.0213059 1.0791829 1.0908452 1.2003763 #>  [826,] 0.51547045 0.5428344 0.5513518 0.7418054 0.7596351 0.8207332 0.8464236 #>  [827,] 0.36357445 0.3906010 0.4358474 0.4812976 0.4851370 0.5204109 0.5300283 #>  [828,] 0.21918209 0.3515583 0.4460121 0.4735912 0.5015861 0.5055582 0.5928341 #>  [829,] 0.47248888 0.7390052 0.7862303 0.7934345 0.8240780 0.8774079 0.8816378 #>  [830,] 0.61443490 0.7276547 0.7430517 0.7568780 0.8004466 0.8797075 0.8800598 #>  [831,] 0.33721916 0.4333998 0.4494589 0.5627313 0.5631145 0.6392648 0.6425977 #>  [832,] 0.35584388 0.3608171 0.4589638 0.4647662 0.5355108 0.5409202 0.5661899 #>  [833,] 0.31425204 0.3975284 0.5110073 0.6375903 0.6674449 0.7254397 0.7415100 #>  [834,] 0.43093765 0.4821556 0.6053708 0.7107931 0.8125750 0.9832103 1.0043076 #>  [835,] 0.84050232 1.4143479 1.5009154 1.6691936 1.6755054 1.6854697 1.8534532 #>  [836,] 0.46890975 0.4922400 0.5605946 0.5643164 0.5666706 0.6025482 0.6248032 #>  [837,] 0.29686347 0.4882768 0.6842423 0.7095820 0.7367931 0.8004466 0.8982905 #>  [838,] 0.28297282 0.4104397 0.5606675 0.5922417 0.5930066 0.6435596 0.6506995 #>  [839,] 0.66046375 0.7587216 0.7705614 0.7822333 0.8118788 0.9794113 0.9822419 #>  [840,] 0.20603309 0.3096341 0.3153831 0.4322466 0.4852165 0.4985219 0.5298338 #>  [841,] 0.51426500 0.5160277 0.5448443 0.6115975 0.6209217 0.6602422 0.6673354 #>  [842,] 0.87682996 0.8871343 0.9657971 0.9972174 1.0056713 1.0089594 1.0226326 #>  [843,] 0.53344981 0.5666706 0.5705612 0.5804025 0.6160059 0.6285987 0.6888110 #>  [844,] 0.63329928 0.7035094 0.8909473 0.9090553 0.9450609 1.0034860 1.0322017 #>  [845,] 0.59733251 0.9069941 1.0315972 1.0651302 1.1004546 1.1819033 1.2104695 #>  [846,] 0.35584388 0.4053927 0.4569943 0.4801926 0.5726849 0.5907237 0.6562850 #>  [847,] 0.44945895 0.4669321 0.4710597 0.5335359 0.5496062 0.5714739 0.5741004 #>  [848,] 0.41227811 0.4813064 0.5127075 0.5322349 0.5396463 0.5524752 0.5573640 #>  [849,] 0.60207570 0.6332993 0.7541340 0.7612766 0.8339584 0.8695335 0.9403258 #>  [850,] 0.56667337 0.5690583 0.6806436 0.6841255 0.7057482 0.7196784 0.7266933 #>  [851,] 0.60644755 0.6068605 0.6088823 0.6313599 0.6381212 0.7043648 0.8091027 #>  [852,] 0.46309918 0.5503828 0.5671789 0.6737981 0.6893140 0.6897462 0.7094030 #>  [853,] 0.54477441 0.7328934 0.7748304 0.7982394 0.8948322 0.9052024 0.9099494 #>  [854,] 0.42219845 0.5288742 0.5313286 0.5314622 0.5489092 0.6208746 0.6326844 #>  [855,] 0.36655786 0.4248826 0.5211668 0.5812758 0.6696843 0.6909388 0.7411261 #>  [856,] 0.66906906 0.6929659 0.7029221 0.7363367 0.8576981 0.9298216 0.9509733 #>  [857,] 0.10961117 0.5561111 0.5914676 0.6253939 0.6720140 0.6791187 0.6825467 #>  [858,] 0.34458382 0.3564569 0.4068168 0.4490281 0.4817999 0.5008421 0.5009519 #>  [859,] 0.53900013 0.7596351 0.7809893 0.7977962 0.8110831 0.8285331 0.8717266 #>  [860,] 0.26056421 0.3320452 0.3675232 0.4011632 0.4244684 0.5245809 0.5277923 #>  [861,] 0.53863757 0.5741677 0.7806849 0.9257462 0.9832158 1.0343402 1.0652415 #>  [862,] 0.48019263 0.5409202 0.6188566 0.6728008 0.6845853 0.6976790 0.6983050 #>  [863,] 0.16898732 0.4179616 0.4874333 0.5182454 0.5581737 0.5727718 0.5833047 #>  [864,] 0.49674503 0.8623701 0.9361598 1.0285802 1.0919945 1.1454716 1.1467348 #>  [865,] 0.74356670 0.8506358 0.8988180 0.9653260 0.9658914 1.0456813 1.1495489 #>  [866,] 0.19274415 0.5890797 0.6656190 0.6929399 0.7092455 0.7130241 0.7300549 #>  [867,] 0.82780332 0.8682733 0.8819994 0.9382707 0.9624720 1.0012975 1.0401675 #>  [868,] 0.80504130 1.0132570 1.1390276 1.2647887 1.2893205 1.3519468 1.4066961 #>  [869,] 0.38993068 0.4592070 0.4627760 0.4812428 0.4883416 0.5284553 0.5554485 #>  [870,] 0.41300116 0.4726289 0.5145285 0.5831077 0.6027282 0.6196082 0.6260452 #>  [871,] 0.35872808 0.5216523 0.5218097 0.5943798 0.8396827 0.8405865 0.8480663 #>  [872,] 0.66061744 0.9751220 0.9887768 1.0250606 1.1462059 1.1488878 1.1533324 #>  [873,] 0.55047599 0.9306545 0.9634239 1.0486355 1.0540035 1.1314857 1.1924546 #>  [874,] 0.74044467 0.8490869 0.8839707 1.0353342 1.0634033 1.0914634 1.1081549 #>  [875,] 0.36909222 0.3824672 0.4248826 0.4752431 0.5622268 0.6527913 0.7932064 #>  [876,] 0.19126137 0.3194772 0.3331275 0.3635745 0.3842054 0.4105468 0.4783768 #>  [877,] 0.52330958 0.5452436 0.6420042 0.6720140 0.7052971 0.7300549 0.7423220 #>  [878,] 0.35754567 0.3647637 0.3856706 0.4204261 0.4580945 0.4684129 0.4723983 #>  [879,] 0.48698634 0.5103997 0.5561728 0.5943264 0.6441364 0.6522988 0.6841255 #>  [880,] 0.38075836 0.4420203 0.4485579 0.4658402 0.5140316 0.5446332 0.5554485 #>  [881,] 0.17192229 0.2007145 0.2783166 0.3575457 0.4577139 0.4804332 0.4840932 #>  [882,] 0.55742381 0.7035094 0.8815920 0.9407532 0.9665835 1.0070158 1.0256505 #>  [883,] 1.06671323 1.1098776 1.1939526 1.2708891 1.3019662 1.3272026 1.3346704 #>  [884,] 0.59122759 0.5924289 0.6878932 0.7469794 0.7701128 0.7939503 0.9124692 #>  [885,] 0.26361352 0.4103122 0.5966234 0.6251264 0.6412155 0.6638039 0.6959499 #>  [886,] 0.38142744 0.4702799 0.6183745 0.6692462 0.7132491 0.7992174 0.8603296 #>  [887,] 0.41103442 0.4721603 0.4943986 0.5488501 0.5919320 0.6048693 0.6696642 #>  [888,] 0.48463135 0.5583400 0.6188566 0.7207993 0.7371089 0.7768013 0.7927239 #>  [889,] 0.20402766 0.2125101 0.5652156 0.6438647 0.6656291 0.6934208 0.7234980 #>  [890,] 0.40644938 0.4742585 0.5110722 0.5993060 0.6140650 0.6602692 0.6758489 #>  [891,] 0.31009228 0.5020218 0.5300283 0.5325700 0.5659865 0.6462933 0.6560148 #>  [892,] 0.63783218 0.7207886 0.7319139 1.1488815 1.2363910 1.2394352 1.2466568 #>  [893,] 0.51562884 0.6047001 0.6736678 0.7180052 0.8424851 0.8446939 0.8627030 #>  [894,] 1.16058388 1.2652724 1.3307926 1.3720424 1.4087473 1.4230225 1.4442578 #>  [895,] 0.76904320 0.8050931 1.0306609 1.0424817 1.0576121 1.1172876 1.1341513 #>  [896,] 1.03405675 1.0807985 1.1629530 1.1726818 1.2371444 1.2431209 1.2989847 #>  [897,] 0.26056421 0.2953271 0.3596759 0.3676174 0.4370006 0.4674089 0.4867114 #>  [898,] 0.66295655 1.0524327 1.1454716 1.1938812 1.2348503 1.2659794 1.3541057 #>  [899,] 0.26714363 0.4168866 0.4398471 0.4827427 0.4993616 0.5299611 0.5303869 #>  [900,] 0.99383792 1.0207571 1.0337819 1.0365731 1.0417322 1.0553590 1.0669284 #>  [901,] 0.41869934 0.4499811 0.4804332 0.4892405 0.5419171 0.5443461 0.5630225 #>  [902,] 0.41001145 0.4336526 0.4356013 0.4651105 0.5229936 0.5439551 0.5553379 #>  [903,] 0.44601213 0.4739712 0.4898238 0.5262443 0.5330906 0.5404534 0.5571109 #>  [904,] 0.38729811 0.4356013 0.4758018 0.5605504 0.5629239 0.6072090 0.6208746 #>  [905,] 0.43376457 0.6284165 0.6473181 0.6926234 0.7473814 0.7664153 0.8196974 #>  [906,] 0.36889156 0.4181342 0.4353989 0.5443613 0.6925852 0.7820596 0.8175952 #>  [907,] 0.35553709 0.3639759 0.4068168 0.4192504 0.4518190 0.4547488 0.4583266 #>  [908,] 0.62373689 0.7183489 0.8926911 0.9374606 0.9533518 0.9709443 0.9932183 #>  [909,] 0.47303215 0.5924289 0.6284165 0.6345006 0.6550931 0.6738575 0.6763688 #>  [910,] 0.37272716 0.7574815 0.8620530 0.9235493 1.0293627 1.0346818 1.0506003 #>  [911,] 0.29797572 0.4412957 0.5142650 0.5494740 0.6083196 0.6670661 0.6900840 #>  [912,] 0.31680663 0.3592144 0.3740172 0.4725692 0.5161527 0.5982736 0.6788071 #>  [913,] 0.40154240 0.5960382 0.6015735 0.6039505 0.6143347 0.6173411 0.6399215 #>  [914,] 0.25529604 0.4657359 0.5176139 0.5277923 0.5430170 0.5472789 0.5484479 #>  [915,] 0.52267751 0.5274417 0.7076093 0.7294261 0.7614309 0.7638306 0.7763127 #>  [916,] 0.60183197 0.6690691 0.7574397 0.7667885 0.7775509 0.8601285 0.9643448 #>  [917,] 0.27254531 0.3342411 0.4363043 0.4371461 0.4383080 0.4857113 0.5166758 #>  [918,] 0.27820372 0.3134153 0.4121055 0.4625246 0.5752935 0.7428819 0.7835030 #>  [919,] 0.22730905 0.3454661 0.4692602 0.5782066 0.7374615 0.7477163 0.7979180 #>  [920,] 0.38219942 0.5233096 0.6548786 0.6736678 0.6747795 0.7224611 0.7872064 #>  [921,] 0.35397953 0.4057245 0.4850417 0.5075179 0.5084299 0.5268116 0.5634698 #>  [922,] 0.49108733 0.6237369 0.6983050 0.7207993 0.7317220 0.7329495 0.8043957 #>  [923,] 0.57316599 0.7018844 0.7698621 0.9067110 0.9072002 0.9167711 0.9358035 #>  [924,] 0.27779408 0.5067058 0.5474909 0.5619969 0.5990116 0.6007823 0.6651803 #>  [925,] 0.28951401 0.3507199 0.6028122 0.6597689 0.6932175 0.7135412 0.7213954 #>  [926,] 0.65566614 0.7996484 0.8013142 0.8076352 0.8094535 0.8484571 0.8515109 #>  [927,] 0.27562530 0.5907578 0.6047001 0.6923461 0.6948035 0.7315810 0.7754890 #>  [928,] 0.42319471 0.4619486 0.5357388 0.6964726 0.7374605 0.7408393 0.7504980 #>  [929,] 0.38240555 0.6968206 0.7107931 0.7555991 0.7797592 1.0041571 1.0511232 #>  [930,] 0.48905962 0.5091761 0.6165220 0.6183745 0.6802482 0.7362994 0.7480086 #>  [931,] 0.46604194 0.5057079 0.5093474 0.6374305 0.6515160 0.6895867 0.7152979 #>  [932,] 0.36022339 0.3990870 0.4527244 0.6065168 0.6401071 0.6408634 0.6579255 #>  [933,] 0.27977522 0.3955108 0.4488479 0.4904569 0.4931540 0.5990700 0.6173134 #>  [934,] 0.38153048 0.4648426 0.5635859 0.6371110 0.6375488 0.6404007 0.6428293 #>  [935,] 0.44190042 0.4850204 0.5412125 0.5499718 0.5658402 0.5743258 0.5858808 #>  [936,] 0.47357398 0.5110472 0.5623404 0.6583454 0.6729948 0.7008084 0.7540306 #>  [937,] 0.61987271 0.7960216 0.9158306 1.0644285 1.1518480 1.1549978 1.1687427 #>  [938,] 0.29207978 0.5936938 0.5990116 0.6335023 0.6814437 0.6869994 0.7562474 #>  [939,] 0.10961117 0.5477442 0.5794918 0.6271646 0.6420042 0.6697815 0.6785323 #>  [940,] 0.37616048 0.5179263 0.5733939 0.6280572 0.6450097 0.7735499 0.7956606 #>  [941,] 0.59060294 0.5975474 0.6558207 0.6976132 0.7076012 0.7717883 0.8033412 #>  [942,] 0.21344226 0.2370228 0.3082354 0.3653168 0.4527244 0.5664058 0.6008899 #>  [943,] 0.37666715 0.4403305 0.4726289 0.4837092 0.5482435 0.5557389 0.5831863 #>  [944,] 0.26497430 0.6674207 0.7481556 0.7606691 0.9812453 1.0048817 1.0092092 #>  [945,] 0.38219942 0.5879447 0.6173491 0.6611236 0.6726969 0.6757738 0.7159151 #>  [946,] 0.49533234 0.6346750 0.6884615 0.7041224 0.7872879 0.8081023 0.8233290 #>  [947,] 0.62918180 0.7968490 0.8299728 0.8488415 0.9636785 0.9671748 0.9727649 #>  [948,] 0.19062462 0.3290349 0.3639759 0.4651105 0.5008421 0.5286499 0.5410208 #>  [949,] 0.47084221 0.6654162 0.7048069 0.7374605 0.7551687 0.8144466 0.8210441 #>  [950,] 0.40585333 0.6090162 0.6438393 0.6645667 0.6893189 0.7167928 0.7535016 #>  [951,] 1.71535420 1.7710182 1.8012323 1.9644858 2.0306185 2.1379828 2.1948562 #>  [952,] 0.94719990 1.1703586 1.2716053 1.2792180 1.2884615 1.3356232 1.3512644 #>  [953,] 0.24524756 0.3722042 0.4048998 0.4403305 0.4920482 0.5248431 0.5715971 #>  [954,] 0.59171612 0.6484736 0.6593648 0.7002319 0.7342629 0.7738593 0.7823798 #>  [955,] 0.36726831 0.3876206 0.3916555 0.4122333 0.4146105 0.4408832 0.4436452 #>  [956,] 0.28197372 0.2951427 0.2970063 0.3015421 0.3331275 0.4610017 0.4851370 #>  [957,] 0.75137243 0.7668919 0.8383914 0.8551747 0.8874871 0.8942799 0.9154840 #>  [958,] 0.43970503 0.4590166 0.4673949 0.4807027 0.4878093 0.4942333 0.5067848 #>  [959,] 0.21563769 0.4584524 0.4785825 0.4826764 0.4827427 0.5608112 0.5656248 #>  [960,] 0.34159301 0.3900757 0.4015424 0.4751257 0.5479820 0.6047128 0.6139697 #>  [961,] 1.64730746 1.7606569 1.8298994 1.8558945 1.8647541 1.9069203 2.0772323 #>  [962,] 0.46116246 0.6403444 0.6522988 0.7392183 0.7429670 0.7526534 0.8085424 #>  [963,] 0.20071453 0.3274886 0.3432095 0.3856706 0.4592138 0.4892405 0.5513524 #>  [964,] 0.60683629 0.6517776 0.8600679 0.9081630 0.9218340 0.9547859 0.9884917 #>  [965,] 0.53546582 0.5653624 0.5850334 0.5880933 0.5956964 0.6276467 0.6442174 #>  [966,] 0.21651187 0.2317734 0.3859907 0.4146105 0.4910142 0.4920482 0.5625149 #>  [967,] 0.41103442 0.4597971 0.5235230 0.5307719 0.5510616 0.6118213 0.6688656 #>  [968,] 0.39860107 0.4380599 0.4533006 0.5529875 0.5604020 0.5783303 0.5932555 #>  [969,] 0.39210704 0.4336153 0.5295156 0.6056370 0.6156885 0.6515893 0.6693918 #>  [970,] 0.38757011 0.4032872 0.4681296 0.5233900 0.5238755 0.5789343 0.5793320 #>  [971,] 0.21918209 0.2444457 0.4211737 0.4739712 0.4783768 0.4932683 0.5504818 #>  [972,] 0.61758497 0.6874442 0.8036485 0.8796937 0.8933293 0.9167823 0.9520005 #>  [973,] 0.37950826 0.4977742 0.5460506 0.5654979 0.6470833 0.7371090 0.7557208 #>  [974,] 0.13267935 0.2428452 0.3835312 0.4100114 0.4443748 0.4630358 0.4857113 #>  [975,] 0.29137886 0.3808558 0.4494418 0.5510616 0.5705460 0.5788722 0.5844677 #>  [976,] 0.57887022 0.8547462 0.8845617 0.8948754 0.9142141 0.9572253 1.0449902 #>  [977,] 0.53467357 0.6050027 0.6217932 0.6930354 0.8113778 0.8167004 0.8336929 #>  [978,] 0.24855464 0.3429031 0.4231851 0.4459950 0.5169359 0.5208903 0.5263868 #>  [979,] 0.38428962 0.4476540 0.4706032 0.4717548 0.4817677 0.5750238 0.5753789 #>  [980,] 0.38831457 0.4681296 0.5244214 0.5359329 0.5656454 0.6005207 0.6054502 #>  [981,] 0.32642149 0.4353507 0.4688051 0.5189561 0.5746850 0.5750395 0.5897147 #>  [982,] 0.39295645 0.6280775 0.7546048 0.8182106 0.8942453 0.9120783 0.9266390 #>  [983,] 0.51525033 0.6593257 0.6665253 0.6819764 0.6948617 0.7044144 0.7242251 #>  [984,] 0.93081475 0.9929918 1.0686850 1.0714018 1.0977995 1.1447031 1.1805190 #>  [985,] 0.37853720 0.4998753 0.6013005 0.6443655 0.6587918 0.6663823 0.6978056 #>  [986,] 0.27237342 0.4337646 0.5060788 0.6272943 0.6577665 0.6708163 0.6836464 #>  [987,] 1.38856912 1.6361155 1.7030627 1.7118549 1.7578300 1.7924477 1.8974918 #>  [988,] 0.66347900 0.7011247 0.7657464 0.7867163 0.8439553 0.8543112 0.8612993 #>  [989,] 0.25283902 0.4725692 0.6412155 0.6530337 0.6666938 0.6822739 0.6852734 #>  [990,] 0.34537301 0.4943825 0.5348730 0.6260920 0.6302965 0.6686640 0.6707097 #>  [991,] 0.19274415 0.6253939 0.6271646 0.6384520 0.7050826 0.7361423 0.7423220 #>  [992,] 0.68535263 0.7449855 0.8332449 0.8448919 0.8546296 0.8701522 0.9151551 #>  [993,] 0.29573626 0.5085622 0.5222549 0.5714498 0.5996214 0.6150778 0.6439832 #>  [994,] 0.34324427 0.3871573 0.4821855 0.4984314 0.5288742 0.5620869 0.6308612 #>  [995,] 0.38428962 0.5359329 0.5577090 0.5581737 0.5796832 0.6007823 0.6205757 #>  [996,] 0.24855464 0.3755687 0.4384343 0.4606300 0.4865361 0.5041361 0.5170806 #>  [997,] 0.71485709 1.0349787 1.1488815 1.1793684 1.1988625 1.2671123 1.2780407 #>  [998,] 0.47264023 0.5073235 0.5280320 0.5308094 0.5817286 0.6269897 0.6459467 #>  [999,] 0.34558386 0.4790775 0.5313286 0.5317383 0.5337046 0.5827102 0.5840487 #> [1000,] 0.34397845 0.3794034 0.4114427 0.4779854 0.5226127 0.5297184 0.5677993 #>              [,8]      [,9]     [,10] #>    [1,] 1.5243659 1.5808169 1.6309819 #>    [2,] 0.9611154 0.9978109 1.0056389 #>    [3,] 0.8207332 0.8635637 0.8753390 #>    [4,] 0.9403258 0.9432942 0.9694713 #>    [5,] 0.7043648 0.7952674 0.8274985 #>    [6,] 0.5439281 0.5770422 0.5982568 #>    [7,] 0.7036611 0.7609579 0.8734171 #>    [8,] 0.5276847 0.5397691 0.6196082 #>    [9,] 0.6723708 0.7324915 0.7489528 #>   [10,] 0.6932124 0.7214650 0.7540280 #>   [11,] 1.0114782 1.0153096 1.0194461 #>   [12,] 0.6912918 0.6960641 0.7493430 #>   [13,] 0.7598048 0.8036485 0.8177474 #>   [14,] 0.6430809 0.6726969 0.6822545 #>   [15,] 1.0414107 1.0553590 1.0591613 #>   [16,] 0.8700759 0.8739138 0.8938110 #>   [17,] 0.7917640 0.7923931 0.8010192 #>   [18,] 0.8303925 0.8822084 0.8877890 #>   [19,] 0.7475963 0.7657464 0.7864254 #>   [20,] 0.5630225 0.5770422 0.6040373 #>   [21,] 0.6078729 0.6186548 0.6461841 #>   [22,] 0.8864625 0.9761193 0.9881459 #>   [23,] 0.5940433 0.5999559 0.6055215 #>   [24,] 0.6131153 0.6777096 0.7524123 #>   [25,] 0.6602214 0.6994899 0.7164263 #>   [26,] 0.8288068 0.9339935 0.9397074 #>   [27,] 0.6342003 0.6379932 0.6517197 #>   [28,] 1.1203890 1.1337488 1.2100997 #>   [29,] 0.5249234 0.6053305 0.6375590 #>   [30,] 0.7140120 0.7154912 0.7488831 #>   [31,] 0.4942333 0.5761194 0.5855809 #>   [32,] 0.7520886 0.8040873 0.8396827 #>   [33,] 0.8323721 0.8906242 0.9136292 #>   [34,] 0.6641804 0.6717917 0.6872239 #>   [35,] 1.0939944 1.1142197 1.1249202 #>   [36,] 0.5219579 0.5337046 0.5643711 #>   [37,] 0.9828091 1.0030337 1.0086629 #>   [38,] 0.6305399 0.6523084 0.6545695 #>   [39,] 0.8966548 0.9142811 0.9187279 #>   [40,] 0.6468075 0.7282995 0.7573701 #>   [41,] 1.0466836 1.0745694 1.0879764 #>   [42,] 0.8402753 0.8565728 0.8618696 #>   [43,] 0.6616534 0.6651803 0.6820772 #>   [44,] 0.8484498 0.8826854 0.9821245 #>   [45,] 1.6800755 1.6845896 1.7288681 #>   [46,] 0.8054544 0.8615314 0.8707869 #>   [47,] 0.6353663 0.6555521 0.6722421 #>   [48,] 0.9178182 0.9200243 0.9927841 #>   [49,] 0.5457032 0.5663475 0.5790349 #>   [50,] 0.4860429 0.5075179 0.5379716 #>   [51,] 0.7611719 0.7637640 0.7995270 #>   [52,] 1.2980012 1.3192358 1.3233202 #>   [53,] 0.5446332 0.5478312 0.5535708 #>   [54,] 0.6638055 0.6651148 0.6797352 #>   [55,] 0.5976980 0.6141899 0.6375299 #>   [56,] 0.8755020 0.8962753 0.9500238 #>   [57,] 1.2146188 1.2815139 1.4096943 #>   [58,] 1.0638888 1.1074634 1.1145257 #>   [59,] 0.7242678 0.7270035 0.7293509 #>   [60,] 1.0101676 1.0546030 1.0602406 #>   [61,] 0.6618560 0.6654939 0.6703510 #>   [62,] 0.7501233 0.7567534 0.8105553 #>   [63,] 0.7102408 0.7406132 0.7604855 #>   [64,] 0.6923005 0.7421846 0.7520886 #>   [65,] 1.2056942 1.2894449 1.2991575 #>   [66,] 1.0340444 1.0554123 1.0610237 #>   [67,] 1.3881422 1.3955733 1.4387810 #>   [68,] 0.7332208 0.7571446 0.7770250 #>   [69,] 1.0857663 1.1366361 1.1438864 #>   [70,] 0.7315282 0.7459833 0.7725486 #>   [71,] 0.6440949 0.6446191 0.6983985 #>   [72,] 1.2722014 1.2976706 1.3110711 #>   [73,] 1.3203683 1.3419641 1.3451671 #>   [74,] 1.6801885 1.6853579 1.7120924 #>   [75,] 0.5693952 0.5750238 0.5821031 #>   [76,] 1.0838494 1.1065840 1.1169843 #>   [77,] 0.8086745 0.8116027 0.8389967 #>   [78,] 0.6819764 0.7163205 0.7215572 #>   [79,] 0.7950445 0.8059375 0.8063845 #>   [80,] 0.7012542 0.7164036 0.7310572 #>   [81,] 2.1642842 2.2000876 2.2331132 #>   [82,] 0.8300079 0.8348768 0.8955452 #>   [83,] 0.7831751 0.8878947 0.8923720 #>   [84,] 0.7421833 0.7430611 0.7604475 #>   [85,] 1.1437027 1.2023561 1.3051234 #>   [86,] 0.7069953 0.7164263 0.7207612 #>   [87,] 0.5002889 0.5212093 0.5277063 #>   [88,] 1.0414267 1.0564780 1.1446718 #>   [89,] 0.7087140 0.7210939 0.7300471 #>   [90,] 0.6453419 0.6832413 0.7144920 #>   [91,] 0.6620797 0.6756653 0.7069087 #>   [92,] 1.1947872 1.2003763 1.2043890 #>   [93,] 0.8512671 0.8513194 0.9902324 #>   [94,] 0.8398371 0.8401201 0.8559189 #>   [95,] 0.6780016 0.6897462 0.7036488 #>   [96,] 0.5746850 0.5875314 0.5921158 #>   [97,] 0.8658725 0.9338371 0.9690399 #>   [98,] 1.0853816 1.1052694 1.1294021 #>   [99,] 0.6692727 0.6825616 0.7028998 #>  [100,] 1.1663184 1.1840966 1.1903360 #>  [101,] 0.6834033 0.7182481 0.7783143 #>  [102,] 0.7084309 0.7091938 0.7659119 #>  [103,] 0.6449446 0.6462933 0.6719392 #>  [104,] 0.9233463 0.9835241 0.9947733 #>  [105,] 1.1891001 1.2249966 1.2384766 #>  [106,] 1.1099235 1.1355901 1.1725647 #>  [107,] 0.8123415 0.8325188 0.8671570 #>  [108,] 0.8365915 0.8835575 0.9009966 #>  [109,] 0.6326446 0.6574176 0.6704237 #>  [110,] 1.3458911 1.3519802 1.3581095 #>  [111,] 0.6545029 0.6869348 0.6881646 #>  [112,] 1.0572347 1.0772545 1.0896860 #>  [113,] 0.7767504 0.8143436 0.8462347 #>  [114,] 0.9217313 0.9487040 0.9488802 #>  [115,] 0.7756343 0.8557102 0.8710254 #>  [116,] 0.7891744 0.8032448 0.8230275 #>  [117,] 0.8484029 0.8488996 0.8612993 #>  [118,] 0.8383914 0.8446840 0.8528961 #>  [119,] 0.8192676 0.9261510 0.9664756 #>  [120,] 0.7897595 0.8170575 0.8347737 #>  [121,] 0.9853501 1.0255424 1.0457865 #>  [122,] 0.6665253 0.7115648 0.7229703 #>  [123,] 0.7270004 0.7878174 0.7915487 #>  [124,] 1.8305911 1.9078020 1.9944160 #>  [125,] 0.5928401 0.6368901 0.6445785 #>  [126,] 0.7807276 0.7853142 0.8001476 #>  [127,] 0.7061602 0.7241037 0.7882429 #>  [128,] 0.6003784 0.6088547 0.6383166 #>  [129,] 0.7535734 0.7603356 0.7929358 #>  [130,] 0.9012099 0.9060264 0.9358829 #>  [131,] 0.6657764 0.6753620 0.6839478 #>  [132,] 0.9469076 0.9695313 1.0316372 #>  [133,] 0.9726798 1.0643520 1.0705907 #>  [134,] 0.9120428 0.9666811 1.0409997 #>  [135,] 1.5699467 1.5947757 1.6392738 #>  [136,] 0.8182372 0.8191019 0.8344704 #>  [137,] 0.6936492 0.7024877 0.7115648 #>  [138,] 0.6849311 0.7284462 0.7367644 #>  [139,] 0.8675932 0.8743178 0.8836714 #>  [140,] 0.5796756 0.5953103 0.6121718 #>  [141,] 0.5783303 0.5966800 0.6036024 #>  [142,] 0.6007914 0.6438789 0.6502767 #>  [143,] 0.6620525 0.6806436 0.6867477 #>  [144,] 0.8598790 0.8724186 0.9304678 #>  [145,] 0.7014700 0.7119572 0.7208976 #>  [146,] 0.8137668 0.8385605 0.8450309 #>  [147,] 1.8041595 1.8161606 1.8558945 #>  [148,] 1.1210947 1.1285060 1.1598155 #>  [149,] 0.6452655 0.6583454 0.6593995 #>  [150,] 1.3792715 1.4307066 1.5478979 #>  [151,] 1.0860630 1.1100208 1.1332205 #>  [152,] 0.6403226 0.6421274 0.6443655 #>  [153,] 1.1906040 1.2140674 1.2141235 #>  [154,] 1.0057026 1.0182671 1.0256053 #>  [155,] 1.0403373 1.0696501 1.0827458 #>  [156,] 1.1766876 1.2167468 1.2247420 #>  [157,] 0.6424917 0.6529798 0.6937404 #>  [158,] 0.7134555 0.7617684 0.8326278 #>  [159,] 0.7298838 0.7843733 0.8009879 #>  [160,] 0.5654880 0.5663867 0.5886008 #>  [161,] 0.5649241 0.5693824 0.5812760 #>  [162,] 0.8142111 0.8256681 0.8272541 #>  [163,] 0.8281454 0.8328057 0.8483943 #>  [164,] 0.9857413 1.0088831 1.0380476 #>  [165,] 0.5506159 0.5767945 0.5830846 #>  [166,] 0.8656360 0.8914866 0.9326425 #>  [167,] 0.5233900 0.5292069 0.5416509 #>  [168,] 0.5578011 0.5643164 0.5944404 #>  [169,] 0.7386633 0.7662297 0.9012099 #>  [170,] 1.1387468 1.1658656 1.1679701 #>  [171,] 0.9562380 0.9585808 0.9690550 #>  [172,] 0.7958698 0.8491134 0.8656282 #>  [173,] 0.7329002 0.7548487 0.7614309 #>  [174,] 0.8888326 0.9138311 1.0139692 #>  [175,] 0.8472938 0.8731073 0.9566480 #>  [176,] 0.9184091 0.9184174 0.9258757 #>  [177,] 1.2139058 1.2432262 1.2583021 #>  [178,] 0.9205091 0.9403023 0.9821884 #>  [179,] 1.6050450 1.6194342 1.6253970 #>  [180,] 0.7539741 0.7678168 0.7904194 #>  [181,] 0.7747172 0.8280436 0.8445258 #>  [182,] 0.7610390 0.7624164 0.7719599 #>  [183,] 0.8098735 0.8116027 0.9110454 #>  [184,] 1.1174933 1.1827852 1.2005486 #>  [185,] 0.5391978 0.5443826 0.5470348 #>  [186,] 0.6459826 0.6600433 0.6793389 #>  [187,] 0.5965657 0.6096712 0.6342035 #>  [188,] 0.7144528 0.7317062 0.7411022 #>  [189,] 0.6665549 0.7036611 0.8455571 #>  [190,] 0.6707097 0.6855123 0.7104163 #>  [191,] 0.6880536 0.6951885 0.7146643 #>  [192,] 0.6223099 0.6273539 0.6390304 #>  [193,] 0.6342512 0.6388741 0.6752632 #>  [194,] 0.6327771 0.6469318 0.6602149 #>  [195,] 1.3646138 1.4342775 1.4604686 #>  [196,] 0.5524353 0.5610534 0.5743608 #>  [197,] 0.8344419 0.8614908 0.8924273 #>  [198,] 0.9935013 1.0102038 1.0604318 #>  [199,] 0.9424759 0.9766749 0.9793582 #>  [200,] 0.8082735 0.8481908 0.8727487 #>  [201,] 0.9090066 0.9098650 0.9413194 #>  [202,] 0.5442527 0.5662443 0.5758904 #>  [203,] 0.8915143 0.9333763 0.9400642 #>  [204,] 0.8024589 0.8144466 0.8153928 #>  [205,] 1.4519661 1.6070510 1.6374261 #>  [206,] 1.1985378 1.2227509 1.2647286 #>  [207,] 0.5022303 0.5100027 0.5204578 #>  [208,] 0.5768237 0.5828092 0.6070402 #>  [209,] 0.8405143 0.8704515 0.8730958 #>  [210,] 0.5245977 0.5732797 0.5897997 #>  [211,] 0.6331277 0.6618434 0.6851041 #>  [212,] 0.8040936 0.8173328 0.8276968 #>  [213,] 0.6421244 0.6618434 0.6669356 #>  [214,] 0.8695335 0.8838543 0.9361518 #>  [215,] 0.8780073 0.9322287 0.9854342 #>  [216,] 0.6316852 0.6329600 0.6541418 #>  [217,] 0.7409552 0.7749358 0.7765259 #>  [218,] 0.9633232 0.9700862 0.9714272 #>  [219,] 1.0734137 1.1260716 1.2022306 #>  [220,] 0.7089577 0.7958406 0.8049686 #>  [221,] 0.8087226 0.8820261 0.8979552 #>  [222,] 0.8423325 0.8752929 0.8792610 #>  [223,] 1.1291117 1.1304449 1.1406933 #>  [224,] 0.8237598 0.8477494 0.8525389 #>  [225,] 0.8003785 0.8120694 0.8328057 #>  [226,] 0.7349225 0.7711570 0.7720764 #>  [227,] 0.6475480 0.6542009 0.6584288 #>  [228,] 0.7708681 0.7972449 0.8793620 #>  [229,] 0.6023254 0.6616765 0.7303278 #>  [230,] 0.7363367 0.7637374 0.7667885 #>  [231,] 0.5180424 0.5335359 0.5597946 #>  [232,] 0.6078622 0.6278613 0.6333816 #>  [233,] 0.5992267 0.6017974 0.6051926 #>  [234,] 0.7275223 0.7328934 0.7858247 #>  [235,] 0.8318334 0.8319812 0.8925846 #>  [236,] 0.6797679 0.6834770 0.6946250 #>  [237,] 0.6653248 0.7276097 0.7601208 #>  [238,] 0.7668919 0.7835613 0.7921361 #>  [239,] 0.7590097 0.7645542 0.7747119 #>  [240,] 1.4700593 1.4715203 1.4952204 #>  [241,] 1.2063140 1.2099781 1.2246481 #>  [242,] 1.1757867 1.2450534 1.2567412 #>  [243,] 0.5949664 0.6131437 0.6576266 #>  [244,] 1.8735486 1.8739523 1.9042581 #>  [245,] 0.4875000 0.5057847 0.5298338 #>  [246,] 0.8673738 0.8834692 0.9245452 #>  [247,] 0.9667485 0.9776315 0.9832663 #>  [248,] 0.9853571 1.0121351 1.0502786 #>  [249,] 0.5453723 0.5486410 0.5569566 #>  [250,] 0.6523133 0.7128838 0.7176423 #>  [251,] 1.0271251 1.0428790 1.0444198 #>  [252,] 0.8376048 0.8393177 0.9233463 #>  [253,] 0.7022452 0.7049319 0.7232298 #>  [254,] 0.9378070 0.9465619 0.9539625 #>  [255,] 0.7323271 0.8051645 0.8157303 #>  [256,] 0.8054544 0.8320862 0.8332449 #>  [257,] 0.8221198 0.8385605 0.8713739 #>  [258,] 1.5881133 1.6214879 1.6598806 #>  [259,] 0.4608005 0.4680016 0.4993466 #>  [260,] 0.5204578 0.5257055 0.5325700 #>  [261,] 0.8619552 0.8927870 0.9265075 #>  [262,] 0.9361687 0.9668368 0.9751466 #>  [263,] 0.6995904 0.7329333 0.7573726 #>  [264,] 0.7285425 0.7669078 0.7967487 #>  [265,] 0.6361679 0.6626872 0.6931054 #>  [266,] 0.8464808 0.9042451 0.9361598 #>  [267,] 0.7958406 0.8504945 0.8575893 #>  [268,] 0.9130299 0.9142488 0.9184519 #>  [269,] 0.7023902 0.7036488 0.7190904 #>  [270,] 1.0134838 1.0375951 1.0953411 #>  [271,] 0.9033689 0.9500238 0.9779554 #>  [272,] 0.7569841 0.7713455 0.7743237 #>  [273,] 0.8281020 0.8404081 0.8997864 #>  [274,] 0.6021311 0.6329169 0.6451058 #>  [275,] 0.6116902 0.6584954 0.6982418 #>  [276,] 0.6766993 0.6804542 0.6970547 #>  [277,] 1.1671591 1.1940877 1.2013685 #>  [278,] 0.5385578 0.5524752 0.5540552 #>  [279,] 0.9806397 0.9903009 1.0124594 #>  [280,] 0.7733261 0.7757703 0.7814405 #>  [281,] 1.6651384 1.7565781 1.7573194 #>  [282,] 0.6233547 0.6381087 0.6790567 #>  [283,] 0.8320862 0.8486365 0.8659943 #>  [284,] 0.6353006 0.6440505 0.6491302 #>  [285,] 1.2464875 1.2563855 1.3767573 #>  [286,] 0.9741064 0.9807108 1.0087750 #>  [287,] 0.6533300 0.7024012 0.7046043 #>  [288,] 0.9766857 1.0721776 1.0851837 #>  [289,] 0.6582334 0.6715584 0.7489660 #>  [290,] 0.5736358 0.6016753 0.6031855 #>  [291,] 0.9047764 0.9416227 0.9437803 #>  [292,] 0.6534406 0.6535046 0.6689339 #>  [293,] 0.7839534 0.7906479 0.7915487 #>  [294,] 0.6527325 0.7207140 0.7265732 #>  [295,] 0.8515109 0.8821759 0.8829943 #>  [296,] 1.0891309 1.1238643 1.1280101 #>  [297,] 0.6817921 0.7024531 0.7885705 #>  [298,] 0.7650493 0.7830500 0.7850708 #>  [299,] 0.9253394 0.9618571 0.9675878 #>  [300,] 0.8019273 0.8136202 0.8417530 #>  [301,] 0.8982530 0.9216886 0.9237611 #>  [302,] 0.6387119 0.6701486 0.6924840 #>  [303,] 0.8194054 0.8245683 0.8276968 #>  [304,] 0.8163358 0.8968895 0.9190604 #>  [305,] 0.6911725 0.7333086 0.7364530 #>  [306,] 0.6273922 0.6494594 0.6758489 #>  [307,] 0.6020250 0.6032960 0.6141436 #>  [308,] 1.2462559 1.2627624 1.2734046 #>  [309,] 1.0961978 1.1436299 1.1709643 #>  [310,] 0.6557014 0.6608235 0.6910342 #>  [311,] 0.6901804 0.7042251 0.7121510 #>  [312,] 0.7725283 0.8024589 0.8167136 #>  [313,] 1.3093299 1.3269674 1.3276929 #>  [314,] 0.7285425 0.7598048 0.7688160 #>  [315,] 0.8906903 0.9014016 0.9082654 #>  [316,] 0.6597708 0.6716182 0.7138331 #>  [317,] 1.3444230 1.3969292 1.4297278 #>  [318,] 1.0851945 1.1559070 1.1757867 #>  [319,] 0.6329600 0.6380099 0.6387574 #>  [320,] 0.5443672 0.5488831 0.5624516 #>  [321,] 1.0981134 1.1148162 1.1424652 #>  [322,] 0.6027873 0.6314889 0.6915544 #>  [323,] 0.9562376 1.0873696 1.1439529 #>  [324,] 1.1809562 1.1949260 1.2121301 #>  [325,] 1.2758465 1.2764101 1.3314925 #>  [326,] 0.8488415 0.8858925 0.9049453 #>  [327,] 0.7816092 0.8003785 0.8061216 #>  [328,] 1.5466154 1.6159929 1.6380888 #>  [329,] 1.5863012 1.5911419 1.7342734 #>  [330,] 0.9494797 0.9970640 1.0387814 #>  [331,] 0.5663867 0.5977062 0.6327771 #>  [332,] 0.7786057 0.7926984 0.8472351 #>  [333,] 0.5780262 0.5830670 0.6025930 #>  [334,] 0.8014663 0.8420080 0.8437626 #>  [335,] 0.5649241 0.5889128 0.6072000 #>  [336,] 0.8751113 0.8806370 0.9049909 #>  [337,] 0.9169476 0.9258788 0.9786166 #>  [338,] 1.0001497 1.1000918 1.1152972 #>  [339,] 1.1983213 1.2084839 1.2476221 #>  [340,] 0.8387845 0.8578511 0.8625806 #>  [341,] 1.0503849 1.0581414 1.0981878 #>  [342,] 0.5831863 0.5897049 0.6166476 #>  [343,] 0.8909072 0.8952005 0.9274179 #>  [344,] 0.9235493 0.9288125 0.9731136 #>  [345,] 2.8094835 2.8886078 2.9410917 #>  [346,] 0.5564435 0.5892740 0.6000514 #>  [347,] 0.7551687 0.8334741 0.8581683 #>  [348,] 0.7263683 0.7687818 0.7934345 #>  [349,] 0.6638946 0.7025544 0.7051790 #>  [350,] 1.6618546 1.6642624 1.7089094 #>  [351,] 1.0794372 1.1290306 1.1451370 #>  [352,] 0.6767724 0.7167063 0.7404281 #>  [353,] 0.8472273 0.8487451 0.8598339 #>  [354,] 0.9188042 0.9250145 0.9784457 #>  [355,] 0.6427334 0.6523133 0.6591489 #>  [356,] 0.5867750 0.6096996 0.6609022 #>  [357,] 0.6504095 0.6693203 0.6915823 #>  [358,] 1.0662185 1.0938059 1.1255470 #>  [359,] 0.6849131 0.7253001 0.7567343 #>  [360,] 0.8253925 0.8469022 0.8507445 #>  [361,] 1.2972732 1.3129135 1.3208724 #>  [362,] 0.5900256 0.5966234 0.6255330 #>  [363,] 0.8098279 0.8405189 0.8419364 #>  [364,] 0.8382100 0.8417069 0.8511844 #>  [365,] 0.9920899 0.9990774 1.0466645 #>  [366,] 0.5600479 0.6000714 0.6015735 #>  [367,] 0.8771099 0.8793941 0.8808018 #>  [368,] 1.1420320 1.2435833 1.2576645 #>  [369,] 0.8582952 0.8599602 0.8648614 #>  [370,] 0.6438789 0.6464029 0.6594544 #>  [371,] 0.8132519 0.8348768 0.8718345 #>  [372,] 0.8886290 0.8980959 0.9182436 #>  [373,] 0.6728326 0.6859789 0.7359366 #>  [374,] 0.7909004 0.8103030 0.8672868 #>  [375,] 1.2857568 1.3381113 1.3387273 #>  [376,] 0.7944559 0.8013535 0.8304747 #>  [377,] 1.0194842 1.0607650 1.1032316 #>  [378,] 0.7188675 0.8235059 0.8276617 #>  [379,] 1.0211121 1.1530092 1.1705561 #>  [380,] 0.9923883 1.0221610 1.0783806 #>  [381,] 0.6207979 0.6427334 0.6639098 #>  [382,] 1.2759019 1.2801700 1.3483353 #>  [383,] 0.7151393 0.7507690 0.7514525 #>  [384,] 0.7303102 0.7447334 0.7563054 #>  [385,] 0.7729818 0.7752801 0.8192156 #>  [386,] 0.5042462 0.5132578 0.5347960 #>  [387,] 0.6685003 0.7032316 0.7095077 #>  [388,] 1.2940043 1.3116532 1.3305883 #>  [389,] 0.4817999 0.4878093 0.5410208 #>  [390,] 0.7331032 0.7444346 0.7671677 #>  [391,] 0.7537042 0.7746594 0.7845776 #>  [392,] 0.9354164 0.9916784 1.0038588 #>  [393,] 1.1592034 1.1789048 1.1881525 #>  [394,] 0.6467058 0.6565775 0.6923005 #>  [395,] 0.7310763 0.7552492 0.7594214 #>  [396,] 0.8986675 0.9143464 0.9276981 #>  [397,] 0.8486483 0.8508795 0.8601285 #>  [398,] 0.9976411 1.0011695 1.0739424 #>  [399,] 0.8745644 0.8782130 0.9043587 #>  [400,] 0.9098650 1.0092030 1.0362576 #>  [401,] 0.5597946 0.5927760 0.6031826 #>  [402,] 0.7700191 0.7817334 0.7818776 #>  [403,] 0.9737559 1.0240651 1.0344264 #>  [404,] 0.5936955 0.5965183 0.6031826 #>  [405,] 0.5359840 0.5426235 0.5494953 #>  [406,] 0.4984314 0.5700570 0.5701457 #>  [407,] 0.6150030 0.6689186 0.6761037 #>  [408,] 1.2397482 1.3744765 1.4820356 #>  [409,] 1.1517586 1.1595079 1.1607152 #>  [410,] 0.8970618 0.9174193 0.9612071 #>  [411,] 0.6916650 0.6981241 0.7041224 #>  [412,] 0.6471527 0.6816065 0.6878781 #>  [413,] 0.7327581 0.7406132 0.7452370 #>  [414,] 0.6648266 0.6678141 0.6744941 #>  [415,] 0.6697815 0.6791187 0.6953316 #>  [416,] 0.8168176 0.8194116 0.8211489 #>  [417,] 0.6078729 0.6152754 0.6421274 #>  [418,] 1.7155196 1.7207718 1.7415727 #>  [419,] 0.9481335 0.9612071 0.9820950 #>  [420,] 0.6800200 0.6808957 0.6992552 #>  [421,] 0.6046658 0.6209275 0.6402169 #>  [422,] 0.6835824 0.7585124 0.7881878 #>  [423,] 0.7491987 0.7522365 0.7601292 #>  [424,] 0.5020218 0.5030537 0.5178701 #>  [425,] 2.2932696 2.3723662 2.4223384 #>  [426,] 0.7645542 0.8054434 0.8494835 #>  [427,] 1.4016451 1.4382258 1.4433517 #>  [428,] 0.8341936 0.8344704 0.8387845 #>  [429,] 0.6107487 0.6735196 0.6762099 #>  [430,] 0.7438620 0.7674429 0.7714117 #>  [431,] 0.8219423 0.8234266 0.8463815 #>  [432,] 0.7341805 0.7534588 0.7727361 #>  [433,] 0.6377760 0.6462234 0.6638736 #>  [434,] 0.9333763 0.9422343 0.9488802 #>  [435,] 1.1427459 1.1572862 1.1624329 #>  [436,] 0.7498497 0.7768013 0.7789587 #>  [437,] 0.7549707 0.7669871 0.7987205 #>  [438,] 1.0791655 1.0973817 1.1052959 #>  [439,] 0.4825606 0.5023097 0.5102164 #>  [440,] 0.7093803 0.7365695 0.8450230 #>  [441,] 0.8186225 0.8575886 0.8617306 #>  [442,] 1.1939267 1.2530121 1.2676821 #>  [443,] 1.0690217 1.0938534 1.1098776 #>  [444,] 0.7602211 0.7900737 0.8484472 #>  [445,] 0.7305650 0.7666968 0.7783143 #>  [446,] 0.7870018 0.8203685 0.8417069 #>  [447,] 0.7270035 0.7565922 0.7755959 #>  [448,] 0.8279811 0.8490338 0.8573882 #>  [449,] 0.7283879 0.7563002 0.7800571 #>  [450,] 0.7829672 0.7968122 0.8093141 #>  [451,] 0.9289359 0.9913643 1.0041851 #>  [452,] 0.8580262 0.8603759 0.8625607 #>  [453,] 0.7599411 0.8054832 0.8322838 #>  [454,] 0.5303881 0.5404534 0.5506574 #>  [455,] 0.8750339 0.8754412 0.8896112 #>  [456,] 0.9700862 0.9895414 1.0009251 #>  [457,] 0.7884800 0.7985785 0.8309672 #>  [458,] 0.7219261 0.7259888 0.7685295 #>  [459,] 1.5169999 1.5208390 1.5669053 #>  [460,] 0.9304993 1.0034544 1.0204791 #>  [461,] 0.9252409 0.9413701 1.0006566 #>  [462,] 0.7252742 0.7520877 0.7681750 #>  [463,] 0.5873715 0.5940268 0.6009576 #>  [464,] 1.4102500 1.4254980 1.4289465 #>  [465,] 0.9724693 0.9892153 1.0053203 #>  [466,] 0.6776049 0.6793633 0.7444877 #>  [467,] 0.7234270 0.7373352 0.7395970 #>  [468,] 0.7312486 0.7620866 0.7834036 #>  [469,] 1.9449903 1.9997245 2.0342805 #>  [470,] 1.8673973 1.9165614 1.9322301 #>  [471,] 0.7849593 0.7867677 0.8164522 #>  [472,] 0.8077282 0.8113149 0.8162749 #>  [473,] 0.8092988 0.8227479 0.8581683 #>  [474,] 0.7886554 0.8040224 0.8216809 #>  [475,] 0.9568295 0.9668492 0.9772124 #>  [476,] 0.7496162 0.7635732 0.7935786 #>  [477,] 1.1293331 1.1469452 1.1471375 #>  [478,] 0.6020250 0.6364563 0.6564804 #>  [479,] 0.8828625 0.9178182 0.9357569 #>  [480,] 0.8551747 0.8561162 0.8696071 #>  [481,] 0.7271914 0.7889064 0.8276440 #>  [482,] 0.9167345 0.9432508 0.9734263 #>  [483,] 0.8877356 0.8877721 0.9464073 #>  [484,] 0.6820772 0.6901804 0.7073480 #>  [485,] 0.6032926 0.6355482 0.6519567 #>  [486,] 0.7694448 0.7867677 0.7921361 #>  [487,] 0.8669934 0.8987052 0.9039787 #>  [488,] 0.5386993 0.5510784 0.5615143 #>  [489,] 0.9526243 0.9738814 1.0211781 #>  [490,] 0.5797474 0.5819609 0.5829153 #>  [491,] 1.3827639 1.4192413 1.4736857 #>  [492,] 0.6208781 0.6852571 0.7241467 #>  [493,] 0.5825832 0.6224511 0.6276391 #>  [494,] 1.4299967 1.4388615 1.4452256 #>  [495,] 0.8014326 0.8063517 0.8796086 #>  [496,] 1.0511263 1.0638448 1.0654817 #>  [497,] 0.6331116 0.6969062 0.6987263 #>  [498,] 0.5942840 0.6013444 0.6100400 #>  [499,] 0.8186754 0.8388021 0.8446939 #>  [500,] 1.0481851 1.1458741 1.1547490 #>  [501,] 0.6127121 0.6392152 0.6698288 #>  [502,] 0.7746160 0.8066735 0.8549282 #>  [503,] 0.7550132 0.8247882 0.8276536 #>  [504,] 0.7007891 0.7760447 0.7927290 #>  [505,] 0.6207979 0.6369267 0.7119260 #>  [506,] 0.8450073 0.8506358 0.8947993 #>  [507,] 0.4527564 0.4929968 0.5031262 #>  [508,] 0.8210360 0.8356232 0.8370369 #>  [509,] 0.6196056 0.7501435 0.8137668 #>  [510,] 0.6689186 0.6801213 0.7140120 #>  [511,] 1.6786398 1.6801571 1.6809669 #>  [512,] 1.0270393 1.0378446 1.0830380 #>  [513,] 1.0686446 1.0745639 1.0884353 #>  [514,] 1.2383352 1.3142746 1.3165361 #>  [515,] 0.6923461 0.7222090 0.7349476 #>  [516,] 1.6999924 1.7366141 1.7710182 #>  [517,] 0.7227302 0.7333383 0.7438428 #>  [518,] 0.6412565 0.6487788 0.6527705 #>  [519,] 0.7007891 0.7166611 0.7211109 #>  [520,] 1.0286506 1.1018465 1.1064026 #>  [521,] 0.7539787 0.7646527 0.7749358 #>  [522,] 0.6460914 0.6592550 0.6777096 #>  [523,] 0.6011296 0.6099995 0.6267533 #>  [524,] 0.7527483 0.7889473 0.7951141 #>  [525,] 1.4603744 1.6534632 1.6554812 #>  [526,] 0.6993946 0.7225583 0.7272496 #>  [527,] 1.4180602 1.4306645 1.4584196 #>  [528,] 0.8336929 0.8786696 0.8990421 #>  [529,] 0.8049686 0.9500680 0.9775793 #>  [530,] 1.5558516 1.5605163 1.6140382 #>  [531,] 0.5470348 0.5673608 0.5755022 #>  [532,] 0.7040888 0.7044367 0.7181985 #>  [533,] 0.5600479 0.5693824 0.5705460 #>  [534,] 0.7481863 0.7556583 0.7578103 #>  [535,] 1.6764237 1.6891714 1.6925196 #>  [536,] 0.6892268 0.7104893 0.7386475 #>  [537,] 0.6605804 0.6822545 0.6859765 #>  [538,] 0.6724188 0.6760600 0.6805757 #>  [539,] 0.9236578 0.9779554 0.9825563 #>  [540,] 1.5450570 1.5982529 1.6469659 #>  [541,] 0.7671446 0.7686223 0.7913083 #>  [542,] 0.7749350 0.7760432 0.7970975 #>  [543,] 0.9972164 1.0454226 1.0554706 #>  [544,] 0.9734595 0.9762631 0.9798293 #>  [545,] 1.2253034 1.2347755 1.2356855 #>  [546,] 0.5308653 0.5433494 0.5648950 #>  [547,] 0.6845853 0.6870117 0.7195420 #>  [548,] 0.6836239 0.7093803 0.7112369 #>  [549,] 0.6624672 0.7044367 0.7271320 #>  [550,] 0.5930796 0.6009576 0.6332259 #>  [551,] 1.0512387 1.0828803 1.0834900 #>  [552,] 1.0671486 1.0812531 1.0817206 #>  [553,] 1.0822813 1.0942597 1.1059081 #>  [554,] 0.4990195 0.5265139 0.5447722 #>  [555,] 0.6851350 0.6876713 0.6926234 #>  [556,] 0.6995904 0.7367393 0.7459699 #>  [557,] 1.0643377 1.0757091 1.0772153 #>  [558,] 0.5876273 0.5937526 0.6021311 #>  [559,] 0.6316512 0.6322469 0.6470051 #>  [560,] 0.8883228 0.9206066 0.9323522 #>  [561,] 0.6731440 0.6860345 0.6885872 #>  [562,] 0.6638946 0.7372376 0.8081303 #>  [563,] 0.8289467 0.8349365 0.8653335 #>  [564,] 0.7583382 0.7673915 0.8239604 #>  [565,] 0.7240913 0.7753555 0.7841834 #>  [566,] 0.5998774 0.6128027 0.6591489 #>  [567,] 1.6908154 1.7030627 1.7225823 #>  [568,] 0.7425193 0.7489660 0.7500161 #>  [569,] 0.7170007 0.8089017 0.8122410 #>  [570,] 0.6774092 0.6799657 0.7025544 #>  [571,] 0.4820388 0.5136056 0.5213306 #>  [572,] 0.5566345 0.5922417 0.5935245 #>  [573,] 0.7110430 0.7135245 0.7384764 #>  [574,] 0.8450073 0.8713145 0.8943658 #>  [575,] 0.5573569 0.5840487 0.6198596 #>  [576,] 0.5361367 0.5540552 0.5557784 #>  [577,] 0.5574661 0.5752938 0.5902023 #>  [578,] 0.7813525 0.8041972 0.8239604 #>  [579,] 0.7566974 0.8184313 0.8656965 #>  [580,] 1.1771946 1.1826661 1.1970214 #>  [581,] 1.0231257 1.1010580 1.1155543 #>  [582,] 0.9441800 1.0828442 1.1472337 #>  [583,] 0.5396463 0.5420004 0.5607260 #>  [584,] 1.2029668 1.2605534 1.3054052 #>  [585,] 0.6278613 0.6442174 0.6732055 #>  [586,] 0.8234069 0.8244759 0.8432501 #>  [587,] 0.6341530 0.6353158 0.6772174 #>  [588,] 0.7814405 0.8528844 0.8812575 #>  [589,] 0.6008158 0.6372487 0.6381665 #>  [590,] 0.8535271 0.8584035 0.8604812 #>  [591,] 0.6475480 0.6583511 0.6692462 #>  [592,] 0.6862504 0.7064858 0.7096041 #>  [593,] 0.7141790 0.7540948 0.7743470 #>  [594,] 0.6790748 0.7063940 0.7134847 #>  [595,] 0.8243222 0.8426470 0.8441713 #>  [596,] 0.4841514 0.5657912 0.5755022 #>  [597,] 0.7452370 0.7575772 0.7952843 #>  [598,] 1.4963948 1.5203882 1.6024957 #>  [599,] 1.1383098 1.1702267 1.2238629 #>  [600,] 1.0364890 1.0783860 1.0881871 #>  [601,] 0.9747691 0.9784879 0.9891670 #>  [602,] 0.6325404 0.6790821 0.7024531 #>  [603,] 0.6043368 0.6424482 0.6583511 #>  [604,] 0.5864847 0.6016442 0.6022500 #>  [605,] 0.5472789 0.5627529 0.6346750 #>  [606,] 1.0111774 1.0255424 1.0621965 #>  [607,] 0.8565637 0.8674535 0.8724976 #>  [608,] 1.0922215 1.1643951 1.1807064 #>  [609,] 0.9794582 1.0258198 1.0537422 #>  [610,] 1.8744437 1.8869722 1.9029999 #>  [611,] 0.9482153 1.0703472 1.0738687 #>  [612,] 0.5826571 0.6483689 0.7058580 #>  [613,] 0.7554312 0.7697521 0.7769445 #>  [614,] 0.7722574 0.7785427 0.7852635 #>  [615,] 0.7480086 0.8008770 0.8052328 #>  [616,] 0.4987497 0.5915236 0.6025436 #>  [617,] 1.1530540 1.1624329 1.1696436 #>  [618,] 0.6675875 0.6696642 0.6964581 #>  [619,] 1.9258524 1.9589473 1.9616130 #>  [620,] 0.7694448 0.7945205 0.8112945 #>  [621,] 0.6608919 0.7044144 0.7183474 #>  [622,] 0.8357592 0.8851545 0.9266689 #>  [623,] 1.4453892 1.5597602 1.5799055 #>  [624,] 0.6013444 0.6160422 0.6277272 #>  [625,] 0.6735509 0.7061602 0.7103009 #>  [626,] 0.7594411 0.7819699 0.8162749 #>  [627,] 0.6639936 0.6704440 0.7070445 #>  [628,] 1.4792002 1.4858616 1.5553256 #>  [629,] 0.6801713 0.6803374 0.6807494 #>  [630,] 0.7838042 0.8330158 0.8551235 #>  [631,] 0.5658423 0.5659957 0.5706138 #>  [632,] 0.8275516 0.8398715 0.8894340 #>  [633,] 1.8945030 1.9278525 1.9424763 #>  [634,] 0.7367904 0.7715897 0.7772676 #>  [635,] 0.5245977 0.5419030 0.5470238 #>  [636,] 0.7606916 0.7766755 0.7873526 #>  [637,] 0.8667406 0.9232460 0.9668317 #>  [638,] 0.7093980 0.7179996 0.8043226 #>  [639,] 0.7107465 0.7365392 0.7509218 #>  [640,] 0.6474838 0.6752632 0.7081496 #>  [641,] 0.7407793 0.7601183 0.7669871 #>  [642,] 0.5757339 0.5988755 0.6056370 #>  [643,] 0.8543398 0.9490901 0.9616271 #>  [644,] 0.7037034 0.7089464 0.7225416 #>  [645,] 1.2614159 1.3394622 1.4055323 #>  [646,] 1.0875151 1.1115924 1.1613842 #>  [647,] 1.2023717 1.2228821 1.2469979 #>  [648,] 0.5538165 0.5571109 0.5848674 #>  [649,] 0.6731897 0.6863041 0.7436029 #>  [650,] 1.0723583 1.0829244 1.0888367 #>  [651,] 0.5360911 0.5439281 0.5514637 #>  [652,] 0.9823087 1.0061961 1.0161166 #>  [653,] 0.9615576 0.9772413 1.0220572 #>  [654,] 0.8567612 0.8835575 0.9073879 #>  [655,] 0.8739169 0.9189904 0.9469421 #>  [656,] 0.6440738 0.6553880 0.6621010 #>  [657,] 0.6948833 0.7239879 0.7303132 #>  [658,] 2.0539740 2.0902739 2.1038077 #>  [659,] 0.9031826 0.9270452 0.9469395 #>  [660,] 0.8741287 0.8839707 0.9087493 #>  [661,] 0.8132943 0.8224501 0.8247882 #>  [662,] 0.8186754 0.8330141 0.8343830 #>  [663,] 0.9810485 0.9927890 1.0106749 #>  [664,] 0.7029838 0.7151743 0.7163519 #>  [665,] 0.6817316 0.7015655 0.7115043 #>  [666,] 0.8458111 0.9004967 0.9803732 #>  [667,] 0.7187057 0.7246572 0.7471467 #>  [668,] 0.7927652 0.7950445 0.8107627 #>  [669,] 0.6911190 0.7413602 0.8334453 #>  [670,] 1.1509168 1.1776238 1.1924359 #>  [671,] 0.5475349 0.5505027 0.5639221 #>  [672,] 0.7212985 0.7231728 0.7255583 #>  [673,] 0.6546189 0.6678590 0.6745093 #>  [674,] 0.6236229 0.6316512 0.6448085 #>  [675,] 0.6976790 0.6988070 0.7022311 #>  [676,] 0.8647881 0.8881306 0.9042629 #>  [677,] 0.8584035 0.9732872 0.9841871 #>  [678,] 0.6459826 0.7084309 0.7096870 #>  [679,] 0.6269285 0.6510310 0.7190904 #>  [680,] 0.9532322 0.9611154 0.9822419 #>  [681,] 0.9136462 0.9197724 0.9385553 #>  [682,] 0.6151094 0.6664986 0.6852734 #>  [683,] 0.6181234 0.6336101 0.6550931 #>  [684,] 0.8281020 0.8915035 0.9109314 #>  [685,] 0.7855720 0.8112534 0.8486313 #>  [686,] 0.7968281 0.7993908 0.8096249 #>  [687,] 0.8684122 0.8933293 0.9039735 #>  [688,] 0.6518934 0.6784733 0.7134594 #>  [689,] 0.9237826 0.9400302 0.9471953 #>  [690,] 0.8141279 0.8358715 0.8369607 #>  [691,] 0.5529875 0.5601840 0.5644245 #>  [692,] 0.5517974 0.5693161 0.5873525 #>  [693,] 1.0859972 1.1167549 1.1855703 #>  [694,] 0.6327384 0.6403465 0.6522010 #>  [695,] 0.5369063 0.5844722 0.6025021 #>  [696,] 0.9683329 0.9684100 1.0204332 #>  [697,] 0.8111384 0.8424851 0.8542503 #>  [698,] 1.1814480 1.2263634 1.2384766 #>  [699,] 0.7927652 0.8077602 0.8295842 #>  [700,] 1.2702424 1.2908346 1.3338531 #>  [701,] 0.8291931 0.8403914 0.8738022 #>  [702,] 0.6434446 0.6671026 0.6860087 #>  [703,] 0.7074719 0.7149534 0.7375093 #>  [704,] 0.8169586 0.8272137 0.8283524 #>  [705,] 1.2313260 1.2356855 1.2885794 #>  [706,] 0.8154469 0.8226472 0.8487451 #>  [707,] 0.4983350 0.5262098 0.5327186 #>  [708,] 1.0624992 1.0715707 1.1079968 #>  [709,] 0.6789879 0.7242251 0.7460334 #>  [710,] 0.7968163 0.8044401 0.8081303 #>  [711,] 0.8103030 0.8407096 0.8612372 #>  [712,] 0.6796196 0.7025482 0.7212138 #>  [713,] 0.7080254 0.7608227 0.8142425 #>  [714,] 1.0440521 1.0512421 1.0767011 #>  [715,] 0.8151947 0.8285825 0.8582232 #>  [716,] 0.6284367 0.7223476 0.7408906 #>  [717,] 0.7046757 0.7136841 0.7604333 #>  [718,] 0.8838055 0.9219829 0.9919327 #>  [719,] 0.6121718 0.6380099 0.6388043 #>  [720,] 0.5953103 0.6349862 0.6359090 #>  [721,] 1.8820315 1.9001787 1.9088798 #>  [722,] 0.9795572 0.9823719 1.0485794 #>  [723,] 0.7339828 0.7342629 0.7421833 #>  [724,] 0.7866264 0.8289504 0.8772428 #>  [725,] 0.7079180 0.7419142 0.7869214 #>  [726,] 0.8201243 0.8342268 0.8486467 #>  [727,] 0.6288299 0.6441286 0.6508259 #>  [728,] 0.7837983 0.8149223 0.8295842 #>  [729,] 1.1908658 1.2187422 1.2412926 #>  [730,] 0.6217570 0.6510310 0.6630560 #>  [731,] 0.9160105 0.9928598 1.1118426 #>  [732,] 1.4420573 1.4974156 1.5126267 #>  [733,] 1.7203979 1.7855192 1.8151633 #>  [734,] 0.4929968 0.5297014 0.5530272 #>  [735,] 0.5965755 0.6003747 0.6095929 #>  [736,] 0.6981032 0.7104502 0.7132787 #>  [737,] 1.0985167 1.1041007 1.1451672 #>  [738,] 0.9223074 1.0153096 1.0387814 #>  [739,] 0.7026276 0.7146490 0.7245649 #>  [740,] 0.7207847 0.7329248 0.7348654 #>  [741,] 0.6898966 0.7134847 0.7154010 #>  [742,] 0.6608039 0.7080254 0.7310347 #>  [743,] 0.9439670 1.0013745 1.1012426 #>  [744,] 1.3015360 1.3296636 1.3845750 #>  [745,] 0.6325404 0.6648266 0.6837852 #>  [746,] 0.8505685 0.8759186 0.8890348 #>  [747,] 0.7840299 0.8194621 0.8238080 #>  [748,] 0.7545404 0.7563807 0.8210554 #>  [749,] 1.6518706 1.6901572 1.7073382 #>  [750,] 1.1184452 1.1456799 1.1546014 #>  [751,] 0.9202416 0.9760870 0.9904668 #>  [752,] 0.7601292 0.7789707 0.7888291 #>  [753,] 1.8041411 1.8399981 1.9228155 #>  [754,] 0.5117631 0.5189561 0.5379454 #>  [755,] 0.9188856 0.9264988 0.9320816 #>  [756,] 0.6017029 0.6238293 0.6410903 #>  [757,] 0.7847037 0.7996425 0.8101178 #>  [758,] 0.6032702 0.6093081 0.6393244 #>  [759,] 0.6645667 0.6992010 0.7103009 #>  [760,] 0.6381541 0.7110158 0.7136425 #>  [761,] 0.6806684 0.6858037 0.8278033 #>  [762,] 0.8708349 0.9128123 0.9241553 #>  [763,] 0.6832413 0.6860087 0.7341805 #>  [764,] 0.6157924 0.6343072 0.6558207 #>  [765,] 1.0118846 1.0134499 1.0171610 #>  [766,] 0.5975777 0.6000514 0.6011296 #>  [767,] 0.4531303 0.4674339 0.4860429 #>  [768,] 0.7399173 0.7863414 0.7904919 #>  [769,] 0.9369696 0.9517156 0.9656858 #>  [770,] 1.4471992 1.4562042 1.4820356 #>  [771,] 1.4930419 1.5148422 1.5548330 #>  [772,] 0.7373352 0.7443812 0.7529223 #>  [773,] 1.3959402 1.4042072 1.4333654 #>  [774,] 0.7428682 0.7751488 0.7923230 #>  [775,] 1.6821274 1.7425683 1.8219406 #>  [776,] 0.7952674 0.8616408 0.8749683 #>  [777,] 0.7886363 0.7969842 0.8028407 #>  [778,] 0.7563054 0.7619809 0.7651778 #>  [779,] 0.6701998 0.6882292 0.7097852 #>  [780,] 0.5524353 0.5626330 0.6274188 #>  [781,] 0.6867477 0.6981032 0.7169447 #>  [782,] 0.5279354 0.5476963 0.5488831 #>  [783,] 1.0564007 1.0920713 1.1147534 #>  [784,] 0.8546296 0.9293673 0.9503139 #>  [785,] 1.2862190 1.3487894 1.3838227 #>  [786,] 0.8884697 0.8903167 0.9072002 #>  [787,] 0.5993060 0.6125669 0.6208781 #>  [788,] 1.0283774 1.0756508 1.0760060 #>  [789,] 0.9727410 0.9951119 0.9999906 #>  [790,] 0.6117980 0.6456994 0.6477592 #>  [791,] 0.9312645 0.9560108 0.9569102 #>  [792,] 1.0465306 1.0909766 1.0914729 #>  [793,] 0.9404725 0.9429739 0.9568295 #>  [794,] 0.6590509 0.6658791 0.6763955 #>  [795,] 1.0802310 1.0822813 1.1103753 #>  [796,] 0.7007486 0.7014731 0.7070516 #>  [797,] 1.0239352 1.0372344 1.0721517 #>  [798,] 0.6339919 0.6431744 0.7286949 #>  [799,] 1.0520687 1.0530698 1.1656796 #>  [800,] 0.7208518 0.7217458 0.7246355 #>  [801,] 0.5717532 0.5975777 0.6159771 #>  [802,] 0.9789055 1.0506605 1.1064540 #>  [803,] 0.6408472 0.7736341 0.8250772 #>  [804,] 0.8274985 0.8491893 0.8821759 #>  [805,] 0.5870801 0.5927017 0.6470051 #>  [806,] 1.9180341 1.9459520 2.0220995 #>  [807,] 1.1019302 1.1048826 1.1452958 #>  [808,] 0.7080196 0.7107465 0.7237772 #>  [809,] 0.7306420 0.7346647 0.7392183 #>  [810,] 0.9619491 0.9759745 0.9819215 #>  [811,] 0.7134353 0.7410821 0.7671390 #>  [812,] 0.4397050 0.5120447 0.5158111 #>  [813,] 0.5866931 0.6096429 0.6152754 #>  [814,] 0.7999641 0.8117286 0.8357712 #>  [815,] 0.8746795 0.9115486 0.9335750 #>  [816,] 0.7146225 0.8258685 0.8431029 #>  [817,] 1.0041419 1.0242532 1.0347041 #>  [818,] 0.6384520 0.6638735 0.7109461 #>  [819,] 0.7700035 0.7865491 0.8122098 #>  [820,] 1.0418785 1.0676253 1.1292646 #>  [821,] 0.7532504 0.7747172 0.8473076 #>  [822,] 0.9227195 0.9487566 0.9581983 #>  [823,] 0.5875314 0.5942840 0.5965755 #>  [824,] 1.2553628 1.2694406 1.3343760 #>  [825,] 1.2048136 1.3095050 1.3428537 #>  [826,] 0.9132950 0.9771254 1.0106245 #>  [827,] 0.5661952 0.5750395 0.5822294 #>  [828,] 0.6576110 0.6597499 0.6673354 #>  [829,] 0.9136389 0.9287249 0.9310701 #>  [830,] 0.8903167 0.9201335 0.9323082 #>  [831,] 0.6718409 0.6869043 0.6991622 #>  [832,] 0.6859404 0.7035090 0.7048176 #>  [833,] 0.7420225 0.7588907 0.7750704 #>  [834,] 1.0100578 1.0138136 1.0163078 #>  [835,] 1.8535687 1.9005632 1.9730804 #>  [836,] 0.6506995 0.6590509 0.6599847 #>  [837,] 0.9098862 0.9364781 0.9552696 #>  [838,] 0.6858191 0.6927322 0.7062499 #>  [839,] 1.0220518 1.0238183 1.0621965 #>  [840,] 0.5401356 0.5557784 0.5687479 #>  [841,] 0.6776225 0.6874784 0.6990156 #>  [842,] 1.0768269 1.1514249 1.1546014 #>  [843,] 0.6942737 0.7040666 0.7097852 #>  [844,] 1.0846216 1.1308978 1.1327691 #>  [845,] 1.2357066 1.2465444 1.2791774 #>  [846,] 0.6924840 0.6987541 0.7768013 #>  [847,] 0.5996629 0.6371110 0.6737094 #>  [848,] 0.5578011 0.5624516 0.5842370 #>  [849,] 0.9665835 0.9976055 1.0352665 #>  [850,] 0.7457151 0.7990490 0.8223862 #>  [851,] 0.8717785 0.9060917 0.9801779 #>  [852,] 0.7719812 0.7912119 0.7975241 #>  [853,] 0.9266390 0.9300174 0.9645604 #>  [854,] 0.6398836 0.6412565 0.6775025 #>  [855,] 0.7485899 0.7781986 0.8268827 #>  [856,] 0.9786673 1.0056389 1.0444198 #>  [857,] 0.6893189 0.6929399 0.7584337 #>  [858,] 0.5513524 0.5553564 0.5569566 #>  [859,] 0.8832566 0.9021617 0.9851522 #>  [860,] 0.5454917 0.5477646 0.5658402 #>  [861,] 1.1027024 1.1274677 1.1693164 #>  [862,] 0.7058580 0.8086243 0.8343830 #>  [863,] 0.5877672 0.5956524 0.5991496 #>  [864,] 1.2654594 1.3005064 1.3382089 #>  [865,] 1.1711535 1.1903278 1.2141117 #>  [866,] 0.7920784 0.7935786 0.8320460 #>  [867,] 1.0431132 1.0607671 1.0757144 #>  [868,] 1.4160604 1.4465604 1.4920582 #>  [869,] 0.5573569 0.5675909 0.5761090 #>  [870,] 0.6336309 0.6358192 0.6776049 #>  [871,] 0.8684122 0.8849601 0.8927541 #>  [872,] 1.1902981 1.2012097 1.2430482 #>  [873,] 1.2633157 1.2769944 1.2891117 #>  [874,] 1.1157276 1.1936167 1.1995324 #>  [875,] 0.8294768 0.8344419 0.8362827 #>  [876,] 0.5117953 0.5192327 0.5420004 #>  [877,] 0.8030448 0.8216809 0.8369158 #>  [878,] 0.5102163 0.5178139 0.6454089 #>  [879,] 0.6869348 0.6993587 0.7524557 #>  [880,] 0.5584951 0.5687479 0.5827281 #>  [881,] 0.4919623 0.4922360 0.5161984 #>  [882,] 1.1207087 1.1468858 1.1637005 #>  [883,] 1.4398054 1.4933724 1.5107034 #>  [884,] 0.9321315 0.9481810 0.9830945 #>  [885,] 0.7053919 0.7086441 0.7171960 #>  [886,] 0.8671570 0.8687603 0.8753464 #>  [887,] 0.6857948 0.7112517 0.7573017 #>  [888,] 0.8283524 0.8703998 0.9551885 #>  [889,] 0.7289802 0.8437187 0.8561901 #>  [890,] 0.6797562 0.6992552 0.6998319 #>  [891,] 0.6658791 0.6701998 0.6801707 #>  [892,] 1.3072786 1.3114265 1.3533247 #>  [893,] 0.8628560 0.9132747 0.9165879 #>  [894,] 1.5536419 1.5676981 1.5715458 #>  [895,] 1.1455775 1.1833642 1.2430949 #>  [896,] 1.3007429 1.3456632 1.3779056 #>  [897,] 0.5183205 0.5743258 0.6032926 #>  [898,] 1.3950150 1.4845992 1.5350760 #>  [899,] 0.5721419 0.5732198 0.6285374 #>  [900,] 1.0721517 1.1149484 1.1474075 #>  [901,] 0.5700570 0.5922966 0.6117980 #>  [902,] 0.5699897 0.5910700 0.6163551 #>  [903,] 0.5701457 0.5879070 0.5888147 #>  [904,] 0.6237141 0.6314061 0.6545029 #>  [905,] 0.8616950 0.8821900 0.8904956 #>  [906,] 0.8366904 0.8441713 0.8561901 #>  [907,] 0.4796330 0.5170806 0.5385851 #>  [908,] 0.9966891 1.0304489 1.0453836 #>  [909,] 0.6767015 0.7246652 0.7910346 #>  [910,] 1.0512462 1.0634887 1.1017909 #>  [911,] 0.7690241 0.7835180 0.7842613 #>  [912,] 0.6977815 0.7157679 0.7306703 #>  [913,] 0.6552209 0.6862504 0.7353109 #>  [914,] 0.5776104 0.6021255 0.7304606 #>  [915,] 0.7863488 0.8475656 0.8720974 #>  [916,] 1.0116410 1.0413067 1.0591309 #>  [917,] 0.5229253 0.5461736 0.5666734 #>  [918,] 0.7958120 0.8136202 0.8537410 #>  [919,] 0.7987205 0.8064646 0.8194054 #>  [920,] 0.8142671 0.8244194 0.8358189 #>  [921,] 0.6044993 0.6127121 0.6399026 #>  [922,] 0.8370144 0.8698289 0.9121935 #>  [923,] 0.9604526 0.9776841 1.0087750 #>  [924,] 0.6765533 0.7119572 0.7163205 #>  [925,] 0.7317220 0.7530499 0.7623217 #>  [926,] 0.8837417 0.8855182 0.9463822 #>  [927,] 0.7803086 0.8170575 0.8442191 #>  [928,] 0.7599411 0.7889473 0.7904919 #>  [929,] 1.1081530 1.2327271 1.2911965 #>  [930,] 0.7506026 0.8026476 0.8214476 #>  [931,] 0.7451284 0.7653108 0.7774373 #>  [932,] 0.6848409 0.7093980 0.7568239 #>  [933,] 0.6515893 0.6556246 0.6686640 #>  [934,] 0.6678590 0.6910904 0.7055392 #>  [935,] 0.5962874 0.6394549 0.6976758 #>  [936,] 0.7912512 0.8118788 0.8307374 #>  [937,] 1.1736185 1.2208004 1.2446415 #>  [938,] 0.7667661 0.7940193 0.8452377 #>  [939,] 0.6827288 0.7092455 0.7464431 #>  [940,] 0.8604242 0.8726374 0.8772334 #>  [941,] 0.8093763 0.8289961 0.8344334 #>  [942,] 0.6301110 0.6482104 0.6788163 #>  [943,] 0.5850961 0.6228291 0.6632456 #>  [944,] 1.0421754 1.0446976 1.0731588 #>  [945,] 0.7180052 0.7315810 0.7349476 #>  [946,] 0.8506424 0.8683091 0.9293002 #>  [947,] 1.0121738 1.0359470 1.0360698 #>  [948,] 0.5552995 0.5578163 0.5626172 #>  [949,] 0.8668694 0.8669934 0.8724862 #>  [950,] 0.7558192 0.7727489 0.7882429 #>  [951,] 2.2518509 2.2876735 2.3032924 #>  [952,] 1.3832696 1.4011508 1.4280204 #>  [953,] 0.5844173 0.6092434 0.6248032 #>  [954,] 0.8162019 0.8250067 0.8313569 #>  [955,] 0.5101946 0.5432098 0.5471188 #>  [956,] 0.5132561 0.5241539 0.5257055 #>  [957,] 1.0073150 1.0311136 1.0359089 #>  [958,] 0.5265139 0.5461736 0.5519625 #>  [959,] 0.6008707 0.6280089 0.6345307 #>  [960,] 0.6509555 0.7058413 0.7246035 #>  [961,] 2.1073527 2.1123186 2.1230725 #>  [962,] 0.8408857 0.8688455 0.8930393 #>  [963,] 0.5797989 0.5860902 0.5995586 #>  [964,] 1.0524327 1.0525541 1.0626364 #>  [965,] 0.6757378 0.6832628 0.7136841 #>  [966,] 0.5765295 0.5861157 0.5992267 #>  [967,] 0.6782984 0.6786018 0.6802397 #>  [968,] 0.6391293 0.6621010 0.6837852 #>  [969,] 0.7136425 0.7223476 0.7272496 #>  [970,] 0.5855896 0.5870801 0.5888147 #>  [971,] 0.5590485 0.5654247 0.5661557 #>  [972,] 0.9690550 0.9994436 1.0083670 #>  [973,] 0.7691601 0.7728200 0.7825482 #>  [974,] 0.4869863 0.5158111 0.5624893 #>  [975,] 0.6556246 0.6693918 0.6756131 #>  [976,] 1.0606498 1.0695690 1.0897265 #>  [977,] 0.8508795 0.8643554 0.9045820 #>  [978,] 0.5277032 0.5386993 0.5486410 #>  [979,] 0.5850961 0.5925284 0.5991496 #>  [980,] 0.6278819 0.6315640 0.6414373 #>  [981,] 0.5928978 0.6146377 0.6159974 #>  [982,] 0.9526243 0.9714016 1.0005670 #>  [983,] 0.7373603 0.7435158 0.7604729 #>  [984,] 1.1850158 1.2176165 1.2439219 #>  [985,] 0.7098652 0.7231843 0.7240913 #>  [986,] 0.7024012 0.7333383 0.7539410 #>  [987,] 1.8988976 1.9063222 1.9955230 #>  [988,] 0.8699772 0.9439670 0.9859146 #>  [989,] 0.7045640 0.8301865 0.8381168 #>  [990,] 0.6898966 0.6935705 0.7925446 #>  [991,] 0.7808682 0.8238527 0.8348792 #>  [992,] 0.9184891 0.9223074 0.9293687 #>  [993,] 0.7294261 0.8360314 0.8809900 #>  [994,] 0.6341530 0.6459071 0.6519416 #>  [995,] 0.6254579 0.6277272 0.6626872 #>  [996,] 0.5238755 0.5315577 0.5379967 #>  [997,] 1.3163073 1.3237790 1.3668184 #>  [998,] 0.6553880 0.6724235 0.7223482 #>  [999,] 0.6011789 0.6055215 0.6515013 #> [1000,] 0.5779394 0.5873525 0.5902023 #>   # Find the 10 approximate nearest neighbors tof_find_knn(     .data = sim_data,     k = 10,     distance_function = \"euclidean\", ) #> $neighbor_ids #>         [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>    [1,]  845  770  791   44  698  273  336  765  338   277 #>    [2,]  873  936  304  397  677  479  667  680  230   856 #>    [3,]  480  369  471  186  486  911  569  826  178    10 #>    [4,]  288  481  746   93  802  252  120  849   17   291 #>    [5,]  295   33  212  289  484  556  466  851  776   804 #>    [6,]  999  575  125  386   36  211  695  651   20  1000 #>    [7,]  510  644   30  933  275  407  990  189  483   190 #>    [8,]  953  943   55  278  966  576  730  168  342   870 #>    [9,]  657  493  899   38   71  404  268  401  227   307 #>   [10,]  468  930  569  710  486  238  615  186  981   664 #>   [11,]  456  884  872  375  752  423  218  909  738   430 #>   [12,]  314   64  603  790  421  359  800  478  757   740 #>   [13,]  264  889   46  394   63  131   64  314  972    88 #>   [14,]  720  412  780  352  585  226  320  526  945   537 #>   [15,]  475  215   83  793  521  982  217  411  900   946 #>   [16,]  107  465   86  819  560  101  355  523  592   728 #>   [17,]  252  481  220  675  120  672  446   19  612   302 #>   [18,]  613   32   77  606  121  810  944   12  757   314 #>   [19,]  446  843  836  821  189  931  269  164  988   252 #>   [20,]  651  692  125  386   36  575 1000  901    6   370 #>   [21,]  188  914  627  213  101  629  272  417  777   136 #>   [22,]  283  906  426  256  321  992  537  945  595   501 #>   [23,]  421  518  869  575  562  591  566   47   36   999 #>   [24,]  492  682  787  550  912  517  463  679  522   572 #>   [25,]  798  942  932  157  405  640  638  348  561    86 #>   [26,]  597  704  222  191  940   40  895   90  413   735 #>   [27,]  960  126  592  417  213  913  346  523  152   766 #>   [28,]  588  646  169  114  512  669  750  789  768   932 #>   [29,]  673  790  767  901  881  921  406  307  501   963 #>   [30,]  644  933  969    7  173  483  189  510  407   275 #>   [31,]  812   87  648  917  187  165  554  958  571   858 #>   [32,]   18   77  613  314  944  448  606   64   12   871 #>   [33,]  295    5  289  776  212  556  926  484  180   513 #>   [34,]  639  109  763  498  891  702  712  827  119   519 #>   [35,]  815  690  182   92  831  607  382  200  803   715 #>   [36,]  386  695  651    6  165  439   20  575  999   858 #>   [37,]  711  323  113  973  351  726  450  665  353   393 #>   [38,]   71   53  307  657  352    9  310  827  493   956 #>   [39,]  659  400  613  810   32  643  800   64  606   121 #>   [40,]  357   90  702  498  735  863  222  624   75   763 #>   [41,]  954  976  623  829  468  270  155   10   84   348 #>   [42,]  556  289  263  225  851  337  762  466  212     5 #>   [43,]  621  736  311  145  919  395  122  713  924   484 #>   [44,]  601  368  777  336  654  592  126  152  188   960 #>   [45,]  898  864  535   73  134  469  964  440  124   541 #>   [46,]  301  264  972   13  889  413   63  256  769   998 #>   [47,]  349  591  562  593  518   23  695  723  485   165 #>   [48,]  599  579  146  239  936  690  461  479  803   934 #>   [49,]  734  616  161  780  196  507 1000  335  370   760 #>   [50,]  720  531  429  167  881  878  596  767  921   501 #>   [51,]  497   96  751  227  841  310  657  478   89   659 #>   [52,]  647  296  528  788  224  304  241  977  505   392 #>   [53,]  956  583  903  245   38  876  320  880  424   454 #>   [54,]  833  739  979  342  943  604  549  995  384   776 #>   [55,]  730  953  966    8  278  342  943   99  725   384 #>   [56,]  539  879  396  724  274  885  962  974  850   271 #>   [57,]  680  799  241  667  839  304    2  977  397   757 #>   [58,]  315  223   69  742   94  946  303  473  521   215 #>   [59,]  253  701  433  914  764  860  627  485  447   473 #>   [60,]  718  817  113  323   74  162  668  108  489   747 #>   [61,]  694  370  939  857  616  715  142  333  692   719 #>   [62,]  509  228  901  625  699  234  461   20  727   359 #>   [63,]  264  394  192  889  800   64  191   13  413    46 #>   [64,]  800  314   12  131  192  264   63  394  643    32 #>   [65,]  701  398  957  930  829  473  238   59  886    84 #>   [66,]  487  452  112  347  238  473  118  833  826   534 #>   [67,]  500  807  442  408  770  608  277  136  584   929 #>   [68,]  373  462  594  193   71  542  657  741  975   341 #>   [69,]  315  416   58  398  764   94  914  174  708   941 #>   [70,]  445  684  627  416  447   80  708  204  914   764 #>   [71,]  657  310   38  103  373  504    9  519  542   827 #>   [72,]  623  842   41  560  296  829  241  954  819   528 #>   [73,]  864  134  617   45  564  219  266  458  884   115 #>   [74,]   60  817  718  358  530  820  258  325  489   162 #>   [75,]  624  823  712  735  863  754  876  702  979   498 #>   [76,]  643  400   63  435  413   46  800   26  264   895 #>   [77,]   32   18  871  613  376  314   12   64  183   800 #>   [78,]  781  137  621  122  736  709  958  983  924   322 #>   [79,]  383  250  655  125  152  728  200  668  575   355 #>   [80,]  447  761  204  445  123  684  347  253   70    59 #>   [81,]  844  240  535  849   93  865  882  380  199   743 #>   [82,]  197  636  545  661  492  269  923   24  371   133 #>   [83,]  620  521  411  349  678  215  593  475  486    47 #>   [84,]  886  954  930  591  797  154  829  723  107   560 #>   [85,]  309  988  732  824  743  446  882  931  344   117 #>   [86,]  101  433  346  819   16  701  561  942   25   640 #>   [87,]  917  554   31  812  571  974  389  274  187   292 #>   [88,]  889   13  264  321   63  256  394  426  906    22 #>   [89,]  519  310  763  498   96  497   90   71  827    34 #>   [90,]  357   40  674  191  498  863   89  735  763   192 #>   [91,]  488  555  631  362  986  978  522  558  249   948 #>   [92,]   35  815  409  984  182  520  607  628  825   689 #>   [93,]  574  481  849    4  506  586   17  802  431   746 #>   [94,]  946  605  941  354  764  860  742  331  315   306 #>   [95,]  679  568   99  492  778  931  159  953  852   269 #>   [96,]  827  497  454  227  754  876   51  981  823   478 #>   [97,]  693  106  343  326  363  925  310  504  519   390 #>   [98,]  892  997  738  218  330  769  992  256  456   731 #>   [99,]  730  538  679  966   55   95  953  778  233   564 #>  [100,]  120  984  288  990  291    7  697    4  927   510 #>  [101,]   21   86  465  777  188  592  213   27  523   445 #>  [102,]  740  570  186  349  122  911  828  678   47   841 #>  [103,]  504  887   71  779  373  925  519  310  891   547 #>  [104,]  214  300  220  662  120  849  481  252  893   267 #>  [105,]  317  273  512  324  729  114  932  508  332   698 #>  [106,]  693  343   97  326  285  947  788  925  363   310 #>  [107,]  560   16   84  436  728  465  819  566  355   886 #>  [108,]  973  113  711  718  668  323  374   79  654   681 #>  [109,]  891   34  639  604  424  827  808  342  796   472 #>  [110,]  646  378  502  746    7  181  407  288  990   514 #>  [111,]  571  854  974  554  999  587  902  904  879   217 #>  [112,]  427  957   66  238  473  615  178  480  315   452 #>  [113,]  711  108  973  323  668   37  747  718   60   162 #>  [114,]  512  483  588  645  811   28  646  254   30   434 #>  [115,]  563  327  263  538  180  134  564  289  159   568 #>  [116,]  183  128  687  871  290  994  137  376  284   301 #>  [117,]  578  743  267  506  573  672  688  586  541   988 #>  [118,]  569  534  312  238  441  468  626  957  664   472 #>  [119,]  432  763  498   34  702  639  859  712  455    40 #>  [120,]  252  214  481  220  139   17  697  104  927   662 #>  [121,]  810   18  613  318   39   77   32  659  606   744 #>  [122,]  781  143   78  621  102   43  736  983  137    31 #>  [123,]  761  536  524   80  452  347  739  487  447   293 #>  [124,]  864   45  513  535  543   73  266  865  198   883 #>  [125,] 1000    6  575  386   20  651  523   36  152    79 #>  [126,]   27  960  565  592  801  152  417  188  913   766 #>  [127,]  385  703  422  631  727  816  759  625  963   950 #>  [128,]  290  116  137  994  958  284  709  781  183   143 #>  [129,]  402  255  297  784  144  243  305  276  414   229 #>  [130,]  364  532  768  344  821  725  928  169  460   931 #>  [131,]  394  921  673  998   64  264  192  390  314    29 #>  [132,]  176  837  286  830  786  726  660  495  144   474 #>  [133,]  339  923  580  163  714   82  676  517  568    24 #>  [134,]  266  115  564  541  198  864  964  159  327   263 #>  [135,]  419  119  443  432  451  859  166  822  896   410 #>  [136,]  629   21  627  914  188  353  941  807  777   428 #>  [137,]  709   78  128  958  781  290  143  917  752   122 #>  [138,]  230  757  667  566  977  401  421  899  869   304 #>  [139,]  220  476  120  866  214  252  716  189  991   371 #>  [140,]  282  707  429  955  671  968  978  691  720   719 #>  [141,]  691  276  978  522  488  589  671  968  707   996 #>  [142,]  526  818  780  616  412  719  760  196  370    49 #>  [143,]  917  122  709   87  290  128  137   31  850   781 #>  [144,]  402  660  129  176  235  582  474  755  276   600 #>  [145,]  484   43  180  943   54  538  384  995  924   736 #>  [146,]  934  579  239   48  232  690  681  509  257   599 #>  [147,]  895  313   76  540  769   26  330  400   88   961 #>  [148,]  929  408  708  324  729  834  867  761  524   762 #>  [149,]  847  803  899  231  208  232  934  959  936   401 #>  [150,]  851   42  354  696  556  337  225  212  466   148 #>  [151,]  272  174  706  391  807  353  217  136  748    21 #>  [152,]  592  383  523  960  801  125   27 1000  417   985 #>  [153,]  582  660  868  637  144  297  235  175  474   129 #>  [154,]  797  930   84  886  723   10  710  562  954   591 #>  [155,]  751  270  710  954  810  369   10   41   51   468 #>  [156,]  795  826  455  859  480  737  569    3  626   119 #>  [157,]  798  942   25  312  405  932  561  640  348   332 #>  [158,]  172  666  441  669  542  626  796  789  822   341 #>  [159,]  852  568  263  198   95  266  778  180   99   289 #>  [160,]  897  577  860  935  766  813  306  194  331   253 #>  [161,]  507  546  366  766  734  346   49  335  533   635 #>  [162,]  668  630  699  748  747  221  489  999    6   575 #>  [163,]  676  834  337  705  912  517   24  682  225   568 #>  [164,]  910  344  581   19  197  931  189  661  988   821 #>  [165,]  648  695  439   36  880   31  903  386  187   812 #>  [166,]  451  298  419  552  443  280  460  181  618   364 #>  [167,]  596  531   50  406  767  881  998  970  284   656 #>  [168,]  356  794  635  576    8  236  278  848  836   546 #>  [169,]  588  768  618  669  280  181  808   28  460   130 #>  [170,]  820  184  195  853  228  461  234  359   62   448 #>  [171,]  430  784  255  501  399  752  759  878  596   972 #>  [172,]  158  789  441  626  669  666  822  410  472   796 #>  [173,]  969  649  855   30  716  760  644  203  689   915 #>  [174,]  272  151  391  706  605  217  215  914  411   946 #>  [175,]  474  235  663  209  950  496  377  582  857   939 #>  [176,]  132  837  144  726  286   91  660  235  600   474 #>  [177,]  937  286  923  600  132  837  339  786  714   328 #>  [178,]    3  480  615  186  486  223  112  471  919   553 #>  [179,]  623   41  842  348  829   65  976   72  441   666 #>  [180,]  145  289  543  563  115  513  159  538  549   484 #>  [181,]  280  618  460  378  169  588  746  821  768   887 #>  [182,]  815  831  965  505  381  231  585  690   35   607 #>  [183,]  116  871  376  128  290  687  242  994   77   143 #>  [184,]  170  853  799  944  606  448  613   18  359    32 #>  [185,]  782  320  196  955  439  734  996  707  720   531 #>  [186,]  471  486  911  570    3  102  710  678  615   981 #>  [187,]  292   31  897  648   87  935  165  812  160   439 #>  [188,]  777   21  101  417  152  213  985  592  221    27 #>  [189,]  644  716  875  510  843  476   19   30    7   969 #>  [190,]  407  741  933  594  462  275  967  990  378   975 #>  [191,]  387  192  971   90  735  413  828  863   63   674 #>  [192,]  497  191  800  971  390  387   64  454   63   131 #>  [193,]  207  975  259  533  405  493  260  642  638   640 #>  [194,]  420  306  787  160  572  682  870  331  897   558 #>  [195,]  170  491  820  461  228  184  599  448  516   509 #>  [196,]  185  320  734  719  707   49  370  780  955   720 #>  [197,]   82  661  910  467  636  545  269  875  164   838 #>  [198,]  159  266  852  134  263  568  578  824  180   115 #>  [199,]  602  731  380  499  414  844  745  300  440   243 #>  [200,]  250  381  993  717  715  965   79  383  388   182 #>  [201,]  497   89  498   90   51  192  841  763  400   191 #>  [202,]  907  572  577  782  766  801  319  439  185   196 #>  [203,]  689  173  483  855   30  360  915  379  434   261 #>  [204,]   80  684  347  447  761  445   70  312  949   123 #>  [205,]  861  984  382  520   92  628  299  611  815   477 #>  [206,]  327  225  444  115  696  134  337  563  263    42 #>  [207,]  259  533  193  507  366  493  840  346  758   260 #>  [208,]  959  231  232  401  899  566  355  381  404   149 #>  [209,]  857  939  175  991  663  257  377  474  866   950 #>  [210,]  840  758  880  259  245  260  956  635  576   207 #>  [211,]  614    6  695  485  999  386   36  813  213   523 #>  [212,]    5  466  851  295  556   33  804  289  762   303 #>  [213,]  523  417  433   21  766   27  813  101  211   346 #>  [214,]  104  120  220  252  481  300  139  849  662    17 #>  [215,]  521   83  411   15  946  174  620  217  605   742 #>  [216,]  726  333  362  948  692  631  985  694  319   450 #>  [217,]  411  391  605  485  111  813  272  793  521   211 #>  [218,]  738  548  892  992   98  243  334  255  456   745 #>  [219,]  437  924  938  926  736  367  372  641  617   145 #>  [220,]  214  139  252  104  120   17  300  634  267   529 #>  [221,]  654  706  162  188  748  777  465  551  125   272 #>  [222,]  704   40  367   26  365  597  449  265  735   316 #>  [223,]   58  178  620  494  742  521  315  919  615   544 #>  [224,]  392  993  717  505  528  647  462   68  404   296 #>  [225,]  337  696  912  444   42  263  517  327  354   163 #>  [226,]  412  515  526   14  945  780  920  302  510   275 #>  [227,]  478  603  981   96  664  880  758  591  869   827 #>  [228,]  461   62  234  509  359  448  901  790   29   673 #>  [229,]  688  745  243  683  414  602  573  276  305   541 #>  [230,]  397  304  138  667  959  566  436  856  479   916 #>  [231,]  232  404  208  899  959  505  585  381  847   401 #>  [232,]  231  208  934  965  959  404  847  401  585   149 #>  [233,]  691  782  550  996  522  955  249  966  572   558 #>  [234,]  359  854  228  994  518  790   62  587  853   421 #>  [235,]  474  175  950  402  144  663  582  857  129   877 #>  [236,]  928  508  168  356  332    8  836  467  532   953 #>  [237,]  265  322  656  940  805  334  597  458  704   387 #>  [238,]  615  473  678   10  253  468  930  957  118   486 #>  [239,]  934  501  146  537  673  149  921   48  426   131 #>  [240,]  552  365  783  262  574  802  313  922  908   431 #>  [241,]  977  680   57  304  270  667  285  397  947    72 #>  [242,]  183  525  871  475  376  116  853  318  329   632 #>  [243,]  548  683  229  745  602  414  688  440  297   246 #>  [244,]  206  271  658  563  653  115  806  444  544   134 #>  [245,]  583  424  576  956  635  210  260  756   53   840 #>  [246,]  414  602  297  440  243  548  683  229  755   129 #>  [247,]  318  376  710  911  486  740  102  369   83   871 #>  [248,]  940  413  617  456  597  435  423  301  237    46 #>  [249,]  558  996  287  389  488  812  907  631  978   858 #>  [250,]  200  381  717  993  383  965   79  355  231   715 #>  [251,]  728  325  655  699   79  681  479  959  397   856 #>  [252,]   17  481  120  220  988  214   19    4  139   104 #>  [253,]  935   59  433  160  860  756   80  473  238   485 #>  [254,]  557  594  933  190  114  407  915   30  483   765 #>  [255,]  784  129  297  402  243  548  305  171  745   430 #>  [256,]  906  769  889   22  430  394  264   46  283   992 #>  [257,]  399  759  816  950  939  857  377  209  146   681 #>  [258,]  323   60  113  368  711  654   37  108  489   530 #>  [259,]  207  533  840  210  260  758  507  635  366   193 #>  [260,]  259  245  840  533  424  210  827  207  956   891 #>  [261,]  689  403  409  360  722  855  476  716  875   173 #>  [262,]  888  862  783  922  832  330  731  365  574   846 #>  [263,]  568  289  159  852  538  115   42  556  563   679 #>  [264,]   13  889  394   63   46  131   64  314  998   256 #>  [265,]  805  237  322  980  735  863  458  316  995   597 #>  [266,]  578  159  134  198  564  541  778  180  117   864 #>  [267,]  529  117  634  300  743  918  988  220  573   578 #>  [268,]  954  657    9  751  947  977  528   51  270   640 #>  [269,]  836  492  463  636  467  550  730   19   95   679 #>  [270,]  751  155  954  977  268  810  947  241   41    51 #>  [271,]  850  653  709  544  917  287   87  143   56   539 #>  [272,]  706  391  151  174   21  914  217  813  188   605 #>  [273,]  774  913  932  791   25  798  942  684  811    86 #>  [274,]  974  571   87  879  902  554  389  558  812   948 #>  [275,]  407  990  933  510  190  515  741    7  779   502 #>  [276,]  141  909  229  589  905  691  986  488  573   683 #>  [277,]  929  408  126  565  770  845  136  324  708   629 #>  [278,]  966  955  730  583   55    8  782  168  848   576 #>  [279,]  609  722  830  495  338  818  855  476  261   360 #>  [280,]  618  181  822  669  169  166  419  460  887   588 #>  [281,]  910  164  633   85  988  581  792  732  514   545 #>  [282,]  140  955  707  671  691  966  559  302  278   522 #>  [283,]   22  426  906  537  945  595  920  256  321   501 #>  [284,]  994  406  958  167  290  128  596  767  490   423 #>  [285,]  947  106  241  270  326  751  343  788  977   268 #>  [286,]  837  132  176  726  830  177  495  340  786   923 #>  [287,]  249  389  558  890  488  589   87  274  986   812 #>  [288,]    4  291  481  802  746  697  100  120  849    93 #>  [289,]  556  263    5  563  484   42  295  180   33   568 #>  [290,]  128  994  958  917  116  137  284  294  554   143 #>  [291,]  697  927  502  288  746  990  431  515  120   481 #>  [292,]  187  897   87  306  411   31  860  274  311   395 #>  [293,]  549  833  928  524  739   54  776  236  943   123 #>  [294,]  587  554  571  290  974  904  994  917  958   854 #>  [295,]   33    5  289  212  776  556  484  926  804   180 #>  [296,]  528   52  224  560  647  652  993  107   72   392 #>  [297,]  129  414  255  246  243  402  548  784  602   229 #>  [298,]  808  639  166  451  364  109  443  342   34   604 #>  [299,]  611  607  861  520  945  927  920  515  893   697 #>  [300,]  104  414  267  220  602  634  529  214  918   229 #>  [301,]  687   46  972  413  423  116  314   64  998   871 #>  [302,]  559  612  848  675  794  843  282  779  547   846 #>  [303,]  851  713  466  742  354  315  395  919  311   212 #>  [304,]  397  230  667  977  138  680    2  528  936   959 #>  [305,]  968  429  745  140  229  402  688  255  129   499 #>  [306,]  897  420  194  331  860  160  292  813  187   890 #>  [307,]  673  921   38   29  603   53  401  478  790   869 #>  [308,]  464  358  422  816  817  457  385  950  127   703 #>  [309,]   85  732  814  931  824  344  778  446  364   852 #>  [310,]   71   89  519  657  504   38  103  390   96    51 #>  [311,]  395  713  919   43  870  292  187  484  935   306 #>  [312,]  157  347  949  118  348  534  332  798  204    25 #>  [313,]  922  908   97  363  888   26  262  365  240    90 #>  [314,]   64  448   12  800   32  131   77  264   13   359 #>  [315,]  473  742   58  303  416   94  764   69  860   521 #>  [316,]  449  612  832  559  805  846  265  672  674   675 #>  [317,]  105  729  273  952  750  324  932  204  684   512 #>  [318,]  247  744  871   77  121   18   32  376  183   242 #>  [319,]  333  801  616  202  572  818  772  216  719   550 #>  [320,]  720  185  196  335  734  955  531   53  782   848 #>  [321,]  426   22  283  906  908   88  595  888  256   363 #>  [322,]  805  656  458  237  265  671  980  970  686   968 #>  [323,]  113   37  973  711  108  718  351   60  817   747 #>  [324,]  729  148  105  929  503  453  277  204  508   408 #>  [325,]  251  873  856  397  728  479    2  304  230   699 #>  [326,]   97  310  542  343  106  504  519  947   71    89 #>  [327,]  444  115  538  986  555  890  517  263  225   568 #>  [328,]  600  937  425  177  650  874  714  755  582   660 #>  [329,]  525  242  871  318  183  687  744  301  116   491 #>  [330,]  769  888  731  262  256  704  992   98  334   738 #>  [331,]  813  897  860  306  605  764  914  160  629   194 #>  [332,]  508  949  928  236  157  808  312  811  356   768 #>  [333,]  319  216  801  616  694  719  692  818  202   907 #>  [334,]  237  458  745  322  704  449  499  738  265   805 #>  [335,]  734  533  848  780  507  320   49  161  412   546 #>  [336,]   44  791  383  592  622  655  960  601  152   915 #>  [337,]  696  225  163  676  834   42  912  517  705   263 #>  [338,]  845  609  279  601  855  336  722   44  360   173 #>  [339,]  133  580  923  714  163   82  676  177  517   874 #>  [340,]  989  912  885  724  517  396  555  428  787   682 #>  [341,]  542   68  158  666  326  373  638  669  887   594 #>  [342,]  604  979   54   55  424    8  583  943  576   245 #>  [343,]  106  693   97  326  925  504  310  363  788   390 #>  [344,]  931  164  661  532   19  446  130  910  836   725 #>  [345,]  773  785  516  377  663  951  868  153  997   175 #>  [346,]  366  507  546  161  207  259  960  523  405   766 #>  [347,]  452  487  204  123  312  761   80  949  447   473 #>  [348,]  640  561  798  441  157  819   25  312  942   829 #>  [349,]   47  593  485  695  102  165  518  562  570    83 #>  [350,]  361  247  318  494  242   83  121  475  376   486 #>  [351,]  973   37  323  374  495  726  711  108  132   113 #>  [352,]  390   14  921   38  595  585  847  307  131   720 #>  [353,]  450  188  629  136  272  428  711  391  706   985 #>  [354,]  466  851   94  303  225  941  420  306  556   212 #>  [355,]  493  401  231  208  899  404  959  381  250   566 #>  [356,]  168  546  642  635  507  811  236  794  405   533 #>  [357,]   90   40  547  674  863  763  702  498  519   735 #>  [358,]  817  464  809  457  820  747  308  489  482    60 #>  [359,]  234  790  518  228  421  854  448   12  994    23 #>  [360,]  855  875  716  476  261  403  689  644  173   189 #>  [361,]  350  247  900  632   83  475  376  593  562    15 #>  [362,]  948  631  907  558  216  902  249   91  885   389 #>  [363,]  925  922  504  390   97  908  595  103  547   310 #>  [364,]  532  725  130  298  814  549  931  293  446   778 #>  [365,]  222  574  552  586  262  704  865   40  832   451 #>  [366,]  346  546  507  161  207  259  405  533  840   913 #>  [367,]  384  222  265  624  641  924  702  543  938    40 #>  [368,]  601   44  654  711  336  655  108  777  113   973 #>  [369,]    3  911  471  186  480  737  486  553  710   841 #>  [370,]   61  694  196   49  692  616   20  142  651   780 #>  [371,]  685  636  634  918  529  786  522  269   82   550 #>  [372,]  641  938  437  924  736  122  983  553  781   911 #>  [373,]   68  504   71  103  887  741  585  462  657   967 #>  [374,]  495  973   61  694  216  108  333  985  711   818 #>  [375,]   11  884  872  456  653  469  752  909  738   548 #>  [376,]  871  183  593  632   77  853  116  518  247   349 #>  [377,]  663  257  950  209  175  816  399  235  857   939 #>  [378,]  502  887  407  181  741  190  967  275  779   933 #>  [379,]  483  434  698  203  514  855  360  875   30   910 #>  [380,]  743  199  882  844  964  602  440  541  117   267 #>  [381,]  250  231  993  200  959  208  717  505  355   232 #>  [382,]  527   35  205  520  815  861  611   92  690   299 #>  [383,]  649  760  152   79  250   49  616  370  592    61 #>  [384,]  367  549   55   54  995  145  979  342  943   778 #>  [385,]  703  127  631  422  457  948  362  904  902   389 #>  [386,]   36  651 1000  695    6  125  439  577   20   575 #>  [387,]  191  998  971  828  192  413  903  167  423   656 #>  [388,]  200  409  715  250   35  681  655  108  993   251 #>  [389,]  812  554  249  571  974  287   87  858  958   948 #>  [390,]  352  192  394  310  363  131  925  921   38   497 #>  [391,]  217  605  272  813  331  706  411  174  914   629 #>  [392,]  224  993  717  652  915  462  647  182  381   505 #>  [393,]  500   37  286  726  438  396  937  351  837   724 #>  [394,]  131  264  921  998  889   63  390  192   13    64 #>  [395,]  311  713  919  742   43  292  935  187  303   122 #>  [396,]  724  885   56  340  539  989  438  962  362   274 #>  [397,]  304  230  856  667    2  138  479  680  977   916 #>  [398,]  701   70  416  684  445   59  914   69   65   764 #>  [399,]  759  257  816  950  509  415  422  727  501   127 #>  [400,]  643   39   76  659  800   63   64  201  192   264 #>  [401,]  566  208  899  959  869  493  355  231  307   404 #>  [402,]  129  144  255  305  297  235  276  474  229   784 #>  [403,]  261  360  722  689  409  476  875  855  139   716 #>  [404,]  899  231  505  585  847  355  208    9  232   401 #>  [405,]  942  366  798  193  157  811  546  207   25   642 #>  [406,]  284  167  596  767  790   29  881  994  901   903 #>  [407,]  190  933  275  990  741  594  378    7  510   462 #>  [408,]  929  277  705  148  834  708  324   67  163   770 #>  [409,]  261  689  403   92  722  715  984  360  388   991 #>  [410,]  472  789  808  639  172  298  534  669  949   419 #>  [411,]  217  485  521  605  292  860  897   83  813   946 #>  [412,]  526  226  780   14  142  515  335  140  720   320 #>  [413,]  387  191  940  248  423  998  301  800   63   597 #>  [414,]  602  229  243  246  297  683  688  745  440   300 #>  [415,]  878  877  537  429  759  719  963  939  857   881 #>  [416,]  761  764   70   80  914  315   59  627  204   123 #>  [417,]  213  523  766  577  801 1000   27   21  813   152 #>  [418,]  753  398  151  174  465  272  706   69  101   136 #>  [419,]  166  443  822  280  460  298  451  669  410   618 #>  [420,]  194  306  870  787  536  682  160  897  331   890 #>  [421,]   23  869  518  603  723  566  562  790  359   591 #>  [422,]  127  816  703  625  759  509  385  727  399   904 #>  [423,]  998  656  284  687  413  430  387  167  301   752 #>  [424,]  245  956  583  876  827  979  260  891  576   604 #>  [425,]  328  937  600  650  177  874  868  755  582   714 #>  [426,]  283  906   22  595  945  537  321  239  352   394 #>  [427,]  112  494  957  178  223  615  480   58  486    66 #>  [428,]  629  724  941  989  885  331  353  565  136   340 #>  [429,]   50  968  878  537  305  720  140  415  671   531 #>  [430,]  171  656  998  167  423  968  501  256   50   429 #>  [431,]  675  574  746  547  832  802  862   17  552   612 #>  [432,]  119  702  859  498  712  624   34  763  639    40 #>  [433,]  213  840  253   59  523  758  160  210   86   346 #>  [434,]  698  379  855  875  483   30  173  203  512   114 #>  [435,]  643  248   76  413  940  597   26  400  800   617 #>  [436,]  699  630  566  916  575   23  230  728  421   107 #>  [437,]  736  924  938  372  983   43  219  145  641   919 #>  [438,]  608  584  442  396  724  500  539   56  428   393 #>  [439,]  648  858  577  165  907  386  782  185   36   695 #>  [440,]  683  602  541  243  246  964  414  548  229   688 #>  [441,]  666  158  172  348  626  796  118  789  157   472 #>  [442,]  584  608  438  696  500  340  989   67  428   337 #>  [443,]  419  451  298  166  364  130  410  460  639   883 #>  [444,]  327  890  986  555  225  517  912  287  787   558 #>  [445,]  684   70  447  627   80  204  701   27   59   101 #>  [446,]  725  931   19  821  532  988  836   17  344   364 #>  [447,]   80  445  684  204   70  627  761   59  433   253 #>  [448,]  314  359  228   32  613   12  590  461   64   757 #>  [449,]  316  586  832  672  612  506  805  265  559   334 #>  [450,]  985  353  216  711  665  362  188  948  801   726 #>  [451,]  166  298  443  702  419  364  552  432  119   639 #>  [452,]  347  487  123   66  761  473  416  739  204    80 #>  [453,]  503  524  661  463  236  679  467  928  804   953 #>  [454,]  971  754  876  828   96  823  956  497  903   478 #>  [455,]  626  569  712  826  480  795  471   34  498   823 #>  [456,]   11  423  248  738  940  884  237  218  430   413 #>  [457,]  809  962  902  703  904  385  482  974  879   587 #>  [458,]  322  686  564  805  265  334  237  656  745   688 #>  [459,]  700  765  652  557  622  791  774  915  254   825 #>  [460,]  181  169  419  280  166  588  130  618  821   768 #>  [461,]  228  509   62  448  599   48  239  901  146   759 #>  [462,]  741  190   68  373  407  594  585  275  933   975 #>  [463,]  838  467  492  572  836  269  953  679   24   550 #>  [464,]  308  358  817  718  323   37  457  816  351    60 #>  [465,]   16  101  107   86  221  886  829  777  819    21 #>  [466,]  536  212  354  484  851  303    5  870  556   420 #>  [467,]  838  463  836  503  269  236  168  356  772   546 #>  [468,]   10  930  664  981  569  954  591  238  710   570 #>  [469,]  375  898   45  884   11   73  872  653  755   892 #>  [470,]  708  398   69  416   70  729  204  867  148   684 #>  [471,]  911  186    3  369  841  480  823  712  486   570 #>  [472,]  534  808  410  639  604  109  796  298  756   626 #>  [473,]  238  315  742  253  615  452   59  678  416   347 #>  [474,]  235  175  866  663  402  857  991  496  950   877 #>  [475,]   15  632   83  982  376  593  111  793  242   143 #>  [476,]  716  875  360  139  189  855  772  818  644   866 #>  [477,]  520  815  741  462  595  693  925  504  831   373 #>  [478,]  603  227  880  454  869  981   96  307  754    53 #>  [479,]  936  579  856  230  397  146    2  959   48   599 #>  [480,]    3  826  569  471  186  455  369  957  486   178 #>  [481,]  252  120   17    4  849  214  662   93  288   220 #>  [482,]  962  809  457  294  879  587  850  974  571   904 #>  [483,]   30  379  203  114    7  434  557  644  514   933 #>  [484,]  145    5  289  466  870  538  713   43  311   943 #>  [485,]  411  211  935  614  860  813  349  897  605   187 #>  [486,]  186  615  678  710    3   10  911  620  471   238 #>  [487,]  452  347   66  123  739  534  833  949  312   761 #>  [488,]   91  555  249  558  986  287  141  978  589   996 #>  [489,]  748  793  162  747  706  809  668  982  113   630 #>  [490,]  596  589  963  996  881  978  167  767  389   958 #>  [491,]  195  972  170  687  525  516  301  820  461   228 #>  [492,]   24  679  463  682  269  550   95  787  522   636 #>  [493,]  207  758  401  355    9  869  193  259  307   533 #>  [494,]  223  427  350  215   83  620  486   58  521   112 #>  [495,]  374  818  279  830  837  609  333  726  216   319 #>  [496,]  474  175  637  786  660  866  830  918  991   235 #>  [497,]  192   96   51  454  841  971   89  201  310   754 #>  [498,]  763  712  702   34  432   40   75  823  624    89 #>  [499,]  745  992  672  305  688  334  731  662  199   893 #>  [500,]  608   67  393  438  428  807  353  442  584   136 #>  [501,]  767  878  537   50  881  239   29  921  596   167 #>  [502,]  378  291  990  746  275  407  741  887  697   510 #>  [503,]  453  524  463  467  838  236  508  536  661   928 #>  [504,]  925  103  373   71  887  310  363  519  352   326 #>  [505,]  831  404  231  899  847  182  585  381  803   224 #>  [506,]  586  117  672  449  743  578   93  574  865    17 #>  [507,]  546  161  366  533  346  207  335  259  734    49 #>  [508,]  332  236  928  949  811  356  503  467   80   768 #>  [509,]   62  625  901  727  228  461  422  759  399   146 #>  [510,]    7  275  843  644  189  990  515  407  933    30 #>  [511,]  482  749  962  879  358  850  982  457  809   793 #>  [512,]  114  645  434  105  483  588  811   28  768   508 #>  [513,]  543  180   33  776  295  549  814  778  367   384 #>  [514,]  581  483  379    7  645  164  910  100  644   189 #>  [515,]  226  275  990  412  526  697  510  927   14   945 #>  [516,]  491  785  195  872  972  171  997  399  461   951 #>  [517,]  912  555   24  787  682  989  340  444  986   492 #>  [518,]  562  593   23  421   47  359  349  854  234   632 #>  [519,]   89  763  310  103   71  357   34  504   90   891 #>  [520,]  477  815  299  861  607  611  182  990  462   595 #>  [521,]  620   83  215  411  742  946  678  485  605   217 #>  [522,]  550  707  141  691  233  978  488  955   91    24 #>  [523,]  213  417 1000  125  346  152  433  766  386   592 #>  [524,]  453  503  536  123  761  804  293  762  928   236 #>  [525,]  242  329  491  183  871  853  687  116  475   376 #>  [526,]  412  780  226  142  515   14  649  335  965   969 #>  [527,]  382  690   35  579   48  803  815  733  677   831 #>  [528,]  296  899  224  560  404  505  304  977  355   959 #>  [529,]  918  634  267  685  637  371  300  220  786   214 #>  [530,]  718  323   60  108  817  388  681  973  113   351 #>  [531,]   50  970  720  167  671  320  903  185   53   596 #>  [532,]  725  364  931  836  446  236  814  953  549    55 #>  [533,]  207  259  507  335  260  193  546  366  161   975 #>  [534,]  472  756  604  118  639  739  312  109  664   487 #>  [535,]  380   45  898  864  964  199  440  541  743   124 #>  [536,]  870  123  466  524  420  761  943  739  194   484 #>  [537,]  429  878  501  415   50  945  920  283   14   720 #>  [538,]   99  870  679  568  484  233  263  943  327   115 #>  [539,]   56  724  885  396  274  879  890  428  271    94 #>  [540,]  895  617  248  147   98  940   26  330  769   704 #>  [541,]  683  440  964  573  688  564  229  602  578   266 #>  [542,]  341  158   71  796  887   68  373  326  519   657 #>  [543,]  513  180  549  367  384  778  776  814   33   295 #>  [544,]  983  143  271   43  395  122  919  437  736   311 #>  [545,]   82  197  923  792  636  661  834  910  133   705 #>  [546,]  507  161  366  346  356  635  533  405  259   207 #>  [547,]  846  675  832  357  612  302  103  862  431   674 #>  [548,]  243  218  745  683  297  602  255  246  440   414 #>  [549,]  293  384  778  943  953   54   55  814  532   776 #>  [550,]  522   24  572  492  707  233  787  682  463   955 #>  [551,]  598  221  630  436  748  162  465  706  699   916 #>  [552,]  166  574  431  365  451  802  547  746  675   280 #>  [553,]  737  471  369  372  911    3  178  795  641   938 #>  [554,]  571  974  917   87  812  389   31  294  958   587 #>  [555,]  986  488  517   91  444  522  890  787  327   905 #>  [556,]   42  289    5  851  563  466  212  263  484   295 #>  [557,]  254  483  203  825  765  933  114  915  190    30 #>  [558,]  249  890  287  362  488  907  948  996  389   274 #>  [559,]  302  612  316  848  278  966  282  674  671   805 #>  [560,]  107   84   16  436  528  138  728  954  819   566 #>  [561,]  640  819  348  942  157  758  798  840   86   193 #>  [562,]  518  593  723   47   23  421  591  349  632   710 #>  [563,]  115  289  926  556  180  484  263  538  145   327 #>  [564,]  458  686  266   99  541  573  115  134  538   578 #>  [565,]  126  801  417  629  766  319   27  985  194   572 #>  [566,]  401  575  959  869  208   23  436  421  138   355 #>  [567,]  409  209  663  403  722  496  377  175  987   984 #>  [568,]  263  159  679  852   95  538  676   99  289   492 #>  [569,]  480  118  455   10  468  664    3  626  186   981 #>  [570,]  981  102  186  678  935  754  740  880   47   349 #>  [571,]  974  554  389  902  812  917   87  274  111   294 #>  [572,]  202  550  766  782  955  319  463  734  838   194 #>  [573,]  688  229  541  578  683  276  141   99  117   564 #>  [574,]  431  675   93  586  832  552  365  506  547   802 #>  [575,]    6  125  566   23   36   20  386  869  999   651 #>  [576,]  635  245  756  583  168    8  424  604  278   840 #>  [577,]  439  202  907  160  386  766  648  417  782  1000 #>  [578,]  117  266  573  778   99  541  506  743  159   564 #>  [579,]   48  936  803  690  146  479  149  599  677   239 #>  [580,]  339  133  714  923  964  529  874  267  918   685 #>  [581,]  514  164  910    7   19  189  821  483  510   644 #>  [582,]  153  144  660  868  235  175  474  176  132   402 #>  [583,]  245  956  424  576  278   53  979  848  876   342 #>  [584,]  442  438  608  696  340  500  937  989  393   396 #>  [585,]  404  847  231   14  505  373  352  232  965   899 #>  [586,]  506  449  574  832  672  865  316  675   93   612 #>  [587,]  294  904  571  554  854  974  111  994  809   902 #>  [588,]  169  768   28  618  181  669  646  280  114   460 #>  [589,]  490  752  978  488  141  249  996  287  389   276 #>  [590,]  667  839  757  149  448  936  659  138  677    12 #>  [591,]  723   47   23  869  562   84  421  227  603   886 #>  [592,]  152  960   27  126  523  101  346  913  777   213 #>  [593,]  518  562  349  632   47  376  854   23   83   999 #>  [594,]  975  190  933  642  967  407  638  462   68   741 #>  [595,]  426  352  925  945  363   14  283  847  504   906 #>  [596,]  881  490  767  167  963  406  878   50  284   531 #>  [597,]  940   26  237  265  617  191  704  413  735   248 #>  [598,]  721  551  797  465  560  916  436  221  107   630 #>  [599,]   48  579  146  461  479  936  239  690  509   681 #>  [600,]  650  937  905  328  176  144  986  755  714   555 #>  [601,]   44  368  338  336  845  495  374  654  609   126 #>  [602,]  414  243  229  246  440  683  688  745  548   297 #>  [603,]  478  869  227  421  880  307  790   12   23   591 #>  [604,]  342  756  109  424  576  534   54  245  808   979 #>  [605,]  860  331  813  411  391  764  897  914  217   946 #>  [606,]  944  613   18   32  799   39  810  744  121   839 #>  [607,]  299  611  182  945  520  965  715  515  815   920 #>  [608,]  438  442  584  500  724  396  428  539   56   807 #>  [609,]  279  722  338  830  495  855  601  261  360   818 #>  [610,]  807  151  500  353  608  258  438   67  489   706 #>  [611,]  299  861  607  945  920  893  927  520  877   283 #>  [612,]  832  846  675  559  302  316  672  547  449   862 #>  [613,]   18   32  810  757  606   77  944   12   39   121 #>  [614,]  211  886  485  591   47    6  695  999   23   349 #>  [615,]  678  238  486  186   10  620  473  930  570   742 #>  [616,]  760   49  818  801  333  142  319  772  734   370 #>  [617,]  940  597  248  237  924   26  219   73  435   413 #>  [618,]  280  669  181  169  967  768  588  808  887   796 #>  [619,]  633  545  923  792  177  786  286  339   82   830 #>  [620,]   83  521  678  742  615  411  349  486  102   935 #>  [621,]   43  736   78  924  122  781  995  980  983   686 #>  [622,]  774  915  791  765  336  717  638  913  652   993 #>  [623,]  179   41  842   72  976  666  829  348  954   819 #>  [624,]   75  712  702  823  735  863  641  498  979   995 #>  [625,]  727  509  665  422  901   62  747  816  127   759 #>  [626,]  455  172  158  441  569  666  639   34  664   472 #>  [627,]  914  445  629   21  764   70  447  331  213   813 #>  [628,]  825  984   92  520  205  100  815  990  477   557 #>  [629,]  136  627  428   21  941  331  914  764  813   565 #>  [630,]  699  436  162  748  999  916   23  575  518     6 #>  [631,]  948  362  907  996  692   91  249  858  385   978 #>  [632,]  593  853  982  518  376  562  475  234  854   111 #>  [633,]  619  792  281  786  545  496  923  830  529   637 #>  [634,]  918  529  685  371  267  637  220  300  229   573 #>  [635,]  576  245  840  259  168  756  546  210  260   356 #>  [636,]  371   82  269  550  685  492  522  772   24   197 #>  [637,]  918  529  660  634  685  786  496  300  414   402 #>  [638,]  942  798  193   25  640  594  405  932  975    68 #>  [639,]   34  109  472  298  702  604  534  808  119   712 #>  [640,]  561  819  348  798  942   25  157  638  193   405 #>  [641,]  938  372  924  624  995   75  735  736  712   437 #>  [642,]  975  356  594  967  405  811  507  533  546   969 #>  [643,]  400  800   76   64  435   63  413   39  659   301 #>  [644,]  189   30    7  510  716  969  875  173  933   275 #>  [645,]  512  114  483  646  514  379  581   28  434   164 #>  [646,]   28  588  114  169  181  110  460  645  512   254 #>  [647,]   52  224  788  392  528  296  505  831   68   993 #>  [648,]  439  165   31  812  858  187  695  577  903   782 #>  [649,]  969  760  383  173   49  780  965  616  526   142 #>  [650,]  600  905  986  144  385  755  176  396   91   962 #>  [651,]   20  386  692   36 1000  858  125  439    6   907 #>  [652,]  993  392  717  915  224  622  200  655  250   381 #>  [653,]  271  884  709  752  287  905  909  686  137   589 #>  [654,]  221  655  777   44  188  152  368   79  108   113 #>  [655,]   79  654  728  383  250  336  152  200  993    16 #>  [656,]  322  237  167  430  805  423  970  752  998   968 #>  [657,]    9   71   38  310  268  373  493   51   96   227 #>  [658,]  806  926  244  563  219   33  556  437  295   851 #>  [659,]   39  400  810   51  590  800  613   64  497   201 #>  [660,]  786  144  637  918  582  176  132  685  874   474 #>  [661,]  453  344   82  197   95  931  492  269  679   503 #>  [662,]  893  927  481  849  104  697   17  499  220   862 #>  [663,]  175  377  474  235  209  877  950  857  257   939 #>  [664,]  981  827  227  468   96  210  840  758  876   754 #>  [665,]  747  668  625  692  727  902  904  216  450   948 #>  [666,]  441  158  976  172  626  542  348  341  796   640 #>  [667,]  977  304  230  138  590  936  680  397  757   677 #>  [668,]  747  162  665  113  108  625  973  699   79     6 #>  [669,]  822  280  618  789  158  172  169  796  588   542 #>  [670,]  662  893  783  927  861  849  697  291  104   288 #>  [671,]  691  970  968  531  805  980  978  140  282   955 #>  [672,]  612  688  449  316  506  832  586  117  499    17 #>  [673,]   29  307  921  790  131  767  406  901  934   881 #>  [674,]  863  735  357  971   90  876   53  454  559   956 #>  [675,]  612  431  547  832  302  846  574  862  559    17 #>  [676,]  163  834  337  568  852  762  263  225  705   133 #>  [677,]  936  803  667  839    2  579  149  590  831   304 #>  [678,]  615  620  486  570  935  238  742  186  102   521 #>  [679,]   95  492  568  953   99  463   24  538  730   269 #>  [680,]   57  667  799  304  977  241  397  230    2   839 #>  [681,]  718  146  625  257  817  509  108  668   62   727 #>  [682,]  787   24  912  492  517  550  194  420  463   989 #>  [683,]  243  440  229  541  602  688  745  414  548   909 #>  [684,]  445   70  447  204   80  701  627  273   86    27 #>  [685,]  634  371  918  529  636  522  786  573  637   402 #>  [686,]  458  564  322  909  621  141  884   78  691   327 #>  [687,]  116  301  423  128  183  290  284  871  972   994 #>  [688,]  229  745  573  683  243  602  672  414  305   541 #>  [689,]  261  409  203  855  360  173  403  716  969   915 #>  [690,]  803  579  831  847   35  182  146  815  149    48 #>  [691,]  141  671  978  707  233  522  996  968  282   955 #>  [692,]  694  651  907   20  948  631  333  727  858  1000 #>  [693,]  106   97  343  326  925  363  504  477  908   788 #>  [694,]   61  370  692  333  727  719  216   20  651   616 #>  [695,]   36  165  386    6  211  999  439  648  858    31 #>  [696,]  337  225  912  989  163  340  442  517  444   354 #>  [697,]  927  291  515  120  662  990  502  226  893   431 #>  [698,]  434  379  791  203  765  483  855  114  338   105 #>  [699,]  630  436  162  575   62  566  916  668   23   728 #>  [700,]  459  765  622  774  750  842  296  652  791   638 #>  [701,]   59   86  684  445  398  433  447  101   70    80 #>  [702,]  624  432   40  498  712   75   34  357  639   763 #>  [703,]  385  127  422  904  631  457  902  389  948   587 #>  [704,]  222   26  597  237  334  940  265  449   40   888 #>  [705,]  834  163  929  408  676  337  696  148  545   912 #>  [706,]  272  748  151  221  391  174   21  217  188   353 #>  [707,]  978  955  996  140  719  522  196  691  282   550 #>  [708,]   70  416  148  941  445  627  929  136  684   761 #>  [709,]  137  128  143  958   78  290  917  781  983    87 #>  [710,]  486  186   10  723  468   47  911  591  841   562 #>  [711,]  973  113   37  108  450  323  985  374  353   665 #>  [712,]   75  823  624  498  702  432   34  763  754   876 #>  [713,]  919  395  311  303  484   43  739  742  145   833 #>  [714,]  580  874  339  133  964  905  986  755  555   923 #>  [715,]  965   61  939  200  250  370  857  649  607   232 #>  [716,]  476  875  189  855  644  360  173  772  969   760 #>  [717,]  993  250  915  381  200  392  652  224  965   649 #>  [718,]  817   60  681  108  323  973  113  668  747   625 #>  [719,]  707  196  978  333  142  694  631  140  319   996 #>  [720,]  320   50  531   14  429  185  196  140  671   881 #>  [721,]  598  551   72  797  560  465  829  107  418    84 #>  [722,]  609  279  261  403  360  830  409  338  855   689 #>  [723,]  591  562  421   23   47  518  710  603  954    84 #>  [724,]  885  396  428   56  340  539  989  274  362   890 #>  [725,]  532  364  446   55  931  794  836  778  821   953 #>  [726,]  216  837  362  176  333  495  450   91  948   885 #>  [727,]  625  901  694  692  509  963   20  127  759   665 #>  [728,]  251  959   79  436  381  566  107  208  655   699 #>  [729,]  324  204  867  148  105  317  952  761  949   684 #>  [730,]  966   55   99  953  278    8  955  233  679   836 #>  [731,]  330  199  499  992  262  888  334  738  218   769 #>  [732,]  309   85  824  344  931  814  852  661  164   988 #>  [733,]  527  788  647  382  815   52  477  677  831    35 #>  [734,]  335   49  161  196  955  320  185  507  780   782 #>  [735,]  863   75  624  674  995  971   40  823  265   191 #>  [736,]  924  621  437   43  983   78  122  781  372   995 #>  [737,]  553  795  369    3  471  826  480  156  911   178 #>  [738,]  218  892   98  548  334  456  731  992   11   330 #>  [739,]  833   54  756  943  604  123  536  713  534   293 #>  [740,]  102  828  841  911  570  454  971  754  478   186 #>  [741,]  190  462  407  275  373  378  887  990  594   933 #>  [742,]  315  395  521  620  678  935  860  473  713   303 #>  [743,]  117  882  506  267  380  578  844  988  586    93 #>  [744,]  318  606  944  121   18   32   77  613   39   871 #>  [745,]  688  229  243  683  305  548  499  602  414   968 #>  [746,]  431  802  502  181  821    4  291  510  378   288 #>  [747,]  665  668  809  162  625  904  113  902  489   727 #>  [748,]  706  999  162  489  630  793    6  221  211   272 #>  [749,]  308  482  962  511  457  358  294  872  703   491 #>  [750,]  932   25  798  765  638  774   28  254  942   842 #>  [751,]  270  155   51  268  947  954  810  227  977   723 #>  [752,]  589  490  656  909  958  884  137  423   11   709 #>  [753,]  418  174  900   65  215  151  398   69  154   797 #>  [754,]  876  454  823  971  956  828  827   96  981    75 #>  [755,]  905  874  144  909  246  440  129  243  683   276 #>  [756,]  576  604  245  635  739  534  424  840  210   342 #>  [757,]  138  613  421   12  667  590  723  810  359   230 #>  [758,]  210  840  259  880  493  207  869  433  260   227 #>  [759,]  399  816  257  422  509  415  727  950  127   625 #>  [760,]  616  649  772  818  383   49  142  173  801   969 #>  [761,]  123   80  416  536  524  204  347  452  447   867 #>  [762,]  804  852  524  676  212   42  453  289  263   568 #>  [763,]  498   34   89  519  357  119  712   90  702   432 #>  [764,]  914  860  331  605  627  813   59  416  897   941 #>  [765,]  791  774  622  700  273  254  459  557  932   750 #>  [766,]  161  417  202  572  577  160  213  801  346   523 #>  [767,]  881  596  963   29  901  878  501  406  167    50 #>  [768,]  169  588  808  821  618  356  794  236  130   928 #>  [769,]  330  256  888   63   46  704  413  906  940   237 #>  [770,]  277  136  708   67    1  777   70  807   44   408 #>  [771,]  835   66   33  295  776  487  867    5  212   452 #>  [772,]  616  760  818  838  716  319  142  467  476   734 #>  [773,]   22  283  611  321  992  893  861  426  663   906 #>  [774,]  622  791  273  765  932  913   25  942  811   798 #>  [775,]  894  839   48  527  677  599  936  579    2    88 #>  [776,]  833   54  295   33  549  145  293    5  484   739 #>  [777,]  188  101   21  654   44  592  152   27  221   126 #>  [778,]  549   95   99  814  578  725  159  384   55   532 #>  [779,]  967  887  103  848  794  302  275  891  642   843 #>  [780,]  412  526  335  142   49  734   14  196  320   649 #>  [781,]   78  122  137  621  128  958  709  143  736   290 #>  [782,]  185  955  996  439  202  278  233  572  707   320 #>  [783,]  262  862  670  908  662  291  802  431  574   697 #>  [784,]  255  129  171  297  305  402  430  992  548   785 #>  [785,]  784  868  255  297  171  129  872  153  399   516 #>  [786,]  660  918  132  371  685  637  792  496  830   923 #>  [787,]  682  912   24  194  517  420  550  890  233   492 #>  [788,]  647  505  343  831  677   52  528  803  224    68 #>  [789,]  172  669  410  158  822  441  472  169  808   796 #>  [790,]   29  673  406  359  603  307  421  901   36    12 #>  [791,]  774  765  622  273  913  336  698  960  173   915 #>  [792,]  371  786  476  636   82  545  875  139  923   918 #>  [793,]  982  111  748  217  489  632   15  809  879   475 #>  [794,]  168  848  302  843  779  356  725  836  891   342 #>  [795,]  156  826  737  455  859  480    3  432  553   471 #>  [796,]  109  260  967  441  669  891  618  808  405   542 #>  [797,]  154   84  886  723  930  954  562  560  591   900 #>  [798,]   25  942  157  932  405  640  348  638  561    86 #>  [799,]  680  839   57  606  184  613  944  757  667   810 #>  [800,]   64  192  643  314   63   12  400  191  387   497 #>  [801,]  333  319  616  985  202  417 1000  565  766   152 #>  [802,]  746    4  288  431   93  574  291  552  783   502 #>  [803,]  831  690  149  579  847  936  505  677  231   899 #>  [804,]  762  852  524  814  212  289  453    5  293   295 #>  [805,]  322  265  980  671  316  458  237  970  656   559 #>  [806,]  658  926  544  223  244  851  437  563  219   983 #>  [807,]  136  151  353  500  941  629  428  391  272    67 #>  [808,]  472  298  768  604  109  618  796  410  639   169 #>  [809,]  457  904  902  587  747  482  111  974  665   962 #>  [810,]  121  613   18  757  659   39  751  270  606    12 #>  [811,]  405  642  356  913  546  932  942  508  975   366 #>  [812,]   31  389  858  554   87  648  571  958  439   974 #>  [813,]  331  860  897  605  914  485  160  764  391   417 #>  [814,]  549  778  532  364  931  804  852   95  293   309 #>  [815,]  182  831  520   35  690  505  607  477   92   462 #>  [816,]  950  759  422  399  257  127  625  727  509   385 #>  [817,]  718  358   60  681  747  625  464  820  668   816 #>  [818,]  616  142  772  760  319  333  866  991  719    61 #>  [819,]  640  829  561  348   86   16  798   25  107   942 #>  [820,]  170  228  358   62  195  817  461  234  509   587 #>  [821,]  768   19  446  794  510  843  725  746  181   130 #>  [822,]  669  280  419  618  172  789  158  181  169   542 #>  [823,]   75  754  712  876  624  454  827   96  498   735 #>  [824,]  309  198   85  732  743  578  266  159  852   117 #>  [825,]  628  203  557  392  689  915   92  254  652   717 #>  [826,]  156  795  480  455  859    3  569  471  737   178 #>  [827,]  876   96  424  754  956  664  891  454  981   823 #>  [828,]  971  454  903  754  740  387  876  192  191   841 #>  [829,]  819   84  640  348  561   86  954  107  465    16 #>  [830,]  279  495  132  609  837  866  991  786  286   722 #>  [831,]  505  803  847  182  690  231  404  815  585   149 #>  [832,]  846  612  316  675  547  862  449  672  586   559 #>  [833,]   54  739  776  293  943  604  342  549  979   145 #>  [834,]  163  705  676  929  337  408  682  912  762    24 #>  [835,]  771   66  867  487  452  112  952  347  212   427 #>  [836,]  467  269  463  168  843   19  953  838  794   236 #>  [837,]  286  132  176  726  495  830  319  216  786   818 #>  [838,]  467  463  772  572  161  546  836  766  503   734 #>  [839,]  590  667  799  677  936  448  680  613  757   606 #>  [840,]  210  259  758  635  260  207  245  433  576   880 #>  [841,]  911  740  497   96  454  754  828  471   51   823 #>  [842,]  348  819  638  640  623  829  666   72  798   750 #>  [843,]  510  836  794   19  302  189  168  335  848   779 #>  [844,]  849  882  743  199  380  300  104   93  662   267 #>  [845,]  338  601   44  609  277  279    1  126  336   698 #>  [846,]  832  612  547  862  316  675  559  302  674   888 #>  [847,]  831  585  149  231  803  404  505  232  934   352 #>  [848,]  335  302  794  559  583  278  779  168  320   533 #>  [849,]  481  844   93  662  104  214    4  882  252    17 #>  [850,]  917  271  143  879  974   87  554  571  709   294 #>  [851,]  354  466  556  212  303    5   42  484  289   295 #>  [852,]  159  568  263  804  198   95  762  289  676   814 #>  [853,]  632  234  376  359  170  184  518  982  593    77 #>  [854,]  234  994  999  111  587  904  359  695  518   790 #>  [855,]  360  875  716  173  476  261  203  689  434   644 #>  [856,]  916  479  397  230  699  436  304  325    2   251 #>  [857,]  939  209   61  991  877  415  257  950  866   694 #>  [858,]  812  439  907  648  389  948  651  963  996   249 #>  [859,]  432  826  119  712  702  795  624  639  156    75 #>  [860,]  897  331  813  605  764  160  914  306  485   935 #>  [861,]  611  299  520  927  607  670  893  697  205   945 #>  [862,]  846  832  888  262  547  675  922  612  431   662 #>  [863,]  735  674   75  624  995  971   40  357  876   979 #>  [864,]   73  134  266   45  564  898  541  115  180   964 #>  [865,]  586  506  449  365  222  367  704  266  574   578 #>  [866,]  991  818  142  857  939  474  877  139  476   719 #>  [867,]  761  212  123  452  729  347  148  524  204   487 #>  [868,]  582  153  785  144  235  308  950  175  129   755 #>  [869,]  603  421   23  401  566  493  880  575  478    36 #>  [870,]  536  943  420  538  194    8  484  311  953   466 #>  [871,]  183  116   77  376   32  128  318  687  242    18 #>  [872,]   11  171  375  456  218  255  884  784  752   972 #>  [873,]    2  325  397  304  479  856  936  251  230   579 #>  [874,]  714  755  660  637  580  144  964  600  246   918 #>  [875,]  360  716  855  476  189  644  173  434  197    30 #>  [876,]  754  454  956  827  424  823  971   53   96   583 #>  [877,]  920  415  939  857  537  866  991  945  474   429 #>  [878,]  881  415  963  767  429   50  596  501  537   490 #>  [879,]  974  274   56  571  902  962  850  111  554   809 #>  [880,]  210  758  478  165  603   53  869  956  840   227 #>  [881,]  767  963  596  878   50  901   29  406  167   490 #>  [882,]  743  844  267  380  849  117  988   85  506    93 #>  [883,]  451  443  543  513  364  166  309  814  778   367 #>  [884,]   11  909  752  375  653  686  548  458  456   322 #>  [885,]  724  396  362  340  989  274  558  890   56   428 #>  [886,]  614   84  930  591  211  485   47  107  465   433 #>  [887,]  967  103  779  378  373  504  618  741  542    71 #>  [888,]  262  330  862  922  769  846  832  704  731   499 #>  [889,]  264   13  394   63   88   46  131  256   64   906 #>  [890,]  558  444  287  787  249  488  306  555  420   274 #>  [891,]  109  424  827  260   34  103  848  794  779   604 #>  [892,]   98  218  738  997  548  456  992  872  731    11 #>  [893,]  662  927  920  945  697  499  862  670  283   611 #>  [894,]   88  106  693  839  677  343  775  590   39    97 #>  [895,]  540   26  940  704  769  248  597  330  617   222 #>  [896,]  222  365   40  432   26  367  451  702  119   704 #>  [897,]  860  331  306  813  160  292  187  605  935   485 #>  [898,]   45  964  864  535  440  134  541   73  380   683 #>  [899,]  404  231  401  959  208  505    9  355  149   493 #>  [900,]  632  982  215  593  154   15  793  797  361   886 #>  [901,]  767   29  881  963  509  727   20  406   62   790 #>  [902,]  974  571  904  948  809  274  554  362  389   457 #>  [903,]  828  971   53  165  531  454  648  406  880   970 #>  [904,]  587  902  809  571  703  294  854  974  554   111 #>  [905,]  986  909  276  555  755  650  488  653  600   589 #>  [906,]  283   22  426  256  394  537  501  430  595   889 #>  [907,]  202  948  858  577  692  439  362  631  996   249 #>  [908,]  922  363  321  925  862  888  783  262  313    97 #>  [909,]  276  884  905  686  683  243  752  589  141   458 #>  [910,]  164  197  581  344   19  875  661  189  434    82 #>  [911,]  471  186  841  369  740  102    3  486  710   570 #>  [912,]  517  682  787  989   24  340  225  555  890   444 #>  [913,]  960  811  366  346   27  546  273  774  592   507 #>  [914,]  764  627   21  860  813  605  331   59  629   897 #>  [915,]  622  717  392  993  173  652  969  649  774   203 #>  [916,]  436  856  630  230  699  397  757  138  304    23 #>  [917,]   87  554  143  571   31  974  290  812  958   850 #>  [918,]  634  529  685  637  371  786  267  660  300   220 #>  [919,]  713  395  311   43  145  484  742  437  122   303 #>  [920,]  945  877  537  893  226  429  412  305  283   526 #>  [921,]  131  673   29   50  307  394  352  167  501   767 #>  [922,]  363  908  862  888  925  547  846  262   90   832 #>  [923,]  133  339   82  545  786  636  371  177  580   286 #>  [924,]  736  437  641  621  938  995   43  372  145    78 #>  [925,]  363  504  103  595  390   97  310  922  352   373 #>  [926,]  563  437  145   33  484  180  295    5  289   556 #>  [927,]  697  291  893  515  662  945  299  226  120   920 #>  [928,]  236  508  332  293  949  532  808  453  524   768 #>  [929,]  408  148  834  277  705  324  708  163  503   453 #>  [930,]   10  468   84  886  591  154  615  238  678   614 #>  [931,]  344  446  532  725   95   19  836  661  814   778 #>  [932,]   25  798  942  157  811  774  405  273  638   750 #>  [933,]  407  190  275  594   30    7  642  969  975   990 #>  [934,]  232  239  146  847  231  149  208  673  537    29 #>  [935,]  253  485  160  187  860  897  678  570  742   395 #>  [936,]  677  579  803  149  479  667    2   48  839   590 #>  [937,]  177  600  328  286  393  340  584  132  176   650 #>  [938,]  641  372  924  437  995  624  736   75  145   919 #>  [939,]  857   61  209  991  877  415  257  715  866   694 #>  [940,]  597  248  237  617  413   26  704  265  456   191 #>  [941,]  428  629  764  331   94  914  136  306  627   605 #>  [942,]  798   25  405  157  932  640  638  561  811   366 #>  [943,]    8  953  870   54   55  739  342  979  549   536 #>  [944,]  606   32  613   18   39  799  448  744   77   184 #>  [945,]  920  537  226  283   14  595  426  893  927   515 #>  [946,]   94  605  521  411  217  215  742  391  292   860 #>  [947,]  285  268  751  326  270   51  657  977  343   106 #>  [948,]  362  631  907  902  858  692  389  558  249   216 #>  [949,]  332  312  508  928  347  204  472  157  487   808 #>  [950,]  816  235  257  759  857  399  377  175  939   127 #>  [951,]  308  516  464  195  817  358  820  749  377   816 #>  [952,]  949  729  317  204  347  312  332  410  487   867 #>  [953,]    8   55  730  943  966  679  278  463   99   836 #>  [954,]   84  268  468  591  723   10   41  561  227   930 #>  [955,]  782  278  707  185  966  734  282  320  572   140 #>  [956,]   53  424  245  583  876  754  827  210  454   260 #>  [957,]  112  238  118  480  569  615   10   65  468   473 #>  [958,]  812  290  137  284  389   31  128  554  917    87 #>  [959,]  208  401  231  566  899  381  232  355  404   728 #>  [960,]   27  592  913  126  346  152  366  161  546   766 #>  [961,]  997  321   88  147   98  330  773  256  908   769 #>  [962,]  457  482  879  809   56  974  902  571  703   274 #>  [963,]  881  767  596  878  490  901  858  631  406   996 #>  [964,]  541  440  683  134  714  380  602  898  580   573 #>  [965,]  715  232  231  250  182  649  585  381  780   717 #>  [966,]  730  278   55  955    8  953  282  559   99   233 #>  [967,]  887  779  594  642  975  618  190  933  796   407 #>  [968,]  305  429  671  691  140  141  978   50  656   745 #>  [969,]  173  649   30  642  644  933  975  760  716   526 #>  [970,]  671  531  980  167  996  782  185  490  805   903 #>  [971,]  828  454  754  903  876  387  192  674  735   191 #>  [972,]   46  301   13  264  687  889  423  171  256   998 #>  [973,]  108  711  113  374  323   37  665  351  718   668 #>  [974,]  571  554  274  902  389   87  917  879  812   111 #>  [975,]  642  594  193  967  533  405  207  933  969   507 #>  [976,]  666   41  626  441  158  268  172  947  751   569 #>  [977,]  667  304  138  241  680  230  528  397  268   270 #>  [978,]  996  707  691  141  490  719  671  589  488   249 #>  [979,]  995  342  583   54  424   75  245  943  876   863 #>  [980,]  805  970  671  995  265  322  278  979  966   583 #>  [981,]  664  570  227  754   96  827  478  876  210   468 #>  [982,]  793  632  111  475  748  593  853  489   15   854 #>  [983,]  736  544  122   78  437  621  709  781   43   924 #>  [984,]  100   92  403  409  628  205  689  299  520   261 #>  [985,]  450  801  216  152  417  333  692  188  665   565 #>  [986,]  555  905  488   91  444  276  327  287  517   890 #>  [987,]  722  409  567  261  403  609  279  689  338   360 #>  [988,]  252  446   19  267   17   85  117  931  743   481 #>  [989,]  340  912  885  517  724  428  682  787  396   890 #>  [990,]  275  407  515    7  510  933  190  741  502   644 #>  [991,]  866  857  939  818  142  209  877  474  476    61 #>  [992,]  499  218  256  731  784   22  906  430  738   330 #>  [993,]  717  652  381  250  200  392  224  915  355   182 #>  [994,]  284  290  128  406  854  958  234  587  294   790 #>  [995,]  979  980  735  863  641  924   75  621  624   265 #>  [996,]  978  249  707  782  185  490  907  970  631   691 #>  [997,]   98  256  892  972   46  992  769  218  330   738 #>  [998,]  387  167  394  423  131  430  921  656  284   413 #>  [999,]    6  695  854  211   36  111  575  748   23   386 #> [1000,]  125  386  651  523   49   20  801  417  692   577 #>  #> $neighbor_distances #>               [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>    [1,] 1.21046951 1.2814328 1.3088671 1.3903896 1.4093499 1.5123118 1.5177298 #>    [2,] 0.55047599 0.7540306 0.7634534 0.7722017 0.8163211 0.8700257 0.9226647 #>    [3,] 0.35784179 0.4869218 0.5242352 0.5781613 0.6461551 0.6900840 0.7158303 #>    [4,] 0.53401809 0.5887559 0.7787472 0.7808913 0.7860686 0.8376048 0.9398310 #>    [5,] 0.34914673 0.4117812 0.4147237 0.5550794 0.5681887 0.5832709 0.6670932 #>    [6,] 0.34558386 0.3718587 0.3866957 0.4058981 0.4168423 0.4366775 0.4563907 #>    [7,] 0.46565599 0.4989607 0.5344266 0.5990700 0.6116902 0.6150030 0.6260920 #>    [8,] 0.24524756 0.3766672 0.4190034 0.4619930 0.4910142 0.4985297 0.5080894 #>    [9,] 0.26592251 0.5272305 0.5303869 0.5855830 0.5917343 0.5936955 0.6659433 #>   [10,] 0.20624216 0.4890596 0.6274324 0.6552598 0.6766045 0.6837926 0.6886020 #>   [11,] 0.57189888 0.5912276 0.6606174 0.6676028 0.7789707 0.9019471 0.9936128 #>   [12,] 0.59154586 0.5943194 0.6043368 0.6477592 0.6792485 0.6849131 0.6892158 #>   [13,] 0.19424836 0.2125101 0.6348915 0.6565775 0.7102408 0.7548653 0.7556356 #>   [14,] 0.50366019 0.5213843 0.5306987 0.5441858 0.5766456 0.6146114 0.6332020 #>   [15,] 0.66621597 0.7634713 0.9313510 0.9380089 0.9422618 0.9714016 1.0029979 #>   [16,] 0.42796979 0.5702875 0.6811840 0.7296882 0.7650716 0.8027896 0.8264574 #>   [17,] 0.43980417 0.5712633 0.6833969 0.7022311 0.7234893 0.7255583 0.7870018 #>   [18,] 0.32998788 0.3715182 0.4313687 0.7057181 0.7156661 0.7459431 0.7606691 #>   [19,] 0.53175341 0.5804025 0.6025482 0.6220356 0.6549309 0.6895867 0.7023902 #>   [20,] 0.25537990 0.4888065 0.5012188 0.5132578 0.5201907 0.5244126 0.5297184 #>   [21,] 0.44869504 0.5176139 0.5201538 0.5333403 0.5528347 0.5637833 0.6056317 #>   [22,] 0.24270294 0.4181342 0.4994289 0.7301984 0.7687906 0.8701522 0.8722797 #>   [23,] 0.27916247 0.4182686 0.4627760 0.5187923 0.5625505 0.5745288 0.5912516 #>   [24,] 0.27801534 0.2808169 0.4150215 0.4842020 0.5161527 0.5207735 0.5940268 #>   [25,] 0.07900148 0.2370228 0.3602234 0.3902051 0.5426235 0.6006307 0.6474137 #>   [26,] 0.61071508 0.6573590 0.7340550 0.7405824 0.7735499 0.7830390 0.8050931 #>   [27,] 0.34159301 0.3748690 0.3932452 0.5942108 0.6043088 0.6143347 0.6237749 #>   [28,] 0.62085681 0.6916244 0.7386633 0.9016987 1.0270393 1.0317743 1.1095360 #>   [29,] 0.22512765 0.3803994 0.3970135 0.4499811 0.4840932 0.4850417 0.4858446 #>   [30,] 0.39126729 0.4931540 0.5295156 0.5344266 0.5987257 0.6567391 0.6665549 #>   [31,] 0.30912486 0.3716844 0.4069067 0.4383080 0.4538033 0.4771445 0.4805272 #>   [32,] 0.37151820 0.4253336 0.4780872 0.6146927 0.6674207 0.7188448 0.7326479 #>   [33,] 0.09113993 0.4117812 0.6715584 0.7239671 0.7447867 0.7682577 0.8076352 #>   [34,] 0.37734773 0.4000469 0.4212806 0.5560209 0.5659865 0.5809123 0.6173314 #>   [35,] 0.69441613 0.7249473 0.7624164 0.8119654 0.9839406 1.0092612 1.0173604 #>   [36,] 0.24808700 0.2723521 0.4092183 0.4168423 0.4383710 0.5023097 0.5201907 #>   [37,] 0.52469938 0.6230936 0.7173692 0.7371090 0.7860783 0.9153443 0.9223275 #>   [38,] 0.45160491 0.5060944 0.5127088 0.5314992 0.5812371 0.5855830 0.6128921 #>   [39,] 0.33992786 0.6105890 0.7697521 0.8120088 0.8502975 0.8543398 0.8718331 #>   [40,] 0.45826699 0.4952567 0.5293771 0.5759559 0.5790945 0.5833047 0.5974994 #>   [41,] 0.78237982 0.8547462 0.9179658 0.9656688 1.0256551 1.0375951 1.0403373 #>   [42,] 0.34658311 0.5914036 0.6843618 0.7177654 0.8091027 0.8208785 0.8380186 #>   [43,] 0.36424210 0.4869968 0.5056829 0.5323747 0.5782066 0.5927128 0.6488748 #>   [44,] 0.45940455 0.6715617 0.6978360 0.7154144 0.7471025 0.7953747 0.8342867 #>   [45,] 0.66295655 1.0285802 1.1348424 1.1780126 1.5407360 1.5456936 1.5925654 #>   [46,] 0.59517291 0.6055320 0.6175850 0.6348915 0.6934208 0.7472936 0.7604855 #>   [47,] 0.26748597 0.4514422 0.5305996 0.5355726 0.5653137 0.5940433 0.6347029 #>   [48,] 0.44182012 0.4790345 0.7311678 0.7590097 0.7912512 0.8369607 0.8826947 #>   [49,] 0.39492438 0.4265521 0.4639095 0.4944305 0.4999843 0.5031262 0.5226127 #>   [50,] 0.36671734 0.3998036 0.4010056 0.4295132 0.4577139 0.4684129 0.4841514 #>   [51,] 0.48536186 0.5327137 0.6370667 0.6729774 0.6874784 0.6910342 0.6948833 #>   [52,] 0.58197751 0.8388852 0.9412836 1.0082361 1.0723705 1.1975280 1.2467210 #>   [53,] 0.28197372 0.4617600 0.4898238 0.5057847 0.5060944 0.5117953 0.5443672 #>   [54,] 0.31425204 0.4628165 0.4717548 0.4836014 0.4837092 0.5745749 0.6417850 #>   [55,] 0.33077154 0.3722042 0.3859907 0.4190034 0.4615879 0.5161005 0.5482435 #>   [56,] 0.35792720 0.5561728 0.6250605 0.6409314 0.7018025 0.7086441 0.7429670 #>   [57,] 0.47956545 0.7789857 0.9671439 1.1418139 1.1795548 1.2010407 1.2126780 #>   [58,] 0.63049552 0.9036267 0.9673234 0.9727745 1.0094522 1.0096174 1.0156655 #>   [59,] 0.46314350 0.5494480 0.5521143 0.5776104 0.6092869 0.6229224 0.7165581 #>   [60,] 0.66813811 0.7942737 0.8143436 0.9562376 0.9588842 0.9783526 1.0074788 #>   [61,] 0.30665876 0.3083442 0.5477442 0.5914676 0.6283700 0.6488153 0.6576743 #>   [62,] 0.48137672 0.5174087 0.5922966 0.6447556 0.6930791 0.6942257 0.7407218 #>   [63,] 0.53136017 0.5715258 0.6273539 0.6438647 0.6653796 0.6855298 0.6951885 #>   [64,] 0.29071253 0.3427768 0.5943194 0.6082906 0.6168765 0.6543068 0.6855298 #>   [65,] 0.90797943 1.0011695 1.0073150 1.0568285 1.1074157 1.1380730 1.1655519 #>   [66,] 0.51356621 0.6649191 0.7882149 0.8889239 0.9799349 1.0152143 1.0274019 #>   [67,] 0.91009161 1.1452958 1.1939267 1.2397482 1.2778259 1.3142367 1.3691782 #>   [68,] 0.43896058 0.6626579 0.7063940 0.7192270 0.7217734 0.7289212 0.7324372 #>   [69,] 0.89069032 0.9313217 0.9673234 0.9976411 0.9996854 1.0331601 1.0587833 #>   [70,] 0.33989198 0.4327614 0.5350378 0.6258618 0.6469255 0.7164036 0.7242920 #>   [71,] 0.38397973 0.3862299 0.4516049 0.4913964 0.4920131 0.5414338 0.5917343 #>   [72,] 1.00848047 1.0768269 1.0943501 1.1057459 1.1238643 1.1548307 1.2246481 #>   [73,] 0.49674503 1.1517222 1.1530540 1.1780126 1.2000227 1.2599610 1.2891031 #>   [74,] 0.95888418 1.4328568 1.4894015 1.6543722 1.6595918 1.6635901 1.6692800 #>   [75,] 0.20286252 0.2775229 0.3058515 0.4774863 0.4874333 0.5379454 0.5445072 #>   [76,] 0.56327896 0.6449463 0.8223549 0.8228872 0.9294344 0.9357540 1.0041295 #>   [77,] 0.42533361 0.4313687 0.5218097 0.6681459 0.6745087 0.7003972 0.7146743 #>   [78,] 0.31406018 0.4260126 0.4445334 0.5684864 0.5926834 0.6159768 0.6696777 #>   [79,] 0.58282320 0.5919036 0.6241585 0.6445785 0.6560100 0.7319469 0.7938257 #>   [80,] 0.19979753 0.5161356 0.5565107 0.5836934 0.5945889 0.6472249 0.6842989 #>   [81,] 1.81951854 1.9922656 2.0205986 2.0790480 2.0946907 2.1277494 2.1302952 #>   [82,] 0.55400715 0.5834456 0.7181371 0.7294277 0.7365553 0.7525134 0.7698621 #>   [83,] 0.38538472 0.4618722 0.6916650 0.7051790 0.7148987 0.7293677 0.7540948 #>   [84,] 0.47027993 0.5917161 0.6165220 0.6246316 0.6297133 0.7374528 0.7390052 #>   [85,] 0.72936937 0.8543112 0.9746944 1.0084146 1.1090694 1.1174333 1.1207087 #>   [86,] 0.59078288 0.6462234 0.6689212 0.6699648 0.6811840 0.6858087 0.6860345 #>   [87,] 0.27254531 0.3651141 0.3716844 0.3921957 0.4445022 0.4630358 0.4686448 #>   [88,] 0.66562908 0.8177474 0.8235249 0.9084179 0.9557719 1.0141622 1.0408833 #>   [89,] 0.31747977 0.4114420 0.4268198 0.6100400 0.6136000 0.6282401 0.6387592 #>   [90,] 0.43156060 0.4952567 0.5908792 0.6033091 0.6173670 0.6258699 0.6387592 #>   [91,] 0.31421513 0.5338823 0.5412133 0.5900256 0.6272943 0.6422183 0.6592550 #>   [92,] 0.81196536 0.9115486 0.9346957 0.9929918 1.0456172 1.0754124 1.0787575 #>   [93,] 0.64736887 0.7271914 0.7541340 0.7808913 0.7979371 0.8244759 0.8497188 #>   [94,] 0.49533234 0.6598227 0.7076012 0.7186929 0.7863789 0.8153246 0.8174131 #>   [95,] 0.34692452 0.5627264 0.6081151 0.6135268 0.6495568 0.6515160 0.6583607 #>   [96,] 0.39060104 0.4790116 0.4927501 0.4989591 0.5117631 0.5192327 0.5327137 #>   [97,] 0.55207656 0.5697016 0.6301777 0.6495728 0.6696607 0.7135412 0.8605164 #>   [98,] 0.63783218 0.7148571 0.7776584 0.8507334 0.9494797 1.0558888 1.0583920 #>   [99,] 0.39020552 0.4962837 0.5675716 0.5861157 0.5976980 0.6081151 0.6092434 #>  [100,] 0.89978391 0.9308147 0.9408754 0.9696101 0.9858472 0.9923786 1.0627488 #>  [101,] 0.55283471 0.5907829 0.5922631 0.6141458 0.6261074 0.6392327 0.6421244 #>  [102,] 0.35502072 0.4501754 0.6099109 0.6260703 0.6280210 0.6670661 0.6866346 #>  [103,] 0.37801086 0.4721603 0.4913964 0.5124604 0.5450710 0.6028122 0.6238292 #>  [104,] 0.34134019 0.5929541 0.6372357 0.7820931 0.7897595 0.8339584 0.8447999 #>  [105,] 0.54679682 0.9584708 0.9619867 0.9668903 1.1132133 1.1147389 1.1797309 #>  [106,] 0.42115831 0.5175675 0.5697016 0.7871844 1.0125592 1.0360698 1.0951413 #>  [107,] 0.37049110 0.4279698 0.7430611 0.7789587 0.7795453 0.7839516 0.7865491 #>  [108,] 0.37950826 0.5067155 0.6800699 0.6945929 0.7168134 0.7420902 0.7524010 #>  [109,] 0.31009228 0.4000469 0.4590026 0.5164836 0.5549018 0.6026765 0.6227651 #>  [110,] 1.01791160 1.0815005 1.0840109 1.2249167 1.2279099 1.2384120 1.2896179 #>  [111,] 0.51360556 0.5314622 0.5624893 0.5767651 0.5827102 0.6198561 0.6221631 #>  [112,] 0.70836509 0.7513724 0.7882149 0.8676796 0.8703300 0.9034353 0.9156993 #>  [113,] 0.49869553 0.5067155 0.5460506 0.5801585 0.6696494 0.7173692 0.7608483 #>  [114,] 0.40062803 0.7368107 0.8528844 0.8633145 0.8855950 0.9016987 0.9022142 #>  [115,] 0.39939033 0.5879220 0.6793512 0.6805757 0.7058957 0.7344912 0.7391128 #>  [116,] 0.31704666 0.3983268 0.5037551 0.5216523 0.5296416 0.6908122 0.7452978 #>  [117,] 0.37326479 0.5340094 0.5787218 0.5794222 0.7135245 0.7212985 0.7981541 #>  [118,] 0.58711013 0.6636078 0.6993385 0.7835613 0.7958064 0.8146638 0.8318024 #>  [119,] 0.38781056 0.6292556 0.6395271 0.6717917 0.6905921 0.7365392 0.7809893 #>  [120,] 0.51972264 0.5565621 0.5588898 0.6499334 0.6994073 0.7234893 0.7733899 #>  [121,] 0.52007377 0.7156661 0.7769445 0.8729608 0.9187279 0.9307765 0.9801876 #>  [122,] 0.37462522 0.5608964 0.5684864 0.5867999 0.6280210 0.6488748 0.6532210 #>  [123,] 0.28637481 0.5232306 0.5870548 0.5945889 0.6033274 0.6372778 0.6648775 #>  [124,] 1.46107996 1.6845896 1.6912515 1.6925196 1.7416590 1.7471112 1.8158605 #>  [125,] 0.34397845 0.3866957 0.3924534 0.4412515 0.5012188 0.5058887 0.5131453 #>  [126,] 0.37486905 0.4751257 0.5087351 0.5887325 0.7051331 0.7298008 0.7491495 #>  [127,] 0.29550828 0.3681418 0.5015297 0.6060122 0.6288299 0.6308819 0.6992010 #>  [128,] 0.21279658 0.3983268 0.4456823 0.4821855 0.5067848 0.5608770 0.5763736 #>  [129,] 0.33082271 0.3812432 0.4656621 0.5812384 0.6536513 0.7041940 0.7333086 #>  [130,] 0.59124589 0.7267236 0.7863414 0.8405639 0.8473076 0.8762039 0.8769079 #>  [131,] 0.29341112 0.3539795 0.5754289 0.5817286 0.6082906 0.6362094 0.6390304 #>  [132,] 0.38097849 0.4882768 0.5360774 0.7430517 0.7626059 0.8503862 0.8728612 #>  [133,] 0.34767639 0.5731660 0.6695476 0.8528346 0.8894494 0.8955452 0.9042629 #>  [134,] 0.67153583 0.7344912 0.7583382 0.7931788 0.8128573 0.8623701 0.9081630 #>  [135,] 1.14665624 1.2219094 1.2304212 1.3831278 1.4038045 1.4243506 1.5006148 #>  [136,] 0.44825377 0.6461841 0.7169382 0.7503173 0.7732450 0.7867631 0.8033412 #>  [137,] 0.26411020 0.4260126 0.4456823 0.4673949 0.4828882 0.5533188 0.6529094 #>  [138,] 0.52191310 0.5914450 0.5995905 0.6128027 0.6217932 0.6322603 0.6677923 #>  [139,] 0.58668618 0.6357454 0.6994073 0.7920784 0.8237250 0.8393177 0.8492497 #>  [140,] 0.29261567 0.4439449 0.5403259 0.5471188 0.5475349 0.5604020 0.5725399 #>  [141,] 0.25265749 0.4204692 0.4459950 0.4995554 0.5339018 0.5646986 0.5659258 #>  [142,] 0.44731276 0.4693085 0.4891228 0.4957363 0.5366771 0.5708846 0.5962150 #>  [143,] 0.43630431 0.5608964 0.5913644 0.6018143 0.6031855 0.6383166 0.6529094 #>  [144,] 0.55029717 0.6149651 0.6536513 0.6960493 0.7244467 0.7711151 0.8378862 #>  [145,] 0.46758775 0.5323747 0.6548214 0.6687391 0.6954821 0.6959315 0.6987302 #>  [146,] 0.56358593 0.6714041 0.7109351 0.7311678 0.7458959 0.7665936 0.7959432 #>  [147,] 1.27924469 1.3343597 1.4185485 1.4773048 1.7597464 1.7606057 1.7904207 #>  [148,] 0.69682063 0.8924923 0.9030081 0.9054818 1.0016268 1.0311475 1.0401675 #>  [149,] 0.47105967 0.5015533 0.5732198 0.5992964 0.6070402 0.6333816 0.6404007 #>  [150,] 1.08881693 1.1088618 1.1437963 1.2449947 1.2620592 1.2672230 1.3379752 #>  [151,] 0.60289777 0.6267536 0.6512268 0.8387839 0.8905984 0.9767534 1.0555368 #>  [152,] 0.38434510 0.5474227 0.5580321 0.6047128 0.6159771 0.6368901 0.6379932 #>  [153,] 0.76091799 1.0115355 1.0132570 1.0881376 1.0951688 1.1263791 1.1440797 #>  [154,] 0.42601353 0.7362994 0.7374528 0.9115949 0.9399216 0.9703215 0.9797734 #>  [155,] 0.55380071 0.5868136 0.8971739 0.9859653 0.9871506 1.0210517 1.0258789 #>  [156,] 0.38074638 0.5154705 0.8954715 0.9021617 0.9227504 1.0985167 1.1493428 #>  [157,] 0.33667180 0.3653168 0.3902051 0.4978214 0.5171986 0.6065168 0.6329947 #>  [158,] 0.35433111 0.4546433 0.5162549 0.5985664 0.6256440 0.6345276 0.7123310 #>  [159,] 0.46309918 0.4648272 0.4978386 0.5025315 0.6583607 0.6659381 0.7088686 #>  [160,] 0.43700057 0.4744331 0.5245809 0.5412125 0.5517345 0.5612849 0.5615328 #>  [161,] 0.26497463 0.3009462 0.3889990 0.4135342 0.4214572 0.4266499 0.4639095 #>  [162,] 0.42839864 0.5531608 0.5698067 0.6107278 0.6536423 0.7160076 0.7929313 #>  [163,] 0.35057975 0.4309376 0.5965018 0.7168258 0.7637036 0.7787982 0.7869576 #>  [164,] 0.37272716 0.6543357 0.6840445 0.7475963 0.8614908 0.9399279 0.9457978 #>  [165,] 0.28816770 0.3682785 0.3965755 0.4383710 0.4658402 0.4771445 0.5262443 #>  [166,] 0.49137345 0.6205306 0.6278612 0.7186285 0.7435339 0.7440504 0.7887943 #>  [167,] 0.32875221 0.4161305 0.4295132 0.4324372 0.4674339 0.4922360 0.5073235 #>  [168,] 0.34534255 0.4533731 0.4648813 0.4786173 0.5276847 0.5344793 0.5385578 #>  [169,] 0.23154039 0.4996064 0.5751151 0.6726457 0.6773536 0.7041913 0.7237772 #>  [170,] 0.52243421 0.7852364 0.8055764 0.8948322 0.9694110 1.0355170 1.0355223 #>  [171,] 0.57831635 0.6068026 0.7323271 0.8061708 0.9309761 0.9451110 0.9462643 #>  [172,] 0.35433111 0.4766277 0.5867573 0.5916953 0.6389778 0.6756414 0.7301892 #>  [173,] 0.39210704 0.5408687 0.5812758 0.5987257 0.6104140 0.6381541 0.7037034 #>  [174,] 0.60447661 0.6267536 0.7537042 0.7770416 0.7910509 0.7976067 0.8122335 #>  [175,] 0.37131688 0.4732668 0.6357584 0.7240616 0.7558192 0.8210686 0.8438541 #>  [176,] 0.38097849 0.6842423 0.6960493 0.7390536 0.7940312 0.8275767 0.8500671 #>  [177,] 0.61987271 0.9503676 0.9604526 1.1101986 1.1372493 1.1962238 1.1983213 #>  [178,] 0.86356366 0.8696071 0.8979664 0.9135622 0.9136056 0.9146832 0.9156993 #>  [179,] 0.90251624 1.2391223 1.2551132 1.3247592 1.3892696 1.4173955 1.5960577 #>  [180,] 0.65482141 0.6582334 0.6583989 0.6872535 0.7058957 0.7233368 0.7298838 #>  [181,] 0.47581826 0.5598178 0.6172547 0.6436547 0.7041913 0.7288602 0.7499769 #>  [182,] 0.46401044 0.5627313 0.5956964 0.6124989 0.6997715 0.7332486 0.7392277 #>  [183,] 0.31704666 0.3587281 0.6026883 0.6088547 0.6555160 0.7286017 0.7831765 #>  [184,] 0.78523641 0.9052024 0.9599744 1.0731588 1.0797704 1.1046482 1.1092652 #>  [185,] 0.26858368 0.3132308 0.3914943 0.4122333 0.4825606 0.4826539 0.4865361 #>  [186,] 0.42992809 0.4314484 0.4412957 0.5306193 0.5781613 0.6099109 0.6317479 #>  [187,] 0.32558630 0.4538033 0.4867114 0.5004484 0.5212093 0.5499718 0.5767945 #>  [188,] 0.27986585 0.4486950 0.6261074 0.6478857 0.6791720 0.6830734 0.7098652 #>  [189,] 0.35281360 0.4997944 0.5622268 0.6197868 0.6285987 0.6537978 0.6549309 #>  [190,] 0.27383529 0.3569462 0.3955108 0.4536409 0.4845361 0.5086319 0.6688656 #>  [191,] 0.43967830 0.4634355 0.5661557 0.6033091 0.6095929 0.6202265 0.6597499 #>  [192,] 0.44065919 0.4634355 0.5367478 0.5504818 0.5631576 0.5679693 0.6168765 #>  [193,] 0.35144341 0.4494418 0.4993466 0.5087696 0.5155247 0.5654223 0.5736881 #>  [194,] 0.22112194 0.3996389 0.5086507 0.5654880 0.5935245 0.5983421 0.6027282 #>  [195,] 0.80557643 0.9636475 0.9959560 1.0036229 1.2343316 1.2907756 1.2967553 #>  [196,] 0.39149426 0.4101772 0.4281875 0.4773816 0.4779779 0.4999843 0.5505670 #>  [197,] 0.55400715 0.7314181 0.7574815 0.7799084 0.7873526 0.8264940 0.8332343 #>  [198,] 0.50253147 0.6811196 0.6893140 0.8128573 0.8158326 0.8572884 0.9836412 #>  [199,] 0.72804450 0.8080975 0.8230186 0.8388021 0.9040104 0.9090553 0.9122911 #>  [200,] 0.36816787 0.5370509 0.5996214 0.6130515 0.7065292 0.7703608 0.7938257 #>  [201,] 0.63311158 0.7397344 0.7983179 0.8409059 0.8487797 0.8629053 0.8852884 #>  [202,] 0.35553709 0.3656315 0.3725824 0.4895812 0.4997822 0.5088901 0.5389288 #>  [203,] 0.65886490 0.7329002 0.7347903 0.7411261 0.7580537 0.8624063 0.8720974 #>  [204,] 0.55651070 0.5587885 0.5830566 0.5955075 0.6618140 0.7156208 0.7315282 #>  [205,] 1.12746773 1.1447031 1.1611430 1.2061711 1.2973666 1.2998117 1.4372318 #>  [206,] 1.04008113 1.0741286 1.0838163 1.0959222 1.1050789 1.1226859 1.1568236 #>  [207,] 0.21900050 0.2742296 0.3514434 0.4414084 0.4509631 0.4979605 0.4985219 #>  [208,] 0.21563769 0.3590978 0.3669434 0.3987107 0.4993616 0.5127696 0.5669487 #>  [209,] 0.55611113 0.5794918 0.7240616 0.7361423 0.8079934 0.8221198 0.8290688 #>  [210,] 0.20603309 0.2903457 0.3807584 0.3999190 0.4606817 0.4924360 0.5132561 #>  [211,] 0.35146422 0.4366775 0.4686757 0.4812793 0.5317383 0.5949025 0.6197411 #>  [212,] 0.41472370 0.5742801 0.6313599 0.6807774 0.6951039 0.7447867 0.7760244 #>  [213,] 0.24306608 0.2691089 0.4780553 0.5333403 0.5817011 0.6043088 0.6178096 #>  [214,] 0.34134019 0.5565621 0.5584969 0.6664560 0.6867161 0.8019273 0.8237250 #>  [215,] 0.46304774 0.7293677 0.7351532 0.7634713 0.8081023 0.8122335 0.8499778 #>  [216,] 0.40235927 0.4250036 0.5136656 0.5626172 0.5915929 0.5997113 0.6013005 #>  [217,] 0.36827211 0.4581167 0.5627529 0.6870920 0.6881646 0.7117143 0.7378429 #>  [218,] 0.33982358 0.5976765 0.7207886 0.7449855 0.8507334 0.9094096 0.9321405 #>  [219,] 0.73585058 0.9232594 0.9565458 1.0190818 1.0440702 1.0562080 1.0697942 #>  [220,] 0.55849685 0.5866862 0.6150630 0.6372357 0.6499334 0.6833969 0.6999140 #>  [221,] 0.63004997 0.6805731 0.7160076 0.7317062 0.7545404 0.7969842 0.7992506 #>  [222,] 0.44727767 0.5974994 0.7193678 0.7340550 0.7608659 0.7996507 0.7997487 #>  [223,] 0.90362672 0.9146832 0.9180192 0.9874210 0.9927248 1.0419432 1.1020623 #>  [224,] 0.46826716 0.6439832 0.7046757 0.7119260 0.7290976 0.7391057 0.7963469 #>  [225,] 0.49106116 0.5244854 0.6788071 0.7176650 0.7177654 0.7749013 0.7870105 #>  [226,] 0.32322310 0.3357362 0.4338062 0.6146114 0.6173491 0.6359929 0.6747795 #>  [227,] 0.28556909 0.4419782 0.4688051 0.4989591 0.5661041 0.5827281 0.6393244 #>  [228,] 0.43303596 0.5174087 0.5792943 0.5882164 0.6120067 0.6697537 0.6772856 #>  [229,] 0.24611185 0.3842782 0.3983348 0.4293245 0.4612341 0.4862838 0.5753730 #>  [230,] 0.39388994 0.4755652 0.5219131 0.5983490 0.6630029 0.6829525 0.6841384 #>  [231,] 0.30036760 0.3198414 0.3590978 0.4168866 0.4785825 0.4997144 0.5040527 #>  [232,] 0.30036760 0.3669434 0.3815305 0.5653624 0.5656248 0.5965183 0.5996629 #>  [233,] 0.50544474 0.5182948 0.5418878 0.5623380 0.5669282 0.5773719 0.5893375 #>  [234,] 0.31343717 0.4221985 0.5792943 0.6308612 0.6487788 0.6565327 0.6942257 #>  [235,] 0.32559725 0.4732668 0.6090162 0.6755251 0.7244467 0.7776300 0.8144492 #>  [236,] 0.42319471 0.4568666 0.5344793 0.5792409 0.5955864 0.6276450 0.6599847 #>  [237,] 0.46543336 0.4792014 0.5336176 0.5733939 0.5851822 0.6046285 0.6290967 #>  [238,] 0.42144588 0.5031239 0.6132328 0.6837926 0.7049319 0.7312486 0.7506026 #>  [239,] 0.46484263 0.5704845 0.7109351 0.7118330 0.7417987 0.7526987 0.7569339 #>  [240,] 1.09317617 1.1040206 1.1193103 1.2529562 1.2863927 1.2939069 1.3269674 #>  [241,] 0.69303540 0.8205277 0.9671439 0.9847831 1.0134838 1.0473081 1.1663187 #>  [242,] 0.78317649 0.8697816 0.8849601 0.9668492 1.0168150 1.0595519 1.1677669 #>  [243,] 0.35963054 0.3806475 0.3983348 0.4068962 0.4617965 0.4657141 0.5526758 #>  [244,] 1.26864772 1.6713056 1.7214903 1.7557255 1.7616370 1.7898021 1.8336938 #>  [245,] 0.23444596 0.2765470 0.2852333 0.2970063 0.4048737 0.4606817 0.4664689 #>  [246,] 0.47238131 0.4935583 0.5652610 0.6414176 0.6576266 0.6836239 0.8132373 #>  [247,] 0.78307298 0.8013535 0.8650611 0.8930465 0.9029668 0.9399767 0.9486970 #>  [248,] 0.51792634 0.6692384 0.7227889 0.7777086 0.7952843 0.8018866 0.9766410 #>  [249,] 0.31072384 0.3755687 0.4014202 0.4074870 0.4573402 0.5314506 0.5385851 #>  [250,] 0.36816787 0.4060399 0.5202421 0.5714498 0.5858707 0.5880933 0.5919036 #>  [251,] 0.60180716 0.6018285 0.9662172 0.9774597 0.9816729 1.0145107 1.0180882 #>  [252,] 0.43980417 0.4874431 0.5197226 0.6150630 0.6634790 0.6664560 0.7864254 #>  [253,] 0.44190042 0.4631435 0.5505767 0.5886008 0.6377367 0.6873164 0.7012542 #>  [254,] 0.39100186 0.7409369 0.7806299 0.8388192 0.9217313 0.9222943 0.9345085 #>  [255,] 0.34632790 0.3812432 0.5636713 0.6431622 0.6769138 0.6824575 0.6911725 #>  [256,] 0.54436133 0.5948165 0.7289802 0.7301984 0.7438620 0.7875841 0.7967487 #>  [257,] 0.57458790 0.5926552 0.6283424 0.6438393 0.6785323 0.6825467 0.7500568 #>  [258,] 1.27783404 1.2900982 1.2950464 1.4985037 1.5286311 1.5460156 1.5713194 #>  [259,] 0.21900050 0.3075903 0.3096341 0.3999190 0.4035350 0.4148944 0.4527564 #>  [260,] 0.40353499 0.4664689 0.4852165 0.4871731 0.4873610 0.4924360 0.5023658 #>  [261,] 0.41794591 0.5664209 0.5781964 0.5864097 0.6685038 0.6909388 0.8368906 #>  [262,] 0.48463135 0.6728008 0.8050962 0.8370144 0.8376331 0.8393648 0.8598953 #>  [263,] 0.32319175 0.4870720 0.4978386 0.5671789 0.6692245 0.6793512 0.6843618 #>  [264,] 0.19424836 0.2040277 0.4992867 0.5313602 0.6055320 0.6362094 0.6543068 #>  [265,] 0.36833863 0.4654334 0.5017085 0.5656454 0.6003747 0.6170498 0.6251389 #>  [266,] 0.58386724 0.6659381 0.6715358 0.6811196 0.6829526 0.7913083 0.8226197 #>  [267,] 0.53151133 0.5787218 0.6020524 0.6985332 0.7286656 0.7835030 0.7867163 #>  [268,] 0.64847362 0.6573676 0.6659433 0.7604574 0.7968490 0.8643554 0.9069869 #>  [269,] 0.49223996 0.5229711 0.5686139 0.6100679 0.6674642 0.6830877 0.6999881 #>  [270,] 0.47282196 0.5868136 0.8988946 0.9045820 0.9142488 0.9619491 0.9636785 #>  [271,] 0.56905828 0.7277196 0.7705092 0.8684019 0.8710113 0.8973821 0.8976672 #>  [272,] 0.32987731 0.5085852 0.6028978 0.6044766 0.6056317 0.7368727 0.7378429 #>  [273,] 0.57827386 0.6399215 0.6848409 0.7001828 0.7300695 0.7999589 0.8096686 #>  [274,] 0.38353125 0.4820388 0.5002889 0.5103997 0.5439551 0.5473826 0.5618381 #>  [275,] 0.31634825 0.3453730 0.4488479 0.4783741 0.5086319 0.5134158 0.6014621 #>  [276,] 0.42046922 0.4730321 0.6023254 0.6381665 0.6473181 0.6619429 0.6708163 #>  [277,] 0.75559906 0.8434938 0.9864432 1.0654337 1.0883128 1.1004546 1.1442323 #>  [278,] 0.23177341 0.3876206 0.4300517 0.4489872 0.4615879 0.4619930 0.5083644 #>  [279,] 0.17043615 0.6115139 0.6144349 0.7220758 0.7441820 0.9432558 0.9551188 #>  [280,] 0.31136211 0.4758183 0.5105971 0.5345327 0.6773536 0.7440504 0.7614294 #>  [281,] 1.28735206 1.4495158 1.5862658 1.5876154 1.6128527 1.6299672 1.6443932 #>  [282,] 0.29261567 0.4436452 0.5262098 0.5505027 0.5601840 0.5625149 0.5846818 #>  [283,] 0.24270294 0.3663440 0.3688916 0.6605804 0.6611236 0.8047881 0.8244194 #>  [284,] 0.34324427 0.3852723 0.4807027 0.5292069 0.5543009 0.5608770 0.5657912 #>  [285,] 0.62918180 1.0125592 1.1663187 1.2016624 1.2094716 1.2117365 1.2418795 #>  [286,] 0.29686347 0.5360774 0.7940312 0.8762371 0.9201335 0.9503676 0.9619168 #>  [287,] 0.40142020 0.4634532 0.4824160 0.5110722 0.5282545 0.6008158 0.6378858 #>  [288,] 0.53401809 0.6609695 0.7889064 0.7917791 0.8890348 0.8939098 0.9408754 #>  [289,] 0.38448622 0.4870720 0.5550794 0.5776140 0.5852819 0.5914036 0.6358499 #>  [290,] 0.21279658 0.3871573 0.4590166 0.5166758 0.5296416 0.5533188 0.5543009 #>  [291,] 0.35604642 0.5907578 0.6481719 0.6609695 0.7840776 0.8362565 0.8475800 #>  [292,] 0.32558630 0.4674089 0.5277063 0.5832308 0.6203573 0.6430868 0.6531550 #>  [293,] 0.58301167 0.6375903 0.6964726 0.7071698 0.7245649 0.7315685 0.7625511 #>  [294,] 0.27397800 0.4990195 0.5213306 0.5736358 0.5985232 0.6072090 0.6459071 #>  [295,] 0.09113993 0.3491467 0.6358499 0.6807774 0.6979795 0.7459699 0.7863417 #>  [296,] 0.64120027 0.8388852 0.8525389 0.9818075 1.0069490 1.0293006 1.0614266 #>  [297,] 0.46566207 0.5201454 0.5636713 0.5652610 0.6131437 0.6701657 0.6707414 #>  [298,] 0.57944873 0.5921952 0.6205306 0.6440024 0.6743616 0.6780611 0.7077063 #>  [299,] 0.35056102 0.4323315 0.5741677 0.6964146 0.7629855 0.7754890 0.8597179 #>  [300,] 0.59295405 0.6744941 0.6985332 0.6999140 0.7287384 0.7367904 0.7500358 #>  [301,] 0.58706661 0.5951729 0.6874442 0.7326062 0.7522365 0.8230275 0.8272819 #>  [302,] 0.36175024 0.4209899 0.4813064 0.5223277 0.5475791 0.6160059 0.6233547 #>  [303,] 0.63812120 0.6595335 0.6641357 0.7310347 0.7366293 0.7377899 0.7552492 #>  [304,] 0.28967890 0.4755652 0.5373530 0.6050027 0.7367644 0.7569945 0.7634534 #>  [305,] 0.39860107 0.5109188 0.5967728 0.6581444 0.6616765 0.6637005 0.6784733 #>  [306,] 0.35967592 0.3691845 0.3996389 0.4213417 0.5454917 0.5615328 0.5832308 #>  [307,] 0.39541408 0.5084299 0.5127088 0.5249234 0.5292019 0.5643657 0.5927760 #>  [308,] 0.72699233 1.0108327 1.0447182 1.0627107 1.1576053 1.1857721 1.2353420 #>  [309,] 0.72936937 0.7679370 0.8357712 0.9106449 0.9236965 1.0219507 1.0300689 #>  [310,] 0.38622987 0.4114420 0.4536031 0.5582578 0.6083764 0.6128921 0.6449446 #>  [311,] 0.22968159 0.3896564 0.4692602 0.5056829 0.6336309 0.6535046 0.6674393 #>  [312,] 0.49782138 0.6603331 0.6654162 0.6993385 0.7263683 0.7397532 0.7719971 #>  [313,] 0.94691536 1.0304489 1.2154122 1.2366640 1.2861856 1.3044798 1.3060265 #>  [314,] 0.34277683 0.5761198 0.5915459 0.5993767 0.6146927 0.6753620 0.7003972 #>  [315,] 0.50998616 0.5479445 0.6304955 0.7377899 0.7726233 0.8401201 0.8418575 #>  [316,] 0.35402695 0.4413732 0.4589638 0.4667636 0.5178635 0.5726849 0.6361679 #>  [317,] 0.54679682 1.1183533 1.1625312 1.2716053 1.2726941 1.2864367 1.3436808 #>  [318,] 0.78307298 0.8124752 0.8480663 0.8515825 0.8729608 0.9198239 1.0690410 #>  [319,] 0.30066148 0.4654537 0.4985146 0.5389288 0.5498350 0.5507061 0.6302704 #>  [320,] 0.31021064 0.3132308 0.4101772 0.4694301 0.4810949 0.5101946 0.5164189 #>  [321,] 0.75567952 0.7687906 0.8486365 0.8781762 0.8926911 0.9084179 0.9230808 #>  [322,] 0.34928645 0.3637145 0.3923042 0.4792014 0.5017085 0.5937359 0.6005207 #>  [323,] 0.58015850 0.6230936 0.6470833 0.7195649 0.7420902 0.7616721 0.7977826 #>  [324,] 0.79251236 0.9054818 0.9668903 1.0041571 1.0512183 1.1058004 1.1671591 #>  [325,] 0.60182850 0.9306545 0.9786673 1.0296871 1.0457754 1.1541700 1.2631363 #>  [326,] 0.64957283 0.7590596 0.7749350 0.7850495 0.7871844 0.7927290 0.8156598 #>  [327,] 0.42672090 0.5879220 0.6760600 0.6836464 0.6876713 0.7225715 0.7573887 #>  [328,] 0.91433588 0.9158306 0.9784031 1.2583021 1.2764300 1.3413194 1.5356199 #>  [329,] 1.01843729 1.2450534 1.4353399 1.4878778 1.4932276 1.5408669 1.5720413 #>  [330,] 0.53075473 0.5583400 0.6635461 0.8393648 0.8629734 0.9292874 0.9293687 #>  [331,] 0.26707323 0.2953271 0.3320452 0.4213417 0.4737726 0.4925101 0.5484479 #>  [332,] 0.28263796 0.4708422 0.5357388 0.5955864 0.6937404 0.7394286 0.7719971 #>  [333,] 0.30066148 0.4250036 0.4539085 0.4947684 0.4997310 0.5221296 0.5411184 #>  [334,] 0.60462854 0.6625574 0.6892968 0.7561637 0.7664300 0.7800571 0.7937415 #>  [335,] 0.35753455 0.3898205 0.4122781 0.4397189 0.4454174 0.4694301 0.5457032 #>  [336,] 0.71541443 0.7496531 0.7674448 0.7797565 0.8114114 0.8249625 0.8688823 #>  [337,] 0.44798338 0.4910612 0.5965018 0.6305607 0.8125750 0.8208785 0.8604156 #>  [338,] 0.59733251 0.6119211 0.7441820 0.7640671 0.8495275 0.9484934 0.9795572 #>  [339,] 0.34767639 0.4231106 0.7018844 0.7598041 1.1616720 1.1800716 1.1930159 #>  [340,] 0.25283902 0.5982736 0.6251264 0.6512282 0.6701734 0.6992505 0.8306882 #>  [341,] 0.62170404 0.7770250 0.8326278 0.8458111 0.9135953 1.0200667 1.0227937 #>  [342,] 0.33306395 0.4476540 0.4836014 0.5161005 0.5396148 0.5397691 0.5607260 #>  [343,] 0.51756753 0.5550128 0.6301777 0.7850495 0.7903039 0.8444186 0.8738890 #>  [344,] 0.46604194 0.6543357 0.6882759 0.7544034 0.8082659 0.8203685 0.8405639 #>  [345,] 2.08627568 2.2164901 2.3605552 2.4335841 2.4893736 2.7627295 2.8010679 #>  [346,] 0.13034995 0.4238135 0.4250519 0.4266499 0.5022303 0.5382494 0.5479820 #>  [347,] 0.34099743 0.4887354 0.5830566 0.6372778 0.6603331 0.6619228 0.6842989 #>  [348,] 0.51517039 0.5962294 0.6121996 0.6451439 0.6529798 0.6540016 0.6602214 #>  [349,] 0.26748597 0.4683940 0.5793739 0.6053595 0.6260703 0.6309714 0.6394856 #>  [350,] 0.76858466 1.1761635 1.2582593 1.2940643 1.5105286 1.6101623 1.6421377 #>  [351,] 0.76916011 0.7860783 0.7977826 0.8974579 0.9256936 0.9290629 0.9301239 #>  [352,] 0.52825894 0.5441858 0.5634698 0.5812371 0.6239770 0.6274126 0.6737094 #>  [353,] 0.58578655 0.7566644 0.7721850 0.7867631 0.7960317 0.8069427 0.8407096 #>  [354,] 0.58458911 0.6064475 0.7186929 0.7366293 0.8120694 0.8515900 0.9056615 #>  [355,] 0.52335784 0.5589289 0.5656257 0.5669487 0.5721419 0.5722827 0.6008707 #>  [356,] 0.34534255 0.4616561 0.5112414 0.5470238 0.5596469 0.5750012 0.5792409 #>  [357,] 0.43156060 0.4582670 0.5476464 0.5485833 0.5877672 0.6220212 0.6434446 #>  [358,] 0.73220521 0.8099764 0.8445454 0.9186037 0.9566207 0.9656704 1.0108327 #>  [359,] 0.31343717 0.5510211 0.6036509 0.6120067 0.6209275 0.6326844 0.6540326 #>  [360,] 0.36655786 0.3690922 0.5734929 0.5834994 0.5864097 0.6540622 0.7491659 #>  [361,] 0.76858466 1.0874815 1.1149484 1.1430548 1.2046681 1.2715879 1.2920916 #>  [362,] 0.19062462 0.3839844 0.4583266 0.4943451 0.5136656 0.5699897 0.5736296 #>  [363,] 0.28951401 0.4910873 0.6248821 0.6611893 0.6696607 0.7183489 0.7233776 #>  [364,] 0.42181553 0.4877192 0.5912459 0.6743616 0.7056267 0.7461754 0.8017895 #>  [365,] 0.76086589 0.7760302 0.8728537 0.9342568 0.9361687 0.9381583 0.9653260 #>  [366,] 0.13034995 0.3167348 0.3422170 0.3889990 0.4509631 0.4680016 0.4929429 #>  [367,] 0.57134342 0.7193678 0.8413470 0.8535926 0.8536220 0.8554087 0.8668236 #>  [368,] 0.63441274 0.6715617 0.8162489 1.0910088 1.1201771 1.1260417 1.1408357 #>  [369,] 0.48692180 0.5494740 0.5578253 0.7312511 0.8092917 0.8365102 0.8545020 #>  [370,] 0.30834417 0.3717870 0.5505670 0.5663475 0.5913376 0.6025436 0.6040373 #>  [371,] 0.37423009 0.4064087 0.5369217 0.5752935 0.6668281 0.7664228 0.7809228 #>  [372,] 0.54015491 0.5936938 0.6481829 0.6765533 0.7104502 0.8064179 0.8720588 #>  [373,] 0.43896058 0.4437918 0.4920131 0.5450710 0.5919320 0.6239316 0.6245348 #>  [374,] 0.44397251 0.5654979 0.6834941 0.6972669 0.7510266 0.7524010 0.7836004 #>  [375,] 0.66760280 0.7469794 0.9887768 1.0101594 1.1013004 1.1914199 1.2538680 #>  [376,] 0.59437982 0.6026883 0.6497441 0.6697146 0.6745087 0.7748304 0.7891744 #>  [377,] 0.66407082 0.7500568 0.7535016 0.8290688 0.8438541 0.9890276 1.0188957 #>  [378,] 0.41627299 0.5488501 0.6116729 0.6436547 0.6610865 0.6855123 0.7180888 #>  [379,] 0.69345760 0.7210034 0.8104446 0.8915143 0.9844797 1.0110316 1.0172064 #>  [380,] 0.76087780 0.8230186 0.9407532 0.9450609 0.9547859 0.9661827 0.9709767 #>  [381,] 0.40603994 0.5180424 0.5222549 0.5370509 0.5608112 0.5768237 0.5923872 #>  [382,] 0.73832735 1.0173604 1.1611430 1.1846141 1.1984804 1.2295837 1.2735942 #>  [383,] 0.53100533 0.5449393 0.5474227 0.5828232 0.5858707 0.6840361 0.6868059 #>  [384,] 0.57134342 0.5851683 0.6375299 0.6651148 0.6688456 0.6987302 0.6993011 #>  [385,] 0.27373125 0.2955083 0.5659957 0.6637059 0.6880188 0.6971506 0.7213557 #>  [386,] 0.24808700 0.3510083 0.3794034 0.3877919 0.4058981 0.4412515 0.4755460 #>  [387,] 0.43967830 0.4726402 0.4932683 0.5055582 0.5679693 0.5897617 0.6561252 #>  [388,] 0.84819084 1.1595079 1.1723107 1.1948092 1.2608081 1.2782794 1.2918580 #>  [389,] 0.32217673 0.3829084 0.4074870 0.4187954 0.4443748 0.4634532 0.4686448 #>  [390,] 0.52825894 0.5631576 0.6271125 0.6557014 0.6611893 0.6657764 0.6932175 #>  [391,] 0.45811669 0.5054670 0.5085852 0.6096429 0.6646026 0.7051882 0.7080762 #>  [392,] 0.46826716 0.6150778 0.6268764 0.6573377 0.7076093 0.8563626 0.9239508 #>  [393,] 0.95746914 1.0086629 1.0406724 1.0532450 1.1052959 1.1057283 1.1518480 #>  [394,] 0.29341112 0.4992867 0.5268116 0.5280320 0.5652156 0.5715258 0.6271125 #>  [395,] 0.22968159 0.3101792 0.3454661 0.5909986 0.5927128 0.6689339 0.6976758 #>  [396,] 0.36120649 0.4103122 0.6250605 0.6992505 0.7602595 0.8301865 0.8850193 #>  [397,] 0.28967890 0.3938899 0.7029221 0.7187057 0.7722017 0.8253453 0.8307571 #>  [398,] 0.75147404 0.7849116 0.9170330 0.9208913 0.9440306 0.9802764 0.9832832 #>  [399,] 0.24282195 0.5745879 0.6237231 0.7167928 0.7501435 0.7539793 0.7585124 #>  [400,] 0.44085544 0.6105890 0.6449463 0.6787343 0.7155752 0.7958527 0.8565443 #>  [401,] 0.33143558 0.3987107 0.4398471 0.4584524 0.4812428 0.5219024 0.5589289 #>  [402,] 0.33082271 0.5502972 0.6431622 0.6637005 0.6701657 0.6755251 0.7168742 #>  [403,] 0.56642090 0.6540622 0.8223332 0.8576855 0.8731733 0.8882479 0.9480153 #>  [404,] 0.26714363 0.3198414 0.4024143 0.4422043 0.5714739 0.5722827 0.5828092 #>  [405,] 0.30823539 0.4929429 0.5151064 0.5155247 0.5171986 0.5267013 0.5308653 #>  [406,] 0.38527232 0.4324372 0.4494279 0.4531303 0.4787794 0.4858446 0.4919623 #>  [407,] 0.27383529 0.2797752 0.3163482 0.4943825 0.5064923 0.5986820 0.6116729 #>  [408,] 0.38240555 0.8434938 0.8584295 0.8924923 0.9832103 1.1613203 1.2121301 #>  [409,] 0.57819639 0.6505936 0.8731733 0.9346957 0.9573444 1.0097077 1.0714018 #>  [410,] 0.52591639 0.6012587 0.7080196 0.7624489 0.7958698 0.8552217 0.8827765 #>  [411,] 0.36827211 0.4711137 0.4719894 0.4929756 0.6203573 0.6707708 0.6902118 #>  [412,] 0.23216678 0.3232231 0.3311819 0.5213843 0.5366771 0.5760775 0.5889128 #>  [413,] 0.58976169 0.6202265 0.6450097 0.6692384 0.6843983 0.7223482 0.7326062 #>  [414,] 0.24263568 0.4612341 0.4657141 0.4723813 0.5201454 0.6181234 0.6518934 #>  [415,] 0.36476374 0.5452436 0.5489041 0.6107487 0.6231284 0.6486865 0.6606610 #>  [416,] 0.60728448 0.6157924 0.6258618 0.7511654 0.7687882 0.7726233 0.7889009 #>  [417,] 0.26910893 0.3252515 0.4800824 0.5574661 0.5587419 0.5779394 0.5942108 #>  [418,] 1.12512471 1.3314374 1.4135245 1.4562553 1.5906817 1.6334235 1.6924701 #>  [419,] 0.62786122 0.6749549 0.6909721 0.7614294 0.7672396 0.8301462 0.8979768 #>  [420,] 0.22112194 0.3691845 0.5145285 0.5252724 0.5844169 0.6151094 0.6728585 #>  [421,] 0.27916247 0.4592070 0.4632790 0.4938952 0.5738974 0.5998774 0.6008497 #>  [422,] 0.50152971 0.5310501 0.5585375 0.6059301 0.6115119 0.6137666 0.6637059 #>  [423,] 0.53080944 0.5963091 0.6491302 0.6666116 0.6843983 0.6985799 0.7032316 #>  [424,] 0.27654704 0.2951427 0.3070175 0.3842054 0.4358474 0.4817677 0.4873610 #>  [425,] 0.97840314 1.7536070 1.8131297 2.0017496 2.1434535 2.1819352 2.2393017 #>  [426,] 0.36634397 0.4353989 0.4994289 0.5350266 0.7159151 0.7472615 0.7556795 #>  [427,] 0.70836509 1.0437403 1.1130162 1.2179101 1.2229333 1.3177732 1.3912272 #>  [428,] 0.55813831 0.5829462 0.5906029 0.6822739 0.7171960 0.8027568 0.8069427 #>  [429,] 0.40100564 0.4380599 0.4580945 0.4843531 0.5109188 0.5388405 0.5403259 #>  [430,] 0.57831635 0.5799145 0.6269897 0.6892983 0.6985799 0.7360508 0.7376631 #>  [431,] 0.44682494 0.4837806 0.5786943 0.6870117 0.7904464 0.8035448 0.8086243 #>  [432,] 0.38781056 0.4518521 0.5390001 0.5638302 0.6139850 0.6920587 0.7199420 #>  [433,] 0.47805534 0.5401356 0.5505767 0.5521143 0.5617291 0.6032702 0.6186321 #>  [434,] 0.64271917 0.7210034 0.7781986 0.8294768 0.8347201 0.9185371 0.9272091 #>  [435,] 0.78213116 0.8018866 0.8228872 0.8803566 1.0575084 1.0734745 1.0943855 #>  [436,] 0.42797926 0.5164301 0.5924125 0.6018320 0.6691727 0.6717369 0.6841384 #>  [437,] 0.46247887 0.5067058 0.6335023 0.6481829 0.6948617 0.7102101 0.7358506 #>  [438,] 0.21124475 0.8079009 0.8139015 0.8850193 0.9155204 0.9589698 1.0491241 #>  [439,] 0.25940823 0.3564569 0.3725663 0.3965755 0.4547488 0.4755460 0.4823437 #>  [440,] 0.40146034 0.5058961 0.5291942 0.5949664 0.6414176 0.6517776 0.6678141 #>  [441,] 0.43381139 0.5162549 0.5867573 0.6451439 0.6698491 0.6805422 0.7958064 #>  [442,] 0.27226466 0.7965124 0.8139015 0.9680754 1.0481851 1.0729468 1.1314613 #>  [443,] 0.67495487 0.6964098 0.7077063 0.7435339 0.8941679 0.9820487 0.9932132 #>  [444,] 0.42672090 0.4742585 0.6577665 0.6621273 0.7176650 0.7227302 0.7306703 #>  [445,] 0.27374113 0.3398920 0.4336246 0.4878851 0.5836934 0.7156208 0.7161151 #>  [446,] 0.49775036 0.5057079 0.5317534 0.6670638 0.6812482 0.7011247 0.7810805 #>  [447,] 0.19979753 0.4336246 0.5156453 0.5955075 0.6469255 0.6540243 0.6858037 #>  [448,] 0.57611984 0.6540326 0.6697537 0.7188448 0.7964828 0.8270086 0.8270891 #>  [449,] 0.35402695 0.5317214 0.5661899 0.6237384 0.6483689 0.6932376 0.7014995 #>  [450,] 0.37853720 0.5857865 0.6541418 0.6932700 0.7015655 0.7664324 0.7808781 #>  [451,] 0.49137345 0.6440024 0.6964098 0.7731717 0.8979768 0.9132668 0.9222713 #>  [452,] 0.34099743 0.3787914 0.6033274 0.6649191 0.6806684 0.7186290 0.8443421 #>  [453,] 0.32777468 0.4084296 0.5964598 0.6985484 0.7299506 0.7334949 0.7418415 #>  [454,] 0.24444572 0.2539434 0.3194772 0.3515583 0.4927501 0.5041885 0.5241539 #>  [455,] 0.55947715 0.6226706 0.7406254 0.7418054 0.8031751 0.8122835 0.8346231 #>  [456,] 0.57189888 0.7630114 0.7777086 0.8392729 0.8726374 0.9481810 0.9678224 #>  [457,] 0.41927666 0.4611625 0.6163551 0.6427449 0.6779266 0.6880188 0.7513486 #>  [458,] 0.39230424 0.5280235 0.5472313 0.5493735 0.6251389 0.6625574 0.6653248 #>  [459,] 0.77560656 0.9673221 1.3283529 1.4040438 1.4118502 1.4425507 1.4774432 #>  [460,] 0.61725469 0.7662297 0.7672396 0.7733261 0.7887943 0.8812575 0.9060264 #>  [461,] 0.43303596 0.5888637 0.7407218 0.8279811 0.8655723 0.8826947 0.9146768 #>  [462,] 0.42912632 0.4845361 0.6626579 0.6728326 0.6761037 0.6790748 0.7104630 #>  [463,] 0.41043967 0.4491331 0.4698574 0.5527091 0.5605946 0.5686139 0.5844173 #>  [464,] 0.72699233 0.8099764 0.9777157 1.2406322 1.2518960 1.3226513 1.3457507 #>  [465,] 0.57028752 0.5922631 0.7839516 0.7948862 0.7992506 0.8687603 0.9287249 #>  [466,] 0.52735350 0.5742801 0.5845891 0.6067881 0.6068605 0.6641357 0.6670932 #>  [467,] 0.28297282 0.4491331 0.4689097 0.6411230 0.6674642 0.6797679 0.6916542 #>  [468,] 0.20624216 0.5091761 0.5980774 0.6159974 0.6453148 0.6593648 0.7085769 #>  [469,] 1.19141986 1.5441863 1.5456936 1.7348901 1.8111149 1.8559001 1.9191438 #>  [470,] 1.41774477 1.4487873 1.4903795 1.6992258 1.7577959 1.7602376 1.8522810 #>  [471,] 0.29797572 0.4299281 0.5242352 0.5578253 0.6776225 0.7056283 0.7425035 #>  [472,] 0.38302962 0.5127490 0.5259164 0.5390705 0.6286051 0.6704237 0.7531162 #>  [473,] 0.50312387 0.5099862 0.6608039 0.7022452 0.7096227 0.7186290 0.7293509 #>  [474,] 0.32559725 0.3713169 0.7130241 0.7659304 0.7700191 0.7789670 0.7808682 #>  [475,] 0.66621597 0.7830272 0.7831751 0.8182106 0.8966966 0.9351781 0.9509069 #>  [476,] 0.31706208 0.4752431 0.5834994 0.6357454 0.6537978 0.6696843 0.7443812 #>  [477,] 0.63307436 0.8746795 0.9048494 1.0334246 1.0734693 1.0859972 1.1214003 #>  [478,] 0.24835875 0.2855691 0.4485579 0.5506574 0.5675909 0.5897147 0.5921158 #>  [479,] 0.67299483 0.6867017 0.6929659 0.7637374 0.8307571 0.8561672 0.8700257 #>  [480,] 0.35784179 0.5513518 0.5670087 0.7056283 0.7706672 0.8031751 0.8092917 #>  [481,] 0.48744310 0.5588898 0.5712633 0.5887559 0.6020757 0.6867161 0.6954605 #>  [482,] 0.64034442 0.7109808 0.7513486 0.7552150 0.7938263 0.8022374 0.9097428 #>  [483,] 0.65673910 0.6934576 0.7347903 0.7368107 0.7609579 0.8347201 0.8816674 #>  [484,] 0.46758775 0.5681887 0.5852819 0.6067881 0.6260452 0.6605836 0.6614731 #>  [485,] 0.47111371 0.4812793 0.4850204 0.5201222 0.5477646 0.5577346 0.5793739 #>  [486,] 0.43144845 0.4391736 0.5432727 0.5923682 0.6461551 0.6766045 0.7690241 #>  [487,] 0.37879138 0.4887354 0.5135662 0.7270004 0.7552587 0.7578103 0.8245740 #>  [488,] 0.31421513 0.4441723 0.4573402 0.4961898 0.5060788 0.5282545 0.5339018 #>  [489,] 0.65656076 0.7463260 0.7929313 0.8194621 0.9020570 0.9177525 0.9422374 #>  [490,] 0.30104083 0.3744047 0.4592138 0.5041361 0.5161984 0.5169359 0.5456778 #>  [491,] 0.96364754 1.1528099 1.1904007 1.2277327 1.2608628 1.3413665 1.3659466 #>  [492,] 0.27801534 0.4372083 0.4698574 0.5177640 0.5229711 0.5237595 0.6135268 #>  [493,] 0.49796048 0.5036863 0.5219024 0.5233578 0.5272305 0.5284553 0.5654223 #>  [494,] 0.98742099 1.0437403 1.2940643 1.3715098 1.3899578 1.3997916 1.4121160 #>  [495,] 0.44397251 0.7141122 0.7220758 0.7276547 0.7367931 0.7933537 0.7945902 #>  [496,] 0.78865536 0.8210686 0.8651220 0.8884697 0.9370270 1.0128090 1.0499836 #>  [497,] 0.44065919 0.4790116 0.4853619 0.5303881 0.5448443 0.6220982 0.6282401 #>  [498,] 0.34765312 0.4310536 0.5417388 0.5560209 0.5638302 0.5759559 0.5821031 #>  [499,] 0.62476464 0.6853526 0.7231728 0.7364530 0.7754434 0.7937415 0.8122482 #>  [500,] 0.86382960 0.9100916 0.9574691 0.9589698 0.9872226 1.0080292 1.0085337 #>  [501,] 0.44876414 0.5102163 0.5347131 0.5379716 0.5645399 0.5704845 0.6053305 #>  [502,] 0.41627299 0.6481719 0.6935705 0.6963693 0.6982418 0.7340551 0.7619814 #>  [503,] 0.32777468 0.4800625 0.6171153 0.6411230 0.6927322 0.7000504 0.7321665 #>  [504,] 0.35071989 0.3780109 0.4437918 0.5414338 0.6048693 0.6083764 0.6248821 #>  [505,] 0.33721916 0.4024143 0.4997144 0.5299611 0.5741004 0.6124989 0.6187411 #>  [506,] 0.29866995 0.5794222 0.6637734 0.6932376 0.7236006 0.7750488 0.7979371 #>  [507,] 0.21629621 0.2649746 0.3422170 0.3558626 0.4238135 0.4414084 0.4454174 #>  [508,] 0.28263796 0.4568666 0.4619486 0.7048069 0.7134353 0.7177440 0.7321665 #>  [509,] 0.48137672 0.4824022 0.5419171 0.5632433 0.5882164 0.5888637 0.6137666 #>  [510,] 0.46565599 0.4783741 0.5334498 0.5335707 0.6197868 0.6302965 0.6626189 #>  [511,] 1.08972495 1.4503325 1.4872049 1.6333087 1.6377813 1.6615663 1.6656201 #>  [512,] 0.40062803 0.7811736 0.9422343 0.9619867 0.9771794 0.9813070 1.0157656 #>  [513,] 0.24363560 0.7233368 0.9136292 0.9197246 0.9389733 0.9935159 1.0471151 #>  [514,] 0.57508362 0.8877721 0.9844797 1.0681754 1.0911114 1.1350714 1.1527929 #>  [515,] 0.33573616 0.5134158 0.5348730 0.5760775 0.6140883 0.6615503 0.6626189 #>  [516,] 1.34136645 1.3838227 1.4342775 1.4943989 1.5133858 1.5837403 1.6842036 #>  [517,] 0.31680663 0.5132193 0.5207735 0.5239781 0.5288084 0.6530337 0.6701734 #>  [518,] 0.33083441 0.3806689 0.4182686 0.4632790 0.5653137 0.6036509 0.6394856 #>  [519,] 0.31747977 0.4444787 0.4536031 0.6238292 0.6440949 0.6693203 0.6872239 #>  [520,] 0.63307436 0.6750776 0.6964146 0.7806849 0.7888541 0.9482153 0.9678648 #>  [521,] 0.43546948 0.4618722 0.4630477 0.4719894 0.6224500 0.6884615 0.7096870 #>  [522,] 0.27135405 0.4652345 0.4995554 0.5058957 0.5669282 0.6064614 0.6081116 #>  [523,] 0.24306608 0.3252515 0.4779854 0.5131453 0.5564435 0.5580321 0.5617291 #>  [524,] 0.40842964 0.4800625 0.5511625 0.5870548 0.6589856 0.6864307 0.7071698 #>  [525,] 0.86978163 1.0184373 1.2608628 1.2638072 1.3526222 1.4484502 1.4599987 #>  [526,] 0.23216678 0.3463831 0.4338062 0.4473128 0.6140883 0.6430809 0.6863041 #>  [527,] 0.73832735 1.0898115 1.1625550 1.2302076 1.2953288 1.3461254 1.3687894 #>  [528,] 0.64120027 0.7090600 0.7290976 0.8012898 0.8137912 0.8145357 0.8163358 #>  [529,] 0.31341527 0.3253701 0.5315113 0.5945311 0.6297303 0.6668281 0.7500358 #>  [530,] 1.14549023 1.2158055 1.3127295 1.4186153 1.4811360 1.5310853 1.5420888 #>  [531,] 0.39980361 0.4032872 0.4148328 0.4161305 0.4579549 0.5164189 0.5330906 #>  [532,] 0.37766750 0.4218155 0.5093474 0.6618992 0.6812482 0.6834770 0.6870574 #>  [533,] 0.27422963 0.3075903 0.3558626 0.3898205 0.4871731 0.5087696 0.5242883 #>  [534,] 0.38302962 0.5250651 0.5477875 0.6636078 0.7090112 0.7146490 0.7397532 #>  [535,] 1.12806137 1.1348424 1.1938812 1.4175963 1.5498325 1.5511832 1.6104801 #>  [536,] 0.41300116 0.5232306 0.5273535 0.5511625 0.5844169 0.6403226 0.6632456 #>  [537,] 0.48435314 0.5178139 0.5347131 0.5489041 0.5685398 0.5879447 0.6548786 #>  [538,] 0.49628373 0.5831077 0.6269285 0.6550708 0.6605836 0.6656679 0.6692245 #>  [539,] 0.35792720 0.6560213 0.7569771 0.7602595 0.7759812 0.7785397 0.8970102 #>  [540,] 0.76904320 1.4661106 1.4702632 1.4773048 1.5262415 1.5297211 1.5432717 #>  [541,] 0.44133972 0.5291942 0.6068363 0.6208701 0.7134594 0.7263323 0.7303278 #>  [542,] 0.62170404 0.6256440 0.6446191 0.7070516 0.7112517 0.7289212 0.7560268 #>  [543,] 0.24363560 0.6583989 0.8760443 0.8771099 0.8894776 0.8955944 0.9222511 #>  [544,] 0.65932573 0.8223836 0.8684019 0.8693571 0.8740993 0.8921200 0.9172862 #>  [545,] 0.71813707 0.8264940 0.9067110 1.0099780 1.1022822 1.2036360 1.2095566 #>  [546,] 0.21629621 0.3009462 0.3167348 0.4250519 0.4616561 0.5050785 0.5242883 #>  [547,] 0.45699431 0.4590581 0.5355108 0.5476464 0.5826571 0.6701486 0.6719392 #>  [548,] 0.35963054 0.5976765 0.6206061 0.6336101 0.6707414 0.6790821 0.6824575 #>  [549,] 0.58301167 0.5851683 0.6196863 0.6228291 0.6402223 0.6417850 0.6535752 #>  [550,] 0.27135405 0.4842020 0.4882325 0.5237595 0.5327186 0.5418878 0.5643148 #>  [551,] 0.80281248 0.8087226 0.9071681 0.9365881 0.9549767 0.9721787 1.0265847 #>  [552,] 0.71862846 0.7597058 0.8234266 0.8728537 0.9222713 0.9789055 1.0440381 #>  [553,] 0.45094915 0.8421501 0.8582952 0.8886290 0.9141369 0.9763113 0.9821884 #>  [554,] 0.13934368 0.2428452 0.3342411 0.3651141 0.3679166 0.3829084 0.4805272 #>  [555,] 0.27237342 0.4441723 0.5132193 0.5338823 0.6621273 0.6778590 0.6797562 #>  [556,] 0.34658311 0.3844862 0.5832709 0.6088823 0.6749278 0.6793633 0.6951039 #>  [557,] 0.39100186 0.8816674 0.9568694 0.9716891 1.0118846 1.0173781 1.0519565 #>  [558,] 0.31072384 0.4064494 0.4824160 0.4943451 0.4961898 0.5423066 0.5552995 #>  [559,] 0.36175024 0.4205963 0.4667636 0.5322349 0.5562671 0.5765295 0.5846818 #>  [560,] 0.37049110 0.7604475 0.7650716 0.8009941 0.8012898 0.8748209 0.8785264 #>  [561,] 0.21399890 0.5146832 0.5962294 0.6301110 0.6329947 0.6412104 0.6431744 #>  [562,] 0.33083441 0.4327513 0.4589491 0.5305996 0.5625505 0.6008497 0.6177383 #>  [563,] 0.39939033 0.5776140 0.6556661 0.6749278 0.6872535 0.7165905 0.7329333 #>  [564,] 0.54723126 0.5513452 0.6829526 0.7028998 0.7263323 0.7384764 0.7391128 #>  [565,] 0.50873514 0.5717532 0.6554691 0.6807494 0.6955825 0.7046757 0.7062653 #>  [566,] 0.33143558 0.4451621 0.4826764 0.4883416 0.5127696 0.5912516 0.5924125 #>  [567,] 1.41926620 1.4453761 1.5806618 1.6063033 1.6172418 1.6276178 1.6809096 #>  [568,] 0.32319175 0.4648272 0.5217926 0.5503828 0.5627264 0.6550708 0.7109863 #>  [569,] 0.56700865 0.5871101 0.6226706 0.6274324 0.6453148 0.7142274 0.7158303 #>  [570,] 0.43535072 0.4501754 0.5306193 0.5830972 0.5962874 0.6341743 0.6489536 #>  [571,] 0.13267935 0.1393437 0.4187954 0.4336526 0.4364860 0.4371461 0.4445022 #>  [572,] 0.36563150 0.4882325 0.5004472 0.5279354 0.5432098 0.5498350 0.5527091 #>  [573,] 0.50642499 0.5753730 0.6208701 0.6528180 0.6671471 0.6804542 0.6851323 #>  [574,] 0.48378059 0.6244787 0.6473689 0.6603144 0.7580379 0.7597058 0.7760302 #>  [575,] 0.37185869 0.3924534 0.4451621 0.5187923 0.5219579 0.5244126 0.5347960 #>  [576,] 0.23445424 0.2852333 0.4086348 0.4174691 0.4786173 0.4985297 0.5030537 #>  [577,] 0.37256625 0.3725824 0.4192504 0.4744331 0.5042462 0.5308093 0.5538165 #>  [578,] 0.37326479 0.5838672 0.6528180 0.6782440 0.7643309 0.7686223 0.7750488 #>  [579,] 0.47903449 0.5110472 0.5121367 0.5338226 0.6714041 0.6867017 0.7523310 #>  [580,] 0.42311058 0.6695476 0.7311306 0.9776841 1.0525541 1.0632890 1.0634033 #>  [581,] 0.57508362 0.6840445 0.8620530 0.9108403 0.9978395 1.0064777 1.0194699 #>  [582,] 0.76091799 0.7711151 0.8032878 0.8050413 0.8144492 0.8472938 0.9161961 #>  [583,] 0.23444596 0.3015421 0.3070175 0.4174691 0.4489872 0.4617600 0.4706032 #>  [584,] 0.27226466 0.8079009 0.8499023 1.0784853 1.0893290 1.1458741 1.1687427 #>  [585,] 0.44220434 0.4669321 0.5040527 0.5766456 0.6187411 0.6245348 0.6274126 #>  [586,] 0.29866995 0.5317214 0.6603144 0.7035090 0.7042937 0.7435667 0.8003562 #>  [587,] 0.27397800 0.3872981 0.5268575 0.5447722 0.5489092 0.6181197 0.6198561 #>  [588,] 0.23154039 0.5680358 0.6208568 0.6608245 0.7288602 0.7413602 0.7439166 #>  [589,] 0.37440467 0.5032150 0.5277032 0.5510784 0.5646986 0.5658666 0.5828211 #>  [590,] 0.64620569 0.6604637 0.7526997 0.7527220 0.8270891 0.8307374 0.8406601 #>  [591,] 0.40406787 0.4514422 0.5745288 0.5820708 0.6177383 0.6246316 0.6402169 #>  [592,] 0.38434510 0.3900757 0.3932452 0.5887325 0.6267533 0.6392327 0.6516217 #>  [593,] 0.38066893 0.4327513 0.4683940 0.4974019 0.5355726 0.6497441 0.7012273 #>  [594,] 0.38085583 0.4536409 0.4904569 0.5187908 0.5235230 0.5986820 0.6696586 #>  [595,] 0.53502656 0.6239770 0.6597689 0.6757738 0.7233776 0.7877170 0.8047881 #>  [596,] 0.27831665 0.3010408 0.3120374 0.3287522 0.3432095 0.4494279 0.4723983 #>  [597,] 0.37616048 0.6107151 0.6290967 0.6931054 0.6972586 0.7213988 0.7268775 #>  [598,] 0.76376970 0.8028125 1.4043754 1.4072762 1.4190972 1.4209938 1.4947212 #>  [599,] 0.44182012 0.7566974 0.8450309 0.8655723 0.9357569 1.0665545 1.0948709 #>  [600,] 0.55397237 0.7960216 0.8821900 0.9143359 0.9184174 0.9304678 0.9681963 #>  [601,] 0.45940455 0.6344127 0.7640671 0.8751113 0.9069941 0.9339558 0.9425497 #>  [602,] 0.24263568 0.4617965 0.4862838 0.4935583 0.5058961 0.5164612 0.6160175 #>  [603,] 0.24835875 0.3899307 0.4419782 0.4938952 0.5140316 0.5292019 0.6025951 #>  [604,] 0.33306395 0.4201660 0.5164836 0.5178701 0.5361367 0.5477875 0.5745749 #>  [605,] 0.40116324 0.4737726 0.4747191 0.4929756 0.5054670 0.5098325 0.5183205 #>  [606,] 0.26497430 0.6516321 0.7057181 0.7326479 0.8690916 0.9142811 0.9759745 #>  [607,] 0.43233153 0.6705407 0.7719599 0.7760562 0.7888541 0.8285201 0.8285825 #>  [608,] 0.21124475 0.7965124 0.8499023 0.8638296 0.9862154 1.0242589 1.0566198 #>  [609,] 0.17043615 0.5791031 0.6119211 0.7568780 0.7933537 0.9401932 0.9784879 #>  [610,] 1.27251818 1.4007409 1.5872242 1.6502714 1.6759689 1.7931794 1.7962503 #>  [611,] 0.35056102 0.5386376 0.6705407 0.8652738 0.8902867 0.9165879 0.9442007 #>  [612,] 0.36081713 0.4053927 0.4144134 0.4205963 0.4209899 0.4413732 0.5342375 #>  [613,] 0.32998788 0.4780872 0.5829748 0.6451118 0.6516321 0.6681459 0.7481556 #>  [614,] 0.35146422 0.3814274 0.5201222 0.7057621 0.7107186 0.7137567 0.7610594 #>  [615,] 0.36291605 0.4214459 0.4391736 0.6600433 0.6886020 0.7072703 0.7096227 #>  [616,] 0.34646260 0.4265521 0.4487823 0.4702363 0.4947684 0.4957363 0.4985146 #>  [617,] 0.62805720 0.6972586 0.7227889 1.0564521 1.0855136 1.0942662 1.1260716 #>  [618,] 0.31136211 0.5369502 0.5598178 0.5751151 0.6118213 0.6281894 0.6608245 #>  [619,] 1.11726240 1.3848146 1.6063874 1.6113179 1.6482571 1.8290001 1.8811300 #>  [620,] 0.38538472 0.4354695 0.4614661 0.6278003 0.7072703 0.7150355 0.7591022 #>  [621,] 0.36424210 0.4117843 0.4445334 0.5619969 0.5867999 0.5987444 0.6254579 #>  [622,] 0.42107740 0.5226775 0.6905425 0.8072431 0.8114114 0.8218081 0.8353734 #>  [623,] 0.90251624 0.9179658 1.0056713 1.0084805 1.1554840 1.3880295 1.4135907 #>  [624,] 0.20286252 0.3610021 0.4372544 0.4740533 0.4997761 0.5182454 0.5524235 #>  [625,] 0.25229778 0.4824022 0.5822296 0.6059301 0.6334506 0.6447556 0.6600611 #>  [626,] 0.55947715 0.5916953 0.6345276 0.6698491 0.7170007 0.7471335 0.7557454 #>  [627,] 0.46573585 0.4878851 0.5195055 0.5201538 0.5315147 0.5350378 0.6540243 #>  [628,] 0.93623884 1.0977995 1.1947872 1.2876165 1.2998117 1.4436202 1.4755800 #>  [629,] 0.44825377 0.5195055 0.5581383 0.5637833 0.5975474 0.5977062 0.6021255 #>  [630,] 0.37536730 0.5164301 0.5531608 0.6666422 0.7220469 0.7574397 0.7691004 #>  [631,] 0.32903489 0.3839844 0.4796330 0.5315577 0.5368963 0.5412133 0.5453723 #>  [632,] 0.49740194 0.5447744 0.6280775 0.6527705 0.6697146 0.7372376 0.7830272 #>  [633,] 1.11726240 1.2423258 1.5862658 1.6544705 1.6930723 1.7550223 1.8218150 #>  [634,] 0.27820372 0.3253701 0.3660151 0.5369217 0.6020524 0.7003384 0.7089577 #>  [635,] 0.23445424 0.4048737 0.4322466 0.4608005 0.4648813 0.4977342 0.5050785 #>  [636,] 0.40640874 0.5834456 0.6100679 0.6851942 0.7146722 0.7241467 0.7301356 #>  [637,] 0.46252459 0.6297303 0.6331314 0.7003384 0.8112534 0.8124345 0.8651220 #>  [638,] 0.60088987 0.6339919 0.6388741 0.6474137 0.6474838 0.6696586 0.6988707 #>  [639,] 0.37734773 0.4590026 0.5390705 0.5921952 0.6671026 0.6974902 0.7090112 #>  [640,] 0.21399890 0.4031256 0.5151704 0.5494136 0.5664058 0.6006307 0.6424917 #>  [641,] 0.29207978 0.5401549 0.5474909 0.5524235 0.5796832 0.6059761 0.6585259 #>  [642,] 0.29137886 0.5112414 0.5187908 0.5307719 0.5494953 0.5495123 0.5756728 #>  [643,] 0.44085544 0.5514176 0.5632790 0.7421846 0.7821312 0.7895657 0.7912623 #>  [644,] 0.35281360 0.3912673 0.4989607 0.5335707 0.5414298 0.6156885 0.6527913 #>  [645,] 0.78117363 0.8633145 1.0734705 1.0875151 1.0911114 1.1794586 1.2188109 #>  [646,] 0.69162439 0.7439166 0.9022142 0.9147525 0.9972726 1.0179116 1.0717781 #>  [647,] 0.58197751 0.7391057 0.8008340 0.9239508 0.9941564 1.0069490 1.0591957 #>  [648,] 0.25940823 0.2881677 0.4069067 0.4167995 0.4490281 0.5004484 0.5369063 #>  [649,] 0.43361530 0.4576543 0.5310053 0.5408687 0.5907444 0.6274188 0.6276467 #>  [650,] 0.55397237 0.7664153 0.9252118 0.9803168 1.0258493 1.0333822 1.0508506 #>  [651,] 0.25537990 0.3510083 0.3896725 0.4092183 0.4114427 0.5009519 0.5058887 #>  [652,] 0.50856221 0.6573377 0.6668035 0.7638306 0.8564216 0.8851545 0.9487532 #>  [653,] 0.72771956 0.7701128 0.8085942 0.8565908 0.8612755 0.8616950 0.9033424 #>  [654,] 0.63004997 0.6790883 0.6930265 0.7471025 0.7796087 0.8001579 0.8162489 #>  [655,] 0.62415853 0.6790883 0.8149223 0.8164451 0.8245908 0.8249625 0.8542619 #>  [656,] 0.36371447 0.5336176 0.5416509 0.5799145 0.5927017 0.5963091 0.5968608 #>  [657,] 0.26592251 0.3839797 0.5314992 0.5582578 0.6573676 0.6859789 0.6869186 #>  [658,] 0.96860515 1.5596684 1.7214903 1.8390047 1.8732701 2.0095196 2.0340435 #>  [659,] 0.33992786 0.6787343 0.7953610 0.7995270 0.8406601 0.8451771 0.8946463 #>  [660,] 0.57850160 0.6149651 0.6331314 0.7958120 0.8032878 0.8500671 0.8728612 #>  [661,] 0.59645976 0.6882759 0.7294277 0.7314181 0.7398650 0.7451284 0.7905992 #>  [662,] 0.51562884 0.6948035 0.6954605 0.7612766 0.7820931 0.7821108 0.8110738 #>  [663,] 0.63575836 0.6640708 0.7659304 0.7776300 0.8079934 0.8763540 0.9216423 #>  [664,] 0.32642149 0.5204109 0.5661041 0.5980774 0.6062228 0.6408244 0.6936385 #>  [665,] 0.34583666 0.5094248 0.5822296 0.6019879 0.6508259 0.6516076 0.6744814 #>  [666,] 0.43381139 0.4546433 0.5788702 0.6756414 0.7471335 0.8011819 0.8455020 #>  [667,] 0.53467357 0.5373530 0.5983490 0.5995905 0.6462057 0.7008084 0.7061636 #>  [668,] 0.37654869 0.4283986 0.5094248 0.6696494 0.7168134 0.7303654 0.7825482 #>  [669,] 0.45033714 0.5345327 0.5369502 0.5948893 0.5985664 0.6389778 0.6726457 #>  [670,] 0.83931843 0.8628560 0.9748641 0.9761721 1.0343402 1.0928670 1.0943788 #>  [671,] 0.36481889 0.3875701 0.4533006 0.4579549 0.5029217 0.5244214 0.5263868 #>  [672,] 0.53423748 0.6205033 0.6237384 0.6597708 0.6637734 0.6859404 0.7042937 #>  [673,] 0.22512765 0.3954141 0.4057245 0.4066714 0.5754289 0.5981497 0.6459042 #>  [674,] 0.41796157 0.5450184 0.5485833 0.5590485 0.5908792 0.5971899 0.6076136 #>  [675,] 0.41441336 0.4468249 0.4590581 0.4647662 0.5223277 0.5907237 0.6244787 #>  [676,] 0.35057975 0.6053708 0.6305607 0.7109863 0.7912119 0.8047230 0.8227136 #>  [677,] 0.47357398 0.6408472 0.7471467 0.7822333 0.8163211 0.8184313 0.8571742 #>  [678,] 0.36291605 0.4614661 0.5432727 0.5830972 0.5858808 0.6132328 0.6351667 #>  [679,] 0.34692452 0.4372083 0.5217926 0.5248431 0.5675716 0.5873715 0.6131153 #>  [680,] 0.47956545 0.7061636 0.7550567 0.7569945 0.8113778 0.8205277 0.8486483 #>  [681,] 0.69219525 0.7959432 0.7989554 0.8713739 0.8858275 0.8900467 0.9009966 #>  [682,] 0.23817426 0.2808169 0.3592144 0.5177640 0.5288084 0.5930796 0.5983421 #>  [683,] 0.38064751 0.4014603 0.4293245 0.4413397 0.5164612 0.5171589 0.5566918 #>  [684,] 0.27374113 0.4327614 0.5156453 0.5587885 0.6472249 0.7160519 0.7567857 #>  [685,] 0.36601515 0.3742301 0.4121055 0.5945311 0.7146722 0.7312741 0.7746565 #>  [686,] 0.52802346 0.5513452 0.6314889 0.6345006 0.7183474 0.7496084 0.7939503 #>  [687,] 0.50375515 0.5870666 0.6666116 0.7169169 0.7286017 0.8465621 0.8663543 #>  [688,] 0.24611185 0.3370508 0.5064250 0.5171589 0.5526758 0.6160175 0.6205033 #>  [689,] 0.41794591 0.6505936 0.6588649 0.7485899 0.7491659 0.7548487 0.8576855 #>  [690,] 0.48897230 0.5338226 0.5631145 0.6876064 0.7249473 0.7610390 0.7665936 #>  [691,] 0.25265749 0.3648189 0.4231851 0.4983350 0.5054447 0.5058957 0.5379967 #>  [692,] 0.37194528 0.3896725 0.4518190 0.4888065 0.5286499 0.5368963 0.5411184 #>  [693,] 0.42115831 0.5520766 0.5550128 0.9107576 0.9213139 0.9311899 1.0733480 #>  [694,] 0.30665876 0.3717870 0.3719453 0.4997310 0.5480230 0.6036892 0.6316852 #>  [695,] 0.27235215 0.3682785 0.3877919 0.4563907 0.4686757 0.4790775 0.5102164 #>  [696,] 0.44798338 0.5244854 0.8689665 0.9423840 0.9442252 0.9472707 0.9680754 #>  [697,] 0.27562530 0.3560464 0.6615503 0.7733899 0.7821108 0.7931469 0.8066735 #>  [698,] 0.64271917 0.8104446 0.8518589 0.9819177 1.0527555 1.0704130 1.1284419 #>  [699,] 0.37536730 0.4279793 0.5698067 0.6805403 0.6930791 0.7037863 0.7775509 #>  [700,] 0.77560656 0.8556852 1.1021752 1.1159335 1.1821154 1.2422865 1.2640127 #>  [701,] 0.54944796 0.6858087 0.7160519 0.7161151 0.7514740 0.8011942 0.8040033 #>  [702,] 0.43725443 0.4518521 0.5293771 0.5417388 0.5617081 0.5693952 0.5809123 #>  [703,] 0.27373125 0.3681418 0.5585375 0.5629239 0.6276305 0.6427449 0.6776797 #>  [704,] 0.44727767 0.6573590 0.7268775 0.7276097 0.7664300 0.7956606 0.8151043 #>  [705,] 0.48215564 0.7168258 0.7797592 0.8584295 0.8881306 0.9258788 1.1747701 #>  [706,] 0.32987731 0.5539253 0.6512268 0.6805731 0.7051882 0.7770416 0.8028310 #>  [707,] 0.34290313 0.3916555 0.4384343 0.4439449 0.4451151 0.4652345 0.4779779 #>  [708,] 0.72429204 0.8485679 0.9030081 1.0299906 1.0379055 1.0509786 1.0511232 #>  [709,] 0.26411020 0.5763736 0.5913644 0.6009726 0.6159768 0.6332756 0.6387827 #>  [710,] 0.59236817 0.6317479 0.6552598 0.6905037 0.7620866 0.7751092 0.7835180 #>  [711,] 0.49777424 0.4986955 0.5246994 0.6800699 0.6932700 0.7195649 0.7310794 #>  [712,] 0.30585146 0.3569595 0.3610021 0.4310536 0.5617081 0.6139850 0.6173314 #>  [713,] 0.22730905 0.3101792 0.3896564 0.6595335 0.6614731 0.6616534 0.7026276 #>  [714,] 0.73113062 0.7404447 0.7598041 0.8894494 0.9218340 0.9772646 1.0149214 #>  [715,] 0.53546582 0.6488153 0.6827288 0.7065292 0.7176423 0.7196598 0.7858885 #>  [716,] 0.31706208 0.3824672 0.4997944 0.5211668 0.5414298 0.5734929 0.6104140 #>  [717,] 0.29573626 0.5202421 0.5274417 0.5923872 0.6130515 0.6268764 0.6668035 #>  [718,] 0.51787090 0.6681381 0.6921952 0.6945929 0.7616721 0.7728200 0.7767504 #>  [719,] 0.44511515 0.4773816 0.5208903 0.5221296 0.5708846 0.6036892 0.6071663 #>  [720,] 0.31021064 0.3667173 0.4148328 0.5036602 0.5388405 0.5443826 0.5743608 #>  [721,] 0.76376970 1.4945173 1.5618344 1.6583313 1.7226438 1.7337409 1.8270387 #>  [722,] 0.57910311 0.6115139 0.6685038 0.8223332 0.8940572 0.9323082 0.9573444 #>  [723,] 0.40406787 0.4589491 0.5738974 0.6282063 0.6353663 0.6645386 0.6905037 #>  [724,] 0.26361352 0.3612065 0.5829462 0.6409314 0.6512282 0.6560213 0.6666938 #>  [725,] 0.37766750 0.4877192 0.4977504 0.6141899 0.6374305 0.6463524 0.7035879 #>  [726,] 0.40235927 0.7095820 0.7211537 0.7390536 0.7565762 0.8014326 0.8093141 #>  [727,] 0.25229778 0.5443461 0.5480230 0.5517974 0.5632433 0.6230362 0.6285004 #>  [728,] 0.60180716 0.6345307 0.7319469 0.7498497 0.7510102 0.7522254 0.7795453 #>  [729,] 0.79251236 0.9169129 0.9624720 1.0016268 1.1132133 1.1183533 1.1703586 #>  [730,] 0.21651187 0.3307715 0.3902055 0.4048998 0.4300517 0.5080894 0.5970754 #>  [731,] 0.66354613 0.8080975 0.8122482 0.8448919 0.8598953 0.8703998 0.8736572 #>  [732,] 0.76793703 0.9746944 1.0603844 1.1809858 1.3134783 1.3312986 1.4184369 #>  [733,] 1.41806022 1.4979673 1.5334406 1.6314486 1.6429539 1.7030105 1.7172150 #>  [734,] 0.35753455 0.3949244 0.4214572 0.4281875 0.4408832 0.4810949 0.4826539 #>  [735,] 0.16898732 0.4774863 0.4997761 0.5450184 0.5577090 0.5654247 0.5790945 #>  [736,] 0.27779408 0.4117843 0.4624789 0.4869968 0.5152503 0.5926834 0.6532210 #>  [737,] 0.45094915 0.7870609 0.8365102 0.9197372 0.9669580 0.9771254 1.0148486 #>  [738,] 0.33982358 0.7319139 0.7776584 0.7905012 0.8014663 0.8392729 0.9160105 #>  [739,] 0.39752836 0.4628165 0.5139286 0.5557389 0.6299496 0.6648775 0.6892268 #>  [740,] 0.35502072 0.5015861 0.5160277 0.6083196 0.6489536 0.6874109 0.6959152 #>  [741,] 0.35694620 0.4291263 0.5064923 0.6014621 0.6239316 0.6610865 0.6857948 #>  [742,] 0.54794447 0.5909986 0.6224500 0.6278003 0.6351667 0.6394549 0.6607352 #>  [743,] 0.53400936 0.5574238 0.7236006 0.7286656 0.7608778 0.7813525 0.8909473 #>  [744,] 0.81247524 1.0111774 1.0421754 1.0457865 1.1062559 1.1693766 1.2517755 #>  [745,] 0.33705076 0.3842782 0.4068962 0.5566918 0.5967728 0.6206061 0.6247646 #>  [746,] 0.57869430 0.6643098 0.6963693 0.7499769 0.7532504 0.7787472 0.7840776 #>  [747,] 0.34583666 0.3765487 0.6485353 0.6536423 0.6600611 0.6950010 0.7608483 #>  [748,] 0.55392527 0.6011789 0.6107278 0.6565608 0.6666422 0.7067511 0.7295667 #>  [749,] 1.28096940 1.3035623 1.4027108 1.4503325 1.5398309 1.6228690 1.6251855 #>  [750,] 0.75682393 0.9759578 1.0086455 1.0171610 1.0781083 1.0961189 1.1095360 #>  [751,] 0.47282196 0.5538007 0.6370667 0.7604574 0.8299728 0.8469233 0.8905465 #>  [752,] 0.50321505 0.6012756 0.6440738 0.6763688 0.6811249 0.6878932 0.7024877 #>  [753,] 1.12512471 1.5002459 1.6186691 1.6746142 1.6971242 1.7244525 1.7529364 #>  [754,] 0.19126137 0.2539434 0.3530391 0.4211737 0.4610017 0.4735912 0.4812976 #>  [755,] 0.74738137 0.8490869 0.8598790 0.8819419 0.8834692 0.8956083 0.9020044 #>  [756,] 0.40863482 0.4201660 0.4875000 0.4977342 0.5139286 0.5250651 0.5548998 #>  [757,] 0.59144499 0.6451118 0.6556036 0.6960641 0.7246572 0.7526997 0.7562335 #>  [758,] 0.29034567 0.3153831 0.4148944 0.4420203 0.5036863 0.5100027 0.5967067 #>  [759,] 0.24282195 0.5158832 0.5926552 0.6115119 0.6196056 0.6231284 0.6441286 #>  [760,] 0.34646260 0.4576543 0.5116226 0.5403305 0.5449393 0.5790349 0.5962150 #>  [761,] 0.28637481 0.5161356 0.6072845 0.6403226 0.6589856 0.6618140 0.6619228 #>  [762,] 0.22663217 0.7094030 0.7527483 0.8047230 0.8173328 0.8380186 0.8391967 #>  [763,] 0.34765312 0.4212806 0.4268198 0.4444787 0.6220212 0.6292556 0.6796196 #>  [764,] 0.25529604 0.4244684 0.4925101 0.5098325 0.5315147 0.5866931 0.6092869 #>  [765,] 0.63149423 0.6344471 0.8072431 0.8556852 0.9310300 0.9539625 0.9673221 #>  [766,] 0.41353422 0.4800824 0.4997822 0.5004472 0.5308093 0.5517345 0.5817011 #>  [767,] 0.17192229 0.3120374 0.3274886 0.3970135 0.4186993 0.4204261 0.4487641 #>  [768,] 0.49960642 0.5680358 0.5989883 0.6187675 0.6281894 0.6901499 0.7043782 #>  [769,] 0.53075473 0.5948165 0.7371089 0.7845360 0.8615314 0.8746930 0.9299736 #>  [770,] 1.08831280 1.1290978 1.2708480 1.2778259 1.2814328 1.3589799 1.4092152 #>  [771,] 0.84050232 1.2081018 1.3537660 1.3676314 1.3998444 1.4217575 1.4250399 #>  [772,] 0.49874972 0.5116226 0.5348619 0.5606675 0.6284367 0.6302704 0.6997016 #>  [773,] 1.01823009 1.1625109 1.1724161 1.2807257 1.3346802 1.3372022 1.3953495 #>  [774,] 0.42107740 0.5228137 0.5782739 0.6344471 0.6408634 0.6552209 0.7278126 #>  [775,] 1.44425777 1.5024005 1.5148908 1.5275841 1.5392507 1.5788080 1.6184525 #>  [776,] 0.51100732 0.6797352 0.6979795 0.7239671 0.7271320 0.7607239 0.7625511 #>  [777,] 0.27986585 0.6141458 0.6186548 0.6930265 0.6978360 0.7064858 0.7565171 #>  [778,] 0.61968631 0.6495568 0.6692727 0.6764916 0.6782440 0.7079180 0.7088686 #>  [779,] 0.45979711 0.4943986 0.5124604 0.5573640 0.5791735 0.6387119 0.6584954 #>  [780,] 0.33118191 0.3463831 0.4397189 0.4891228 0.4944305 0.5297014 0.5306987 #>  [781,] 0.31406018 0.3746252 0.4828882 0.5987444 0.6003784 0.6580683 0.6789879 #>  [782,] 0.26858368 0.3672683 0.4606300 0.4823437 0.4895812 0.5083644 0.5182948 #>  [783,] 0.80509624 0.9642723 0.9748641 0.9932183 1.0175262 1.0440972 1.0506605 #>  [784,] 0.34632790 0.5812384 0.6068026 0.6817921 0.7782817 0.7818776 0.8135992 #>  [785,] 0.95031389 1.1390276 1.1488276 1.1717946 1.1885282 1.2093484 1.2547582 #>  [786,] 0.57850160 0.7428819 0.7626059 0.7664228 0.7746565 0.8124345 0.8786955 #>  [787,] 0.23817426 0.3740172 0.4150215 0.5086507 0.5239781 0.5252724 0.5643148 #>  [788,] 0.80083402 0.8688661 0.8952005 0.9025712 1.0016799 1.0082361 1.0213946 #>  [789,] 0.47662769 0.5948893 0.6012587 0.7134555 0.7582208 0.8186225 0.8845991 #>  [790,] 0.38039938 0.4066714 0.4787794 0.5510211 0.6025951 0.6032960 0.6046658 #>  [791,] 0.52281365 0.6314942 0.6905425 0.7001828 0.7370280 0.7496531 0.8518589 #>  [792,] 0.87344003 0.8786955 0.9130445 0.9356086 1.0061377 1.0099780 1.0406190 #>  [793,] 0.39295645 0.6883166 0.7067511 0.7409552 0.7463260 0.9268664 0.9380089 #>  [794,] 0.45337305 0.5127075 0.5475791 0.5705612 0.5791735 0.5867750 0.6463524 #>  [795,] 0.38074638 0.5428344 0.7870609 0.8122835 0.8285331 0.9000570 1.0503715 #>  [796,] 0.65741762 0.6595386 0.6786018 0.6805422 0.6911190 0.6945954 0.6964581 #>  [797,] 0.42601353 0.6297133 0.8849188 0.9089493 0.9556250 0.9724911 1.0142959 #>  [798,] 0.07900148 0.2134423 0.3366718 0.3990870 0.5151064 0.5494136 0.6121996 #>  [799,] 0.75505674 0.7705614 0.7789857 0.8690916 0.9599744 0.9880098 1.0048817 #>  [800,] 0.29071253 0.5367478 0.5514176 0.5993767 0.6653796 0.6892158 0.7155752 #>  [801,] 0.45390851 0.4654537 0.4702363 0.4998753 0.5088901 0.5587419 0.5677993 #>  [802,] 0.66430980 0.7860686 0.7917791 0.8035448 0.8512671 0.8943658 0.9688910 #>  [803,] 0.43339983 0.4889723 0.5015533 0.5121367 0.5496062 0.5623404 0.6369267 #>  [804,] 0.22663217 0.6737981 0.6864307 0.7741433 0.7760244 0.7914695 0.8054832 #>  [805,] 0.34928645 0.3683386 0.3883146 0.5029217 0.5178635 0.5493735 0.5851822 #>  [806,] 0.96860515 1.5474225 1.6916781 1.7508751 1.8336938 1.8432269 1.8601614 #>  [807,] 0.81823719 0.8905984 0.9877874 1.0080292 1.0574307 1.0694985 1.0751693 #>  [808,] 0.51274896 0.5794487 0.5989883 0.6016442 0.6227651 0.6675875 0.7007486 #>  [809,] 0.41927666 0.4758018 0.5229936 0.6353158 0.6485353 0.7109808 0.7184761 #>  [810,] 0.52007377 0.5829748 0.7459431 0.7847037 0.7953610 0.8120088 0.8905465 #>  [811,] 0.52670130 0.5495123 0.5750012 0.5960382 0.6278278 0.6401071 0.6482104 #>  [812,] 0.30912486 0.3221767 0.3445838 0.3679166 0.3921957 0.4167995 0.4364860 #>  [813,] 0.26707323 0.3675232 0.3676174 0.4747191 0.5430170 0.5577346 0.5612849 #>  [814,] 0.66246718 0.6764916 0.6870574 0.7056267 0.7653108 0.7741433 0.7975241 #>  [815,] 0.46401044 0.6718409 0.6750776 0.6944161 0.8141279 0.8415446 0.8674535 #>  [816,] 0.40585333 0.5158832 0.5310501 0.6237231 0.6283424 0.6308819 0.6735509 #>  [817,] 0.51787090 0.7322052 0.7942737 0.8858275 0.8992017 0.9529758 0.9777157 #>  [818,] 0.44878229 0.4693085 0.5348619 0.5403305 0.5507061 0.5780262 0.5890797 #>  [819,] 0.40312556 0.4724889 0.5146832 0.6540016 0.6699648 0.7296882 0.7548694 #>  [820,] 0.52243421 0.9528990 0.9566207 0.9690615 0.9959560 1.0041419 1.0048973 #>  [821,] 0.61876751 0.6220356 0.6670638 0.7302815 0.7320587 0.7336890 0.7419142 #>  [822,] 0.45033714 0.5105971 0.6909721 0.7200852 0.7301892 0.7582208 0.7617684 #>  [823,] 0.27752292 0.3530391 0.3569595 0.4105468 0.4740533 0.5041885 0.5822294 #>  [824,] 0.92369646 0.9935013 1.0084146 1.0603844 1.1688281 1.2238993 1.2536617 #>  [825,] 0.93623884 0.9670659 0.9716891 1.0213059 1.0791829 1.0908452 1.2003763 #>  [826,] 0.51547045 0.5428344 0.5513518 0.7418054 0.7596351 0.8207332 0.8464236 #>  [827,] 0.36357445 0.3906010 0.4358474 0.4812976 0.4851370 0.5204109 0.5300283 #>  [828,] 0.21918209 0.3515583 0.4460121 0.4735912 0.5015861 0.5055582 0.5928341 #>  [829,] 0.47248888 0.7390052 0.7862303 0.7934345 0.8240780 0.8774079 0.8816378 #>  [830,] 0.61443490 0.7276547 0.7430517 0.7568780 0.8004466 0.8797075 0.8800598 #>  [831,] 0.33721916 0.4333998 0.4494589 0.5627313 0.5631145 0.6392648 0.6425977 #>  [832,] 0.35584388 0.3608171 0.4589638 0.4647662 0.5355108 0.5409202 0.5661899 #>  [833,] 0.31425204 0.3975284 0.5110073 0.6375903 0.6674449 0.7254397 0.7415100 #>  [834,] 0.43093765 0.4821556 0.6053708 0.7107931 0.8125750 0.9832103 1.0043076 #>  [835,] 0.84050232 1.4143479 1.5009154 1.6691936 1.6755054 1.6854697 1.8534532 #>  [836,] 0.46890975 0.4922400 0.5605946 0.5643164 0.5666706 0.6025482 0.6248032 #>  [837,] 0.29686347 0.4882768 0.6842423 0.7095820 0.7367931 0.8004466 0.8982905 #>  [838,] 0.28297282 0.4104397 0.5606675 0.5922417 0.5930066 0.6435596 0.6506995 #>  [839,] 0.66046375 0.7587216 0.7705614 0.7822333 0.8118788 0.9794113 0.9822419 #>  [840,] 0.20603309 0.3096341 0.3153831 0.4322466 0.4852165 0.4985219 0.5298338 #>  [841,] 0.51426500 0.5160277 0.5448443 0.6115975 0.6209217 0.6602422 0.6673354 #>  [842,] 0.87682996 0.8871343 0.9657971 0.9972174 1.0056713 1.0089594 1.0226326 #>  [843,] 0.53344981 0.5666706 0.5705612 0.5804025 0.6160059 0.6285987 0.6888110 #>  [844,] 0.63329928 0.7035094 0.8909473 0.9090553 0.9450609 1.0034860 1.0322017 #>  [845,] 0.59733251 0.9069941 1.0315972 1.0651302 1.1004546 1.1819033 1.2104695 #>  [846,] 0.35584388 0.4053927 0.4569943 0.4801926 0.5726849 0.5907237 0.6562850 #>  [847,] 0.44945895 0.4669321 0.4710597 0.5335359 0.5496062 0.5714739 0.5741004 #>  [848,] 0.41227811 0.4813064 0.5127075 0.5322349 0.5396463 0.5524752 0.5573640 #>  [849,] 0.60207570 0.6332993 0.7541340 0.7612766 0.8339584 0.8695335 0.9403258 #>  [850,] 0.56667337 0.5690583 0.6806436 0.6841255 0.7057482 0.7196784 0.7266933 #>  [851,] 0.60644755 0.6068605 0.6088823 0.6313599 0.6381212 0.7043648 0.8091027 #>  [852,] 0.46309918 0.5503828 0.5671789 0.6737981 0.6893140 0.6897462 0.7094030 #>  [853,] 0.54477441 0.7328934 0.7748304 0.7982394 0.8948322 0.9052024 0.9099494 #>  [854,] 0.42219845 0.5288742 0.5313286 0.5314622 0.5489092 0.6208746 0.6326844 #>  [855,] 0.36655786 0.4248826 0.5211668 0.5812758 0.6696843 0.6909388 0.7411261 #>  [856,] 0.66906906 0.6929659 0.7029221 0.7363367 0.8576981 0.9298216 0.9509733 #>  [857,] 0.10961117 0.5561111 0.5914676 0.6253939 0.6720140 0.6791187 0.6825467 #>  [858,] 0.34458382 0.3564569 0.4068168 0.4490281 0.4817999 0.5008421 0.5009519 #>  [859,] 0.53900013 0.7596351 0.7809893 0.7977962 0.8110831 0.8285331 0.8717266 #>  [860,] 0.26056421 0.3320452 0.3675232 0.4011632 0.4244684 0.5245809 0.5277923 #>  [861,] 0.53863757 0.5741677 0.7806849 0.9257462 0.9832158 1.0343402 1.0652415 #>  [862,] 0.48019263 0.5409202 0.6188566 0.6728008 0.6845853 0.6976790 0.6983050 #>  [863,] 0.16898732 0.4179616 0.4874333 0.5182454 0.5581737 0.5727718 0.5833047 #>  [864,] 0.49674503 0.8623701 0.9361598 1.0285802 1.0919945 1.1454716 1.1467348 #>  [865,] 0.74356670 0.8506358 0.8988180 0.9653260 0.9658914 1.0456813 1.1495489 #>  [866,] 0.19274415 0.5890797 0.6656190 0.6929399 0.7092455 0.7130241 0.7300549 #>  [867,] 0.82780332 0.8682733 0.8819994 0.9382707 0.9624720 1.0012975 1.0401675 #>  [868,] 0.80504130 1.0132570 1.1390276 1.2647887 1.2893205 1.3519468 1.4066961 #>  [869,] 0.38993068 0.4592070 0.4627760 0.4812428 0.4883416 0.5284553 0.5554485 #>  [870,] 0.41300116 0.4726289 0.5145285 0.5831077 0.6027282 0.6196082 0.6260452 #>  [871,] 0.35872808 0.5216523 0.5218097 0.5943798 0.8396827 0.8405865 0.8480663 #>  [872,] 0.66061744 0.9751220 0.9887768 1.0250606 1.1462059 1.1488878 1.1533324 #>  [873,] 0.55047599 0.9306545 0.9634239 1.0486355 1.0540035 1.1314857 1.1924546 #>  [874,] 0.74044467 0.8490869 0.8839707 1.0353342 1.0634033 1.0914634 1.1081549 #>  [875,] 0.36909222 0.3824672 0.4248826 0.4752431 0.5622268 0.6527913 0.7932064 #>  [876,] 0.19126137 0.3194772 0.3331275 0.3635745 0.3842054 0.4105468 0.4783768 #>  [877,] 0.52330958 0.5452436 0.6420042 0.6720140 0.7052971 0.7300549 0.7423220 #>  [878,] 0.35754567 0.3647637 0.3856706 0.4204261 0.4580945 0.4684129 0.4723983 #>  [879,] 0.48698634 0.5103997 0.5561728 0.5943264 0.6441364 0.6522988 0.6841255 #>  [880,] 0.38075836 0.4420203 0.4485579 0.4658402 0.5140316 0.5446332 0.5554485 #>  [881,] 0.17192229 0.2007145 0.2783166 0.3575457 0.4577139 0.4804332 0.4840932 #>  [882,] 0.55742381 0.7035094 0.8815920 0.9407532 0.9665835 1.0070158 1.0256505 #>  [883,] 1.06671323 1.1098776 1.1939526 1.2708891 1.3019662 1.3272026 1.3346704 #>  [884,] 0.59122759 0.5924289 0.6878932 0.7469794 0.7701128 0.7939503 0.9124692 #>  [885,] 0.26361352 0.4103122 0.5966234 0.6251264 0.6412155 0.6638039 0.6959499 #>  [886,] 0.38142744 0.4702799 0.6183745 0.6692462 0.7132491 0.7992174 0.8603296 #>  [887,] 0.41103442 0.4721603 0.4943986 0.5488501 0.5919320 0.6048693 0.6696642 #>  [888,] 0.48463135 0.5583400 0.6188566 0.7207993 0.7371089 0.7768013 0.7927239 #>  [889,] 0.20402766 0.2125101 0.5652156 0.6438647 0.6656291 0.6934208 0.7234980 #>  [890,] 0.40644938 0.4742585 0.5110722 0.5993060 0.6140650 0.6602692 0.6758489 #>  [891,] 0.31009228 0.5020218 0.5300283 0.5325700 0.5659865 0.6462933 0.6560148 #>  [892,] 0.63783218 0.7207886 0.7319139 1.1488815 1.2363910 1.2394352 1.2466568 #>  [893,] 0.51562884 0.6047001 0.6736678 0.7180052 0.8424851 0.8446939 0.8627030 #>  [894,] 1.16058388 1.2652724 1.3307926 1.3720424 1.4087473 1.4230225 1.4442578 #>  [895,] 0.76904320 0.8050931 1.0306609 1.0424817 1.0576121 1.1172876 1.1341513 #>  [896,] 1.03405675 1.0807985 1.1629530 1.1726818 1.2371444 1.2431209 1.2989847 #>  [897,] 0.26056421 0.2953271 0.3596759 0.3676174 0.4370006 0.4674089 0.4867114 #>  [898,] 0.66295655 1.0524327 1.1454716 1.1938812 1.2348503 1.2659794 1.3541057 #>  [899,] 0.26714363 0.4168866 0.4398471 0.4827427 0.4993616 0.5299611 0.5303869 #>  [900,] 0.99383792 1.0207571 1.0337819 1.0365731 1.0417322 1.0553590 1.0669284 #>  [901,] 0.41869934 0.4499811 0.4804332 0.4892405 0.5419171 0.5443461 0.5630225 #>  [902,] 0.41001145 0.4336526 0.4356013 0.4651105 0.5229936 0.5439551 0.5553379 #>  [903,] 0.44601213 0.4739712 0.4898238 0.5262443 0.5330906 0.5404534 0.5571109 #>  [904,] 0.38729811 0.4356013 0.4758018 0.5605504 0.5629239 0.6072090 0.6208746 #>  [905,] 0.43376457 0.6284165 0.6473181 0.6926234 0.7473814 0.7664153 0.8196974 #>  [906,] 0.36889156 0.4181342 0.4353989 0.5443613 0.6925852 0.7820596 0.8175952 #>  [907,] 0.35553709 0.3639759 0.4068168 0.4192504 0.4518190 0.4547488 0.4583266 #>  [908,] 0.62373689 0.7183489 0.8926911 0.9374606 0.9533518 0.9709443 0.9932183 #>  [909,] 0.47303215 0.5924289 0.6284165 0.6345006 0.6550931 0.6738575 0.6763688 #>  [910,] 0.37272716 0.7574815 0.8620530 0.9235493 1.0293627 1.0346818 1.0506003 #>  [911,] 0.29797572 0.4412957 0.5142650 0.5494740 0.6083196 0.6670661 0.6900840 #>  [912,] 0.31680663 0.3592144 0.3740172 0.4725692 0.5161527 0.5982736 0.6788071 #>  [913,] 0.40154240 0.5960382 0.6015735 0.6039505 0.6143347 0.6173411 0.6399215 #>  [914,] 0.25529604 0.4657359 0.5176139 0.5277923 0.5430170 0.5472789 0.5484479 #>  [915,] 0.52267751 0.5274417 0.7076093 0.7294261 0.7614309 0.7638306 0.7763127 #>  [916,] 0.60183197 0.6690691 0.7574397 0.7667885 0.7775509 0.8601285 0.9643448 #>  [917,] 0.27254531 0.3342411 0.4363043 0.4371461 0.4383080 0.4857113 0.5166758 #>  [918,] 0.27820372 0.3134153 0.4121055 0.4625246 0.5752935 0.7428819 0.7835030 #>  [919,] 0.22730905 0.3454661 0.4692602 0.5782066 0.7374615 0.7477163 0.7979180 #>  [920,] 0.38219942 0.5233096 0.6548786 0.6736678 0.6747795 0.7224611 0.7872064 #>  [921,] 0.35397953 0.4057245 0.4850417 0.5075179 0.5084299 0.5268116 0.5634698 #>  [922,] 0.49108733 0.6237369 0.6983050 0.7207993 0.7317220 0.7329495 0.8043957 #>  [923,] 0.57316599 0.7018844 0.7698621 0.9067110 0.9072002 0.9167711 0.9358035 #>  [924,] 0.27779408 0.5067058 0.5474909 0.5619969 0.5990116 0.6007823 0.6651803 #>  [925,] 0.28951401 0.3507199 0.6028122 0.6597689 0.6932175 0.7135412 0.7213954 #>  [926,] 0.65566614 0.7996484 0.8013142 0.8076352 0.8094535 0.8484571 0.8515109 #>  [927,] 0.27562530 0.5907578 0.6047001 0.6923461 0.6948035 0.7315810 0.7754890 #>  [928,] 0.42319471 0.4619486 0.5357388 0.6964726 0.7374605 0.7408393 0.7504980 #>  [929,] 0.38240555 0.6968206 0.7107931 0.7555991 0.7797592 1.0041571 1.0511232 #>  [930,] 0.48905962 0.5091761 0.6165220 0.6183745 0.6802482 0.7362994 0.7480086 #>  [931,] 0.46604194 0.5057079 0.5093474 0.6374305 0.6515160 0.6895867 0.7152979 #>  [932,] 0.36022339 0.3990870 0.4527244 0.6065168 0.6401071 0.6408634 0.6579255 #>  [933,] 0.27977522 0.3955108 0.4488479 0.4904569 0.4931540 0.5990700 0.6173134 #>  [934,] 0.38153048 0.4648426 0.5635859 0.6371110 0.6375488 0.6404007 0.6428293 #>  [935,] 0.44190042 0.4850204 0.5412125 0.5499718 0.5658402 0.5743258 0.5858808 #>  [936,] 0.47357398 0.5110472 0.5623404 0.6583454 0.6729948 0.7008084 0.7540306 #>  [937,] 0.61987271 0.7960216 0.9158306 1.0644285 1.1518480 1.1549978 1.1687427 #>  [938,] 0.29207978 0.5936938 0.5990116 0.6335023 0.6814437 0.6869994 0.7562474 #>  [939,] 0.10961117 0.5477442 0.5794918 0.6271646 0.6420042 0.6697815 0.6785323 #>  [940,] 0.37616048 0.5179263 0.5733939 0.6280572 0.6450097 0.7735499 0.7956606 #>  [941,] 0.59060294 0.5975474 0.6558207 0.6976132 0.7076012 0.7717883 0.8033412 #>  [942,] 0.21344226 0.2370228 0.3082354 0.3653168 0.4527244 0.5664058 0.6008899 #>  [943,] 0.37666715 0.4403305 0.4726289 0.4837092 0.5482435 0.5557389 0.5831863 #>  [944,] 0.26497430 0.6674207 0.7481556 0.7606691 0.9812453 1.0048817 1.0092092 #>  [945,] 0.38219942 0.5879447 0.6173491 0.6611236 0.6726969 0.6757738 0.7159151 #>  [946,] 0.49533234 0.6346750 0.6884615 0.7041224 0.7872879 0.8081023 0.8233290 #>  [947,] 0.62918180 0.7968490 0.8299728 0.8488415 0.9636785 0.9671748 0.9727649 #>  [948,] 0.19062462 0.3290349 0.3639759 0.4651105 0.5008421 0.5286499 0.5410208 #>  [949,] 0.47084221 0.6654162 0.7048069 0.7374605 0.7551687 0.8144466 0.8210441 #>  [950,] 0.40585333 0.6090162 0.6438393 0.6645667 0.6893189 0.7167928 0.7535016 #>  [951,] 1.71535420 1.7710182 1.8012323 1.9644858 2.0306185 2.1379828 2.1948562 #>  [952,] 0.94719990 1.1703586 1.2716053 1.2792180 1.2884615 1.3356232 1.3512644 #>  [953,] 0.24524756 0.3722042 0.4048998 0.4403305 0.4920482 0.5248431 0.5715971 #>  [954,] 0.59171612 0.6484736 0.6593648 0.7002319 0.7342629 0.7738593 0.7823798 #>  [955,] 0.36726831 0.3876206 0.3916555 0.4122333 0.4146105 0.4408832 0.4436452 #>  [956,] 0.28197372 0.2951427 0.2970063 0.3015421 0.3331275 0.4610017 0.4851370 #>  [957,] 0.75137243 0.7668919 0.8383914 0.8551747 0.8874871 0.8942799 0.9154840 #>  [958,] 0.43970503 0.4590166 0.4673949 0.4807027 0.4878093 0.4942333 0.5067848 #>  [959,] 0.21563769 0.4584524 0.4785825 0.4826764 0.4827427 0.5608112 0.5656248 #>  [960,] 0.34159301 0.3900757 0.4015424 0.4751257 0.5479820 0.6047128 0.6139697 #>  [961,] 1.64730746 1.7606569 1.8298994 1.8558945 1.8647541 1.9069203 2.0772323 #>  [962,] 0.46116246 0.6403444 0.6522988 0.7392183 0.7429670 0.7526534 0.8085424 #>  [963,] 0.20071453 0.3274886 0.3432095 0.3856706 0.4592138 0.4892405 0.5513524 #>  [964,] 0.60683629 0.6517776 0.8600679 0.9081630 0.9218340 0.9547859 0.9884917 #>  [965,] 0.53546582 0.5653624 0.5850334 0.5880933 0.5956964 0.6276467 0.6442174 #>  [966,] 0.21651187 0.2317734 0.3859907 0.4146105 0.4910142 0.4920482 0.5625149 #>  [967,] 0.41103442 0.4597971 0.5235230 0.5307719 0.5510616 0.6118213 0.6688656 #>  [968,] 0.39860107 0.4380599 0.4533006 0.5529875 0.5604020 0.5783303 0.5932555 #>  [969,] 0.39210704 0.4336153 0.5295156 0.6056370 0.6156885 0.6515893 0.6693918 #>  [970,] 0.38757011 0.4032872 0.4681296 0.5233900 0.5238755 0.5789343 0.5793320 #>  [971,] 0.21918209 0.2444457 0.4211737 0.4739712 0.4783768 0.4932683 0.5504818 #>  [972,] 0.61758497 0.6874442 0.8036485 0.8796937 0.8933293 0.9167823 0.9520005 #>  [973,] 0.37950826 0.4977742 0.5460506 0.5654979 0.6470833 0.7371090 0.7557208 #>  [974,] 0.13267935 0.2428452 0.3835312 0.4100114 0.4443748 0.4630358 0.4857113 #>  [975,] 0.29137886 0.3808558 0.4494418 0.5510616 0.5705460 0.5788722 0.5844677 #>  [976,] 0.57887022 0.8547462 0.8845617 0.8948754 0.9142141 0.9572253 1.0449902 #>  [977,] 0.53467357 0.6050027 0.6217932 0.6930354 0.8113778 0.8167004 0.8336929 #>  [978,] 0.24855464 0.3429031 0.4231851 0.4459950 0.5169359 0.5208903 0.5263868 #>  [979,] 0.38428962 0.4476540 0.4706032 0.4717548 0.4817677 0.5750238 0.5753789 #>  [980,] 0.38831457 0.4681296 0.5244214 0.5359329 0.5656454 0.6005207 0.6054502 #>  [981,] 0.32642149 0.4353507 0.4688051 0.5189561 0.5746850 0.5750395 0.5897147 #>  [982,] 0.39295645 0.6280775 0.7546048 0.8182106 0.8942453 0.9120783 0.9266390 #>  [983,] 0.51525033 0.6593257 0.6665253 0.6819764 0.6948617 0.7044144 0.7242251 #>  [984,] 0.93081475 0.9929918 1.0686850 1.0714018 1.0977995 1.1447031 1.1805190 #>  [985,] 0.37853720 0.4998753 0.6013005 0.6443655 0.6587918 0.6663823 0.6978056 #>  [986,] 0.27237342 0.4337646 0.5060788 0.6272943 0.6577665 0.6708163 0.6836464 #>  [987,] 1.38856912 1.6361155 1.7030627 1.7118549 1.7578300 1.7924477 1.8974918 #>  [988,] 0.66347900 0.7011247 0.7657464 0.7867163 0.8439553 0.8543112 0.8612993 #>  [989,] 0.25283902 0.4725692 0.6412155 0.6530337 0.6666938 0.6822739 0.6852734 #>  [990,] 0.34537301 0.4943825 0.5348730 0.6260920 0.6302965 0.6686640 0.6707097 #>  [991,] 0.19274415 0.6253939 0.6271646 0.6384520 0.7050826 0.7361423 0.7423220 #>  [992,] 0.68535263 0.7449855 0.8332449 0.8448919 0.8546296 0.8701522 0.9151551 #>  [993,] 0.29573626 0.5085622 0.5222549 0.5714498 0.5996214 0.6150778 0.6439832 #>  [994,] 0.34324427 0.3871573 0.4821855 0.4984314 0.5288742 0.5620869 0.6308612 #>  [995,] 0.38428962 0.5359329 0.5577090 0.5581737 0.5796832 0.6007823 0.6205757 #>  [996,] 0.24855464 0.3755687 0.4384343 0.4606300 0.4865361 0.5041361 0.5170806 #>  [997,] 0.71485709 1.0349787 1.1488815 1.1793684 1.1988625 1.2671123 1.2780407 #>  [998,] 0.47264023 0.5073235 0.5280320 0.5308094 0.5817286 0.6269897 0.6459467 #>  [999,] 0.34558386 0.4790775 0.5313286 0.5317383 0.5337046 0.5827102 0.5840487 #> [1000,] 0.34397845 0.3794034 0.4114427 0.4779854 0.5226127 0.5297184 0.5677993 #>              [,8]      [,9]     [,10] #>    [1,] 1.5243659 1.5808169 1.6309819 #>    [2,] 0.9611154 0.9978109 1.0056389 #>    [3,] 0.8207332 0.8635637 0.8753390 #>    [4,] 0.9403258 0.9432942 0.9694713 #>    [5,] 0.7043648 0.7952674 0.8274985 #>    [6,] 0.5439281 0.5770422 0.5982568 #>    [7,] 0.7036611 0.7609579 0.8734171 #>    [8,] 0.5276847 0.5397691 0.6196082 #>    [9,] 0.6723708 0.7324915 0.7489528 #>   [10,] 0.6932124 0.7214650 0.7540280 #>   [11,] 1.0114782 1.0153096 1.0194461 #>   [12,] 0.6912918 0.6960641 0.7493430 #>   [13,] 0.7598048 0.8036485 0.8177474 #>   [14,] 0.6430809 0.6726969 0.6822545 #>   [15,] 1.0414107 1.0553590 1.0591613 #>   [16,] 0.8700759 0.8739138 0.8938110 #>   [17,] 0.7917640 0.7923931 0.8010192 #>   [18,] 0.8303925 0.8822084 0.8877890 #>   [19,] 0.7475963 0.7657464 0.7864254 #>   [20,] 0.5630225 0.5770422 0.6040373 #>   [21,] 0.6078729 0.6186548 0.6461841 #>   [22,] 0.8864625 0.9761193 0.9881459 #>   [23,] 0.5940433 0.5999559 0.6055215 #>   [24,] 0.6131153 0.6777096 0.7524123 #>   [25,] 0.6602214 0.6994899 0.7164263 #>   [26,] 0.8288068 0.9339935 0.9397074 #>   [27,] 0.6342003 0.6379932 0.6517197 #>   [28,] 1.1203890 1.1337488 1.2100997 #>   [29,] 0.5249234 0.6053305 0.6375590 #>   [30,] 0.7140120 0.7154912 0.7488831 #>   [31,] 0.4942333 0.5761194 0.5855809 #>   [32,] 0.7520886 0.8040873 0.8396827 #>   [33,] 0.8323721 0.8906242 0.9136292 #>   [34,] 0.6641804 0.6717917 0.6872239 #>   [35,] 1.0939944 1.1142197 1.1249202 #>   [36,] 0.5219579 0.5337046 0.5643711 #>   [37,] 0.9828091 1.0030337 1.0086629 #>   [38,] 0.6305399 0.6523084 0.6545695 #>   [39,] 0.8966548 0.9142811 0.9187279 #>   [40,] 0.6468075 0.7282995 0.7573701 #>   [41,] 1.0466836 1.0745694 1.0879764 #>   [42,] 0.8402753 0.8565728 0.8618696 #>   [43,] 0.6616534 0.6651803 0.6820772 #>   [44,] 0.8484498 0.8826854 0.9821245 #>   [45,] 1.6800755 1.6845896 1.7288681 #>   [46,] 0.8054544 0.8615314 0.8707869 #>   [47,] 0.6353663 0.6555521 0.6722421 #>   [48,] 0.9178182 0.9200243 0.9927841 #>   [49,] 0.5457032 0.5663475 0.5790349 #>   [50,] 0.4860429 0.5075179 0.5379716 #>   [51,] 0.7611719 0.7637640 0.7995270 #>   [52,] 1.2980012 1.3192358 1.3233202 #>   [53,] 0.5446332 0.5478312 0.5535708 #>   [54,] 0.6638055 0.6651148 0.6797352 #>   [55,] 0.5976980 0.6141899 0.6375299 #>   [56,] 0.8755020 0.8962753 0.9500238 #>   [57,] 1.2146188 1.2815139 1.4096943 #>   [58,] 1.0638888 1.1074634 1.1145257 #>   [59,] 0.7242678 0.7270035 0.7293509 #>   [60,] 1.0101676 1.0546030 1.0602406 #>   [61,] 0.6618560 0.6654939 0.6703510 #>   [62,] 0.7501233 0.7567534 0.8105553 #>   [63,] 0.7102408 0.7406132 0.7604855 #>   [64,] 0.6923005 0.7421846 0.7520886 #>   [65,] 1.2056942 1.2894449 1.2991575 #>   [66,] 1.0340444 1.0554123 1.0610237 #>   [67,] 1.3881422 1.3955733 1.4387810 #>   [68,] 0.7332208 0.7571446 0.7770250 #>   [69,] 1.0857663 1.1366361 1.1438864 #>   [70,] 0.7315282 0.7459833 0.7725486 #>   [71,] 0.6440949 0.6446191 0.6983985 #>   [72,] 1.2722014 1.2976706 1.3110711 #>   [73,] 1.3203683 1.3419641 1.3451671 #>   [74,] 1.6801885 1.6853579 1.7120924 #>   [75,] 0.5693952 0.5750238 0.5821031 #>   [76,] 1.0838494 1.1065840 1.1169843 #>   [77,] 0.8086745 0.8116027 0.8389967 #>   [78,] 0.6819764 0.7163205 0.7215572 #>   [79,] 0.7950445 0.8059375 0.8063845 #>   [80,] 0.7012542 0.7164036 0.7310572 #>   [81,] 2.1642842 2.2000876 2.2331132 #>   [82,] 0.8300079 0.8348768 0.8955452 #>   [83,] 0.7831751 0.8878947 0.8923720 #>   [84,] 0.7421833 0.7430611 0.7604475 #>   [85,] 1.1437027 1.2023561 1.3051234 #>   [86,] 0.7069953 0.7164263 0.7207612 #>   [87,] 0.5002889 0.5212093 0.5277063 #>   [88,] 1.0414267 1.0564780 1.1446718 #>   [89,] 0.7087140 0.7210939 0.7300471 #>   [90,] 0.6453419 0.6832413 0.7144920 #>   [91,] 0.6620797 0.6756653 0.7069087 #>   [92,] 1.1947872 1.2003763 1.2043890 #>   [93,] 0.8512671 0.8513194 0.9902324 #>   [94,] 0.8398371 0.8401201 0.8559189 #>   [95,] 0.6780016 0.6897462 0.7036488 #>   [96,] 0.5746850 0.5875314 0.5921158 #>   [97,] 0.8658725 0.9338371 0.9690399 #>   [98,] 1.0853816 1.1052694 1.1294021 #>   [99,] 0.6692727 0.6825616 0.7028998 #>  [100,] 1.1663184 1.1840966 1.1903360 #>  [101,] 0.6834033 0.7182481 0.7783143 #>  [102,] 0.7084309 0.7091938 0.7659119 #>  [103,] 0.6449446 0.6462933 0.6719392 #>  [104,] 0.9233463 0.9835241 0.9947733 #>  [105,] 1.1891001 1.2249966 1.2384766 #>  [106,] 1.1099235 1.1355901 1.1725647 #>  [107,] 0.8123415 0.8325188 0.8671570 #>  [108,] 0.8365915 0.8835575 0.9009966 #>  [109,] 0.6326446 0.6574176 0.6704237 #>  [110,] 1.3458911 1.3519802 1.3581095 #>  [111,] 0.6545029 0.6869348 0.6881646 #>  [112,] 1.0572347 1.0772545 1.0896860 #>  [113,] 0.7767504 0.8143436 0.8462347 #>  [114,] 0.9217313 0.9487040 0.9488802 #>  [115,] 0.7756343 0.8557102 0.8710254 #>  [116,] 0.7891744 0.8032448 0.8230275 #>  [117,] 0.8484029 0.8488996 0.8612993 #>  [118,] 0.8383914 0.8446840 0.8528961 #>  [119,] 0.8192676 0.9261510 0.9664756 #>  [120,] 0.7897595 0.8170575 0.8347737 #>  [121,] 0.9853501 1.0255424 1.0457865 #>  [122,] 0.6665253 0.7115648 0.7229703 #>  [123,] 0.7270004 0.7878174 0.7915487 #>  [124,] 1.8305911 1.9078020 1.9944160 #>  [125,] 0.5928401 0.6368901 0.6445785 #>  [126,] 0.7807276 0.7853142 0.8001476 #>  [127,] 0.7061602 0.7241037 0.7882429 #>  [128,] 0.6003784 0.6088547 0.6383166 #>  [129,] 0.7535734 0.7603356 0.7929358 #>  [130,] 0.9012099 0.9060264 0.9358829 #>  [131,] 0.6657764 0.6753620 0.6839478 #>  [132,] 0.9469076 0.9695313 1.0316372 #>  [133,] 0.9726798 1.0643520 1.0705907 #>  [134,] 0.9120428 0.9666811 1.0409997 #>  [135,] 1.5699467 1.5947757 1.6392738 #>  [136,] 0.8182372 0.8191019 0.8344704 #>  [137,] 0.6936492 0.7024877 0.7115648 #>  [138,] 0.6849311 0.7284462 0.7367644 #>  [139,] 0.8675932 0.8743178 0.8836714 #>  [140,] 0.5796756 0.5953103 0.6121718 #>  [141,] 0.5783303 0.5966800 0.6036024 #>  [142,] 0.6007914 0.6438789 0.6502767 #>  [143,] 0.6620525 0.6806436 0.6867477 #>  [144,] 0.8598790 0.8724186 0.9304678 #>  [145,] 0.7014700 0.7119572 0.7208976 #>  [146,] 0.8137668 0.8385605 0.8450309 #>  [147,] 1.8041595 1.8161606 1.8558945 #>  [148,] 1.1210947 1.1285060 1.1598155 #>  [149,] 0.6452655 0.6583454 0.6593995 #>  [150,] 1.3792715 1.4307066 1.5478979 #>  [151,] 1.0860630 1.1100208 1.1332205 #>  [152,] 0.6403226 0.6421274 0.6443655 #>  [153,] 1.1906040 1.2140674 1.2141235 #>  [154,] 1.0057026 1.0182671 1.0256053 #>  [155,] 1.0403373 1.0696501 1.0827458 #>  [156,] 1.1766876 1.2167468 1.2247420 #>  [157,] 0.6424917 0.6529798 0.6937404 #>  [158,] 0.7134555 0.7617684 0.8326278 #>  [159,] 0.7298838 0.7843733 0.8009879 #>  [160,] 0.5654880 0.5663867 0.5886008 #>  [161,] 0.5649241 0.5693824 0.5812760 #>  [162,] 0.8142111 0.8256681 0.8272541 #>  [163,] 0.8281454 0.8328057 0.8483943 #>  [164,] 0.9857413 1.0088831 1.0380476 #>  [165,] 0.5506159 0.5767945 0.5830846 #>  [166,] 0.8656360 0.8914866 0.9326425 #>  [167,] 0.5233900 0.5292069 0.5416509 #>  [168,] 0.5578011 0.5643164 0.5944404 #>  [169,] 0.7386633 0.7662297 0.9012099 #>  [170,] 1.1387468 1.1658656 1.1679701 #>  [171,] 0.9562380 0.9585808 0.9690550 #>  [172,] 0.7958698 0.8491134 0.8656282 #>  [173,] 0.7329002 0.7548487 0.7614309 #>  [174,] 0.8888326 0.9138311 1.0139692 #>  [175,] 0.8472938 0.8731073 0.9566480 #>  [176,] 0.9184091 0.9184174 0.9258757 #>  [177,] 1.2139058 1.2432262 1.2583021 #>  [178,] 0.9205091 0.9403023 0.9821884 #>  [179,] 1.6050450 1.6194342 1.6253970 #>  [180,] 0.7539741 0.7678168 0.7904194 #>  [181,] 0.7747172 0.8280436 0.8445258 #>  [182,] 0.7610390 0.7624164 0.7719599 #>  [183,] 0.8098735 0.8116027 0.9110454 #>  [184,] 1.1174933 1.1827852 1.2005486 #>  [185,] 0.5391978 0.5443826 0.5470348 #>  [186,] 0.6459826 0.6600433 0.6793389 #>  [187,] 0.5965657 0.6096712 0.6342035 #>  [188,] 0.7144528 0.7317062 0.7411022 #>  [189,] 0.6665549 0.7036611 0.8455571 #>  [190,] 0.6707097 0.6855123 0.7104163 #>  [191,] 0.6880536 0.6951885 0.7146643 #>  [192,] 0.6223099 0.6273539 0.6390304 #>  [193,] 0.6342512 0.6388741 0.6752632 #>  [194,] 0.6327771 0.6469318 0.6602149 #>  [195,] 1.3646138 1.4342775 1.4604686 #>  [196,] 0.5524353 0.5610534 0.5743608 #>  [197,] 0.8344419 0.8614908 0.8924273 #>  [198,] 0.9935013 1.0102038 1.0604318 #>  [199,] 0.9424759 0.9766749 0.9793582 #>  [200,] 0.8082735 0.8481908 0.8727487 #>  [201,] 0.9090066 0.9098650 0.9413194 #>  [202,] 0.5442527 0.5662443 0.5758904 #>  [203,] 0.8915143 0.9333763 0.9400642 #>  [204,] 0.8024589 0.8144466 0.8153928 #>  [205,] 1.4519661 1.6070510 1.6374261 #>  [206,] 1.1985378 1.2227509 1.2647286 #>  [207,] 0.5022303 0.5100027 0.5204578 #>  [208,] 0.5768237 0.5828092 0.6070402 #>  [209,] 0.8405143 0.8704515 0.8730958 #>  [210,] 0.5245977 0.5732797 0.5897997 #>  [211,] 0.6331277 0.6618434 0.6851041 #>  [212,] 0.8040936 0.8173328 0.8276968 #>  [213,] 0.6421244 0.6618434 0.6669356 #>  [214,] 0.8695335 0.8838543 0.9361518 #>  [215,] 0.8780073 0.9322287 0.9854342 #>  [216,] 0.6316852 0.6329600 0.6541418 #>  [217,] 0.7409552 0.7749358 0.7765259 #>  [218,] 0.9633232 0.9700862 0.9714272 #>  [219,] 1.0734137 1.1260716 1.2022306 #>  [220,] 0.7089577 0.7958406 0.8049686 #>  [221,] 0.8087226 0.8820261 0.8979552 #>  [222,] 0.8423325 0.8752929 0.8792610 #>  [223,] 1.1291117 1.1304449 1.1406933 #>  [224,] 0.8237598 0.8477494 0.8525389 #>  [225,] 0.8003785 0.8120694 0.8328057 #>  [226,] 0.7349225 0.7711570 0.7720764 #>  [227,] 0.6475480 0.6542009 0.6584288 #>  [228,] 0.7708681 0.7972449 0.8793620 #>  [229,] 0.6023254 0.6616765 0.7303278 #>  [230,] 0.7363367 0.7637374 0.7667885 #>  [231,] 0.5180424 0.5335359 0.5597946 #>  [232,] 0.6078622 0.6278613 0.6333816 #>  [233,] 0.5992267 0.6017974 0.6051926 #>  [234,] 0.7275223 0.7328934 0.7858247 #>  [235,] 0.8318334 0.8319812 0.8925846 #>  [236,] 0.6797679 0.6834770 0.6946250 #>  [237,] 0.6653248 0.7276097 0.7601208 #>  [238,] 0.7668919 0.7835613 0.7921361 #>  [239,] 0.7590097 0.7645542 0.7747119 #>  [240,] 1.4700593 1.4715203 1.4952204 #>  [241,] 1.2063140 1.2099781 1.2246481 #>  [242,] 1.1757867 1.2450534 1.2567412 #>  [243,] 0.5949664 0.6131437 0.6576266 #>  [244,] 1.8735486 1.8739523 1.9042581 #>  [245,] 0.4875000 0.5057847 0.5298338 #>  [246,] 0.8673738 0.8834692 0.9245452 #>  [247,] 0.9667485 0.9776315 0.9832663 #>  [248,] 0.9853571 1.0121351 1.0502786 #>  [249,] 0.5453723 0.5486410 0.5569566 #>  [250,] 0.6523133 0.7128838 0.7176423 #>  [251,] 1.0271251 1.0428790 1.0444198 #>  [252,] 0.8376048 0.8393177 0.9233463 #>  [253,] 0.7022452 0.7049319 0.7232298 #>  [254,] 0.9378070 0.9465619 0.9539625 #>  [255,] 0.7323271 0.8051645 0.8157303 #>  [256,] 0.8054544 0.8320862 0.8332449 #>  [257,] 0.8221198 0.8385605 0.8713739 #>  [258,] 1.5881133 1.6214879 1.6598806 #>  [259,] 0.4608005 0.4680016 0.4993466 #>  [260,] 0.5204578 0.5257055 0.5325700 #>  [261,] 0.8619552 0.8927870 0.9265075 #>  [262,] 0.9361687 0.9668368 0.9751466 #>  [263,] 0.6995904 0.7329333 0.7573726 #>  [264,] 0.7285425 0.7669078 0.7967487 #>  [265,] 0.6361679 0.6626872 0.6931054 #>  [266,] 0.8464808 0.9042451 0.9361598 #>  [267,] 0.7958406 0.8504945 0.8575893 #>  [268,] 0.9130299 0.9142488 0.9184519 #>  [269,] 0.7023902 0.7036488 0.7190904 #>  [270,] 1.0134838 1.0375951 1.0953411 #>  [271,] 0.9033689 0.9500238 0.9779554 #>  [272,] 0.7569841 0.7713455 0.7743237 #>  [273,] 0.8281020 0.8404081 0.8997864 #>  [274,] 0.6021311 0.6329169 0.6451058 #>  [275,] 0.6116902 0.6584954 0.6982418 #>  [276,] 0.6766993 0.6804542 0.6970547 #>  [277,] 1.1671591 1.1940877 1.2013685 #>  [278,] 0.5385578 0.5524752 0.5540552 #>  [279,] 0.9806397 0.9903009 1.0124594 #>  [280,] 0.7733261 0.7757703 0.7814405 #>  [281,] 1.6651384 1.7565781 1.7573194 #>  [282,] 0.6233547 0.6381087 0.6790567 #>  [283,] 0.8320862 0.8486365 0.8659943 #>  [284,] 0.6353006 0.6440505 0.6491302 #>  [285,] 1.2464875 1.2563855 1.3767573 #>  [286,] 0.9741064 0.9807108 1.0087750 #>  [287,] 0.6533300 0.7024012 0.7046043 #>  [288,] 0.9766857 1.0721776 1.0851837 #>  [289,] 0.6582334 0.6715584 0.7489660 #>  [290,] 0.5736358 0.6016753 0.6031855 #>  [291,] 0.9047764 0.9416227 0.9437803 #>  [292,] 0.6534406 0.6535046 0.6689339 #>  [293,] 0.7839534 0.7906479 0.7915487 #>  [294,] 0.6527325 0.7207140 0.7265732 #>  [295,] 0.8515109 0.8821759 0.8829943 #>  [296,] 1.0891309 1.1238643 1.1280101 #>  [297,] 0.6817921 0.7024531 0.7885705 #>  [298,] 0.7650493 0.7830500 0.7850708 #>  [299,] 0.9253394 0.9618571 0.9675878 #>  [300,] 0.8019273 0.8136202 0.8417530 #>  [301,] 0.8982530 0.9216886 0.9237611 #>  [302,] 0.6387119 0.6701486 0.6924840 #>  [303,] 0.8194054 0.8245683 0.8276968 #>  [304,] 0.8163358 0.8968895 0.9190604 #>  [305,] 0.6911725 0.7333086 0.7364530 #>  [306,] 0.6273922 0.6494594 0.6758489 #>  [307,] 0.6020250 0.6032960 0.6141436 #>  [308,] 1.2462559 1.2627624 1.2734046 #>  [309,] 1.0961978 1.1436299 1.1709643 #>  [310,] 0.6557014 0.6608235 0.6910342 #>  [311,] 0.6901804 0.7042251 0.7121510 #>  [312,] 0.7725283 0.8024589 0.8167136 #>  [313,] 1.3093299 1.3269674 1.3276929 #>  [314,] 0.7285425 0.7598048 0.7688160 #>  [315,] 0.8906903 0.9014016 0.9082654 #>  [316,] 0.6597708 0.6716182 0.7138331 #>  [317,] 1.3444230 1.3969292 1.4297278 #>  [318,] 1.0851945 1.1559070 1.1757867 #>  [319,] 0.6329600 0.6380099 0.6387574 #>  [320,] 0.5443672 0.5488831 0.5624516 #>  [321,] 1.0981134 1.1148162 1.1424652 #>  [322,] 0.6027873 0.6314889 0.6915544 #>  [323,] 0.9562376 1.0873696 1.1439529 #>  [324,] 1.1809562 1.1949260 1.2121301 #>  [325,] 1.2758465 1.2764101 1.3314925 #>  [326,] 0.8488415 0.8858925 0.9049453 #>  [327,] 0.7816092 0.8003785 0.8061216 #>  [328,] 1.5466154 1.6159929 1.6380888 #>  [329,] 1.5863012 1.5911419 1.7342734 #>  [330,] 0.9494797 0.9970640 1.0387814 #>  [331,] 0.5663867 0.5977062 0.6327771 #>  [332,] 0.7786057 0.7926984 0.8472351 #>  [333,] 0.5780262 0.5830670 0.6025930 #>  [334,] 0.8014663 0.8420080 0.8437626 #>  [335,] 0.5649241 0.5889128 0.6072000 #>  [336,] 0.8751113 0.8806370 0.9049909 #>  [337,] 0.9169476 0.9258788 0.9786166 #>  [338,] 1.0001497 1.1000918 1.1152972 #>  [339,] 1.1983213 1.2084839 1.2476221 #>  [340,] 0.8387845 0.8578511 0.8625806 #>  [341,] 1.0503849 1.0581414 1.0981878 #>  [342,] 0.5831863 0.5897049 0.6166476 #>  [343,] 0.8909072 0.8952005 0.9274179 #>  [344,] 0.9235493 0.9288125 0.9731136 #>  [345,] 2.8094835 2.8886078 2.9410917 #>  [346,] 0.5564435 0.5892740 0.6000514 #>  [347,] 0.7551687 0.8334741 0.8581683 #>  [348,] 0.7263683 0.7687818 0.7934345 #>  [349,] 0.6638946 0.7025544 0.7051790 #>  [350,] 1.6618546 1.6642624 1.7089094 #>  [351,] 1.0794372 1.1290306 1.1451370 #>  [352,] 0.6767724 0.7167063 0.7404281 #>  [353,] 0.8472273 0.8487451 0.8598339 #>  [354,] 0.9188042 0.9250145 0.9784457 #>  [355,] 0.6427334 0.6523133 0.6591489 #>  [356,] 0.5867750 0.6096996 0.6609022 #>  [357,] 0.6504095 0.6693203 0.6915823 #>  [358,] 1.0662185 1.0938059 1.1255470 #>  [359,] 0.6849131 0.7253001 0.7567343 #>  [360,] 0.8253925 0.8469022 0.8507445 #>  [361,] 1.2972732 1.3129135 1.3208724 #>  [362,] 0.5900256 0.5966234 0.6255330 #>  [363,] 0.8098279 0.8405189 0.8419364 #>  [364,] 0.8382100 0.8417069 0.8511844 #>  [365,] 0.9920899 0.9990774 1.0466645 #>  [366,] 0.5600479 0.6000714 0.6015735 #>  [367,] 0.8771099 0.8793941 0.8808018 #>  [368,] 1.1420320 1.2435833 1.2576645 #>  [369,] 0.8582952 0.8599602 0.8648614 #>  [370,] 0.6438789 0.6464029 0.6594544 #>  [371,] 0.8132519 0.8348768 0.8718345 #>  [372,] 0.8886290 0.8980959 0.9182436 #>  [373,] 0.6728326 0.6859789 0.7359366 #>  [374,] 0.7909004 0.8103030 0.8672868 #>  [375,] 1.2857568 1.3381113 1.3387273 #>  [376,] 0.7944559 0.8013535 0.8304747 #>  [377,] 1.0194842 1.0607650 1.1032316 #>  [378,] 0.7188675 0.8235059 0.8276617 #>  [379,] 1.0211121 1.1530092 1.1705561 #>  [380,] 0.9923883 1.0221610 1.0783806 #>  [381,] 0.6207979 0.6427334 0.6639098 #>  [382,] 1.2759019 1.2801700 1.3483353 #>  [383,] 0.7151393 0.7507690 0.7514525 #>  [384,] 0.7303102 0.7447334 0.7563054 #>  [385,] 0.7729818 0.7752801 0.8192156 #>  [386,] 0.5042462 0.5132578 0.5347960 #>  [387,] 0.6685003 0.7032316 0.7095077 #>  [388,] 1.2940043 1.3116532 1.3305883 #>  [389,] 0.4817999 0.4878093 0.5410208 #>  [390,] 0.7331032 0.7444346 0.7671677 #>  [391,] 0.7537042 0.7746594 0.7845776 #>  [392,] 0.9354164 0.9916784 1.0038588 #>  [393,] 1.1592034 1.1789048 1.1881525 #>  [394,] 0.6467058 0.6565775 0.6923005 #>  [395,] 0.7310763 0.7552492 0.7594214 #>  [396,] 0.8986675 0.9143464 0.9276981 #>  [397,] 0.8486483 0.8508795 0.8601285 #>  [398,] 0.9976411 1.0011695 1.0739424 #>  [399,] 0.8745644 0.8782130 0.9043587 #>  [400,] 0.9098650 1.0092030 1.0362576 #>  [401,] 0.5597946 0.5927760 0.6031826 #>  [402,] 0.7700191 0.7817334 0.7818776 #>  [403,] 0.9737559 1.0240651 1.0344264 #>  [404,] 0.5936955 0.5965183 0.6031826 #>  [405,] 0.5359840 0.5426235 0.5494953 #>  [406,] 0.4984314 0.5700570 0.5701457 #>  [407,] 0.6150030 0.6689186 0.6761037 #>  [408,] 1.2397482 1.3744765 1.4820356 #>  [409,] 1.1517586 1.1595079 1.1607152 #>  [410,] 0.8970618 0.9174193 0.9612071 #>  [411,] 0.6916650 0.6981241 0.7041224 #>  [412,] 0.6471527 0.6816065 0.6878781 #>  [413,] 0.7327581 0.7406132 0.7452370 #>  [414,] 0.6648266 0.6678141 0.6744941 #>  [415,] 0.6697815 0.6791187 0.6953316 #>  [416,] 0.8168176 0.8194116 0.8211489 #>  [417,] 0.6078729 0.6152754 0.6421274 #>  [418,] 1.7155196 1.7207718 1.7415727 #>  [419,] 0.9481335 0.9612071 0.9820950 #>  [420,] 0.6800200 0.6808957 0.6992552 #>  [421,] 0.6046658 0.6209275 0.6402169 #>  [422,] 0.6835824 0.7585124 0.7881878 #>  [423,] 0.7491987 0.7522365 0.7601292 #>  [424,] 0.5020218 0.5030537 0.5178701 #>  [425,] 2.2932696 2.3723662 2.4223384 #>  [426,] 0.7645542 0.8054434 0.8494835 #>  [427,] 1.4016451 1.4382258 1.4433517 #>  [428,] 0.8341936 0.8344704 0.8387845 #>  [429,] 0.6107487 0.6735196 0.6762099 #>  [430,] 0.7438620 0.7674429 0.7714117 #>  [431,] 0.8219423 0.8234266 0.8463815 #>  [432,] 0.7341805 0.7534588 0.7727361 #>  [433,] 0.6377760 0.6462234 0.6638736 #>  [434,] 0.9333763 0.9422343 0.9488802 #>  [435,] 1.1427459 1.1572862 1.1624329 #>  [436,] 0.7498497 0.7768013 0.7789587 #>  [437,] 0.7549707 0.7669871 0.7987205 #>  [438,] 1.0791655 1.0973817 1.1052959 #>  [439,] 0.4825606 0.5023097 0.5102164 #>  [440,] 0.7093803 0.7365695 0.8450230 #>  [441,] 0.8186225 0.8575886 0.8617306 #>  [442,] 1.1939267 1.2530121 1.2676821 #>  [443,] 1.0690217 1.0938534 1.1098776 #>  [444,] 0.7602211 0.7900737 0.8484472 #>  [445,] 0.7305650 0.7666968 0.7783143 #>  [446,] 0.7870018 0.8203685 0.8417069 #>  [447,] 0.7270035 0.7565922 0.7755959 #>  [448,] 0.8279811 0.8490338 0.8573882 #>  [449,] 0.7283879 0.7563002 0.7800571 #>  [450,] 0.7829672 0.7968122 0.8093141 #>  [451,] 0.9289359 0.9913643 1.0041851 #>  [452,] 0.8580262 0.8603759 0.8625607 #>  [453,] 0.7599411 0.8054832 0.8322838 #>  [454,] 0.5303881 0.5404534 0.5506574 #>  [455,] 0.8750339 0.8754412 0.8896112 #>  [456,] 0.9700862 0.9895414 1.0009251 #>  [457,] 0.7884800 0.7985785 0.8309672 #>  [458,] 0.7219261 0.7259888 0.7685295 #>  [459,] 1.5169999 1.5208390 1.5669053 #>  [460,] 0.9304993 1.0034544 1.0204791 #>  [461,] 0.9252409 0.9413701 1.0006566 #>  [462,] 0.7252742 0.7520877 0.7681750 #>  [463,] 0.5873715 0.5940268 0.6009576 #>  [464,] 1.4102500 1.4254980 1.4289465 #>  [465,] 0.9724693 0.9892153 1.0053203 #>  [466,] 0.6776049 0.6793633 0.7444877 #>  [467,] 0.7234270 0.7373352 0.7395970 #>  [468,] 0.7312486 0.7620866 0.7834036 #>  [469,] 1.9449903 1.9997245 2.0342805 #>  [470,] 1.8673973 1.9165614 1.9322301 #>  [471,] 0.7849593 0.7867677 0.8164522 #>  [472,] 0.8077282 0.8113149 0.8162749 #>  [473,] 0.8092988 0.8227479 0.8581683 #>  [474,] 0.7886554 0.8040224 0.8216809 #>  [475,] 0.9568295 0.9668492 0.9772124 #>  [476,] 0.7496162 0.7635732 0.7935786 #>  [477,] 1.1293331 1.1469452 1.1471375 #>  [478,] 0.6020250 0.6364563 0.6564804 #>  [479,] 0.8828625 0.9178182 0.9357569 #>  [480,] 0.8551747 0.8561162 0.8696071 #>  [481,] 0.7271914 0.7889064 0.8276440 #>  [482,] 0.9167345 0.9432508 0.9734263 #>  [483,] 0.8877356 0.8877721 0.9464073 #>  [484,] 0.6820772 0.6901804 0.7073480 #>  [485,] 0.6032926 0.6355482 0.6519567 #>  [486,] 0.7694448 0.7867677 0.7921361 #>  [487,] 0.8669934 0.8987052 0.9039787 #>  [488,] 0.5386993 0.5510784 0.5615143 #>  [489,] 0.9526243 0.9738814 1.0211781 #>  [490,] 0.5797474 0.5819609 0.5829153 #>  [491,] 1.3827639 1.4192413 1.4736857 #>  [492,] 0.6208781 0.6852571 0.7241467 #>  [493,] 0.5825832 0.6224511 0.6276391 #>  [494,] 1.4299967 1.4388615 1.4452256 #>  [495,] 0.8014326 0.8063517 0.8796086 #>  [496,] 1.0511263 1.0638448 1.0654817 #>  [497,] 0.6331116 0.6969062 0.6987263 #>  [498,] 0.5942840 0.6013444 0.6100400 #>  [499,] 0.8186754 0.8388021 0.8446939 #>  [500,] 1.0481851 1.1458741 1.1547490 #>  [501,] 0.6127121 0.6392152 0.6698288 #>  [502,] 0.7746160 0.8066735 0.8549282 #>  [503,] 0.7550132 0.8247882 0.8276536 #>  [504,] 0.7007891 0.7760447 0.7927290 #>  [505,] 0.6207979 0.6369267 0.7119260 #>  [506,] 0.8450073 0.8506358 0.8947993 #>  [507,] 0.4527564 0.4929968 0.5031262 #>  [508,] 0.8210360 0.8356232 0.8370369 #>  [509,] 0.6196056 0.7501435 0.8137668 #>  [510,] 0.6689186 0.6801213 0.7140120 #>  [511,] 1.6786398 1.6801571 1.6809669 #>  [512,] 1.0270393 1.0378446 1.0830380 #>  [513,] 1.0686446 1.0745639 1.0884353 #>  [514,] 1.2383352 1.3142746 1.3165361 #>  [515,] 0.6923461 0.7222090 0.7349476 #>  [516,] 1.6999924 1.7366141 1.7710182 #>  [517,] 0.7227302 0.7333383 0.7438428 #>  [518,] 0.6412565 0.6487788 0.6527705 #>  [519,] 0.7007891 0.7166611 0.7211109 #>  [520,] 1.0286506 1.1018465 1.1064026 #>  [521,] 0.7539787 0.7646527 0.7749358 #>  [522,] 0.6460914 0.6592550 0.6777096 #>  [523,] 0.6011296 0.6099995 0.6267533 #>  [524,] 0.7527483 0.7889473 0.7951141 #>  [525,] 1.4603744 1.6534632 1.6554812 #>  [526,] 0.6993946 0.7225583 0.7272496 #>  [527,] 1.4180602 1.4306645 1.4584196 #>  [528,] 0.8336929 0.8786696 0.8990421 #>  [529,] 0.8049686 0.9500680 0.9775793 #>  [530,] 1.5558516 1.5605163 1.6140382 #>  [531,] 0.5470348 0.5673608 0.5755022 #>  [532,] 0.7040888 0.7044367 0.7181985 #>  [533,] 0.5600479 0.5693824 0.5705460 #>  [534,] 0.7481863 0.7556583 0.7578103 #>  [535,] 1.6764237 1.6891714 1.6925196 #>  [536,] 0.6892268 0.7104893 0.7386475 #>  [537,] 0.6605804 0.6822545 0.6859765 #>  [538,] 0.6724188 0.6760600 0.6805757 #>  [539,] 0.9236578 0.9779554 0.9825563 #>  [540,] 1.5450570 1.5982529 1.6469659 #>  [541,] 0.7671446 0.7686223 0.7913083 #>  [542,] 0.7749350 0.7760432 0.7970975 #>  [543,] 0.9972164 1.0454226 1.0554706 #>  [544,] 0.9734595 0.9762631 0.9798293 #>  [545,] 1.2253034 1.2347755 1.2356855 #>  [546,] 0.5308653 0.5433494 0.5648950 #>  [547,] 0.6845853 0.6870117 0.7195420 #>  [548,] 0.6836239 0.7093803 0.7112369 #>  [549,] 0.6624672 0.7044367 0.7271320 #>  [550,] 0.5930796 0.6009576 0.6332259 #>  [551,] 1.0512387 1.0828803 1.0834900 #>  [552,] 1.0671486 1.0812531 1.0817206 #>  [553,] 1.0822813 1.0942597 1.1059081 #>  [554,] 0.4990195 0.5265139 0.5447722 #>  [555,] 0.6851350 0.6876713 0.6926234 #>  [556,] 0.6995904 0.7367393 0.7459699 #>  [557,] 1.0643377 1.0757091 1.0772153 #>  [558,] 0.5876273 0.5937526 0.6021311 #>  [559,] 0.6316512 0.6322469 0.6470051 #>  [560,] 0.8883228 0.9206066 0.9323522 #>  [561,] 0.6731440 0.6860345 0.6885872 #>  [562,] 0.6638946 0.7372376 0.8081303 #>  [563,] 0.8289467 0.8349365 0.8653335 #>  [564,] 0.7583382 0.7673915 0.8239604 #>  [565,] 0.7240913 0.7753555 0.7841834 #>  [566,] 0.5998774 0.6128027 0.6591489 #>  [567,] 1.6908154 1.7030627 1.7225823 #>  [568,] 0.7425193 0.7489660 0.7500161 #>  [569,] 0.7170007 0.8089017 0.8122410 #>  [570,] 0.6774092 0.6799657 0.7025544 #>  [571,] 0.4820388 0.5136056 0.5213306 #>  [572,] 0.5566345 0.5922417 0.5935245 #>  [573,] 0.7110430 0.7135245 0.7384764 #>  [574,] 0.8450073 0.8713145 0.8943658 #>  [575,] 0.5573569 0.5840487 0.6198596 #>  [576,] 0.5361367 0.5540552 0.5557784 #>  [577,] 0.5574661 0.5752938 0.5902023 #>  [578,] 0.7813525 0.8041972 0.8239604 #>  [579,] 0.7566974 0.8184313 0.8656965 #>  [580,] 1.1771946 1.1826661 1.1970214 #>  [581,] 1.0231257 1.1010580 1.1155543 #>  [582,] 0.9441800 1.0828442 1.1472337 #>  [583,] 0.5396463 0.5420004 0.5607260 #>  [584,] 1.2029668 1.2605534 1.3054052 #>  [585,] 0.6278613 0.6442174 0.6732055 #>  [586,] 0.8234069 0.8244759 0.8432501 #>  [587,] 0.6341530 0.6353158 0.6772174 #>  [588,] 0.7814405 0.8528844 0.8812575 #>  [589,] 0.6008158 0.6372487 0.6381665 #>  [590,] 0.8535271 0.8584035 0.8604812 #>  [591,] 0.6475480 0.6583511 0.6692462 #>  [592,] 0.6862504 0.7064858 0.7096041 #>  [593,] 0.7141790 0.7540948 0.7743470 #>  [594,] 0.6790748 0.7063940 0.7134847 #>  [595,] 0.8243222 0.8426470 0.8441713 #>  [596,] 0.4841514 0.5657912 0.5755022 #>  [597,] 0.7452370 0.7575772 0.7952843 #>  [598,] 1.4963948 1.5203882 1.6024957 #>  [599,] 1.1383098 1.1702267 1.2238629 #>  [600,] 1.0364890 1.0783860 1.0881871 #>  [601,] 0.9747691 0.9784879 0.9891670 #>  [602,] 0.6325404 0.6790821 0.7024531 #>  [603,] 0.6043368 0.6424482 0.6583511 #>  [604,] 0.5864847 0.6016442 0.6022500 #>  [605,] 0.5472789 0.5627529 0.6346750 #>  [606,] 1.0111774 1.0255424 1.0621965 #>  [607,] 0.8565637 0.8674535 0.8724976 #>  [608,] 1.0922215 1.1643951 1.1807064 #>  [609,] 0.9794582 1.0258198 1.0537422 #>  [610,] 1.8744437 1.8869722 1.9029999 #>  [611,] 0.9482153 1.0703472 1.0738687 #>  [612,] 0.5826571 0.6483689 0.7058580 #>  [613,] 0.7554312 0.7697521 0.7769445 #>  [614,] 0.7722574 0.7785427 0.7852635 #>  [615,] 0.7480086 0.8008770 0.8052328 #>  [616,] 0.4987497 0.5915236 0.6025436 #>  [617,] 1.1530540 1.1624329 1.1696436 #>  [618,] 0.6675875 0.6696642 0.6964581 #>  [619,] 1.9258524 1.9589473 1.9616130 #>  [620,] 0.7694448 0.7945205 0.8112945 #>  [621,] 0.6608919 0.7044144 0.7183474 #>  [622,] 0.8357592 0.8851545 0.9266689 #>  [623,] 1.4453892 1.5597602 1.5799055 #>  [624,] 0.6013444 0.6160422 0.6277272 #>  [625,] 0.6735509 0.7061602 0.7103009 #>  [626,] 0.7594411 0.7819699 0.8162749 #>  [627,] 0.6639936 0.6704440 0.7070445 #>  [628,] 1.4792002 1.4858616 1.5553256 #>  [629,] 0.6801713 0.6803374 0.6807494 #>  [630,] 0.7838042 0.8330158 0.8551235 #>  [631,] 0.5658423 0.5659957 0.5706138 #>  [632,] 0.8275516 0.8398715 0.8894340 #>  [633,] 1.8945030 1.9278525 1.9424763 #>  [634,] 0.7367904 0.7715897 0.7772676 #>  [635,] 0.5245977 0.5419030 0.5470238 #>  [636,] 0.7606916 0.7766755 0.7873526 #>  [637,] 0.8667406 0.9232460 0.9668317 #>  [638,] 0.7093980 0.7179996 0.8043226 #>  [639,] 0.7107465 0.7365392 0.7509218 #>  [640,] 0.6474838 0.6752632 0.7081496 #>  [641,] 0.7407793 0.7601183 0.7669871 #>  [642,] 0.5757339 0.5988755 0.6056370 #>  [643,] 0.8543398 0.9490901 0.9616271 #>  [644,] 0.7037034 0.7089464 0.7225416 #>  [645,] 1.2614159 1.3394622 1.4055323 #>  [646,] 1.0875151 1.1115924 1.1613842 #>  [647,] 1.2023717 1.2228821 1.2469979 #>  [648,] 0.5538165 0.5571109 0.5848674 #>  [649,] 0.6731897 0.6863041 0.7436029 #>  [650,] 1.0723583 1.0829244 1.0888367 #>  [651,] 0.5360911 0.5439281 0.5514637 #>  [652,] 0.9823087 1.0061961 1.0161166 #>  [653,] 0.9615576 0.9772413 1.0220572 #>  [654,] 0.8567612 0.8835575 0.9073879 #>  [655,] 0.8739169 0.9189904 0.9469421 #>  [656,] 0.6440738 0.6553880 0.6621010 #>  [657,] 0.6948833 0.7239879 0.7303132 #>  [658,] 2.0539740 2.0902739 2.1038077 #>  [659,] 0.9031826 0.9270452 0.9469395 #>  [660,] 0.8741287 0.8839707 0.9087493 #>  [661,] 0.8132943 0.8224501 0.8247882 #>  [662,] 0.8186754 0.8330141 0.8343830 #>  [663,] 0.9810485 0.9927890 1.0106749 #>  [664,] 0.7029838 0.7151743 0.7163519 #>  [665,] 0.6817316 0.7015655 0.7115043 #>  [666,] 0.8458111 0.9004967 0.9803732 #>  [667,] 0.7187057 0.7246572 0.7471467 #>  [668,] 0.7927652 0.7950445 0.8107627 #>  [669,] 0.6911190 0.7413602 0.8334453 #>  [670,] 1.1509168 1.1776238 1.1924359 #>  [671,] 0.5475349 0.5505027 0.5639221 #>  [672,] 0.7212985 0.7231728 0.7255583 #>  [673,] 0.6546189 0.6678590 0.6745093 #>  [674,] 0.6236229 0.6316512 0.6448085 #>  [675,] 0.6976790 0.6988070 0.7022311 #>  [676,] 0.8647881 0.8881306 0.9042629 #>  [677,] 0.8584035 0.9732872 0.9841871 #>  [678,] 0.6459826 0.7084309 0.7096870 #>  [679,] 0.6269285 0.6510310 0.7190904 #>  [680,] 0.9532322 0.9611154 0.9822419 #>  [681,] 0.9136462 0.9197724 0.9385553 #>  [682,] 0.6151094 0.6664986 0.6852734 #>  [683,] 0.6181234 0.6336101 0.6550931 #>  [684,] 0.8281020 0.8915035 0.9109314 #>  [685,] 0.7855720 0.8112534 0.8486313 #>  [686,] 0.7968281 0.7993908 0.8096249 #>  [687,] 0.8684122 0.8933293 0.9039735 #>  [688,] 0.6518934 0.6784733 0.7134594 #>  [689,] 0.9237826 0.9400302 0.9471953 #>  [690,] 0.8141279 0.8358715 0.8369607 #>  [691,] 0.5529875 0.5601840 0.5644245 #>  [692,] 0.5517974 0.5693161 0.5873525 #>  [693,] 1.0859972 1.1167549 1.1855703 #>  [694,] 0.6327384 0.6403465 0.6522010 #>  [695,] 0.5369063 0.5844722 0.6025021 #>  [696,] 0.9683329 0.9684100 1.0204332 #>  [697,] 0.8111384 0.8424851 0.8542503 #>  [698,] 1.1814480 1.2263634 1.2384766 #>  [699,] 0.7927652 0.8077602 0.8295842 #>  [700,] 1.2702424 1.2908346 1.3338531 #>  [701,] 0.8291931 0.8403914 0.8738022 #>  [702,] 0.6434446 0.6671026 0.6860087 #>  [703,] 0.7074719 0.7149534 0.7375093 #>  [704,] 0.8169586 0.8272137 0.8283524 #>  [705,] 1.2313260 1.2356855 1.2885794 #>  [706,] 0.8154469 0.8226472 0.8487451 #>  [707,] 0.4983350 0.5262098 0.5327186 #>  [708,] 1.0624992 1.0715707 1.1079968 #>  [709,] 0.6789879 0.7242251 0.7460334 #>  [710,] 0.7968163 0.8044401 0.8081303 #>  [711,] 0.8103030 0.8407096 0.8612372 #>  [712,] 0.6796196 0.7025482 0.7212138 #>  [713,] 0.7080254 0.7608227 0.8142425 #>  [714,] 1.0440521 1.0512421 1.0767011 #>  [715,] 0.8151947 0.8285825 0.8582232 #>  [716,] 0.6284367 0.7223476 0.7408906 #>  [717,] 0.7046757 0.7136841 0.7604333 #>  [718,] 0.8838055 0.9219829 0.9919327 #>  [719,] 0.6121718 0.6380099 0.6388043 #>  [720,] 0.5953103 0.6349862 0.6359090 #>  [721,] 1.8820315 1.9001787 1.9088798 #>  [722,] 0.9795572 0.9823719 1.0485794 #>  [723,] 0.7339828 0.7342629 0.7421833 #>  [724,] 0.7866264 0.8289504 0.8772428 #>  [725,] 0.7079180 0.7419142 0.7869214 #>  [726,] 0.8201243 0.8342268 0.8486467 #>  [727,] 0.6288299 0.6441286 0.6508259 #>  [728,] 0.7837983 0.8149223 0.8295842 #>  [729,] 1.1908658 1.2187422 1.2412926 #>  [730,] 0.6217570 0.6510310 0.6630560 #>  [731,] 0.9160105 0.9928598 1.1118426 #>  [732,] 1.4420573 1.4974156 1.5126267 #>  [733,] 1.7203979 1.7855192 1.8151633 #>  [734,] 0.4929968 0.5297014 0.5530272 #>  [735,] 0.5965755 0.6003747 0.6095929 #>  [736,] 0.6981032 0.7104502 0.7132787 #>  [737,] 1.0985167 1.1041007 1.1451672 #>  [738,] 0.9223074 1.0153096 1.0387814 #>  [739,] 0.7026276 0.7146490 0.7245649 #>  [740,] 0.7207847 0.7329248 0.7348654 #>  [741,] 0.6898966 0.7134847 0.7154010 #>  [742,] 0.6608039 0.7080254 0.7310347 #>  [743,] 0.9439670 1.0013745 1.1012426 #>  [744,] 1.3015360 1.3296636 1.3845750 #>  [745,] 0.6325404 0.6648266 0.6837852 #>  [746,] 0.8505685 0.8759186 0.8890348 #>  [747,] 0.7840299 0.8194621 0.8238080 #>  [748,] 0.7545404 0.7563807 0.8210554 #>  [749,] 1.6518706 1.6901572 1.7073382 #>  [750,] 1.1184452 1.1456799 1.1546014 #>  [751,] 0.9202416 0.9760870 0.9904668 #>  [752,] 0.7601292 0.7789707 0.7888291 #>  [753,] 1.8041411 1.8399981 1.9228155 #>  [754,] 0.5117631 0.5189561 0.5379454 #>  [755,] 0.9188856 0.9264988 0.9320816 #>  [756,] 0.6017029 0.6238293 0.6410903 #>  [757,] 0.7847037 0.7996425 0.8101178 #>  [758,] 0.6032702 0.6093081 0.6393244 #>  [759,] 0.6645667 0.6992010 0.7103009 #>  [760,] 0.6381541 0.7110158 0.7136425 #>  [761,] 0.6806684 0.6858037 0.8278033 #>  [762,] 0.8708349 0.9128123 0.9241553 #>  [763,] 0.6832413 0.6860087 0.7341805 #>  [764,] 0.6157924 0.6343072 0.6558207 #>  [765,] 1.0118846 1.0134499 1.0171610 #>  [766,] 0.5975777 0.6000514 0.6011296 #>  [767,] 0.4531303 0.4674339 0.4860429 #>  [768,] 0.7399173 0.7863414 0.7904919 #>  [769,] 0.9369696 0.9517156 0.9656858 #>  [770,] 1.4471992 1.4562042 1.4820356 #>  [771,] 1.4930419 1.5148422 1.5548330 #>  [772,] 0.7373352 0.7443812 0.7529223 #>  [773,] 1.3959402 1.4042072 1.4333654 #>  [774,] 0.7428682 0.7751488 0.7923230 #>  [775,] 1.6821274 1.7425683 1.8219406 #>  [776,] 0.7952674 0.8616408 0.8749683 #>  [777,] 0.7886363 0.7969842 0.8028407 #>  [778,] 0.7563054 0.7619809 0.7651778 #>  [779,] 0.6701998 0.6882292 0.7097852 #>  [780,] 0.5524353 0.5626330 0.6274188 #>  [781,] 0.6867477 0.6981032 0.7169447 #>  [782,] 0.5279354 0.5476963 0.5488831 #>  [783,] 1.0564007 1.0920713 1.1147534 #>  [784,] 0.8546296 0.9293673 0.9503139 #>  [785,] 1.2862190 1.3487894 1.3838227 #>  [786,] 0.8884697 0.8903167 0.9072002 #>  [787,] 0.5993060 0.6125669 0.6208781 #>  [788,] 1.0283774 1.0756508 1.0760060 #>  [789,] 0.9727410 0.9951119 0.9999906 #>  [790,] 0.6117980 0.6456994 0.6477592 #>  [791,] 0.9312645 0.9560108 0.9569102 #>  [792,] 1.0465306 1.0909766 1.0914729 #>  [793,] 0.9404725 0.9429739 0.9568295 #>  [794,] 0.6590509 0.6658791 0.6763955 #>  [795,] 1.0802310 1.0822813 1.1103753 #>  [796,] 0.7007486 0.7014731 0.7070516 #>  [797,] 1.0239352 1.0372344 1.0721517 #>  [798,] 0.6339919 0.6431744 0.7286949 #>  [799,] 1.0520687 1.0530698 1.1656796 #>  [800,] 0.7208518 0.7217458 0.7246355 #>  [801,] 0.5717532 0.5975777 0.6159771 #>  [802,] 0.9789055 1.0506605 1.1064540 #>  [803,] 0.6408472 0.7736341 0.8250772 #>  [804,] 0.8274985 0.8491893 0.8821759 #>  [805,] 0.5870801 0.5927017 0.6470051 #>  [806,] 1.9180341 1.9459520 2.0220995 #>  [807,] 1.1019302 1.1048826 1.1452958 #>  [808,] 0.7080196 0.7107465 0.7237772 #>  [809,] 0.7306420 0.7346647 0.7392183 #>  [810,] 0.9619491 0.9759745 0.9819215 #>  [811,] 0.7134353 0.7410821 0.7671390 #>  [812,] 0.4397050 0.5120447 0.5158111 #>  [813,] 0.5866931 0.6096429 0.6152754 #>  [814,] 0.7999641 0.8117286 0.8357712 #>  [815,] 0.8746795 0.9115486 0.9335750 #>  [816,] 0.7146225 0.8258685 0.8431029 #>  [817,] 1.0041419 1.0242532 1.0347041 #>  [818,] 0.6384520 0.6638735 0.7109461 #>  [819,] 0.7700035 0.7865491 0.8122098 #>  [820,] 1.0418785 1.0676253 1.1292646 #>  [821,] 0.7532504 0.7747172 0.8473076 #>  [822,] 0.9227195 0.9487566 0.9581983 #>  [823,] 0.5875314 0.5942840 0.5965755 #>  [824,] 1.2553628 1.2694406 1.3343760 #>  [825,] 1.2048136 1.3095050 1.3428537 #>  [826,] 0.9132950 0.9771254 1.0106245 #>  [827,] 0.5661952 0.5750395 0.5822294 #>  [828,] 0.6576110 0.6597499 0.6673354 #>  [829,] 0.9136389 0.9287249 0.9310701 #>  [830,] 0.8903167 0.9201335 0.9323082 #>  [831,] 0.6718409 0.6869043 0.6991622 #>  [832,] 0.6859404 0.7035090 0.7048176 #>  [833,] 0.7420225 0.7588907 0.7750704 #>  [834,] 1.0100578 1.0138136 1.0163078 #>  [835,] 1.8535687 1.9005632 1.9730804 #>  [836,] 0.6506995 0.6590509 0.6599847 #>  [837,] 0.9098862 0.9364781 0.9552696 #>  [838,] 0.6858191 0.6927322 0.7062499 #>  [839,] 1.0220518 1.0238183 1.0621965 #>  [840,] 0.5401356 0.5557784 0.5687479 #>  [841,] 0.6776225 0.6874784 0.6990156 #>  [842,] 1.0768269 1.1514249 1.1546014 #>  [843,] 0.6942737 0.7040666 0.7097852 #>  [844,] 1.0846216 1.1308978 1.1327691 #>  [845,] 1.2357066 1.2465444 1.2791774 #>  [846,] 0.6924840 0.6987541 0.7768013 #>  [847,] 0.5996629 0.6371110 0.6737094 #>  [848,] 0.5578011 0.5624516 0.5842370 #>  [849,] 0.9665835 0.9976055 1.0352665 #>  [850,] 0.7457151 0.7990490 0.8223862 #>  [851,] 0.8717785 0.9060917 0.9801779 #>  [852,] 0.7719812 0.7912119 0.7975241 #>  [853,] 0.9266390 0.9300174 0.9645604 #>  [854,] 0.6398836 0.6412565 0.6775025 #>  [855,] 0.7485899 0.7781986 0.8268827 #>  [856,] 0.9786673 1.0056389 1.0444198 #>  [857,] 0.6893189 0.6929399 0.7584337 #>  [858,] 0.5513524 0.5553564 0.5569566 #>  [859,] 0.8832566 0.9021617 0.9851522 #>  [860,] 0.5454917 0.5477646 0.5658402 #>  [861,] 1.1027024 1.1274677 1.1693164 #>  [862,] 0.7058580 0.8086243 0.8343830 #>  [863,] 0.5877672 0.5956524 0.5991496 #>  [864,] 1.2654594 1.3005064 1.3382089 #>  [865,] 1.1711535 1.1903278 1.2141117 #>  [866,] 0.7920784 0.7935786 0.8320460 #>  [867,] 1.0431132 1.0607671 1.0757144 #>  [868,] 1.4160604 1.4465604 1.4920582 #>  [869,] 0.5573569 0.5675909 0.5761090 #>  [870,] 0.6336309 0.6358192 0.6776049 #>  [871,] 0.8684122 0.8849601 0.8927541 #>  [872,] 1.1902981 1.2012097 1.2430482 #>  [873,] 1.2633157 1.2769944 1.2891117 #>  [874,] 1.1157276 1.1936167 1.1995324 #>  [875,] 0.8294768 0.8344419 0.8362827 #>  [876,] 0.5117953 0.5192327 0.5420004 #>  [877,] 0.8030448 0.8216809 0.8369158 #>  [878,] 0.5102163 0.5178139 0.6454089 #>  [879,] 0.6869348 0.6993587 0.7524557 #>  [880,] 0.5584951 0.5687479 0.5827281 #>  [881,] 0.4919623 0.4922360 0.5161984 #>  [882,] 1.1207087 1.1468858 1.1637005 #>  [883,] 1.4398054 1.4933724 1.5107034 #>  [884,] 0.9321315 0.9481810 0.9830945 #>  [885,] 0.7053919 0.7086441 0.7171960 #>  [886,] 0.8671570 0.8687603 0.8753464 #>  [887,] 0.6857948 0.7112517 0.7573017 #>  [888,] 0.8283524 0.8703998 0.9551885 #>  [889,] 0.7289802 0.8437187 0.8561901 #>  [890,] 0.6797562 0.6992552 0.6998319 #>  [891,] 0.6658791 0.6701998 0.6801707 #>  [892,] 1.3072786 1.3114265 1.3533247 #>  [893,] 0.8628560 0.9132747 0.9165879 #>  [894,] 1.5536419 1.5676981 1.5715458 #>  [895,] 1.1455775 1.1833642 1.2430949 #>  [896,] 1.3007429 1.3456632 1.3779056 #>  [897,] 0.5183205 0.5743258 0.6032926 #>  [898,] 1.3950150 1.4845992 1.5350760 #>  [899,] 0.5721419 0.5732198 0.6285374 #>  [900,] 1.0721517 1.1149484 1.1474075 #>  [901,] 0.5700570 0.5922966 0.6117980 #>  [902,] 0.5699897 0.5910700 0.6163551 #>  [903,] 0.5701457 0.5879070 0.5888147 #>  [904,] 0.6237141 0.6314061 0.6545029 #>  [905,] 0.8616950 0.8821900 0.8904956 #>  [906,] 0.8366904 0.8441713 0.8561901 #>  [907,] 0.4796330 0.5170806 0.5385851 #>  [908,] 0.9966891 1.0304489 1.0453836 #>  [909,] 0.6767015 0.7246652 0.7910346 #>  [910,] 1.0512462 1.0634887 1.1017909 #>  [911,] 0.7690241 0.7835180 0.7842613 #>  [912,] 0.6977815 0.7157679 0.7306703 #>  [913,] 0.6552209 0.6862504 0.7353109 #>  [914,] 0.5776104 0.6021255 0.7304606 #>  [915,] 0.7863488 0.8475656 0.8720974 #>  [916,] 1.0116410 1.0413067 1.0591309 #>  [917,] 0.5229253 0.5461736 0.5666734 #>  [918,] 0.7958120 0.8136202 0.8537410 #>  [919,] 0.7987205 0.8064646 0.8194054 #>  [920,] 0.8142671 0.8244194 0.8358189 #>  [921,] 0.6044993 0.6127121 0.6399026 #>  [922,] 0.8370144 0.8698289 0.9121935 #>  [923,] 0.9604526 0.9776841 1.0087750 #>  [924,] 0.6765533 0.7119572 0.7163205 #>  [925,] 0.7317220 0.7530499 0.7623217 #>  [926,] 0.8837417 0.8855182 0.9463822 #>  [927,] 0.7803086 0.8170575 0.8442191 #>  [928,] 0.7599411 0.7889473 0.7904919 #>  [929,] 1.1081530 1.2327271 1.2911965 #>  [930,] 0.7506026 0.8026476 0.8214476 #>  [931,] 0.7451284 0.7653108 0.7774373 #>  [932,] 0.6848409 0.7093980 0.7568239 #>  [933,] 0.6515893 0.6556246 0.6686640 #>  [934,] 0.6678590 0.6910904 0.7055392 #>  [935,] 0.5962874 0.6394549 0.6976758 #>  [936,] 0.7912512 0.8118788 0.8307374 #>  [937,] 1.1736185 1.2208004 1.2446415 #>  [938,] 0.7667661 0.7940193 0.8452377 #>  [939,] 0.6827288 0.7092455 0.7464431 #>  [940,] 0.8604242 0.8726374 0.8772334 #>  [941,] 0.8093763 0.8289961 0.8344334 #>  [942,] 0.6301110 0.6482104 0.6788163 #>  [943,] 0.5850961 0.6228291 0.6632456 #>  [944,] 1.0421754 1.0446976 1.0731588 #>  [945,] 0.7180052 0.7315810 0.7349476 #>  [946,] 0.8506424 0.8683091 0.9293002 #>  [947,] 1.0121738 1.0359470 1.0360698 #>  [948,] 0.5552995 0.5578163 0.5626172 #>  [949,] 0.8668694 0.8669934 0.8724862 #>  [950,] 0.7558192 0.7727489 0.7882429 #>  [951,] 2.2518509 2.2876735 2.3032924 #>  [952,] 1.3832696 1.4011508 1.4280204 #>  [953,] 0.5844173 0.6092434 0.6248032 #>  [954,] 0.8162019 0.8250067 0.8313569 #>  [955,] 0.5101946 0.5432098 0.5471188 #>  [956,] 0.5132561 0.5241539 0.5257055 #>  [957,] 1.0073150 1.0311136 1.0359089 #>  [958,] 0.5265139 0.5461736 0.5519625 #>  [959,] 0.6008707 0.6280089 0.6345307 #>  [960,] 0.6509555 0.7058413 0.7246035 #>  [961,] 2.1073527 2.1123186 2.1230725 #>  [962,] 0.8408857 0.8688455 0.8930393 #>  [963,] 0.5797989 0.5860902 0.5995586 #>  [964,] 1.0524327 1.0525541 1.0626364 #>  [965,] 0.6757378 0.6832628 0.7136841 #>  [966,] 0.5765295 0.5861157 0.5992267 #>  [967,] 0.6782984 0.6786018 0.6802397 #>  [968,] 0.6391293 0.6621010 0.6837852 #>  [969,] 0.7136425 0.7223476 0.7272496 #>  [970,] 0.5855896 0.5870801 0.5888147 #>  [971,] 0.5590485 0.5654247 0.5661557 #>  [972,] 0.9690550 0.9994436 1.0083670 #>  [973,] 0.7691601 0.7728200 0.7825482 #>  [974,] 0.4869863 0.5158111 0.5624893 #>  [975,] 0.6556246 0.6693918 0.6756131 #>  [976,] 1.0606498 1.0695690 1.0897265 #>  [977,] 0.8508795 0.8643554 0.9045820 #>  [978,] 0.5277032 0.5386993 0.5486410 #>  [979,] 0.5850961 0.5925284 0.5991496 #>  [980,] 0.6278819 0.6315640 0.6414373 #>  [981,] 0.5928978 0.6146377 0.6159974 #>  [982,] 0.9526243 0.9714016 1.0005670 #>  [983,] 0.7373603 0.7435158 0.7604729 #>  [984,] 1.1850158 1.2176165 1.2439219 #>  [985,] 0.7098652 0.7231843 0.7240913 #>  [986,] 0.7024012 0.7333383 0.7539410 #>  [987,] 1.8988976 1.9063222 1.9955230 #>  [988,] 0.8699772 0.9439670 0.9859146 #>  [989,] 0.7045640 0.8301865 0.8381168 #>  [990,] 0.6898966 0.6935705 0.7925446 #>  [991,] 0.7808682 0.8238527 0.8348792 #>  [992,] 0.9184891 0.9223074 0.9293687 #>  [993,] 0.7294261 0.8360314 0.8809900 #>  [994,] 0.6341530 0.6459071 0.6519416 #>  [995,] 0.6254579 0.6277272 0.6626872 #>  [996,] 0.5238755 0.5315577 0.5379967 #>  [997,] 1.3163073 1.3237790 1.3668184 #>  [998,] 0.6553880 0.6724235 0.7223482 #>  [999,] 0.6011789 0.6055215 0.6515013 #> [1000,] 0.5779394 0.5873525 0.5902023 #>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using possible relative-risk thresholds.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_find_log_rank_threshold(input_data, relative_risk_col, time_col, event_col)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_log_rank_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"tibble 3 columns: \"candidate_thresholds\" (relative-risk threshold used log-rank test), \"log_rank_p_val\" (p-values log-rank tests) \"is_best\" (logical value indicating candidate threshold gave optimal, .e. smallest, p-value).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, figure high-dimensional cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame raw flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidytof's opinionated heuristic for extracted a high-dimensional cytometry panel's metal-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 2 columns (`metals` `antigens`) correspond metals antigens high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"function trains glmnet model training set rsplit object, calculates performance metrics model validation/holdout set combinations mixture penalty hyperparameters provided hyperparameter grid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"","code":"tof_fit_split(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_colnames )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"split_data `rsplit` object rsample package. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe trained recipe hyperparameter_grid tibble containing hyperparameter values tune. Can created using tof_create_grid model_type string representing type glmnet model fit. outcome_colnames Quoted column names indicating columns data fit represent outcome variables (others assumed predictors).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"tibble number rows input hyperparameter grid. row represents combination mixture penalty, column contains performance metric fitted glmnet model `split_data`'s holdout set. specific performance metrics depend type model fit: \"linear\" mean-squared error (`mse`) mean absolute error (`mae`) \"two-class\" binomial deviance (`binomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`); `mse` `mse` \"multiclass\" multinomial deviance (`multinomial_deviance`); misclassification error rate `misclassification_error`; area receiver-operating curve (`roc_auc`) computed using Hand-Till method roc_auc; `mse` `mse` \"survival\" negative log2-transformed partial likelihood (`neg_log_partial_likelihood`) Harrel's concordance index (often simply called \"C\"; `concordance_index`)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_fit_split.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a glmnet model and calculate performance metrics using a single rsplit object — tof_fit_split","text":"Harrel Jr, F. E. Lee, K. L. Mark, D. B. (1996) Tutorial biostatistics: multivariable prognostic models: issues developing models, evaluating assumptions adequacy, measuring reducing error, Statistics Medicine, 15, pages 361–387.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a color palette using tidytof. — tof_generate_palette","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"function generates color palette based color palette author's favorite pokemon.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"num_colors integer specifying number colors like generate.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"character vector hex codes specifying colors palette.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_generate_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a color palette using tidytof. — tof_generate_palette","text":"","code":"tof_generate_palette(num_colors = 5L) #> [1] \"#D86020\" \"#28A8B8\" \"#F89040\" \"#D0D0D0\" \"#903000\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"Get `tof_model`'s optimal mixture (alpha) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"tof_get_model_mixture(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_mixture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal mixture (alpha) value — tof_get_model_mixture","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_mixture(regression_model) #> [1] 1"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"Get `tof_model`'s outcome variable name(s)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"tof_get_model_outcomes(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"character vector","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s outcome variable name(s) — tof_get_model_outcomes","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_outcomes(regression_model) #> [1] \"outcome\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"Get `tof_model`'s optimal penalty (lambda) value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"tof_get_model_penalty(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"numeric value","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_penalty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s optimal penalty (lambda) value — tof_get_model_penalty","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_penalty(regression_model) #> [1] 0.003162278"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s training data — tof_get_model_training_data","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"Get `tof_model`'s training data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"tof_get_model_training_data(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"tibble (non-preprocessed) training data used fit model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s training data — tof_get_model_training_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_training_data(regression_model) #> # A tibble: 100 × 9 #>    sample   cd45 pstat5  cd34 outcome class  multiclass event time_to_event #>    <chr>   <dbl>  <dbl> <dbl>   <dbl> <fct>  <fct>      <dbl>         <dbl> #>  1 28     0.691   0.785 0.439   5.97  class1 class1         0         13.3  #>  2 55     0.857   0.819 0.811   6.65  class1 class2         1         11.9  #>  3 16     0.695   0.106 0.627   1.49  class2 class1         0          7.10 #>  4 11     0.0496  0.115 0.372   0.193 class2 class1         0         10.8  #>  5 67     0.112   0.227 0.784   2.74  class2 class3         1          9.07 #>  6 23     0.355   0.796 0.815   4.99  class1 class1         0          9.64 #>  7 89     0.407   0.191 0.282   2.69  class2 class3         1         12.0  #>  8 21     0.0873  0.348 0.944   2.32  class2 class1         0         16.2  #>  9 26     0.672   0.420 0.183   2.89  class2 class1         0         10.8  #> 10 20     0.708   0.504 0.430   3.69  class1 class1         0         10.6  #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s model type — tof_get_model_type","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"Get `tof_model`'s model type","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"tof_get_model_type(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"string","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s model type — tof_get_model_type","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_type(regression_model) #> [1] \"linear\""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"Get `tof_model`'s processed predictor matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"tof_get_model_x(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"x value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed predictor matrix (for glmnet) — tof_get_model_x","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_x(regression_model) #>               cd45      pstat5        cd34 #>   [1,]  0.59528468  1.44049135 -0.83714724 #>   [2,]  1.54466688 -0.22824576  1.06582350 #>   [3,] -0.12522254 -1.08701937  1.13310841 #>   [4,] -0.76518793 -0.15699067  0.77008930 #>   [5,]  1.12500430 -0.59512774  1.49386093 #>   [6,]  0.62293193  0.42242236 -1.15306393 #>   [7,]  0.95787530  0.69707908 -1.53772848 #>   [8,] -1.51437535 -1.26969989  0.71432329 #>   [9,]  0.71836259 -0.16856184  1.23580735 #>  [10,] -0.17814153 -0.99433548  1.60091909 #>  [11,] -0.17615269 -0.31469660 -0.71168946 #>  [12,]  1.49710327 -0.49062257 -1.09733437 #>  [13,]  0.60861274 -0.90280890 -0.02380285 #>  [14,] -0.97021357 -1.66032177  0.97382990 #>  [15,] -1.12931291  1.04706206  0.98000587 #>  [16,]  1.36839304  1.30151098 -0.77030751 #>  [17,] -1.00794017 -1.24661367 -0.07513261 #>  [18,]  1.57525546  0.89661144 -0.24023615 #>  [19,] -1.37678241  0.26408240  0.82416993 #>  [20,]  0.46284376 -1.74386667  0.59860382 #>  [21,]  1.53204332  0.75290827 -0.39625612 #>  [22,] -0.54577299  1.39097230  0.16327280 #>  [23,]  0.86148076 -0.52197611 -0.37413485 #>  [24,]  0.90588132  0.42532148  1.26113010 #>  [25,] -0.11179582 -0.80614650 -1.19038292 #>  [26,] -0.17196734  0.74510860 -0.81294208 #>  [27,] -1.01322479 -0.07601260 -1.09422140 #>  [28,] -0.21067085 -1.67342491  1.44540044 #>  [29,]  0.06241313 -1.75624527 -1.13753404 #>  [30,]  1.35966090  0.91896495  0.38898307 #>  [31,] -0.42218411  0.43046533  1.33648001 #>  [32,]  0.29022671 -0.16514078  0.19730942 #>  [33,] -0.85397979  1.44423593  0.25040494 #>  [34,]  0.57594925 -0.93603822  1.39197131 #>  [35,]  0.66512784 -0.66210884  0.21891150 #>  [36,]  1.29937014  0.26633988 -1.06070517 #>  [37,]  0.47025773  0.60766544  1.20720669 #>  [38,]  1.74216883  1.29773790 -0.92743740 #>  [39,] -0.05671371 -0.21378531 -0.44117363 #>  [40,]  0.90578150  1.36117276 -0.69817984 #>  [41,] -0.30202868  1.40239907 -0.72668353 #>  [42,] -1.52848056  1.51200754 -1.15051494 #>  [43,]  1.37175592 -0.85830784  0.33996543 #>  [44,]  0.10292442  1.47296414  1.54534688 #>  [45,]  0.87231483 -0.66998719 -0.75471131 #>  [46,]  0.59973216  1.52335287  0.88083634 #>  [47,]  0.03172790  0.88023205  0.25640078 #>  [48,] -0.93905443 -1.76333291 -1.50980937 #>  [49,]  0.68597932  1.01875328  0.54721470 #>  [50,] -1.34154855 -1.47231339 -1.23182257 #>  [51,] -1.19759029  1.11769827  1.37274402 #>  [52,] -0.77676834 -0.24984412  1.28737788 #>  [53,]  1.57761598 -0.80905492 -1.46397424 #>  [54,] -1.46234273  0.53946793  0.83992867 #>  [55,] -1.44160006 -0.92726804 -0.72762774 #>  [56,] -1.12277586 -0.44741260 -1.23962862 #>  [57,] -1.53422704 -1.75313915 -1.40023083 #>  [58,] -1.52850730 -0.09200885 -1.26759899 #>  [59,]  0.25170208 -1.66114265 -1.43033089 #>  [60,]  1.41142859  0.06305778  0.03403432 #>  [61,]  1.61192397  1.53805764  0.20902184 #>  [62,]  0.81832934  0.05420090  1.13949815 #>  [63,] -1.48387133 -0.94285481  0.50179554 #>  [64,] -0.29774219  1.41597976 -0.13233003 #>  [65,] -0.11098242  0.33902408  0.53157601 #>  [66,]  1.60395232 -0.14373650 -1.30828061 #>  [67,]  1.37038390 -0.95215370 -1.07137337 #>  [68,] -1.08615289 -0.33296319  0.99702174 #>  [69,]  0.96390776  0.70442885 -0.52280306 #>  [70,] -0.92393107  1.26050968 -1.25652288 #>  [71,]  0.82670256  1.01989361  0.96623132 #>  [72,] -0.12792110  0.61884228 -0.94373227 #>  [73,] -0.03773112 -0.36445157  1.30015191 #>  [74,]  0.53737663  1.15735483 -1.28048161 #>  [75,] -0.43960698 -0.57800199 -1.07667595 #>  [76,] -1.16969056 -1.49595434 -1.37999938 #>  [77,] -0.74519037 -1.35082752 -1.47184025 #>  [78,] -0.49350483  0.12421461  0.95061511 #>  [79,]  0.06086406 -0.34898140 -0.32547597 #>  [80,]  1.10918997  0.06044862  1.54905017 #>  [81,] -0.86538695 -0.61392745  1.27208174 #>  [82,]  1.14162107  1.17549231  0.56257925 #>  [83,]  1.23388738  0.16430646  1.59824413 #>  [84,] -1.50351537 -0.04168292  1.44026256 #>  [85,] -0.68300922  0.71941312  0.24602419 #>  [86,] -1.08604708 -1.61860127 -0.62076171 #>  [87,] -1.52548098 -0.06910424 -0.43377568 #>  [88,]  1.22128478  0.09523296 -0.03669461 #>  [89,] -0.85895991  1.11803238 -0.36124931 #>  [90,] -0.46602823 -0.60026305  0.43627494 #>  [91,] -0.06529655 -1.23539097 -0.79265925 #>  [92,] -0.65848390 -1.13040670  1.20447999 #>  [93,] -1.29812461  0.25648772  1.26211649 #>  [94,] -0.64842523 -1.01460888 -1.51738573 #>  [95,] -1.14939283  0.99348930  0.17886208 #>  [96,]  0.16810639  0.16164857  0.18501520 #>  [97,] -1.12685763  1.54704470 -0.82246960 #>  [98,]  1.64024070  1.31257818  1.21617554 #>  [99,] -0.41100871 -1.27935540 -1.29617247 #> [100,]  0.10725702  1.41010101  0.03048824"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"Get `tof_model`'s processed outcome variable matrix (glmnet)","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"tof_get_model_y(tof_model)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"tof_model tof_model","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"y value formatted glmnet","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_model_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a `tof_model`'s processed outcome variable matrix (for glmnet) — tof_get_model_y","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  tof_get_model_y(regression_model) #>   [1] 2.5193384 4.5149299 4.0560885 5.9611669 4.5580430 3.8717242 2.0115023 #>   [8] 2.3287751 1.2558387 2.7106398 8.0353582 3.1109667 0.0956430 3.8845026 #>  [15] 2.2893241 2.2838848 6.6738549 4.3610705 2.6677311 1.2832516 5.0359106 #>  [22] 5.3490989 3.5828511 4.2151462 3.9590472 3.5700904 2.8944736 5.6814454 #>  [29] 1.5711894 4.9576279 5.2051262 2.9132805 0.7297537 5.1965211 1.1214608 #>  [36] 1.7391494 2.4467109 3.9139769 5.0194642 2.6534669 2.7843119 6.1812425 #>  [43] 4.3700452 1.5681085 4.5762836 4.9653675 6.3941393 1.4707955 6.8116263 #>  [50] 2.5860246 3.1838962 3.8527498 3.6197843 0.3490233 6.4851868 1.8348396 #>  [57] 1.9694412 3.2396971 3.0333514 2.4014812 5.1867053 0.6855628 5.7730632 #>  [64] 3.4127052 5.0764523 2.9876150 3.6740342 3.8951042 3.8605096 2.4412410 #>  [71] 6.9218832 1.6564309 2.7859638 1.6670116 4.8367688 4.9466905 5.3100786 #>  [78] 5.4125562 1.9711748 4.9535322 5.8852148 2.2287108 4.1071774 4.6672257 #>  [85] 5.6143727 5.9681251 1.7989624 3.9874215 6.6877886 3.3037816 2.2971176 #>  [92] 3.9744913 3.5935729 0.8340110 8.2184186 2.9458438 4.9067439 0.5873825 #>  [99] 3.1074093 5.5015267"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) tof_get_panel(tof_tibble) #> # A tibble: 59 × 2 #>    metals       antigens     #>    <chr>        <chr>        #>  1 Time         Time         #>  2 Event_length Event_length #>  3 Y89          CD45         #>  4 Pd102        empty        #>  5 Pd104        empty        #>  6 Pd105        empty        #>  7 Pd106        empty        #>  8 Pd108        empty        #>  9 Pd110        empty        #> 10 In113        CD61         #> # ℹ 49 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Find if a vector is numeric — tof_is_numeric","title":"Find if a vector is numeric — tof_is_numeric","text":"function takes input vector `.vec` checks either integer double (.e. type vector might encode high-dimensional cytometry measurements).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find if a vector is numeric — tof_is_numeric","text":"","code":"tof_is_numeric(.vec)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find if a vector is numeric — tof_is_numeric","text":".vec vector.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find if a vector is numeric — tof_is_numeric","text":"boolean value indicating .vec type integer double.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"function uses distances cell K nearest neighbors estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"","code":"tof_knn_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   num_neighbors = min(15L, nrow(tof_tibble)),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   estimation_method = c(\"mean_distance\", \"sum_distance\"),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. num_neighbors integer indicating number nearest neighbors use estimating local density cell. Defaults minimum 15 number rows `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". estimation_method string indicating relative density cell calculated distances k nearest neighbors. Options \"mean_distance\" (default; estimates relative density cell's neighborhood taking negative average distances nearest neighbors) \"sum_distance\" (estimates relative density cell's neighborhood taking negative sum distances nearest neighbors). normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_knn_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities using K-nearest-neighbor density estimation — tof_knn_density","text":"tibble single column named \".knn_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"Compute log-rank test p-value difference two survival curves obtained splitting dataset \"low\" \"high\" risk group using given relative-risk threshold.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"tof_log_rank_test(   input_data,   relative_risk_col,   time_col,   event_col,   threshold )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"input_data tbl_df data.frame observation row. relative_risk_col unquote column name indicating column contains relative-risk estimates observation. time_col unquoted column name indicating column contains true time--event information observation. event_col unquoted column name indicating column contains outcome (event censorship). Must binary column - values  either 0 1 (1 indicating adverse event 0 indicating  censorship) FALSE TRUE (TRUE indicating adverse event FALSE indicating censorship). threshold numeric value indicating relative-risk threshold used split observations low- high-risk groups.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"numeric value <1, p-value log-rank test.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_log_rank_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the log-rank test p-value for the difference between the two survival\ncurves obtained by splitting a dataset into a ","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tof_make_knn_graph","title":"Title — tof_make_knn_graph","text":"Title","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tof_make_knn_graph","text":"","code":"tof_make_knn_graph(   tof_tibble,   knn_cols,   num_neighbors,   distance_function = c(\"euclidean\", \"cosine\"),   graph_type = c(\"weighted\", \"unweighted\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tof_make_knn_graph","text":"tof_tibble tibble tof_tbl. knn_cols Unquoted column names indicating columns tof_tibble used KNN calculation. num_neighbors integer number neighbors find cell ( including ). distance_function string indicating distance function use nearest-neighbor calculation. Options include \"euclidean\" (default) \"cosine\" distances. graph_type string indicating graph's edges weights (\"weighted\"; default) (\"unweighted\"). ... Optional additional arguments pass tof_find_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — tof_make_knn_graph","text":"tbl_graph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_knn_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — tof_make_knn_graph","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"Compute receiver-operating curve (ROC) two-class multiclass dataset","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"tof_make_roc_curve(input_data, truth_col, prob_cols)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"input_data tof_tbl, tbl_df, data.frame row observation. truth_col unquoted column name indicating column `input_data` contains true class labels observation. Must factor. prob_cols Unquoted column names indicating columns `input_data` contain probability estimates class `truth_col`. columns must specified order factor levels `truth_col`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"tibble can used plot ROC classification task. candidate probability threshold, following reported: specificity, sensitivity, true-positive rate (tpr), false-positive rate (fpr).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_make_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a receiver-operating curve (ROC) for a two-class or multiclass dataset — tof_make_roc_curve","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a logistic regression classifier log_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make predictions predictions <-     tof_predict(         log_model,         new_data = feature_tibble,         prediction_type = \"response\"     ) prediction_tibble <-     dplyr::tibble(         truth = feature_tibble$class,         prediction = predictions$.pred     )  # make ROC curve tof_make_roc_curve(     input_data = prediction_tibble,     truth_col = truth,     prob_cols = prediction )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data. — tof_metacluster","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"function wrapper around tidytof's tof_metacluster_* function family. performs metaclustering CyTOF data using user-specified method (5 choices) method's corresponding input parameters.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"tof_metacluster(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   ...,   augment = TRUE,   method = c(\"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. ... Additional arguments pass `tof_metacluster_*` function family member corresponding chosen `method`. augment boolean value indicating output column-bind metacluster ids cell new column `tof_tibble` (TRUE; default) single-column tibble including metacluster ids returned (FALSE). method string indicating clustering method used. Valid values include \"consensus\", \"hierarchical\", \"kmeans\", \"phenograph\", \"flowsom\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding metacluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding metacluster ids.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data. — tof_metacluster","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\",     method = \"flowsom\" ) #> # A tibble: 1,000 × 6 #>      cd45   cd38   cd34     cd19 cluster_id .flowsom_metacluster #>     <dbl>  <dbl>  <dbl>    <dbl> <chr>      <chr>                #>  1 -1.58  -0.768 -0.195  0.900   e          4                    #>  2 -2.39   0.525 -2.68   1.29    v          2                    #>  3  0.664 -1.03  -0.206 -0.00204 t          6                    #>  4  1.04  -0.160 -0.922  0.622   y          2                    #>  5 -0.350  0.344  0.463 -0.365   l          1                    #>  6 -2.19  -0.237  0.670  0.159   r          3                    #>  7 -0.365 -0.370  0.445 -0.568   d          1                    #>  8  0.512 -0.625  1.01  -1.68    f          1                    #>  9 -1.08  -0.935  0.582 -0.970   x          4                    #> 10  0.352 -0.135  0.276 -0.193   e          4                    #> # ℹ 990 more rows  tof_metacluster(     tof_tibble = sim_data,     cluster_col = cluster_id,     method = \"phenograph\" ) #> # A tibble: 1,000 × 6 #>      cd45   cd38   cd34     cd19 cluster_id .phenograph_metacluster #>     <dbl>  <dbl>  <dbl>    <dbl> <chr>      <chr>                   #>  1 -1.58  -0.768 -0.195  0.900   e          1                       #>  2 -2.39   0.525 -2.68   1.29    v          2                       #>  3  0.664 -1.03  -0.206 -0.00204 t          1                       #>  4  1.04  -0.160 -0.922  0.622   y          2                       #>  5 -0.350  0.344  0.463 -0.365   l          3                       #>  6 -2.19  -0.237  0.670  0.159   r          2                       #>  7 -0.365 -0.370  0.445 -0.568   d          3                       #>  8  0.512 -0.625  1.01  -1.68    f          3                       #>  9 -1.08  -0.935  0.582 -0.970   x          1                       #> 10  0.352 -0.135  0.276 -0.193   e          1                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"function performs consensus metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See ConsensusClusterPlus additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"tof_metacluster_consensus(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   proportion_clusters = 0.9,   proportion_features = 1,   num_reps = 20L,   clustering_algorithm = c(\"hierarchical\", \"pam\", \"kmeans\"),   distance_function = c(\"euclidean\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\",     \"binary\", \"canberra\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. proportion_clusters numeric value 0 1 indicating proportion clusters subsample (total number clusters `cluster_col`) iteration consensus clustering. Defaults 0.9 proportion_features numeric value 0 1 indicating proportion features (.e. proportion columns specified `metacluster_cols`) subsample iteration consensus clustering. Defaults 1 (features included). num_reps integer indicating many subsampled replicates run consensus clustering. Defaults 20. clustering_algorithm string indicating clustering algorithm ConsensusClusterPlus use metacluster subsampled clusters resampling. Options \"hierarchical\" (default), \"pam\" (partitioning around medoids), \"kmeans\". distance_function string indicating distance function used compute distances clusters consensus clustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"pearson\", \"spearman\", \"maximum\", \"binary\", \"canberra\". See ConsensusClusterPlus. ... Optional additional arguments pass ConsensusClusterPlus.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"tibble single column (`.consensus_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using consensus clustering — tof_metacluster_consensus","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_consensus(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .consensus_metacluster #>    <chr>                  #>  1 4                      #>  2 10                     #>  3 4                      #>  4 3                      #>  5 1                      #>  6 4                      #>  7 4                      #>  8 7                      #>  9 3                      #> 10 1                      #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"function performs metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. takes advantage FlowSOM package's built-functionality automatically detecting number metaclusters can use several strategies adapted FlowSOM team: consensus metaclustering, hierarchical metaclustering, k-means metaclustering, metaclustering using FlowSOM algorithm . See MetaClustering additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"tof_metacluster_flowsom(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   clustering_algorithm = c(\"consensus\", \"hierarchical\", \"kmeans\", \"som\"),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating maximum number clusters returned. Defaults 10. Note function, output may provide small number metaclusters requested. MetaClustering uses \"Elbow method\" automatically detect optimal number metaclusters. clustering_algorithm string indicating clustering algorithm MetaClustering use perform metaclustering. Options \"consensus\" (default), \"hierarchical\", \"kmeans\", \"som\" (.e. self-organizing map; FlowSOM algorithm ). ... Optional additional arguments pass MetaClustering.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"tibble single column (`.flowsom_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_flowsom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using FlowSOM's built-in metaclustering algorithm — tof_metacluster_flowsom","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"consensus\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 1                    #>  2 1                    #>  3 1                    #>  4 1                    #>  5 1                    #>  6 1                    #>  7 1                    #>  8 1                    #>  9 1                    #> 10 2                    #> # ℹ 990 more rows  tof_metacluster_flowsom(     tof_tibble = sim_data,     cluster_col = cluster_id,     clustering_algorithm = \"som\" ) #> # A tibble: 1,000 × 1 #>    .flowsom_metacluster #>    <chr>                #>  1 4                    #>  2 4                    #>  3 6                    #>  4 2                    #>  5 1                    #>  6 1                    #>  7 2                    #>  8 4                    #>  9 4                    #> 10 5                    #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"function performs hierarchical metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"tof_metacluster_hierarchical(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   distance_function = c(\"euclidean\", \"manhattan\", \"minkowski\", \"maximum\", \"canberra\",     \"binary\"),   agglomeration_method = c(\"complete\", \"single\", \"average\", \"median\", \"centroid\",     \"ward.D\", \"ward.D2\", \"mcquitty\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. distance_function string indicating distance function used compute distances clusters hierarchical metaclustering. Options \"euclidean\" (default), \"manhattan\", \"minkowski\", \"maximum\", \"canberra\", \"binary\". See dist additional details. agglomeration_method string indicating agglomeration algorithm used hierarchical cluster combination. Options \"complete\" (default), \"single\", \"average\", \"median\", \"centroid\", \"ward.D\", \"ward.D2\", \"mcquitty\". See hclust details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"tibble single column (`.hierarchical_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using hierarchical agglomerative clustering — tof_metacluster_hierarchical","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_hierarchical(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .hierarchical_metacluster #>    <chr>                     #>  1 4                         #>  2 3                         #>  3 1                         #>  4 9                         #>  5 10                        #>  6 1                         #>  7 6                         #>  8 7                         #>  9 3                         #> 10 5                         #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"function performs k-means metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements number desired metaclusters. See hclust.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"tof_metacluster_kmeans(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_metaclusters = 10L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_metaclusters integer indicating number clusters returned. Defaults 10. ... Optional additional method specifications pass tof_cluster_kmeans.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"tibble single column (`.kmeans_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using k-means clustering — tof_metacluster_kmeans","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_kmeans(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .kmeans_metacluster #>    <chr>               #>  1 1                   #>  2 10                  #>  3 10                  #>  4 2                   #>  5 7                   #>  6 8                   #>  7 1                   #>  8 9                   #>  9 1                   #> 10 1                   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"function performs PhenoGraph metaclustering `tof_tbl` containing CyTOF data using user-specified selection input variables/CyTOF measurements. number metaclusters automatically detected PhenoGraph algorithm. See tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"tof_metacluster_phenograph(   tof_tibble,   cluster_col,   metacluster_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   num_neighbors = 5L,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. metacluster_cols Unquoted column names indicating columns `tof_tibble` use computing metaclusters. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. central_tendency_function function used calculate measurement central tendency cluster metaclustering. function used compute summary statistic input cluster `cluster_col` across columns specified `metacluster_cols`, resulting vector (one cluster) used input metaclustering. Defaults median. num_neighbors integer indicating number neighbors use constructing PhenoGraph's k-nearest-neighbor graph. Smaller values emphasize local graph structure; larger values emphasize global graph structure (add time computation). Defaults 5. ... Optional additional method specifications pass tof_cluster_phenograph.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"tibble single column (`.phenograph_metacluster`) number rows input `tof_tibble`. entry column indicates metacluster label assigned row `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_metacluster_phenograph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metacluster clustered CyTOF data using PhenoGraph clustering — tof_metacluster_phenograph","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  tof_metacluster_phenograph(tof_tibble = sim_data, cluster_col = cluster_id) #> # A tibble: 1,000 × 1 #>    .phenograph_metacluster #>    <chr>                   #>  1 3                       #>  2 4                       #>  3 2                       #>  4 1                       #>  5 1                       #>  6 1                       #>  7 2                       #>  8 3                       #>  9 4                       #> 10 4                       #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot marker expression density plots — tof_plot_cells_density","title":"Plot marker expression density plots — tof_plot_cells_density","text":"function plots marker expression density plots user-specified column tof_tbl. Optionally, cells can grouped plot multiple vertically-arranged density plots","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"tof_plot_cells_density(   tof_tibble,   marker_col,   group_col,   num_points = 512,   theme = ggplot2::theme_bw(),   use_ggridges = FALSE,   scale = 1,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot marker expression density plots — tof_plot_cells_density","text":"tof_tibble `tof_tbl` `tibble`. marker_col unquoted column name representing column `tof_tibble` (.e. CyTOF protein measurement) included feature extraction calculation. group_col Unquoted column names representing column `tof_tibble` used break rows `tof_tibble` subgroups plotted separate histograms. Defaults plotting without subgroups. num_points number points along full range `marker_col` density calculated theme ggplot2 theme plot. Defaults theme_bw use_ggridges boolean value indicting geom_ridgeline used plot overlain histograms. Defaults FALSE. TRUE, ggridges package must installed. scale Use set `scale` argument geom_ridgeline, controls far apart (vertically) density plots arranged along y-axis. Defaults 1. ... Additional optional arguments send geom_ridgeline.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot marker expression density plots — tof_plot_cells_density","text":"ggplot object","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot marker expression density plots — tof_plot_cells_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(c(\"a\", \"b\"), size = 1000, replace = TRUE)     )  density_plot <-     tof_plot_cells_density(         tof_tibble = sim_data,         marker_col = cd45,         group_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"function makes scatterplots using single-cell data embedded low-dimensional space (generated tof_reduce_dimensions, point colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"tof_plot_cells_embedding(   tof_tibble,   embedding_cols,   color_col,   facet_cols,   compute_embedding_cols = where(tof_is_numeric),   embedding_method = c(\"pca\", \"tsne\", \"umap\"),   embedding_args = list(),   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"tof_tibble `tof_tbl` `tibble`. embedding_cols Unquoted column names indicating columns `tof_tibble` used x y axes scatterplot. Supports tidyselect helpers. Must select exactly 2 columns. provided, feature embedding can computed scratch using method provided using `embedding_method` argument tof_reduce_dimensions arguments passed `embedding_args`. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. compute_embedding_cols Unquoted column names indicating columns 'tof_tibble' use computing embeddings method specified `embedding_method`. Defaults numeric columns 'tof_tibble'. Supports tidyselect helpers. embedding_method string indicating method used feature embedding (`embedding_cols` provided). Options (passed tof_reduce_dimensions) \"pca\" (default), \"tsne\", \"umap\". embedding_args Optional additional arguments pass tof_reduce_dimensions. example, `method = \"tsne\"`, might include `num_comp`, `perplexity`, `theta`. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass tof_plot_cells_scatter. method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data using low-dimensional feature embeddings — tof_plot_cells_embedding","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # embed with pca pca_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cd38,         embedding_method = \"pca\",         compute_embedding_cols = starts_with(\"cd\")     )  # embed with tsne tsne_plot <-     tof_plot_cells_embedding(         tof_tibble = sim_data,         color_col = cluster_id,         embedding_method = \"tsne\",         compute_embedding_cols = starts_with(\"cd\")     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"function makes force-directed layouts using single-cell data embedded 2-dimensional space representing k-nearest-neighbor graph constructed using cell--cell similarities. node force-directed layout represents single cell colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"tof_plot_cells_layout(   tof_tibble,   knn_cols = where(tof_is_numeric),   color_col,   facet_cols,   num_neighbors = 5,   graph_type = c(\"weighted\", \"unweighted\"),   graph_layout = \"fr\",   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.25,   node_size = 2,   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"tof_tibble `tof_tbl` `tibble`. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cell--cell distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes force-directed layout. facet_cols Unquoted column names indicating columns `tof_tibble` used separate nodes different force-directed layouts. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"fr\", Fruchterman-Reingold algorithm. examples include \"nicely\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. distance_function string indicating distance function use computing cell--cell distances. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size numeric value specifying size nodes force-directed layout. Defaults 2. theme ggplot2 theme apply force-directed layout. Defaults theme_void ... hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"ggraph/ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot force-directed layouts of single-cell data — tof_plot_cells_layout","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cd38     )  # make a layout colored by cluster id layout_cluster <-     tof_plot_cells_layout(         tof_tibble = sim_data,         color_col = cluster_id,     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"function makes scatterplots single-cell data using user-specified x- y-axes. Additionally, point scatterplot can colored using user-specified variable.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"tof_plot_cells_scatter(   tof_tibble,   x_col,   y_col,   color_col,   facet_cols,   theme = ggplot2::theme_bw(),   ...,   method = c(\"ggplot2\", \"scattermore\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"tof_tibble `tof_tbl` `tibble`. x_col unquoted column name specifying column `tof_tibble` used x-axis. y_col unquoted column name specifying column `tof_tibble` used y-axis. color_col unquoted column name specifying column `tof_tibble` used color point scatterplot. facet_cols unquoted column name specifying column `tof_tibble` used break scatterplot facets using facet_wrap. theme ggplot2 theme apply scatterplot. Defaults theme_bw. ... Optional additional arguments pass geom_point method = \"ggplot2\" geom_scattermore method = \"scattermore\". method string indicating plotting engine used. Valid values include \"ggplot2\" (default) \"scattermore\" (recommended 100K cells plotted). Note method = \"scattermore\" requires scattermore package installed.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"ggplot object.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_cells_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot scatterplots of single-cell data. — tof_plot_cells_scatter","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = c(rnorm(n = 500), rnorm(n = 500, mean = 2)),         cd34 = c(rnorm(n = 500), rnorm(n = 500, mean = 4)),         cd19 = rnorm(n = 1000),         cluster_id = c(rep(\"a\", 500), rep(\"b\", 500))     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"function makes heatmap cluster--cluster marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap cluster IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"tof_plot_clusters_heatmap(   tof_tibble,   cluster_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_clusterwise = FALSE,   cluster_markers = TRUE,   cluster_clusters = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_clusterwise boolean value indicating heatmap rescale rows heatmap maximum value cluster 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_clusters boolean value indicating heatmap order rows (.e. clusters) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing cluster marker expression patterns in CyTOF data — tof_plot_clusters_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_clusters_heatmap(         tof_tibble = sim_data,         cluster_col = cluster_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"function plots minimum-spanning tree using clustered single-cell data order summarize cluster-level characteristics. node MST represents single cluster colored using user-specified variable (either continuous discrete).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"tof_plot_clusters_mst(   tof_tibble,   cluster_col,   knn_cols = where(tof_is_numeric),   color_col,   num_neighbors = 5L,   graph_type = c(\"unweighted\", \"weighted\"),   graph_layout = \"nicely\",   central_tendency_function = stats::median,   distance_function = c(\"euclidean\", \"cosine\"),   edge_alpha = 0.4,   node_size = \"cluster_size\",   theme = ggplot2::theme_void(),   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"tof_tibble `tof_tbl` `tibble`. cluster_col unquoted column name indicating column `tof_tibble` stores cluster ids cluster cell belongs. Cluster labels can produced via method user chooses - including manual gating, functions `tof_cluster_*` function family, method. knn_cols Unquoted column names indicating columns `tof_tibble` used compute cluster--cluster distances used construct k-nearest-neighbor graph. Supports tidyselect helpers. Defaults numeric columns. color_col Unquoted column name indicating column `tof_tibble` used color nodes MST. num_neighbors integer specifying many neighbors used construct k-nearest neighbor graph. graph_type string specifying k-nearest neighbor graph \"weighted\" (default) \"unweighted\". graph_layout argument specifies layout MST one two ways. Option 1: Provide string specifying algorithm used compute force-directed layout. Passed ggraph. Defaults \"nicely\", tries automatically select visually-appealing layout. examples include \"fr\", \"gem\", \"kk\", many others. See layout_tbl_graph_igraph examples. Option 2: Provide ggraph object previously generated function. layout used plot ggraph object used template new plot. Using option, number clusters (labels) must identical template. option useful want make multiple plots tof_tibble colored different protein markers, example. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. distance_function string indicating distance function use computing cluster--clusters distances constructing MST. Valid options include \"euclidean\" (default) \"cosine\". edge_alpha numeric value 0 1 specifying transparency edges drawn force-directed layout. Defaults 0.25. node_size Either numeric value specifying size nodes MST string \"cluster_size\", case size node representing cluster scaled according number cells cluster (default). theme ggplot2 theme apply force-directed layout. Defaults theme_void ... Optional additional arguments hnsw_knn","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"ggraph/ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_mst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize clusters in CyTOF data using a minimum spanning tree (MST). — tof_plot_clusters_mst","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE)     )  # make a layout colored by a marker layout_cd38 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd38     )  # use the same layout as the plot above to color the same # tree using a different marker layout_cd45 <-     tof_plot_clusters_mst(         tof_tibble = sim_data,         cluster_col = cluster_id,         color_col = cd45,         graph_layout = layout_cd38     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"function makes volcano plot using results differential expression analysis (DEA) produced one `tof_dea_*` verbs. point volcano plot represents single cluster-marker pair, colored significance level direction marker expression difference.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"tof_plot_clusters_volcano(   dea_result,   num_top_pairs = 10L,   alpha = 0.05,   point_size = 2,   label_size = 3,   nudge_x = 0,   nudge_y = 0.25,   increase_color = \"#207394\",   decrease_color = \"#cd5241\",   insignificant_color = \"#cdcdcd\",   use_ggrepel = FALSE,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"dea_result tibble containing differential expression analysis (DEA) results produced one members `tof_dea_*` function family. num_top_pairs integer representing number significant cluster-marker pairs labeled volcano plot. alpha numeric value 0 1 representing significance level p-value considered statistically significant. Defaults 0.05. point_size numeric value specifying size points volcano plot. label_size numeric value specifying size text labeling cluster-marker pairs. nudge_x numeric value specifying far cluster-marker pair labels adjusted left (`nudge_x` negative) right (`nudge_x` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0. nudge_y numeric value specifying far cluster-marker pair labels adjusted downwards (`nudge_y` negative) upwards (`nudge_y` positive) avoid overlap plotted points. Passed  geom_text, ignored `use_ggrepel` = TRUE. Defaults 0.25. increase_color hex code specifying fill color used points corresponding cluster-marker pairs significant increases detected. decrease_color hex code specifying fill color used points corresponding cluster-marker pairs significant decreases detected. insignificant_color hex code specifying fill color used points corresponding cluster-marker pairs significant differences detected. use_ggrepel boolean value indicting geom_text_repel used plot labels cluster-marker pairs. Defaults FALSE. TRUE, ggrepel package must installed. theme ggplot2 theme apply volcano plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_clusters_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a volcano plot from differential expression analysis results — tof_plot_clusters_volcano","text":"","code":"# create a mock differential expression analysis result sim_dea_result <-     dplyr::tibble(         cluster_id = rep(letters, 2),         marker = rep(c(\"cd45\", \"cd34\"), times = length(letters)),         p_adj = runif(n = 2 * length(letters), min = 0, max = 0.5),         mean_fc = runif(n = 2 * length(letters), min = 0.01, max = 10),         significant = dplyr::if_else(p_adj < 0.05, \"*\", \"\")     )  attr(sim_dea_result, which = \"dea_method\") <- \"t_unpaired\"  # create the volcano plot volcano <- tof_plot_clusters_volcano(dea_result = sim_dea_result)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"function makes heatmap group--group marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap groups plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"","code":"tof_plot_heatmap(   tof_tibble,   y_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_ywise = FALSE,   cluster_markers = TRUE,   cluster_groups = TRUE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"tof_tibble `tof_tbl` `tibble`. y_col unquoted column name indicating column `tof_tibble` stores ids group cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated cluster cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_ywise boolean value indicating heatmap rescale rows heatmap maximum value group 1 minimum value 0. Defaults FALSE. cluster_markers boolean value indicating heatmap order columns (.e. markers) using hierarchical clustering. Defaults TRUE. cluster_groups boolean value indicating heatmap order rows (.e. groups) using hierarchical clustering. Defaults TRUE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing group marker expression patterns in high-dimensional cytometry data — tof_plot_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"Plot results glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"tof_plot_model(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"ggplot object. `tof_model` linear model, scatterplot predicted outcome vs. true outcome returned. `tof_model` two-class model, ROC curve returned. `tof_model` multiclass model, one-versus-ROC curve returned class. `tof_model` survival model, Kaplan-Meier curve returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the results of a glmnet model fit on sample-level data. — tof_plot_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             )     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # make the plot plot_1 <- tof_plot_model(tof_model = regression_model, new_data = new_tibble)  # train a logistic regression classifier logistic_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = class,         model_type = \"two-class\"     )  # make the plot  plot_2 <- tof_plot_model(tof_model = logistic_model, new_data = new_tibble)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"Plot results linear glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"","code":"tof_plot_model_linear(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a linear glmnet model fit on sample-level data. — tof_plot_model_linear","text":"ggplot object. Specifically, scatterplot predicted outcome vs. true outcome returned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"Plot results two-class glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"","code":"tof_plot_model_logistic(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a two-class glmnet model fit on sample-level data. — tof_plot_model_logistic","text":"ggplot object. Specifically, ROC curve..","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"Plot results multiclass glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"","code":"tof_plot_model_multinomial(tof_model, new_data, theme = ggplot2::theme_bw())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. theme ggplot2 theme apply plot. Defaults theme_bw.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_multinomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a multiclass glmnet model fit on sample-level data. — tof_plot_model_multinomial","text":"ggplot object. Specifically, one-versus-ROC curve (one class).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"Plot results survival glmnet model fit sample-level data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"","code":"tof_plot_model_survival(   tof_model,   new_data,   censor_size = 2.5,   theme = ggplot2::theme_bw() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations plot made. new_data provided, plot made using training data used fit model. Alternatively, string \"tuning_data\" can provided, plot generated using predictions generated model tuning. censor_size numeric value indicating large plot tick marks representing censored values Kaplan-Meier curve. theme ggplot2 theme apply plot. Defaults theme_bw","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_model_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the results of a survival glmnet model fit on sample-level data. — tof_plot_model_survival","text":"ggplot object. Specifically, Kaplan-Meier curve.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"tof_plot_sample_features(   feature_tibble,   sample_col,   feature_cols = where(tof_is_numeric),   scale_featurewise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"feature_tibble tbl_df data.frame aggregated sample-level features, generated tof_extract_features. sample_col unquoted column name indicating column `tof_tibble` stores IDs sample. sample IDs present, numeric ID assigned row `feature_tibble` based row index. feature_cols Unquoted column names indicating column `feature_tibble` interpreted features plotted along x-axis heatmap. Supports tidyselect helpers. scale_featurewise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_features","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         cluster_id = sample(letters, size = 1000, replace = TRUE),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  # extract cluster proportions in each simulated patient feature_data <-     tof_extract_proportion(         tof_tibble = sim_data,         cluster_col = cluster_id,         group_cols = sample_id     )  # plot the heatmap heatmap <- tof_plot_sample_features(feature_tibble = feature_data)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"function makes heatmap sample--sample marker expression patterns single-cell data. Markers plotted along horizontal (x-) axis heatmap sample IDs plotted along vertical (y-) axis heatmap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"tof_plot_sample_heatmap(   tof_tibble,   sample_col,   marker_cols = where(tof_is_numeric),   central_tendency_function = stats::median,   scale_markerwise = FALSE,   scale_samplewise = FALSE,   line_width = 0.25,   theme = ggplot2::theme_minimal() )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"tof_tibble `tof_tbl` `tibble`. sample_col unquoted column name indicating column `tof_tibble` stores ids sample cell belongs. marker_cols Unquoted column names indicating column `tof_tibble` interpreted markers plotted along x-axis heatmap. Supports tidyselect helpers. central_tendency_function function use computing measure central tendency aggregated sample cluster_col. Defaults median. scale_markerwise boolean value indicating heatmap rescale columns heatmap maximum value marker 1 minimum value 0. Defaults FALSE. scale_samplewise boolean value indicating heatmap rescale rows heatmap maximum value sample 1 minimum value 0. Defaults FALSE. line_width numeric value indicating thick lines separating tiles heatmap . Defaults 0.25. theme ggplot2 theme apply heatmap. Defaults theme_minimal","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"ggplot object.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_plot_sample_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a heatmap summarizing sample marker expression patterns in CyTOF data — tof_plot_sample_heatmap","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000),         sample_id = sample(paste0(\"sample\", 1:5), size = 1000, replace = TRUE)     )  heatmap <-     tof_plot_sample_heatmap(         tof_tibble = sim_data,         sample_col = sample_id     )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-process transformed CyTOF data. — tof_postprocess","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"function transforms `tof_tibble` transformed ion counts mass cytometer back something looks like .fcs file Fluidigm software generates.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"tof_postprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   redo_noise = FALSE,   transform_fun = function(x) rev_asinh(x, shift_factor = 0, scale_factor = 0.2) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"tof_tibble `tof_tibble` `tibble`. channel_cols vector non-quoted column names indicating columns `tof_tibble` contain protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. redo_noise boolean value indicating whether add  uniform noise CyTOF measurement aesthetic visualization purposes. See paper. Defaults FALSE transform_fun vectorized function apply column specified `channel_cols` post-processing. Defaults rev_asinh transformation (cofactor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise added removed depending `redo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_postprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-process transformed CyTOF data. — tof_postprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 preprocessed_tof_tibble <- tof_preprocess(tof_tibble)  # postprocess all numeric columns to reverse the preprocessing tof_postprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1   Inf    22215276.   6.00e224          8.82      1411688.    Inf        #>  2   Inf   446205752. Inf               135.         859679.    Inf        #>  3   Inf    22215276. Inf              2634.            321.      8.51e277 #>  4   Inf    22215276.   2.24e254          3.47         1383.      8.29e254 #>  5   Inf   164149923. Inf               127.          38726.      3.70e280 #>  6   Inf   446205752.   1.14e211        163.            116.      3.29e272 #>  7   Inf    22215276.   2.62e219         79.1           175.      1.82e246 #>  8   Inf   164149923.   5.35e246       1876.         291228.      5.64e305 #>  9   Inf   446205752. Inf                55.3         24727.    Inf        #> 10   Inf    22215276.   2.38e236          5.05      2010273.    Inf        #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a trained elastic net model to predict fitted values from new data — tof_predict","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"function uses trained `tof_model` make predictions new data.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"tof_predict(   tof_model,   new_data,   prediction_type = c(\"response\", \"class\", \"link\", \"survival curve\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tof_model `tof_model` trained using tof_train_model new_data tibble new observations predictions made. new_data provided, predictions made training data used fit model. prediction_type string indicating type prediction provided model: \"response\" (default) \"linear\" models, predicted response observation. \"two-class\" \"multiclass\" models, fitted probabilities class observation. \"survival\" models, fitted relative-risk observation. \"class\" applies \"two-class\" \"multiclass\" models. , class label corresponding class maximum fitted probability. \"link\" linear predictions model (output link function model family.) \"survival curve\" applies \"survival\" models. Returns tibble indicating patient's probability survival (1 - probability(event)) timepoint dataset. Obtained using survfit function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"tibble single column (`.pred`) containing predictions , multiclass models `prediction_type` == \"response\", tibble one column class. row output corresponds row `new_data` ( , `new_data` provided, row `tof_model`'s training data). latter case, sure check `tof_model$training_data` confirm order observations, resampling procedure can change ordering relative original input data.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a trained elastic net model to predict fitted values from new data — tof_predict","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100)     )  new_tibble <-     dplyr::tibble(         sample = as.character(1:20),         cd45 = runif(n = 20),         pstat5 = runif(n = 20),         cd34 = runif(n = 20),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(20)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model regression_model <-     tof_train_model(         split_data = split_data,         predictor_cols = c(cd45, pstat5, cd34),         response_col = outcome,         model_type = \"linear\"     )  # apply the model to new data tof_predict(tof_model = regression_model, new_data = new_tibble) #> # A tibble: 20 × 1 #>    .pred #>    <dbl> #>  1 3.90  #>  2 4.77  #>  3 3.33  #>  4 0.388 #>  5 2.43  #>  6 3.07  #>  7 3.38  #>  8 2.59  #>  9 5.27  #> 10 4.30  #> 11 0.824 #> 12 0.987 #> 13 2.44  #> 14 5.04  #> 15 3.86  #> 16 5.88  #> 17 4.41  #> 18 4.80  #> 19 4.44  #> 20 3.14"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"Train recipe list recipes preprocessing sample-level cytometry data","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"","code":"tof_prep_recipe(split_data, unprepped_recipe)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df, though recommended. unprepped_recipe recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_prep_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a recipe or list of recipes for preprocessing sample-level cytometry data — tof_prep_recipe","text":"split_data \"rsplit\" \"tbl_df\" object, return single prepped recipe. split_data \"rset\" object, return list prepped recipes specific fold resampling procedure.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function. can used perform standard pre-processing steps (.e. arcsinh transformation) cytometry data analysis.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"tof_preprocess(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   undo_noise = FALSE,   transform_fun = function(x) asinh(x/5) )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. undo_noise boolean value indicating whether remove uniform noise Fluidigm software adds CyTOF measurements aesthetic visualization purposes. See paper. Defaults FALSE. transform_fun vectorized function apply protein value variance stabilization. Defaults asinh transformation (co-factor 5).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun` (noise removed removed depending `undo_noise`).","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess raw high-dimensional cytometry data. — tof_preprocess","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"Read high-dimensional cytometry data .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"","code":"tof_read_csv(file_path = NULL, panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"file_path file path single .csv file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a .csv file into a tidy tibble. — tof_read_csv","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user (unlike `tof_read_fcs`).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"Read data .fcs/.csv file directory .fcs/.csv files.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"tof_read_data(path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"path file path single file directory files. valid file types .fcs files .csv files containing high-dimensional cytometry data. sep Optional. string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"[c m+1] tibble row represents single cell (c total dataset) column represents high-dimensional cytometry measurement (m total dataset). one .fcs read , last column tibble (`file_name`) represent file name .fcs file cell read.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from an .fcs/.csv file or a directory of .fcs/.csv files. — tof_read_data","text":"","code":"input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_read_data(input_file) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"function reads high-dimensional cytometry data single .fcs file tidy data structure called `tof_tbl` (\"tof_tibble\"). tof_tibbles identical normal tibbles except additional attribute (\"panel\") stores information high-dimensional cytometry panel used data acquisition.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"","code":"tof_read_fcs(file_path = NULL, sep = \"|\")"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"file_path file path single .fcs file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from an .fcs file into a tidy tibble. — tof_read_fcs","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"Read high-dimensional cytometry data single .fcs .csv file tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"","code":"tof_read_file(file_path = NULL, sep = \"|\", panel_info = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"file_path file path single .fcs .csv file. sep string use separate antigen name associated metal column names output tibble. Defaults \"|\". used input file .fcs file. panel_info Optional. tibble data.frame containing information panel used high-dimensional cytometry data acquisition. Two columns required: \"metals\" \"antigens\". used input file .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read high-dimensional cytometry data from a single .fcs or .csv file into a tidy tibble. — tof_read_file","text":"`tof_tbl` row represents single cell column represents high-dimensional cytometry antigen channel. `tof_tbl` S3 class extends \"tibble\" class storing one additional attribute: \"panel\" (tibble storing information panel used data acquisition). panel information obvious data read .csv file, information must provided manually user.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"function wrapper around tidytof's tof_reduce_* function family. performs dimensionality reduction single-cell data using user-specified method (3 choices) method's corresponding input parameters","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"tof_reduce_dimensions(   tof_tibble,   ...,   augment = TRUE,   method = c(\"pca\", \"tsne\", \"umap\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tof_tibble `tof_tbl` `tibble`. ... Arguments passed tof_reduce_* function corresponding embedding method. See tof_reduce_pca, tof_reduce_tsne, tof_reduce_umap. augment boolean value indicating output column-bind dimensionality-reduced embedding vectors cell new column `tof_tibble` (TRUE, default) tibble including low-dimensionality embeddings returned (FALSE). method method dimensionality reduction. Currently, PCA, tSNE, UMAP embedding supported.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated embedding space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dimensionality reduction to a single-cell dataset. — tof_reduce_dimensions","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 100),         cd38 = rnorm(n = 100),         cd34 = rnorm(n = 100),         cd19 = rnorm(n = 100)     )  # calculate pca tof_reduce_dimensions(tof_tibble = sim_data, method = \"pca\") #> # A tibble: 100 × 8 #>       cd45   cd38   cd34   cd19    .pc1   .pc2     .pc3    .pc4 #>      <dbl>  <dbl>  <dbl>  <dbl>   <dbl>  <dbl>    <dbl>   <dbl> #>  1 -0.561  -0.259  2.01   0.845  1.12    0.283  1.46     1.16   #>  2  0.332  -1.31   1.39   0.389  1.53    0.121  0.00464  0.920  #>  3 -2.33    1.63   0.112 -0.119 -2.14    0.519  1.72     0.914  #>  4 -1.18    1.42   0.597 -0.744 -1.48   -0.628  1.14     0.854  #>  5  0.666   0.469 -0.181 -0.449 -0.306  -0.736 -0.256   -0.428  #>  6  1.70   -1.30   1.42   0.239  2.22   -0.718 -0.496    0.184  #>  7 -0.474   0.138 -1.46   0.995 -0.717   1.50   0.0360  -0.949  #>  8 -0.0121 -1.38  -0.248  0.624  0.656   1.11  -0.614    0.183  #>  9  0.728  -1.33  -0.111  0.147  0.870   0.315 -1.00     0.0103 #> 10  1.03    0.181 -0.171 -0.463  0.0189 -0.830 -0.546   -0.520  #> # ℹ 90 more rows  # calculate tsne tof_reduce_dimensions(tof_tibble = sim_data, method = \"tsne\") #> # A tibble: 100 × 6 #>       cd45   cd38   cd34   cd19 .tsne1  .tsne2 #>      <dbl>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl> #>  1 -0.561  -0.259  2.01   0.845  -1.12 -3.02   #>  2  0.332  -1.31   1.39   0.389  -3.26 -1.49   #>  3 -2.33    1.63   0.112 -0.119   5.46 -0.0530 #>  4 -1.18    1.42   0.597 -0.744   4.78  0.0140 #>  5  0.666   0.469 -0.181 -0.449   2.38 -1.80   #>  6  1.70   -1.30   1.42   0.239  -3.61 -2.86   #>  7 -0.474   0.138 -1.46   0.995   1.38  2.17   #>  8 -0.0121 -1.38  -0.248  0.624  -3.08  0.895  #>  9  0.728  -1.33  -0.111  0.147  -3.65  0.923  #> 10  1.03    0.181 -0.171 -0.463   2.36 -2.19   #> # ℹ 90 more rows  # calculate umap tof_reduce_dimensions(tof_tibble = sim_data, method = \"umap\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 100 × 6 #>       cd45   cd38   cd34   cd19 .umap1 .umap2 #>      <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl> #>  1 -0.561  -0.259  2.01   0.845 -0.133 -0.963 #>  2  0.332  -1.31   1.39   0.389 -4.09   0.285 #>  3 -2.33    1.63   0.112 -0.119  4.83  -1.72  #>  4 -1.18    1.42   0.597 -0.744  4.61  -1.28  #>  5  0.666   0.469 -0.181 -0.449  2.49   1.01  #>  6  1.70   -1.30   1.42   0.239 -3.36   0.151 #>  7 -0.474   0.138 -1.46   0.995 -0.808 -2.59  #>  8 -0.0121 -1.38  -0.248  0.624 -5.92  -0.166 #>  9  0.728  -1.33  -0.111  0.147 -4.87   0.746 #> 10  1.03    0.181 -0.171 -0.463  2.25   0.798 #> # ℹ 90 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform principal component analysis on single-cell data — tof_reduce_pca","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"function calculates principal components using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"tof_reduce_pca(   tof_tibble,   pca_cols = where(tof_is_numeric),   num_comp = 5,   threshold = NA,   center = TRUE,   scale = TRUE,   return_recipe = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tof_tibble `tof_tbl` `tibble`. pca_cols Unquoted column names indicating columns `tof_tibble` use computing principal components. Defaults numeric columns. Supports tidyselect helpers. num_comp number PCA components calculate. Defaults 5. See step_pca. threshold double 0 1 representing fraction total variance covered components returned output. See step_pca. center boolean value indicating column centered mean 0 PCA analysis. Defaults TRUE. scale boolean value indicating column scaled standard deviation = 1 PCA analysis. Defaults TRUE. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing PCA embedding returned. Set option TRUE want create PCA embedding using one dataset also want project new observations onto embedding space later.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated principal component space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform principal component analysis on single-cell data — tof_reduce_pca","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate pca tof_reduce_pca(tof_tibble = sim_data, num_comp = 2) #> # A tibble: 200 × 2 #>      .pc1    .pc2 #>     <dbl>   <dbl> #>  1 -0.244  1.51   #>  2 -0.553  0.502  #>  3 -0.503 -1.25   #>  4 -0.538  1.31   #>  5 -0.528 -1.23   #>  6 -2.61   0.0402 #>  7 -1.39   1.82   #>  8  0.298  0.459  #>  9 -1.15   0.779  #> 10  1.21   0.0252 #> # ℹ 190 more rows  # return recipe instead of embeddings pca_recipe <- tof_reduce_pca(tof_tibble = sim_data, return_recipe = TRUE)  # apply recipe to new data recipes::bake(pca_recipe, new_data = new_data) #> # A tibble: 50 × 4 #>       PC1    PC2    PC3    PC4 #>     <dbl>  <dbl>  <dbl>  <dbl> #>  1 -0.370 -0.725 -0.491  0.695 #>  2 -1.58  -1.37  -1.03   2.04  #>  3  1.00   0.601  0.390 -1.64  #>  4 -0.617  1.70   0.101 -1.45  #>  5  0.549  0.832  0.827 -0.329 #>  6  0.808  0.344  1.62   0.295 #>  7 -0.761 -0.428  0.360 -1.21  #>  8 -0.758 -0.632 -1.11   0.153 #>  9 -0.851  0.897 -0.937  0.828 #> 10  0.154 -0.190 -1.40  -0.915 #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"function calculates tSNE embedding using single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"tof_reduce_tsne(   tof_tibble,   tsne_cols = where(tof_is_numeric),   num_comp = 2,   perplexity = 30,   theta = 0.5,   max_iterations = 1000,   verbose = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tof_tibble `tof_tbl` `tibble`. tsne_cols Unquoted column names indicating columns `tof_tibble` use computing tSNE embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp number tSNE components calculate embedding. Defaults 2. perplexity positive numeric value represents represents rough balance input data’s local global structure emphasized embedding. Smaller values emphasize local structure; larger values emphasize global structure. recommended range generally 5-50. Defaults 30. theta numeric value representing speed/accuracy tradeoff embedding. Set 0 exact tSNE; increase faster approximation. Defaults 0.5 max_iterations integer number iterations use embedding calculation. Defaults 1000. verbose boolean value indicating whether progress updates printed embedding calculation. Default FALSE. ... Additional arguments pass Rtsne.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated tSNE space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform t-distributed stochastic neighborhood embedding on single-cell data — tof_reduce_tsne","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     )  # calculate tsne tof_reduce_tsne(tof_tibble = sim_data) #> # A tibble: 200 × 2 #>     .tsne1 .tsne2 #>      <dbl>  <dbl> #>  1  7.65    4.09  #>  2 -5.58   -6.48  #>  3  0.309  -5.97  #>  4 -6.72   -6.01  #>  5  2.42   -0.467 #>  6  0.0232  1.01  #>  7 -4.22   -3.00  #>  8  7.07    3.76  #>  9  6.67    1.84  #> 10 -5.70    2.25  #> # ℹ 190 more rows  # calculate tsne with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, tsne_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1 -4.88  -2.18  #>  2  2.85   3.32  #>  3  8.34  -0.916 #>  4 -0.846  6.80  #>  5 -5.65   1.18  #>  6  7.16  -1.99  #>  7 -2.02  -2.87  #>  8 -3.53  -5.04  #>  9 -2.12  -4.92  #> 10 -4.89   8.78  #> # ℹ 190 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"function calculates UMAP embedding single-cell data `tof_tibble`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"tof_reduce_umap(   tof_tibble,   umap_cols = where(tof_is_numeric),   num_comp = 2,   neighbors = 5,   min_dist = 0.01,   learn_rate = 1,   epochs = NULL,   verbose = FALSE,   n_threads = 1,   return_recipe = FALSE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tof_tibble `tof_tbl` `tibble`. umap_cols Unquoted column names indicating columns `tof_tibble` use computing UMAP embedding. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_comp integer number UMAP components. neighbors integer number nearest neighbors used construct target simplicial set. min_dist effective minimum distance embedded points. learn_rate Positive number learning rate optimization process. epochs Number iterations neighbor optimization. See umap details. verbose boolean indicating run details logged console. Defaults FALSE. n_threads Number threads use UMAP calculation. Defaults 1. return_recipe boolean value indicating instead UMAP result, prepped recipe object containing UMAP embedding returned. Set option TRUE want create UMAP embedding using one dataset also want project new observations onto embedding space later. ... Optional. options passed arguments umap.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"tibble number rows `tof_tibble`, representing single cell. `num_comp` columns represents cell's embedding calculated UMAP space.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_reduce_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply uniform manifold approximation and projection (UMAP) to single-cell data — tof_reduce_umap","text":"","code":"# simulate single-cell data sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200)     ) new_data <-     dplyr::tibble(         cd45 = rnorm(n = 50),         cd38 = rnorm(n = 50),         cd34 = rnorm(n = 50),         cd19 = rnorm(n = 50)     )  # calculate umap tof_reduce_umap(tof_tibble = sim_data) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> # A tibble: 200 × 2 #>    .umap1  .umap2 #>     <dbl>   <dbl> #>  1 -0.671  2.77   #>  2 -0.398  1.34   #>  3 -2.67  -1.34   #>  4 -0.473 -0.356  #>  5 -0.327  3.20   #>  6 -2.18   2.84   #>  7  4.18  -2.06   #>  8 -0.190 -0.0974 #>  9  4.08  -2.51   #> 10 -2.04   0.786  #> # ℹ 190 more rows  # calculate umap with only 2 columns tof_reduce_tsne(tof_tibble = sim_data, umap_cols = c(cd34, cd38)) #> # A tibble: 200 × 2 #>    .tsne1 .tsne2 #>     <dbl>  <dbl> #>  1   8.31 -4.23  #>  2   3.03 -3.13  #>  3  -2.08  6.18  #>  4  -4.30  1.17  #>  5   7.53 -2.50  #>  6   5.96  0.366 #>  7  -8.31 -2.83  #>  8   1.13 -4.12  #>  9  -6.24 -2.37  #> 10   4.00 -0.209 #> # ℹ 190 more rows  # return recipe umap_recipe <- tof_reduce_umap(tof_tibble = sim_data, return_recipe = TRUE) #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’ #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by ‘spam’  # apply recipe to new data recipes::bake(umap_recipe, new_data = new_data) #> # A tibble: 50 × 2 #>     UMAP1  UMAP2 #>     <dbl>  <dbl> #>  1  1.47  -1.53  #>  2  2.64   0.782 #>  3  1.63  -4.23  #>  4  2.06   1.96  #>  5 -1.47  -1.47  #>  6  0.206 -1.21  #>  7 -1.75   3.22  #>  8  2.88   1.60  #>  9 -2.78  -0.962 #> 10 -0.322 -1.91  #> # ℹ 40 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tibble — tof_set_panel","title":"Set panel information from a tof_tibble — tof_set_panel","text":"Set panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tibble — tof_set_panel","text":"tof_tibble `tof_tbl`. panel tibble containing two columns (`metals` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tibble — tof_set_panel","text":"`tof_tibble` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tibble — tof_set_panel","text":"","code":"# get current panel from an .fcs file input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file) current_panel <- tof_get_panel(tof_tibble)  # create a new panel (remove empty channels) new_panel <- dplyr::filter(current_panel, antigens != \"empty\") tof_set_panel(tof_tibble = tof_tibble, panel = new_panel) #> # A tibble: 100 × 59 #>         Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>        <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 11021370            16       517.         1.33          13.2           865. #>  2  7112446.           19       850.         3.99          12.7           756. #>  3  9722098            16       747.         6.96           4.85          639. #>  4  2267279.           16       585.         0.648          6.32          586. #>  5  9624729            18       773.         3.93           9.65          645. #>  6  4439897            19       485.         4.18           3.84          627. #>  7  2762526.           16       504.         3.46           4.25          566. #>  8  3746682.           18       567.         6.62          11.7           703. #>  9 15214280            19      1043.         3.10           9.20          853. #> 10    42699.           16       543.         0.888         13.6           813. #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"function uses algorithm described Qiu et al., (2011) estimate local density cell `tof_tbl` `tibble` containing high-dimensional cytometry data. Briefly, algorithm involves counting number neighboring cells within  sphere radius alpha surrounding cell. , using nn2 function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"tof_spade_density(   tof_tibble,   distance_cols = where(tof_is_numeric),   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\"),   num_alpha_cells = 2000L,   alpha_multiplier = 5,   max_neighbors = round(0.01 * nrow(tof_tibble)),   normalize = TRUE,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tof_tibble `tof_tbl` `tibble`. distance_cols Unquoted names columns `tof_tibble` use calculating cell--cell distances local density estimation cell. Defaults numeric columns `tof_tibble`. distance_function string indicating distance function use calculating cell--cell distances local density estimation. Options include \"euclidean\" (default) \"cosine\". num_alpha_cells integer indicating many cells `tof_tibble` randomly sampled `tof_tibble` order estimate `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` randomly-sampled cells multiplying `alpha_multiplier`. Defaults 2000. alpha_multiplier numeric value indicating multiplier used calculating `alpha`, radius sphere constructed around cell local density estimation. Alpha calculated taking median nearest-neighbor distance `num_alpha_cells` cells randomly-sampled `tof_tibble` multiplying `alpha_multiplier`. Defaults 5. max_neighbors integer indicating maximum number neighbors can counted within sphere surrounding given cell. Implemented reduce density estimation procedure's speed memory requirements. Defaults 1% number rows `tof_tibble`. normalize boolean value indicating vector local density estimates normalized values 0 1. Defaults TRUE. ... Additional optional arguments pass tof_find_knn.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"tibble single column named \".spade_density\" containing local density estimates input cell `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_spade_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate cells' local densities as done in Spanning-tree Progression Analysis of Density-normalized Events (SPADE) — tof_spade_density","text":"","code":"sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  # perform the density estimation tof_spade_density(tof_tibble = sim_data) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1              1 #>  2              1 #>  3              1 #>  4              1 #>  5              1 #>  6              1 #>  7              1 #>  8              1 #>  9              1 #> 10              1 #> # ℹ 990 more rows  # perform the density estimation using cosine distance tof_spade_density(     tof_tibble = sim_data,     distance_function = \"cosine\",     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1          0     #>  2          0.143 #>  3          0.286 #>  4          0.143 #>  5          0.286 #>  6          0.286 #>  7          0.143 #>  8          0.143 #>  9          0.429 #> 10          0     #> # ℹ 990 more rows  # perform the density estimation with a smaller search radius around # each cell tof_spade_density(     tof_tibble = sim_data,     alpha_multiplier = 2 ) #> # A tibble: 1,000 × 1 #>    .spade_density #>             <dbl> #>  1            0.7 #>  2            1   #>  3            1   #>  4            1   #>  5            0.4 #>  6            1   #>  7            1   #>  8            1   #>  9            1   #> 10            1   #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split high-dimensional cytometry data into a training and test set — tof_split_data","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"Split high-dimensional cytometry data training test set","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"tof_split_data(   feature_tibble,   split_method = c(\"k-fold\", \"bootstrap\", \"simple\"),   split_col,   simple_prop = 3/4,   num_cv_folds = 10,   num_cv_repeats = 1L,   num_bootstraps = 10,   strata = NULL,   ... )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"feature_tibble tibble row represents sample- patient- level observation, produced tof_extract_features. split_method Either string logical vector specifying perform split. string, valid options include k-fold cross validation (\"k-fold\"; default), bootstrapping (\"bootstrap\"), single binary split (\"simple\"). logical vector, contain one entry row `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). Ignored entirely `split_col` specified. split_col unquoted column name logical column `feature_tibble` indicating row included training set (TRUE) excluded validation/test set (FALSE). simple_prop numeric value 0 1 indicating proportion data used training. Defaults 3/4. Ignored split_method \"simple\". num_cv_folds integer indicating many cross-validation folds used. Defaults 10. Ignored split_method \"k-fold\". num_cv_repeats integer indicating many independent cross-validation replicates used (.e. many num_cv_fold splits performed). Defaults 1. Ignored split_method \"k-fold\". num_bootstraps integer indicating many independent bootstrap replicates used. Defaults 25. Ignored split_method \"bootstrap\". strata unquoted column name representing column feature_tibble used stratify data splitting. Defaults NULL (stratification). ... Optional additional arguments pass vfold_cv k-fold cross validation, bootstraps bootstrapping, initial_split simple splitting.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"k-fold cross validation bootstrapping, \"rset\" object; simple splitting, \"rsplit\" object. details, see rsample.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split high-dimensional cytometry data into a training and test set — tof_split_data","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 50), rep(1, times = 50)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  # split the dataset into 10 CV folds tof_split_data(     feature_tibble = feature_tibble,     split_method = \"k-fold\" ) #> #  10-fold cross-validation  #> # A tibble: 10 × 2 #>    splits          id     #>    <list>          <chr>  #>  1 <split [90/10]> Fold01 #>  2 <split [90/10]> Fold02 #>  3 <split [90/10]> Fold03 #>  4 <split [90/10]> Fold04 #>  5 <split [90/10]> Fold05 #>  6 <split [90/10]> Fold06 #>  7 <split [90/10]> Fold07 #>  8 <split [90/10]> Fold08 #>  9 <split [90/10]> Fold09 #> 10 <split [90/10]> Fold10  # split the dataset into 10 bootstrap resamplings tof_split_data(     feature_tibble = feature_tibble,     split_method = \"bootstrap\" ) #> # Bootstrap sampling  #> # A tibble: 10 × 2 #>    splits           id          #>    <list>           <chr>       #>  1 <split [100/36]> Bootstrap01 #>  2 <split [100/36]> Bootstrap02 #>  3 <split [100/35]> Bootstrap03 #>  4 <split [100/40]> Bootstrap04 #>  5 <split [100/34]> Bootstrap05 #>  6 <split [100/37]> Bootstrap06 #>  7 <split [100/36]> Bootstrap07 #>  8 <split [100/34]> Bootstrap08 #>  9 <split [100/37]> Bootstrap09 #> 10 <split [100/41]> Bootstrap10  # split the dataset into a single training/test set # stratified by the \"class\" column tof_split_data(     feature_tibble = feature_tibble,     split_method = \"simple\",     strata = class ) #> <Training/Testing/Total> #> <74/26/100>"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"Split dimensionality reduction data tidytof combines SingleCellExperiment conversion","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"tof_split_tidytof_reduced_dimensions(sce)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"sce SingleCellExperiment entry named \"tidytof_reduced_dimensions\" reducedDims slot.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"SingleCellExperiment separate entries named \"tidytof_pca\", \"tidytof_umap\", \"tidytof_tsne\" reducedDims slots (one dimensionality reduction methods tidytof native support).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_split_tidytof_reduced_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the dimensionality reduction data that tidytof combines during SingleCellExperiment conversion — tof_split_tidytof_reduced_dimensions","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"function uses training set/test set paradigm tune fit elastic net model using variety user-specified details. Tuning can performed using either simple training vs. test set split, k-fold cross-validation, bootstrapping, multiple preprocessing options available.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"tof_train_model(   split_data,   unsplit_data,   predictor_cols,   response_col = NULL,   time_col = NULL,   event_col = NULL,   model_type = c(\"linear\", \"two-class\", \"multiclass\", \"survival\"),   hyperparameter_grid = tof_create_grid(),   standardize_predictors = TRUE,   remove_zv_predictors = FALSE,   impute_missing_predictors = FALSE,   optimization_metric = \"tidytof_default\",   best_model_type = c(\"best\", \"best with sparsity\"),   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"split_data `rsplit` `rset` object rsample package containing sample-level data use modeling. easiest way generate use tof_split_data. unsplit_data tibble containing sample-level data use modeling without resampling. using resampling method advised, argument provides interface fit model without using cross-validation bootstrap resampling. Ignored split_data provided. predictor_cols Unquoted column names indicating columns data contained `split_data` used predictors elastic net model. Supports tidyselect helpers. response_col Unquoted column name indicating column data contained `split_data` used outcome \"two-class\", \"multiclass\", \"linear\" elastic net model. Must factor \"two-class\" \"multiclass\" models must numeric \"linear\" models. Ignored `model_type` \"survival\". time_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must numeric. Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". event_col Unquoted column name indicating column data contained `split_data` represents time--event outcome \"survival\" elastic net model. Must binary column - values either 0 1 (1 indicating adverse event) FALSE TRUE (TRUE indicating adverse event). Ignored `model_type` \"two-class\", \"multiclass\", \"linear\". model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparamters used model tuning. Generate grid using tof_create_grid. standardize_predictors logical value indicating numeric predictor columns standardized (centered scaled) model fitting, standard practice elastic net regularization. Defaults TRUE. remove_zv_predictors logical value indicating predictor columns near-zero variance removed model fitting using step_nzv. Defaults FALSE. impute_missing_predictors logical value indicating predictor columns missing values imputed using k-nearest neighbors model fitting (see step_impute_knn). Imputation performed using observation's 5 nearest-neighbors. Defaults FALSE. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. \"linear\" models, choices \"mse\" (mean squared error predictions; default) \"mae\" (mean absolute error predictions). \"two-class\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification; default), \"misclassification error\" (proportion misclassified observations), \"binomial_deviance\" (see deviance.glmnet), \"mse\" (mean squared error logit function), \"mae\" (mean absolute error logit function). \"multiclass\" models, choices \"roc_auc\" (area Receiver-Operating Curve classification using Hand-Till generalization ROC AUC multiclass models roc_auc; default), \"misclassification error\" (proportion misclassified observations), \"multinomial_deviance\" (see deviance.glmnet), \"mse\" \"mae\" . \"survival\" models, choices \"concordance_index\" (Harrel's C index; see deviance.glmnet) \"partial_likelihood_deviance\" (see deviance.glmnet). best_model_type Currently unused. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"`tof_model`, S3 class includes elastic net model best performance (assessed via cross-validation, bootstrapping, simple splitting depending `split_data`) across tested hyperparameter value combinations. `tof_models` store following information: model final elastic net (\"glmnet\") model, chosen selecting elastic net hyperparameters best `optimization_metric` performance validation sets resample used train model (average) recipe recipe used data preprocessing mixture optimal mixture hyperparameter (alpha) glmnet model penalty optimal penalty hyperparameter (lambda) glmnet model model_type string indicating type glmnet model fit outcome_colnames character vector representing names columns training data modeled outcome variables training_data tibble containing (preprocessed) data used train model tuning_metrics tibble containing validation set performance metrics (model predictions) resample fold model tuning. log_rank_thresholds survival models , tibble containing information relative-risk thresholds can used split training data 2 risk groups (low- high-risk) based final model's predictions. relative-risk threshold, log-rank test p-value indicator threshold gives significant separation provided. best_log_rank_threshold survival models , numeric value representing relative-risk threshold yields significant log-rank test separating training data low- high-risk groups.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_train_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train an elastic net model to predict sample-level phenomena using high-dimensional cytometry data. — tof_train_model","text":"","code":"feature_tibble <-     dplyr::tibble(         sample = as.character(1:100),         cd45 = runif(n = 100),         pstat5 = runif(n = 100),         cd34 = runif(n = 100),         outcome = (3 * cd45) + (4 * pstat5) + rnorm(100),         class =             as.factor(                 dplyr::if_else(outcome > median(outcome), \"class1\", \"class2\")             ),         multiclass =             as.factor(                 c(rep(\"class1\", 30), rep(\"class2\", 30), rep(\"class3\", 40))             ),         event = c(rep(0, times = 30), rep(1, times = 70)),         time_to_event = rnorm(n = 100, mean = 10, sd = 2)     )  split_data <- tof_split_data(feature_tibble, split_method = \"simple\")  # train a regression model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = outcome,     model_type = \"linear\" ) #> A linear `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 (Intercept)       3.51  #> 2 pstat5            1.28  #> 3 cd45              0.836 #> 4 cd34              0.123  # train a logistic regression classifier tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     response_col = class,     model_type = \"two-class\" ) #> A two-class `tof_model` with a mixture parameter (alpha) of 1 and a penalty parameter (lambda) of 3.162e-03  #> # A tibble: 4 × 2 #>   feature     coefficient #>   <chr>             <dbl> #> 1 pstat5          -2.31   #> 2 cd45            -1.19   #> 3 cd34            -0.275  #> 4 (Intercept)     -0.0137  # train a cox regression survival model tof_train_model(     split_data = split_data,     predictor_cols = c(cd45, pstat5, cd34),     time_col = time_to_event,     event_col = event,     model_type = \"survival\" ) #> A survival `tof_model` with a mixture parameter (alpha) of 0 and a penalty parameter (lambda) of 1e+00  #> # A tibble: 3 × 2 #>   feature coefficient #>   <chr>         <dbl> #> 1 pstat5       0.0633 #> 2 cd45        -0.0608 #> 3 cd34         0.0493"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raw high-dimensional cytometry data. — tof_transform","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"function transforms `tof_tbl` raw ion counts, reads, fluorescence intensity units directly measured cytometer using user-provided function.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"tof_transform(   tof_tibble = NULL,   channel_cols = where(tof_is_numeric),   transform_fun )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"tof_tibble `tof_tbl` `tibble`. channel_cols Unquoted column names representing columns contain single-cell protein measurements. Supports tidyselect helpers. nothing specified, default transform numeric columns. transform_fun vectorized function apply protein value variance stabilization.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"`tof_tbl` identical dimensions input `tof_tibble`, columns specified channel_cols transformed using `transform_fun`.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform raw high-dimensional cytometry data. — tof_transform","text":"","code":"# read in an example .fcs file from tidytof's internal datasets input_file <- dir(tidytof_example_data(\"aml\"), full.names = TRUE)[[1]] tof_tibble <- tof_read_data(input_file)  # preprocess all numeric columns with default behavior # arcsinh transformation with a cofactor of 5 tof_preprocess(tof_tibble) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1 15.3          1.88       5.33         0.263         1.70           5.85 #>  2 14.9          2.05       5.83         0.731         1.67           5.71 #>  3 15.2          1.88       5.70         1.13          0.861          5.54 #>  4 13.7          1.88       5.45         0.129         1.06           5.46 #>  5 15.2          1.99       5.73         0.721         1.41           5.55 #>  6 14.4          2.05       5.27         0.760         0.708          5.52 #>  7 13.9          1.88       5.31         0.645         0.771          5.42 #>  8 14.2          1.99       5.42         1.09          1.58           5.64 #>  9 15.6          2.05       6.03         0.586         1.37           5.83 #> 10  9.75         1.88       5.38         0.177         1.73           5.78 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …  # preprocess all numeric columns using the log base 10 tranformation tof_preprocess(tof_tibble, transform_fun = log10) #> # A tibble: 100 × 59 #>     Time Event_length `CD45|Y89` `empty|Pd102` `empty|Pd104` `empty|Pd105` #>    <dbl>        <dbl>      <dbl>         <dbl>         <dbl>         <dbl> #>  1  7.04         1.20       2.71        0.125          1.12           2.94 #>  2  6.85         1.28       2.93        0.601          1.11           2.88 #>  3  6.99         1.20       2.87        0.843          0.686          2.81 #>  4  6.36         1.20       2.77       -0.189          0.800          2.77 #>  5  6.98         1.26       2.89        0.594          0.984          2.81 #>  6  6.65         1.28       2.69        0.621          0.584          2.80 #>  7  6.44         1.20       2.70        0.539          0.628          2.75 #>  8  6.57         1.26       2.75        0.821          1.07           2.85 #>  9  7.18         1.28       3.02        0.491          0.964          2.93 #> 10  4.63         1.20       2.74       -0.0515         1.13           2.91 #> # ℹ 90 more rows #> # ℹ 53 more variables: `empty|Pd106` <dbl>, `empty|Pd108` <dbl>, #> #   `empty|Pd110` <dbl>, `CD61|In113` <dbl>, `CD99|In115` <dbl>, #> #   `empty|I127` <dbl>, `CD45RA|La139` <dbl>, `CD93|Ce140` <dbl>, #> #   `CD3_CD19|Pr141` <dbl>, `CCR2|Nd142` <dbl>, `CD117|Nd143` <dbl>, #> #   `CD123|Nd144` <dbl>, `CD64|Nd145` <dbl>, `CD90|Nd146` <dbl>, #> #   `CD38|Sm147` <dbl>, `CD34|Nd148` <dbl>, `CEBPa|Sm149` <dbl>, …"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"Tune elastic net model's hyperparameters multiple resamples","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"","code":"tof_tune_glmnet(   split_data,   prepped_recipe,   hyperparameter_grid,   model_type,   outcome_cols,   optimization_metric = \"tidytof_default\",   num_cores = 1 )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"split_data `rsplit` `rset` object rsample package. easiest way generate use tof_split_data. Alternatively, unsplit tbl_df can provided, though recommended. prepped_recipe Either single recipe object (`split_data` `rsplit` object `tbl_df`) list recipes (`split_data` `rset` object) entry list corresponds resample `split_data`. hyperparameter_grid hyperparameter grid indicating values elastic net penalty (lambda) elastic net mixture (alpha) hyperparameters used model tuning. Generate grid using tof_create_grid. model_type string indicating kind elastic net model build. continuous response predicted, use \"linear\" linear regression; categorical response 2 classes predicted, use \"two-class\" logistic regression; categorical response 2 levels predicted, use \"multiclass\" multinomial regression; time--event outcome predicted, use \"survival\" Cox regression. outcome_cols Unquoted column name(s) indicating column(s) data contained `split_data` used outcome elastic net model. survival models, two columns selected; others, one column selected. optimization_metric string indicating optimization metric used hyperparameter selection model tuning. Valid values depend model_type. num_cores Integer indicating many cores used parallel processing fitting multiple models. Defaults 1. Overhead separate models across multiple cores can high, significant speedup unlikely observed unless many large models fit.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_tune_glmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune an elastic net model's hyperparameters over multiple resamples — tof_tune_glmnet","text":"tibble containing summary model's performance resampling iteration across hyperparameter combinations. contain 3 columns: \"splits\" (list-col containing resampling iteration's `rsplit` object), \"id\" (name resampling iteration), \"performance_metrics\" (list-col containing performance metrics resampling iteration. row \"performance_metrics\" tibble columns \"mixture\" \"penalty\" several additional columns containing performance metrics model mixture/penalty combination). See tof_fit_split additional details.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"tof_upsample(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   ...,   augment = TRUE,   method = c(\"distance\", \"neighbor\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. ... Additional arguments pass `tof_upsample_*` function family member corresponding chosen method. augment boolean value indicating output column-bind cluster ids cell new column `tof_tibble` (TRUE, default) single-column tibble including cluster ids returned (FALSE). method string indicating clustering methods used. Valid values include \"distance\" (default) \"neighbor\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"`tof_tbl` `tibble` augment = FALSE, single column encoding upsampled cluster ids cell `tof_tibble`. augment = TRUE, ncol(tof_tibble) + 1 columns: (unaltered) columns `tof_tibble` plus additional column encoding cluster ids.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     ) reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using distance to cluster centroids tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"distance\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38   cd34   cd19 .upsample_cluster #>     <dbl>   <dbl>  <dbl>  <dbl> <chr>             #>  1  1.88  -0.666  -0.879 -1.05  b                 #>  2  0.717 -1.30    0.351 -0.598 b                 #>  3 -0.175  0.328   1.06  -0.521 a                 #>  4 -0.600  0.0668 -0.331 -0.147 a                 #>  5  0.452  0.359  -3.45  -0.699 a                 #>  6  0.585 -0.176   2.05  -0.112 a                 #>  7  0.701  1.20    1.74   0.252 a                 #>  8 -1.77  -2.10   -0.554 -0.625 a                 #>  9  1.99  -0.590   1.45  -0.588 b                 #> 10  0.807  0.0548  1.46   0.435 a                 #> # ℹ 990 more rows  # upsample using distance to nearest neighbor tof_upsample(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     method = \"neighbor\" ) #> # A tibble: 1,000 × 5 #>      cd45    cd38   cd34   cd19 .upsample_cluster #>     <dbl>   <dbl>  <dbl>  <dbl> <chr>             #>  1  1.88  -0.666  -0.879 -1.05  b                 #>  2  0.717 -1.30    0.351 -0.598 a                 #>  3 -0.175  0.328   1.06  -0.521 b                 #>  4 -0.600  0.0668 -0.331 -0.147 b                 #>  5  0.452  0.359  -3.45  -0.699 a                 #>  6  0.585 -0.176   2.05  -0.112 b                 #>  7  0.701  1.20    1.74   0.252 b                 #>  8 -1.77  -2.10   -0.554 -0.625 b                 #>  9  1.99  -0.590   1.45  -0.588 a                 #> 10  0.807  0.0548  1.46   0.435 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"function performs distance-based upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). calculating distance (either mahalanobis, cosine, pearson) cell `tof_tibble` centroid cluster `reference_tibble`, sorting cells cluster corresponding closest centroid.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"tof_upsample_distance(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   parallel_cols,   distance_function = c(\"mahalanobis\", \"cosine\", \"pearson\"),   num_cores = 1L,   return_distances = FALSE )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. parallel_cols Optional. Unquoted column names indicating columns `tof_tibble` use breaking data order parallelize upsampling using `foreach` `doParallel` backend. Supports tidyselect helpers. distance_function string indicating distance function used perform upsampling. Options \"mahalanobis\" (default), \"cosine\", \"pearson\". num_cores integer indicating number CPU cores used parallelize classification. Defaults 1 (single core). return_distances boolean value indicating whether returned result include one column, cluster ids corresponding row `tof_tibble` (return_distances = FALSE, default), returned result include additional columns representing distance row `tof_tibble` reference subpopulation centroids (return_distances = TRUE).","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"`return_distances = FALSE`, tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned. `return_distances = TRUE`, tibble `nrow(tof_tibble)` rows num_clusters + 1 columns, num_clusters number clusters `reference_tibble`. row represents cell `tof_tibble`, num_clusters columns represent distance cell reference subpopulations' cluster centroids. final column represents cluster id reference subpopulation minimum distance cell represented row.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the closest cluster in a reference dataset — tof_upsample_distance","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using mahalanobis distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 b                 #>  4 b                 #>  5 b                 #>  6 b                 #>  7 b                 #>  8 b                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_distance(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 a                 #>  3 a                 #>  4 a                 #>  5 a                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 a                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"function performs upsampling CyTOF data sorting single cells (passed function `tof_tibble`) phenotypically similar cell subpopulation reference dataset (passed function `reference_tibble`). finding cell `tof_tibble`'s nearest neighbor `reference_tibble` assigning cluster nearest neighbor belongs. nearest neighbor calculation can performed either euclidean cosine distance.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"tof_upsample_neighbor(   tof_tibble,   reference_tibble,   reference_cluster_col,   upsample_cols = where(tof_is_numeric),   num_neighbors = 1L,   distance_function = c(\"euclidean\", \"cosine\", \"l2\", \"ip\") )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tof_tibble `tibble` `tof_tbl` containing cells upsampled nearest reference subpopulation. reference_tibble `tibble` `tof_tibble` containing cells already clustered manually gated subpopulations. reference_cluster_col unquoted column name indicating column `reference_tibble` contains subpopulation label (cluster id) cell `reference_tibble`. upsample_cols Unquoted column names indicating columns `tof_tibble` use computing distances used upsampling. Defaults numeric columns `tof_tibble`. Supports tidyselect helpers. num_neighbors integer indicating many neighbors used nearest neighbor calculation. Clusters assigned based majority vote. distance_function string indicating distance function used perform upsampling. Options \"euclidean\" (default) \"cosine\".","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"tibble one column named `.upsample_cluster`, character vector length `nrow(tof_tibble)` indicating id reference cluster cell (.e. row) `tof_tibble` assigned.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_upsample_neighbor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upsample cells into the cluster of their nearest neighbor a reference dataset — tof_upsample_neighbor","text":"","code":"# simulate single-cell data (and reference data with clusters to upsample # into sim_data <-     dplyr::tibble(         cd45 = rnorm(n = 1000),         cd38 = rnorm(n = 1000),         cd34 = rnorm(n = 1000),         cd19 = rnorm(n = 1000)     )  reference_data <-     dplyr::tibble(         cd45 = rnorm(n = 200),         cd38 = rnorm(n = 200),         cd34 = rnorm(n = 200),         cd19 = rnorm(n = 200),         cluster_id = c(rep(\"a\", times = 100), rep(\"b\", times = 100))     )  # upsample using euclidean distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 a                 #>  2 b                 #>  3 b                 #>  4 a                 #>  5 a                 #>  6 a                 #>  7 b                 #>  8 a                 #>  9 b                 #> 10 b                 #> # ℹ 990 more rows  # upsample using cosine distance tof_upsample_neighbor(     tof_tibble = sim_data,     reference_tibble = reference_data,     reference_cluster_col = cluster_id,     distance_function = \"cosine\" ) #> # A tibble: 1,000 × 1 #>    .upsample_cluster #>    <chr>             #>  1 b                 #>  2 b                 #>  3 b                 #>  4 b                 #>  5 a                 #>  6 a                 #>  7 a                 #>  8 b                 #>  9 a                 #> 10 b                 #> # ℹ 990 more rows"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .csv files from a tof_tbl — tof_write_csv","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function takes given `tof_tbl` writes single-cell data contains .csv files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .csv files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"","code":"tof_write_csv(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .csv file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .csv files from a tof_tbl — tof_write_csv","text":"function return anything. Instead, side-effect saving .csv files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"Write data (form `tof_tbl`) either .csv .fcs file storage.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"tof_write_data(   tof_tibble = NULL,   group_cols,   out_path = NULL,   format = c(\"fcs\", \"csv\"),   sep = \"_\",   file_name )"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"tof_tibble `tof_tbl` `tibble`. group_cols Optional. Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults grouping (cells written single file). out_path Path directory output files saved. format format files written. Currently supports .csv .fcs files sep Delimiter used values `group_cols` create output .csv/.fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"function explicitly return values. Instead, writes .csv /.fcs files specified `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write high-dimensional cytometry data to a file or to a directory of files — tof_write_data","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function takes given `tof_tbl` writes single-cell data contains .fcs files within directory located `out_path`. `group_cols` argument specifies rows `tof_tbl` (cell) broken separate .fcs files","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"tof_write_fcs(tof_tibble, group_cols, out_path, sep = \"_\", file_name)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"tof_tibble `tof_tbl` `tibble`. group_cols Unquoted names columns `tof_tibble` used group cells separate files. Supports tidyselect helpers. Defaults NULL (cells written single file). out_path system path indicating directory output .csv files saved. directory exist, created. sep Delimiter used values `group_cols` create output .fcs file names. Defaults \"_\". file_name `group_cols` specified, name (without extension) used saved .csv file.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"function return anything. Instead, side-effect saving .fcs files `out_path`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidytof/reference/tof_write_fcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a series of .fcs files from a tof_tbl — tof_write_fcs","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables with a function — where","title":"Select variables with a function — where","text":"copy , selection helper selects variables predicate function returns TRUE. See  language details tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables with a function — where","text":"","code":"where(fn)"},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables with a function — where","text":"fn function returns TRUE FALSE (technically, predicate function). Can also purrr-like formula.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables with a function — where","text":"predicate can used select columns data.frame.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select variables with a function — where","text":"help file replicated verbatim tidyselect-package.","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select variables with a function — where","text":"Lionel Henry Hadley Wickham (2021). tidyselect: Select Set Strings. R package version 1.1.1. https://CRAN.R-project.org/package=tidyselect","code":""},{"path":"https://keyes-timothy.github.io/tidytof/reference/where.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables with a function — where","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0995","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.5","title":"tidytof 0.99.5","text":"NEW FEATURES Update dependencies. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0994","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.4","title":"tidytof 0.99.4","text":"NEW FEATURES Update tests. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0993","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.3","title":"tidytof 0.99.3","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Update docs. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0992-1","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.2","title":"tidytof 0.99.2","text":"NEW FEATURES Removed unnecessary files caused build fail. SIGNIFICANT USER-VISIBLE CHANGES None BUG FIXES None","code":""},{"path":"https://keyes-timothy.github.io/tidytof/news/index.html","id":"tidytof-0990","dir":"Changelog","previous_headings":"","what":"tidytof 0.99.0","title":"tidytof 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor BUG FIXES None","code":""}]
